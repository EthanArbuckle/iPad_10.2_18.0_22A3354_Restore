void sub_1BE0B1518()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
}

void sub_1BE0B1520()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = v0;
}

void sub_1BE0B1634()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_1BE0B166C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1BE0B1674()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1BE0B1684()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1BE0B1690()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  result = sub_1BE1B2EE8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    result = sub_1BE1B2EE8();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      result = sub_1BE1B2EE8();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedTypeWitness();
        result = sub_1BE1B2EE8();
        if (v4 <= 0x3F)
        {
          swift_getAssociatedTypeWitness();
          swift_getAssociatedConformanceWitness();
          swift_getAssociatedTypeWitness();
          result = sub_1BE1B2EE8();
          if (v5 <= 0x3F)
          {
            swift_getAssociatedTypeWitness();
            swift_getAssociatedConformanceWitness();
            swift_getAssociatedTypeWitness();
            result = sub_1BE1B2EE8();
            if (v6 <= 0x3F)
            {
              swift_getAssociatedTypeWitness();
              swift_getAssociatedConformanceWitness();
              swift_getAssociatedTypeWitness();
              result = sub_1BE1B2EE8();
              if (v7 <= 0x3F)
              {
                swift_getAssociatedTypeWitness();
                swift_getAssociatedConformanceWitness();
                swift_getAssociatedTypeWitness();
                result = sub_1BE1B2EE8();
                if (v8 <= 0x3F)
                {
                  swift_initStructMetadata();
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1BE0B1ADC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  size_t v6;
  size_t v7;
  uint64_t v8;
  int v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  int v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  size_t v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  size_t v25;
  size_t v26;
  uint64_t v27;
  int v28;
  int v29;
  size_t v30;
  size_t v31;
  uint64_t v32;
  int v33;
  int v34;
  size_t v35;
  size_t v36;
  int v37;
  uint64_t v38;
  size_t v39;
  uint64_t v40;
  size_t v41;
  uint64_t v42;
  size_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  void *v71;
  const void *v72;
  void *v73;
  const void *v74;
  size_t __n;
  size_t v77;
  uint64_t v78;
  size_t v79;
  uint64_t v80;
  size_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t AssociatedTypeWitness;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  size_t v99;
  int v100;
  size_t v101;
  int v102;
  size_t v103;
  int v104;
  size_t v105;
  size_t v107;
  size_t v108;
  size_t v109;
  size_t v110;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v2 + 84))
    v3 = *(_QWORD *)(v2 + 64);
  else
    v3 = *(_QWORD *)(v2 + 64) + 1;
  v105 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v94 = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(v94 - 8);
  v104 = *(_DWORD *)(v4 + 80);
  v5 = *(_DWORD *)(v4 + 84);
  v93 = v4;
  v6 = *(_QWORD *)(v4 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v107 = v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v96 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v96 - 8);
  v102 = *(_DWORD *)(v8 + 80);
  v9 = *(_DWORD *)(v8 + 84);
  v95 = v8;
  v10 = *(_QWORD *)(v8 + 64);
  if (v9)
    v11 = v10;
  else
    v11 = v10 + 1;
  v108 = v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v83 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v83 - 8);
  v100 = *(_DWORD *)(v12 + 80);
  v13 = *(_DWORD *)(v12 + 84);
  v97 = v12;
  v14 = *(_QWORD *)(v12 + 64);
  if (v13)
    v15 = v14;
  else
    v15 = v14 + 1;
  v109 = v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v98 = *(_DWORD *)(v17 + 80);
  v18 = *(_DWORD *)(v17 + 84);
  v84 = v17;
  v85 = v16;
  v19 = *(_QWORD *)(v17 + 64);
  if (v18)
    v20 = v19;
  else
    v20 = v19 + 1;
  v110 = v20;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v24 = *(_DWORD *)(v22 + 80);
  v23 = *(_DWORD *)(v22 + 84);
  v86 = v22;
  v87 = v21;
  v25 = *(_QWORD *)(v22 + 64);
  if (v23)
    v26 = v25;
  else
    v26 = v25 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v90 = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(v90 - 8);
  v29 = *(_DWORD *)(v27 + 80);
  v28 = *(_DWORD *)(v27 + 84);
  v88 = v27;
  v30 = *(_QWORD *)(v27 + 64);
  if (v28)
    v31 = v30;
  else
    v31 = v30 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v91 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v91 - 8);
  v33 = *(_DWORD *)(v32 + 80);
  v34 = *(_DWORD *)(v32 + 84);
  v89 = v32;
  v35 = *(_QWORD *)(v32 + 64);
  if (v34)
    v36 = v35;
  else
    v36 = v35 + 1;
  v37 = v104 | *(_DWORD *)(v2 + 80) | v102 | v100 | v98 | v24 | v29 | v33;
  v38 = (v104 | *(_BYTE *)(v2 + 80) | v102 | v100 | v98 | v24 | v29 | v33);
  if (v38 > 7)
    goto LABEL_33;
  v39 = v26;
  v40 = v2;
  v41 = v105 + v104;
  v42 = v102;
  v43 = v107 + v102;
  v44 = v100;
  v45 = v98;
  v46 = v37 & 0x100000;
  if (v36
     + ((v31
       + v33
       + ((v39
         + v29
         + ((v110
           + v24
           + ((v109
             + v98
             + ((v108
               + v100
               + ((v43 + (v41 & ~(unint64_t)v104)) & ~(unint64_t)v102)) & ~(unint64_t)v100)) & ~(unint64_t)v98)) & ~(unint64_t)v24)) & ~(unint64_t)v29)) & ~(unint64_t)v33) <= 0x18
    && v46 == 0)
  {
    v77 = v108 + v100;
    v78 = v24;
    v79 = v109 + v98;
    v80 = v29;
    v81 = v110 + v24;
    v82 = v33;
    v99 = v39 + v29;
    v101 = v31 + v33;
    v103 = v39;
    __n = v36;
    v48 = ~(unint64_t)v104;
    v49 = v40;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48))(a2, 1, AssociatedTypeWitness))
    {
      v50 = a1;
      memcpy(a1, a2, v105);
    }
    else
    {
      v53 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v49 + 16);
      v54 = v49;
      v50 = a1;
      v53(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v54 + 56))(a1, 0, 1, AssociatedTypeWitness);
    }
    v55 = ~v42;
    v56 = (void *)(((unint64_t)v50 + v41) & v48);
    v57 = (const void *)(((unint64_t)a2 + v41) & v48);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v93 + 48))(v57, 1, v94))
    {
      memcpy(v56, v57, v107);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v93 + 16))(v56, v57, v94);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v56, 0, 1, v94);
    }
    v58 = ~v44;
    v59 = (void *)(((unint64_t)v56 + v43) & v55);
    v60 = (const void *)(((unint64_t)v57 + v43) & v55);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v95 + 48))(v60, 1, v96))
    {
      memcpy(v59, v60, v108);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v95 + 16))(v59, v60, v96);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v59, 0, 1, v96);
    }
    v61 = ~v45;
    v62 = (void *)(((unint64_t)v59 + v77) & v58);
    v63 = (const void *)(((unint64_t)v60 + v77) & v58);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v97 + 48))(v63, 1, v83))
    {
      memcpy(v62, v63, v109);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v97 + 16))(v62, v63, v83);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v62, 0, 1, v83);
    }
    v64 = ~v78;
    v65 = (void *)(((unint64_t)v62 + v79) & v61);
    v66 = (const void *)(((unint64_t)v63 + v79) & v61);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48))(v66, 1, v85))
    {
      memcpy(v65, v66, v110);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v84 + 16))(v65, v66, v85);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v65, 0, 1, v85);
    }
    v67 = ~v80;
    v68 = (void *)(((unint64_t)v65 + v81) & v64);
    v69 = (const void *)(((unint64_t)v66 + v81) & v64);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v86 + 48))(v69, 1, v87))
    {
      memcpy(v68, v69, v103);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v86 + 16))(v68, v69, v87);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v68, 0, 1, v87);
    }
    v70 = ~v82;
    v71 = (void *)(((unint64_t)v68 + v99) & v67);
    v72 = (const void *)(((unint64_t)v69 + v99) & v67);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v88 + 48))(v72, 1, v90))
    {
      memcpy(v71, v72, v31);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 16))(v71, v72, v90);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v71, 0, 1, v90);
    }
    v73 = (void *)(((unint64_t)v71 + v101) & v70);
    v74 = (const void *)(((unint64_t)v72 + v101) & v70);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v89 + 48))(v74, 1, v91))
    {
      memcpy(v73, v74, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v89 + 16))(v73, v74, v91);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v73, 0, 1, v91);
    }
    return a1;
  }
  else
  {
LABEL_33:
    v51 = *a2;
    *a1 = *a2;
    v52 = v51 + ((v38 + 16) & ~v38);
    swift_retain();
  }
  return (uint64_t *)v52;
}

uint64_t sub_1BE0B23C4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = v5 + a1;
  if (!v4)
    ++v8;
  v9 = (v8 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = *(_DWORD *)(v7 + 84);
  v11 = *(_QWORD *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v11 + v9;
  if (!v10)
    ++v14;
  v15 = (v14 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15, v12);
  v16 = *(_DWORD *)(v13 + 84);
  v17 = *(_QWORD *)(v13 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = v17 + v15;
  if (!v16)
    ++v20;
  v21 = (v20 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v18))
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v21, v18);
  v22 = *(_DWORD *)(v19 + 84);
  v23 = *(_QWORD *)(v19 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = v23 + v21;
  if (!v22)
    ++v26;
  v27 = (v26 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v24))
    (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v27, v24);
  v28 = *(_DWORD *)(v25 + 84);
  v29 = *(_QWORD *)(v25 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v30 = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = v29 + v27;
  if (!v28)
    ++v32;
  v33 = (v32 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1, v30))
    (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v33, v30);
  v34 = *(_DWORD *)(v31 + 84);
  v35 = *(_QWORD *)(v31 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v36 = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = v35 + v33;
  if (!v34)
    ++v38;
  v39 = (v38 + *(unsigned __int8 *)(v37 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v36))
    (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v39, v36);
  v40 = *(_DWORD *)(v37 + 84);
  v41 = *(_QWORD *)(v37 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v42 = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = v41 + v39;
  if (!v40)
    ++v44;
  v45 = (v44 + *(unsigned __int8 *)(v43 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v43 + 48))(v45, 1, v42);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v43 + 8))(v45, v42);
  return result;
}

void *sub_1BE0B2994(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  size_t v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  int v33;
  size_t v34;
  size_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  int v42;
  size_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  size_t v52;
  size_t v53;
  size_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  int v60;
  size_t v61;
  size_t v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  size_t v69;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v14 = (const void *)(((unint64_t)a2 + v9 + v12) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
  {
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)(((unint64_t)v13 + v18 + v21) & ~v21);
  v23 = (const void *)(((unint64_t)v14 + v18 + v21) & ~v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v23, 1, v19))
  {
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
    if (v24)
      v26 = v25;
    else
      v26 = v25 + 1;
    memcpy(v22, v23, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v22, v23, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
  }
  if (v24)
    v27 = v25;
  else
    v27 = v25 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v28 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (void *)(((unint64_t)v22 + v27 + v30) & ~v30);
  v32 = (const void *)(((unint64_t)v23 + v27 + v30) & ~v30);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v32, 1, v28))
  {
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
    if (v33)
      v35 = v34;
    else
      v35 = v34 + 1;
    memcpy(v31, v32, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(v31, v32, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v28);
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
  }
  if (v33)
    v36 = v34;
  else
    v36 = v34 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v37 = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned __int8 *)(v38 + 80);
  v40 = (void *)(((unint64_t)v31 + v36 + v39) & ~v39);
  v41 = (const void *)(((unint64_t)v32 + v36 + v39) & ~v39);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v41, 1, v37))
  {
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
    if (v42)
      v44 = v43;
    else
      v44 = v43 + 1;
    memcpy(v40, v41, v44);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(v40, v41, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
  }
  if (v42)
    v45 = v43;
  else
    v45 = v43 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v46 = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (void *)(((unint64_t)v40 + v45 + v48) & ~v48);
  v50 = (const void *)(((unint64_t)v41 + v45 + v48) & ~v48);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v46))
  {
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
    if (v51)
      v53 = v52;
    else
      v53 = v52 + 1;
    memcpy(v49, v50, v53);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v49, v50, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
  }
  if (v51)
    v54 = v52;
  else
    v54 = v52 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v55 = swift_getAssociatedTypeWitness();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(unsigned __int8 *)(v56 + 80);
  v58 = (void *)(((unint64_t)v49 + v54 + v57) & ~v57);
  v59 = (const void *)(((unint64_t)v50 + v54 + v57) & ~v57);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v59, 1, v55))
  {
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
    if (v60)
      v62 = v61;
    else
      v62 = v61 + 1;
    memcpy(v58, v59, v62);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v58, v59, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v55);
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
  }
  if (v60)
    v63 = v61;
  else
    v63 = v61 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v64 = swift_getAssociatedTypeWitness();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(unsigned __int8 *)(v65 + 80);
  v67 = (void *)(((unint64_t)v58 + v63 + v66) & ~v66);
  v68 = (const void *)(((unint64_t)v59 + v63 + v66) & ~v66);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v68, 1, v64))
  {
    if (*(_DWORD *)(v65 + 84))
      v69 = *(_QWORD *)(v65 + 64);
    else
      v69 = *(_QWORD *)(v65 + 64) + 1;
    memcpy(v67, v68, v69);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 16))(v67, v68, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v64);
  }
  return a1;
}

void *sub_1BE0B3170(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  size_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)(void *, uint64_t, uint64_t);
  int v77;
  int v78;
  size_t v79;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v14, v15, v11);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_22:
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = *(_QWORD *)(v12 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)(((unint64_t)v14 + v20 + v23) & ~v23);
  v25 = (void *)(((unint64_t)v15 + v20 + v23) & ~v23);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v27 = v26(v24, 1, v21);
  v28 = v26(v25, 1, v21);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v24, v25, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v21);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v24, v25, v21);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v29 = *(_QWORD *)(v22 + 64);
  else
    v29 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v24, v25, v29);
LABEL_34:
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v31 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = (void *)(((unint64_t)v24 + v30 + v33) & ~v33);
  v35 = (void *)(((unint64_t)v25 + v30 + v33) & ~v33);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  v37 = v36(v34, 1, v31);
  v38 = v36(v35, 1, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v34, v35, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
      goto LABEL_46;
    }
  }
  else
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v34, v35, v31);
      goto LABEL_46;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v34, v31);
  }
  if (*(_DWORD *)(v32 + 84))
    v39 = *(_QWORD *)(v32 + 64);
  else
    v39 = *(_QWORD *)(v32 + 64) + 1;
  memcpy(v34, v35, v39);
LABEL_46:
  if (*(_DWORD *)(v32 + 84))
    v40 = *(_QWORD *)(v32 + 64);
  else
    v40 = *(_QWORD *)(v32 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (void *)(((unint64_t)v34 + v40 + v43) & ~v43);
  v45 = (void *)(((unint64_t)v35 + v40 + v43) & ~v43);
  v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  v47 = v46(v44, 1, v41);
  v48 = v46(v45, 1, v41);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 16))(v44, v45, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
      goto LABEL_58;
    }
  }
  else
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 24))(v44, v45, v41);
      goto LABEL_58;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v44, v41);
  }
  if (*(_DWORD *)(v42 + 84))
    v49 = *(_QWORD *)(v42 + 64);
  else
    v49 = *(_QWORD *)(v42 + 64) + 1;
  memcpy(v44, v45, v49);
LABEL_58:
  if (*(_DWORD *)(v42 + 84))
    v50 = *(_QWORD *)(v42 + 64);
  else
    v50 = *(_QWORD *)(v42 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v51 = swift_getAssociatedTypeWitness();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned __int8 *)(v52 + 80);
  v54 = (void *)(((unint64_t)v44 + v50 + v53) & ~v53);
  v55 = (void *)(((unint64_t)v45 + v50 + v53) & ~v53);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  v57 = v56(v54, 1, v51);
  v58 = v56(v55, 1, v51);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 16))(v54, v55, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      goto LABEL_70;
    }
  }
  else
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 24))(v54, v55, v51);
      goto LABEL_70;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v54, v51);
  }
  if (*(_DWORD *)(v52 + 84))
    v59 = *(_QWORD *)(v52 + 64);
  else
    v59 = *(_QWORD *)(v52 + 64) + 1;
  memcpy(v54, v55, v59);
LABEL_70:
  if (*(_DWORD *)(v52 + 84))
    v60 = *(_QWORD *)(v52 + 64);
  else
    v60 = *(_QWORD *)(v52 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v61 = swift_getAssociatedTypeWitness();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v64 = (void *)(((unint64_t)v54 + v60 + v63) & ~v63);
  v65 = (void *)(((unint64_t)v55 + v60 + v63) & ~v63);
  v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  v67 = v66(v64, 1, v61);
  v68 = v66(v65, 1, v61);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 16))(v64, v65, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v61);
      goto LABEL_82;
    }
  }
  else
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 24))(v64, v65, v61);
      goto LABEL_82;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v64, v61);
  }
  if (*(_DWORD *)(v62 + 84))
    v69 = *(_QWORD *)(v62 + 64);
  else
    v69 = *(_QWORD *)(v62 + 64) + 1;
  memcpy(v64, v65, v69);
LABEL_82:
  if (*(_DWORD *)(v62 + 84))
    v70 = *(_QWORD *)(v62 + 64);
  else
    v70 = *(_QWORD *)(v62 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v71 = swift_getAssociatedTypeWitness();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned __int8 *)(v72 + 80);
  v74 = (void *)(((unint64_t)v64 + v70 + v73) & ~v73);
  v75 = (void *)(((unint64_t)v65 + v70 + v73) & ~v73);
  v76 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
  v77 = v76(v74, 1, v71);
  v78 = v76(v75, 1, v71);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 16))(v74, v75, v71);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v71);
      return a1;
    }
  }
  else
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 24))(v74, v75, v71);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v72 + 8))(v74, v71);
  }
  if (*(_DWORD *)(v72 + 84))
    v79 = *(_QWORD *)(v72 + 64);
  else
    v79 = *(_QWORD *)(v72 + 64) + 1;
  memcpy(v74, v75, v79);
  return a1;
}

void *sub_1BE0B3B74(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  size_t v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  int v33;
  size_t v34;
  size_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  int v42;
  size_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  size_t v52;
  size_t v53;
  size_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  int v60;
  size_t v61;
  size_t v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  size_t v69;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v14 = (const void *)(((unint64_t)a2 + v9 + v12) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
  {
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)(((unint64_t)v13 + v18 + v21) & ~v21);
  v23 = (const void *)(((unint64_t)v14 + v18 + v21) & ~v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v23, 1, v19))
  {
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
    if (v24)
      v26 = v25;
    else
      v26 = v25 + 1;
    memcpy(v22, v23, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v22, v23, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
  }
  if (v24)
    v27 = v25;
  else
    v27 = v25 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v28 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (void *)(((unint64_t)v22 + v27 + v30) & ~v30);
  v32 = (const void *)(((unint64_t)v23 + v27 + v30) & ~v30);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v32, 1, v28))
  {
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
    if (v33)
      v35 = v34;
    else
      v35 = v34 + 1;
    memcpy(v31, v32, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v31, v32, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v28);
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
  }
  if (v33)
    v36 = v34;
  else
    v36 = v34 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v37 = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned __int8 *)(v38 + 80);
  v40 = (void *)(((unint64_t)v31 + v36 + v39) & ~v39);
  v41 = (const void *)(((unint64_t)v32 + v36 + v39) & ~v39);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v41, 1, v37))
  {
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
    if (v42)
      v44 = v43;
    else
      v44 = v43 + 1;
    memcpy(v40, v41, v44);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v40, v41, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
  }
  if (v42)
    v45 = v43;
  else
    v45 = v43 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v46 = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (void *)(((unint64_t)v40 + v45 + v48) & ~v48);
  v50 = (const void *)(((unint64_t)v41 + v45 + v48) & ~v48);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v46))
  {
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
    if (v51)
      v53 = v52;
    else
      v53 = v52 + 1;
    memcpy(v49, v50, v53);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v49, v50, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
  }
  if (v51)
    v54 = v52;
  else
    v54 = v52 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v55 = swift_getAssociatedTypeWitness();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(unsigned __int8 *)(v56 + 80);
  v58 = (void *)(((unint64_t)v49 + v54 + v57) & ~v57);
  v59 = (const void *)(((unint64_t)v50 + v54 + v57) & ~v57);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v59, 1, v55))
  {
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
    if (v60)
      v62 = v61;
    else
      v62 = v61 + 1;
    memcpy(v58, v59, v62);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v58, v59, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v55);
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
  }
  if (v60)
    v63 = v61;
  else
    v63 = v61 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v64 = swift_getAssociatedTypeWitness();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(unsigned __int8 *)(v65 + 80);
  v67 = (void *)(((unint64_t)v58 + v63 + v66) & ~v66);
  v68 = (const void *)(((unint64_t)v59 + v63 + v66) & ~v66);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v68, 1, v64))
  {
    if (*(_DWORD *)(v65 + 84))
      v69 = *(_QWORD *)(v65 + 64);
    else
      v69 = *(_QWORD *)(v65 + 64) + 1;
    memcpy(v67, v68, v69);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v67, v68, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v64);
  }
  return a1;
}

void *sub_1BE0B4350(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  size_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)(void *, uint64_t, uint64_t);
  int v77;
  int v78;
  size_t v79;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v14, v15, v11);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_22:
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = *(_QWORD *)(v12 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)(((unint64_t)v14 + v20 + v23) & ~v23);
  v25 = (void *)(((unint64_t)v15 + v20 + v23) & ~v23);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v27 = v26(v24, 1, v21);
  v28 = v26(v25, 1, v21);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v24, v25, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v21);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v24, v25, v21);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v29 = *(_QWORD *)(v22 + 64);
  else
    v29 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v24, v25, v29);
LABEL_34:
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v31 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = (void *)(((unint64_t)v24 + v30 + v33) & ~v33);
  v35 = (void *)(((unint64_t)v25 + v30 + v33) & ~v33);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  v37 = v36(v34, 1, v31);
  v38 = v36(v35, 1, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 32))(v34, v35, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
      goto LABEL_46;
    }
  }
  else
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 40))(v34, v35, v31);
      goto LABEL_46;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v34, v31);
  }
  if (*(_DWORD *)(v32 + 84))
    v39 = *(_QWORD *)(v32 + 64);
  else
    v39 = *(_QWORD *)(v32 + 64) + 1;
  memcpy(v34, v35, v39);
LABEL_46:
  if (*(_DWORD *)(v32 + 84))
    v40 = *(_QWORD *)(v32 + 64);
  else
    v40 = *(_QWORD *)(v32 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (void *)(((unint64_t)v34 + v40 + v43) & ~v43);
  v45 = (void *)(((unint64_t)v35 + v40 + v43) & ~v43);
  v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  v47 = v46(v44, 1, v41);
  v48 = v46(v45, 1, v41);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 32))(v44, v45, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
      goto LABEL_58;
    }
  }
  else
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 40))(v44, v45, v41);
      goto LABEL_58;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v44, v41);
  }
  if (*(_DWORD *)(v42 + 84))
    v49 = *(_QWORD *)(v42 + 64);
  else
    v49 = *(_QWORD *)(v42 + 64) + 1;
  memcpy(v44, v45, v49);
LABEL_58:
  if (*(_DWORD *)(v42 + 84))
    v50 = *(_QWORD *)(v42 + 64);
  else
    v50 = *(_QWORD *)(v42 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v51 = swift_getAssociatedTypeWitness();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned __int8 *)(v52 + 80);
  v54 = (void *)(((unint64_t)v44 + v50 + v53) & ~v53);
  v55 = (void *)(((unint64_t)v45 + v50 + v53) & ~v53);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  v57 = v56(v54, 1, v51);
  v58 = v56(v55, 1, v51);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 32))(v54, v55, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      goto LABEL_70;
    }
  }
  else
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 40))(v54, v55, v51);
      goto LABEL_70;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v54, v51);
  }
  if (*(_DWORD *)(v52 + 84))
    v59 = *(_QWORD *)(v52 + 64);
  else
    v59 = *(_QWORD *)(v52 + 64) + 1;
  memcpy(v54, v55, v59);
LABEL_70:
  if (*(_DWORD *)(v52 + 84))
    v60 = *(_QWORD *)(v52 + 64);
  else
    v60 = *(_QWORD *)(v52 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v61 = swift_getAssociatedTypeWitness();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v64 = (void *)(((unint64_t)v54 + v60 + v63) & ~v63);
  v65 = (void *)(((unint64_t)v55 + v60 + v63) & ~v63);
  v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  v67 = v66(v64, 1, v61);
  v68 = v66(v65, 1, v61);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 32))(v64, v65, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v61);
      goto LABEL_82;
    }
  }
  else
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 40))(v64, v65, v61);
      goto LABEL_82;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v64, v61);
  }
  if (*(_DWORD *)(v62 + 84))
    v69 = *(_QWORD *)(v62 + 64);
  else
    v69 = *(_QWORD *)(v62 + 64) + 1;
  memcpy(v64, v65, v69);
LABEL_82:
  if (*(_DWORD *)(v62 + 84))
    v70 = *(_QWORD *)(v62 + 64);
  else
    v70 = *(_QWORD *)(v62 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v71 = swift_getAssociatedTypeWitness();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned __int8 *)(v72 + 80);
  v74 = (void *)(((unint64_t)v64 + v70 + v73) & ~v73);
  v75 = (void *)(((unint64_t)v65 + v70 + v73) & ~v73);
  v76 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
  v77 = v76(v74, 1, v71);
  v78 = v76(v75, 1, v71);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 32))(v74, v75, v71);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v71);
      return a1;
    }
  }
  else
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 40))(v74, v75, v71);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v72 + 8))(v74, v71);
  }
  if (*(_DWORD *)(v72 + 84))
    v79 = *(_QWORD *)(v72 + 64);
  else
    v79 = *(_QWORD *)(v72 + 64) + 1;
  memcpy(v74, v75, v79);
  return a1;
}

uint64_t sub_1BE0B4D54(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t AssociatedTypeWitness;
  unsigned int v70;
  unsigned int v72;
  uint64_t v73;
  unsigned int v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v76 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v75 = *(_DWORD *)(v76 + 84);
  if (v75)
    v2 = v75 - 1;
  else
    v2 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v67 = swift_getAssociatedTypeWitness();
  v81 = *(_QWORD *)(v67 - 8);
  v74 = *(_DWORD *)(v81 + 84);
  v3 = v74 - 1;
  if (!v74)
    v3 = 0;
  v70 = v2;
  v68 = v3;
  if (v3 > v2)
    v2 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v65 = swift_getAssociatedTypeWitness();
  v73 = *(_QWORD *)(v65 - 8);
  v80 = *(_DWORD *)(v73 + 84);
  v4 = v80 - 1;
  if (!v80)
    v4 = 0;
  v66 = v4;
  if (v4 > v2)
    v2 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v63 = swift_getAssociatedTypeWitness();
  v79 = *(_QWORD *)(v63 - 8);
  v72 = *(_DWORD *)(v79 + 84);
  v5 = v72 - 1;
  if (!v72)
    v5 = 0;
  v64 = v5;
  if (v5 > v2)
    v2 = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v61 = swift_getAssociatedTypeWitness();
  v78 = *(_QWORD *)(v61 - 8);
  v6 = *(_DWORD *)(v78 + 84);
  v7 = v6 - 1;
  if (!v6)
    v7 = 0;
  v62 = v7;
  if (v7 > v2)
    v2 = v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v58 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v58 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  v59 = v10;
  if (v10 <= v2)
    v11 = v2;
  else
    v11 = v10;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v56 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v56 - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  v57 = v14;
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = v14;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedTypeWitness();
  result = a2;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = *(unsigned int *)(v18 + 84);
  v20 = v19 - 1;
  if (!(_DWORD)v19)
    v20 = 0;
  if (v20 <= v15)
    v20 = v15;
  if (v75)
    v21 = *(_QWORD *)(v76 + 64);
  else
    v21 = *(_QWORD *)(v76 + 64) + 1;
  if (v74)
    v22 = *(_QWORD *)(v81 + 64);
  else
    v22 = *(_QWORD *)(v81 + 64) + 1;
  v23 = *(_QWORD *)(v73 + 64);
  if (!v80)
    ++v23;
  v24 = *(_QWORD *)(v79 + 64);
  if (!v72)
    ++v24;
  v60 = v6;
  v25 = *(_QWORD *)(v78 + 64);
  if (!v6)
    ++v25;
  v26 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v26;
  v55 = v13;
  if (v13)
    v27 = *(_QWORD *)(v12 + 64);
  else
    v27 = *(_QWORD *)(v12 + 64) + 1;
  if ((_DWORD)v19)
    v28 = *(_QWORD *)(v18 + 64);
  else
    v28 = *(_QWORD *)(v18 + 64) + 1;
  if (a2)
  {
    v29 = *(unsigned __int8 *)(v81 + 80);
    v30 = v21 + v29;
    v31 = *(unsigned __int8 *)(v73 + 80);
    v32 = *(unsigned __int8 *)(v79 + 80);
    v33 = *(unsigned __int8 *)(v78 + 80);
    v34 = v24 + v33;
    v35 = *(unsigned __int8 *)(v8 + 80);
    v36 = v25 + v35;
    v37 = *(unsigned __int8 *)(v12 + 80);
    v38 = v26 + v37;
    v39 = *(unsigned __int8 *)(v18 + 80);
    v53 = v8;
    v54 = v27 + v39;
    if (a2 <= v20)
      goto LABEL_73;
    v40 = v28
        + ((v54
          + ((v38 + ((v36 + ((v34 + ((v23 + v32 + ((v22 + v31 + (v30 & ~v29)) & ~v31)) & ~v32)) & ~v33)) & ~v35)) & ~v37)) & ~v39);
    v41 = 8 * v40;
    if (v40 > 3)
    {
LABEL_57:
      v42 = *(unsigned __int8 *)(a1 + v40);
      if (!*(_BYTE *)(a1 + v40))
        goto LABEL_73;
      goto LABEL_66;
    }
    v43 = ((a2 - v20 + ~(-1 << v41)) >> v41) + 1;
    if (HIWORD(v43))
    {
      v42 = *(_DWORD *)(a1 + v40);
    }
    else
    {
      if (v43 <= 0xFF)
      {
        if (v43 < 2)
        {
LABEL_73:
          if (!v20)
            return 0;
          if (v70 == v20)
          {
            v46 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v76 + 48))(a1, v75, AssociatedTypeWitness);
          }
          else
          {
            v47 = (v30 + a1) & ~v29;
            if (v68 == v20)
            {
              v46 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v81 + 48))(v47, v74, v67);
            }
            else
            {
              v48 = (v47 + v22 + v31) & ~v31;
              if (v66 == v20)
              {
                v46 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v73 + 48))(v48, v80, v65);
              }
              else
              {
                v49 = (v48 + v23 + v32) & ~v32;
                if (v64 == v20)
                {
                  v46 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v79 + 48))(v49, v72, v63);
                }
                else
                {
                  v50 = (v34 + v49) & ~v33;
                  if (v62 == v20)
                  {
                    v46 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v78 + 48))(v50, v60, v61);
                  }
                  else
                  {
                    v51 = (v36 + v50) & ~v35;
                    if (v59 == v20)
                    {
                      v46 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v53 + 48))(v51, v9, v58);
                    }
                    else
                    {
                      v52 = (v38 + v51) & ~v37;
                      if (v57 == v20)
                        v46 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v12 + 48))(v52, v55, v56);
                      else
                        v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))((v54 + v52) & ~v39, v19, v16);
                    }
                  }
                }
              }
            }
          }
          if (v46 >= 2)
            return v46 - 1;
          else
            return 0;
        }
        goto LABEL_57;
      }
      v42 = *(unsigned __int16 *)(a1 + v40);
    }
    if (!v42)
      goto LABEL_73;
LABEL_66:
    v44 = (v42 - 1) << v41;
    if (v40 > 3)
      v44 = 0;
    if ((_DWORD)v40)
    {
      if (v40 <= 3)
        v45 = v40;
      else
        v45 = 4;
      __asm { BR              X12 }
    }
    return v20 + v44 + 1;
  }
  return result;
}

void sub_1BE0B5508(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  size_t v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  int v47;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v38 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v46 = *(_DWORD *)(v38 + 84);
  if (v46)
    v3 = v46 - 1;
  else
    v3 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v37 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v45 = *(_DWORD *)(v37 + 84);
  v4 = v45 - 1;
  if (!v45)
    v4 = 0;
  if (v4 > v3)
    v3 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v43 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v44 = *(_DWORD *)(v43 + 84);
  v5 = v44 - 1;
  if (!v44)
    v5 = 0;
  if (v5 > v3)
    v3 = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v42 = *(_DWORD *)(v41 + 84);
  v6 = v42 - 1;
  if (!v42)
    v6 = 0;
  if (v6 > v3)
    v3 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 > v3)
    v3 = v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v36 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v36 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v3)
    v12 = v3;
  else
    v12 = v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = v14 - 1;
  if (!v14)
    v15 = 0;
  if (v15 <= v12)
    v16 = v12;
  else
    v16 = v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v47 = 0;
  v17 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v18 = *(_DWORD *)(v17 + 84);
  v19 = v18 - 1;
  if (!v18)
    v19 = 0;
  if (v19 <= v16)
    v20 = v16;
  else
    v20 = v19;
  if (v46)
    v21 = *(_QWORD *)(v38 + 64);
  else
    v21 = *(_QWORD *)(v38 + 64) + 1;
  if (v45)
    v22 = *(_QWORD *)(v37 + 64);
  else
    v22 = *(_QWORD *)(v37 + 64) + 1;
  v23 = *(_QWORD *)(v43 + 64);
  if (!v44)
    ++v23;
  v24 = *(_QWORD *)(v41 + 64);
  if (!v42)
    ++v24;
  if (v8)
    v25 = *(_QWORD *)(v7 + 64);
  else
    v25 = *(_QWORD *)(v7 + 64) + 1;
  if (v10)
    v26 = *(_QWORD *)(v36 + 64);
  else
    v26 = *(_QWORD *)(v36 + 64) + 1;
  if (v14)
    v27 = *(_QWORD *)(v13 + 64);
  else
    v27 = *(_QWORD *)(v13 + 64) + 1;
  v28 = *(unsigned __int8 *)(v13 + 80);
  v29 = (v27
       + *(unsigned __int8 *)(v17 + 80)
       + ((v26
         + v28
         + ((v25
           + *(unsigned __int8 *)(v36 + 80)
           + ((v24
             + *(unsigned __int8 *)(v7 + 80)
             + ((v23
               + *(unsigned __int8 *)(v41 + 80)
               + ((v22
                 + *(unsigned __int8 *)(v43 + 80)
                 + ((v21 + *(unsigned __int8 *)(v37 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))) & ~v28)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v30 = *(_QWORD *)(v17 + 64);
  if (!v18)
    ++v30;
  v31 = v29 + v30;
  if (a3 > v20)
  {
    if (v31 <= 3)
    {
      v33 = ((a3 - v20 + ~(-1 << (8 * v31))) >> (8 * v31)) + 1;
      if (HIWORD(v33))
      {
        v32 = 4;
      }
      else if (v33 >= 0x100)
      {
        v32 = 2;
      }
      else
      {
        v32 = v33 > 1;
      }
    }
    else
    {
      v32 = 1;
    }
    v47 = v32;
  }
  if (v20 < a2)
  {
    v34 = ~v20 + a2;
    if (v31 < 4)
    {
      if ((_DWORD)v31)
      {
        v35 = v34 & ~(-1 << (8 * v31));
        bzero(a1, v31);
        if ((_DWORD)v31 == 3)
        {
          *(_WORD *)a1 = v35;
          a1[2] = BYTE2(v35);
        }
        else if ((_DWORD)v31 == 2)
        {
          *(_WORD *)a1 = v35;
        }
        else
        {
          *a1 = v35;
        }
      }
    }
    else
    {
      bzero(a1, v31);
      *(_DWORD *)a1 = v34;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X26 }
}

void sub_1BE0B5C28()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
}

void sub_1BE0B5C30()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = v0;
}

void sub_1BE0B5D74()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_1BE0B5DAC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1BE0B5DB4()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1BE0B5DC4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1BE0B5DD0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  result = sub_1BE1B2EE8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    result = sub_1BE1B2EE8();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      result = sub_1BE1B2EE8();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedTypeWitness();
        result = sub_1BE1B2EE8();
        if (v4 <= 0x3F)
        {
          swift_getAssociatedTypeWitness();
          swift_getAssociatedConformanceWitness();
          swift_getAssociatedTypeWitness();
          result = sub_1BE1B2EE8();
          if (v5 <= 0x3F)
          {
            swift_getAssociatedTypeWitness();
            swift_getAssociatedConformanceWitness();
            swift_getAssociatedTypeWitness();
            result = sub_1BE1B2EE8();
            if (v6 <= 0x3F)
            {
              swift_getAssociatedTypeWitness();
              swift_getAssociatedConformanceWitness();
              swift_getAssociatedTypeWitness();
              result = sub_1BE1B2EE8();
              if (v7 <= 0x3F)
              {
                swift_getAssociatedTypeWitness();
                swift_getAssociatedConformanceWitness();
                swift_getAssociatedTypeWitness();
                result = sub_1BE1B2EE8();
                if (v8 <= 0x3F)
                {
                  swift_getAssociatedTypeWitness();
                  swift_getAssociatedConformanceWitness();
                  swift_getAssociatedTypeWitness();
                  result = sub_1BE1B2EE8();
                  if (v9 <= 0x3F)
                  {
                    swift_initStructMetadata();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1BE0B6298(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  size_t v5;
  size_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  int v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  int v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  size_t v23;
  size_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  size_t v29;
  size_t v30;
  uint64_t v31;
  int v32;
  int v33;
  size_t v34;
  size_t v35;
  uint64_t v36;
  int v37;
  int v38;
  size_t v39;
  size_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  uint64_t v44;
  size_t v45;
  uint64_t v46;
  size_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  unint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  void *v71;
  const void *v72;
  void *v73;
  const void *v74;
  size_t __n;
  uint64_t v77;
  size_t v78;
  uint64_t v79;
  size_t v80;
  uint64_t v81;
  size_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t AssociatedTypeWitness;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  size_t v103;
  int v104;
  size_t v105;
  size_t v106;
  int v107;
  size_t v108;
  size_t v109;
  uint64_t v110;
  size_t v112;
  size_t v113;
  size_t v114;
  size_t v115;
  size_t v116;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v110 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v110 + 84))
    v2 = *(_QWORD *)(v110 + 64);
  else
    v2 = *(_QWORD *)(v110 + 64) + 1;
  v109 = v2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v96 = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(v96 - 8);
  v107 = *(_DWORD *)(v3 + 80);
  v4 = *(_DWORD *)(v3 + 84);
  v95 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  v106 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v83 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v83 - 8);
  v104 = *(_DWORD *)(v7 + 80);
  v8 = *(_DWORD *)(v7 + 84);
  v97 = v7;
  v9 = *(_QWORD *)(v7 + 64);
  if (v8)
    v10 = v9;
  else
    v10 = v9 + 1;
  v114 = v10;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v84 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v84 - 8);
  v102 = *(_DWORD *)(v11 + 80);
  v12 = *(_DWORD *)(v11 + 84);
  v98 = v11;
  v13 = *(_QWORD *)(v11 + 64);
  if (v12)
    v14 = v13;
  else
    v14 = v13 + 1;
  v115 = v14;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v85 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v85 - 8);
  v100 = *(_DWORD *)(v15 + 80);
  v16 = *(_DWORD *)(v15 + 84);
  v99 = v15;
  v17 = *(_QWORD *)(v15 + 64);
  if (v16)
    v18 = v17;
  else
    v18 = v17 + 1;
  v116 = v18;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v22 = *(_DWORD *)(v20 + 80);
  v21 = *(_DWORD *)(v20 + 84);
  v86 = v20;
  v87 = v19;
  v23 = *(_QWORD *)(v20 + 64);
  if (v21)
    v24 = v23;
  else
    v24 = v23 + 1;
  v112 = v24;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v25 = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(v25 - 8);
  v28 = *(_DWORD *)(v26 + 80);
  v27 = *(_DWORD *)(v26 + 84);
  v88 = v26;
  v89 = v25;
  v29 = *(_QWORD *)(v26 + 64);
  if (v27)
    v30 = v29;
  else
    v30 = v29 + 1;
  v113 = v30;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v92 = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(v92 - 8);
  v33 = *(_DWORD *)(v31 + 80);
  v32 = *(_DWORD *)(v31 + 84);
  v90 = v31;
  v34 = *(_QWORD *)(v31 + 64);
  if (v32)
    v35 = v34;
  else
    v35 = v34 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v93 = swift_getAssociatedTypeWitness();
  v36 = *(_QWORD *)(v93 - 8);
  v37 = *(_DWORD *)(v36 + 80);
  v38 = *(_DWORD *)(v36 + 84);
  v91 = v36;
  v39 = *(_QWORD *)(v36 + 64);
  if (v38)
    v40 = v39;
  else
    v40 = v39 + 1;
  v41 = (v107 | *(_BYTE *)(v110 + 80) | v104 | v102 | v100 | v22 | v28 | v33 | v37);
  if (v41 <= 7
    && ((v42 = v107,
         v43 = v109 + v107,
         v44 = v104,
         v45 = v106 + v104,
         v46 = v102,
         v47 = v114 + v102,
         v40
       + ((v35
         + v37
         + ((v113
           + v33
           + ((v112
             + v28
             + ((v116
               + v22
               + ((v115
                 + v100
                 + ((v47
                   + ((v45 + (v43 & ~(unint64_t)v107)) & ~(unint64_t)v104)) & ~(unint64_t)v102)) & ~(unint64_t)v100)) & ~(unint64_t)v22)) & ~(unint64_t)v28)) & ~(unint64_t)v33)) & ~(unint64_t)v37) <= 0x18)
      ? (v48 = ((v107 | *(_DWORD *)(v110 + 80) | v104 | v102 | v100 | v22 | v28 | v33 | v37) & 0x100000) == 0)
      : (v48 = 0),
        v48))
  {
    v77 = v100;
    v78 = v115 + v100;
    v79 = v28;
    v80 = v116 + v22;
    v81 = v33;
    v82 = v112 + v28;
    v101 = v37;
    v103 = v113 + v33;
    v105 = v35 + v37;
    v108 = v35;
    __n = v40;
    v49 = ~v42;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v110 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v109);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v110 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v110 + 56))(a1, 0, 1, AssociatedTypeWitness);
    }
    v52 = ~v44;
    v53 = (void *)(((unint64_t)a1 + v43) & v49);
    v54 = (const void *)(((unint64_t)a2 + v43) & v49);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v95 + 48))(v54, 1, v96))
    {
      memcpy(v53, v54, v106);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v95 + 16))(v53, v54, v96);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v53, 0, 1, v96);
    }
    v55 = ~v46;
    v56 = (void *)(((unint64_t)v53 + v45) & v52);
    v57 = (const void *)(((unint64_t)v54 + v45) & v52);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v97 + 48))(v57, 1, v83))
    {
      memcpy(v56, v57, v114);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v97 + 16))(v56, v57, v83);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v56, 0, 1, v83);
    }
    v58 = ~v77;
    v59 = (void *)(((unint64_t)v56 + v47) & v55);
    v60 = (const void *)(((unint64_t)v57 + v47) & v55);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v98 + 48))(v60, 1, v84))
    {
      memcpy(v59, v60, v115);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v98 + 16))(v59, v60, v84);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v59, 0, 1, v84);
    }
    v61 = ~(unint64_t)v22;
    v62 = (void *)(((unint64_t)v59 + v78) & v58);
    v63 = (const void *)(((unint64_t)v60 + v78) & v58);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v99 + 48))(v63, 1, v85))
    {
      memcpy(v62, v63, v116);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v99 + 16))(v62, v63, v85);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v62, 0, 1, v85);
    }
    v64 = ~v79;
    v65 = (void *)(((unint64_t)v62 + v80) & v61);
    v66 = (const void *)(((unint64_t)v63 + v80) & v61);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v86 + 48))(v66, 1, v87))
    {
      memcpy(v65, v66, v112);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v86 + 16))(v65, v66, v87);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v65, 0, 1, v87);
    }
    v67 = ~v81;
    v68 = (void *)(((unint64_t)v65 + v82) & v64);
    v69 = (const void *)(((unint64_t)v66 + v82) & v64);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v88 + 48))(v69, 1, v89))
    {
      memcpy(v68, v69, v113);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 16))(v68, v69, v89);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v68, 0, 1, v89);
    }
    v70 = ~v101;
    v71 = (void *)(((unint64_t)v68 + v103) & v67);
    v72 = (const void *)(((unint64_t)v69 + v103) & v67);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v90 + 48))(v72, 1, v92))
    {
      memcpy(v71, v72, v108);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 16))(v71, v72, v92);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v71, 0, 1, v92);
    }
    v73 = (void *)(((unint64_t)v71 + v105) & v70);
    v74 = (const void *)(((unint64_t)v72 + v105) & v70);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48))(v74, 1, v93))
    {
      memcpy(v73, v74, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v73, v74, v93);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v73, 0, 1, v93);
    }
    return a1;
  }
  else
  {
    v50 = *a2;
    *a1 = *a2;
    v51 = v50 + ((v41 + 16) & ~v41);
    swift_retain();
  }
  return (uint64_t *)v51;
}

uint64_t sub_1BE0B6C84(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = v5 + a1;
  if (!v4)
    ++v8;
  v9 = (v8 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = *(_DWORD *)(v7 + 84);
  v11 = *(_QWORD *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v11 + v9;
  if (!v10)
    ++v14;
  v15 = (v14 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15, v12);
  v16 = *(_DWORD *)(v13 + 84);
  v17 = *(_QWORD *)(v13 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = v17 + v15;
  if (!v16)
    ++v20;
  v21 = (v20 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v18))
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v21, v18);
  v22 = *(_DWORD *)(v19 + 84);
  v23 = *(_QWORD *)(v19 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = v23 + v21;
  if (!v22)
    ++v26;
  v27 = (v26 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v24))
    (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v27, v24);
  v28 = *(_DWORD *)(v25 + 84);
  v29 = *(_QWORD *)(v25 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v30 = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = v29 + v27;
  if (!v28)
    ++v32;
  v33 = (v32 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1, v30))
    (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v33, v30);
  v34 = *(_DWORD *)(v31 + 84);
  v35 = *(_QWORD *)(v31 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v36 = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = v35 + v33;
  if (!v34)
    ++v38;
  v39 = (v38 + *(unsigned __int8 *)(v37 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v36))
    (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v39, v36);
  v40 = *(_DWORD *)(v37 + 84);
  v41 = *(_QWORD *)(v37 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v42 = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = v41 + v39;
  if (!v40)
    ++v44;
  v45 = (v44 + *(unsigned __int8 *)(v43 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v43 + 48))(v45, 1, v42))
    (*(void (**)(unint64_t, uint64_t))(v43 + 8))(v45, v42);
  v46 = *(_DWORD *)(v43 + 84);
  v47 = *(_QWORD *)(v43 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v48 = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = v47 + v45;
  if (!v46)
    ++v50;
  v51 = (v50 + *(unsigned __int8 *)(v49 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v49 + 48))(v51, 1, v48);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v49 + 8))(v51, v48);
  return result;
}

void *sub_1BE0B7308(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  size_t v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  int v33;
  size_t v34;
  size_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  int v42;
  size_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  size_t v52;
  size_t v53;
  size_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  int v60;
  size_t v61;
  size_t v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  int v69;
  size_t v70;
  size_t v71;
  size_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  size_t v78;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v14 = (const void *)(((unint64_t)a2 + v9 + v12) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
  {
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)(((unint64_t)v13 + v18 + v21) & ~v21);
  v23 = (const void *)(((unint64_t)v14 + v18 + v21) & ~v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v23, 1, v19))
  {
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
    if (v24)
      v26 = v25;
    else
      v26 = v25 + 1;
    memcpy(v22, v23, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v22, v23, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
  }
  if (v24)
    v27 = v25;
  else
    v27 = v25 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v28 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (void *)(((unint64_t)v22 + v27 + v30) & ~v30);
  v32 = (const void *)(((unint64_t)v23 + v27 + v30) & ~v30);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v32, 1, v28))
  {
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
    if (v33)
      v35 = v34;
    else
      v35 = v34 + 1;
    memcpy(v31, v32, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(v31, v32, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v28);
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
  }
  if (v33)
    v36 = v34;
  else
    v36 = v34 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v37 = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned __int8 *)(v38 + 80);
  v40 = (void *)(((unint64_t)v31 + v36 + v39) & ~v39);
  v41 = (const void *)(((unint64_t)v32 + v36 + v39) & ~v39);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v41, 1, v37))
  {
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
    if (v42)
      v44 = v43;
    else
      v44 = v43 + 1;
    memcpy(v40, v41, v44);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(v40, v41, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
  }
  if (v42)
    v45 = v43;
  else
    v45 = v43 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v46 = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (void *)(((unint64_t)v40 + v45 + v48) & ~v48);
  v50 = (const void *)(((unint64_t)v41 + v45 + v48) & ~v48);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v46))
  {
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
    if (v51)
      v53 = v52;
    else
      v53 = v52 + 1;
    memcpy(v49, v50, v53);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v49, v50, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
  }
  if (v51)
    v54 = v52;
  else
    v54 = v52 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v55 = swift_getAssociatedTypeWitness();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(unsigned __int8 *)(v56 + 80);
  v58 = (void *)(((unint64_t)v49 + v54 + v57) & ~v57);
  v59 = (const void *)(((unint64_t)v50 + v54 + v57) & ~v57);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v59, 1, v55))
  {
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
    if (v60)
      v62 = v61;
    else
      v62 = v61 + 1;
    memcpy(v58, v59, v62);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v58, v59, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v55);
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
  }
  if (v60)
    v63 = v61;
  else
    v63 = v61 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v64 = swift_getAssociatedTypeWitness();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(unsigned __int8 *)(v65 + 80);
  v67 = (void *)(((unint64_t)v58 + v63 + v66) & ~v66);
  v68 = (const void *)(((unint64_t)v59 + v63 + v66) & ~v66);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v68, 1, v64))
  {
    v69 = *(_DWORD *)(v65 + 84);
    v70 = *(_QWORD *)(v65 + 64);
    if (v69)
      v71 = v70;
    else
      v71 = v70 + 1;
    memcpy(v67, v68, v71);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 16))(v67, v68, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v64);
    v69 = *(_DWORD *)(v65 + 84);
    v70 = *(_QWORD *)(v65 + 64);
  }
  if (v69)
    v72 = v70;
  else
    v72 = v70 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v73 = swift_getAssociatedTypeWitness();
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned __int8 *)(v74 + 80);
  v76 = (void *)(((unint64_t)v67 + v72 + v75) & ~v75);
  v77 = (const void *)(((unint64_t)v68 + v72 + v75) & ~v75);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v74 + 48))(v77, 1, v73))
  {
    if (*(_DWORD *)(v74 + 84))
      v78 = *(_QWORD *)(v74 + 64);
    else
      v78 = *(_QWORD *)(v74 + 64) + 1;
    memcpy(v76, v77, v78);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v74 + 16))(v76, v77, v73);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v76, 0, 1, v73);
  }
  return a1;
}

void *sub_1BE0B7BDC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  size_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)(void *, uint64_t, uint64_t);
  int v77;
  int v78;
  size_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  size_t v89;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v14, v15, v11);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_22:
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = *(_QWORD *)(v12 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)(((unint64_t)v14 + v20 + v23) & ~v23);
  v25 = (void *)(((unint64_t)v15 + v20 + v23) & ~v23);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v27 = v26(v24, 1, v21);
  v28 = v26(v25, 1, v21);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v24, v25, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v21);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v24, v25, v21);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v29 = *(_QWORD *)(v22 + 64);
  else
    v29 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v24, v25, v29);
LABEL_34:
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v31 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = (void *)(((unint64_t)v24 + v30 + v33) & ~v33);
  v35 = (void *)(((unint64_t)v25 + v30 + v33) & ~v33);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  v37 = v36(v34, 1, v31);
  v38 = v36(v35, 1, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v34, v35, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
      goto LABEL_46;
    }
  }
  else
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v34, v35, v31);
      goto LABEL_46;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v34, v31);
  }
  if (*(_DWORD *)(v32 + 84))
    v39 = *(_QWORD *)(v32 + 64);
  else
    v39 = *(_QWORD *)(v32 + 64) + 1;
  memcpy(v34, v35, v39);
LABEL_46:
  if (*(_DWORD *)(v32 + 84))
    v40 = *(_QWORD *)(v32 + 64);
  else
    v40 = *(_QWORD *)(v32 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (void *)(((unint64_t)v34 + v40 + v43) & ~v43);
  v45 = (void *)(((unint64_t)v35 + v40 + v43) & ~v43);
  v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  v47 = v46(v44, 1, v41);
  v48 = v46(v45, 1, v41);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 16))(v44, v45, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
      goto LABEL_58;
    }
  }
  else
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 24))(v44, v45, v41);
      goto LABEL_58;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v44, v41);
  }
  if (*(_DWORD *)(v42 + 84))
    v49 = *(_QWORD *)(v42 + 64);
  else
    v49 = *(_QWORD *)(v42 + 64) + 1;
  memcpy(v44, v45, v49);
LABEL_58:
  if (*(_DWORD *)(v42 + 84))
    v50 = *(_QWORD *)(v42 + 64);
  else
    v50 = *(_QWORD *)(v42 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v51 = swift_getAssociatedTypeWitness();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned __int8 *)(v52 + 80);
  v54 = (void *)(((unint64_t)v44 + v50 + v53) & ~v53);
  v55 = (void *)(((unint64_t)v45 + v50 + v53) & ~v53);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  v57 = v56(v54, 1, v51);
  v58 = v56(v55, 1, v51);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 16))(v54, v55, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      goto LABEL_70;
    }
  }
  else
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 24))(v54, v55, v51);
      goto LABEL_70;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v54, v51);
  }
  if (*(_DWORD *)(v52 + 84))
    v59 = *(_QWORD *)(v52 + 64);
  else
    v59 = *(_QWORD *)(v52 + 64) + 1;
  memcpy(v54, v55, v59);
LABEL_70:
  if (*(_DWORD *)(v52 + 84))
    v60 = *(_QWORD *)(v52 + 64);
  else
    v60 = *(_QWORD *)(v52 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v61 = swift_getAssociatedTypeWitness();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v64 = (void *)(((unint64_t)v54 + v60 + v63) & ~v63);
  v65 = (void *)(((unint64_t)v55 + v60 + v63) & ~v63);
  v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  v67 = v66(v64, 1, v61);
  v68 = v66(v65, 1, v61);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 16))(v64, v65, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v61);
      goto LABEL_82;
    }
  }
  else
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 24))(v64, v65, v61);
      goto LABEL_82;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v64, v61);
  }
  if (*(_DWORD *)(v62 + 84))
    v69 = *(_QWORD *)(v62 + 64);
  else
    v69 = *(_QWORD *)(v62 + 64) + 1;
  memcpy(v64, v65, v69);
LABEL_82:
  if (*(_DWORD *)(v62 + 84))
    v70 = *(_QWORD *)(v62 + 64);
  else
    v70 = *(_QWORD *)(v62 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v71 = swift_getAssociatedTypeWitness();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned __int8 *)(v72 + 80);
  v74 = (void *)(((unint64_t)v64 + v70 + v73) & ~v73);
  v75 = (void *)(((unint64_t)v65 + v70 + v73) & ~v73);
  v76 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
  v77 = v76(v74, 1, v71);
  v78 = v76(v75, 1, v71);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 16))(v74, v75, v71);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v71);
      goto LABEL_94;
    }
  }
  else
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 24))(v74, v75, v71);
      goto LABEL_94;
    }
    (*(void (**)(void *, uint64_t))(v72 + 8))(v74, v71);
  }
  if (*(_DWORD *)(v72 + 84))
    v79 = *(_QWORD *)(v72 + 64);
  else
    v79 = *(_QWORD *)(v72 + 64) + 1;
  memcpy(v74, v75, v79);
LABEL_94:
  if (*(_DWORD *)(v72 + 84))
    v80 = *(_QWORD *)(v72 + 64);
  else
    v80 = *(_QWORD *)(v72 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v81 = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(unsigned __int8 *)(v82 + 80);
  v84 = (void *)(((unint64_t)v74 + v80 + v83) & ~v83);
  v85 = (void *)(((unint64_t)v75 + v80 + v83) & ~v83);
  v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  v87 = v86(v84, 1, v81);
  v88 = v86(v85, 1, v81);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 16))(v84, v85, v81);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v81);
      return a1;
    }
  }
  else
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 24))(v84, v85, v81);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v82 + 8))(v84, v81);
  }
  if (*(_DWORD *)(v82 + 84))
    v89 = *(_QWORD *)(v82 + 64);
  else
    v89 = *(_QWORD *)(v82 + 64) + 1;
  memcpy(v84, v85, v89);
  return a1;
}

void *sub_1BE0B871C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  size_t v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  int v33;
  size_t v34;
  size_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  int v42;
  size_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  size_t v52;
  size_t v53;
  size_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  int v60;
  size_t v61;
  size_t v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  int v69;
  size_t v70;
  size_t v71;
  size_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  size_t v78;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v14 = (const void *)(((unint64_t)a2 + v9 + v12) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
  {
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)(((unint64_t)v13 + v18 + v21) & ~v21);
  v23 = (const void *)(((unint64_t)v14 + v18 + v21) & ~v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v23, 1, v19))
  {
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
    if (v24)
      v26 = v25;
    else
      v26 = v25 + 1;
    memcpy(v22, v23, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v22, v23, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
  }
  if (v24)
    v27 = v25;
  else
    v27 = v25 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v28 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (void *)(((unint64_t)v22 + v27 + v30) & ~v30);
  v32 = (const void *)(((unint64_t)v23 + v27 + v30) & ~v30);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v32, 1, v28))
  {
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
    if (v33)
      v35 = v34;
    else
      v35 = v34 + 1;
    memcpy(v31, v32, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v31, v32, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v28);
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
  }
  if (v33)
    v36 = v34;
  else
    v36 = v34 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v37 = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned __int8 *)(v38 + 80);
  v40 = (void *)(((unint64_t)v31 + v36 + v39) & ~v39);
  v41 = (const void *)(((unint64_t)v32 + v36 + v39) & ~v39);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v41, 1, v37))
  {
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
    if (v42)
      v44 = v43;
    else
      v44 = v43 + 1;
    memcpy(v40, v41, v44);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v40, v41, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
  }
  if (v42)
    v45 = v43;
  else
    v45 = v43 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v46 = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (void *)(((unint64_t)v40 + v45 + v48) & ~v48);
  v50 = (const void *)(((unint64_t)v41 + v45 + v48) & ~v48);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v46))
  {
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
    if (v51)
      v53 = v52;
    else
      v53 = v52 + 1;
    memcpy(v49, v50, v53);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v49, v50, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
  }
  if (v51)
    v54 = v52;
  else
    v54 = v52 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v55 = swift_getAssociatedTypeWitness();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(unsigned __int8 *)(v56 + 80);
  v58 = (void *)(((unint64_t)v49 + v54 + v57) & ~v57);
  v59 = (const void *)(((unint64_t)v50 + v54 + v57) & ~v57);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v59, 1, v55))
  {
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
    if (v60)
      v62 = v61;
    else
      v62 = v61 + 1;
    memcpy(v58, v59, v62);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v58, v59, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v55);
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
  }
  if (v60)
    v63 = v61;
  else
    v63 = v61 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v64 = swift_getAssociatedTypeWitness();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(unsigned __int8 *)(v65 + 80);
  v67 = (void *)(((unint64_t)v58 + v63 + v66) & ~v66);
  v68 = (const void *)(((unint64_t)v59 + v63 + v66) & ~v66);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v68, 1, v64))
  {
    v69 = *(_DWORD *)(v65 + 84);
    v70 = *(_QWORD *)(v65 + 64);
    if (v69)
      v71 = v70;
    else
      v71 = v70 + 1;
    memcpy(v67, v68, v71);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v67, v68, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v64);
    v69 = *(_DWORD *)(v65 + 84);
    v70 = *(_QWORD *)(v65 + 64);
  }
  if (v69)
    v72 = v70;
  else
    v72 = v70 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v73 = swift_getAssociatedTypeWitness();
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned __int8 *)(v74 + 80);
  v76 = (void *)(((unint64_t)v67 + v72 + v75) & ~v75);
  v77 = (const void *)(((unint64_t)v68 + v72 + v75) & ~v75);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v74 + 48))(v77, 1, v73))
  {
    if (*(_DWORD *)(v74 + 84))
      v78 = *(_QWORD *)(v74 + 64);
    else
      v78 = *(_QWORD *)(v74 + 64) + 1;
    memcpy(v76, v77, v78);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v74 + 32))(v76, v77, v73);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v76, 0, 1, v73);
  }
  return a1;
}

void *sub_1BE0B8FF0(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  size_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)(void *, uint64_t, uint64_t);
  int v77;
  int v78;
  size_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  size_t v89;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v14, v15, v11);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_22:
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = *(_QWORD *)(v12 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)(((unint64_t)v14 + v20 + v23) & ~v23);
  v25 = (void *)(((unint64_t)v15 + v20 + v23) & ~v23);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v27 = v26(v24, 1, v21);
  v28 = v26(v25, 1, v21);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v24, v25, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v21);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v24, v25, v21);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v29 = *(_QWORD *)(v22 + 64);
  else
    v29 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v24, v25, v29);
LABEL_34:
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v31 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = (void *)(((unint64_t)v24 + v30 + v33) & ~v33);
  v35 = (void *)(((unint64_t)v25 + v30 + v33) & ~v33);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  v37 = v36(v34, 1, v31);
  v38 = v36(v35, 1, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 32))(v34, v35, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
      goto LABEL_46;
    }
  }
  else
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 40))(v34, v35, v31);
      goto LABEL_46;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v34, v31);
  }
  if (*(_DWORD *)(v32 + 84))
    v39 = *(_QWORD *)(v32 + 64);
  else
    v39 = *(_QWORD *)(v32 + 64) + 1;
  memcpy(v34, v35, v39);
LABEL_46:
  if (*(_DWORD *)(v32 + 84))
    v40 = *(_QWORD *)(v32 + 64);
  else
    v40 = *(_QWORD *)(v32 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (void *)(((unint64_t)v34 + v40 + v43) & ~v43);
  v45 = (void *)(((unint64_t)v35 + v40 + v43) & ~v43);
  v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  v47 = v46(v44, 1, v41);
  v48 = v46(v45, 1, v41);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 32))(v44, v45, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
      goto LABEL_58;
    }
  }
  else
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 40))(v44, v45, v41);
      goto LABEL_58;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v44, v41);
  }
  if (*(_DWORD *)(v42 + 84))
    v49 = *(_QWORD *)(v42 + 64);
  else
    v49 = *(_QWORD *)(v42 + 64) + 1;
  memcpy(v44, v45, v49);
LABEL_58:
  if (*(_DWORD *)(v42 + 84))
    v50 = *(_QWORD *)(v42 + 64);
  else
    v50 = *(_QWORD *)(v42 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v51 = swift_getAssociatedTypeWitness();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned __int8 *)(v52 + 80);
  v54 = (void *)(((unint64_t)v44 + v50 + v53) & ~v53);
  v55 = (void *)(((unint64_t)v45 + v50 + v53) & ~v53);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  v57 = v56(v54, 1, v51);
  v58 = v56(v55, 1, v51);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 32))(v54, v55, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      goto LABEL_70;
    }
  }
  else
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 40))(v54, v55, v51);
      goto LABEL_70;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v54, v51);
  }
  if (*(_DWORD *)(v52 + 84))
    v59 = *(_QWORD *)(v52 + 64);
  else
    v59 = *(_QWORD *)(v52 + 64) + 1;
  memcpy(v54, v55, v59);
LABEL_70:
  if (*(_DWORD *)(v52 + 84))
    v60 = *(_QWORD *)(v52 + 64);
  else
    v60 = *(_QWORD *)(v52 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v61 = swift_getAssociatedTypeWitness();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v64 = (void *)(((unint64_t)v54 + v60 + v63) & ~v63);
  v65 = (void *)(((unint64_t)v55 + v60 + v63) & ~v63);
  v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  v67 = v66(v64, 1, v61);
  v68 = v66(v65, 1, v61);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 32))(v64, v65, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v61);
      goto LABEL_82;
    }
  }
  else
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 40))(v64, v65, v61);
      goto LABEL_82;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v64, v61);
  }
  if (*(_DWORD *)(v62 + 84))
    v69 = *(_QWORD *)(v62 + 64);
  else
    v69 = *(_QWORD *)(v62 + 64) + 1;
  memcpy(v64, v65, v69);
LABEL_82:
  if (*(_DWORD *)(v62 + 84))
    v70 = *(_QWORD *)(v62 + 64);
  else
    v70 = *(_QWORD *)(v62 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v71 = swift_getAssociatedTypeWitness();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned __int8 *)(v72 + 80);
  v74 = (void *)(((unint64_t)v64 + v70 + v73) & ~v73);
  v75 = (void *)(((unint64_t)v65 + v70 + v73) & ~v73);
  v76 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
  v77 = v76(v74, 1, v71);
  v78 = v76(v75, 1, v71);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 32))(v74, v75, v71);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v71);
      goto LABEL_94;
    }
  }
  else
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 40))(v74, v75, v71);
      goto LABEL_94;
    }
    (*(void (**)(void *, uint64_t))(v72 + 8))(v74, v71);
  }
  if (*(_DWORD *)(v72 + 84))
    v79 = *(_QWORD *)(v72 + 64);
  else
    v79 = *(_QWORD *)(v72 + 64) + 1;
  memcpy(v74, v75, v79);
LABEL_94:
  if (*(_DWORD *)(v72 + 84))
    v80 = *(_QWORD *)(v72 + 64);
  else
    v80 = *(_QWORD *)(v72 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v81 = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(unsigned __int8 *)(v82 + 80);
  v84 = (void *)(((unint64_t)v74 + v80 + v83) & ~v83);
  v85 = (void *)(((unint64_t)v75 + v80 + v83) & ~v83);
  v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  v87 = v86(v84, 1, v81);
  v88 = v86(v85, 1, v81);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 32))(v84, v85, v81);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v81);
      return a1;
    }
  }
  else
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 40))(v84, v85, v81);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v82 + 8))(v84, v81);
  }
  if (*(_DWORD *)(v82 + 84))
    v89 = *(_QWORD *)(v82 + 64);
  else
    v89 = *(_QWORD *)(v82 + 64) + 1;
  memcpy(v84, v85, v89);
  return a1;
}

uint64_t sub_1BE0B9B30(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t AssociatedTypeWitness;
  unsigned int v76;
  unsigned int v78;
  uint64_t v79;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  unsigned int v90;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v79 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v78 = *(_DWORD *)(v79 + 84);
  if (v78)
    v2 = v78 - 1;
  else
    v2 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v73 = swift_getAssociatedTypeWitness();
  v89 = *(_QWORD *)(v73 - 8);
  v90 = *(_DWORD *)(v89 + 84);
  v3 = v90 - 1;
  if (!v90)
    v3 = 0;
  v76 = v2;
  v74 = v3;
  if (v3 > v2)
    v2 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v71 = swift_getAssociatedTypeWitness();
  v87 = *(_QWORD *)(v71 - 8);
  v88 = *(_DWORD *)(v87 + 84);
  v4 = v88 - 1;
  if (!v88)
    v4 = 0;
  v72 = v4;
  if (v4 > v2)
    v2 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v69 = swift_getAssociatedTypeWitness();
  v85 = *(_QWORD *)(v69 - 8);
  v86 = *(_DWORD *)(v85 + 84);
  v5 = v86 - 1;
  if (!v86)
    v5 = 0;
  v70 = v5;
  if (v5 > v2)
    v2 = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v67 = swift_getAssociatedTypeWitness();
  v83 = *(_QWORD *)(v67 - 8);
  v84 = *(_DWORD *)(v83 + 84);
  v6 = v84 - 1;
  if (!v84)
    v6 = 0;
  v68 = v6;
  if (v6 <= v2)
    v7 = v2;
  else
    v7 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v65 = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(v65 - 8);
  v81 = *(_DWORD *)(v82 + 84);
  v8 = v81 - 1;
  if (!v81)
    v8 = 0;
  v66 = v8;
  if (v8 > v7)
    v7 = v8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v63 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v63 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  v64 = v11;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v60 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v60 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  v15 = v14 - 1;
  if (!(_DWORD)v14)
    v15 = 0;
  v61 = v15;
  if (v15 <= v12)
    v16 = v12;
  else
    v16 = v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int *)(v18 + 84);
  v20 = v19 - 1;
  if (!(_DWORD)v19)
    v20 = 0;
  if (v20 <= v16)
    v20 = v16;
  if (v78)
    v21 = *(_QWORD *)(v79 + 64);
  else
    v21 = *(_QWORD *)(v79 + 64) + 1;
  if (v90)
    v22 = *(_QWORD *)(v89 + 64);
  else
    v22 = *(_QWORD *)(v89 + 64) + 1;
  v23 = *(_QWORD *)(v87 + 64);
  if (!v88)
    ++v23;
  v24 = *(_QWORD *)(v85 + 64);
  if (!v86)
    ++v24;
  v25 = *(_QWORD *)(v83 + 64);
  if (!v84)
    ++v25;
  v26 = *(_QWORD *)(v82 + 64);
  if (!v81)
    ++v26;
  v62 = v10;
  if (v10)
    v27 = *(_QWORD *)(v9 + 64);
  else
    v27 = *(_QWORD *)(v9 + 64) + 1;
  if ((_DWORD)v14)
    v28 = *(_QWORD *)(v13 + 64);
  else
    v28 = *(_QWORD *)(v13 + 64) + 1;
  if ((_DWORD)v19)
    v29 = *(_QWORD *)(v18 + 64);
  else
    v29 = *(_QWORD *)(v18 + 64) + 1;
  if (!a2)
    return 0;
  v30 = v9;
  v31 = *(unsigned __int8 *)(v89 + 80);
  v32 = v21 + v31;
  v33 = *(unsigned __int8 *)(v87 + 80);
  v34 = *(unsigned __int8 *)(v85 + 80);
  v35 = *(unsigned __int8 *)(v83 + 80);
  v36 = v24 + v35;
  v37 = *(unsigned __int8 *)(v82 + 80);
  v38 = v25 + v37;
  v39 = *(unsigned __int8 *)(v30 + 80);
  v40 = v26 + v39;
  v41 = *(unsigned __int8 *)(v13 + 80);
  v42 = v27 + v41;
  v43 = *(unsigned __int8 *)(v18 + 80);
  v59 = v28 + v43;
  if (a2 <= v20)
    goto LABEL_81;
  v44 = v29
      + ((v59
        + ((v42
          + ((v40 + ((v38 + ((v36 + ((v23 + v34 + ((v22 + v33 + (v32 & ~v31)) & ~v33)) & ~v34)) & ~v35)) & ~v37)) & ~v39)) & ~v41)) & ~v43);
  v45 = 8 * v44;
  if (v44 <= 3)
  {
    v47 = ((a2 - v20 + ~(-1 << v45)) >> v45) + 1;
    if (HIWORD(v47))
    {
      v46 = *(_DWORD *)(a1 + v44);
      if (!v46)
        goto LABEL_81;
      goto LABEL_72;
    }
    if (v47 > 0xFF)
    {
      v46 = *(unsigned __int16 *)(a1 + v44);
      if (!*(_WORD *)(a1 + v44))
        goto LABEL_81;
      goto LABEL_72;
    }
    if (v47 < 2)
    {
LABEL_81:
      if (v20)
      {
        if (v76 == v20)
        {
          v50 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v79 + 48))(a1, v78, AssociatedTypeWitness);
        }
        else
        {
          v51 = (v32 + a1) & ~v31;
          if (v74 == v20)
          {
            v50 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v89 + 48))(v51, v90, v73);
          }
          else
          {
            v52 = (v51 + v22 + v33) & ~v33;
            if (v72 == v20)
            {
              v50 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v87 + 48))(v52, v88, v71);
            }
            else
            {
              v53 = (v52 + v23 + v34) & ~v34;
              if (v70 == v20)
              {
                v50 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v85 + 48))(v53, v86, v69);
              }
              else
              {
                v55 = (v36 + v53) & ~v35;
                if (v68 == v20)
                {
                  v50 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v83 + 48))(v55, v84, v67);
                }
                else
                {
                  v56 = (v38 + v55) & ~v37;
                  if (v66 == v20)
                  {
                    v50 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v82 + 48))(v56, v81, v65);
                  }
                  else
                  {
                    v57 = (v40 + v56) & ~v39;
                    if (v64 == v20)
                    {
                      v50 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v30 + 48))(v57, v62, v63);
                    }
                    else
                    {
                      v58 = (v42 + v57) & ~v41;
                      if (v61 == v20)
                        v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v58, v14, v60);
                      else
                        v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))((v59 + v58) & ~v43, v19, v17);
                    }
                  }
                }
              }
            }
          }
        }
        if (v50 >= 2)
          return v50 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v46 = *(unsigned __int8 *)(a1 + v44);
  if (!*(_BYTE *)(a1 + v44))
    goto LABEL_81;
LABEL_72:
  v48 = (v46 - 1) << v45;
  if (v44 > 3)
    v48 = 0;
  if ((_DWORD)v44)
  {
    if (v44 <= 3)
      v49 = v44;
    else
      v49 = 4;
    __asm { BR              X12 }
  }
  return v20 + v48 + 1;
}

void sub_1BE0BA370(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  size_t v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v38 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v48 = *(_DWORD *)(v38 + 84);
  if (v48)
    v3 = v48 - 1;
  else
    v3 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v46 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v47 = *(_DWORD *)(v46 + 84);
  v4 = v47 - 1;
  if (!v47)
    v4 = 0;
  if (v4 > v3)
    v3 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v37 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v45 = *(_DWORD *)(v37 + 84);
  v5 = v45 - 1;
  if (!v45)
    v5 = 0;
  if (v5 > v3)
    v3 = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v43 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v44 = *(_DWORD *)(v43 + 84);
  v6 = v44 - 1;
  if (!v44)
    v6 = 0;
  if (v6 > v3)
    v3 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v42 = *(_DWORD *)(v41 + 84);
  v7 = v42 - 1;
  if (!v42)
    v7 = 0;
  if (v7 > v3)
    v3 = v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v36 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v36 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 > v3)
    v3 = v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v12 > v3)
    v3 = v12;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = v14 - 1;
  if (!v14)
    v15 = 0;
  if (v15 <= v3)
    v16 = v3;
  else
    v16 = v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v17 = 0u;
  v18 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v19 = *(_DWORD *)(v18 + 84);
  v20 = v19 - 1;
  if (!v19)
    v20 = 0;
  if (v20 <= v16)
    v21 = v16;
  else
    v21 = v20;
  if (v48)
    v22 = *(_QWORD *)(v38 + 64);
  else
    v22 = *(_QWORD *)(v38 + 64) + 1;
  if (v47)
    v23 = *(_QWORD *)(v46 + 64);
  else
    v23 = *(_QWORD *)(v46 + 64) + 1;
  if (v45)
    v24 = *(_QWORD *)(v37 + 64);
  else
    v24 = *(_QWORD *)(v37 + 64) + 1;
  v25 = *(_QWORD *)(v43 + 64);
  if (!v44)
    ++v25;
  v26 = *(_QWORD *)(v41 + 64);
  if (!v42)
    ++v26;
  if (v8)
    v27 = *(_QWORD *)(v36 + 64);
  else
    v27 = *(_QWORD *)(v36 + 64) + 1;
  if (v11)
    v28 = *(_QWORD *)(v10 + 64);
  else
    v28 = *(_QWORD *)(v10 + 64) + 1;
  if (v14)
    v29 = *(_QWORD *)(v13 + 64);
  else
    v29 = *(_QWORD *)(v13 + 64) + 1;
  v30 = (v29
       + *(unsigned __int8 *)(v18 + 80)
       + ((v28
         + *(unsigned __int8 *)(v13 + 80)
         + ((v27
           + *(unsigned __int8 *)(v10 + 80)
           + ((v26
             + *(unsigned __int8 *)(v36 + 80)
             + ((v25
               + *(unsigned __int8 *)(v41 + 80)
               + ((v24
                 + *(unsigned __int8 *)(v43 + 80)
                 + ((v23
                   + *(unsigned __int8 *)(v37 + 80)
                   + ((v22 + *(unsigned __int8 *)(v46 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v31 = *(_QWORD *)(v18 + 64);
  if (!v19)
    ++v31;
  v32 = v30 + v31;
  if (a3 > v21)
  {
    if (v32 <= 3)
    {
      v33 = ((a3 - v21 + ~(-1 << (8 * v32))) >> (8 * v32)) + 1;
      if (HIWORD(v33))
      {
        v17 = 4u;
      }
      else if (v33 >= 0x100)
      {
        v17 = 2;
      }
      else
      {
        v17 = v33 > 1;
      }
    }
    else
    {
      v17 = 1u;
    }
  }
  if (v21 < a2)
  {
    v34 = ~v21 + a2;
    if (v32 < 4)
    {
      if ((_DWORD)v32)
      {
        v35 = v34 & ~(-1 << (8 * v32));
        bzero(a1, v32);
        if ((_DWORD)v32 == 3)
        {
          *(_WORD *)a1 = v35;
          a1[2] = BYTE2(v35);
        }
        else if ((_DWORD)v32 == 2)
        {
          *(_WORD *)a1 = v35;
        }
        else
        {
          *a1 = v35;
        }
      }
    }
    else
    {
      bzero(a1, v32);
      *(_DWORD *)a1 = v34;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X28 }
}

void sub_1BE0BAB34()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v0) = v1;
}

void sub_1BE0BAB3C()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v2 + v0) = v1;
}

void sub_1BE0BACB0()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_1BE0BACE8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1BE0BACF0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1BE0BAD00()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1BE0BAD0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  result = sub_1BE1B2EE8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    result = sub_1BE1B2EE8();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      result = sub_1BE1B2EE8();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedTypeWitness();
        result = sub_1BE1B2EE8();
        if (v4 <= 0x3F)
        {
          swift_getAssociatedTypeWitness();
          swift_getAssociatedConformanceWitness();
          swift_getAssociatedTypeWitness();
          result = sub_1BE1B2EE8();
          if (v5 <= 0x3F)
          {
            swift_getAssociatedTypeWitness();
            swift_getAssociatedConformanceWitness();
            swift_getAssociatedTypeWitness();
            result = sub_1BE1B2EE8();
            if (v6 <= 0x3F)
            {
              swift_getAssociatedTypeWitness();
              swift_getAssociatedConformanceWitness();
              swift_getAssociatedTypeWitness();
              result = sub_1BE1B2EE8();
              if (v7 <= 0x3F)
              {
                swift_getAssociatedTypeWitness();
                swift_getAssociatedConformanceWitness();
                swift_getAssociatedTypeWitness();
                result = sub_1BE1B2EE8();
                if (v8 <= 0x3F)
                {
                  swift_getAssociatedTypeWitness();
                  swift_getAssociatedConformanceWitness();
                  swift_getAssociatedTypeWitness();
                  result = sub_1BE1B2EE8();
                  if (v9 <= 0x3F)
                  {
                    swift_getAssociatedTypeWitness();
                    swift_getAssociatedConformanceWitness();
                    swift_getAssociatedTypeWitness();
                    result = sub_1BE1B2EE8();
                    if (v10 <= 0x3F)
                    {
                      swift_initStructMetadata();
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1BE0BB250(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  size_t v5;
  size_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  int v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  int v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  int v20;
  size_t v21;
  size_t v22;
  uint64_t v23;
  int v24;
  int v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  size_t v32;
  size_t v33;
  uint64_t v34;
  int v35;
  int v36;
  size_t v37;
  size_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  int v43;
  int v44;
  size_t v45;
  size_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  uint64_t v51;
  size_t v52;
  uint64_t v53;
  uint64_t v54;
  size_t v55;
  int v56;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  uint64_t v71;
  void *v72;
  const void *v73;
  uint64_t v74;
  void *v75;
  const void *v76;
  uint64_t v77;
  void *v78;
  const void *v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  void *v84;
  const void *v85;
  void *v86;
  const void *v87;
  size_t __n;
  uint64_t v90;
  size_t v91;
  uint64_t v92;
  size_t v93;
  uint64_t v94;
  size_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t AssociatedTypeWitness;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v117;
  size_t v118;
  int v119;
  size_t v120;
  int v121;
  size_t v122;
  int v123;
  size_t v124;
  int v125;
  uint64_t v126;
  size_t v127;
  uint64_t v128;
  size_t v130;
  size_t v131;
  size_t v132;
  size_t v133;
  size_t v134;
  size_t v135;
  size_t v136;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v128 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v128 + 84))
    v2 = *(_QWORD *)(v128 + 64);
  else
    v2 = *(_QWORD *)(v128 + 64) + 1;
  v127 = v2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v109 = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(v109 - 8);
  v125 = *(_DWORD *)(v3 + 80);
  v4 = *(_DWORD *)(v3 + 84);
  v97 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  v133 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v111 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v111 - 8);
  v123 = *(_DWORD *)(v7 + 80);
  v8 = *(_DWORD *)(v7 + 84);
  v110 = v7;
  v9 = *(_QWORD *)(v7 + 64);
  if (v8)
    v10 = v9;
  else
    v10 = v9 + 1;
  v134 = v10;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v98 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v98 - 8);
  v121 = *(_DWORD *)(v11 + 80);
  v12 = *(_DWORD *)(v11 + 84);
  v112 = v11;
  v13 = *(_QWORD *)(v11 + 64);
  if (v12)
    v14 = v13;
  else
    v14 = v13 + 1;
  v135 = v14;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v99 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v99 - 8);
  v119 = *(_DWORD *)(v15 + 80);
  v16 = *(_DWORD *)(v15 + 84);
  v113 = v15;
  v17 = *(_QWORD *)(v15 + 64);
  if (v16)
    v18 = v17;
  else
    v18 = v17 + 1;
  v136 = v18;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v114 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v114 - 8);
  v117 = *(_DWORD *)(v19 + 80);
  v20 = *(_DWORD *)(v19 + 84);
  v100 = v19;
  v21 = *(_QWORD *)(v19 + 64);
  if (v20)
    v22 = v21;
  else
    v22 = v21 + 1;
  v130 = v22;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v101 = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(v101 - 8);
  v25 = *(_DWORD *)(v23 + 80);
  v24 = *(_DWORD *)(v23 + 84);
  v115 = v23;
  v26 = *(_QWORD *)(v23 + 64);
  if (v24)
    v27 = v26;
  else
    v27 = v26 + 1;
  v131 = v27;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v28 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v28 - 8);
  v31 = *(_DWORD *)(v29 + 80);
  v30 = *(_DWORD *)(v29 + 84);
  v102 = v29;
  v103 = v28;
  v32 = *(_QWORD *)(v29 + 64);
  if (v30)
    v33 = v32;
  else
    v33 = v32 + 1;
  v132 = v33;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v106 = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(v106 - 8);
  v36 = *(_DWORD *)(v34 + 80);
  v35 = *(_DWORD *)(v34 + 84);
  v104 = v34;
  v37 = *(_QWORD *)(v34 + 64);
  if (v35)
    v38 = v37;
  else
    v38 = v37 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v39 = swift_getAssociatedTypeWitness();
  v40 = v123;
  v41 = v125;
  v107 = v39;
  v42 = *(_QWORD *)(v39 - 8);
  v43 = *(_DWORD *)(v42 + 80);
  v44 = *(_DWORD *)(v42 + 84);
  v105 = v42;
  v45 = *(_QWORD *)(v42 + 64);
  if (v44)
    v46 = v45;
  else
    v46 = v45 + 1;
  v47 = v125 | *(_DWORD *)(v128 + 80) | v123 | v121 | v119 | v117 | v25 | v31 | v36 | v43;
  v48 = (v125 | *(_BYTE *)(v128 + 80) | v123 | v121 | v119 | v117 | v25 | v31 | v36 | v43);
  if (v48 > 7)
    goto LABEL_39;
  v49 = v125;
  v50 = v127 + v125;
  v51 = v123;
  v52 = v133 + v123;
  v53 = v121;
  v124 = v134 + v121;
  v54 = v119;
  v55 = v135 + v119;
  v126 = v117;
  v56 = v47 & 0x100000;
  if (v46
     + ((v38
       + v43
       + ((v132
         + v36
         + ((v131
           + v31
           + ((v130
             + v25
             + ((v136
               + v117
               + ((v55
                 + ((v124 + ((v52 + (v50 & ~(unint64_t)v41)) & ~(unint64_t)v40)) & ~(unint64_t)v121)) & ~(unint64_t)v119)) & ~(unint64_t)v117)) & ~(unint64_t)v25)) & ~(unint64_t)v31)) & ~(unint64_t)v36)) & ~(unint64_t)v43) <= 0x18
    && v56 == 0)
  {
    v90 = v25;
    v91 = v136 + v117;
    v92 = v31;
    v93 = v130 + v25;
    v94 = v36;
    v95 = v131 + v31;
    v96 = v43;
    v118 = v132 + v36;
    v120 = v38 + v43;
    v122 = v38;
    __n = v46;
    v58 = ~v49;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v128 + 48))(a2, 1, AssociatedTypeWitness))
    {
      v59 = a1;
      memcpy(a1, a2, v127);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v128 + 16))(a1, a2, AssociatedTypeWitness);
      v59 = a1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v128 + 56))(a1, 0, 1, AssociatedTypeWitness);
    }
    v62 = ~v51;
    v61 = v59;
    v63 = (void *)(((unint64_t)v59 + v50) & v58);
    v64 = (const void *)(((unint64_t)a2 + v50) & v58);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v97 + 48))(v64, 1, v109))
    {
      memcpy(v63, v64, v133);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v97 + 16))(v63, v64, v109);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v63, 0, 1, v109);
    }
    v65 = ~v53;
    v66 = (void *)(((unint64_t)v63 + v52) & v62);
    v67 = (const void *)(((unint64_t)v64 + v52) & v62);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v110 + 48))(v67, 1, v111))
    {
      memcpy(v66, v67, v134);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v110 + 16))(v66, v67, v111);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v66, 0, 1, v111);
    }
    v68 = ~v54;
    v69 = (void *)(((unint64_t)v66 + v124) & v65);
    v70 = (const void *)(((unint64_t)v67 + v124) & v65);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v112 + 48))(v70, 1, v98))
    {
      memcpy(v69, v70, v135);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v112 + 16))(v69, v70, v98);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v69, 0, 1, v98);
    }
    v71 = ~v126;
    v72 = (void *)(((unint64_t)v69 + v55) & v68);
    v73 = (const void *)(((unint64_t)v70 + v55) & v68);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48))(v73, 1, v99))
    {
      memcpy(v72, v73, v136);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v113 + 16))(v72, v73, v99);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v72, 0, 1, v99);
    }
    v74 = ~v90;
    v75 = (void *)(((unint64_t)v72 + v91) & v71);
    v76 = (const void *)(((unint64_t)v73 + v91) & v71);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v100 + 48))(v76, 1, v114))
    {
      memcpy(v75, v76, v130);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v100 + 16))(v75, v76, v114);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v75, 0, 1, v114);
    }
    v77 = ~v92;
    v78 = (void *)(((unint64_t)v75 + v93) & v74);
    v79 = (const void *)(((unint64_t)v76 + v93) & v74);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48))(v79, 1, v101))
    {
      memcpy(v78, v79, v131);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v115 + 16))(v78, v79, v101);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v78, 0, 1, v101);
    }
    v80 = ~v94;
    v81 = (void *)(((unint64_t)v78 + v95) & v77);
    v82 = (const void *)(((unint64_t)v79 + v95) & v77);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v102 + 48))(v82, 1, v103))
    {
      memcpy(v81, v82, v132);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v102 + 16))(v81, v82, v103);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v81, 0, 1, v103);
    }
    v83 = ~v96;
    v84 = (void *)(((unint64_t)v81 + v118) & v80);
    v85 = (const void *)(((unint64_t)v82 + v118) & v80);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v104 + 48))(v85, 1, v106))
    {
      memcpy(v84, v85, v122);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v104 + 16))(v84, v85, v106);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v84, 0, 1, v106);
    }
    v86 = (void *)(((unint64_t)v84 + v120) & v83);
    v87 = (const void *)(((unint64_t)v85 + v120) & v83);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v105 + 48))(v87, 1, v107))
    {
      memcpy(v86, v87, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v105 + 16))(v86, v87, v107);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v86, 0, 1, v107);
    }
  }
  else
  {
LABEL_39:
    v60 = *a2;
    *a1 = *a2;
    v61 = (uint64_t *)(v60 + ((v48 + 16) & ~v48));
    swift_retain();
  }
  return v61;
}

uint64_t sub_1BE0BBD6C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = v5 + a1;
  if (!v4)
    ++v8;
  v9 = (v8 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = *(_DWORD *)(v7 + 84);
  v11 = *(_QWORD *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v11 + v9;
  if (!v10)
    ++v14;
  v15 = (v14 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15, v12);
  v16 = *(_DWORD *)(v13 + 84);
  v17 = *(_QWORD *)(v13 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = v17 + v15;
  if (!v16)
    ++v20;
  v21 = (v20 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v18))
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v21, v18);
  v22 = *(_DWORD *)(v19 + 84);
  v23 = *(_QWORD *)(v19 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = v23 + v21;
  if (!v22)
    ++v26;
  v27 = (v26 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v24))
    (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v27, v24);
  v28 = *(_DWORD *)(v25 + 84);
  v29 = *(_QWORD *)(v25 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v30 = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = v29 + v27;
  if (!v28)
    ++v32;
  v33 = (v32 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1, v30))
    (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v33, v30);
  v34 = *(_DWORD *)(v31 + 84);
  v35 = *(_QWORD *)(v31 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v36 = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = v35 + v33;
  if (!v34)
    ++v38;
  v39 = (v38 + *(unsigned __int8 *)(v37 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v36))
    (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v39, v36);
  v40 = *(_DWORD *)(v37 + 84);
  v41 = *(_QWORD *)(v37 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v42 = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = v41 + v39;
  if (!v40)
    ++v44;
  v45 = (v44 + *(unsigned __int8 *)(v43 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v43 + 48))(v45, 1, v42))
    (*(void (**)(unint64_t, uint64_t))(v43 + 8))(v45, v42);
  v46 = *(_DWORD *)(v43 + 84);
  v47 = *(_QWORD *)(v43 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v48 = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = v47 + v45;
  if (!v46)
    ++v50;
  v51 = (v50 + *(unsigned __int8 *)(v49 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v49 + 48))(v51, 1, v48))
    (*(void (**)(unint64_t, uint64_t))(v49 + 8))(v51, v48);
  v52 = *(_DWORD *)(v49 + 84);
  v53 = *(_QWORD *)(v49 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v54 = swift_getAssociatedTypeWitness();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = v53 + v51;
  if (!v52)
    ++v56;
  v57 = (v56 + *(unsigned __int8 *)(v55 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v55 + 48))(v57, 1, v54);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v55 + 8))(v57, v54);
  return result;
}

void *sub_1BE0BC4A4(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  size_t v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  int v33;
  size_t v34;
  size_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  int v42;
  size_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  size_t v52;
  size_t v53;
  size_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  int v60;
  size_t v61;
  size_t v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  int v69;
  size_t v70;
  size_t v71;
  size_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  int v78;
  size_t v79;
  size_t v80;
  size_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const void *v86;
  size_t v87;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v14 = (const void *)(((unint64_t)a2 + v9 + v12) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
  {
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)(((unint64_t)v13 + v18 + v21) & ~v21);
  v23 = (const void *)(((unint64_t)v14 + v18 + v21) & ~v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v23, 1, v19))
  {
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
    if (v24)
      v26 = v25;
    else
      v26 = v25 + 1;
    memcpy(v22, v23, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v22, v23, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
  }
  if (v24)
    v27 = v25;
  else
    v27 = v25 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v28 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (void *)(((unint64_t)v22 + v27 + v30) & ~v30);
  v32 = (const void *)(((unint64_t)v23 + v27 + v30) & ~v30);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v32, 1, v28))
  {
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
    if (v33)
      v35 = v34;
    else
      v35 = v34 + 1;
    memcpy(v31, v32, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(v31, v32, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v28);
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
  }
  if (v33)
    v36 = v34;
  else
    v36 = v34 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v37 = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned __int8 *)(v38 + 80);
  v40 = (void *)(((unint64_t)v31 + v36 + v39) & ~v39);
  v41 = (const void *)(((unint64_t)v32 + v36 + v39) & ~v39);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v41, 1, v37))
  {
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
    if (v42)
      v44 = v43;
    else
      v44 = v43 + 1;
    memcpy(v40, v41, v44);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(v40, v41, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
  }
  if (v42)
    v45 = v43;
  else
    v45 = v43 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v46 = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (void *)(((unint64_t)v40 + v45 + v48) & ~v48);
  v50 = (const void *)(((unint64_t)v41 + v45 + v48) & ~v48);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v46))
  {
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
    if (v51)
      v53 = v52;
    else
      v53 = v52 + 1;
    memcpy(v49, v50, v53);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v49, v50, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
  }
  if (v51)
    v54 = v52;
  else
    v54 = v52 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v55 = swift_getAssociatedTypeWitness();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(unsigned __int8 *)(v56 + 80);
  v58 = (void *)(((unint64_t)v49 + v54 + v57) & ~v57);
  v59 = (const void *)(((unint64_t)v50 + v54 + v57) & ~v57);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v59, 1, v55))
  {
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
    if (v60)
      v62 = v61;
    else
      v62 = v61 + 1;
    memcpy(v58, v59, v62);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v58, v59, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v55);
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
  }
  if (v60)
    v63 = v61;
  else
    v63 = v61 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v64 = swift_getAssociatedTypeWitness();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(unsigned __int8 *)(v65 + 80);
  v67 = (void *)(((unint64_t)v58 + v63 + v66) & ~v66);
  v68 = (const void *)(((unint64_t)v59 + v63 + v66) & ~v66);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v68, 1, v64))
  {
    v69 = *(_DWORD *)(v65 + 84);
    v70 = *(_QWORD *)(v65 + 64);
    if (v69)
      v71 = v70;
    else
      v71 = v70 + 1;
    memcpy(v67, v68, v71);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 16))(v67, v68, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v64);
    v69 = *(_DWORD *)(v65 + 84);
    v70 = *(_QWORD *)(v65 + 64);
  }
  if (v69)
    v72 = v70;
  else
    v72 = v70 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v73 = swift_getAssociatedTypeWitness();
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned __int8 *)(v74 + 80);
  v76 = (void *)(((unint64_t)v67 + v72 + v75) & ~v75);
  v77 = (const void *)(((unint64_t)v68 + v72 + v75) & ~v75);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v74 + 48))(v77, 1, v73))
  {
    v78 = *(_DWORD *)(v74 + 84);
    v79 = *(_QWORD *)(v74 + 64);
    if (v78)
      v80 = v79;
    else
      v80 = v79 + 1;
    memcpy(v76, v77, v80);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v74 + 16))(v76, v77, v73);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v76, 0, 1, v73);
    v78 = *(_DWORD *)(v74 + 84);
    v79 = *(_QWORD *)(v74 + 64);
  }
  if (v78)
    v81 = v79;
  else
    v81 = v79 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v82 = swift_getAssociatedTypeWitness();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = *(unsigned __int8 *)(v83 + 80);
  v85 = (void *)(((unint64_t)v76 + v81 + v84) & ~v84);
  v86 = (const void *)(((unint64_t)v77 + v81 + v84) & ~v84);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v83 + 48))(v86, 1, v82))
  {
    if (*(_DWORD *)(v83 + 84))
      v87 = *(_QWORD *)(v83 + 64);
    else
      v87 = *(_QWORD *)(v83 + 64) + 1;
    memcpy(v85, v86, v87);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v83 + 16))(v85, v86, v82);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v82);
  }
  return a1;
}

void *sub_1BE0BCE70(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  size_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)(void *, uint64_t, uint64_t);
  int v77;
  int v78;
  size_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t (*v96)(void *, uint64_t, uint64_t);
  int v97;
  int v98;
  size_t v99;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v14, v15, v11);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_22:
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = *(_QWORD *)(v12 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)(((unint64_t)v14 + v20 + v23) & ~v23);
  v25 = (void *)(((unint64_t)v15 + v20 + v23) & ~v23);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v27 = v26(v24, 1, v21);
  v28 = v26(v25, 1, v21);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v24, v25, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v21);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v24, v25, v21);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v29 = *(_QWORD *)(v22 + 64);
  else
    v29 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v24, v25, v29);
LABEL_34:
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v31 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = (void *)(((unint64_t)v24 + v30 + v33) & ~v33);
  v35 = (void *)(((unint64_t)v25 + v30 + v33) & ~v33);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  v37 = v36(v34, 1, v31);
  v38 = v36(v35, 1, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v34, v35, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
      goto LABEL_46;
    }
  }
  else
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v34, v35, v31);
      goto LABEL_46;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v34, v31);
  }
  if (*(_DWORD *)(v32 + 84))
    v39 = *(_QWORD *)(v32 + 64);
  else
    v39 = *(_QWORD *)(v32 + 64) + 1;
  memcpy(v34, v35, v39);
LABEL_46:
  if (*(_DWORD *)(v32 + 84))
    v40 = *(_QWORD *)(v32 + 64);
  else
    v40 = *(_QWORD *)(v32 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (void *)(((unint64_t)v34 + v40 + v43) & ~v43);
  v45 = (void *)(((unint64_t)v35 + v40 + v43) & ~v43);
  v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  v47 = v46(v44, 1, v41);
  v48 = v46(v45, 1, v41);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 16))(v44, v45, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
      goto LABEL_58;
    }
  }
  else
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 24))(v44, v45, v41);
      goto LABEL_58;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v44, v41);
  }
  if (*(_DWORD *)(v42 + 84))
    v49 = *(_QWORD *)(v42 + 64);
  else
    v49 = *(_QWORD *)(v42 + 64) + 1;
  memcpy(v44, v45, v49);
LABEL_58:
  if (*(_DWORD *)(v42 + 84))
    v50 = *(_QWORD *)(v42 + 64);
  else
    v50 = *(_QWORD *)(v42 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v51 = swift_getAssociatedTypeWitness();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned __int8 *)(v52 + 80);
  v54 = (void *)(((unint64_t)v44 + v50 + v53) & ~v53);
  v55 = (void *)(((unint64_t)v45 + v50 + v53) & ~v53);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  v57 = v56(v54, 1, v51);
  v58 = v56(v55, 1, v51);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 16))(v54, v55, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      goto LABEL_70;
    }
  }
  else
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 24))(v54, v55, v51);
      goto LABEL_70;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v54, v51);
  }
  if (*(_DWORD *)(v52 + 84))
    v59 = *(_QWORD *)(v52 + 64);
  else
    v59 = *(_QWORD *)(v52 + 64) + 1;
  memcpy(v54, v55, v59);
LABEL_70:
  if (*(_DWORD *)(v52 + 84))
    v60 = *(_QWORD *)(v52 + 64);
  else
    v60 = *(_QWORD *)(v52 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v61 = swift_getAssociatedTypeWitness();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v64 = (void *)(((unint64_t)v54 + v60 + v63) & ~v63);
  v65 = (void *)(((unint64_t)v55 + v60 + v63) & ~v63);
  v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  v67 = v66(v64, 1, v61);
  v68 = v66(v65, 1, v61);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 16))(v64, v65, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v61);
      goto LABEL_82;
    }
  }
  else
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 24))(v64, v65, v61);
      goto LABEL_82;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v64, v61);
  }
  if (*(_DWORD *)(v62 + 84))
    v69 = *(_QWORD *)(v62 + 64);
  else
    v69 = *(_QWORD *)(v62 + 64) + 1;
  memcpy(v64, v65, v69);
LABEL_82:
  if (*(_DWORD *)(v62 + 84))
    v70 = *(_QWORD *)(v62 + 64);
  else
    v70 = *(_QWORD *)(v62 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v71 = swift_getAssociatedTypeWitness();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned __int8 *)(v72 + 80);
  v74 = (void *)(((unint64_t)v64 + v70 + v73) & ~v73);
  v75 = (void *)(((unint64_t)v65 + v70 + v73) & ~v73);
  v76 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
  v77 = v76(v74, 1, v71);
  v78 = v76(v75, 1, v71);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 16))(v74, v75, v71);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v71);
      goto LABEL_94;
    }
  }
  else
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 24))(v74, v75, v71);
      goto LABEL_94;
    }
    (*(void (**)(void *, uint64_t))(v72 + 8))(v74, v71);
  }
  if (*(_DWORD *)(v72 + 84))
    v79 = *(_QWORD *)(v72 + 64);
  else
    v79 = *(_QWORD *)(v72 + 64) + 1;
  memcpy(v74, v75, v79);
LABEL_94:
  if (*(_DWORD *)(v72 + 84))
    v80 = *(_QWORD *)(v72 + 64);
  else
    v80 = *(_QWORD *)(v72 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v81 = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(unsigned __int8 *)(v82 + 80);
  v84 = (void *)(((unint64_t)v74 + v80 + v83) & ~v83);
  v85 = (void *)(((unint64_t)v75 + v80 + v83) & ~v83);
  v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  v87 = v86(v84, 1, v81);
  v88 = v86(v85, 1, v81);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 16))(v84, v85, v81);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v81);
      goto LABEL_106;
    }
  }
  else
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 24))(v84, v85, v81);
      goto LABEL_106;
    }
    (*(void (**)(void *, uint64_t))(v82 + 8))(v84, v81);
  }
  if (*(_DWORD *)(v82 + 84))
    v89 = *(_QWORD *)(v82 + 64);
  else
    v89 = *(_QWORD *)(v82 + 64) + 1;
  memcpy(v84, v85, v89);
LABEL_106:
  if (*(_DWORD *)(v82 + 84))
    v90 = *(_QWORD *)(v82 + 64);
  else
    v90 = *(_QWORD *)(v82 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v91 = swift_getAssociatedTypeWitness();
  v92 = *(_QWORD *)(v91 - 8);
  v93 = *(unsigned __int8 *)(v92 + 80);
  v94 = (void *)(((unint64_t)v84 + v90 + v93) & ~v93);
  v95 = (void *)(((unint64_t)v85 + v90 + v93) & ~v93);
  v96 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v92 + 48);
  v97 = v96(v94, 1, v91);
  v98 = v96(v95, 1, v91);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(void *, void *, uint64_t))(v92 + 16))(v94, v95, v91);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v94, 0, 1, v91);
      return a1;
    }
  }
  else
  {
    if (!v98)
    {
      (*(void (**)(void *, void *, uint64_t))(v92 + 24))(v94, v95, v91);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v92 + 8))(v94, v91);
  }
  if (*(_DWORD *)(v92 + 84))
    v99 = *(_QWORD *)(v92 + 64);
  else
    v99 = *(_QWORD *)(v92 + 64) + 1;
  memcpy(v94, v95, v99);
  return a1;
}

void *sub_1BE0BDAEC(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  size_t v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  int v33;
  size_t v34;
  size_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  int v42;
  size_t v43;
  size_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  size_t v52;
  size_t v53;
  size_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  int v60;
  size_t v61;
  size_t v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  int v69;
  size_t v70;
  size_t v71;
  size_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  int v78;
  size_t v79;
  size_t v80;
  size_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const void *v86;
  size_t v87;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v14 = (const void *)(((unint64_t)a2 + v9 + v12) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
  {
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)(((unint64_t)v13 + v18 + v21) & ~v21);
  v23 = (const void *)(((unint64_t)v14 + v18 + v21) & ~v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v23, 1, v19))
  {
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
    if (v24)
      v26 = v25;
    else
      v26 = v25 + 1;
    memcpy(v22, v23, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v22, v23, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
    v24 = *(_DWORD *)(v20 + 84);
    v25 = *(_QWORD *)(v20 + 64);
  }
  if (v24)
    v27 = v25;
  else
    v27 = v25 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v28 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (void *)(((unint64_t)v22 + v27 + v30) & ~v30);
  v32 = (const void *)(((unint64_t)v23 + v27 + v30) & ~v30);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v32, 1, v28))
  {
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
    if (v33)
      v35 = v34;
    else
      v35 = v34 + 1;
    memcpy(v31, v32, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v31, v32, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v28);
    v33 = *(_DWORD *)(v29 + 84);
    v34 = *(_QWORD *)(v29 + 64);
  }
  if (v33)
    v36 = v34;
  else
    v36 = v34 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v37 = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned __int8 *)(v38 + 80);
  v40 = (void *)(((unint64_t)v31 + v36 + v39) & ~v39);
  v41 = (const void *)(((unint64_t)v32 + v36 + v39) & ~v39);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v41, 1, v37))
  {
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
    if (v42)
      v44 = v43;
    else
      v44 = v43 + 1;
    memcpy(v40, v41, v44);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v40, v41, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    v42 = *(_DWORD *)(v38 + 84);
    v43 = *(_QWORD *)(v38 + 64);
  }
  if (v42)
    v45 = v43;
  else
    v45 = v43 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v46 = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (void *)(((unint64_t)v40 + v45 + v48) & ~v48);
  v50 = (const void *)(((unint64_t)v41 + v45 + v48) & ~v48);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v46))
  {
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
    if (v51)
      v53 = v52;
    else
      v53 = v52 + 1;
    memcpy(v49, v50, v53);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v49, v50, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
    v51 = *(_DWORD *)(v47 + 84);
    v52 = *(_QWORD *)(v47 + 64);
  }
  if (v51)
    v54 = v52;
  else
    v54 = v52 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v55 = swift_getAssociatedTypeWitness();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(unsigned __int8 *)(v56 + 80);
  v58 = (void *)(((unint64_t)v49 + v54 + v57) & ~v57);
  v59 = (const void *)(((unint64_t)v50 + v54 + v57) & ~v57);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v59, 1, v55))
  {
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
    if (v60)
      v62 = v61;
    else
      v62 = v61 + 1;
    memcpy(v58, v59, v62);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v58, v59, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v55);
    v60 = *(_DWORD *)(v56 + 84);
    v61 = *(_QWORD *)(v56 + 64);
  }
  if (v60)
    v63 = v61;
  else
    v63 = v61 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v64 = swift_getAssociatedTypeWitness();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(unsigned __int8 *)(v65 + 80);
  v67 = (void *)(((unint64_t)v58 + v63 + v66) & ~v66);
  v68 = (const void *)(((unint64_t)v59 + v63 + v66) & ~v66);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v68, 1, v64))
  {
    v69 = *(_DWORD *)(v65 + 84);
    v70 = *(_QWORD *)(v65 + 64);
    if (v69)
      v71 = v70;
    else
      v71 = v70 + 1;
    memcpy(v67, v68, v71);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v67, v68, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v64);
    v69 = *(_DWORD *)(v65 + 84);
    v70 = *(_QWORD *)(v65 + 64);
  }
  if (v69)
    v72 = v70;
  else
    v72 = v70 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v73 = swift_getAssociatedTypeWitness();
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned __int8 *)(v74 + 80);
  v76 = (void *)(((unint64_t)v67 + v72 + v75) & ~v75);
  v77 = (const void *)(((unint64_t)v68 + v72 + v75) & ~v75);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v74 + 48))(v77, 1, v73))
  {
    v78 = *(_DWORD *)(v74 + 84);
    v79 = *(_QWORD *)(v74 + 64);
    if (v78)
      v80 = v79;
    else
      v80 = v79 + 1;
    memcpy(v76, v77, v80);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v74 + 32))(v76, v77, v73);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v76, 0, 1, v73);
    v78 = *(_DWORD *)(v74 + 84);
    v79 = *(_QWORD *)(v74 + 64);
  }
  if (v78)
    v81 = v79;
  else
    v81 = v79 + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v82 = swift_getAssociatedTypeWitness();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = *(unsigned __int8 *)(v83 + 80);
  v85 = (void *)(((unint64_t)v76 + v81 + v84) & ~v84);
  v86 = (const void *)(((unint64_t)v77 + v81 + v84) & ~v84);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v83 + 48))(v86, 1, v82))
  {
    if (*(_DWORD *)(v83 + 84))
      v87 = *(_QWORD *)(v83 + 64);
    else
      v87 = *(_QWORD *)(v83 + 64) + 1;
    memcpy(v85, v86, v87);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v83 + 32))(v85, v86, v82);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v82);
  }
  return a1;
}

void *sub_1BE0BE4B8(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  size_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)(void *, uint64_t, uint64_t);
  int v77;
  int v78;
  size_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t (*v96)(void *, uint64_t, uint64_t);
  int v97;
  int v98;
  size_t v99;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v14, v15, v11);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_22:
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = *(_QWORD *)(v12 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)(((unint64_t)v14 + v20 + v23) & ~v23);
  v25 = (void *)(((unint64_t)v15 + v20 + v23) & ~v23);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v27 = v26(v24, 1, v21);
  v28 = v26(v25, 1, v21);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v24, v25, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v21);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v24, v25, v21);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v29 = *(_QWORD *)(v22 + 64);
  else
    v29 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v24, v25, v29);
LABEL_34:
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v31 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = (void *)(((unint64_t)v24 + v30 + v33) & ~v33);
  v35 = (void *)(((unint64_t)v25 + v30 + v33) & ~v33);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  v37 = v36(v34, 1, v31);
  v38 = v36(v35, 1, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 32))(v34, v35, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
      goto LABEL_46;
    }
  }
  else
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 40))(v34, v35, v31);
      goto LABEL_46;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v34, v31);
  }
  if (*(_DWORD *)(v32 + 84))
    v39 = *(_QWORD *)(v32 + 64);
  else
    v39 = *(_QWORD *)(v32 + 64) + 1;
  memcpy(v34, v35, v39);
LABEL_46:
  if (*(_DWORD *)(v32 + 84))
    v40 = *(_QWORD *)(v32 + 64);
  else
    v40 = *(_QWORD *)(v32 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (void *)(((unint64_t)v34 + v40 + v43) & ~v43);
  v45 = (void *)(((unint64_t)v35 + v40 + v43) & ~v43);
  v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  v47 = v46(v44, 1, v41);
  v48 = v46(v45, 1, v41);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 32))(v44, v45, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
      goto LABEL_58;
    }
  }
  else
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 40))(v44, v45, v41);
      goto LABEL_58;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v44, v41);
  }
  if (*(_DWORD *)(v42 + 84))
    v49 = *(_QWORD *)(v42 + 64);
  else
    v49 = *(_QWORD *)(v42 + 64) + 1;
  memcpy(v44, v45, v49);
LABEL_58:
  if (*(_DWORD *)(v42 + 84))
    v50 = *(_QWORD *)(v42 + 64);
  else
    v50 = *(_QWORD *)(v42 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v51 = swift_getAssociatedTypeWitness();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned __int8 *)(v52 + 80);
  v54 = (void *)(((unint64_t)v44 + v50 + v53) & ~v53);
  v55 = (void *)(((unint64_t)v45 + v50 + v53) & ~v53);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  v57 = v56(v54, 1, v51);
  v58 = v56(v55, 1, v51);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 32))(v54, v55, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      goto LABEL_70;
    }
  }
  else
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 40))(v54, v55, v51);
      goto LABEL_70;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v54, v51);
  }
  if (*(_DWORD *)(v52 + 84))
    v59 = *(_QWORD *)(v52 + 64);
  else
    v59 = *(_QWORD *)(v52 + 64) + 1;
  memcpy(v54, v55, v59);
LABEL_70:
  if (*(_DWORD *)(v52 + 84))
    v60 = *(_QWORD *)(v52 + 64);
  else
    v60 = *(_QWORD *)(v52 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v61 = swift_getAssociatedTypeWitness();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v64 = (void *)(((unint64_t)v54 + v60 + v63) & ~v63);
  v65 = (void *)(((unint64_t)v55 + v60 + v63) & ~v63);
  v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  v67 = v66(v64, 1, v61);
  v68 = v66(v65, 1, v61);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 32))(v64, v65, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v61);
      goto LABEL_82;
    }
  }
  else
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 40))(v64, v65, v61);
      goto LABEL_82;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v64, v61);
  }
  if (*(_DWORD *)(v62 + 84))
    v69 = *(_QWORD *)(v62 + 64);
  else
    v69 = *(_QWORD *)(v62 + 64) + 1;
  memcpy(v64, v65, v69);
LABEL_82:
  if (*(_DWORD *)(v62 + 84))
    v70 = *(_QWORD *)(v62 + 64);
  else
    v70 = *(_QWORD *)(v62 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v71 = swift_getAssociatedTypeWitness();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned __int8 *)(v72 + 80);
  v74 = (void *)(((unint64_t)v64 + v70 + v73) & ~v73);
  v75 = (void *)(((unint64_t)v65 + v70 + v73) & ~v73);
  v76 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
  v77 = v76(v74, 1, v71);
  v78 = v76(v75, 1, v71);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 32))(v74, v75, v71);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v71);
      goto LABEL_94;
    }
  }
  else
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v72 + 40))(v74, v75, v71);
      goto LABEL_94;
    }
    (*(void (**)(void *, uint64_t))(v72 + 8))(v74, v71);
  }
  if (*(_DWORD *)(v72 + 84))
    v79 = *(_QWORD *)(v72 + 64);
  else
    v79 = *(_QWORD *)(v72 + 64) + 1;
  memcpy(v74, v75, v79);
LABEL_94:
  if (*(_DWORD *)(v72 + 84))
    v80 = *(_QWORD *)(v72 + 64);
  else
    v80 = *(_QWORD *)(v72 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v81 = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(unsigned __int8 *)(v82 + 80);
  v84 = (void *)(((unint64_t)v74 + v80 + v83) & ~v83);
  v85 = (void *)(((unint64_t)v75 + v80 + v83) & ~v83);
  v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  v87 = v86(v84, 1, v81);
  v88 = v86(v85, 1, v81);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 32))(v84, v85, v81);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v81);
      goto LABEL_106;
    }
  }
  else
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 40))(v84, v85, v81);
      goto LABEL_106;
    }
    (*(void (**)(void *, uint64_t))(v82 + 8))(v84, v81);
  }
  if (*(_DWORD *)(v82 + 84))
    v89 = *(_QWORD *)(v82 + 64);
  else
    v89 = *(_QWORD *)(v82 + 64) + 1;
  memcpy(v84, v85, v89);
LABEL_106:
  if (*(_DWORD *)(v82 + 84))
    v90 = *(_QWORD *)(v82 + 64);
  else
    v90 = *(_QWORD *)(v82 + 64) + 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v91 = swift_getAssociatedTypeWitness();
  v92 = *(_QWORD *)(v91 - 8);
  v93 = *(unsigned __int8 *)(v92 + 80);
  v94 = (void *)(((unint64_t)v84 + v90 + v93) & ~v93);
  v95 = (void *)(((unint64_t)v85 + v90 + v93) & ~v93);
  v96 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v92 + 48);
  v97 = v96(v94, 1, v91);
  v98 = v96(v95, 1, v91);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(void *, void *, uint64_t))(v92 + 32))(v94, v95, v91);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v94, 0, 1, v91);
      return a1;
    }
  }
  else
  {
    if (!v98)
    {
      (*(void (**)(void *, void *, uint64_t))(v92 + 40))(v94, v95, v91);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v92 + 8))(v94, v91);
  }
  if (*(_DWORD *)(v92 + 84))
    v99 = *(_QWORD *)(v92 + 64);
  else
    v99 = *(_QWORD *)(v92 + 64) + 1;
  memcpy(v94, v95, v99);
  return a1;
}

uint64_t sub_1BE0BF134(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t AssociatedTypeWitness;
  unsigned int v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  unsigned int v98;
  unsigned int v99;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v87 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v99 = *(_DWORD *)(v87 + 84);
  if (v99)
    v2 = v99 - 1;
  else
    v2 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v81 = swift_getAssociatedTypeWitness();
  v97 = *(_QWORD *)(v81 - 8);
  v98 = *(_DWORD *)(v97 + 84);
  v3 = v98 - 1;
  if (!v98)
    v3 = 0;
  v84 = v2;
  v82 = v3;
  if (v3 > v2)
    v2 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v79 = swift_getAssociatedTypeWitness();
  v95 = *(_QWORD *)(v79 - 8);
  v96 = *(_DWORD *)(v95 + 84);
  v4 = v96 - 1;
  if (!v96)
    v4 = 0;
  v80 = v4;
  if (v4 > v2)
    v2 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v77 = swift_getAssociatedTypeWitness();
  v93 = *(_QWORD *)(v77 - 8);
  v94 = *(_DWORD *)(v93 + 84);
  v5 = v94 - 1;
  if (!v94)
    v5 = 0;
  v78 = v5;
  if (v5 > v2)
    v2 = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v75 = swift_getAssociatedTypeWitness();
  v91 = *(_QWORD *)(v75 - 8);
  v92 = *(_DWORD *)(v91 + 84);
  v6 = v92 - 1;
  if (!v92)
    v6 = 0;
  v76 = v6;
  if (v6 <= v2)
    v7 = v2;
  else
    v7 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v73 = swift_getAssociatedTypeWitness();
  v86 = *(_QWORD *)(v73 - 8);
  v90 = *(_DWORD *)(v86 + 84);
  v8 = v90 - 1;
  if (!v90)
    v8 = 0;
  v74 = v8;
  if (v8 > v7)
    v7 = v8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v71 = swift_getAssociatedTypeWitness();
  v89 = *(_QWORD *)(v71 - 8);
  v9 = *(_DWORD *)(v89 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  v72 = v10;
  if (v10 > v7)
    v7 = v10;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v68 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v68 - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  v69 = v13;
  if (v13 > v7)
    v7 = v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v65 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v65 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  v16 = v15 - 1;
  if (!(_DWORD)v15)
    v16 = 0;
  v66 = v16;
  if (v16 <= v7)
    v17 = v7;
  else
    v17 = v16;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int *)(v19 + 84);
  v21 = v20 - 1;
  if (!(_DWORD)v20)
    v21 = 0;
  if (v21 <= v17)
    v21 = v17;
  if (v99)
    v22 = *(_QWORD *)(v87 + 64);
  else
    v22 = *(_QWORD *)(v87 + 64) + 1;
  if (v98)
    v23 = *(_QWORD *)(v97 + 64);
  else
    v23 = *(_QWORD *)(v97 + 64) + 1;
  v24 = *(_QWORD *)(v95 + 64);
  if (!v96)
    ++v24;
  v25 = *(_QWORD *)(v93 + 64);
  if (!v94)
    ++v25;
  v26 = *(_QWORD *)(v91 + 64);
  if (!v92)
    ++v26;
  v27 = *(_QWORD *)(v86 + 64);
  if (!v90)
    ++v27;
  v70 = v9;
  if (v9)
    v28 = *(_QWORD *)(v89 + 64);
  else
    v28 = *(_QWORD *)(v89 + 64) + 1;
  v67 = v12;
  if (v12)
    v29 = *(_QWORD *)(v11 + 64);
  else
    v29 = *(_QWORD *)(v11 + 64) + 1;
  if ((_DWORD)v15)
    v30 = *(_QWORD *)(v14 + 64);
  else
    v30 = *(_QWORD *)(v14 + 64) + 1;
  if ((_DWORD)v20)
    v31 = *(_QWORD *)(v19 + 64);
  else
    v31 = *(_QWORD *)(v19 + 64) + 1;
  if (!a2)
    return 0;
  v32 = v11;
  v33 = *(unsigned __int8 *)(v97 + 80);
  v34 = v22 + v33;
  v35 = *(unsigned __int8 *)(v95 + 80);
  v36 = *(unsigned __int8 *)(v93 + 80);
  v37 = *(unsigned __int8 *)(v91 + 80);
  v38 = v25 + v37;
  v39 = *(unsigned __int8 *)(v86 + 80);
  v40 = v26 + v39;
  v41 = *(unsigned __int8 *)(v89 + 80);
  v42 = v27 + v41;
  v43 = *(unsigned __int8 *)(v32 + 80);
  v44 = v28 + v43;
  v45 = *(unsigned __int8 *)(v14 + 80);
  v64 = v29 + v45;
  v46 = *(unsigned __int8 *)(v19 + 80);
  v63 = v30 + v46;
  if (a2 <= v21)
    goto LABEL_87;
  v47 = v31
      + ((v63
        + ((v64
          + ((v44
            + ((v42 + ((v40 + ((v38 + ((v24 + v36 + ((v23 + v35 + (v34 & ~v33)) & ~v35)) & ~v36)) & ~v37)) & ~v39)) & ~v41)) & ~v43)) & ~v45)) & ~v46);
  v48 = 8 * v47;
  if (v47 <= 3)
  {
    v50 = ((a2 - v21 + ~(-1 << v48)) >> v48) + 1;
    if (HIWORD(v50))
    {
      v49 = *(_DWORD *)(a1 + v47);
      if (!v49)
        goto LABEL_87;
      goto LABEL_78;
    }
    if (v50 > 0xFF)
    {
      v49 = *(unsigned __int16 *)(a1 + v47);
      if (!*(_WORD *)(a1 + v47))
        goto LABEL_87;
      goto LABEL_78;
    }
    if (v50 < 2)
    {
LABEL_87:
      if (v21)
      {
        if (v84 == v21)
        {
          v53 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v87 + 48))(a1, v99, AssociatedTypeWitness);
        }
        else
        {
          v54 = (v34 + a1) & ~v33;
          if (v82 == v21)
          {
            v53 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v97 + 48))(v54, v98, v81);
          }
          else
          {
            v55 = (v54 + v23 + v35) & ~v35;
            if (v80 == v21)
            {
              v53 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v95 + 48))(v55, v96, v79);
            }
            else
            {
              v56 = (v55 + v24 + v36) & ~v36;
              if (v78 == v21)
              {
                v53 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v93 + 48))(v56, v94, v77);
              }
              else
              {
                v58 = (v38 + v56) & ~v37;
                if (v76 == v21)
                {
                  v53 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v91 + 48))(v58, v92, v75);
                }
                else
                {
                  v59 = (v40 + v58) & ~v39;
                  if (v74 == v21)
                  {
                    v53 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v86 + 48))(v59, v90, v73);
                  }
                  else
                  {
                    v60 = (v42 + v59) & ~v41;
                    if (v72 == v21)
                    {
                      v53 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v89 + 48))(v60, v70, v71);
                    }
                    else
                    {
                      v61 = (v44 + v60) & ~v43;
                      if (v69 == v21)
                      {
                        v53 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v32 + 48))(v61, v67, v68);
                      }
                      else
                      {
                        v62 = (v64 + v61) & ~v45;
                        if (v66 == v21)
                          v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v62, v15, v65);
                        else
                          v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))((v63 + v62) & ~v46, v20, v18);
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if (v53 >= 2)
          return v53 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v49 = *(unsigned __int8 *)(a1 + v47);
  if (!*(_BYTE *)(a1 + v47))
    goto LABEL_87;
LABEL_78:
  v51 = (v49 - 1) << v48;
  if (v47 > 3)
    v51 = 0;
  if ((_DWORD)v47)
  {
    if (v47 <= 3)
      v52 = v47;
    else
      v52 = 4;
    __asm { BR              X12 }
  }
  return v21 + v51 + 1;
}

void sub_1BE0BFA78(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  size_t v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v53 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v54 = *(_DWORD *)(v53 + 84);
  if (v54)
    v3 = v54 - 1;
  else
    v3 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v43 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v52 = *(_DWORD *)(v43 + 84);
  v4 = v52 - 1;
  if (!v52)
    v4 = 0;
  if (v4 > v3)
    v3 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v42 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v51 = *(_DWORD *)(v42 + 84);
  v5 = v51 - 1;
  if (!v51)
    v5 = 0;
  if (v5 > v3)
    v3 = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v41 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v50 = *(_DWORD *)(v41 + 84);
  v6 = v50 - 1;
  if (!v50)
    v6 = 0;
  if (v6 > v3)
    v3 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v48 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v49 = *(_DWORD *)(v48 + 84);
  v7 = v49 - 1;
  if (!v49)
    v7 = 0;
  if (v7 <= v3)
    v8 = v3;
  else
    v8 = v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v46 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v47 = *(_DWORD *)(v46 + 84);
  v9 = v47 - 1;
  if (!v47)
    v9 = 0;
  if (v9 > v8)
    v8 = v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v45 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v45 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 > v8)
    v8 = v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v14 > v8)
    v8 = v14;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v15 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v17 = v16 - 1;
  if (!v16)
    v17 = 0;
  if (v17 <= v8)
    v18 = v8;
  else
    v18 = v17;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v19 = 0u;
  v20 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v21 = *(_DWORD *)(v20 + 84);
  v22 = v21 - 1;
  if (!v21)
    v22 = 0;
  if (v22 <= v18)
    v23 = v18;
  else
    v23 = v22;
  v24 = *(_QWORD *)(v53 + 64);
  if (!v54)
    ++v24;
  if (v52)
    v25 = *(_QWORD *)(v43 + 64);
  else
    v25 = *(_QWORD *)(v43 + 64) + 1;
  if (v51)
    v26 = *(_QWORD *)(v42 + 64);
  else
    v26 = *(_QWORD *)(v42 + 64) + 1;
  v27 = *(_QWORD *)(v41 + 64);
  if (!v50)
    ++v27;
  v28 = *(_QWORD *)(v48 + 64);
  if (!v49)
    ++v28;
  v29 = *(_QWORD *)(v46 + 64);
  if (!v47)
    ++v29;
  if (v10)
    v30 = *(_QWORD *)(v45 + 64);
  else
    v30 = *(_QWORD *)(v45 + 64) + 1;
  if (v13)
    v31 = *(_QWORD *)(v12 + 64);
  else
    v31 = *(_QWORD *)(v12 + 64) + 1;
  if (v16)
    v32 = *(_QWORD *)(v15 + 64);
  else
    v32 = *(_QWORD *)(v15 + 64) + 1;
  v33 = (v25
       + *(unsigned __int8 *)(v42 + 80)
       + ((v24 + *(unsigned __int8 *)(v43 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v34 = *(unsigned __int8 *)(v41 + 80);
  v35 = (v32
       + *(unsigned __int8 *)(v20 + 80)
       + ((v31
         + *(unsigned __int8 *)(v15 + 80)
         + ((v30
           + *(unsigned __int8 *)(v12 + 80)
           + ((v29
             + *(unsigned __int8 *)(v45 + 80)
             + ((v28
               + *(unsigned __int8 *)(v46 + 80)
               + ((v27 + *(unsigned __int8 *)(v48 + 80) + ((v26 + v34 + v33) & ~v34)) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v36 = *(_QWORD *)(v20 + 64);
  if (!v21)
    ++v36;
  v37 = v35 + v36;
  if (a3 > v23)
  {
    if (v37 <= 3)
    {
      v38 = ((a3 - v23 + ~(-1 << (8 * v37))) >> (8 * v37)) + 1;
      if (HIWORD(v38))
      {
        v19 = 4u;
      }
      else
      {
        v19 = v38 > 1;
        if (v38 >= 0x100)
          v19 = 2;
      }
    }
    else
    {
      v19 = 1u;
    }
  }
  if (v23 < a2)
  {
    v39 = ~v23 + a2;
    if (v37 < 4)
    {
      if ((_DWORD)v37)
      {
        v40 = v39 & ~(-1 << (8 * v37));
        bzero(a1, v37);
        if ((_DWORD)v37 == 3)
        {
          *(_WORD *)a1 = v40;
          a1[2] = BYTE2(v40);
        }
        else if ((_DWORD)v37 == 2)
        {
          *(_WORD *)a1 = v40;
        }
        else
        {
          *a1 = v40;
        }
      }
    }
    else
    {
      bzero(a1, v37);
      *(_DWORD *)a1 = v39;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X23 }
}

void sub_1BE0C0304()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(v2 - 96) + v0) = v1;
}

void sub_1BE0C0310()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(*(_QWORD *)(v2 - 96) + v0) = v1;
}

void sub_1BE0C031C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(*(_QWORD *)(v2 - 96) + v0) = v1;
  JUMPOUT(0x1BE0C0324);
}

void sub_1BE0C04BC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_1BE0C04F4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1BE0C04FC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1BE0C050C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

_QWORD *initializeBufferWithCopyOfBuffer for CRStructCodingKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CRStructCodingKey()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for CRStructCodingKey(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CRStructCodingKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRStructCodingKey()
{
  return &type metadata for CRStructCodingKey;
}

ValueMetadata *type metadata accessor for UnknownStruct()
{
  return &type metadata for UnknownStruct;
}

_UNKNOWN **sub_1BE0C05DC()
{
  return &off_1E7756C90;
}

unint64_t sub_1BE0C05E8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BE0C060C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BE0C060C()
{
  unint64_t result;

  result = qword_1EF52F8B8;
  if (!qword_1EF52F8B8)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C16C0, &type metadata for UnknownStruct);
    atomic_store(result, (unint64_t *)&qword_1EF52F8B8);
  }
  return result;
}

unint64_t sub_1BE0C0654()
{
  unint64_t result;

  result = qword_1EF52F8C0;
  if (!qword_1EF52F8C0)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C1714, &type metadata for CRStructCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EF52F8C0);
  }
  return result;
}

unint64_t sub_1BE0C069C()
{
  unint64_t result;

  result = qword_1EF52F8C8[0];
  if (!qword_1EF52F8C8[0])
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C173C, &type metadata for CRStructCodingKey);
    atomic_store(result, qword_1EF52F8C8);
  }
  return result;
}

uint64_t sub_1BE0C06E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(v0 + 16) + 176))(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 24));
}

ValueMetadata *type metadata accessor for UnknownStruct.MergeableDelta()
{
  return &type metadata for UnknownStruct.MergeableDelta;
}

uint64_t sub_1BE0C0724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for Capsule(319, *(_QWORD *)(a1 + 80), *(_QWORD *)(*(_QWORD *)(a1 + 96) + 16), a4);
  if (v5 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v6 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1BE0C07C8()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t **v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[3];

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v3 = MEMORY[0x1E0C80A78](v2);
  v86 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v85 = (char *)&v81 - v6;
  MEMORY[0x1E0C80A78](v5);
  v96 = (uint64_t)&v81 - v7;
  v100 = type metadata accessor for Proto_Constants(0);
  v99 = *(_QWORD *)(v100 - 8);
  v8 = MEMORY[0x1E0C80A78](v100);
  v98 = (uint64_t)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v101 = (uint64_t)&v81 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v95 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v94 = (uint64_t)&v81 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v16 = MEMORY[0x1E0C80A78](v15);
  v83 = (uint64_t)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v89 = (uint64_t)&v81 - v18;
  v102 = type metadata accessor for Proto_Document(0);
  v19 = MEMORY[0x1E0C80A78](v102);
  v84 = (uint64_t)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v90 = (uint64_t)&v81 - v21;
  v23 = type metadata accessor for Capsule(0, v1[10], *(_QWORD *)(v1[12] + 16), v22);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v81 - v25;
  v93 = type metadata accessor for Proto_Version(0);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v28 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = type metadata accessor for Peer_MergeResponse(0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v1;
  v32 = *(uint64_t **)((char *)v0 + v1[16]);
  type metadata accessor for CREncoder();
  inited = swift_initStackObject();
  v34 = MEMORY[0x1E0DEE9D8];
  v35 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(inited + 32) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(inited + 40) = v34;
  *(_QWORD *)(inited + 48) = v34;
  *(_QWORD *)(inited + 56) = v35;
  *(_QWORD *)(inited + 64) = v34;
  *(_QWORD *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 16) = v32;
  *(_QWORD *)(inited + 24) = v34;
  *(_BYTE *)(inited + 72) = 2;
  v36 = v32;
  sub_1BE1B20E4();
  v97 = v29;
  v37 = *(int *)(v29 + 20);
  if (qword_1EF52BEE8 != -1)
    swift_once();
  *(_QWORD *)&v31[v37] = qword_1EF530430;
  v38 = (*v0)[14];
  v87 = v0;
  v39 = v37;
  v40 = (char *)v0 + v38;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v26, v40, v23);
  Capsule.version.getter(v23, v105);
  v41 = *(void (**)(char *, uint64_t))(v24 + 8);
  swift_retain();
  v41(v26, v23);
  v103 = v105[0];
  v104 = v105[1];
  v91 = inited;
  sub_1BDDAD780(inited, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v82 = v39;
  v42 = *(_QWORD *)&v31[v39];
  v43 = v31;
  v44 = v42
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v45 = v44;
  v46 = v89;
  sub_1BDD86DEC(v45, v89, &qword_1EF52F950);
  v47 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48);
  if (v81(v46, 1, v47) == 1)
  {
    sub_1BDD86E30(v46, &qword_1EF52F950);
    v48 = v99;
    v49 = v102;
    v50 = v90;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v48 = v99;
    v49 = v102;
    v50 = v90;
    if (!EnumCaseMultiPayload)
    {
      sub_1BDDA2E8C(v46, v90, type metadata accessor for Proto_Document);
      v53 = v100;
      goto LABEL_10;
    }
    sub_1BDD9C3E0(v46, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  }
  sub_1BE1B20E4();
  v52 = *(int *)(v49 + 20);
  v53 = v100;
  if (qword_1ED6F3268 != -1)
    swift_once();
  *(_QWORD *)(v50 + v52) = qword_1ED6F37F0;
  swift_retain();
LABEL_10:
  v54 = v48;
  v55 = *(int *)(v49 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    v56 = swift_retain();
    *(_QWORD *)(v50 + v55) = sub_1BDDA0F18(v56);
    swift_release();
  }
  v57 = *(_QWORD *)(v50 + v55);
  v58 = v94;
  sub_1BDDA2E8C((uint64_t)v28, v94, type metadata accessor for Proto_Version);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v58, 0, 1, v93);
  v59 = v95;
  sub_1BDDA2EF0(v58, v95, &qword_1ED6F37A8);
  v60 = v57 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v59, v60, &qword_1ED6F37A8);
  swift_endAccess();
  swift_release();
  sub_1BE117158(v50);
  v61 = v96;
  sub_1BDDC90C0(v96);
  v62 = v54;
  v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  v64 = v53;
  if (v63(v61, 1, v53) == 1)
  {
    sub_1BDD86E30(v61, &qword_1ED6F3290);
    goto LABEL_24;
  }
  v65 = v101;
  sub_1BDDA2E8C(v61, v101, type metadata accessor for Proto_Constants);
  sub_1BDD9C318(v65, v98, type metadata accessor for Proto_Constants);
  v66 = *(_QWORD *)&v43[v82]
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v67 = v66;
  v68 = v83;
  sub_1BDD86DEC(v67, v83, &qword_1EF52F950);
  if (v81(v68, 1, v47) == 1)
  {
    sub_1BDD86E30(v68, &qword_1EF52F950);
    v69 = (uint64_t)v86;
    v70 = (uint64_t)v85;
    v71 = v84;
    v72 = v102;
  }
  else
  {
    v73 = swift_getEnumCaseMultiPayload();
    v69 = (uint64_t)v86;
    v70 = (uint64_t)v85;
    v72 = v102;
    if (!v73)
    {
      v71 = v84;
      sub_1BDDA2E8C(v68, v84, type metadata accessor for Proto_Document);
LABEL_21:
      v75 = *(int *)(v72 + 20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Document._StorageClass(0);
        swift_allocObject();
        v76 = swift_retain();
        *(_QWORD *)(v71 + v75) = sub_1BDDA0F18(v76);
        swift_release();
      }
      v77 = *(_QWORD *)(v71 + v75);
      sub_1BDDA2E8C(v98, v70, type metadata accessor for Proto_Constants);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v70, 0, 1, v64);
      sub_1BDDA2EF0(v70, v69, &qword_1ED6F3290);
      v78 = v77
          + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v69, v78, &qword_1ED6F3290);
      swift_endAccess();
      swift_release();
      sub_1BE117158(v71);
      sub_1BDD9C3E0(v101, type metadata accessor for Proto_Constants);
LABEL_24:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C628);
      v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_1BE1B61C0;
      *(_QWORD *)(v79 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v79 + 32) = 0xD000000000000017;
      *(_QWORD *)(v79 + 40) = 0x80000001BE1CFA90;
      sub_1BE0C5308();
      sub_1BE1B227C();
      __asm { BR              X10 }
    }
    sub_1BDD9C3E0(v68, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
    v71 = v84;
  }
  sub_1BE1B20E4();
  v74 = *(int *)(v72 + 20);
  if (qword_1ED6F3268 != -1)
    swift_once();
  *(_QWORD *)(v71 + v74) = qword_1ED6F37F0;
  swift_retain();
  goto LABEL_21;
}

void sub_1BE0C1318(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;

  v151 = *v1;
  v3 = type metadata accessor for Peer_MergeRequest(0);
  MEMORY[0x1E0C80A78](v3);
  v98 = (uint64_t)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C10);
  MEMORY[0x1E0C80A78](v5);
  v118 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Peer_RequestAssets(0);
  v115 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v116 = v9;
  v117 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v146 = (char *)&v97 - v10;
  v103 = type metadata accessor for Proto_KeyPath(0);
  v134 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v114 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v13 = MEMORY[0x1E0C80A78](v12);
  v133 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v129 = (char *)&v97 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v131 = (char *)&v97 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v128 = (char *)&v97 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v136 = (char *)&v97 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v135 = (char *)&v97 - v24;
  MEMORY[0x1E0C80A78](v23);
  v120 = (char *)&v97 - v25;
  v150 = type metadata accessor for Proto_Constants(0);
  v148 = *(_QWORD *)(v150 - 8);
  v26 = MEMORY[0x1E0C80A78](v150);
  v105 = (char *)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v113 = (char *)&v97 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v127 = (char *)&v97 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v111 = (char *)&v97 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v132 = (char *)&v97 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v126 = (char *)&v97 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v121 = (char *)&v97 - v39;
  MEMORY[0x1E0C80A78](v38);
  v109 = (char *)&v97 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v42 = MEMORY[0x1E0C80A78](v41);
  v104 = (char *)&v97 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x1E0C80A78](v42);
  v101 = (char *)&v97 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v102 = (char *)&v97 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v110 = (char *)&v97 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v130 = (char *)&v97 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v106 = (char *)&v97 - v53;
  MEMORY[0x1E0C80A78](v52);
  v119 = (char *)&v97 - v54;
  v152 = type metadata accessor for Peer_KeyPaths(0);
  v55 = MEMORY[0x1E0C80A78](v152);
  v112 = (char *)&v97 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = MEMORY[0x1E0C80A78](v55);
  v99 = (char *)&v97 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v100 = (char *)&v97 - v60;
  v61 = MEMORY[0x1E0C80A78](v59);
  v144 = (char *)&v97 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v145 = (char *)&v97 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v108 = (char *)&v97 - v66;
  MEMORY[0x1E0C80A78](v65);
  v137 = (char *)&v97 - v67;
  v149 = type metadata accessor for Peer_MergeResponse(0);
  v68 = MEMORY[0x1E0C80A78](v149);
  v138 = (char *)&v97 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = MEMORY[0x1E0C80A78](v68);
  v141 = (char *)&v97 - v71;
  MEMORY[0x1E0C80A78](v70);
  v147 = (char *)&v97 - v72;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v73);
  v124 = (char *)&v97 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Proto_Version(0);
  v122 = *(_QWORD *)(v75 - 8);
  v123 = v75;
  MEMORY[0x1E0C80A78](v75);
  v143 = (char *)&v97 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for Proto_Document(0);
  v77 = MEMORY[0x1E0C80A78](v142);
  v107 = (char *)&v97 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = MEMORY[0x1E0C80A78](v77);
  v140 = (char *)&v97 - v80;
  v81 = MEMORY[0x1E0C80A78](v79);
  v125 = (char *)&v97 - v82;
  v83 = MEMORY[0x1E0C80A78](v81);
  MEMORY[0x1E0C80A78](v83);
  v139 = (char *)&v97 - v84;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  MEMORY[0x1E0C80A78](v85);
  v87 = (char *)&v97 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  v89 = *(_QWORD *)(v88 - 8);
  v90 = MEMORY[0x1E0C80A78](v88);
  v92 = (char *)&v97 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v90);
  v94 = (char *)&v97 - v93;
  v97 = v3;
  v95 = *(_QWORD *)(a1 + *(int *)(v3 + 20))
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v95, (uint64_t)v87, &qword_1EF52F958);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88) != 1)
  {
    sub_1BDDA2E8C((uint64_t)v87, (uint64_t)v94, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    sub_1BDD9C318((uint64_t)v94, (uint64_t)v92, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    v96 = (char *)&loc_1BE0C1B48 + *((int *)qword_1BE0C3BE0 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  sub_1BDD86E30((uint64_t)v87, &qword_1EF52F958);
  sub_1BDD9C318(a1, v98, type metadata accessor for Peer_MergeRequest);
  v153 = 0;
  v154 = 0xE000000000000000;
  sub_1BE1B305C();
  sub_1BE1B284C();
  sub_1BE1B3164();
  sub_1BE1B284C();
  sub_1BE1B3200();
  __break(1u);
  JUMPOUT(0x1BE0C3A54);
}

uint64_t sub_1BE0C3C24@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];

  v6 = *a2;
  v7 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  v10 = a1[1];
  *a3 = *a1;
  a3[1] = v10;
  v12 = (char *)a2 + v6[14];
  swift_beginAccess();
  result = type metadata accessor for Capsule(0, v6[10], *(_QWORD *)(v6[12] + 16), v13);
  v15 = *(_QWORD *)&v12[*(int *)(result + 40)];
  if (!v15)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  v16 = v15 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1BDD9C318(v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PartiallyOrderedReferenceMap);
  v17 = *(_QWORD *)&v9[*(int *)(v7 + 20)];
  v18 = *(_QWORD *)(v17 + 16);
  sub_1BDDB6CA4(v11, v10);
  swift_retain();
  if (v18)
  {
    v19 = sub_1BDDB7F0C(v11, v10);
    if ((v20 & 1) != 0)
    {
      v21 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 48 * v19);
      v22 = *v21;
      v23 = v21[2];
      v24 = v21[3];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = sub_1BDD9C3E0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PartiallyOrderedReferenceMap);
      if (v22)
      {
        swift_release();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        a3[2] = v22;
        a3[3] = v23;
        a3[4] = v24;
        return result;
      }
      goto LABEL_9;
    }
  }
  sub_1BDD9C3E0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PartiallyOrderedReferenceMap);
  result = swift_release();
  a3[2] = 0;
  a3[3] = 0;
  a3[4] = 0;
  return result;
}

uint64_t sub_1BE0C3E08@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v66 = a3;
  v72 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v7 = MEMORY[0x1E0C80A78](v6);
  v65 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v64 = (uint64_t)&v61 - v9;
  v10 = type metadata accessor for Proto_CRDT(0);
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  MEMORY[0x1E0C80A78](v10);
  v73 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v71 = (uint64_t)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v70 = (uint64_t)&v61 - v15;
  v16 = type metadata accessor for Proto_Version(0);
  v68 = *(_QWORD *)(v16 - 8);
  v69 = v16;
  MEMORY[0x1E0C80A78](v16);
  v67 = (uint64_t *)((char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3790);
  v19 = MEMORY[0x1E0C80A78](v18);
  v75 = (uint64_t)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v61 - v21;
  v23 = type metadata accessor for Proto_KeyPath(0);
  v74 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (uint64_t *)((char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = *a1;
  v27 = a1[1];
  v81 = a1[2];
  v28 = a1[4];
  v76 = a1[3];
  v77 = v28;
  sub_1BE1B20E4();
  v29 = *(int *)(type metadata accessor for Proto_Reference(0) + 20);
  if (qword_1ED6EFD78 != -1)
    swift_once();
  *(_QWORD *)(a4 + v29) = qword_1ED6EFD68;
  *v25 = MEMORY[0x1E0DEE9D8];
  swift_retain();
  v30 = sub_1BE1B20CC();
  v32 = v31;
  sub_1BE1B20E4();
  sub_1BDDB6CA4(v26, v27);
  v33 = v32;
  v34 = a4;
  sub_1BDDB796C(v30, v33);
  v25[1] = v26;
  v25[2] = v27;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    v35 = swift_retain();
    *(_QWORD *)(a4 + v29) = sub_1BDDA1424(v35);
    swift_release();
  }
  v36 = *(_QWORD *)(a4 + v29);
  sub_1BDDA2E8C((uint64_t)v25, (uint64_t)v22, type metadata accessor for Proto_KeyPath);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v22, 0, 1, v23);
  v37 = (uint64_t)v22;
  v38 = v75;
  sub_1BDDA2EF0(v37, v75, &qword_1ED6F3790);
  v39 = v36 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v38, v39, &qword_1ED6F3790);
  swift_endAccess();
  swift_release();
  sub_1BDDB6CA4(v26, v27);
  v40 = v81;
  v41 = v76;
  v42 = v77;
  sub_1BE0C536C(v81);
  result = sub_1BDDB796C(v26, v27);
  if (v40)
  {
    v79 = v41;
    v80 = v42;
    v44 = v67;
    v45 = v72;
    sub_1BDDAD780(v72, v67);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Reference._StorageClass(0);
      swift_allocObject();
      v46 = swift_retain();
      *(_QWORD *)(v34 + v29) = sub_1BDDA1424(v46);
      swift_release();
    }
    v47 = *(_QWORD *)(v34 + v29);
    v48 = (uint64_t)v44;
    v49 = v70;
    sub_1BDDA2E8C(v48, v70, type metadata accessor for Proto_Version);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v49, 0, 1, v69);
    v50 = v71;
    sub_1BDDA2EF0(v49, v71, &qword_1ED6F37A8);
    v51 = v47 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v50, v51, &qword_1ED6F37A8);
    swift_endAccess();
    swift_release();
    v52 = v81;
    sub_1BE0C536C(v81);
    swift_retain();
    v53 = v73;
    v54 = v78;
    sub_1BDE1D3C4(v45, v52, v45, v73);
    if (v54)
    {
      sub_1BDD9C3E0(v34, type metadata accessor for Proto_Reference);
      result = sub_1BE0C53A4(v52);
      *v66 = v54;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Reference._StorageClass(0);
        swift_allocObject();
        v55 = swift_retain();
        *(_QWORD *)(v34 + v29) = sub_1BDDA1424(v55);
        swift_release();
      }
      v56 = *(_QWORD *)(v34 + v29);
      v57 = v53;
      v58 = v64;
      sub_1BDDA2E8C(v57, v64, type metadata accessor for Proto_CRDT);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v58, 0, 1, v63);
      v59 = v65;
      sub_1BDDA2EF0(v58, v65, &qword_1ED6F3728);
      v60 = v56 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v59, v60, &qword_1ED6F3728);
      swift_endAccess();
      swift_release();
      return sub_1BE0C53A4(v81);
    }
  }
  return result;
}

void sub_1BE0C4448(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v25 - v8;
  v28 = type metadata accessor for Peer_RespondAsset(0);
  v10 = MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v25 - v11);
  v13 = type metadata accessor for Peer_MergeResponse(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BE1B1E08();
  v26 = v17;
  v27 = v16;
  v25[1] = 0;
  v25[2] = v5;
  v25[3] = a3;
  sub_1BE1B20E4();
  v18 = *(int *)(v13 + 20);
  if (qword_1EF52BEE8 != -1)
    swift_once();
  v19 = qword_1EF530430;
  v25[0] = v18;
  *(_QWORD *)&v15[v18] = qword_1EF530430;
  v20 = *a2;
  v21 = a2[1];
  v22 = v19
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v22, (uint64_t)v9, &qword_1EF52F950);
  v23 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v9, 1, v23) == 1)
  {
    swift_retain();
    sub_1BDDB6CA4(v20, v21);
    sub_1BDD86E30((uint64_t)v9, &qword_1EF52F950);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_1BDDA2E8C((uint64_t)v9, (uint64_t)v12, type metadata accessor for Peer_RespondAsset);
      swift_retain();
      sub_1BDDB6CA4(v20, v21);
      goto LABEL_9;
    }
    swift_retain();
    sub_1BDDB6CA4(v20, v21);
    sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  }
  *v12 = sub_1BE1B20CC();
  v12[1] = v24;
  v12[2] = 0;
  sub_1BE1B20E4();
LABEL_9:
  sub_1BDDB796C(*v12, v12[1]);
  *v12 = v20;
  v12[1] = v21;
  sub_1BE1179A8((uint64_t)v12);
  __asm { BR              X9 }
}

uint64_t *sub_1BE0C4A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v4;
  v6 = (uint64_t)v4 + *(_QWORD *)(*v4 + 112);
  v7 = type metadata accessor for Capsule(0, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*(_QWORD *)(*v4 + 96) + 16), a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 88) - 8) + 8))((uint64_t)v4 + *(_QWORD *)(*v4 + 120));

  return v4;
}

uint64_t sub_1BE0C4AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BE0C4A40(a1, a2, a3, a4);
  return swift_deallocClassInstance();
}

void type metadata accessor for RemoteCapsuleSource()
{
  JUMPOUT(0x1C3B7DED0);
}

uint64_t sub_1BE0C4AF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for Proto_KeyPath(0);
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (_QWORD *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  v19[1] = v1;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1BDE227D0(0, v6, 0);
  v8 = v22;
  v9 = (unint64_t *)(a1 + 40);
  do
  {
    v10 = *(v9 - 1);
    v11 = *v9;
    v12 = v7;
    *v5 = v7;
    sub_1BDDB6CA4(v10, v11);
    v13 = sub_1BE1B20CC();
    v15 = v14;
    sub_1BE1B20E4();
    sub_1BDDB796C(v13, v15);
    v5[1] = v10;
    v5[2] = v11;
    v22 = v8;
    v17 = *(_QWORD *)(v8 + 16);
    v16 = *(_QWORD *)(v8 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1BDE227D0(v16 > 1, v17 + 1, 1);
      v8 = v22;
    }
    v9 += 2;
    *(_QWORD *)(v8 + 16) = v17 + 1;
    sub_1BDDA2E8C((uint64_t)v5, v8+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v17, type metadata accessor for Proto_KeyPath);
    --v6;
    v7 = v12;
  }
  while (v6);
  return v8;
}

uint64_t sub_1BE0C4C78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  v3 = type metadata accessor for Proto_KeyPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v10[0] = v1;
    v10[3] = MEMORY[0x1E0DEE9D8];
    sub_1BDD93E38(0, v7, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10[1] = *(_QWORD *)(v4 + 72);
    sub_1BDD9C318(v8, (uint64_t)v6, type metadata accessor for Proto_KeyPath);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BE0C4EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[5];
  uint64_t v29;

  v3 = v2;
  v24 = a2;
  v5 = type metadata accessor for Proto_Reference(0);
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BDE22634(0, v8, 0);
    v9 = v29;
    v10 = (uint64_t *)(a1 + 64);
    while (1)
    {
      v25 = v8;
      v26 = v3;
      v11 = (uint64_t)v7;
      v13 = *(v10 - 4);
      v12 = *(v10 - 3);
      v14 = *(v10 - 2);
      v15 = *(v10 - 1);
      v16 = *v10;
      v28[0] = v13;
      v28[1] = v12;
      v28[2] = v14;
      v28[3] = v15;
      v28[4] = v16;
      sub_1BDDB6CA4(v13, v12);
      sub_1BE0C536C(v14);
      v17 = v11;
      v18 = v26;
      sub_1BE0C3E08(v28, v24, &v27, v11);
      if (v18)
        break;
      v3 = 0;
      sub_1BDDB796C(v13, v12);
      sub_1BE0C53A4(v14);
      v29 = v9;
      v20 = *(_QWORD *)(v9 + 16);
      v19 = *(_QWORD *)(v9 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BDE22634(v19 > 1, v20 + 1, 1);
        v9 = v29;
      }
      v10 += 5;
      *(_QWORD *)(v9 + 16) = v20 + 1;
      v21 = v9
          + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))
          + *(_QWORD *)(v23 + 72) * v20;
      v7 = (char *)v17;
      sub_1BDDA2E8C(v17, v21, type metadata accessor for Proto_Reference);
      v8 = v25 - 1;
      if (v25 == 1)
        return v9;
    }
    sub_1BDDB796C(v13, v12);
    sub_1BE0C53A4(v14);
    swift_release();
  }
  return v9;
}

uint64_t **sub_1BE0C5088(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t **v4;
  uint64_t **v5;
  uint64_t *v9;
  char *v10;
  uint64_t v11;

  v5 = v4;
  v9 = *v5;
  *(uint64_t **)((char *)v5 + (*v5)[16]) = a1;
  v10 = (char *)v5 + (*v5)[14];
  v11 = type metadata accessor for Capsule(0, v9[10], *(_QWORD *)(v9[12] + 16), a4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a2, v11);
  swift_beginAccess();
  Capsule.finalizeTimestamps(_:)((uint64_t)a1, v11);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9[11] - 8) + 32))((char *)v5 + (*v5)[15], a3);
  return v5;
}

uint64_t **sub_1BE0C5168(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_allocObject();
  return sub_1BE0C5088(a1, a2, a3, v6);
}

uint64_t sub_1BE0C51B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for Peer_RequestAssets(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 48) & ~v2);
  sub_1BDDB796C(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

void sub_1BE0C5258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for Peer_RequestAssets(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1BE0C4448(a1, (uint64_t *)(v1 + v4), *(uint64_t **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BE0C52A8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BE0C52CC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BE0C5308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF52F960;
  if (!qword_1EF52F960)
  {
    v1 = type metadata accessor for Peer_MergeResponse(255);
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3308, v1);
    atomic_store(result, (unint64_t *)&qword_1EF52F960);
  }
  return result;
}

uint64_t sub_1BE0C5350@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t **v2;

  return sub_1BE0C3C24(a1, v2, a2);
}

uint64_t sub_1BE0C536C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BE0C53A4(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BE0C53DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  unsigned int v13;
  id v14;
  uint64_t result;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21[2];

  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1BE1B1F58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BE1B1DF0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager, v18);
  v12 = (void *)sub_1BE1B1D90();
  v21[0] = 0;
  v13 = objc_msgSend(v11, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v12, 1, 0, v21);

  if (v13)
  {
    if (v19)
    {
      v14 = v21[0];
      sub_1BE1B1F4C();
      sub_1BE1B1EF8();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_1BE1B1DA8();
      swift_bridgeObjectRelease();
      sub_1BE1B1DB4();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      v16 = v21[0];
      sub_1BE1B1F4C();
      sub_1BE1B1EF8();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_1BE1B1DA8();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v17 = v21[0];
    sub_1BE1B1D3C();

    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

id sub_1BE0C5630()
{
  id v0;
  void *v1;
  void *v2;
  unsigned int v3;
  id result;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1BE1B1D90();
  v2 = (void *)sub_1BE1B1D90();
  v6[0] = 0;
  v3 = objc_msgSend(v0, sel_copyItemAtURL_toURL_error_, v1, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1BE1B1D3C();

  swift_willThrow();
  result = (id)swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BE0C5740()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  unsigned int v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v11[2];

  v1 = v0;
  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = v0 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url;
  v4 = (void *)sub_1BE1B1D90();
  v11[0] = 0;
  v5 = objc_msgSend(v2, sel_removeItemAtURL_error_, v4, v11);

  if (v5)
  {
    v6 = v11[0];
  }
  else
  {
    v7 = v11[0];
    v8 = (void *)sub_1BE1B1D3C();

    swift_willThrow();
  }
  v9 = sub_1BE1B1DF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v3, v9);
  return v1;
}

uint64_t sub_1BE0C5858()
{
  sub_1BE0C5740();
  return swift_deallocClassInstance();
}

uint64_t CRStableAsset.url.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url;
  v4 = sub_1BE1B1DF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CRStableAsset.init(url:extension:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BE1B1DF0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  v15 = sub_1BE0C59D4((uint64_t)v14, 0, a2, a3, (uint64_t)v10);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  *a4 = v15;
  return result;
}

uint64_t sub_1BE0C59D4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  void *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  id (*v38)();
  void *v39;
  void (*v40)(uint64_t, uint64_t);
  char *v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  unsigned int v46;
  id v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t result;
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id aBlock[8];

  v55 = a3;
  v56 = a2;
  aBlock[7] = *(id *)MEMORY[0x1E0C80C00];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BE1B1DF0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v53 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v52 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v52 - v18;
  v58 = a5;
  sub_1BE0C6000(a5, (uint64_t)v10);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  v54 = v17;
  v59 = a1;
  v57 = v19;
  if (v20 == 1)
  {
    sub_1BE0C6048((uint64_t)v10);
    v21 = (void *)objc_opt_self();
    v22 = objc_msgSend(v21, sel_defaultManager);
    v23 = (void *)sub_1BE1B1D90();
    aBlock[0] = 0;
    v24 = objc_msgSend(v22, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v23, 1, aBlock);

    v25 = aBlock[0];
    if (v24)
    {
      v19 = v57;
      sub_1BE1B1DD8();
      v26 = v25;

    }
    else
    {
      v27 = aBlock[0];
      v28 = (void *)sub_1BE1B1D3C();

      swift_willThrow();
      v29 = objc_msgSend(v21, sel_defaultManager);
      v30 = objc_msgSend(v29, sel_temporaryDirectory);

      v19 = v57;
      sub_1BE1B1DD8();

    }
    v17 = v54;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v10, v11);
  }
  type metadata accessor for CRFileSnapshot();
  sub_1BE0C53DC(v55, a4, (uint64_t)v17);
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
  {
    v31 = v17;
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_init);
    v33 = (void *)sub_1BE1B1D90();
    v34 = v53;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v53, v31, v11);
    v35 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v36 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v36 + v35, v34, v11);
    v37 = (_QWORD *)swift_allocObject();
    v38 = sub_1BE0C60E8;
    v37[2] = sub_1BE0C60E8;
    v37[3] = v36;
    aBlock[4] = sub_1BDFC5BB8;
    aBlock[5] = v37;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1BDE30BE4;
    aBlock[3] = &block_descriptor_9;
    v39 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v32, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v33, 0, 0, v39);

    _Block_release(v39);
    sub_1BE0C6048(v58);
    v40 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v40(v59, v11);
    v40((uint64_t)v57, v11);
    LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v40 & 1) != 0)
      __break(1u);
    v17 = v54;
    goto LABEL_12;
  }
  v41 = v19;
  v42 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v43 = v59;
  v44 = (void *)sub_1BE1B1D90();
  v45 = (void *)sub_1BE1B1D90();
  aBlock[0] = 0;
  v46 = objc_msgSend(v42, sel_copyItemAtURL_toURL_error_, v44, v45, aBlock);

  if (v46)
  {
    v47 = aBlock[0];
    sub_1BE0C6048(v58);
    v48 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v48(v43, v11);
    v48((uint64_t)v41, v11);
    v38 = 0;
LABEL_12:
    v49 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v49 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url, v17, v11);
    sub_1BDE0D5B8((uint64_t)v38);
    return v49;
  }
  v51 = aBlock[0];
  sub_1BE1B1D3C();

  swift_willThrow();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BE0C5F40()
{
  return type metadata accessor for CRFileSnapshot();
}

uint64_t type metadata accessor for CRFileSnapshot()
{
  uint64_t result;

  result = qword_1ED6EE6A0;
  if (!qword_1ED6EE6A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BE0C5F84()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BE1B1DF0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRStableAsset()
{
  return &type metadata for CRStableAsset;
}

uint64_t sub_1BE0C6000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE0C6048(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BE0C6088()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BE1B1DF0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

id sub_1BE0C60E8()
{
  sub_1BE1B1DF0();
  return sub_1BE0C5630();
}

uint64_t sub_1BE0C6124()
{
  return swift_deallocObject();
}

uint64_t sub_1BE0C6134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  id v16;
  uint64_t v17;

  v10 = sub_1BE0C8EA8(a1, a2, 0, a3, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3900);
  type metadata accessor for CRSequenceStorage(0, a3, a4, v11);
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v13 = sub_1BE0CC9C0((uint64_t)v10);
  if (v5)
  {
    swift_release();

    return sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
  }
  else
  {
    v16 = v13;
    type metadata accessor for CRSequenceRef(0, a3, a4, v14);
    v17 = swift_allocObject();
    sub_1BE1B1F4C();
    *(_QWORD *)(v17 + qword_1ED6F8B80) = v16;

    swift_release();
    result = sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
    *a5 = v17;
  }
  return result;
}

void sub_1BE0C6268(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  id v7;
  id v8;
  unsigned int v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13[4];

  v13[3] = *(id *)MEMORY[0x1E0C80C00];
  v6 = *v3;
  v7 = sub_1BE0CC1E4(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  if (v6)
  {
    v8 = objc_msgSend(*(id *)(v6 + qword_1ED6F8B80), sel_fullyRenamed_, *(_QWORD *)(a1 + 16));
    v13[0] = 0;
    v9 = objc_msgSend(v8, sel_saveToEncoder_error_, v7, v13);

    if (!v9)
    {
      v12 = v13[0];
      sub_1BE1B1D3C();

      swift_willThrow();
      goto LABEL_6;
    }
    v10 = v13[0];
  }
  v11 = (uint64_t)v7 + OBJC_IVAR____TtC9Coherence15CRStringEncoder_sequence;
  swift_beginAccess();
  sub_1BDD9C318(v11, a3, type metadata accessor for Proto_Sequence);
LABEL_6:

}

void CRSequence.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t CRSequence.merge(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *a1;
  return sub_1BE0CAB00(&v3, 0, a2);
}

id CRSequence.count.getter()
{
  _QWORD *v0;

  if (*v0)
    return sub_1BE0C9C10();
  else
    return 0;
}

uint64_t sub_1BE0C6404()
{
  _QWORD *v0;
  char *v1;
  char *v2;
  uint64_t v3;

  if (!*v0)
    return sub_1BE1B29D8();
  v1 = (char *)sub_1BE0C8FF4();
  v2 = &v1[qword_1EF52F968];
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  swift_bridgeObjectRetain();

  return v3;
}

Swift::Void __swiftcall CRSequence.remove(at:)(Swift::Int at)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1BE0C6554(v1, v1, v2, v3);
  if (*v4)
    objc_msgSend(*(id *)(*v4 + qword_1ED6F8B80), sel_removeObjectsInRange_, at, 1);
  else
    __break(1u);
}

Swift::Bool __swiftcall CRSequence.needToFinalizeTimestamps()()
{
  _QWORD *v0;

  if (*v0)
    return sub_1BE0C9620() & 1;
  else
    return 0;
}

uint64_t CRSequence.finalizeTimestamps(_:)(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*v2)
  {
    v4 = result;
    result = sub_1BE0C9620();
    if ((result & 1) != 0)
    {
      result = sub_1BE0C6554(a2, v5, v6, v7);
      if (*v2)
        return sub_1BE0C9728(v4);
      else
        __break(1u);
    }
  }
  return result;
}

uint64_t sub_1BE0C6554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v5 = v4;
  type metadata accessor for CRSequenceRef(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  result = sub_1BE1B3464();
  if ((result & 1) == 0)
  {
    v7 = *v4;
    v8 = swift_allocObject();
    result = (uint64_t)sub_1BE0C8B24(v7);
    *v5 = v8;
  }
  return result;
}

uint64_t sub_1BE0C65BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3CD0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1)
  {
    v6 = *v1 + qword_1ED6F8B78;
    v7 = sub_1BE1B1F58();
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  }
  else
  {
    v10 = sub_1BE1B1F58();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_1BE1B1F4C();
  return sub_1BDD86E30((uint64_t)v5, &qword_1ED6F3CD0);
}

uint64_t CRSequence.append(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t result;

  result = sub_1BE0C6554(a2, a2, a3, a4);
  if (*v4)
    return sub_1BE0C905C(a1);
  __break(1u);
  return result;
}

uint64_t sub_1BE0C671C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = a1;
  v24 = a2;
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = sub_1BE1B2EE8();
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v26 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - v13;
  v29 = *v3;
  MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSequence<A>, a3);
  sub_1BE1B28B8();
  v29 = v30;
  sub_1BE1B3230();
  sub_1BE1B320C();
  v25 = sub_1BE1B3224();
  v15 = v21;
  while (1)
  {
    v16 = v26;
    sub_1BE1B3218();
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v14, v16, v28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)break;
    v17 = *(_QWORD *)v14;
    v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, &v14[*(int *)(TupleTypeMetadata2 + 48)], v22);
    v19 = v23(v7);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v18);
    if (v4 || (v19 & 1) != 0)
      goto LABEL_7;
  }
  v17 = 0;
LABEL_7:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t CRSequence.insert(_:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t result;

  result = sub_1BE0C6554(a3, a2, a3, a4);
  if (*v4)
    return sub_1BE0C9D40(a1, a2);
  __break(1u);
  return result;
}

uint64_t CRSequence.subscript.getter()
{
  _QWORD *v0;
  uint64_t result;

  if (*v0)
  {
    swift_retain();
    sub_1BE0C9C68();
    return swift_release();
  }
  else
  {
    result = sub_1BE1B3200();
    __break(1u);
  }
  return result;
}

id CRSequence.removeSubrange(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  id result;

  result = (id)sub_1BE0C6554(a3, a2, a3, a4);
  if (*v4)
  {
    if (!__OFSUB__(a2, a1))
      return objc_msgSend(*(id *)(*v4 + qword_1ED6F8B80), sel_removeObjectsInRange_, a1, a2 - a1);
    __break(1u);
  }
  __break(1u);
  return result;
}

void CRSequence.replaceSubrange<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  sub_1BE0C6554(a4, a2, a3, a4);
  if (*v5)
    sub_1BE0CA138(a1, a2, a3, a5);
  else
    __break(1u);
}

uint64_t CRSequence.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BE0C6404();
  *a1 = result;
  a1[1] = 0;
  return result;
}

uint64_t CRSequence.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *v2;
  v4 = v2[1];
  v6 = *(_QWORD *)(a1 + 16);
  if (v4 == MEMORY[0x1C3B7C928](*v2, v6))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 1, 1, v6);
  v8 = sub_1BE1B29FC();
  sub_1BE1B29A8();
  if ((v8 & 1) != 0)
  {
    v9 = *(_QWORD *)(v6 - 8);
    result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(a2, v5+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v4, v6);
    v10 = v4 + 1;
    if (!__OFADD__(v4, 1))
    {
LABEL_5:
      v2[1] = v10;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v6);
    }
    goto LABEL_9;
  }
  result = sub_1BE1B30BC();
  v9 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v9 + 64) == 8)
  {
    v11 = result;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v9 + 16))(a2, &v11, v6);
    result = swift_unknownObjectRelease();
    v10 = v4 + 1;
    if (!__OFADD__(v4, 1))
      goto LABEL_5;
LABEL_9:
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_1BE0C6C7C(_QWORD *a1)
{
  _QWORD *v1;
  BOOL v2;

  if (*v1)
    v2 = *a1 == 0;
  else
    v2 = 1;
  if (v2)
    return (*v1 | *a1) == 0;
  else
    return *v1 == *a1;
}

uint64_t CRSequence.observableDifference(from:with:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *(_QWORD *)result;
  v7 = *v3;
  if (*v3)
  {
    if (v6)
    {
      if (v7 == v6)
        goto LABEL_15;
    }
    else
    {
      swift_retain();
    }
  }
  else
  {
    swift_retain();
    if (!v6)
    {
      result = swift_retain();
      v8 = 0;
      goto LABEL_16;
    }
  }
  result = CRSequence.isEmpty.getter();
  if ((result & 1) != 0)
  {
    result = CRSequence.isEmpty.getter();
    if ((result & 1) != 0)
      goto LABEL_15;
  }
  if (v6)
  {
    if (v7)
    {
      swift_retain();
      swift_retain();
      v9 = sub_1BE0C989C(v7);
      type metadata accessor for _NSRange(255);
      type metadata accessor for CRSequenceStorage(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v10);
      sub_1BE1B2EE8();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      if (MEMORY[0x1C3B7C8EC](v9, TupleTypeMetadata3) < 1)
      {
        swift_bridgeObjectRelease();
        swift_release();
        result = swift_release();
        v8 = 0;
      }
      else
      {
        swift_getTupleTypeMetadata3();
        v8 = sub_1BE1B3158();
        swift_bridgeObjectRelease();
        swift_release();
        result = swift_release();
      }
      goto LABEL_16;
    }
LABEL_15:
    v8 = 0;
    goto LABEL_16;
  }
  result = CRSequence.isEmpty.getter();
  if ((result & 1) != 0)
    goto LABEL_15;
  type metadata accessor for _NSRange(255);
  type metadata accessor for CRSequenceStorage(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v12);
  sub_1BE1B2EE8();
  swift_getTupleTypeMetadata3();
  sub_1BE1B32F0();
  swift_allocObject();
  v8 = sub_1BE1B299C();
  v14 = v13;
  *v13 = 0;
  v13[1] = 0;
  if (v7)
  {
    v13[2] = sub_1BE0C9C10();
    v15 = sub_1BE0C8FF4();
  }
  else
  {
    v15 = 0;
    v13[2] = 0;
  }
  v14[3] = v15;
  result = v8;
  sub_1BDE79568();
LABEL_16:
  *a3 = v8;
  return result;
}

unint64_t CRSequence.hasDelta(from:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  v2 = *a1;
  v3 = *v1;
  if (v3)
  {
    if (v2)
    {
      if (v3 == v2)
        return 0;
    }
    else
    {
      swift_retain();
    }
    v4 = objc_msgSend(*(id *)(v3 + qword_1ED6F8B80), sel_isEmptyCRDT) ^ 1;
    if (!v2)
      return v4;
  }
  else
  {
    swift_retain();
    if (!v2)
    {
      swift_retain();
      return 0;
    }
    v4 = 0;
  }
  result = (unint64_t)objc_msgSend(*(id *)(v2 + qword_1ED6F8B80), sel_isEmptyCRDT);
  if (!(_DWORD)v4 || (result & 1) != 0)
    return v4;
  if (v3)
    return (unint64_t)sub_1BE0C9BAC(v2) & 1;
  __break(1u);
  return result;
}

void CRSequence.actionUndoingDifference(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  if (*v2)
  {
    v4 = *(void **)(*v2 + qword_1ED6F8B80);
    if (*a1)
    {
      v5 = *(void **)(*a1 + qword_1ED6F8B80);
      objc_opt_self();
      v6 = (void *)swift_dynamicCastObjCClass();
      if (v6)
        v7 = v5;
    }
    else
    {
      v6 = 0;
    }
    v9 = v4;
    v8 = objc_msgSend(v9, sel_undoCommandToChangeFrom_unedited_, v6, 0);

  }
  else
  {
    v8 = 0;
  }
  *a2 = v8;
}

uint64_t sub_1BE0C7084(id *a1, uint64_t a2)
{
  _QWORD *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  id v10;

  if (!*a1)
    return 1;
  v4 = *a1;
  sub_1BE0C6554(a2, v5, v6, v7);
  objc_opt_self();
  result = swift_dynamicCastObjCClassUnconditional();
  if (*v2)
  {
    v9 = (void *)result;
    objc_opt_self();
    v10 = objc_msgSend(v9, sel_applyToString_, swift_dynamicCastObjCClassUnconditional());

    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE0C714C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a5;
  v22 = a4;
  v11 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + *(int *)(v11 + 20))
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v17, (uint64_t)v16, &qword_1ED6F37A8);
  v18 = type metadata accessor for Proto_Version(0);
  LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v16, 1, v18);
  sub_1BDD86E30((uint64_t)v16, &qword_1ED6F37A8);
  if ((_DWORD)v17 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
    *a6 = 0;
  }
  else
  {
    type metadata accessor for CRSequenceRef(0, v22, v23, v19);
    sub_1BDD9C318(a1, (uint64_t)v13, type metadata accessor for Proto_Sequence);
    v21 = swift_allocObject();
    sub_1BE0C8D48((uint64_t)v13, a2, a3);
    result = sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
    if (!v6)
      *a6 = v21;
  }
  return result;
}

void sub_1BE0C732C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  id v6;
  id v7;
  unsigned int v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12[4];

  v12[3] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *v2;
  v6 = sub_1BE0CC370();
  if (v5)
  {
    v7 = objc_msgSend(*(id *)(v5 + qword_1ED6F8B80), sel_fullyRenamed_, *(_QWORD *)(a1 + 16));
    v12[0] = 0;
    v8 = objc_msgSend(v7, sel_saveToEncoder_error_, v6, v12);

    if (!v8)
    {
      v11 = v12[0];
      sub_1BE1B1D3C();

      swift_willThrow();
      goto LABEL_6;
    }
    v9 = v12[0];
  }
  v10 = (uint64_t)v6 + OBJC_IVAR____TtC9Coherence15CRStringEncoder_sequence;
  swift_beginAccess();
  sub_1BDD9C318(v10, a2, type metadata accessor for Proto_Sequence);
LABEL_6:

}

uint64_t sub_1BE0C745C(void (*a1)(char *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a1;
  v31 = a2;
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v4);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v15 = *v2;
  if (!*v2)
    return sub_1BE1B29D8();
  v29 = (char *)&v24 - v13;
  v25 = v14;
  swift_retain();
  v33 = sub_1BE1B2588();
  sub_1BE0C9C10();
  v28 = sub_1BE1B2A5C();
  sub_1BE1B29C0();
  v26 = v15;
  v16 = (char *)sub_1BE0C8FF4();
  v17 = &v16[qword_1EF52F968];
  swift_beginAccess();
  v18 = *(_QWORD *)v17;
  swift_bridgeObjectRetain();

  if (!MEMORY[0x1C3B7C928](v18, v8))
  {
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    return v33;
  }
  v27 = v6;
  v19 = 0;
  while (1)
  {
    v20 = sub_1BE1B29FC();
    sub_1BE1B29A8();
    if ((v20 & 1) != 0)
    {
      v21 = v29;
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v29, v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v19, v8);
      v22 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_12;
      goto LABEL_6;
    }
    result = sub_1BE1B30BC();
    v21 = v29;
    if (v25 != 8)
      break;
    v32 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 16))(v29, &v32, v8);
    swift_unknownObjectRelease();
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v21, v8);
    v30(v12);
    if (v3)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1BE1B2A20();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    ++v19;
    if (v22 == MEMORY[0x1C3B7C928](v18, v8))
      goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE0C773C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1EF52F968);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

id sub_1BE0C778C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  objc_class *v5;
  objc_super v7;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = *(_QWORD *)(v1 + 0x50);
  v3 = v0;
  *(_QWORD *)((char *)v3 + qword_1EF52F968) = sub_1BE1B2588();

  v5 = (objc_class *)type metadata accessor for CRSequenceStorage(0, v2, *(_QWORD *)(v1 + 88), v4);
  v7.receiver = v3;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1BE0C7810()
{
  return sub_1BE0C778C();
}

id sub_1BE0C7830(uint64_t a1)
{
  objc_class *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_allocWithZone(v1);
  return sub_1BE0C7860(a1, v4, v5, v6);
}

id sub_1BE0C7860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  objc_class *v6;
  objc_super v8;

  v5 = *MEMORY[0x1E0DEEDD8] & *v4;
  *(_QWORD *)((char *)v4 + qword_1EF52F968) = a1;
  v6 = (objc_class *)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), a4);
  v8.receiver = v4;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t sub_1BE0C78B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 80);
  v3 = swift_bridgeObjectRetain();
  MEMORY[0x1C3B7C868](v3, v2);
  swift_bridgeObjectRelease();
  v4 = sub_1BE1B27A4();
  swift_bridgeObjectRelease();
  return v4;
}

id sub_1BE0C7958(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)sub_1BE0C78B8();

  return v2;
}

uint64_t sub_1BE0C7988(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_1BE0C79B8();

  return v2;
}

uint64_t sub_1BE0C79B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 80);
  v3 = swift_bridgeObjectRetain();
  v4 = MEMORY[0x1C3B7C8EC](v3, v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BE0C7A3C(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (__OFADD__(result, a2))
  {
    __break(1u);
  }
  else if (result + a2 >= result)
  {
    swift_beginAccess();
    v2 = sub_1BE1B2A5C();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF58], v2);
    sub_1BE1B2D38();
    return swift_endAccess();
  }
  __break(1u);
  return result;
}

void sub_1BE0C7AE4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;

  v6 = a1;
  sub_1BE0C7A3C(a3, a4);

}

uint64_t sub_1BE0C7B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  type metadata accessor for CRSequenceStorage(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_beginAccess();
  v5 = sub_1BE1B2A5C();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF58], v5);
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF50], v5);
  sub_1BE1B2D5C();
  return swift_endAccess();
}

void sub_1BE0C7C44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;

  swift_unknownObjectRetain();
  v8 = a1;
  sub_1BE0C7B2C(a3, a4, (uint64_t)v8, v7);
  swift_unknownObjectRelease();

}

uint64_t sub_1BE0C7CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t result;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for CRSequenceStorage(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  result = swift_dynamicCastClassUnconditional();
  v8 = __OFADD__(a2, a3);
  v9 = a2 + a3;
  if (v8)
  {
    __break(1u);
  }
  else if (v9 >= a2)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BE1B2A80();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1BE1B2A5C();
    v10 = sub_1BE1B2F48();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEBF78], v10);
    sub_1BE1B2A14();
    return swift_endAccess();
  }
  __break(1u);
  return result;
}

void sub_1BE0C7E08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;

  swift_unknownObjectRetain();
  v9 = a1;
  sub_1BE0C7CA8(a3, a4, a5, (uint64_t)v9);
  swift_unknownObjectRelease();

}

uint64_t sub_1BE0C7E74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  if (__OFADD__(result, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result + a2 < result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  type metadata accessor for CRSequenceStorage(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0x58), a4);
  result = swift_dynamicCastClassUnconditional();
  v8 = __OFADD__(a4, a5);
  v9 = a4 + a5;
  if (v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v9 >= a4)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BE1B2A80();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1BE1B2A5C();
    v10 = sub_1BE1B2F48();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEBF88], v10);
    sub_1BE1B29B4();
    return swift_endAccess();
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1BE0C8000(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13;

  swift_unknownObjectRetain();
  v13 = a1;
  sub_1BE0C7E74(a3, a4, a5, a6, a7);
  swift_unknownObjectRelease();

}

char *sub_1BE0C8084@<X0>(char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char **a4@<X8>)
{
  _QWORD *v4;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  if (__OFADD__(result, a2))
  {
    __break(1u);
  }
  else if ((uint64_t)&result[a2] >= (uint64_t)result)
  {
    v6 = (objc_class *)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a3);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BE1B2A80();
    swift_bridgeObjectRelease();
    v7 = sub_1BE1B2F48();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEBF78], v7);
    v8 = sub_1BE1B2A74();
    v9 = objc_allocWithZone(v6);
    result = (char *)sub_1BE0C7860(v8, (uint64_t)v9, v10, v11);
    a4[3] = (char *)v6;
    *a4 = result;
    return result;
  }
  __break(1u);
  return result;
}

id sub_1BE0C81BC(void *a1, uint64_t a2, char *a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  void *v8;
  char *v10[4];

  v6 = a1;
  sub_1BE0C8084(a3, a4, v7, v10);

  __swift_project_boxed_opaque_existential_1(v10, (uint64_t)v10[3]);
  v8 = (void *)sub_1BE1B34A0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

void sub_1BE0C8238(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = type metadata accessor for CRSequenceStorage(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x58), a1);
  v5 = v2;
  v9 = sub_1BE0CCEEC((uint64_t)v5, v6, v7, v8);

  a2[3] = v4;
  *a2 = v9;
}

uint64_t sub_1BE0C82A0(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v1 = a1;
  sub_1BE0C8238(v2, v5);

  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3 = sub_1BE1B34A0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

id sub_1BE0C82FC@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  objc_class *v4;
  id result;

  v4 = (objc_class *)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x58), a1);
  result = objc_msgSend(objc_allocWithZone(v4), sel_init);
  a2[3] = v4;
  *a2 = result;
  return result;
}

id sub_1BE0C8354(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  _QWORD v5[4];

  v1 = a1;
  sub_1BE0C82FC(v2, v5);

  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3 = (void *)sub_1BE1B34A0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

id sub_1BE0C83B0(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  sub_1BE0C8404();

  v2 = (void *)sub_1BE1B27A4();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BE0C8404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  uint64_t v9;
  unint64_t v10;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = (_QWORD *)((char *)v0 + qword_1EF52F968);
  swift_beginAccess();
  v9 = *v2;
  v8[1] = *(_OWORD *)(v1 + 80);
  v3 = sub_1BE1B2A5C();
  swift_bridgeObjectRetain();
  v4 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF50], v3);
  v6 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0CD040, (uint64_t)v8, v3, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v4, MEMORY[0x1E0DEDD18], v5);
  swift_bridgeObjectRelease();
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF525500);
  sub_1BDDA9D60((unint64_t *)&qword_1EF525508, &qword_1EF525500, MEMORY[0x1E0DEAF20]);
  sub_1BE1B2708();
  swift_bridgeObjectRelease();
  v9 = 91;
  v10 = 0xE100000000000000;
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1BE0C8584@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EF500);
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
    v5 = sub_1BE1B32E4();
    v7 = v6;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    result = sub_1BDD86E30((uint64_t)&v9, (uint64_t *)&unk_1EF52D8C8);
    v7 = 0xE100000000000000;
    v5 = 63;
  }
  *a2 = v5;
  a2[1] = v7;
  return result;
}

id sub_1BE0C8688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1BE0C86D4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0C86E4()
{
  char v0;

  swift_beginAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_1BE1B2A68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1BE0C87B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v11 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD9C318(a1, (uint64_t)v13, v14);
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  v15 = sub_1BDDB4FC0((uint64_t)v13, a2);
  swift_release();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a4 + 8) + 8) + 8))(v15, a3);
  if (v5)
    *a5 = v5;
  return result;
}

uint64_t sub_1BE0C88B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];
  uint64_t v12;
  _QWORD v13[6];

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = (_QWORD *)((char *)v1 + qword_1EF52F968);
  swift_beginAccess();
  v13[5] = *v4;
  v11[1] = *(_OWORD *)(v3 + 80);
  v12 = a1;
  v5 = sub_1BE1B2A5C();
  v6 = (char *)type metadata accessor for Proto_Value(0);
  swift_bridgeObjectRetain();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
  v8 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF50], v5);
  v9 = sub_1BDF016D0((void (*)(char *, char *))sub_1BDF034EC, (uint64_t)v11, v5, v6, v7, v8, MEMORY[0x1E0DEDB38], (uint64_t)v13);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1BE0C89CC()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1BE0C8A00();
  return v0;
}

_QWORD *sub_1BE0C8A00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  id v9;
  _QWORD v11[4];

  v1 = v0;
  v2 = *v0;
  v3 = sub_1BE1B1F58();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B1F4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3900);
  v7 = (objc_class *)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v6);
  v8 = objc_msgSend(objc_allocWithZone(v7), sel_init);
  v11[3] = v7;
  v11[0] = v8;
  sub_1BE1B1F4C();
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)((char *)v1 + qword_1ED6F8B80) = sub_1BE0CC84C(v11, (uint64_t)v5);
  return v1;
}

uint64_t sub_1BE0C8AE8(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BE0C8B24(a1);
  return v2;
}

_QWORD *sub_1BE0C8B24(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  id v12;
  _QWORD v14[2];
  _QWORD v15[4];

  v2 = v1;
  v4 = *v1;
  v5 = sub_1BE1B1F58();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B1F4C();
  if (a1)
  {
    v8 = *(void **)(a1 + qword_1ED6F8B80);
    swift_retain();
    objc_msgSend(v8, sel_copy);
    sub_1BE1B2F3C();
    swift_unknownObjectRelease();
    swift_release_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3900);
    swift_dynamicCast();
    *(_QWORD *)((char *)v2 + qword_1ED6F8B80) = v14[1];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3900);
    v10 = (objc_class *)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v9);
    v11 = objc_msgSend(objc_allocWithZone(v10), sel_init);
    v15[3] = v10;
    v15[0] = v11;
    sub_1BE1B1F4C();
    v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    *(_QWORD *)((char *)v2 + qword_1ED6F8B80) = sub_1BE0CC84C(v15, (uint64_t)v7);
  }
  return v2;
}

uint64_t sub_1BE0C8C94(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BE1B1F4C();
  *(_QWORD *)(v2 + qword_1ED6F8B80) = a1;
  return v2;
}

uint64_t sub_1BE0C8CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_1BE0C8D48(a1, a2, a3);
  return v6;
}

uint64_t *sub_1BE0C8D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;

  v5 = v3;
  v9 = *v5;
  v19 = (char *)v5 + qword_1ED6F8B78;
  sub_1BE1B1F4C();
  v11 = *(_QWORD *)(v9 + 80);
  v10 = *(_QWORD *)(v9 + 88);
  v12 = sub_1BE0C8EA8(a1, a3, a2, v11, v10);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3900);
  type metadata accessor for CRSequenceStorage(0, v11, v10, v13);
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v15 = sub_1BE0CC9C0((uint64_t)v12);
  if (v4)
  {
    swift_release();

    sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
    v16 = sub_1BE1B1F58();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v19, v16);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = (uint64_t)v15;
    swift_release();

    sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
    *(uint64_t *)((char *)v5 + qword_1ED6F8B80) = v17;
  }
  return v5;
}

id sub_1BE0C8EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v17;

  v10 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD9C318(a1, (uint64_t)v12, type metadata accessor for Proto_Sequence);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a4;
  v13[3] = a5;
  if (a3)
  {
    v13[4] = a3;
    objc_allocWithZone((Class)type metadata accessor for CRSequenceDecoder(0));
    swift_bridgeObjectRetain();
    swift_retain();
    v14 = sub_1BE0CCD14;
  }
  else
  {
    v13[4] = a2;
    objc_allocWithZone((Class)type metadata accessor for CRSequenceDecoder(0));
    swift_retain_n();
    v14 = sub_1BE0CCCD4;
  }
  v15 = sub_1BDF0D9A0((uint64_t)v12, a2, (uint64_t)v14, (uint64_t)v13);
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1BE0C8FF4()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = *v0;
  v2 = objc_msgSend(*(id *)((char *)v0 + qword_1ED6F8B80), sel_attributedString);
  type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v3);
  return swift_dynamicCastClassUnconditional();
}

uint64_t sub_1BE0C905C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  _QWORD aBlock[6];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v7 = *(id *)((char *)v1 + qword_1ED6F8B80);
  v8 = objc_msgSend(v7, sel_length);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v4;
  *(_QWORD *)(v10 + 24) = *(_QWORD *)(v3 + 88);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BE0CD128;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1BE0CD270;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDDFD740;
  aBlock[3] = &block_descriptor_52;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_insertAtIndex_length_getStorage_, v8, 1, v12);

  _Block_release(v12);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v7 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1BE0C9230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t result;
  _QWORD aBlock[6];

  v6 = *v3;
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v8 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(v6 + 80);
  v10 = sub_1BE1B2A74();
  v11 = *(id *)((char *)v3 + qword_1ED6F8B80);
  v12 = objc_msgSend(v11, sel_length);
  v13 = MEMORY[0x1C3B7C8EC](v10, v9);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v9;
  v14[3] = a2;
  v14[4] = *(_QWORD *)(v6 + 88);
  v14[5] = a3;
  v14[6] = v10;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1BE0CD084;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_1BE0CD270;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDDFD740;
  aBlock[3] = &block_descriptor_23;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_insertAtIndex_length_getStorage_, v12, v13, v16);

  _Block_release(v16);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1BE0C9414(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  char v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v20 = v6;
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)((char *)v1 + qword_1ED6F8B80), sel_attributedString);
  v9 = *(_QWORD *)(v3 + 88);
  type metadata accessor for CRSequenceStorage(0, v4, v9, v10);
  v11 = (uint64_t *)(swift_dynamicCastClassUnconditional() + qword_1EF52F968);
  swift_beginAccess();
  v12 = *v11;
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if (!MEMORY[0x1C3B7C928](v12, v4))
    return swift_bridgeObjectRelease();
  v13 = 0;
  v14 = *(_QWORD *)(v9 + 8);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 40);
  while (1)
  {
    v16 = sub_1BE1B29FC();
    sub_1BE1B29A8();
    if ((v16 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, v4);
      v17 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_1BE1B30BC();
    if (v20 != 8)
      break;
    v21 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 16))(v7, &v21, v4);
    swift_unknownObjectRelease();
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_10:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    v15(a1, v4, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    ++v13;
    if (v17 == MEMORY[0x1C3B7C928](v12, v4))
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE0C9620()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  if ((objc_msgSend(*(id *)(v0 + qword_1ED6F8B80), sel_needToFinalizeTimestamps) & 1) != 0)
  {
    v1 = 1;
  }
  else
  {
    v2 = (void *)sub_1BE0C8FF4();
    swift_beginAccess();
    swift_bridgeObjectRetain();

    MEMORY[0x1E0C80A78](v3);
    v4 = sub_1BE1B2A5C();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v4);
    v1 = sub_1BE1B290C();
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

uint64_t sub_1BE0C9728(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[12];

  v3 = *v1;
  v4 = qword_1ED6F8B80;
  objc_msgSend(*(id *)((char *)v1 + qword_1ED6F8B80), sel_finalizeTimestamps_, a1);
  v5 = objc_msgSend(*(id *)((char *)v1 + v4), sel_attributedString);
  v7 = *(char **)(v3 + 80);
  v6 = *(_QWORD *)(v3 + 88);
  type metadata accessor for CRSequenceStorage(0, (uint64_t)v7, v6, v8);
  v9 = swift_dynamicCastClassUnconditional();
  v10 = (_QWORD *)(v9 + qword_1EF52F968);
  swift_beginAccess();
  v17[9] = *v10;
  v17[2] = v7;
  v17[3] = v6;
  v17[4] = a1;
  v11 = sub_1BE1B2A5C();
  swift_bridgeObjectRetain();
  v12 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF50], v11);
  v14 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0CD204, (uint64_t)v17, v11, v7, MEMORY[0x1E0DEDCE8], v12, MEMORY[0x1E0DEDD18], v13);
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v9 + qword_1EF52F968);
  swift_beginAccess();
  *v15 = v14;
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0C989C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD v17[6];

  v3 = *v1;
  v4 = swift_allocObject();
  type metadata accessor for _NSRange(255);
  v5 = *(_QWORD *)(v3 + 80);
  v6 = *(_QWORD *)(v3 + 88);
  type metadata accessor for CRSequenceStorage(255, v5, v6, v7);
  sub_1BE1B2EE8();
  swift_getTupleTypeMetadata3();
  *(_QWORD *)(v4 + 16) = sub_1BE1B2588();
  v8 = *(void **)((char *)v1 + qword_1ED6F8B80);
  v9 = *(void **)(a1 + qword_1ED6F8B80);
  objc_opt_self();
  v10 = swift_dynamicCastObjCClassUnconditional();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v5;
  v11[3] = v6;
  v11[4] = v4;
  v17[4] = sub_1BE0CD118;
  v17[5] = v11;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BDE038E8;
  v17[3] = &block_descriptor_32;
  v12 = _Block_copy(v17);
  v13 = v8;
  v14 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_deltaTo_edited_unedited_, v10, v12, 0);
  _Block_release(v12);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata3();
  v15 = sub_1BE1B3158();
  swift_release();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1BE0C9AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for CRSequenceStorage(0, a6, a7, a4);
  if (swift_dynamicCastClass())
    swift_unknownObjectRetain();
  swift_beginAccess();
  type metadata accessor for _NSRange(255);
  sub_1BE1B2EE8();
  swift_getTupleTypeMetadata3();
  sub_1BE1B2A5C();
  sub_1BE1B2A20();
  return swift_endAccess();
}

id sub_1BE0C9BAC(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + qword_1ED6F8B80);
  objc_opt_self();
  return objc_msgSend(v1, sel_hasDeltaTo_compareElements_, swift_dynamicCastObjCClassUnconditional(), 0);
}

id sub_1BE0C9C10()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_msgSend(*(id *)(v0 + qword_1ED6F8B80), sel_attributedString), sel_length);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1BE0C9C68()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = *v0;
  v2 = objc_msgSend(*(id *)((char *)v0 + qword_1ED6F8B80), sel_attributedString);
  type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v3);
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  sub_1BE1B2A8C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0C9D40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t result;
  _QWORD aBlock[6];

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v8 = *(void **)((char *)v2 + qword_1ED6F8B80);
  (*(void (**)(char *))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = *(_QWORD *)(v4 + 88);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BE0CD128;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1BE0CD270;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDDFD740;
  aBlock[3] = &block_descriptor_42;
  v12 = _Block_copy(aBlock);
  v13 = v8;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_insertAtIndex_length_getStorage_, a2, 1, v12);

  _Block_release(v12);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a2 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1BE0C9F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t result;
  _QWORD aBlock[6];

  v8 = *v4;
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v10 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v8 + 80);
  v12 = sub_1BE1B2A74();
  v13 = *(id *)((char *)v4 + qword_1ED6F8B80);
  v14 = MEMORY[0x1C3B7C8EC](v12, v11);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v11;
  v15[3] = a3;
  v15[4] = *(_QWORD *)(v8 + 88);
  v15[5] = a4;
  v15[6] = v12;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BE0CD084;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1BE0CD098;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDDFD740;
  aBlock[3] = &block_descriptor_10;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_insertAtIndex_length_getStorage_, a2, v14, v17);

  _Block_release(v17);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a2 & 1) != 0)
    __break(1u);
  return result;
}

id sub_1BE0CA0D8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X6>, _QWORD *a4@<X8>)
{
  objc_class *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;

  v6 = (objc_class *)type metadata accessor for CRSequenceStorage(0, a2, a3, a1);
  swift_bridgeObjectRetain();
  v7 = objc_allocWithZone(v6);
  result = sub_1BE0C7860(a1, v8, v9, v10);
  a4[3] = v6;
  *a4 = result;
  return result;
}

void sub_1BE0CA138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;

  v5 = v4;
  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (objc_class *)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v13 + 80), *(_QWORD *)(v13 + 88), v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, a4);
  v16 = sub_1BE1B2A74();
  v17 = objc_allocWithZone(v15);
  v20 = sub_1BE0C7860(v16, (uint64_t)v17, v18, v19);
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    v21 = v20;
    objc_msgSend(*(id *)(v5 + qword_1ED6F8B80), sel_replaceStorageInRange_withStorage_, a1, a2 - a1, v20);

  }
}

uint64_t sub_1BE0CA248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1ED6F8B78;
  v2 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_1BE0CA29C()
{
  sub_1BE0CA248();
  return swift_deallocClassInstance();
}

uint64_t sub_1BE0CA2C0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  id v6;
  uint64_t v7;
  id v8;
  char v9;

  if (v1 == a1)
    return 1;
  v3 = *v1;
  v4 = qword_1ED6F8B80;
  result = (uint64_t)objc_msgSend(*(id *)((char *)v1 + qword_1ED6F8B80), sel_graphIsEqual_, *(uint64_t *)((char *)a1 + qword_1ED6F8B80));
  if ((_DWORD)result)
  {
    v6 = objc_msgSend(*(id *)((char *)v1 + v4), sel_attributedString);
    type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v7);
    swift_dynamicCastClassUnconditional();
    v8 = objc_msgSend(*(id *)((char *)a1 + v4), sel_attributedString);
    swift_dynamicCastClassUnconditional();
    v9 = sub_1BE0C86E4();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v9 & 1;
  }
  return result;
}

uint64_t CRSequence.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *v3;
  if (a1)
  {
    v6 = MEMORY[0x1E0C80A78](a1);
    v8 = *(_QWORD *)(a2 + 24);
    v20 = *(_QWORD *)(a2 + 16);
    v7 = v20;
    v21 = v8;
    v22 = v6;
    v23 = sub_1BE0C745C((void (*)(char *))sub_1BDF033F4, (uint64_t)&v19);
    v9 = sub_1BE1B2A5C();
    v10 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v9);
    v12 = a3;
    v13 = v7;
    v14 = v9;
    v15 = v8;
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 16);
    v17 = *(_QWORD *)(a2 + 24);
    swift_retain();
    v10 = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSequence<A>, a2);
    v12 = a3;
    v13 = v16;
    v14 = a2;
    v15 = v17;
  }
  return CRSequence.init<A>(_:)((uint64_t)&v23, v13, v14, v15, v10, v11, v12);
}

uint64_t CRSequence.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];
  uint64_t v19;

  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a5;
  v12 = sub_1BDF02134((void (*)(char *, char *))sub_1BDEE3DE0, (uint64_t)v18, a3, a2, MEMORY[0x1E0DEDCE8], a5, MEMORY[0x1E0DEDD18], a6);
  v19 = v12;
  v13 = sub_1BE1B2A5C();
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF50], v13);
  if ((sub_1BE1B2CD8() & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    result = swift_bridgeObjectRelease();
    v16 = 0;
  }
  else
  {
    type metadata accessor for CRSequenceRef(0, a2, a4, v14);
    v16 = swift_allocObject();
    sub_1BE0C8A00();
    v19 = v12;
    swift_retain();
    v17 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v13);
    sub_1BE0C9230((uint64_t)&v19, v13, v17);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    result = swift_bridgeObjectRelease();
  }
  *a7 = v16;
  return result;
}

void CRSequence.init(_:)(void *a1@<X0>, _QWORD *a2@<X8>)
{

  *a2 = 0;
}

uint64_t CRSequence.init<A>(_:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  v14 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v16);
  CRSequence.init<A>(_:)((uint64_t)v16, a3, a4, a5, a6, v17, &v20);

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a2, a4);
  *a7 = v20;
  return result;
}

uint64_t CRSequence.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t result;

  result = sub_1BE0C6554(a2, a2, a3, a4);
  if (*v4)
    return sub_1BE0C9230(a1, a3, a4);
  __break(1u);
  return result;
}

uint64_t sub_1BE0CA770(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, _QWORD);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  _QWORD v27[4];

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EF768);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EF760);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v27 - v12;
  sub_1BE0C6554(a2, v14, v15, v16);
  sub_1BE1B2054();
  v17 = sub_1BE1B203C();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v11, v7, v17);
  sub_1BDDD669C((unint64_t *)&qword_1ED6F23D8, MEMORY[0x1E0CB1378]);
  sub_1BE1B2C90();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  *(_QWORD *)&v11[*(int *)(v8 + 36)] = v27[0];
  sub_1BDEE6D24((uint64_t)v11, (uint64_t)v13);
  v19 = &v13[*(int *)(v8 + 36)];
  v20 = *(_QWORD *)v19;
  sub_1BE1B2C60();
  if (v20 == v27[0])
    return sub_1BDD86E30((uint64_t)v13, &qword_1ED6EF760);
  sub_1BDDD669C(qword_1EF52D9E8, MEMORY[0x1E0CB1368]);
  while (1)
  {
    sub_1BE1B26F0();
    v21 = (uint64_t (*)(_QWORD *, _QWORD))sub_1BE1B2D14();
    v23 = *v22;
    v24 = v22[1];
    result = v21(v27, 0);
    if (!*v3)
      break;
    if (__OFSUB__(v24, v23))
    {
      __break(1u);
      break;
    }
    objc_msgSend(*(id *)(*v3 + qword_1ED6F8B80), sel_removeObjectsInRange_, v23, v24 - v23);
    v26 = *(_QWORD *)v19;
    sub_1BE1B2C60();
    if (v26 == v27[0])
      return sub_1BDD86E30((uint64_t)v13, &qword_1ED6EF760);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall CRSequence.removeAll()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0;
  if ((CRSequence.isEmpty.getter() & 1) == 0)
  {
    sub_1BE0C6554(v2, v3, v4, v5);
    if (*v1)
      objc_msgSend(*(id *)(*v1 + qword_1ED6F8B80), sel_removeAll);
    else
      __break(1u);
  }
}

uint64_t CRSequence.isEmpty.getter()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  char v3;

  if (*v0)
  {
    v1 = (void *)sub_1BE0C8FF4();
    swift_beginAccess();
    swift_bridgeObjectRetain();

    v2 = sub_1BE1B2A5C();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF50], v2);
    v3 = sub_1BE1B2CD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 1;
  }
  return v3 & 1;
}

uint64_t sub_1BE0CAB00(uint64_t *a1, char a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  id v11;

  v4 = *a1;
  if (!*a1)
    return 1;
  if (!*v3)
  {
    *v3 = v4;
    swift_retain();
    return 2;
  }
  if (*v3 == v4)
    return 1;
  swift_retain();
  result = sub_1BE0C6554(a3, v7, v8, v9);
  if (*v3)
  {
    v11 = objc_msgSend(*(id *)(*v3 + qword_1ED6F8B80), sel_mergeWithString_optimized_, *(_QWORD *)(v4 + qword_1ED6F8B80), a2 & 1);
    swift_release();
    if (v11 == (id)2)
    {
      swift_retain();
      swift_release();
      *v3 = v4;
    }
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

uint64_t CRSequence.visitReferences(_:)(uint64_t result)
{
  _QWORD *v1;

  if (*v1)
    return sub_1BE0C9414(result);
  return result;
}

uint64_t CRSequence.insert<A>(contentsOf:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t result;

  result = sub_1BE0C6554(a3, a2, a3, a4);
  if (*v5)
    return sub_1BE0C9F04(a1, a2, a4, a5);
  __break(1u);
  return result;
}

uint64_t CRSequence.index(where:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = a1;
  v24 = a2;
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = sub_1BE1B2EE8();
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v26 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - v13;
  v29 = *v3;
  MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSequence<A>, a3);
  sub_1BE1B28B8();
  v29 = v30;
  sub_1BE1B3230();
  sub_1BE1B320C();
  v25 = sub_1BE1B3224();
  v15 = v21;
  while (1)
  {
    v16 = v26;
    sub_1BE1B3218();
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v14, v16, v28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)break;
    v17 = *(_QWORD *)v14;
    v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, &v14[*(int *)(TupleTypeMetadata2 + 48)], v22);
    v19 = v23(v7);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v18);
    if (v4 || (v19 & 1) != 0)
      goto LABEL_7;
  }
  v17 = 0;
LABEL_7:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t CRSequence.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;

  if (!*v2 || (uint64_t)sub_1BE0C9C10() < 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(a2, 1, 1);
  CRSequence.subscript.getter();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(a2, 0, 1);
}

uint64_t CRSequence.filter(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v11;

  v11 = *v4;
  swift_retain();
  sub_1BE0CAF74(a1, a2, a3);
  result = v11;
  if (v5)
    return swift_release();
  *a4 = v11;
  return result;
}

id sub_1BE0CAF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v5 = *v3;
  sub_1BE0C6404();
  v6 = sub_1BE1B2A5C();
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF48], v6);
  v7 = MEMORY[0x1E0DEB458];
  sub_1BE1B2C48();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v23 = v5;
  v22 = sub_1BE0C6404();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D9E0);
  v21[0] = v7;
  v21[1] = sub_1BDEE6CE0();
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEB8A0], v8, v21);
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v6);
  sub_1BE1B3668();
  swift_bridgeObjectRelease();
  v22 = MEMORY[0x1E0DEE9D8];
  v9 = sub_1BE1B30B0();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF52FB58);
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEC3A0], v9);
  sub_1BE1B28F4();
  swift_bridgeObjectRelease();
  result = (id)swift_bridgeObjectRelease();
  if (!v20)
  {
    v14 = v24;
    v15 = *(_QWORD *)(v24 + 16);
    if (v15)
    {
      result = (id)sub_1BE0C6554(a3, v11, v12, v13);
      v16 = *v19;
      v17 = v15 - 1;
      v18 = (_QWORD *)(v14 + 16 * v15 + 24);
      while (v17 < *(_QWORD *)(v14 + 16))
      {
        if (!v16)
          goto LABEL_12;
        if (__OFSUB__(*v18, *(v18 - 1)))
          goto LABEL_11;
        result = objc_msgSend(*(id *)(v16 + qword_1ED6F8B80), sel_removeObjectsInRange_);
        --v17;
        v18 -= 2;
        if (v17 == -1)
          return (id)swift_bridgeObjectRelease();
      }
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      __break(1u);
    }
    else
    {
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BE0CB1DC@<X0>(_QWORD **a1@<X0>, char *a2@<X1>, uint64_t (*a3)(char *)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v9;
  uint64_t TupleTypeMetadata2;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;

  v9 = *a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = a3(&a2[*(int *)(TupleTypeMetadata2 + 48)]);
  if (!v4)
  {
    if ((result & 1) != 0)
    {
      *a4 = v9;
      return swift_bridgeObjectRetain();
    }
    v12 = v9[2];
    v13 = *(_QWORD *)a2;
    if (v12)
    {
      v14 = v12 - 1;
      if (v9[2 * v12 + 3] == v13)
      {
        v15 = __OFADD__(v13, 1);
        v16 = v13 + 1;
        if (v15)
        {
          __break(1u);
        }
        else
        {
          v5 = v9[2 * v14 + 4];
          if (v16 >= v5)
          {
            swift_bridgeObjectRetain();
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
              goto LABEL_25;
            while (v12 > v9[2])
            {
LABEL_24:
              __break(1u);
LABEL_25:
              result = (uint64_t)sub_1BDFCEA50(v9);
              v9 = (_QWORD *)result;
            }
            v17 = &v9[2 * v14];
            v17[4] = v5;
            v17[5] = v16;
            goto LABEL_17;
          }
        }
        __break(1u);
        goto LABEL_24;
      }
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
    }
    else if (v18 >= v13)
    {
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
      {
LABEL_14:
        v20 = v9[2];
        v19 = v9[3];
        if (v20 >= v19 >> 1)
        {
          result = (uint64_t)sub_1BDE072E0((_QWORD *)(v19 > 1), v20 + 1, 1, v9);
          v9 = (_QWORD *)result;
        }
        v9[2] = v20 + 1;
        v21 = &v9[2 * v20];
        v21[4] = v13;
        v21[5] = v18;
LABEL_17:
        *a4 = v9;
        return result;
      }
LABEL_21:
      result = (uint64_t)sub_1BDE072E0(0, v12 + 1, 1, v9);
      v9 = (_QWORD *)result;
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t CRSequence.apply(_:)(id *a1, uint64_t a2)
{
  id v3;

  v3 = *a1;
  return sub_1BE0C7084(&v3, a2);
}

uint64_t CRSequence.delta(_:from:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;

  if (!*v4)
    goto LABEL_6;
  v7 = result;
  v13 = *a2;
  swift_retain();
  swift_retain();
  CRSequence.finalizeTimestamps(_:)(v7, a3);
  CRSequence.finalizeTimestamps(_:)(v7, a3);
  if (!v13)
  {
    type metadata accessor for CRSequenceRef(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v8);
    swift_allocObject();
    sub_1BE0C8A00();
  }
  objc_opt_self();
  v9 = swift_dynamicCastObjCClassUnconditional();
  objc_opt_self();
  v10 = swift_dynamicCastObjCClassUnconditional();
  v11 = objc_allocWithZone((Class)CRTTMergeableStringDelta);
  swift_retain();
  v12 = objc_msgSend(v11, sel_initWithDeltasTo_from_compareElements_, v9, v10, 0);
  swift_release();
  swift_release();
  result = swift_release();
  if (v12)
    *a4 = v12;
  else
LABEL_6:
    *a4 = 0;
  return result;
}

uint64_t CRSequence.canMerge(delta:)(_QWORD *a1)
{
  _QWORD *v1;

  if (*v1)
    return (uint64_t)objc_msgSend(*(id *)(*v1 + qword_1ED6F8B80), sel_canDeltaMerge_, *a1);
  else
    return 1;
}

id CRSequence.merge(delta:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  id result;

  v5 = *a1;
  result = (id)sub_1BE0C6554(a2, a2, a3, a4);
  if (*v4)
    return objc_msgSend(*(id *)(*v4 + qword_1ED6F8B80), sel_deltaMerge_, v5);
  __break(1u);
  return result;
}

uint64_t sub_1BE0CB5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return CRSequence.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t CRSequence.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t inited;
  _BYTE v17[40];
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v12, (uint64_t)v11, &qword_1ED6F3728);
  v13 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v12) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13);
  sub_1BDD86E30((uint64_t)v11, &qword_1ED6F3728);
  if ((_DWORD)v12 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v14 = 0xD000000000000014;
    *(_QWORD *)(v14 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v14 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = a1;
    *(_QWORD *)(inited + 24) = 0;
    *(_BYTE *)(inited + 32) = 1;
    sub_1BDE13030(a2, a3, &v18);
    result = swift_release();
    if (!v4)
      *a4 = v18;
  }
  return result;
}

uint64_t sub_1BE0CB798(uint64_t a1, uint64_t a2)
{
  return CRSequence.encode(to:)(a1, a2);
}

uint64_t CRSequence.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = sub_1BDDA8D6C();
  if (!v3)
  {
    v9 = v5;
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_QWORD *)(a2 + 24);
    swift_retain();
    sub_1BDE1DE80(&v9, v7, v8);
    return swift_release();
  }
  return result;
}

uint64_t CRSequence.hasEncodedData.getter()
{
  _QWORD *v0;

  if (*v0)
    return objc_msgSend(*(id *)(*v0 + qword_1ED6F8B80), sel_isEmptyCRDT) ^ 1;
  else
    return 0;
}

void sub_1BE0CB864(_BYTE *a1@<X8>)
{
  CRSequence.minEncodingVersion.getter(a1);
}

void CRSequence.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BE0CB884(uint64_t **a1, uint64_t **a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t result;
  unsigned __int8 v5;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (!v3)
    {
      swift_retain();
      return 0;
    }
    if (v2 == v3)
      return 1;
  }
  else
  {
    swift_retain();
    if (!v3)
    {
      swift_retain();
      return 1;
    }
  }
  v5 = objc_msgSend(*(id *)((char *)v3 + qword_1ED6F8B80), sel_isEmptyCRDT);
  result = 0;
  if (v2 && (v5 & 1) == 0)
  {
    if ((objc_msgSend(*(id *)((char *)v2 + qword_1ED6F8B80), sel_isEmptyCRDT) & 1) != 0)
      return 0;
    else
      return sub_1BE0CA2C0(v3) & 1;
  }
  return result;
}

uint64_t CRSequence.MergeableDelta.merge(delta:)()
{
  return sub_1BDDCD1A4();
}

uint64_t CRSequence.MergeableDelta.canMerge(delta:)()
{
  return 0;
}

uint64_t CRSequence.MergeableDelta.visitReferences(_:)(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v21 = v7;
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(*v2, sel_attributedString);
  v10 = *(_QWORD *)(a2 + 24);
  type metadata accessor for CRSequenceStorage(0, v5, v10, v11);
  v12 = (uint64_t *)(swift_dynamicCastClassUnconditional() + qword_1EF52F968);
  swift_beginAccess();
  v13 = *v12;
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if (!MEMORY[0x1C3B7C928](v13, v5))
    return swift_bridgeObjectRelease();
  v14 = 0;
  v15 = *(_QWORD *)(v10 + 8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  while (1)
  {
    v17 = sub_1BE1B29FC();
    sub_1BE1B29A8();
    if ((v17 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, v5);
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_1BE1B30BC();
    if (v21 != 8)
      break;
    v22 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))(v8, &v22, v5);
    swift_unknownObjectRelease();
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_10:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    v16(a1, v5, v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    ++v14;
    if (v18 == MEMORY[0x1C3B7C928](v13, v5))
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t CRSequence.MergeableDelta.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v27 = a2;
  v25 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1E0C80A78](v26);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Proto_CRDT(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v17, (uint64_t)v16, &qword_1ED6F3728);
  LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10);
  sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3728);
  if ((_DWORD)v17 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v18 = 0xD000000000000014;
    *(_QWORD *)(v18 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v18 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = a1;
  *(_QWORD *)(inited + 24) = 0;
  *(_BYTE *)(inited + 32) = 1;
  swift_retain();
  sub_1BDDA0528((uint64_t)v13);
  v21 = *(_QWORD *)&v13[*(int *)(v10 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v21, (uint64_t)v7, &qword_1ED6F2DF0);
  v22 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v7, 1, v22) == 1)
  {
    sub_1BDD86E30((uint64_t)v7, &qword_1ED6F2DF0);
LABEL_8:
    sub_1BE1B20E4();
    v23 = *(int *)(v26 + 20);
    if (qword_1ED6EF5C0 != -1)
      swift_once();
    *(_QWORD *)&v9[v23] = qword_1ED6EF5B0;
    swift_retain();
    goto LABEL_11;
  }
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1BDD9C3E0((uint64_t)v7, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_8;
  }
  sub_1BE0CCA70((uint64_t)v7, (uint64_t)v9);
LABEL_11:
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_CRDT);
  v24 = v29;
  sub_1BE0CBECC((uint64_t)v9, a1, 0, v27, v28, &v30);
  swift_setDeallocating();
  result = swift_release();
  if (!v24)
    *v25 = v30;
  return result;
}

uint64_t sub_1BE0CBECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t result;
  id v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = sub_1BE0C8EA8(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  v14[0] = 0;
  v9 = objc_msgSend(objc_allocWithZone((Class)CRTTMergeableStringDelta), sel_initWithDecoder_error_, v8, v14);
  if (v9)
  {
    v10 = v9;
    v11 = v14[0];
    swift_release();

    result = sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
    *a6 = v10;
  }
  else
  {
    v13 = v14[0];
    sub_1BE1B1D3C();

    swift_willThrow();
    swift_release();

    return sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
  }
  return result;
}

uint64_t CRSequence.MergeableDelta.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[4];

  v6 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  result = sub_1BDDA8D6C();
  if (!v3)
  {
    v11[1] = v9;
    swift_retain();
    sub_1BE0CC0E0(a1, a2, (uint64_t)v8);
    swift_beginAccess();
    sub_1BE128F88((uint64_t)v8);
    return swift_release();
  }
  return result;
}

void sub_1BE0CC0E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void **v3;
  void *v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12[4];

  v12[3] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *v3;
  v6 = sub_1BE0CC1E4(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  v12[0] = 0;
  v7 = objc_msgSend(v5, sel_saveToEncoder_error_, v6, v12);
  v8 = v12[0];
  if ((v7 & 1) != 0)
  {
    v9 = (uint64_t)v6 + OBJC_IVAR____TtC9Coherence15CRStringEncoder_sequence;
    swift_beginAccess();
    sub_1BDD9C318(v9, a3, type metadata accessor for Proto_Sequence);
    v10 = v8;
  }
  else
  {
    v11 = v12[0];
    sub_1BE1B1D3C();

    swift_willThrow();
  }

}

id sub_1BE0CC1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  id v7;
  uint64_t v8;
  id v9;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  v7 = objc_allocWithZone((Class)type metadata accessor for CRSequenceEncoder(0));
  v8 = swift_retain_n();
  v9 = sub_1BDF0DC24(v8, (uint64_t)sub_1BE0CD05C, (uint64_t)v6);
  swift_release();
  swift_release();
  return v9;
}

void sub_1BE0CC274(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  id v4;
  unsigned __int8 v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10[4];

  v10[3] = *(id *)MEMORY[0x1E0C80C00];
  v3 = *v1;
  v4 = sub_1BE0CC370();
  v10[0] = 0;
  v5 = objc_msgSend(v3, sel_saveToEncoder_error_, v4, v10);
  v6 = v10[0];
  if ((v5 & 1) != 0)
  {
    v7 = (uint64_t)v4 + OBJC_IVAR____TtC9Coherence15CRStringEncoder_sequence;
    swift_beginAccess();
    sub_1BDD9C318(v7, a1, type metadata accessor for Proto_Sequence);
    v8 = v6;
  }
  else
  {
    v9 = v10[0];
    sub_1BE1B1D3C();

    swift_willThrow();
  }

}

id sub_1BE0CC370()
{
  id v0;
  uint64_t v1;
  id v2;

  v0 = objc_allocWithZone((Class)type metadata accessor for CRSequenceEncoder(0));
  v1 = swift_retain();
  v2 = sub_1BDF0DC24(v1, (uint64_t)sub_1BDF11784, 0);
  swift_release();
  return v2;
}

uint64_t sub_1BE0CC3C4()
{
  return sub_1BDDCD1A4();
}

uint64_t sub_1BE0CC3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return CRSequence.MergeableDelta.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BE0CC3EC(uint64_t a1, uint64_t a2)
{
  return CRSequence.MergeableDelta.encode(to:)(a1, a2);
}

uint64_t sub_1BE0CC404@<X0>(uint64_t *a1@<X8>)
{
  CRSequence.makeIterator()(a1);
  return swift_release();
}

uint64_t sub_1BE0CC41C()
{
  uint64_t v0;

  v0 = sub_1BE155AA4();
  swift_release();
  return v0;
}

id sub_1BE0CC454@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  objc_class *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id result;

  v6 = (objc_class *)type metadata accessor for CRSequenceStorage(0, a2, a3, a3);
  swift_bridgeObjectRetain();
  v7 = objc_allocWithZone(v6);
  result = sub_1BE0C7860(a1, (uint64_t)v7, v8, v9);
  a4[3] = v6;
  *a4 = result;
  return result;
}

uint64_t sub_1BE0CC4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  id v10;
  uint64_t result;

  v9 = type metadata accessor for CRSequenceStorage(0, a3, a4, a4);
  swift_bridgeObjectRetain();
  swift_retain();
  v10 = sub_1BE0CCF24(a1, a2);
  result = swift_release();
  if (!v5)
  {
    a5[3] = v9;
    *a5 = v10;
  }
  return result;
}

uint64_t sub_1BE0CC54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void *v10;
  _BYTE v11[32];

  sub_1BDDC1538(a1, (uint64_t)v11);
  type metadata accessor for CRSequenceStorage(0, a3, a4, v7);
  if (swift_dynamicCast())
  {
    v8 = sub_1BE0C88B4(a2);

    return v8;
  }
  else
  {
    sub_1BE1B3200();
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t CRSequence<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;

  v21[1] = a3;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v21 - v11;
  v21[0] = *v3;
  v13 = a1[3];
  v14 = a1;
  v15 = v7;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_1BE1B3764();
  v27 = v21[0];
  v23 = sub_1BE0C6404();
  v24 = 0;
  v17 = type metadata accessor for CRSequence.Iterator(0, v6, *(_QWORD *)(a2 + 24), v16);
  CRSequence.Iterator.next()(v17, (uint64_t)v12);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v18(v12, 1, v6) != 1)
  {
    v21[0] = *(_QWORD *)(v15 + 32);
    do
    {
      ((void (*)(char *, char *, uint64_t))v21[0])(v9, v12, v6);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      v19 = v22;
      sub_1BE1B3380();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v6);
      if (v19)
        break;
      v22 = 0;
      CRSequence.Iterator.next()(v17, (uint64_t)v12);
    }
    while (v18(v12, 1, v6) != 1);
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1BE0CC834(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return CRSequence<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

id sub_1BE0CC84C(_QWORD *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  v5 = a1[3];
  if (v5)
  {
    v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v8 = *(_QWORD *)(v5 - 8);
    MEMORY[0x1E0C80A78](v7);
    v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = sub_1BE1B34A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
  }
  v12 = (void *)sub_1BE1B1F04();
  v13 = objc_msgSend(v3, sel_initWithStorage_uuid_, v11, v12);
  swift_unknownObjectRelease();

  v14 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
  return v13;
}

uint64_t type metadata accessor for CRSequenceStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSequenceStorage);
}

uint64_t type metadata accessor for CRSequenceRef(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSequenceRef);
}

uint64_t sub_1BE0CC97C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1EF52F968;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

id sub_1BE0CC9C0(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v6[0] = 0;
  v2 = objc_msgSend(v1, sel_initWithDecoder_error_, a1, v6);
  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1BE1B1D3C();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1BE0CCA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_Sequence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CRSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSequence.Iterator);
}

_UNKNOWN **sub_1BE0CCAC0()
{
  return &protocol witness table for CRSequence<A>.MergeableDelta;
}

uint64_t sub_1BE0CCACC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSequence<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_1BE0CCAF8()
{
  JUMPOUT(0x1C3B7DF54);
}

uint64_t sub_1BE0CCB08()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BE0CCB4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BE1B1F58();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSequence);
}

uint64_t type metadata accessor for CRSequence.ObservableDifference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSequence.ObservableDifference);
}

uint64_t type metadata accessor for CRSequence.MutatingAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSequence.MutatingAction);
}

uint64_t type metadata accessor for CRSequence.MergeableDelta(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSequence.MergeableDelta);
}

_QWORD *sub_1BE0CCBF4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BE0CCC20()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BE0CCC28(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_1BE0CCC74(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t sub_1BE0CCCB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BE0CCCD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BE0CC4C0(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1BE0CCCF0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BE0CCD14@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BE0CC454(v1[4], v1[2], v1[3], a1);
}

id sub_1BE0CCD30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  objc_super v12;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = *(_QWORD *)(v3 + 0x50);
  sub_1BDE7A054(v4, v4);
  v5 = *(_QWORD *)(v4 - 8);
  swift_allocObject();
  v6 = v1;
  v7 = sub_1BE1B299C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  sub_1BDE79568();
  *(_QWORD *)((char *)v6 + qword_1EF52F968) = v7;

  v10 = (objc_class *)type metadata accessor for CRSequenceStorage(0, v4, *(_QWORD *)(v3 + 88), v9);
  v12.receiver = v6;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, sel_init);
}

id sub_1BE0CCE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_1BE0CCD30(a1);
}

id sub_1BE0CCE58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  objc_class *v5;
  objc_super v7;

  v2 = *MEMORY[0x1E0DEEDD8] & *v1;
  v3 = (_QWORD *)(a1 + qword_1EF52F968);
  swift_beginAccess();
  *(_QWORD *)((char *)v1 + qword_1EF52F968) = *v3;
  v5 = (objc_class *)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v4);
  v7.receiver = v1;
  v7.super_class = v5;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1BE0CCEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for CRSequenceStorage(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_1BE0CCE58(a1);
}

id sub_1BE0CCF24(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13[16];
  __int128 v14;
  uint64_t v15;
  _QWORD v16[2];

  v4 = v2;
  v16[1] = a1;
  v14 = *((_OWORD *)v2 + 5);
  v15 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F390);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
  v7 = sub_1BDDA9D60(&qword_1EF52FB50, &qword_1EF52F390, MEMORY[0x1E0DEAF50]);
  v8 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0CD020, (uint64_t)v13, v5, (char *)v14, v6, v7, MEMORY[0x1E0DEDB38], (uint64_t)v16);
  result = (id)swift_bridgeObjectRelease();
  if (!v3)
  {
    v10 = objc_allocWithZone(v4);
    return sub_1BE0C7860(v8, (uint64_t)v10, v11, v12);
  }
  return result;
}

uint64_t sub_1BE0CD020(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_1BE0C87B4(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1BE0CD040@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BE0C8584(a1, a2);
}

uint64_t sub_1BE0CD05C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BE0CC54C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1BE0CD068@<X0>(_QWORD **a1@<X0>, char *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1BE0CB1DC(a1, a2, *(uint64_t (**)(char *))(v3 + 32), a3);
}

uint64_t sub_1BE0CD088()
{
  return swift_deallocObject();
}

uint64_t sub_1BE0CD098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BDDFD6F0(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1BE0CD0A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BE0CD0C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BE0CA0D8(v1[6], v1[2], v1[4], a1);
}

uint64_t sub_1BE0CD0E4()
{
  return swift_deallocObject();
}

uint64_t sub_1BE0CD0F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BE0CD118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1BE0C9AB0(a1, a2, a3, a4, v4[4], v4[2], v4[3]);
}

uint64_t sub_1BE0CD12C()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_34Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

id sub_1BE0CD198@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id result;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v7 = v2 + ((v6 + 32) & ~v6);
  v8 = type metadata accessor for CRSequenceStorage(0, v4, v5, a1);
  result = sub_1BE0CCE20(v7, v9, v10, v11);
  a2[3] = v8;
  *a2 = result;
  return result;
}

uint64_t sub_1BE0CD1F4()
{
  return swift_deallocObject();
}

uint64_t sub_1BE0CD204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2[2];
  v4 = v2[3];
  v5 = v2[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8) + 56))(v5, v3);
}

uint64_t sub_1BE0CD29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a5;
  v21 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v12, &qword_1ED6F2DF0);
  v17 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17) == 1)
  {
    sub_1BDD86E30((uint64_t)v12, &qword_1ED6F2DF0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v15, type metadata accessor for Proto_Set);
      goto LABEL_9;
    }
    sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1BE1B20E4();
  v18 = *(int *)(v13 + 20);
  if (qword_1ED6F2808 != -1)
    swift_once();
  *(_QWORD *)&v15[v18] = qword_1ED6F2800;
  swift_retain();
LABEL_9:
  v19 = v23;
  sub_1BE0DC7A8((uint64_t)v15, a2, a3, a4, v22, (uint64_t)&v24);
  result = sub_1BDD9C3E0(a1, type metadata accessor for Proto_CRDT);
  if (!v19)
    *v21 = v24;
  return result;
}

uint64_t sub_1BE0CD4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v5 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v8 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if (qword_1ED6F2E18 != -1)
    swift_once();
  *(_QWORD *)(a2 + v8) = qword_1ED6F2E08;
  swift_retain();
  v9 = (_QWORD *)sub_1BDDA9128();
  sub_1BE0DD298(v9, a1, (uint64_t)v7);
  if (v2)
  {
    sub_1BDD9C3E0(a2, type metadata accessor for Proto_CRDT);
    return swift_release();
  }
  else
  {
    swift_release();
    return sub_1BE12B5A0((uint64_t)v7);
  }
}

void sub_1BE0CD5C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[14];
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t AssociatedTypeWitness;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;

  v53 = a1;
  v44[1] = a3;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v7);
  v51 = (char *)v44 - v8;
  v9 = *(_QWORD *)(v5 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v60 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v50 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v62 = (char *)v44 - v14;
  MEMORY[0x1E0C80A78](v13);
  v49 = (char *)v44 - v15;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3CB8);
  v16 = MEMORY[0x1E0C80A78](v70);
  v66 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v68 = (char *)v44 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v65 = (char *)v44 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v69 = (char *)v44 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v71 = (char *)v44 - v25;
  MEMORY[0x1E0C80A78](v24);
  v67 = (char *)v44 - v26;
  v57 = sub_1BE1B2EE8();
  v56 = *(_QWORD *)(v57 - 8);
  v27 = MEMORY[0x1E0C80A78](v57);
  v48 = (char *)v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v44[12] = (char *)v44 - v30;
  v64 = *(_QWORD *)(v6 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v44[11] = (char *)v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v59 = (char *)v44 - v34;
  v63 = *(_QWORD *)(v9 - 8);
  v35 = MEMORY[0x1E0C80A78](v33);
  v44[9] = (char *)v44 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v58 = (char *)v44 - v37;
  v61 = TupleTypeMetadata2;
  v45 = sub_1BE1B2EE8();
  v44[13] = *(_QWORD *)(v45 - 8);
  v38 = MEMORY[0x1E0C80A78](v45);
  v55 = (char *)v44 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x1E0C80A78](v38);
  v47 = (char *)v44 - v41;
  MEMORY[0x1E0C80A78](v40);
  v46 = (char *)v44 - v42;
  swift_beginAccess();
  swift_beginAccess();
  v54 = a2;
  v43 = *(_QWORD *)(v5 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44[8] = v43;
  sub_1BE0D4A54();
}

uint64_t (*sub_1BE0CF4B8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BE0CF4F4(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1BE0D27B0(a1, a2, a3, 0);
}

_QWORD *sub_1BE0CF4FC(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v3;

  if (v3[6] >= a1)
  {
    swift_retain();
  }
  else
  {
    v3 = (_QWORD *)(*(uint64_t (**)(void))(*v3 + 288))();
    sub_1BE0D27B0(a1, a2 & 1, a3, 0);
  }
  return v3;
}

uint64_t sub_1BE0CF568(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  int64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  _QWORD v75[2];
  unint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  int64_t v86;
  int64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[2];
  _QWORD v101[2];
  uint64_t v102;
  char v103;
  uint64_t v104;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 88);
  v6 = sub_1BE1B2EE8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v75 - v9;
  v11 = *(_QWORD *)(v4 + 80);
  v12 = *(_QWORD *)(v11 - 8);
  v98 = v4;
  v99 = v12;
  v13 = MEMORY[0x1E0C80A78](v8);
  v93 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v5 - 8);
  v16 = MEMORY[0x1E0C80A78](v13);
  v92 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v75 - v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v95 = sub_1BE1B2EE8();
  v94 = *(_QWORD *)(v95 - 8);
  v21 = MEMORY[0x1E0C80A78](v95);
  v96 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v97 = (char *)v75 - v23;
  if (v2[6] != a1[6])
  {
    if (qword_1ED6F4510 != -1)
      swift_once();
    swift_retain();
    sub_1BE1B2E40();
    swift_release();
    v38 = v102;
    v39 = v103;
    v40 = v104;
    sub_1BE0CF4FC(v102, v103, v104);
    v41 = sub_1BE0CF4FC(v38, v39, v40);
    swift_bridgeObjectRelease();
    v42 = sub_1BE0CF568(v41);
    swift_release();
    swift_release();
    return v42 & 1;
  }
  v89 = v19;
  v91 = v15;
  v90 = v10;
  v80 = v7;
  swift_beginAccess();
  v25 = v2[3];
  v24 = v2[4];
  swift_beginAccess();
  v26 = a1[3];
  v27 = a1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_1BDDBDDBC(v24, v27) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    v42 = 0;
    return v42 & 1;
  }
  v79 = v6;
  v28 = sub_1BDDBDDBC(v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v28 & 1) == 0)
    goto LABEL_11;
  v29 = v2 + 5;
  swift_beginAccess();
  v30 = *(_QWORD *)(v98 + 104);
  swift_bridgeObjectRetain();
  v31 = sub_1BE1B260C();
  swift_bridgeObjectRelease();
  v83 = a1 + 5;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v84 = v30;
  v32 = sub_1BE1B260C();
  swift_bridgeObjectRelease();
  if (v31 != v32)
    goto LABEL_11;
  v33 = *v29;
  if ((v33 & 0xC000000000000001) != 0)
  {
    v34 = sub_1BE1B31C4();
    v76 = 0;
    v35 = 0;
    v36 = 0;
    v37 = v34 | 0x8000000000000000;
  }
  else
  {
    v44 = -1 << *(_BYTE *)(v33 + 32);
    v35 = ~v44;
    v45 = *(_QWORD *)(v33 + 64);
    v76 = v33 + 64;
    v46 = -v44;
    if (v46 < 64)
      v47 = ~(-1 << v46);
    else
      v47 = -1;
    v36 = v47 & v45;
    v37 = v33;
  }
  v48 = v90;
  v49 = v91;
  v50 = v97;
  v78 = v37 & 0x7FFFFFFFFFFFFFFFLL;
  v75[1] = v35;
  v77 = (unint64_t)(v35 + 64) >> 6;
  v75[0] = v77 - 1;
  result = swift_bridgeObjectRetain();
  v51 = 0;
  v82 = v37;
  v81 = TupleTypeMetadata2;
  while (1)
  {
    v85 = v36;
    v86 = v51;
    if ((v37 & 0x8000000000000000) == 0)
      break;
    v55 = sub_1BE1B31DC();
    v52 = v96;
    if (v55)
    {
      sub_1BE1B3494();
      swift_unknownObjectRelease();
      sub_1BE1B3494();
      swift_unknownObjectRelease();
      v54 = 0;
    }
    else
    {
      v54 = 1;
    }
    v87 = v86;
    v88 = v85;
LABEL_38:
    v59 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v52, v54, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v50, v52, v95);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v50, 1, TupleTypeMetadata2) == 1)
    {
      sub_1BDE27FD0();
      v42 = 1;
      return v42 & 1;
    }
    v60 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    v61 = v89;
    v60(v89, &v50[*(int *)(TupleTypeMetadata2 + 48)], v5);
    v62 = v99;
    v63 = v50;
    v64 = v93;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v93, v63, v11);
    v65 = *v83;
    swift_bridgeObjectRetain();
    MEMORY[0x1C3B7C58C](v64, v65, v11, v5, v84);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v48, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v49 + 8))(v61, v5);
      sub_1BDE27FD0();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v79);
      goto LABEL_11;
    }
    v66 = v92;
    v60(v92, v48, v5);
    v67 = *(_QWORD *)(v98 + 112);
    v68 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v67 + 24);
    v68(v101, v5, v67);
    v69 = v101[0];
    v70 = v101[1];
    v68(v100, v5, v67);
    v71 = v100[0];
    if ((sub_1BDDBDDBC(v70, v100[1]) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v74 = *(void (**)(char *, uint64_t))(v91 + 8);
      v74(v66, v5);
      v74(v61, v5);
LABEL_51:
      sub_1BDE27FD0();
      goto LABEL_11;
    }
    v72 = sub_1BDDBDDBC(v69, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = v91;
    v73 = *(void (**)(char *, uint64_t))(v91 + 8);
    v73(v66, v5);
    result = ((uint64_t (*)(char *, uint64_t))v73)(v61, v5);
    v48 = v90;
    v50 = v97;
    v37 = v82;
    TupleTypeMetadata2 = v81;
    v36 = v88;
    v51 = v87;
    if ((v72 & 1) == 0)
      goto LABEL_51;
  }
  v52 = v96;
  if (v36)
  {
    v88 = (v36 - 1) & v36;
    v53 = __clz(__rbit64(v36)) | (v51 << 6);
    v87 = v51;
    goto LABEL_21;
  }
  v56 = v51 + 1;
  if (__OFADD__(v51, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v56 >= v77)
    goto LABEL_37;
  v57 = *(_QWORD *)(v76 + 8 * v56);
  if (v57)
    goto LABEL_27;
  v51 += 2;
  if (v56 + 1 >= v77)
  {
    v87 = v56;
    v88 = 0;
    v54 = 1;
    goto LABEL_38;
  }
  v57 = *(_QWORD *)(v76 + 8 * v51);
  if (v57)
  {
    ++v56;
    goto LABEL_27;
  }
  v58 = v56 + 2;
  if (v56 + 2 >= v77)
  {
LABEL_37:
    v88 = 0;
    v54 = 1;
    v87 = v51;
    goto LABEL_38;
  }
  v57 = *(_QWORD *)(v76 + 8 * v58);
  if (v57)
  {
    v56 += 2;
LABEL_27:
    v88 = (v57 - 1) & v57;
    v87 = v56;
    v53 = __clz(__rbit64(v57)) + (v56 << 6);
LABEL_21:
    (*(void (**)(char *, unint64_t, uint64_t))(v99 + 16))(v96, *(_QWORD *)(v37 + 48) + *(_QWORD *)(v99 + 72) * v53, v11);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(&v52[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v37 + 56) + *(_QWORD *)(v49 + 72) * v53, v5);
    v54 = 0;
    goto LABEL_38;
  }
  while (1)
  {
    v56 = v58 + 1;
    if (__OFADD__(v58, 1))
      break;
    if (v56 >= v77)
    {
      v88 = 0;
      v54 = 1;
      v87 = v75[0];
      goto LABEL_38;
    }
    v57 = *(_QWORD *)(v76 + 8 * v56);
    ++v58;
    if (v57)
      goto LABEL_27;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1BE0CFF58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = qword_1ED6F3700;
  swift_retain();
  if (v4 != -1)
    swift_once();
  type metadata accessor for Replica();
  sub_1BE1B2E40();
  v5 = OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter;
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter);
  result = type metadata accessor for Timestamp(0);
  *(_QWORD *)(a1 + *(int *)(result + 20)) = v6;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + v5) = v6 + 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE0D0018(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(_BYTE *, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[32];

  v3 = v2;
  v24 = a1;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 88);
  v7 = sub_1BE1B2EE8();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - v9;
  v26 = *(_QWORD *)(v5 + 80);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v8);
  v25 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Timestamp(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v19(v18, a2, v6);
  sub_1BE0CFF58((uint64_t)v15);
  v27 = v5;
  v20 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 + 112) + 40))(v28, v6);
  type metadata accessor for Replica();
  sub_1BDDCB81C((uint64_t)v15);
  v20(v28, 0);
  swift_beginAccess();
  sub_1BDDCB81C((uint64_t)v15);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v24, v26);
  v19(v10, (uint64_t)v18, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v6);
  swift_beginAccess();
  sub_1BE1B2684();
  sub_1BE1B26B4();
  swift_endAccess();
  sub_1BDD9C3E0((uint64_t)v15, type metadata accessor for Timestamp);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v6);
}

uint64_t sub_1BE0D0288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v29 = *(_QWORD *)(*v2 + 88);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v31 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v9 = (char *)&v26 - v8;
  v10 = type metadata accessor for Timestamp(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = v2[5];
  if ((v13 & 0xC000000000000001) != 0)
  {
    v28 = v13 & 0xC000000000000001;
    v30 = a2;
    swift_bridgeObjectRetain();
    sub_1BE1B34A0();
    v14 = sub_1BE1B31D0();
    v27 = v15;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if (!v14)
      goto LABEL_10;
  }
  else
  {
    if (!*(_QWORD *)(v13 + 16))
    {
      v24 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(a2, v24, 1, TupleTypeMetadata2);
    }
    v28 = 0;
    v30 = a2;
    v16 = *(_QWORD *)(v5 + 104);
    swift_bridgeObjectRetain();
    v17 = sub_1BDE0D1D0(a1, v6, v16);
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      v24 = 1;
      a2 = v30;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(a2, v24, 1, TupleTypeMetadata2);
    }
    v14 = v17;
    v27 = *(unsigned int *)(v13 + 36);
    swift_bridgeObjectRelease();
  }
  v19 = v28 != 0;
  sub_1BE0CFF58((uint64_t)v12);
  swift_beginAccess();
  type metadata accessor for Replica();
  sub_1BDDCB81C((uint64_t)v12);
  sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Timestamp);
  swift_endAccess();
  v20 = &v9[*(int *)(TupleTypeMetadata2 + 48)];
  swift_beginAccess();
  v21 = v29;
  sub_1BE1B2684();
  v22 = v27;
  sub_1BE1B263C();
  swift_endAccess();
  sub_1BDE27EC8(v14, v22, v19);
  a2 = v30;
  v23 = v30 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v30, v9, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v23, v20, v21);
  v24 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(a2, v24, 1, TupleTypeMetadata2);
}

uint64_t sub_1BE0D0564()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = type metadata accessor for Timestamp(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BE1B2684();
  sub_1BE1B2678();
  swift_endAccess();
  sub_1BE0CFF58((uint64_t)v2);
  swift_beginAccess();
  type metadata accessor for Replica();
  sub_1BDDCB81C((uint64_t)v2);
  sub_1BDD9C3E0((uint64_t)v2, type metadata accessor for Timestamp);
  return swift_endAccess();
}

uint64_t sub_1BE0D0680(uint64_t a1, uint64_t a2, char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;

  v4 = v3;
  v44 = a3;
  v38 = v4;
  v7 = *v4;
  v39 = v4 + 5;
  v8 = type metadata accessor for Timestamp(0);
  MEMORY[0x1E0C80A78](v8);
  v37 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(_QWORD *)(v7 + 88);
  v10 = sub_1BE1B2EE8();
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - v12;
  v43 = v7;
  v14 = *(_QWORD *)(v7 + 80);
  v35 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BE1B2EE8();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v34 - v19;
  v21 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v36 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v27 = (char *)&v34 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a1, v24);
  sub_1BE1B2888();
  swift_getAssociatedConformanceWitness();
  v44 = v27;
  v28 = AssociatedTypeWitness;
  sub_1BE1B2F00();
  v29 = v35;
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v30(v20, 1, v14) != 1)
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    do
    {
      v31(v16, v20, v14);
      swift_beginAccess();
      sub_1BE1B2684();
      sub_1BE1B25B8();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v14);
      sub_1BE1B2F00();
    }
    while (v30(v20, 1, v14) != 1);
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v44, v28);
  v32 = v37;
  sub_1BE0CFF58(v37);
  swift_beginAccess();
  type metadata accessor for Replica();
  sub_1BDDCB81C(v32);
  sub_1BDD9C3E0(v32, type metadata accessor for Timestamp);
  return swift_endAccess();
}

uint64_t sub_1BE0D09E8(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  uint64_t result;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  int64_t v50;
  uint64_t v51;
  unint64_t v52;
  int64_t v53;
  unint64_t v54;
  unint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v75;
  char v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  int64_t v93;
  unint64_t v94;
  int64_t v95;
  int64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v111;
  char v112;
  _QWORD v113[2];
  void (*v114)(char *);
  uint64_t v115;
  unint64_t v116;
  int64_t v117;
  uint64_t v118;
  void (*v119)(char *);
  uint64_t v120;
  uint64_t *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  unint64_t *v129;
  int64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  char *v134;
  char *v135;
  char *v136;
  int64_t v137;
  char *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD v147[2];
  _QWORD v148[2];

  v115 = a6;
  v114 = a5;
  v120 = a4;
  v119 = a3;
  v8 = *(_QWORD *)(*v6 + 80);
  v9 = *(_QWORD *)(*v6 + 88);
  v145 = *v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v12 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v135 = (char *)v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v122 = (char *)v113 - v14;
  v15 = sub_1BE1B2EE8();
  v140 = *(_QWORD *)(v15 - 8);
  v141 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v134 = (char *)v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v127 = (char *)v113 - v19;
  v20 = *(_QWORD *)(v9 - 8);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v21);
  v138 = (char *)v113 - v25;
  v146 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_1BE1B2EE8();
  v131 = *(_QWORD *)(v132 - 8);
  v28 = MEMORY[0x1E0C80A78](v132);
  v136 = (char *)v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)v113 - v31;
  MEMORY[0x1E0C80A78](v30);
  v128 = (char *)v113 - v33;
  v133 = (uint64_t *)(a1 + 40);
  swift_beginAccess();
  v123 = a1;
  v34 = *(_QWORD *)(a1 + 40);
  v144 = v11;
  if ((v34 & 0xC000000000000001) != 0)
  {
    v35 = sub_1BE1B31C4();
    v116 = 0;
    v36 = 0;
    v139 = 0;
    v37 = v35 | 0x8000000000000000;
  }
  else
  {
    v38 = -1 << *(_BYTE *)(v34 + 32);
    v36 = ~v38;
    v39 = *(_QWORD *)(v34 + 64);
    v116 = v34 + 64;
    v40 = -v38;
    if (v40 < 64)
      v41 = ~(-1 << v40);
    else
      v41 = -1;
    v139 = v41 & v39;
    v37 = v34;
  }
  v113[1] = v36;
  v126 = v23;
  v42 = (unint64_t *)(v121 + 5);
  v43 = v36;
  swift_bridgeObjectRetain();
  v129 = v42;
  swift_beginAccess();
  result = swift_beginAccess();
  v45 = 0;
  v118 = v37 & 0x7FFFFFFFFFFFFFFFLL;
  v117 = (unint64_t)(v43 + 64) >> 6;
  v113[0] = v117 - 1;
  v142 = TupleTypeMetadata2;
  v46 = v144;
  v47 = v37;
  v130 = v37;
  v48 = v139;
  v125 = v32;
  v124 = v8;
  while (1)
  {
    v137 = v45;
    if ((v47 & 0x8000000000000000) != 0)
    {
      if (sub_1BE1B31DC())
      {
        sub_1BE1B3494();
        swift_unknownObjectRelease();
        sub_1BE1B3494();
        swift_unknownObjectRelease();
        v46 = v144;
        v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v144 + 56);
        v58 = v32;
        v59 = 0;
      }
      else
      {
        v46 = v144;
        v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v144 + 56);
        v58 = v32;
        v59 = 1;
      }
      v143 = v57;
      v57(v58, v59, 1, TupleTypeMetadata2);
      v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v137;
      v139 = v48;
    }
    else
    {
      v50 = v45;
      if (v48)
      {
        v51 = v46;
        v139 = (v48 - 1) & v48;
        v52 = __clz(__rbit64(v48)) | (v45 << 6);
        v53 = v45;
LABEL_14:
        v54 = v47;
        (*(void (**)(char *, unint64_t, uint64_t))(v146 + 16))(v32, *(_QWORD *)(v47 + 48) + *(_QWORD *)(v146 + 72) * v52, v8);
        v55 = *(_QWORD *)(v54 + 56) + *(_QWORD *)(v20 + 72) * v52;
        TupleTypeMetadata2 = v142;
        (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(&v32[*(int *)(v142 + 48)], v55, v9);
        v46 = v51;
        v143 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
        v143(v32, 0, 1, TupleTypeMetadata2);
        v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v53;
        goto LABEL_35;
      }
      v53 = v45 + 1;
      if (__OFADD__(v45, 1))
        goto LABEL_76;
      v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v45;
      if (v53 < v117)
      {
        v60 = *(_QWORD *)(v116 + 8 * v53);
        if (v60)
          goto LABEL_20;
        v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v45 + 1);
        if (v45 + 2 < v117)
        {
          v60 = *(_QWORD *)(v116 + 8 * (v45 + 2));
          if (v60)
          {
            v53 = v45 + 2;
LABEL_20:
            v51 = v46;
            v139 = (v60 - 1) & v60;
            v52 = __clz(__rbit64(v60)) + (v53 << 6);
            goto LABEL_14;
          }
          v61 = (char *)(v45 + 3);
          v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v50 + 2);
          if (v50 + 3 < v117)
          {
            v60 = *(_QWORD *)(v116 + 8 * (_QWORD)v61);
            if (v60)
            {
              v53 += 2;
              goto LABEL_20;
            }
            while (1)
            {
              v53 = (int64_t)(v61 + 1);
              if (__OFADD__(v61, 1))
                goto LABEL_77;
              if (v53 >= v117)
                break;
              v60 = *(_QWORD *)(v116 + 8 * v53);
              ++v61;
              if (v60)
                goto LABEL_20;
            }
            v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v113[0];
          }
        }
      }
      v143 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
      v143(v32, 1, 1, TupleTypeMetadata2);
      v139 = 0;
    }
LABEL_35:
    v62 = v128;
    (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v128, v32, v132);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v62, 1, TupleTypeMetadata2) == 1)
      break;
    v143 = v56;
    v63 = v62;
    v64 = &v62[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v27, v63, v8);
    v65 = v138;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v138, v64, v9);
    v66 = *v129;
    swift_bridgeObjectRetain();
    v67 = v145;
    v68 = v127;
    v69 = v27;
    MEMORY[0x1C3B7C58C](v27, v66, v8, v9, *(_QWORD *)(v145 + 104));
    swift_bridgeObjectRelease();
    LODWORD(v66) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v68, 1, v9);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v68, v141);
    v70 = v126;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v126, v65, v9);
    if ((_DWORD)v66 != 1)
    {
      v49 = *(void (**)(char *, uint64_t))(v20 + 8);
      v49(v70, v9);
      goto LABEL_9;
    }
    v71 = v121[3];
    v72 = v121[4];
    v73 = *(_QWORD *)(v67 + 112);
    v74 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v73 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v74(v148, v9, v73);
    v75 = v148[0];
    if ((sub_1BDDB04C0(v148[1], v72) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = *(void (**)(char *, uint64_t))(v20 + 8);
      v49(v70, v9);
LABEL_40:
      TupleTypeMetadata2 = v142;
LABEL_9:
      v46 = v144;
      v27 = v69;
      goto LABEL_10;
    }
    v76 = sub_1BDDB04C0(v75, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = *(void (**)(char *, uint64_t))(v20 + 8);
    v49(v70, v9);
    if ((v76 & 1) != 0)
      goto LABEL_40;
    v27 = v69;
    v114(v69);
    TupleTypeMetadata2 = v142;
    v46 = v144;
LABEL_10:
    v32 = v125;
    v8 = v124;
    v48 = v139;
    v49(v138, v9);
    result = (*(uint64_t (**)(char *, uint64_t))(v146 + 8))(v27, v8);
    v47 = v130;
    v45 = (int64_t)v143;
  }
  sub_1BDE27FD0();
  v77 = *v129;
  if ((*v129 & 0xC000000000000001) != 0)
  {
    v78 = sub_1BE1B31C4();
    v131 = 0;
    v79 = 0;
    v80 = 0;
    v139 = v78 | 0x8000000000000000;
  }
  else
  {
    v81 = -1 << *(_BYTE *)(v77 + 32);
    v79 = ~v81;
    v82 = *(_QWORD *)(v77 + 64);
    v131 = v77 + 64;
    v83 = -v81;
    if (v83 < 64)
      v84 = ~(-1 << v83);
    else
      v84 = -1;
    v80 = v84 & v82;
    v139 = v77;
  }
  v85 = v122;
  v86 = v136;
  v87 = v146;
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v137 = 0;
  v88 = v139;
  v132 = v139 & 0x7FFFFFFFFFFFFFFFLL;
  v130 = (unint64_t)(v79 + 64) >> 6;
  v89 = v142;
  v138 = (char *)v79;
  while (2)
  {
    if ((v88 & 0x8000000000000000) != 0)
    {
      if (!sub_1BE1B31DC())
        goto LABEL_74;
      sub_1BE1B3494();
      swift_unknownObjectRelease();
      sub_1BE1B3494();
      swift_unknownObjectRelease();
      goto LABEL_70;
    }
    if (v80)
    {
      v91 = __clz(__rbit64(v80));
      v80 &= v80 - 1;
      v92 = v91 | (v137 << 6);
      goto LABEL_69;
    }
    v93 = v137 + 1;
    if (!__OFADD__(v137, 1))
    {
      if (v93 >= v130)
        goto LABEL_74;
      v94 = *(_QWORD *)(v131 + 8 * v93);
      v95 = v137 + 1;
      if (!v94)
      {
        v95 = v137 + 2;
        if (v137 + 2 >= v130)
          goto LABEL_74;
        v94 = *(_QWORD *)(v131 + 8 * v95);
        if (!v94)
        {
          v95 = v137 + 3;
          if (v137 + 3 >= v130)
            goto LABEL_74;
          v94 = *(_QWORD *)(v131 + 8 * v95);
          if (!v94)
          {
            v96 = v137 + 4;
            while (v130 != v96)
            {
              v94 = *(_QWORD *)(v131 + 8 * v96++);
              if (v94)
              {
                v95 = v96 - 1;
                goto LABEL_68;
              }
            }
LABEL_74:
            v143(v86, 1, 1, v89);
            return sub_1BDE27FD0();
          }
        }
      }
LABEL_68:
      v80 = (v94 - 1) & v94;
      v92 = __clz(__rbit64(v94)) + (v95 << 6);
      v137 = v95;
LABEL_69:
      v97 = v88;
      (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v86, *(_QWORD *)(v88 + 48) + *(_QWORD *)(v87 + 72) * v92, v8);
      (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(&v86[*(int *)(v89 + 48)], *(_QWORD *)(v97 + 56) + *(_QWORD *)(v20 + 72) * v92, v9);
LABEL_70:
      v143(v86, 0, 1, v89);
      v98 = *(int *)(v89 + 48);
      v99 = &v85[v98];
      v100 = v89;
      v101 = &v86[v98];
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v85, v86, v8);
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v99, v101, v9);
      v90 = v85;
      v102 = v135;
      v103 = &v135[*(int *)(v100 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v135, v90, v8);
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v103, v99, v9);
      v104 = *v133;
      swift_bridgeObjectRetain();
      v105 = v134;
      MEMORY[0x1C3B7C58C](v102, v104, v8, v9, *(_QWORD *)(v145 + 104));
      swift_bridgeObjectRelease();
      LODWORD(v104) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v105, 1, v9);
      v106 = v105;
      v87 = v146;
      (*(void (**)(char *, uint64_t))(v140 + 8))(v106, v141);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v103, v9);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v102, v8);
      if ((_DWORD)v104 == 1)
      {
        v108 = *(_QWORD *)(v123 + 24);
        v107 = *(_QWORD *)(v123 + 32);
        v109 = *(_QWORD *)(v145 + 112);
        v110 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v109 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v110(v147, v9, v109);
        v111 = v147[0];
        if ((sub_1BDDB04C0(v147[1], v107) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v90 = v122;
          v87 = v146;
        }
        else
        {
          v112 = sub_1BDDB04C0(v111, v108);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v90 = v122;
          v87 = v146;
          if ((v112 & 1) == 0)
            goto LABEL_51;
        }
        v119(v90);
      }
LABEL_51:
      v89 = v142;
      result = (*(uint64_t (**)(char *, uint64_t))(v144 + 8))(v90, v142);
      v85 = v90;
      v86 = v136;
      v88 = v139;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_1BE0D175C(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;

  v2 = *a1;
  v3 = a1[1];
  swift_beginAccess();
  v4 = v1[3];
  v5 = v1[4];
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = v1[6];
    v7 = qword_1ED6F4510;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7 != -1)
      swift_once();
    swift_retain();
    sub_1BE1B2E40();
    swift_release();
    if (v6 != v11)
    {
      swift_retain();
      sub_1BE1B2E40();
      swift_release();
      sub_1BDDB2D90(v11, v12, v13);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if ((sub_1BDDB04C0(v3, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = 0;
  }
  else
  {
    v9 = sub_1BDDB04C0(v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v9 ^ 1;
  }
  return v8 & 1;
}

uint64_t sub_1BE0D1904(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t (*v83)(__int128 *, uint64_t, uint64_t);
  void (*v84)(__int128 *, _QWORD);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t TupleTypeMetadata2;
  char v122[8];
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;

  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v105 = sub_1BE1B2EE8();
  v107 = *(_QWORD *)(v105 - 8);
  v5 = MEMORY[0x1E0C80A78](v105);
  v102 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v106 = (char *)&v89 - v8;
  v119 = *(_QWORD *)(v4 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v101 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v120 = (char *)&v89 - v12;
  v13 = v3[10];
  v115 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v11);
  v100 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v99 = (char *)&v89 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v89 - v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v110 = sub_1BE1B2EE8();
  v109 = *(_QWORD *)(v110 - 8);
  v20 = MEMORY[0x1E0C80A78](v110);
  v111 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v108 = (char *)&v89 - v22;
  v23 = a1[1];
  v128 = *a1;
  v129 = v23;
  v130 = a1[2];
  if (qword_1ED6F4510 != -1)
    swift_once();
  swift_retain();
  sub_1BE1B2E40();
  swift_release();
  v24 = v123;
  v25 = v118;
  swift_beginAccess();
  v26 = v25[4];
  v27 = *(_QWORD *)(v26 + 16);
  v114 = v19;
  if (v27 && v118[6] != v24)
  {
    swift_retain();
    sub_1BE1B2E40();
    swift_release();
    v28 = v118;
    sub_1BE0D27B0(v123, SBYTE8(v123), v124, 0);
    swift_bridgeObjectRelease();
    v26 = v28[4];
  }
  v29 = v118;
  v118[6] = v24;
  v30 = v29[3];
  v132 = v128;
  v31 = *((_QWORD *)&v128 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDE7775C((uint64_t)&v132);
  v98 = v31;
  if ((sub_1BDDB04C0(v31, v26) & 1) != 0)
  {
    sub_1BDE77790((uint64_t)&v132);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v97 = v132;
  v33 = sub_1BDDB04C0(v132, v30);
  sub_1BDE77790((uint64_t)&v132);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
    return 0;
  v34 = v118[3];
  v35 = v118[4];
  v131 = v129;
  v37 = *((_QWORD *)&v129 + 1);
  v36 = v129;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDE7775C((uint64_t)&v131);
  v94 = v37;
  if ((sub_1BDDB04C0(v37, v35) & 1) != 0)
  {
    sub_1BDE77790((uint64_t)&v131);
    swift_bridgeObjectRelease();
    v38 = swift_bridgeObjectRelease();
  }
  else
  {
    v39 = sub_1BDDB04C0(v36, v34);
    sub_1BDE77790((uint64_t)&v131);
    swift_bridgeObjectRelease();
    v38 = swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
      return 1;
  }
  v93 = v36;
  v117 = (uint64_t)&v89;
  *(_QWORD *)&v123 = *((_QWORD *)&v130 + 1);
  v40 = MEMORY[0x1E0C80A78](v38);
  *(&v89 - 2) = (uint64_t)v118;
  *(&v89 - 1) = (uint64_t)&v128;
  MEMORY[0x1E0C80A78](v40);
  v116 = &v89 - 10;
  *(&v89 - 8) = v13;
  *(&v89 - 7) = v4;
  v41 = v3[12];
  v42 = v3[13];
  *(&v89 - 6) = v41;
  *(&v89 - 5) = v42;
  v43 = v3[14];
  *(&v89 - 4) = v43;
  *(&v89 - 3) = (uint64_t)sub_1BE0DF2E8;
  *(&v89 - 2) = v44;
  swift_getAssociatedTypeWitness();
  v45 = sub_1BE1B2684();
  swift_bridgeObjectRetain();
  v46 = (char *)swift_getTupleTypeMetadata2();
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
  v48 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEA0E0], v45);
  v49 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DF300, (uint64_t)v116, v45, v46, v47, v48, MEMORY[0x1E0DEDB38], (uint64_t)v122);
  swift_bridgeObjectRelease();
  v113 = v43;
  v103 = v41;
  *(_QWORD *)&v123 = v49;
  v50 = sub_1BE1B2A5C();
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v50);
  v127 = sub_1BE1B25E8();
  v51 = v118;
  swift_beginAccess();
  v52 = v51[5];
  if ((v52 & 0xC000000000000001) != 0)
  {
    v53 = sub_1BE1B31C4();
    v92 = 0;
    v54 = 0;
    v55 = 0;
    v56 = v53 | 0x8000000000000000;
  }
  else
  {
    v57 = -1 << *(_BYTE *)(v52 + 32);
    v54 = ~v57;
    v58 = *(_QWORD *)(v52 + 64);
    v92 = (_QWORD *)(v52 + 64);
    v59 = -v57;
    if (v59 < 64)
      v60 = ~(-1 << v59);
    else
      v60 = -1;
    v55 = v60 & v58;
    v56 = v52;
  }
  v61 = v119;
  v62 = v115;
  v63 = v111;
  v64 = v114;
  v104 = v56;
  v96 = v56 & 0x7FFFFFFFFFFFFFFFLL;
  v91 = v54;
  v95 = (unint64_t)(v54 + 64) >> 6;
  v90 = v95 - 1;
  result = swift_bridgeObjectRetain();
  v112 = v42;
  if ((v104 & 0x8000000000000000) != 0)
  {
    v65 = v64;
    if (sub_1BE1B31DC())
    {
      sub_1BE1B3494();
      swift_unknownObjectRelease();
      sub_1BE1B3494();
      swift_unknownObjectRelease();
      v68 = 0;
    }
    else
    {
      v68 = 1;
    }
    v117 = 0;
    v116 = (uint64_t *)v55;
    v61 = v119;
    goto LABEL_31;
  }
  if (v55)
  {
    v65 = v64;
    v116 = (uint64_t *)((v55 - 1) & v55);
    v66 = __clz(__rbit64(v55));
    v117 = 0;
LABEL_22:
    v67 = v104;
    (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v63, *(_QWORD *)(v104 + 48) + *(_QWORD *)(v62 + 72) * v66, v13);
    (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(&v63[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v67 + 56) + *(_QWORD *)(v61 + 72) * v66, v4);
    v68 = 0;
LABEL_31:
    v71 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v63, v68, 1, TupleTypeMetadata2);
    v72 = v108;
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v108, v63, v110);
    v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    v74 = TupleTypeMetadata2;
    if (v73(v72, 1, TupleTypeMetadata2) != 1)
    {
      v75 = v72;
      v76 = &v72[*(int *)(v74 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v65, v75, v13);
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v120, v76, v4);
      v77 = v106;
      v78 = v65;
      v79 = v112;
      MEMORY[0x1C3B7C58C](v78, v127, v13, v4, v112);
      LODWORD(v76) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48))(v77, 1, v4);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v77, v105);
      if ((_DWORD)v76 == 1)
      {
        v80 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
        v81 = v101;
        v80(v101, v120, v4);
        v82 = v113;
        v83 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v113 + 40);
        sub_1BDE7775C((uint64_t)&v132);
        v84 = (void (*)(__int128 *, _QWORD))v83(&v123, v4, v82);
        sub_1BDEEA2F0(v98);
        sub_1BDEEA2F0(v97);
        sub_1BDE77790((uint64_t)&v132);
        v84(&v123, 0);
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v99, v114, v13);
        v85 = v102;
        v80(v102, v81, v4);
        v86 = v119;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v85, 0, 1, v4);
        sub_1BE1B2684();
        sub_1BE1B26B4();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v81, v4);
      }
      *(_QWORD *)&v123 = v13;
      *((_QWORD *)&v123 + 1) = v4;
      v124 = v103;
      v125 = v79;
      v126 = v113;
      type metadata accessor for CRSetRefMergeableDelta.RemovedVersion();
    }
    sub_1BDE27FD0();
    v123 = v131;
    sub_1BDE7775C((uint64_t)&v131);
    v88 = swift_bridgeObjectRetain();
    sub_1BDDAB6AC(v88, (uint64_t *)&v123);
    swift_bridgeObjectRelease();
    sub_1BDE77790((uint64_t)&v131);
    swift_bridgeObjectRelease();
    return 1;
  }
  v69 = 1;
  if (v95 <= 1)
  {
    v65 = v64;
    v116 = 0;
    v68 = 1;
    v117 = 0;
    goto LABEL_31;
  }
  v70 = v92[1];
  if (v70)
  {
LABEL_27:
    v65 = v64;
    v116 = (uint64_t *)((v70 - 1) & v70);
    v117 = v69;
    v66 = __clz(__rbit64(v70)) + (v69 << 6);
    goto LABEL_22;
  }
  if (v95 <= 2)
  {
    v117 = 1;
    v65 = v64;
    v116 = 0;
    v68 = 1;
    goto LABEL_31;
  }
  v70 = v92[2];
  if (v70)
  {
    v69 = 2;
    goto LABEL_27;
  }
  v87 = 3;
  if (v95 <= 3)
  {
    v65 = v64;
    v116 = 0;
    v68 = 1;
    v117 = 2;
    goto LABEL_31;
  }
  v70 = v92[3];
  if (v70)
  {
    v69 = 3;
    goto LABEL_27;
  }
  while (1)
  {
    v69 = v87 + 1;
    if (__OFADD__(v87, 1))
      break;
    if (v69 >= v95)
    {
      v65 = v64;
      v116 = 0;
      v68 = 1;
      v117 = v90;
      goto LABEL_31;
    }
    v70 = v92[v69];
    ++v87;
    if (v70)
      goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE0D27B0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23[2];
  uint64_t v24;
  uint64_t v25;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F43C0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v22[-v13];
  if ((a4 & 1) != 0)
    return sub_1BE0D66E4(v4, a1, a2 & 1, a3);
  sub_1BDDAB368(0, &v24);
  v16 = v24;
  v17 = v25;
  sub_1BE0D66E4(v4, a1, a2 & 1, a3);
  sub_1BDDAB368(0, &v24);
  v18 = v24;
  v19 = v25;
  if (qword_1ED6F4510 != -1)
    swift_once();
  v24 = v16;
  v25 = v17;
  v23[0] = v18;
  v23[1] = v19;
  v20 = qword_1ED6F3700;
  swift_retain();
  swift_retain();
  if (v20 != -1)
    swift_once();
  sub_1BE1B2E40();
  swift_release();
  v21 = type metadata accessor for Replica();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 1, 1, v21);
  sub_1BDDAC84C(&v24, v23, (uint64_t)v14, (uint64_t)v12);
  swift_release();
  sub_1BDD86E30((uint64_t)v12, &qword_1ED6F43C0);
  sub_1BDD86E30((uint64_t)v14, &qword_1ED6F43C0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0D29E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F43C0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v18 - v7;
  v9 = sub_1BDDAB368(0, &v20);
  v10 = v20;
  v11 = v21;
  if (*(_QWORD *)(v21 + 16) || *(_QWORD *)(v20 + 16))
  {
    v18[1] = v3;
    if (qword_1ED6F4510 != -1)
      v9 = swift_once();
    v12 = qword_1ED6F8BE8;
    MEMORY[0x1E0C80A78](v9);
    v18[-4] = v12;
    v18[-3] = v10;
    v18[-2] = v11;
    v18[-1] = a1;
    swift_retain();
    sub_1BE1B2E40();
    swift_release();
    sub_1BE0D27B0(v20, v21, v22, 1);
    swift_bridgeObjectRelease();
    sub_1BDDAB368(0, &v20);
    v13 = v20;
    v14 = v21;
    v15 = qword_1ED6F3700;
    swift_retain();
    if (v15 != -1)
      swift_once();
    sub_1BE1B2E40();
    swift_release();
    v16 = type metadata accessor for Replica();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
    v20 = v10;
    v21 = v11;
    v19[0] = v13;
    v19[1] = v14;
    swift_retain();
    sub_1BDDAC84C(&v20, v19, (uint64_t)v8, (uint64_t)v6);
    swift_release();
    sub_1BDD86E30((uint64_t)v6, &qword_1ED6F43C0);
    sub_1BDD86E30((uint64_t)v8, &qword_1ED6F43C0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED6F4510 != -1)
      swift_once();
    swift_retain();
    sub_1BE1B2E40();
    result = swift_release();
    *(_QWORD *)(v1 + 48) = v20;
  }
  return result;
}

uint64_t sub_1BE0D2CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *TupleTypeMetadata2;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[10];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[15];

  v62 = a7;
  v60 = a6;
  v61 = a5;
  v63 = a4;
  v59 = a3;
  v67 = a2;
  v58[9] = a8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v58 - v13;
  v15 = type metadata accessor for Proto_Version(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (_QWORD *)((char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v21 = (_QWORD *)((char *)v58 - v20);
  v22 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  v66 = a1;
  v64 = v22;
  v23 = *(_QWORD *)(a1 + v22);
  v24 = v23 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v24, (uint64_t)v14, &qword_1ED6F37A8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v25(v14, 1, v15) == 1)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    *v21 = MEMORY[0x1E0DEE9D8];
    v21[1] = v26;
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v14, &qword_1ED6F37A8);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v14, (uint64_t)v21, type metadata accessor for Proto_Version);
  }
  v27 = v67;
  swift_retain();
  v28 = v65;
  sub_1BDDA9DA0(v21, v27, &v68);
  if (!v28)
  {
    v30 = v68;
    v31 = v23 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__minVersion;
    swift_beginAccess();
    sub_1BDD86DEC(v31, (uint64_t)v12, &qword_1ED6F37A8);
    if (v25(v12, 1, v15) == 1)
    {
      v32 = MEMORY[0x1E0DEE9D8];
      *v19 = MEMORY[0x1E0DEE9D8];
      v19[1] = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BE1B20E4();
      sub_1BDD86E30((uint64_t)v12, &qword_1ED6F37A8);
    }
    else
    {
      sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Proto_Version);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v33 = v67;
    v34 = v64;
    swift_retain();
    sub_1BDDA9DA0(v19, v33, &v68);
    v58[7] = *((_QWORD *)&v30 + 1);
    v58[8] = v30;
    v35 = v68;
    v36 = (_QWORD *)(*(_QWORD *)(v66 + v34)
                   + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
    v37 = swift_beginAccess();
    v65 = v58;
    *(_QWORD *)&v68 = *v36;
    MEMORY[0x1E0C80A78](v37);
    v38 = v59;
    v39 = v63;
    v58[-6] = v59;
    v58[-5] = v39;
    v40 = v60;
    v58[-4] = v61;
    v58[-3] = v40;
    v58[-2] = v62;
    v58[-1] = v41;
    v58[5] = v35;
    swift_bridgeObjectRetain();
    v58[6] = *((_QWORD *)&v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EE998);
    v58[4] = swift_getAssociatedTypeWitness();
    TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
    v45 = sub_1BDDA9D60((unint64_t *)&qword_1ED6EE9A0, &qword_1ED6EE998, MEMORY[0x1E0DEAF50]);
    v46 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DF274, (uint64_t)&v58[-8], v42, TupleTypeMetadata2, v44, v45, MEMORY[0x1E0DEDB38], (uint64_t)v72);
    v58[1] = v45;
    v58[2] = v44;
    v58[3] = v42;
    v47 = swift_bridgeObjectRelease();
    *(_QWORD *)&v68 = v46;
    MEMORY[0x1E0C80A78](v47);
    v48 = v63;
    v58[-6] = v38;
    v58[-5] = v48;
    v49 = v61;
    v50 = v60;
    v58[-4] = v61;
    v58[-3] = v50;
    v51 = v62;
    v58[-2] = v62;
    v52 = sub_1BE1B2A5C();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v52);
    sub_1BE1B2690();
    v53 = v51;
    v54 = (_QWORD *)(*(_QWORD *)(v66 + v64)
                   + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removed);
    v55 = swift_beginAccess();
    v65 = v58;
    v72[14] = *v54;
    MEMORY[0x1E0C80A78](v55);
    v56 = v63;
    v58[-6] = v38;
    v58[-5] = v56;
    v58[-4] = v49;
    v58[-3] = v50;
    v57 = v67;
    v58[-2] = v53;
    v58[-1] = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(_QWORD *)&v68 = v38;
    *((_QWORD *)&v68 + 1) = v56;
    v69 = v49;
    v70 = v50;
    v71 = v53;
    type metadata accessor for CRSetRefMergeableDelta.RemovedVersion();
  }
  swift_release();
  return sub_1BDD9C3E0(v66, type metadata accessor for Proto_Set);
}

void sub_1BE0D3414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v16 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DF290, v9, *(_QWORD *)(v14 - 360), TupleTypeMetadata2, *(_QWORD *)(v14 - 368), *(_QWORD *)(v14 - 376), MEMORY[0x1E0DEDB38], v14 - 192);
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BDD9C3E0(*(_QWORD *)(v14 - 248), type metadata accessor for Proto_Set);
    swift_bridgeObjectRelease();
    JUMPOUT(0x1BE0D3314);
  }
  v17 = v11;
  v18 = v16;
  v19 = swift_bridgeObjectRelease();
  *(_QWORD *)(v14 - 232) = v18;
  MEMORY[0x1E0C80A78](v19);
  v20 = *(_QWORD *)(v14 - 272);
  *(&a9 - 6) = v10;
  *(&a9 - 5) = v20;
  *(&a9 - 4) = *(_QWORD *)(v14 - 288);
  *(&a9 - 3) = v17;
  *(&a9 - 2) = *(_QWORD *)(v14 - 280);
  v21 = sub_1BE1B2A5C();
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v21);
  v22 = sub_1BE1B2690();
  swift_release();
  sub_1BDD9C3E0(*(_QWORD *)(v14 - 248), type metadata accessor for Proto_Set);
  v23 = *(_QWORD *)(v14 - 344);
  swift_bridgeObjectRetain();
  v24 = *(_QWORD *)(v14 - 336);
  swift_bridgeObjectRetain();
  v25 = *(_QWORD *)(v14 - 320);
  swift_bridgeObjectRetain();
  v26 = *(_QWORD *)(v14 - 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = *(_QWORD **)(v14 - 312);
  *v27 = v23;
  v27[1] = v24;
  v27[2] = v25;
  v27[3] = v26;
  v27[4] = v22;
  v27[5] = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BE0D333CLL);
}

uint64_t sub_1BE0D36E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v75 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v73 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v80 = (uint64_t *)((char *)&v69 - v9);
  v79 = type metadata accessor for Proto_Version(0);
  v71 = *(_QWORD *)(v79 - 8);
  v10 = MEMORY[0x1E0C80A78](v79);
  v72 = (uint64_t *)((char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v69 - v12);
  v15 = *v3;
  v14 = v3[1];
  v17 = v3[2];
  v16 = v3[3];
  v70 = v3[4];
  v74 = v3[5];
  sub_1BE1B20E4();
  v18 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  if (qword_1ED6F2808 != -1)
    swift_once();
  *(_QWORD *)(a3 + v18) = qword_1ED6F2800;
  v76 = *(char **)(a1 + 16);
  v77 = a3;
  v19 = *(_QWORD *)(v16 + 16);
  v88 = v17;
  v81 = a1;
  v78 = v18;
  if (v19)
  {
    v89 = v16;
    v20 = qword_1ED6F4510;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v21 = swift_retain();
    if (v20 != -1)
      v21 = swift_once();
    v22 = qword_1ED6F8BE8;
    MEMORY[0x1E0C80A78](v21);
    *(&v69 - 4) = v22;
    *(&v69 - 3) = v17;
    v23 = v76;
    *(&v69 - 2) = v16;
    *(&v69 - 1) = (uint64_t)v23;
    swift_retain();
    v24 = v82;
    sub_1BE1B2E40();
    v82 = v24;
    swift_release();
    sub_1BDDB2D90(v83, v84, v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v88;
    v16 = v89;
    a3 = v77;
    v18 = v78;
    a1 = v81;
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v83 = v17;
  v84 = v16;
  sub_1BDDAD780(a1, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    v25 = swift_retain();
    *(_QWORD *)(a3 + v18) = sub_1BDDA1768(v25);
    swift_release();
  }
  v26 = *(_QWORD *)(a3 + v18);
  v27 = (uint64_t)v80;
  sub_1BDDA2E8C((uint64_t)v13, (uint64_t)v80, type metadata accessor for Proto_Version);
  v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56);
  v28(v27, 0, 1, v79);
  v29 = v73;
  sub_1BDDA2EF0(v27, v73, &qword_1ED6F37A8);
  v30 = v26 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v29, v30, &qword_1ED6F37A8);
  swift_endAccess();
  swift_release();
  v31 = *(_QWORD *)(v14 + 16);
  v88 = v15;
  if (v31)
  {
    v32 = a3;
    v89 = v14;
    v33 = qword_1ED6F4510;
    swift_bridgeObjectRetain_n();
    v34 = swift_bridgeObjectRetain_n();
    if (v33 != -1)
      v34 = swift_once();
    v35 = qword_1ED6F8BE8;
    MEMORY[0x1E0C80A78](v34);
    *(&v69 - 4) = v35;
    *(&v69 - 3) = v15;
    v36 = v76;
    *(&v69 - 2) = v14;
    *(&v69 - 1) = (uint64_t)v36;
    swift_retain();
    v37 = v82;
    sub_1BE1B2E40();
    v82 = v37;
    swift_release();
    sub_1BDDB2D90(v83, v84, v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v88;
    v14 = v89;
    a3 = v32;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v83 = v15;
  v84 = v14;
  v38 = v72;
  sub_1BDDAD780(v81, v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    v39 = swift_retain();
    *(_QWORD *)(a3 + v18) = sub_1BDDA1768(v39);
    swift_release();
  }
  v40 = *(_QWORD *)(a3 + v18);
  v41 = (uint64_t)v38;
  v42 = (uint64_t)v80;
  sub_1BDDA2E8C(v41, (uint64_t)v80, type metadata accessor for Proto_Version);
  v28(v42, 0, 1, v79);
  sub_1BDDA2EF0(v42, v29, &qword_1ED6F37A8);
  v43 = v40 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__minVersion;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v29, v43, &qword_1ED6F37A8);
  swift_endAccess();
  v44 = swift_release();
  v80 = &v69;
  v83 = v74;
  v45 = MEMORY[0x1E0C80A78](v44);
  v46 = v75;
  v48 = v75[2];
  v47 = v75[3];
  *(&v69 - 6) = v48;
  *(&v69 - 5) = v47;
  v49 = v46[5];
  *(&v69 - 4) = v46[4];
  *(&v69 - 3) = v49;
  v50 = v46[6];
  v51 = v81;
  *(&v69 - 2) = v50;
  *(&v69 - 1) = v51;
  MEMORY[0x1E0C80A78](v45);
  *(&v69 - 8) = v48;
  *(&v69 - 7) = v47;
  v79 = v52;
  *(&v69 - 6) = v52;
  *(&v69 - 5) = v49;
  *(&v69 - 4) = v50;
  *(&v69 - 3) = (uint64_t)sub_1BE0DF208;
  *(&v69 - 2) = v53;
  swift_getAssociatedTypeWitness();
  v54 = sub_1BE1B2684();
  v55 = (char *)type metadata accessor for Proto_Set.Element(0);
  swift_bridgeObjectRetain();
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
  v57 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEA0E0], v54);
  v58 = v82;
  v59 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DF228, (uint64_t)(&v69 - 10), v54, v55, v56, v57, MEMORY[0x1E0DEDB38], (uint64_t)&v88);
  swift_bridgeObjectRelease();
  if (!v58)
  {
    v74 = v50;
    v75 = (_QWORD *)v56;
    v61 = v79;
    v76 = v55;
    v62 = v77;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v63 = v78;
      type metadata accessor for Proto_Set._StorageClass(0);
      swift_allocObject();
      v64 = swift_retain();
      *(_QWORD *)(v62 + v63) = sub_1BDDA1768(v64);
      swift_release();
    }
    v65 = (uint64_t *)(*(_QWORD *)(v62 + v78)
                    + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
    swift_beginAccess();
    *v65 = v59;
    swift_bridgeObjectRelease();
    v82 = &v69;
    v90 = v70;
    MEMORY[0x1E0C80A78](v70);
    *(&v69 - 6) = v48;
    *(&v69 - 5) = v47;
    v66 = v61;
    *(&v69 - 4) = v61;
    *(&v69 - 3) = v49;
    v67 = v74;
    v68 = v81;
    *(&v69 - 2) = v74;
    *(&v69 - 1) = v68;
    swift_bridgeObjectRetain();
    v83 = v48;
    v84 = v47;
    v85 = v66;
    v86 = v49;
    v87 = v67;
    type metadata accessor for CRSetRefMergeableDelta.RemovedVersion();
  }
  return sub_1BDD9C3E0(v77, type metadata accessor for Proto_Set);
}

uint64_t CRSet.makeIterator()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = -1;
  v6 = *(_QWORD *)(v4 + 64);
  v7 = -1 << *(_BYTE *)(v4 + 32);
  if (-v7 < 64)
    v5 = ~(-1 << -(char)v7);
  *a1 = v4;
  a1[1] = v4 + 64;
  a1[2] = ~v7;
  a1[3] = 0;
  a1[4] = v5 & v6;
  return swift_bridgeObjectRetain();
}

uint64_t CRSet.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = sub_1BE1B2EE8();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v35 - v11;
  v14 = *v2;
  v13 = v2[1];
  v16 = v2[2];
  v15 = v2[3];
  v17 = v15;
  v18 = v2[4];
  v39 = v13;
  v40 = v19;
  v38 = v16;
  if (!v18)
  {
    v26 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      return result;
    }
    v27 = (unint64_t)(v16 + 64) >> 6;
    if (v26 < v27)
    {
      v28 = *(_QWORD *)(v13 + 8 * v26);
      if (v28)
      {
LABEL_7:
        v35 = v6;
        v36 = a2;
        v20 = (v28 - 1) & v28;
        v21 = __clz(__rbit64(v28)) + (v26 << 6);
        v37 = v26;
        goto LABEL_3;
      }
      v17 = v15 + 1;
      if (v15 + 2 < v27)
      {
        v28 = *(_QWORD *)(v13 + 8 * (v15 + 2));
        if (v28)
        {
          v26 = v15 + 2;
          goto LABEL_7;
        }
        v26 = v15 + 3;
        v17 = v15 + 2;
        if (v15 + 3 < v27)
        {
          v28 = *(_QWORD *)(v13 + 8 * v26);
          if (v28)
            goto LABEL_7;
          v17 = v27 - 1;
          v29 = v15 + 4;
          while (v27 != v29)
          {
            v28 = *(_QWORD *)(v13 + 8 * v29++);
            if (v28)
            {
              v26 = v29 - 1;
              goto LABEL_7;
            }
          }
        }
      }
    }
    v37 = v17;
    v25 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v12, 1, 1, TupleTypeMetadata2);
    v20 = 0;
    goto LABEL_18;
  }
  v36 = a2;
  v37 = v15;
  v35 = v6;
  v20 = (v18 - 1) & v18;
  v21 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
  (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v12, *(_QWORD *)(v14 + 48) + *(_QWORD *)(*(_QWORD *)(v4 - 8) + 72) * v21, v4);
  v22 = (_QWORD *)(*(_QWORD *)(v14 + 56) + 16 * v21);
  v23 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v24 = v22[1];
  *(_QWORD *)v23 = *v22;
  *((_QWORD *)v23 + 1) = v24;
  v25 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v12, 0, 1, TupleTypeMetadata2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v35;
  a2 = v36;
LABEL_18:
  v30 = v39;
  *v2 = v14;
  v2[1] = v30;
  v31 = v37;
  v2[2] = v38;
  v2[3] = v31;
  v2[4] = v20;
  v32 = v40;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v9, v12, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v6);
    v33 = *(_QWORD *)(v4 - 8);
    v34 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(v4 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(a2, v9, v4);
    v34 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(a2, v34, 1, v4);
}

BOOL CRSet.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *v2;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 40);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B7C58C](&v11, a1, v6, v7, &type metadata for CRSetElement, v8);
  swift_bridgeObjectRelease();
  v9 = v11;
  if (v11)
    sub_1BDDC8EA0(v11);
  return v9 != 0;
}

uint64_t sub_1BE0D43F4()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5254F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BE1B61C0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 32) = sub_1BDEEECF8();
  *(_QWORD *)(v0 + 40) = sub_1BDEEECF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF525528);
  sub_1BDEF2354();
  sub_1BE1B2708();
  swift_bridgeObjectRelease();
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 91;
}

double sub_1BE0D4518@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  __int128 v17;
  _OWORD *v18;

  v18 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Version(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_Set.Element(0) + 20))
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v8, &qword_1ED6F37A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    *v12 = MEMORY[0x1E0DEE9D8];
    v12[1] = v14;
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v8, &qword_1ED6F37A8);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Version);
  }
  sub_1BDDA9DA0(v12, a2, &v17);
  sub_1BDD9C3E0(a1, type metadata accessor for Proto_Set.Element);
  if (!v3)
  {
    result = *(double *)&v17;
    *v18 = v17;
  }
  return result;
}

uint64_t sub_1BE0D46B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = type metadata accessor for Proto_Version(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *v2;
  v9 = v2[1];
  sub_1BE1B20E4();
  v10 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  if (qword_1ED6EF6F0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v10) = qword_1ED6EF6E0;
  if (*(_QWORD *)(v9 + 16))
  {
    v22 = a1;
    v11 = *(_QWORD *)(a1 + 16);
    v20 = v8;
    v21 = v9;
    v12 = qword_1ED6F4510;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v13 = swift_retain();
    if (v12 != -1)
      v13 = swift_once();
    v14 = qword_1ED6F8BE8;
    MEMORY[0x1E0C80A78](v13);
    *(&v16 - 4) = v14;
    *(&v16 - 3) = v8;
    *(&v16 - 2) = v9;
    *(&v16 - 1) = v11;
    swift_retain();
    sub_1BE1B2E40();
    swift_release();
    sub_1BDDB2D90(v17, v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v20;
    v9 = v21;
    a1 = v22;
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v17 = v8;
  v18 = v9;
  sub_1BDDAD780(a1, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BE12B41C((uint64_t)v7);
}

uint64_t sub_1BE0D48D0@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  __int128 v11;

  v4 = *a1;
  v5 = a1[1];
  v7 = *v2;
  v6 = v2[1];
  swift_bridgeObjectRetain();
  v8 = swift_bridgeObjectRetain();
  if ((sub_1BDDB04C0(v8, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    *(_QWORD *)&v11 = v7;
    *((_QWORD *)&v11 + 1) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BDEE9868(v5);
    result = sub_1BDEE9868(v4);
    *(_OWORD *)a2 = v11;
    return result;
  }
  v9 = sub_1BDDB04C0(v7, v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_4;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1BE0D49A0(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  v5 = *a2;
  v6 = a2[1];
  v7 = *a3;
  v8 = a3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDEEAE08(v6, v4, v8);
  sub_1BDEEAE08(v5, v3, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1BE0D4A28@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_1BE0D4518(a1, a2, a3);
}

uint64_t sub_1BE0D4A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BE0D46B4(a1, a2);
}

void sub_1BE0D4A54()
{
  type metadata accessor for CRSetRefMergeableDelta.RemovedVersion();
}

uint64_t sub_1BE0D4A88()
{
  swift_getTupleTypeMetadata2();
  sub_1BE1B29D8();
  return sub_1BE1B25DC();
}

uint64_t sub_1BE0D4AD4()
{
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_1BE1B29D8();
  return sub_1BE1B25DC();
}

uint64_t sub_1BE0D4B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, _QWORD *a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t AssociatedConformanceWitness;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a6;
  v36 = a7;
  v37 = a5;
  v34 = a4;
  v39 = a8;
  v11 = type metadata accessor for Proto_Set.Element(0);
  MEMORY[0x1E0C80A78](v11);
  v33 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Proto_Value(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(int *)(v11 + 20);
  v32 = a1;
  v21 = *(_QWORD *)(a1 + v20)
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v21, (uint64_t)v15, &qword_1ED6F3770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BE1B20E4();
    v22 = *(int *)(v16 + 20);
    if (qword_1ED6F2718 != -1)
      swift_once();
    *(_QWORD *)&v19[v22] = qword_1ED6F2708;
    swift_retain();
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F3770);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v15, (uint64_t)v19, type metadata accessor for Proto_Value);
  }
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1BDDB4FC0((uint64_t)v19, a2);
  swift_release();
  v23 = *(_QWORD *)(*(_QWORD *)(v37 + 8) + 8);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 8);
  v25 = swift_retain();
  v26 = v38;
  v24(v25, a3, v23);
  if (v26)
  {
    result = swift_release();
    *v36 = v26;
  }
  else
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getTupleTypeMetadata2();
    v38 = a3;
    v29 = v33;
    sub_1BDD9C318(v32, v33, type metadata accessor for Proto_Set.Element);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
    swift_retain();
    v31(v29, a2, AssociatedTypeWitness, AssociatedConformanceWitness);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE0D4E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v55 = a8;
  v50 = a7;
  v49 = a6;
  v58 = a5;
  v48 = a4;
  v51 = a9;
  v12 = type metadata accessor for Proto_Version(0);
  v53 = *(_QWORD *)(v12 - 8);
  v54 = v12;
  MEMORY[0x1E0C80A78](v12);
  v46 = (_QWORD **)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v47 = (uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v46 - v18;
  v63 = a3;
  v52 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v17);
  v57 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Proto_Value(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_Set.Element(0) + 20));
  v29 = v28 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v29, (uint64_t)v23, &qword_1ED6F3770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_1BE1B20E4();
    v30 = *(int *)(v24 + 20);
    if (qword_1ED6F2718 != -1)
      swift_once();
    *(_QWORD *)&v27[v30] = qword_1ED6F2708;
    swift_retain();
    sub_1BDD86E30((uint64_t)v23, &qword_1ED6F3770);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v23, (uint64_t)v27, type metadata accessor for Proto_Value);
  }
  v31 = v63;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1BDDB4FC0((uint64_t)v27, a2);
  swift_release();
  v32 = *(_QWORD *)(*(_QWORD *)(v58 + 8) + 8);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 8);
  v34 = swift_retain();
  v35 = v56;
  v33(v34, v31, v32);
  if (!v35)
  {
    v37 = v28
        + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
    swift_beginAccess();
    sub_1BDD86DEC(v37, (uint64_t)v19, &qword_1ED6F37A8);
    v38 = v54;
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
    LODWORD(v37) = v39(v19, 1, v54);
    sub_1BDD86E30((uint64_t)v19, &qword_1ED6F37A8);
    if ((_DWORD)v37 == 1)
    {
      swift_release();
      v40 = v63;
      v41 = v58;
    }
    else
    {
      v42 = v28
          + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
      swift_beginAccess();
      v43 = v47;
      sub_1BDD86DEC(v42, v47, &qword_1ED6F37A8);
      if (v39((char *)v43, 1, v38) == 1)
      {
        v44 = MEMORY[0x1E0DEE9D8];
        v45 = v46;
        *v46 = MEMORY[0x1E0DEE9D8];
        v45[1] = v44;
        sub_1BE1B20E4();
        sub_1BDD86E30(v43, &qword_1ED6F37A8);
      }
      else
      {
        v45 = v46;
        sub_1BDDA2E8C(v43, (uint64_t)v46, type metadata accessor for Proto_Version);
      }
      v40 = v63;
      v41 = v58;
      swift_retain();
      sub_1BDDA9DA0(v45, a2, &v59);
      swift_release();
    }
    *(_QWORD *)&v59 = v40;
    *((_QWORD *)&v59 + 1) = v48;
    v60 = v41;
    v61 = v49;
    v62 = v50;
    type metadata accessor for CRSetRefMergeableDelta.RemovedVersion();
  }
  result = swift_release();
  *v55 = v35;
  return result;
}

uint64_t sub_1BE0D5388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a6;
  v41 = a7;
  v38 = a4;
  v39 = a1;
  v43 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v14 = MEMORY[0x1E0C80A78](v13);
  v35 = (uint64_t)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v36 = (char *)&v35 - v16;
  v17 = type metadata accessor for Proto_Value(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v42 = a8;
  v37 = a5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  v23 = swift_checkMetadataState();
  v24 = v44;
  result = v22(a3, v23, AssociatedConformanceWitness);
  if (!v24)
  {
    v43 = v18;
    v44 = v17;
    v26 = (uint64_t)v36;
    MEMORY[0x1E0C80A78](result);
    v27 = v37;
    *(&v35 - 8) = v38;
    *(&v35 - 7) = v27;
    v28 = v41;
    *(&v35 - 6) = v40;
    *(&v35 - 5) = v28;
    v29 = v39;
    *(&v35 - 4) = v42;
    *(&v35 - 3) = v29;
    *(&v35 - 2) = a3;
    sub_1BDE1CC84((void (*)(uint64_t))sub_1BE0DF260, (uint64_t)v20);
    v30 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set.Element._StorageClass(0);
      swift_allocObject();
      v31 = swift_retain();
      *(_QWORD *)(a9 + v30) = sub_1BE13500C(v31);
      swift_release();
    }
    v32 = *(_QWORD *)(a9 + v30);
    sub_1BDDA2E8C((uint64_t)v20, v26, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v26, 0, 1, v44);
    v33 = v35;
    sub_1BDDA2EF0(v26, v35, &qword_1ED6F3770);
    v34 = v32 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v33, v34, &qword_1ED6F3770);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE0D5688(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  if (v9)
    *a9 = v9;
  return result;
}

void sub_1BE0D5734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a8;
  v38 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v25 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v24 = (char *)v22 - v16;
  v23 = type metadata accessor for Proto_Version(0);
  v22[1] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v22[0] = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v19 = MEMORY[0x1E0C80A78](v18);
  v27 = (char *)v22 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v26 = (char *)v22 - v21;
  v33 = a3;
  v34 = a4;
  v29 = a4;
  v30 = a5;
  v35 = a5;
  v36 = a6;
  v31 = a6;
  v32 = a7;
  v37 = a7;
  type metadata accessor for CRSetRefMergeableDelta.RemovedVersion();
}

uint64_t sub_1BE0D58A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[96];

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v3 - 200) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v5 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  *(_QWORD *)(v3 - 240) = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v8 = &v53[-v7];
  v9 = type metadata accessor for Proto_Value(0);
  *(_QWORD *)(v3 - 272) = v9;
  *(_QWORD *)(v3 - 280) = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)(v3 - 192) = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BE1B20E4();
  v11 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  if (qword_1ED6EF6F0 != -1)
    swift_once();
  *(_QWORD *)(v1 + v11) = qword_1ED6EF6E0;
  v12 = *(int *)(TupleTypeMetadata2 + 48);
  *(_QWORD *)(v3 - 208) = v1;
  v13 = (uint64_t *)&v8[v12];
  *(_QWORD *)(v3 - 288) = v2;
  v14 = (uint64_t *)(v2 + v12);
  v15 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)(v3 - 296) = v15;
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16);
  *(_QWORD *)(v3 - 264) = v16;
  v17 = v16(v8, v2, v0);
  *(_QWORD *)(v3 - 232) = v11;
  *(_QWORD *)(v3 - 216) = v53;
  v18 = *v14;
  v19 = v14[1];
  *v13 = *v14;
  v13[1] = v19;
  MEMORY[0x1E0C80A78](v17);
  v20 = *(_QWORD *)(v3 - 184);
  *(_QWORD *)&v53[-64] = v0;
  *(_QWORD *)&v53[-56] = v20;
  v21 = *(_QWORD *)(v3 - 168);
  *(_QWORD *)&v53[-48] = *(_QWORD *)(v3 - 176);
  *(_QWORD *)&v53[-40] = v21;
  *(_QWORD *)&v53[-32] = *(_QWORD *)(v3 - 160);
  *(_QWORD *)&v53[-24] = v8;
  *(_QWORD *)&v53[-16] = *(_QWORD *)(v3 - 72);
  swift_retain();
  sub_1BDDC8E74(v18);
  v22 = *(_QWORD *)(v3 - 192);
  v23 = *(_QWORD *)(v3 - 152);
  sub_1BDE1CC84((void (*)(uint64_t))sub_1BE0DF260, v22);
  if (v23)
  {
    sub_1BDD9C3E0(*(_QWORD *)(v3 - 208), type metadata accessor for Proto_Set.Element);
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 200) + 8))(v8, TupleTypeMetadata2);
    **(_QWORD **)(v3 - 224) = v23;
  }
  else
  {
    *(_QWORD *)(v3 - 160) = v14;
    *(_QWORD *)(v3 - 152) = v0;
    v25 = TupleTypeMetadata2;
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 200) + 8))(v8, TupleTypeMetadata2);
    v26 = *(_QWORD *)(v3 - 208);
    v27 = *(_QWORD *)(v3 - 232);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set.Element._StorageClass(0);
      swift_allocObject();
      v28 = swift_retain();
      *(_QWORD *)(v26 + v27) = sub_1BE13500C(v28);
      swift_release();
    }
    v29 = *(_QWORD *)(v26 + v27);
    v30 = *(_QWORD *)(v3 - 256);
    sub_1BDDA2E8C(v22, v30, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 280) + 56))(v30, 0, 1, *(_QWORD *)(v3 - 272));
    v31 = *(_QWORD *)(v3 - 248);
    sub_1BDDA2EF0(v30, v31, &qword_1ED6F3770);
    v32 = v29 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v31, v32, &qword_1ED6F3770);
    swift_endAccess();
    swift_release();
    v33 = *(_QWORD *)(v3 - 240);
    v34 = (uint64_t *)(v33 + *(int *)(v25 + 48));
    v35 = *(_QWORD *)(v3 - 152);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 - 264))(v33, *(_QWORD *)(v3 - 288), v35);
    v36 = *(uint64_t **)(v3 - 160);
    v37 = *v36;
    v38 = v36[1];
    *v34 = *v36;
    v34[1] = v38;
    if (v37)
    {
      v39 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 296) + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(v33, v35);
      v40 = *(_QWORD *)(v3 - 72);
      v41 = *(_QWORD *)(v40 + 16);
      v42 = *(_QWORD *)(v38 + 16);
      *(_QWORD *)(v3 - 144) = v37;
      if (v42)
      {
        *(_QWORD *)(v3 - 136) = v38;
        v43 = qword_1ED6F4510;
        swift_bridgeObjectRetain();
        v44 = swift_bridgeObjectRetain();
        if (v43 != -1)
          v44 = swift_once();
        v45 = qword_1ED6F8BE8;
        MEMORY[0x1E0C80A78](v44);
        *(_QWORD *)&v53[-32] = v45;
        *(_QWORD *)&v53[-24] = v37;
        *(_QWORD *)&v53[-16] = v38;
        *(_QWORD *)&v53[-8] = v41;
        swift_retain();
        sub_1BE1B2E40();
        swift_release();
        sub_1BDDB2D90(*(_QWORD *)(v3 - 128), *(unsigned __int8 *)(v3 - 120), *(_QWORD *)(v3 - 112));
        swift_bridgeObjectRelease();
        sub_1BDDC8EA0(v37);
        v37 = *(_QWORD *)(v3 - 144);
        v38 = *(_QWORD *)(v3 - 136);
      }
      *(_QWORD *)(v3 - 128) = v37;
      *(_QWORD *)(v3 - 120) = v38;
      v46 = *(_QWORD **)(v3 - 336);
      sub_1BDDAD780(v40, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = *(_QWORD *)(v3 - 232);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set.Element._StorageClass(0);
        swift_allocObject();
        v48 = swift_retain();
        *(_QWORD *)(v26 + v47) = sub_1BE13500C(v48);
        swift_release();
      }
      v49 = *(_QWORD *)(v26 + v47);
      v50 = *(_QWORD *)(v3 - 312);
      sub_1BDDA2E8C((uint64_t)v46, v50, type metadata accessor for Proto_Version);
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 328) + 56))(v50, 0, 1, *(_QWORD *)(v3 - 320));
      v51 = *(_QWORD *)(v3 - 304);
      sub_1BDDA2EF0(v50, v51, &qword_1ED6F37A8);
      v52 = v49
          + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v51, v52, &qword_1ED6F37A8);
      swift_endAccess();
      return swift_release();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 296) + 8))(v33, v35);
    }
  }
  return result;
}

uint64_t sub_1BE0D5E80(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  sub_1BDDAABC8(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_1BE0D5EE4()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1BDDAB4B0();
  return v0;
}

uint64_t sub_1BE0D5F18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v11[2];
  uint64_t v12;

  v1 = v0;
  v2 = *v0;
  if (qword_1ED6F4510 != -1)
    swift_once();
  swift_retain();
  sub_1BDDAB368(0, &v12);
  v3 = swift_bridgeObjectRetain();
  sub_1BDF0DD54(v3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  v4 = qword_1ED6F3700;
  swift_retain();
  if (v4 != -1)
    swift_once();
  type metadata accessor for ReplicaState();
  sub_1BE1B2E40();
  swift_release();
  v5 = v12;
  swift_beginAccess();
  v6 = v1[4];
  v11[0] = v1[3];
  v11[1] = v6;
  swift_beginAccess();
  v8 = v1[5];
  v7 = v1[6];
  v9 = *(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v9(v5, v11, v8, v7);
}

uint64_t sub_1BE0D60A4()
{
  sub_1BDDAA81C();
  return swift_deallocClassInstance();
}

BOOL sub_1BE0D60C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  _QWORD v18[2];

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = (char *)v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)v18 - v14, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(&v15[*(int *)(TupleTypeMetadata2 + 48)], a2, a4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a7 + 24))(v18, a4, a7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, TupleTypeMetadata2);
  if (*(_QWORD *)(v18[1] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v17 = *(_QWORD *)(v18[0] + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17 != 0;
  }
}

uint64_t sub_1BE0D61FC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, _QWORD *a5, _OWORD *a6)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  __int128 v33;
  int v34;
  __int128 v35;
  char *v36;
  int v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  _OWORD v52[2];
  __int128 v53;
  _OWORD v54[2];
  char *v55;

  v43 = a6;
  v51 = a4;
  v45 = a2;
  v46 = a1;
  v8 = (_QWORD *)*a5;
  v9 = *(_QWORD *)(*a5 + 88);
  v48 = sub_1BE1B2EE8();
  v10 = *(_QWORD *)(v48 - 8);
  v11 = MEMORY[0x1E0C80A78](v48);
  v55 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v41 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v41 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v41 - v19;
  swift_beginAccess();
  v21 = a5[5];
  v22 = v8[10];
  v23 = v8[13];
  swift_bridgeObjectRetain();
  v47 = a3;
  v44 = v22;
  MEMORY[0x1C3B7C58C](a3, v21, v22, v9, v23);
  swift_bridgeObjectRelease();
  v24 = v8[14];
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v27 = swift_checkMetadataState();
  v50 = v18;
  v28 = v48;
  v26(v20, v27, AssociatedConformanceWitness);
  v29 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v51 = v20;
  v49 = v29;
  v29(v15, v20, v28);
  v30 = *(_QWORD *)(v9 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v31(v15, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v28);
    v32 = v50;
  }
  else
  {
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v24 + 24))(v52, v9, v24);
    v42 = v30;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v9);
    v53 = v52[0];
    v54[0] = *v43;
    v33 = v54[0];
    sub_1BDE7775C((uint64_t)v54);
    sub_1BDEEA2F0(*((uint64_t *)&v33 + 1));
    sub_1BDEEA2F0(v33);
    sub_1BDE77790((uint64_t)v54);
    v32 = v50;
    v34 = v31(v50, 1, v9);
    v35 = v53;
    if (v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = (_OWORD *)(*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v24 + 40))(v52, v9, v24);
      sub_1BDDAF714(*((uint64_t *)&v35 + 1));
      sub_1BDDAF714(v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ((void (*)(_OWORD *, _QWORD))v43)(v52, 0);
    }
    v30 = v42;
  }
  v36 = v55;
  v49(v55, v32, v28);
  v37 = v31(v36, 1, v9);
  v38 = *(void (**)(char *, uint64_t))(v10 + 8);
  if (v37 == 1)
  {
    v38(v36, v28);
    sub_1BDDFCAFC();
    swift_allocError();
    *(_OWORD *)v39 = xmmword_1BE1C1B30;
    *(_BYTE *)(v39 + 16) = 0;
    swift_willThrow();
    v38(v51, v28);
  }
  else
  {
    v38(v51, v28);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v45, v36, v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v46, v47);
  }
  return ((uint64_t (*)(char *, uint64_t))v38)(v32, v28);
}

uint64_t sub_1BE0D660C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  v8 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v8);
  if (v4)
    *a4 = v4;
  return result;
}

uint64_t sub_1BE0D66E4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD);
  uint64_t v33;
  void (*v34)(_BYTE *, _QWORD);
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _BYTE v48[32];
  char v49[32];
  char v50[32];
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  swift_beginAccess();
  v41 = a2;
  v38 = a4;
  sub_1BDDB2D90(a2, a3, a4);
  swift_endAccess();
  swift_beginAccess();
  v47 = a1;
  v15 = a1[5];
  v16 = *(_QWORD *)(v8 + 88);
  v37 = v8;
  v17 = *(_QWORD *)(v8 + 104);
  v46 = v16;
  if ((v15 & 0xC000000000000001) != 0)
  {
    v18 = sub_1BE1B31C4() | 0x8000000000000000;
    result = swift_bridgeObjectRetain();
    v43 = 0;
    v20 = 0;
    v44 = 0;
    v21 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    result = sub_1BE1B31A0();
    v18 = v51;
    v43 = v52;
    v20 = v53;
    v44 = v54;
    v21 = v55;
  }
  v39 = v18 & 0x7FFFFFFFFFFFFFFFLL;
  v35 = v20;
  v40 = (unint64_t)(v20 + 64) >> 6;
  v36 = a3 & 1;
  v22 = v42;
  v45 = v18;
  while ((v18 & 0x8000000000000000) != 0)
  {
    if (!sub_1BE1B31E8())
      goto LABEL_30;
    sub_1BE1B3494();
    swift_unknownObjectRelease();
LABEL_28:
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v22, v14, v9);
    v29 = sub_1BE0CF4B8();
    v30 = v46;
    v31 = v17;
    sub_1BE1B2684();
    v32 = (void (*)(char *, _QWORD))sub_1BE1B269C();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v33, 1, v30))
    {
      v34 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v37 + 112)
                                                                                              + 40))(v48, v30);
      sub_1BDDB2D90(v41, v36, v38);
      v34(v48, 0);
      v22 = v42;
    }
    v32(v49, 0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
    result = ((uint64_t (*)(char *, _QWORD))v29)(v50, 0);
    v18 = v45;
    v17 = v31;
  }
  if (v21)
  {
    v23 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    v24 = v23 | (v44 << 6);
LABEL_27:
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v14, *(_QWORD *)(v18 + 48) + *(_QWORD *)(v10 + 72) * v24, v9);
    goto LABEL_28;
  }
  v25 = v44 + 1;
  if (!__OFADD__(v44, 1))
  {
    if (v25 >= v40)
      goto LABEL_30;
    v26 = *(_QWORD *)(v43 + 8 * v25);
    v27 = v44 + 1;
    if (!v26)
    {
      v27 = v44 + 2;
      if (v44 + 2 >= v40)
        goto LABEL_30;
      v26 = *(_QWORD *)(v43 + 8 * v27);
      if (!v26)
      {
        v27 = v44 + 3;
        if (v44 + 3 >= v40)
          goto LABEL_30;
        v26 = *(_QWORD *)(v43 + 8 * v27);
        if (!v26)
        {
          v27 = v44 + 4;
          if (v44 + 4 >= v40)
            goto LABEL_30;
          v26 = *(_QWORD *)(v43 + 8 * v27);
          if (!v26)
          {
            v27 = v44 + 5;
            if (v44 + 5 >= v40)
              goto LABEL_30;
            v26 = *(_QWORD *)(v43 + 8 * v27);
            if (!v26)
            {
              v28 = v44 + 6;
              while (v40 != v28)
              {
                v26 = *(_QWORD *)(v43 + 8 * v28++);
                if (v26)
                {
                  v27 = v28 - 1;
                  goto LABEL_26;
                }
              }
LABEL_30:
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, 1, 1, v9);
              result = sub_1BDE27FD0();
              v47[6] = v41;
              return result;
            }
          }
        }
      }
    }
LABEL_26:
    v21 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
    v44 = v27;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE0D6BD4(char *a1, uint64_t a2)
{
  _QWORD *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v4 = a1;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Timestamp(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(_QWORD *)(v2[5] + 16))
  {
    v12 = v8;
    v19 = v4;
    v13 = *(_QWORD *)(v5 + 104);
    swift_bridgeObjectRetain();
    sub_1BDE0D1D0(a2, v6, v13);
    if ((v14 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BE1B26C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    swift_bridgeObjectRelease();
    v4 = v19;
    v8 = v12;
  }
  v20 = v5;
  sub_1BE0CFF58((uint64_t)v11);
  *(_QWORD *)&v23 = MEMORY[0x1E0DEE9E0];
  *((_QWORD *)&v23 + 1) = MEMORY[0x1E0DEE9E0];
  v16 = a2;
  type metadata accessor for Replica();
  sub_1BDDCB81C((uint64_t)v11);
  swift_beginAccess();
  sub_1BDDCB81C((uint64_t)v11);
  swift_endAccess();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v17(v8, v16, v6);
  v22 = v23;
  swift_beginAccess();
  sub_1BE1B2684();
  sub_1BE1B26B4();
  swift_endAccess();
  sub_1BDD9C3E0((uint64_t)v11, type metadata accessor for Timestamp);
  v17(v4, v16, v6);
  return 1;
}

uint64_t CRSet.version.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void CRSet.init(_:)()
{
  CRSet.init()();
}

void sub_1BE0D6EF8()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
}

void CRSet.init()()
{
  type metadata accessor for CRSetRef();
}

_QWORD *sub_1BE0D6F50()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *result;

  v1 = swift_allocObject();
  result = sub_1BDDAB4B0();
  *v0 = v1;
  return result;
}

void CRSet.init<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BYTE v13[8];

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *))(v9 + 16))(v11);
  CRSet.init<A>(_:)((uint64_t)v11, a3, a5, a6, (uint64_t)v13);
}

uint64_t sub_1BE0D7014()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  *v3 = *(_QWORD *)(v5 - 88);
  return result;
}

void CRSet.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  _QWORD v12[7];
  uint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;

  v13 = a4;
  v12[4] = a5;
  v12[5] = a1;
  v12[0] = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v12[6] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BE1B2EE8();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12[1] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = a2;
  v15 = &type metadata for CRSetElement;
  v16 = a3;
  v17 = v13;
  v18 = &off_1EF526828;
  type metadata accessor for CRSetRef();
}

uint64_t CRSet.index(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;

  v7 = *v3;
  result = swift_beginAccess();
  v9 = *(_QWORD *)(v7 + 40);
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v12 = sub_1BDE0D1D0(a1, v10, v11);
    if ((v13 & 1) != 0)
    {
      v14 = v12;
      v15 = *(unsigned int *)(v9 + 36);
      result = swift_bridgeObjectRelease();
      *(_QWORD *)a3 = v14;
      *(_QWORD *)(a3 + 8) = v15;
      *(_BYTE *)(a3 + 16) = 0;
      return result;
    }
    result = swift_bridgeObjectRelease();
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
  return result;
}

uint64_t CRSet.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  unsigned __int8 v10;

  CRSet.index(of:)(a1, a2, (uint64_t)v9);
  v5 = v10;
  if (v10 == 255)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 56))(a3, 1, 1);
  v7 = v9[0];
  v6 = v9[1];
  v10 &= 1u;
  swift_retain();
  CRSet.subscript.getter();
  sub_1BDF04E60(v7, v6, v5);
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 56))(a3, 0, 1);
}

uint64_t CRSet.subscript.getter()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BE1B26C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall CRSet.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  if (CRSet.count.getter() >= 1)
    sub_1BE0D7654();
}

uint64_t CRSet.count.getter()
{
  uint64_t v0;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v0 = sub_1BE1B260C();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1BE0D7654()
{
  type metadata accessor for CRSetRef();
}

uint64_t sub_1BE0D769C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BE1B3470();
  if ((result & 1) == 0)
  {
    v2 = (*(uint64_t (**)(void))(**(_QWORD **)v0 + 288))();
    result = swift_release();
    *(_QWORD *)v0 = v2;
  }
  return result;
}

uint64_t CRSet.subtract<A>(_:)()
{
  uint64_t result;

  result = CRSet.count.getter();
  if (result >= 1)
    sub_1BE0D7654();
  return result;
}

uint64_t CRSet.subtracting<A>(_:)@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  swift_retain();
  return CRSet.subtract<A>(_:)();
}

void CRSet.copy(renamingReferences:)(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *v3;
  if (a1)
  {
    v6 = MEMORY[0x1E0C80A78](a1);
    v8 = a2[3];
    v21 = (char *)a2[2];
    v7 = v21;
    v22 = v8;
    v23 = a2[4];
    v9 = v23;
    v24 = v6;
    v10 = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSet<A>, a2);
    v25 = sub_1BDF016D0((void (*)(char *, char *))sub_1BDEE38E8, (uint64_t)&v20, (uint64_t)a2, v21, MEMORY[0x1E0DEDCE8], v10, MEMORY[0x1E0DEDD18], v11);
    v12 = sub_1BE1B2A5C();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v12);
    v13 = a3;
    v14 = (uint64_t)v7;
    v15 = v8;
    v16 = v9;
  }
  else
  {
    v17 = a2[2];
    v18 = a2[3];
    v19 = a2[4];
    swift_retain();
    MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSet<A>, a2);
    v13 = a3;
    v14 = v17;
    v15 = v18;
    v16 = v19;
  }
  CRSet.init<A>(_:)((uint64_t)&v25, v14, v15, v16, v13);
}

uint64_t *CRSet.merge(_:)(uint64_t *result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *result;
  if (*v2 != v12)
  {
    v4 = MEMORY[0x1C3B7DF54](&unk_1BE1C1BC0);
    v5 = sub_1BDD9A6B0((uint64_t)&v12, a2, v4);
    v6 = *v2;
    swift_beginAccess();
    v7 = *(_QWORD *)(v6 + 24);
    v8 = *(_QWORD *)(v6 + 32);
    swift_beginAccess();
    v9 = *(_QWORD *)(v5 + 24);
    v11 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = swift_bridgeObjectRetain();
    sub_1BDEEDAB4(v10, &v11, v8);
    sub_1BDEEDAB4(v9, &v11, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11 == 1)
    {
      result = (uint64_t *)swift_release();
      *v2 = v5;
    }
    else
    {
      if (v11 == 3)
        sub_1BE0D7654();
      return (uint64_t *)swift_release();
    }
  }
  return result;
}

uint64_t CRSet.visitReferences(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  result = sub_1BE1B31A0();
  v9 = v21;
  v20 = v22;
  v10 = v24;
  v11 = v25;
  v12 = (unint64_t)(v23 + 64) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_3;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v15 >= v12)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v12)
        return swift_release();
      v16 = *(_QWORD *)(v20 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v12)
          return swift_release();
        v16 = *(_QWORD *)(v20 + 8 * v17);
        if (!v16)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v12)
            return swift_release();
          v16 = *(_QWORD *)(v20 + 8 * v17);
          if (!v16)
          {
            v17 = v10 + 5;
            if (v10 + 5 >= v12)
              return swift_release();
            v16 = *(_QWORD *)(v20 + 8 * v17);
            if (!v16)
            {
              v18 = v10 + 6;
              while (v12 != v18)
              {
                v16 = *(_QWORD *)(v20 + 8 * v18++);
                if (v16)
                {
                  v17 = v18 - 1;
                  goto LABEL_20;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
    v10 = v17;
LABEL_3:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v9 + 48) + *(_QWORD *)(v5 + 72) * v14, v4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 8) + 40))(a1, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall CRSet.needToFinalizeTimestamps()()
{
  return sub_1BDD8C52C() & 1;
}

uint64_t CRSet.finalizeTimestamps(_:)()
{
  uint64_t result;

  result = sub_1BDD8C52C();
  if ((result & 1) != 0)
    sub_1BE0D7654();
  return result;
}

uint64_t CRSet.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v1 = sub_1BE1B1F58();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1BE1B305C();
  v17 = v15;
  v18 = v16;
  sub_1BE1B284C();
  v6 = *(_QWORD *)(v5 + 16) + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3190);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BE1B61C0;
  v8 = sub_1BE1B1F40();
  v9 = MEMORY[0x1E0DEDE70];
  v10 = MEMORY[0x1E0DEDEC8];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEDE70];
  *(_QWORD *)(v7 + 64) = v10;
  *(_BYTE *)(v7 + 32) = v8;
  v11 = sub_1BE1B1F40();
  *(_QWORD *)(v7 + 96) = v9;
  *(_QWORD *)(v7 + 104) = v10;
  *(_BYTE *)(v7 + 72) = BYTE1(v11);
  sub_1BE1B27EC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  sub_1BE1B284C();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDF1E398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BE1B284C();
  swift_beginAccess();
  v14 = *(_QWORD *)(v5 + 40);
  v12 = sub_1BE1B2684();
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEA0E8], v12);
  sub_1BE1B3488();
  sub_1BE1B284C();
  return v17;
}

uint64_t CRSet.actionUndoingDifference(from:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _OWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *a1;
  v7 = *v3;
  v8 = a2[2];
  v9 = a2[4];
  v28 = sub_1BE1B2594();
  v26 = v7;
  v27 = sub_1BE1B2594();
  *(_QWORD *)&v24[0] = v6;
  swift_retain();
  v10 = MEMORY[0x1C3B7DF54](&unk_1BE1C1BC0, a2);
  v11 = sub_1BDD9A6B0((uint64_t)v24, (uint64_t)a2, v10);
  v25 = 0;
  memset(v24, 0, sizeof(v24));
  v12 = a2[3];
  v20 = v8;
  v21 = v12;
  v22 = v9;
  v23 = &v28;
  v18[2] = v8;
  v18[3] = v12;
  v18[4] = v9;
  v18[5] = &v27;
  swift_retain();
  sub_1BE0D09E8(v11, v13, (void (*)(char *))sub_1BE0DF4D0, (uint64_t)v19, (void (*)(char *))sub_1BE0DF4D0, (uint64_t)v18);
  swift_release();
  sub_1BDD86E30((uint64_t)v24, &qword_1ED6EF878);
  v14 = v27;
  swift_bridgeObjectRetain();
  v15 = sub_1BE1B2BAC();
  swift_bridgeObjectRelease();
  if (v15 < 1)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BE1B2BAC();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_release();
    if (v17 < 1)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *a3 = 0;
      a3[1] = 0;
      return result;
    }
  }
  else
  {
    swift_release();
    result = swift_release();
  }
  *a3 = v28;
  a3[1] = v14;
  return result;
}

uint64_t CRSet.apply(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[10];

  v3 = MEMORY[0x1E0C80A78](a1);
  v9[6] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1BE1B2EE8();
  v9[7] = *(_QWORD *)(v5 - 8);
  v9[8] = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v7 = MEMORY[0x1E0C80A78](v6);
  result = MEMORY[0x1E0C80A78](v7);
  if (*a1)
  {
    v9[2] = a1[1];
    v9[9] = v1;
    sub_1BE0D7654();
  }
  return result;
}

uint64_t CRSet.hasDelta(from:)(_QWORD **a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2 = *a1;
  if ((_QWORD *)*v1 == v2)
    return 0;
  else
    return sub_1BDDB02F0(v2) & 1;
}

double CRSet.delta(_:from:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  double result;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;

  v6 = *v3;
  v15 = *a2;
  v16 = v6;
  swift_retain();
  swift_retain();
  CRSet.finalizeTimestamps(_:)();
  CRSet.finalizeTimestamps(_:)();
  v7 = v16;
  v14[0] = v16;
  CRSet.version.getter(&v12);
  v8 = v12;
  v13 = v15;
  CRSet.version.getter(v14);
  v9 = v14[0];
  if ((sub_1BDDB04C0(*((uint64_t *)&v8 + 1), v14[1]) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v10 = sub_1BDDB04C0(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_4:
    swift_retain();
    swift_retain();
    sub_1BE0CD5C4(a1, v7, (uint64_t)&v12);
  }
  swift_release();
  swift_release();
  result = 0.0;
  a3[1] = 0u;
  a3[2] = 0u;
  *a3 = 0u;
  return result;
}

uint64_t CRSet.canMerge(delta:)(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v4[2];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = sub_1BE0D175C(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void CRSet.merge(delta:)()
{
  sub_1BE0D7654();
}

uint64_t sub_1BE0D88E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)&v8 = v0;
  *((_QWORD *)&v8 + 1) = v1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BE0D1904(&v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t CRSet.observableDifference(from:with:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned int (*v24)(_QWORD, _QWORD, _QWORD);
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  int v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  unsigned int (*v58)(_QWORD, _QWORD, _QWORD);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  unsigned int (*v68)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v69)(_QWORD, _QWORD, _QWORD);
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];

  v8 = a3[2];
  v63 = a3[3];
  v9 = *(_QWORD *)(v63 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_1BE1B2EE8();
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v53 - v13;
  v67 = *(_QWORD *)(v8 - 8);
  v15 = MEMORY[0x1E0C80A78](v12);
  v62 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v61 = (char *)&v53 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v53 - v19;
  v21 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v53 - v22;
  v24 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))*a1;
  result = *v66;
  v66 = a2;
  if (!a2[3] && (unsigned int (*)(_QWORD, _QWORD, _QWORD))result == v24)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    return result;
  }
  v54 = a4;
  v72[1] = result;
  v69 = v24;
  v58 = v24;
  swift_retain();
  v26 = MEMORY[0x1C3B7DF54](&unk_1BE1C1BC0, a3);
  v57 = sub_1BDD9A6B0((uint64_t)&v69, (uint64_t)a3, v26);
  v27 = a3[4];
  v72[0] = sub_1BE1B2594();
  v71 = sub_1BE1B2594();
  v28 = sub_1BE1B2594();
  v56 = &v53;
  v70 = v28;
  v29 = MEMORY[0x1E0C80A78](v28);
  v55 = &v53 - 6;
  v30 = v63;
  *(&v53 - 4) = v8;
  *(&v53 - 3) = v30;
  *(&v53 - 2) = v27;
  *(&v53 - 1) = (uint64_t)v72;
  MEMORY[0x1E0C80A78](v29);
  *(&v53 - 4) = v8;
  *(&v53 - 3) = v30;
  *(&v53 - 2) = v27;
  *(&v53 - 1) = (uint64_t)&v71;
  swift_retain();
  sub_1BE0D09E8(v57, v31, (void (*)(char *))sub_1BE0DF4D0, (uint64_t)v55, (void (*)(char *))sub_1BE0DEAE8, (uint64_t)(&v53 - 6));
  swift_release();
  v68 = v58;
  CRSet.makeIterator()(&v69);
  v32 = type metadata accessor for CRSet.Iterator(0, v8, v30, v27);
  CRSet.Iterator.next()(v32, (uint64_t)v23);
  v33 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v67 + 48);
  if (v33(v23, 1, v8) != 1)
  {
    v63 = *(_QWORD *)(v67 + 32);
    v59 = AssociatedTypeWitness;
    v60 = v9;
    v58 = v33;
    ((void (*)(char *, char *, uint64_t))v63)(v20, v23, v8);
    while (1)
    {
      (*(void (**)(char *, uint64_t *, uint64_t, uint64_t))(v9 + 32))(v20, v66, v8, v9);
      v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v14, 1, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v14, v65);
      if (v50 == 1)
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v8);
      }
      else
      {
        v40 = v67;
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v62, v20, v8);
        sub_1BE1B2BF4();
        v41 = v32;
        v42 = v20;
        v43 = v8;
        v44 = v23;
        v45 = v14;
        v46 = v27;
        v47 = v61;
        sub_1BE1B2BB8();
        v48 = *(void (**)(char *, uint64_t))(v40 + 8);
        AssociatedTypeWitness = v59;
        v9 = v60;
        v49 = v47;
        v27 = v46;
        v14 = v45;
        v23 = v44;
        v8 = v43;
        v20 = v42;
        v32 = v41;
        v33 = v58;
        v48(v49, v8);
        v48(v20, v8);
      }
      CRSet.Iterator.next()(v32, (uint64_t)v23);
      if (v33(v23, 1, v8) == 1)
        break;
      ((void (*)(char *, char *, uint64_t))v63)(v20, v23, v8);
    }
  }
  sub_1BDE27FD0();
  v34 = v72[0];
  swift_bridgeObjectRetain();
  v35 = sub_1BE1B2BAC();
  swift_bridgeObjectRelease();
  if (v35 > 0 || (swift_bridgeObjectRetain(), v36 = sub_1BE1B2BAC(), swift_bridgeObjectRelease(), v36 >= 1))
  {
    swift_release();
    result = swift_release();
    v37 = v70;
    v38 = v54;
LABEL_8:
    v39 = v71;
    *v38 = v34;
    v38[1] = v39;
    v38[2] = v37;
    return result;
  }
  v37 = v70;
  swift_bridgeObjectRetain();
  v51 = sub_1BE1B2BAC();
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_release();
  v52 = v51 < 1;
  v38 = v54;
  if (!v52)
    goto LABEL_8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v38 = 0;
  v38[1] = 0;
  v38[2] = 0;
  return result;
}

uint64_t sub_1BE0D8EE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return CRSet.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t CRSet.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t inited;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v19 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v12, &qword_1ED6F3728);
  v14 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v13) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14);
  sub_1BDD86E30((uint64_t)v12, &qword_1ED6F3728);
  if ((_DWORD)v13 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v15 = 0xD000000000000014;
    *(_QWORD *)(v15 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v15 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = a1;
    *(_QWORD *)(inited + 24) = 0;
    *(_BYTE *)(inited + 32) = 1;
    sub_1BDE12760(a2, a3, a4, &v20);
    result = swift_release();
    if (!v5)
      *v19 = v20;
  }
  return result;
}

uint64_t sub_1BE0D90B4(uint64_t a1, _QWORD *a2)
{
  return CRSet.encode(to:)(a1, a2);
}

uint64_t CRSet.encode(to:)(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = sub_1BDDA8D6C();
  if (!v3)
  {
    v10 = v5;
    v7 = a2[2];
    v8 = a2[3];
    v9 = a2[4];
    swift_retain();
    sub_1BDE1D6F8(&v10, v7, v8, v9);
    return swift_release();
  }
  return result;
}

BOOL CRSet.hasEncodedData.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16) || *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16) != 0;
}

void sub_1BE0D91A8(_BYTE *a1@<X8>)
{
  CRSet.minEncodingVersion.getter(a1);
}

void CRSet.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BE0D91C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t static CRSet.== infix(_:_:)(uint64_t a1, _QWORD **a2)
{
  return sub_1BE0CF568(*a2) & 1;
}

uint64_t CRSet.ObservableDifference.added.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CRSet.ObservableDifference.removed.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CRSet.ObservableDifference.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CRSet.MutatingAction.init(from:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  unsigned int v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[3];
  uint64_t v84;
  uint64_t v85;

  v80 = a4;
  v81 = a3;
  v78 = a2;
  v72 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v73 = (uint64_t)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v66 - v9;
  v79 = type metadata accessor for Proto_Set(0);
  v11 = MEMORY[0x1E0C80A78](v79);
  v76 = (uint64_t)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v66 - v13;
  v15 = type metadata accessor for Proto_CRDT(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v74 = (uint64_t)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v66 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v24, (uint64_t)v23, &qword_1ED6F3728);
  LODWORD(v24) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v23, 1, v15);
  sub_1BDD86E30((uint64_t)v23, &qword_1ED6F3728);
  if ((_DWORD)v24 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v25 = 0xD000000000000014;
    *(_QWORD *)(v25 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v25 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = a1;
  *(_QWORD *)(inited + 24) = 0;
  *(_BYTE *)(inited + 32) = 1;
  swift_retain();
  v75 = inited;
  sub_1BDDA0528((uint64_t)v20);
  v28 = *(_QWORD *)&v20[*(int *)(v15 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v28, (uint64_t)v10, &qword_1ED6F2DF0);
  v29 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48);
  v31 = v30(v10, 1, v29);
  v70 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v30;
  v69 = v29;
  if (v31 == 1)
  {
    sub_1BDD86E30((uint64_t)v10, &qword_1ED6F2DF0);
    v32 = v79;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v32 = v79;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BDDA2E8C((uint64_t)v10, (uint64_t)v14, type metadata accessor for Proto_Set);
      goto LABEL_11;
    }
    sub_1BDD9C3E0((uint64_t)v10, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1BE1B20E4();
  v34 = *(int *)(v32 + 20);
  if (qword_1ED6F2808 != -1)
    swift_once();
  *(_QWORD *)&v14[v34] = qword_1ED6F2800;
  swift_retain();
LABEL_11:
  sub_1BDD9C3E0((uint64_t)v20, type metadata accessor for Proto_CRDT);
  v35 = (uint64_t *)(*(_QWORD *)&v14[*(int *)(v32 + 20)]
                  + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
  swift_beginAccess();
  v36 = *v35;
  swift_bridgeObjectRetain();
  v37 = sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto_Set);
  v71 = v66;
  v84 = v36;
  MEMORY[0x1E0C80A78](v37);
  v38 = v78;
  v39 = v81;
  v66[-4] = v78;
  v66[-3] = v39;
  v66[-2] = v80;
  v66[-1] = a1;
  v40 = a1;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EE998);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
  v43 = sub_1BDDA9D60((unint64_t *)&qword_1ED6EE9A0, &qword_1ED6EE998, MEMORY[0x1E0DEAF50]);
  v44 = v77;
  v45 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DF4BC, (uint64_t)&v66[-6], v41, v38, v42, v43, MEMORY[0x1E0DEDB38], (uint64_t)v83);
  if (v44)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    return swift_release();
  }
  v46 = v45;
  v67 = v43;
  v68 = v42;
  v77 = v41;
  swift_bridgeObjectRelease();
  v84 = v46;
  v47 = sub_1BE1B2A5C();
  v48 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v47);
  v66[2] = v47;
  v66[1] = v48;
  v71 = (_QWORD *)sub_1BE1B2C00();
  swift_bridgeObjectRetain();
  v49 = v74;
  sub_1BDDA0528(v74);
  v50 = *(_QWORD *)(v49 + *(int *)(v15 + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v51 = v50;
  v52 = v73;
  sub_1BDD86DEC(v51, v73, &qword_1ED6F2DF0);
  if (v70(v52, 1, v69) == 1)
  {
    sub_1BDD86E30(v52, &qword_1ED6F2DF0);
    v53 = v81;
    v54 = v76;
    v55 = v79;
    v56 = v40;
LABEL_18:
    v58 = v68;
    sub_1BE1B20E4();
    v59 = *(int *)(v55 + 20);
    if (qword_1ED6F2808 != -1)
      swift_once();
    *(_QWORD *)(v54 + v59) = qword_1ED6F2800;
    swift_retain();
    goto LABEL_21;
  }
  v57 = swift_getEnumCaseMultiPayload();
  v53 = v81;
  v54 = v76;
  v55 = v79;
  v56 = v40;
  if (v57 != 1)
  {
    sub_1BDD9C3E0(v52, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_18;
  }
  sub_1BDDA2E8C(v52, v76, type metadata accessor for Proto_Set);
  v58 = v68;
LABEL_21:
  sub_1BDD9C3E0(v49, type metadata accessor for Proto_CRDT);
  v60 = (uint64_t *)(*(_QWORD *)(v54 + *(int *)(v55 + 20))
                  + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removed);
  swift_beginAccess();
  v61 = *v60;
  swift_bridgeObjectRetain();
  v62 = sub_1BDD9C3E0(v54, type metadata accessor for Proto_Set);
  v85 = v61;
  MEMORY[0x1E0C80A78](v62);
  v66[-4] = v38;
  v66[-3] = v53;
  v66[-2] = v80;
  v66[-1] = v56;
  v63 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DEB10, (uint64_t)&v66[-6], v77, v38, v58, v67, MEMORY[0x1E0DEDB38], (uint64_t)&v82);
  swift_bridgeObjectRelease();
  v85 = v63;
  v64 = sub_1BE1B2C00();
  swift_release();
  swift_setDeallocating();
  swift_release();
  v65 = v72;
  *v72 = v71;
  v65[1] = v64;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0D9AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a5;
  v24 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Value(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_Set.Element(0) + 20))
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v17, (uint64_t)v12, &qword_1ED6F3770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BE1B20E4();
    v18 = *(int *)(v13 + 20);
    if (qword_1ED6F2718 != -1)
      swift_once();
    *(_QWORD *)&v16[v18] = qword_1ED6F2708;
    swift_retain();
    sub_1BDD86E30((uint64_t)v12, &qword_1ED6F3770);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v16, type metadata accessor for Proto_Value);
  }
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  v19 = sub_1BDDB4FC0((uint64_t)v16, a2);
  swift_release();
  v20 = v25;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a4 + 8) + 8) + 8))(v19, a3);
  if (v20)
    *v23 = v20;
  return result;
}

uint64_t CRSet.MutatingAction.encode(to:)(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  _QWORD v49[3];
  _QWORD v50[6];
  uint64_t v51;

  v6 = type metadata accessor for Proto_Set(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v38 - v10;
  v12 = *v2;
  v13 = v2[1];
  result = sub_1BDDA8D6C();
  if (!v3)
  {
    v51 = a1;
    v45 = v13;
    v46 = result;
    v42 = v9;
    swift_retain();
    v15 = sub_1BE1B20E4();
    v16 = *(int *)(v6 + 20);
    if (qword_1ED6F2808 != -1)
      v15 = swift_once();
    v48 = &v38;
    *(_QWORD *)&v11[v16] = qword_1ED6F2800;
    v50[3] = v12;
    MEMORY[0x1E0C80A78](v15);
    v44 = v16;
    v18 = a2[2];
    v17 = a2[3];
    v47 = v11;
    *(&v38 - 4) = v18;
    *(&v38 - 3) = v17;
    v43 = v17;
    v19 = a2[4];
    v20 = v51;
    *(&v38 - 2) = v19;
    *(&v38 - 1) = v20;
    v21 = sub_1BE1B2BF4();
    v22 = (char *)type metadata accessor for Proto_Set.Element(0);
    swift_retain();
    swift_bridgeObjectRetain();
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
    v24 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEB3E0], v21);
    v25 = v22;
    v26 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DEB30, (uint64_t)(&v38 - 6), v21, v22, v23, v24, MEMORY[0x1E0DEDB38], (uint64_t)v50);
    v39 = v19;
    v40 = v23;
    v27 = v43;
    v41 = v25;
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v47;
    v29 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set._StorageClass(0);
      swift_allocObject();
      v30 = swift_retain();
      *(_QWORD *)(v28 + v29) = sub_1BDDA1768(v30);
      swift_release();
    }
    v31 = (uint64_t *)(*(_QWORD *)(v28 + v29)
                    + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
    swift_beginAccess();
    *v31 = v26;
    swift_bridgeObjectRelease();
    v48 = &v38;
    v50[0] = v45;
    MEMORY[0x1E0C80A78](v45);
    *(&v38 - 4) = v18;
    *(&v38 - 3) = v27;
    v32 = v51;
    *(&v38 - 2) = v39;
    *(&v38 - 1) = v32;
    swift_bridgeObjectRetain();
    v33 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DEB30, (uint64_t)(&v38 - 6), v21, v41, v40, v24, MEMORY[0x1E0DEDB38], (uint64_t)v49);
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      type metadata accessor for Proto_Set._StorageClass(0);
      swift_allocObject();
      v35 = swift_retain();
      *(_QWORD *)(v28 + v29) = sub_1BDDA1768(v35);
      swift_release();
    }
    v36 = (uint64_t *)(*(_QWORD *)(v28 + v29)
                    + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removed);
    swift_beginAccess();
    *v36 = v33;
    swift_bridgeObjectRelease();
    v37 = (uint64_t)v42;
    sub_1BDD9C318(v28, (uint64_t)v42, type metadata accessor for Proto_Set);
    swift_beginAccess();
    sub_1BE12B5A0(v37);
    swift_release();
    return sub_1BDD9C3E0(v28, type metadata accessor for Proto_Set);
  }
  return result;
}

uint64_t sub_1BE0DA108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(uint64_t);
  uint64_t v37;

  v35 = a6;
  v36 = a7;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v15 = MEMORY[0x1E0C80A78](v14);
  v34 = (uint64_t)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v33 = (uint64_t)&v30 - v17;
  v18 = type metadata accessor for Proto_Value(0);
  v31 = *(_QWORD *)(v18 - 8);
  v32 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v21 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  if (qword_1ED6EF6F0 != -1)
    swift_once();
  v22 = qword_1ED6EF6E0;
  *(_QWORD *)(a8 + v21) = qword_1ED6EF6E0;
  MEMORY[0x1E0C80A78](v22);
  *(&v30 - 6) = a3;
  *(&v30 - 5) = a4;
  *(&v30 - 4) = a5;
  *(&v30 - 3) = a1;
  *(&v30 - 2) = a2;
  swift_retain();
  v23 = v37;
  sub_1BDE1CC84(v36, (uint64_t)v20);
  if (v23)
  {
    result = sub_1BDD9C3E0(a8, type metadata accessor for Proto_Set.Element);
    *v35 = v23;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set.Element._StorageClass(0);
      swift_allocObject();
      v25 = swift_retain();
      *(_QWORD *)(a8 + v21) = sub_1BE13500C(v25);
      swift_release();
    }
    v26 = *(_QWORD *)(a8 + v21);
    v27 = v33;
    sub_1BDDA2E8C((uint64_t)v20, v33, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v32);
    v28 = v34;
    sub_1BDDA2EF0(v27, v34, &qword_1ED6F3770);
    v29 = v26 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v28, v29, &qword_1ED6F3770);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void CRSet.MutatingAction.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BE0DA3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return CRSet.MutatingAction.init(from:)(a1, *(char **)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), a3);
}

uint64_t sub_1BE0DA3C8(uint64_t a1, _QWORD *a2)
{
  return CRSet.MutatingAction.encode(to:)(a1, a2);
}

void sub_1BE0DA3DC(_BYTE *a1@<X8>)
{
  CRSet.MutatingAction.minEncodingVersion.getter(a1);
}

uint64_t sub_1BE0DA3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  (*(void (**)(char *))(v4 + 16))(v7);
  sub_1BE1B2BF4();
  sub_1BE1B2BB8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, a3);
}

void CRSet.remove(_:)()
{
  uint64_t v0;

  swift_getTupleTypeMetadata2();
  v0 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v0);
  sub_1BE0D7654();
}

uint64_t sub_1BE0DA540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BE0D0288(v5, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
    v7 = *(_QWORD *)(v0 - 8);
    v8 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = *(_QWORD *)(v0 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v1, v2, v0);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v1, v8, 1, v0);
}

void CRSet.insert(_:)()
{
  uint64_t TupleTypeMetadata2;
  uint64_t v1;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v1 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  MEMORY[0x1E0C80A78](v1);
  sub_1BE0D7654();
}

uint64_t sub_1BE0DA690()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char *v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = (char *)(v5 + *(int *)(v3 + 48));
  v7 = sub_1BE0D6BD4(v6, v1);
  v8 = (char *)(v4 + *(int *)(v3 + 48));
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v0 - 8) + 32);
  v9(v8, v6, v0);
  v9(v2, v8, v0);
  return v7 & 1;
}

double sub_1BE0DA6FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double result;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];

  v13 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD9C318(a1, (uint64_t)v15, type metadata accessor for Proto_Set);
  sub_1BE0D2CE0((uint64_t)v15, a2, a3, (uint64_t)&type metadata for CRSetElement, a4, a5, (uint64_t)&off_1EF526828, (uint64_t)v19);
  sub_1BDD9C3E0(a1, type metadata accessor for Proto_Set);
  if (!v6)
  {
    result = *(double *)v19;
    v17 = v19[1];
    v18 = v19[2];
    *a6 = v19[0];
    a6[1] = v17;
    a6[2] = v18;
  }
  return result;
}

double CRSet.Partial.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[3];
  uint64_t v35;

  v32 = a3;
  v33 = a4;
  v31 = a2;
  v29 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1E0C80A78](v30);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Proto_CRDT(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v18, (uint64_t)v17, &qword_1ED6F3728);
  LODWORD(v18) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  sub_1BDD86E30((uint64_t)v17, &qword_1ED6F3728);
  if ((_DWORD)v18 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v19 = 0xD000000000000014;
    *(_QWORD *)(v19 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v19 + 16) = 0;
    swift_willThrow();
    swift_release();
    return result;
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = a1;
  *(_QWORD *)(inited + 24) = 0;
  *(_BYTE *)(inited + 32) = 1;
  swift_retain();
  sub_1BDDA0528((uint64_t)v14);
  v22 = *(_QWORD *)&v14[*(int *)(v11 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v22, (uint64_t)v8, &qword_1ED6F2DF0);
  v23 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v8, 1, v23) == 1)
  {
    sub_1BDD86E30((uint64_t)v8, &qword_1ED6F2DF0);
LABEL_8:
    sub_1BE1B20E4();
    v24 = *(int *)(v30 + 20);
    if (qword_1ED6F2808 != -1)
      swift_once();
    *(_QWORD *)&v10[v24] = qword_1ED6F2800;
    swift_retain();
    goto LABEL_11;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BDD9C3E0((uint64_t)v8, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_8;
  }
  sub_1BDDA2E8C((uint64_t)v8, (uint64_t)v10, type metadata accessor for Proto_Set);
LABEL_11:
  sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto_CRDT);
  v25 = v35;
  sub_1BE0DA6FC((uint64_t)v10, a1, v31, v32, v33, v34);
  swift_setDeallocating();
  swift_release();
  if (!v25)
  {
    result = *(double *)v34;
    v26 = v34[1];
    v27 = v34[2];
    v28 = v29;
    *v29 = v34[0];
    v28[1] = v26;
    v28[2] = v27;
  }
  return result;
}

void sub_1BE0DAB84()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  type metadata accessor for CRSetRefMergeableDelta();
}

uint64_t sub_1BE0DAC2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1BE0D36E4(v2, a1, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t CRSet.Partial.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1E0C80A78](v1);
  result = sub_1BDDA8D6C();
  if (!v0)
  {
    swift_retain();
    sub_1BE0DAB84();
  }
  return result;
}

void CRSet.Partial.merge(delta:)()
{
  sub_1BE0DEB58();
}

void CRSet.Partial.canMerge(delta:)()
{
  sub_1BE1B3200();
  __break(1u);
}

uint64_t CRSet.Partial.visitReferences(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[6];

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  result = sub_1BE1B31A0();
  v9 = v19[1];
  v19[0] = v19[2];
  v10 = v19[4];
  v11 = v19[5];
  v12 = (unint64_t)(v19[3] + 64) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_3;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v15 >= v12)
      return swift_release();
    v16 = *(_QWORD *)(v19[0] + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v12)
        return swift_release();
      v16 = *(_QWORD *)(v19[0] + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v12)
          return swift_release();
        v16 = *(_QWORD *)(v19[0] + 8 * v17);
        if (!v16)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v12)
            return swift_release();
          v16 = *(_QWORD *)(v19[0] + 8 * v17);
          if (!v16)
          {
            v17 = v10 + 5;
            if (v10 + 5 >= v12)
              return swift_release();
            v16 = *(_QWORD *)(v19[0] + 8 * v17);
            if (!v16)
            {
              v18 = v10 + 6;
              while (v12 != v18)
              {
                v16 = *(_QWORD *)(v19[0] + 8 * v18++);
                if (v16)
                {
                  v17 = v18 - 1;
                  goto LABEL_20;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
    v10 = v17;
LABEL_3:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v9 + 48) + *(_QWORD *)(v5 + 72) * v14, v4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 8) + 40))(a1, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __break(1u);
  return result;
}

void sub_1BE0DAFD8()
{
  sub_1BE0DEB58();
}

void sub_1BE0DAFE0()
{
  sub_1BE1B3200();
  __break(1u);
}

double sub_1BE0DB02C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  return CRSet.Partial.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1BE0DB04C()
{
  return CRSet.Partial.encode(to:)();
}

uint64_t CRSet.union(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];
  _QWORD v19[6];

  v18[0] = a3;
  v6 = a2[2];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - v9;
  v11 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v18 - v12;
  v14 = *a1;
  v15 = *v3;
  v19[5] = *v3;
  v18[1] = v14;
  CRSet.makeIterator()(v19);
  v16 = type metadata accessor for CRSet.Iterator(0, v6, a2[3], a2[4]);
  swift_retain();
  CRSet.Iterator.next()(v16, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    CRSet.insert(_:)();
  }
  result = sub_1BDE27FD0();
  *(_QWORD *)v18[0] = v15;
  return result;
}

uint64_t CRSet.intersection(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t result;
  _QWORD v24[4];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24[0] = a3;
  v6 = a2[2];
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BE1B2EE8();
  v24[2] = *(_QWORD *)(v10 - 8);
  v24[3] = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v24[1] = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v24 - v13;
  v15 = *a1;
  v28 = *v3;
  v16 = v28;
  v26 = v28;
  CRSet.makeIterator()(&v27);
  v17 = (uint64_t)a2;
  v18 = type metadata accessor for CRSet.Iterator(0, v6, a2[3], a2[4]);
  swift_retain();
  CRSet.Iterator.next()(v18, (uint64_t)v14);
  v19 = v7;
  v20 = (_QWORD *)v24[0];
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v21(v14, 1, v6) != 1)
  {
    v25 = v19;
    v22 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v22(v9, v14, v6);
    while (1)
    {
      v26 = v15;
      if (!CRSet.contains(_:)((uint64_t)v9, v17))
        CRSet.remove(_:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
      CRSet.Iterator.next()(v18, (uint64_t)v14);
      if (v21(v14, 1, v6) == 1)
        break;
      v22(v9, v14, v6);
    }
    v16 = v28;
    v20 = (_QWORD *)v24[0];
  }
  result = sub_1BDE27FD0();
  *v20 = v16;
  return result;
}

uint64_t CRSet.subtracting(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t result;
  _QWORD v24[4];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24[0] = a3;
  v6 = a2[2];
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BE1B2EE8();
  v24[2] = *(_QWORD *)(v10 - 8);
  v24[3] = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v24[1] = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v24 - v13;
  v15 = *a1;
  v28 = *v3;
  v16 = v28;
  v26 = v28;
  CRSet.makeIterator()(&v27);
  v17 = (uint64_t)a2;
  v18 = type metadata accessor for CRSet.Iterator(0, v6, a2[3], a2[4]);
  swift_retain();
  CRSet.Iterator.next()(v18, (uint64_t)v14);
  v19 = v7;
  v20 = (_QWORD *)v24[0];
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v21(v14, 1, v6) != 1)
  {
    v25 = v19;
    v22 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v22(v9, v14, v6);
    while (1)
    {
      v26 = v15;
      if (CRSet.contains(_:)((uint64_t)v9, v17))
        CRSet.remove(_:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
      CRSet.Iterator.next()(v18, (uint64_t)v14);
      if (v21(v14, 1, v6) == 1)
        break;
      v22(v9, v14, v6);
    }
    v16 = v28;
    v20 = (_QWORD *)v24[0];
  }
  result = sub_1BDE27FD0();
  *v20 = v16;
  return result;
}

uint64_t CRSet.symmetricDifference(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[7];
  uint64_t v23;
  _QWORD v24[6];

  v7 = a2[2];
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v22[5] = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v22 - v11;
  v13 = sub_1BE1B2EE8();
  v22[3] = *(_QWORD *)(v13 - 8);
  v22[4] = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v22[2] = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v22 - v16;
  v18 = *a1;
  v19 = *v3;
  v24[5] = *v3;
  v23 = v18;
  CRSet.makeIterator()(v24);
  v20 = type metadata accessor for CRSet.Iterator(0, v7, a2[3], a2[4]);
  swift_retain();
  v22[6] = v20;
  CRSet.Iterator.next()(v20, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v17, 1, v7) != 1)
  {
    v22[1] = a3;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v17, v7);
    v23 = v19;
    if (!CRSet.contains(_:)((uint64_t)v12, (uint64_t)a2))
      CRSet.insert(_:)();
    CRSet.remove(_:)();
  }
  result = sub_1BDE27FD0();
  *a3 = v19;
  return result;
}

uint64_t CRSet.formUnion(_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;

  v4 = a2[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - v7;
  v9 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - v10;
  v14[2] = *a1;
  CRSet.makeIterator()(&v15);
  v12 = type metadata accessor for CRSet.Iterator(0, v4, a2[3], a2[4]);
  CRSet.Iterator.next()(v12, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v11, v4);
    CRSet.insert(_:)();
  }
  return sub_1BDE27FD0();
}

uint64_t CRSet.formIntersection(_:)(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  _QWORD v20[4];
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = a2[2];
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BE1B2EE8();
  v20[2] = *(_QWORD *)(v9 - 8);
  v20[3] = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v20[1] = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v20 - v12;
  v14 = *a1;
  v21 = v2;
  v23 = *v2;
  CRSet.makeIterator()(&v24);
  v15 = (uint64_t)a2;
  v16 = type metadata accessor for CRSet.Iterator(0, v5, a2[3], a2[4]);
  CRSet.Iterator.next()(v16, (uint64_t)v13);
  v22 = v6;
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v17(v13, 1, v5) != 1)
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v19(v8, v13, v5);
    while (1)
    {
      v23 = v14;
      if (!CRSet.contains(_:)((uint64_t)v8, v15))
        CRSet.remove(_:)();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
      CRSet.Iterator.next()(v16, (uint64_t)v13);
      if (v17(v13, 1, v5) == 1)
        break;
      v19(v8, v13, v5);
    }
  }
  return sub_1BDE27FD0();
}

void sub_1BE0DBBF8()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v0, *(_QWORD *)(v1 - 152));
  JUMPOUT(0x1BE0DBB78);
}

uint64_t CRSet.subtract(_:)(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  _QWORD v20[4];
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = a2[2];
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BE1B2EE8();
  v20[2] = *(_QWORD *)(v9 - 8);
  v20[3] = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v20[1] = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v20 - v12;
  v14 = *a1;
  v21 = v2;
  v23 = *v2;
  CRSet.makeIterator()(&v24);
  v15 = (uint64_t)a2;
  v16 = type metadata accessor for CRSet.Iterator(0, v5, a2[3], a2[4]);
  CRSet.Iterator.next()(v16, (uint64_t)v13);
  v22 = v6;
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v17(v13, 1, v5) != 1)
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v19(v8, v13, v5);
    while (1)
    {
      v23 = v14;
      if (CRSet.contains(_:)((uint64_t)v8, v15))
        CRSet.remove(_:)();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
      CRSet.Iterator.next()(v16, (uint64_t)v13);
      if (v17(v13, 1, v5) == 1)
        break;
      v19(v8, v13, v5);
    }
  }
  return sub_1BDE27FD0();
}

void sub_1BE0DBDE0()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v0, *(_QWORD *)(v1 - 152));
  JUMPOUT(0x1BE0DBD60);
}

uint64_t CRSet.formSymmetricDifference(_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = a2[2];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v18[4] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - v10;
  v12 = sub_1BE1B2EE8();
  v18[2] = *(_QWORD *)(v12 - 8);
  v18[3] = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v18[1] = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v18 - v15;
  v20 = *a1;
  CRSet.makeIterator()(&v21);
  v19 = type metadata accessor for CRSet.Iterator(0, v6, a2[3], a2[4]);
  CRSet.Iterator.next()(v19, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v16, v6);
    v20 = *v3;
    if (!CRSet.contains(_:)((uint64_t)v11, (uint64_t)a2))
      CRSet.insert(_:)();
    CRSet.remove(_:)();
  }
  return sub_1BDE27FD0();
}

void sub_1BE0DC000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
  JUMPOUT(0x1BE0DBF88);
}

uint64_t CRSet.isEmpty.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = swift_bridgeObjectRetain();
  LOBYTE(v3) = MEMORY[0x1C3B7C52C](v4, v2, &type metadata for CRSetElement, v3);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t CRSet.filter(_:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  char v23;
  _QWORD *v24;
  uint64_t result;
  _QWORD v26[5];
  uint64_t v27;
  uint64_t (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v28 = a1;
  v29 = a2;
  v26[0] = a4;
  v7 = a3[2];
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BE1B2EE8();
  v26[2] = *(_QWORD *)(v11 - 8);
  v26[3] = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v26[1] = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v26 - v14;
  v32 = *v4;
  v16 = v32;
  v30 = v32;
  CRSet.makeIterator()(&v31);
  v17 = a3[3];
  v18 = a3[4];
  v26[4] = a3;
  v19 = type metadata accessor for CRSet.Iterator(0, v7, v17, v18);
  v20 = v16;
  swift_retain();
  CRSet.Iterator.next()(v19, (uint64_t)v15);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v21(v15, 1, v7) == 1)
  {
LABEL_9:
    v24 = (_QWORD *)v26[0];
    result = sub_1BDE27FD0();
    *v24 = v20;
  }
  else
  {
    v27 = v8;
    v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v22(v10, v15, v7);
    while (1)
    {
      v23 = v28(v10);
      if (v5)
        break;
      if ((v23 & 1) == 0)
        CRSet.remove(_:)();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v7);
      CRSet.Iterator.next()(v19, (uint64_t)v15);
      if (v21(v15, 1, v7) == 1)
      {
        v20 = v32;
        goto LABEL_9;
      }
      v22(v10, v15, v7);
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v7);
    sub_1BDE27FD0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE0DC2D4@<X0>(_QWORD *a1@<X8>)
{
  CRSet.makeIterator()(a1);
  return swift_release();
}

uint64_t sub_1BE0DC2EC(uint64_t a1)
{
  MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSet<A>, a1);
  return sub_1BE1B2CA8();
}

uint64_t sub_1BE0DC320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSet<A>, a1);
  v4 = sub_1BE1AE084(v1, a1, v3);
  swift_release();
  return v4;
}

uint64_t static CRSet.Index.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BE0DC3FC(a1, a2, a3, a4, a5, MEMORY[0x1E0DE9EF0]);
}

uint64_t CRSet.Index.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1BDF2BCF8(v1, v2, v3);
  sub_1BE1B2600();
  return sub_1BDE27EC8(v1, v2, v3);
}

uint64_t static CRSet.Index.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BE0DC3FC(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, ValueMetadata *, uint64_t))MEMORY[0x1E0DE9EF8]);
}

uint64_t sub_1BE0DC3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, ValueMetadata *, uint64_t))
{
  return a6(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), a3, &type metadata for CRSetElement, a5) & 1;
}

uint64_t CRSet.Index.hashValue.getter()
{
  sub_1BE1B36F8();
  CRSet.Index.hash(into:)();
  return sub_1BE1B371C();
}

uint64_t sub_1BE0DC4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static CRSet.Index.< infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), a4, *(_QWORD *)(a3 + 32));
}

uint64_t sub_1BE0DC4C8()
{
  sub_1BE1B36F8();
  CRSet.Index.hash(into:)();
  return sub_1BE1B371C();
}

uint64_t sub_1BE0DC508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static CRSet.Index.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), a4, *(_QWORD *)(a3 + 32));
}

uint64_t CRSet.startIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BE0DC530(a1, MEMORY[0x1E0DE9E30], a2);
}

uint64_t CRSet.endIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BE0DC530(a1, MEMORY[0x1E0DEA018], a2);
}

uint64_t sub_1BE0DC530@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, ValueMetadata *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = swift_bridgeObjectRetain();
  v9 = a2(v8, v6, &type metadata for CRSetElement, v7);
  v11 = v10;
  LOBYTE(v6) = v12;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v11;
  *(_BYTE *)(a3 + 16) = v6 & 1;
  return result;
}

uint64_t CRSet.index(after:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t result;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v2 = sub_1BE1B2618();
  v4 = v3;
  v6 = v5;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  return result;
}

void (*sub_1BE0DC68C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1BE0DC6E8(v6, a2, a3);
  return sub_1BDE5E0D0;
}

void (*sub_1BE0DC6E8(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = malloc(*(_QWORD *)(v4 + 64));
  CRSet.subscript.getter();
  return sub_1BDEE623C;
}

double sub_1BE0DC760(uint64_t a1)
{
  char v2;
  double result;
  __int128 v4;
  char v5;

  CRSet.index(after:)((uint64_t)&v4);
  sub_1BDE27EC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v2;
  return result;
}

uint64_t sub_1BE0DC7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *TupleTypeMetadata2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  _UNKNOWN **v63;
  uint64_t v64;

  v53 = a5;
  v58 = a4;
  v52 = a3;
  v50[1] = a6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for Proto_Version(0);
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v54 = (_QWORD *)((char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F43C0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BE1B1F58();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = (_QWORD *)*(int *)(type metadata accessor for Proto_Set(0) + 20);
  v20 = *(_QWORD *)((char *)v56 + a1);
  swift_beginAccess();
  v59 = a2;
  v21 = *(_QWORD *)(a2 + 24);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22 && (v23 = *(_QWORD *)(v20 + 16), v23 < v22))
  {
    v50[0] = v6;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, v21+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v23, v16);
    type metadata accessor for ReplicaState();
    v24 = swift_allocObject();
    v25 = v24 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
    v26 = type metadata accessor for Replica();
    v51 = a1;
    v27 = v26;
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
    v28(v25, 1, 1, v26);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v19, v16);
    *(_QWORD *)(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
    *(_QWORD *)(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
    v29 = v27;
    v30 = v51;
    v28((uint64_t)v15, 1, 1, v29);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v15, v25, &qword_1ED6F43C0);
    swift_endAccess();
    v31 = v56;
    v32 = *(_QWORD *)((char *)v56 + v30)
        + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    sub_1BDD86DEC(v32, (uint64_t)v11, &qword_1ED6F37A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v11, 1, v57) == 1)
    {
      v33 = MEMORY[0x1E0DEE9D8];
      v34 = v54;
      *v54 = MEMORY[0x1E0DEE9D8];
      v34[1] = v33;
      sub_1BE1B20E4();
      sub_1BDD86E30((uint64_t)v11, &qword_1ED6F37A8);
    }
    else
    {
      v34 = v54;
      sub_1BDDA2E8C((uint64_t)v11, (uint64_t)v54, type metadata accessor for Proto_Version);
    }
    v37 = v58;
    v38 = v59;
    swift_retain();
    v39 = v50[0];
    sub_1BDDA9DA0(v34, v38, &v60);
    if (!v39)
    {
      v57 = v24;
      v54 = (_QWORD *)*((_QWORD *)&v60 + 1);
      v55 = v60;
      v41 = (_QWORD *)(*(_QWORD *)((char *)v31 + v30)
                     + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
      swift_beginAccess();
      v56 = v50;
      *(_QWORD *)&v60 = *v41;
      MEMORY[0x1E0C80A78](v60);
      v42 = v52;
      v50[-4] = v52;
      v50[-3] = v37;
      v43 = v53;
      v50[-2] = v53;
      v50[-1] = v38;
      swift_bridgeObjectRetain();
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EE998);
      TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
      v47 = sub_1BDDA9D60((unint64_t *)&qword_1ED6EE9A0, &qword_1ED6EE998, MEMORY[0x1E0DEAF50]);
      v48 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DF49C, (uint64_t)&v50[-6], v44, TupleTypeMetadata2, v46, v47, MEMORY[0x1E0DEDB38], (uint64_t)&v64);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v60 = v48;
      v49 = sub_1BE1B2A5C();
      MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v49);
      sub_1BE1B2690();
      *(_QWORD *)&v60 = v42;
      *((_QWORD *)&v60 + 1) = &type metadata for CRSetElement;
      v61 = v58;
      v62 = v43;
      v63 = &off_1EF526828;
      type metadata accessor for CRSetRef();
    }
    swift_release();
    swift_release();
    v36 = v30;
  }
  else
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_OWORD *)v35 = xmmword_1BE1BB990;
    *(_BYTE *)(v35 + 16) = 0;
    swift_willThrow();
    swift_release();
    v36 = a1;
  }
  return sub_1BDD9C3E0(v36, type metadata accessor for Proto_Set);
}

void sub_1BE0DCDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 - 200) = v1;
  *(_QWORD *)(v3 - 192) = v2;
  v4 = *(_QWORD *)(v3 - 272);
  if (qword_1ED6F4510 != -1)
    swift_once();
  swift_retain();
  sub_1BE1B2E40();
  swift_release();
  v5 = *(_QWORD *)(v3 - 72);
  v6 = swift_allocObject();
  sub_1BDDAABC8(*(_QWORD *)(v3 - 224), (_OWORD *)(v3 - 200), v0, v5);
  swift_release();
  sub_1BDD9C3E0(v4, type metadata accessor for Proto_Set);
  **(_QWORD **)(v3 - 280) = v6;
  JUMPOUT(0x1BE0DCB70);
}

double sub_1BE0DCE90@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  double result;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t TupleTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41[3];
  uint64_t v42;

  v37 = a5;
  v38 = a4;
  v40 = a3;
  v42 = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Proto_Version(0);
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x1E0C80A78](v11);
  v36 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Proto_Value(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_Set.Element(0) + 20));
  v21 = v20 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v21, (uint64_t)v15, &qword_1ED6F3770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BE1B20E4();
    v22 = *(int *)(v16 + 20);
    if (qword_1ED6F2718 != -1)
      swift_once();
    *(_QWORD *)&v19[v22] = qword_1ED6F2708;
    swift_retain();
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F3770);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v15, (uint64_t)v19, type metadata accessor for Proto_Value);
  }
  v23 = v42;
  v24 = v40;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1BDDB4FC0((uint64_t)v19, a2);
  swift_release();
  v25 = *(_QWORD *)(*(_QWORD *)(v38 + 8) + 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 8);
  v27 = swift_retain();
  v28 = v39;
  v26(v27, v24, v25);
  if (v28)
  {
    swift_release();
    *v37 = v28;
  }
  else
  {
    v30 = v20
        + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
    swift_beginAccess();
    sub_1BDD86DEC(v30, (uint64_t)v10, &qword_1ED6F37A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v10, 1, v35) == 1)
    {
      v31 = MEMORY[0x1E0DEE9D8];
      v32 = v36;
      *v36 = MEMORY[0x1E0DEE9D8];
      v32[1] = v31;
      sub_1BE1B20E4();
      sub_1BDD86E30((uint64_t)v10, &qword_1ED6F37A8);
    }
    else
    {
      v32 = v36;
      sub_1BDDA2E8C((uint64_t)v10, (uint64_t)v36, type metadata accessor for Proto_Version);
    }
    swift_retain();
    sub_1BDDA9DA0(v32, a2, v41);
    swift_release();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    result = v41[0];
    *(_OWORD *)(v23 + *(int *)(TupleTypeMetadata2 + 48)) = *(_OWORD *)v41;
  }
  return result;
}

uint64_t sub_1BE0DD234()
{
  uint64_t v0;

  sub_1BDDFCAFC();
  swift_allocError();
  *(_QWORD *)v0 = 0xD000000000000016;
  *(_QWORD *)(v0 + 8) = 0x80000001BE1CFC70;
  *(_BYTE *)(v0 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1BE0DD298@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v50 = (_QWORD *)*a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v49 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v48 = (uint64_t)&v45 - v9;
  v47 = type metadata accessor for Proto_Version(0);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v45 = (_QWORD **)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1BE1B1F58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v15 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  if (qword_1ED6F2808 != -1)
    swift_once();
  *(_QWORD *)(a3 + v15) = qword_1ED6F2800;
  v16 = a1[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  swift_retain();
  v51 = (_QWORD *)a2;
  v17 = sub_1BDDAE244((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    v18 = swift_retain();
    *(_QWORD *)(a3 + v15) = sub_1BDDA1768(v18);
    swift_release();
  }
  v19 = *(_QWORD *)(a3 + v15);
  swift_beginAccess();
  *(_QWORD *)(v19 + 16) = v17;
  swift_beginAccess();
  v20 = a1[4];
  v54 = a1[3];
  v55 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v45;
  v22 = v51;
  sub_1BDDAD780((uint64_t)v51, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    v23 = swift_retain();
    *(_QWORD *)(a3 + v15) = sub_1BDDA1768(v23);
    swift_release();
  }
  v24 = *(_QWORD *)(a3 + v15);
  v25 = v48;
  sub_1BDDA2E8C((uint64_t)v21, v48, type metadata accessor for Proto_Version);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v25, 0, 1, v47);
  v26 = v49;
  sub_1BDDA2EF0(v25, v49, &qword_1ED6F37A8);
  v27 = v24 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v26, v27, &qword_1ED6F37A8);
  swift_endAccess();
  swift_release();
  v28 = swift_beginAccess();
  v53 = a1[5];
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (_QWORD *)v50[12];
  v30 = (_QWORD *)v50[13];
  *(&v45 - 4) = (_QWORD *)v50[10];
  *(&v45 - 3) = v31;
  *(&v45 - 2) = v30;
  *(&v45 - 1) = v22;
  MEMORY[0x1E0C80A78](v29);
  *(&v45 - 6) = v32;
  *(&v45 - 5) = v33;
  *(&v45 - 4) = v34;
  *(&v45 - 3) = sub_1BE0DF3BC;
  *(&v45 - 2) = v35;
  v36 = sub_1BE1B2684();
  v37 = (char *)type metadata accessor for Proto_Set.Element(0);
  swift_bridgeObjectRetain();
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
  v39 = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEA0E0], v36);
  v40 = v52;
  v41 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE0DF3D8, (uint64_t)(&v45 - 8), v36, v37, v38, v39, MEMORY[0x1E0DEDB38], (uint64_t)&v56);
  swift_bridgeObjectRelease();
  if (v40)
    return sub_1BDD9C3E0(a3, type metadata accessor for Proto_Set);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    v43 = swift_retain();
    *(_QWORD *)(a3 + v15) = sub_1BDDA1768(v43);
    swift_release();
  }
  v44 = (uint64_t *)(*(_QWORD *)(a3 + v15)
                  + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
  swift_beginAccess();
  *v44 = v41;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0DD7CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a5;
  v54 = a6;
  v51 = a4;
  v52 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v50 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v49 = (uint64_t)&v42 - v13;
  v14 = type metadata accessor for Proto_Version(0);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x1E0C80A78](v14);
  v46 = (uint64_t *)((char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v17 = MEMORY[0x1E0C80A78](v16);
  v43 = (uint64_t)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v42 - v19;
  v21 = type metadata accessor for Proto_Value(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a2;
  v44 = a2[1];
  v45 = v25;
  sub_1BE1B20E4();
  v26 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  if (qword_1ED6EF6F0 != -1)
    swift_once();
  v27 = qword_1ED6EF6E0;
  *(_QWORD *)(a7 + v26) = qword_1ED6EF6E0;
  MEMORY[0x1E0C80A78](v27);
  v28 = v53;
  *(&v42 - 6) = v51;
  *(&v42 - 5) = v28;
  v29 = v52;
  *(&v42 - 4) = v54;
  *(&v42 - 3) = v29;
  *(&v42 - 2) = a3;
  swift_retain();
  v30 = v57;
  sub_1BDE1CC84((void (*)(uint64_t))sub_1BE0DF2D4, (uint64_t)v24);
  if (v30)
    return sub_1BDD9C3E0(a7, type metadata accessor for Proto_Set.Element);
  v57 = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set.Element._StorageClass(0);
    swift_allocObject();
    v32 = swift_retain();
    *(_QWORD *)(a7 + v26) = sub_1BE13500C(v32);
    swift_release();
  }
  v33 = *(_QWORD *)(a7 + v26);
  sub_1BDDA2E8C((uint64_t)v24, (uint64_t)v20, type metadata accessor for Proto_Value);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  v34 = v43;
  sub_1BDDA2EF0((uint64_t)v20, v43, &qword_1ED6F3770);
  v35 = v33 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v34, v35, &qword_1ED6F3770);
  swift_endAccess();
  swift_release();
  v55 = v45;
  v56 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = v46;
  sub_1BDDAD780(a3, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set.Element._StorageClass(0);
    swift_allocObject();
    v37 = swift_retain();
    *(_QWORD *)(a7 + v26) = sub_1BE13500C(v37);
    swift_release();
  }
  v38 = *(_QWORD *)(a7 + v26);
  v39 = v49;
  sub_1BDDA2E8C((uint64_t)v36, v49, type metadata accessor for Proto_Version);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v39, 0, 1, v48);
  v40 = v50;
  sub_1BDDA2EF0(v39, v50, &qword_1ED6F37A8);
  v41 = v38 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v40, v41, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE0DDC20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v43 = a4;
  v44 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v42 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v37 = (uint64_t)&v37 - v11;
  v12 = type metadata accessor for Proto_Version(0);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  MEMORY[0x1E0C80A78](v12);
  v39 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1BE1B1F58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v18 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  if (qword_1ED6F2808 != -1)
    swift_once();
  *(_QWORD *)(a5 + v18) = qword_1ED6F2800;
  v19 = a1[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
  swift_retain();
  v38 = a2;
  v20 = sub_1BDDAE244((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    v21 = swift_retain();
    *(_QWORD *)(a5 + v18) = sub_1BDDA1768(v21);
    swift_release();
  }
  v22 = *(_QWORD *)(a5 + v18);
  swift_beginAccess();
  *(_QWORD *)(v22 + 16) = v20;
  swift_beginAccess();
  v23 = a1[4];
  v45 = a1[3];
  v46 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v39;
  sub_1BDDAD780(v38, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    v25 = swift_retain();
    *(_QWORD *)(a5 + v18) = sub_1BDDA1768(v25);
    swift_release();
  }
  v26 = *(_QWORD *)(a5 + v18);
  v27 = v37;
  sub_1BDDA2E8C((uint64_t)v24, v37, type metadata accessor for Proto_Version);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v27, 0, 1, v41);
  v28 = v42;
  sub_1BDDA2EF0(v27, v42, &qword_1ED6F37A8);
  v29 = v26 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v28, v29, &qword_1ED6F37A8);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v30 = swift_bridgeObjectRetain();
  v31 = v47;
  v32 = v44(v30);
  if (v31)
  {
    sub_1BDD9C3E0(a5, type metadata accessor for Proto_Set);
  }
  else
  {
    v33 = v32;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set._StorageClass(0);
      swift_allocObject();
      v34 = swift_retain();
      *(_QWORD *)(a5 + v18) = sub_1BDDA1768(v34);
      swift_release();
    }
    v35 = (uint64_t *)(*(_QWORD *)(a5 + v18)
                    + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
    swift_beginAccess();
    *v35 = v33;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0DE06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t TupleTypeMetadata2;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  _UNKNOWN **v71;
  uint64_t v72;

  v65 = a5;
  v66 = a7;
  v67 = a6;
  v59 = a2;
  v57 = a8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for Proto_Version(0);
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v63 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F43C0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BE1B1F58();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  v22 = *(_QWORD *)(a1 + v61);
  swift_beginAccess();
  v23 = *(_QWORD *)(a4 + 24);
  v24 = *(_QWORD *)(v23 + 16);
  if (v24 && (v25 = *(_QWORD *)(v22 + 16), v25 < v24))
  {
    v54 = a3;
    v58 = a4;
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v21, v23+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v25, v18);
    type metadata accessor for ReplicaState();
    v26 = swift_allocObject();
    v27 = v26 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
    v28 = type metadata accessor for Replica();
    v29 = *(_QWORD *)(v28 - 8);
    v56 = a1;
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v30(v27, 1, 1, v28);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v26 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v21, v18);
    *(_QWORD *)(v26 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
    v55 = v26;
    *(_QWORD *)(v26 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
    v30((uint64_t)v17, 1, 1, v28);
    a1 = v56;
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v17, v27, &qword_1ED6F43C0);
    swift_endAccess();
    v31 = v61;
    v32 = *(_QWORD *)(a1 + v61)
        + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    sub_1BDD86DEC(v32, (uint64_t)v13, &qword_1ED6F37A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v13, 1, v62) == 1)
    {
      v33 = MEMORY[0x1E0DEE9D8];
      v34 = v63;
      *v63 = MEMORY[0x1E0DEE9D8];
      v34[1] = v33;
      sub_1BE1B20E4();
      sub_1BDD86E30((uint64_t)v13, &qword_1ED6F37A8);
    }
    else
    {
      v34 = v63;
      sub_1BDDA2E8C((uint64_t)v13, (uint64_t)v63, type metadata accessor for Proto_Version);
    }
    v36 = v58;
    v38 = v66;
    v37 = v67;
    swift_retain();
    v39 = v64;
    sub_1BDDA9DA0(v34, v36, &v68);
    v40 = v65;
    v41 = v54;
    if (!v39)
    {
      v64 = *((_QWORD *)&v68 + 1);
      v66 = v68;
      v43 = (_QWORD *)(*(_QWORD *)(a1 + v31)
                     + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
      swift_beginAccess();
      v63 = &v53;
      *(_QWORD *)&v68 = *v43;
      v44 = MEMORY[0x1E0C80A78](v68);
      *(&v53 - 6) = v40;
      *(&v53 - 5) = v37;
      v45 = v59;
      *(&v53 - 4) = v38;
      *(&v53 - 3) = v45;
      *(&v53 - 2) = v41;
      MEMORY[0x1E0C80A78](v44);
      *(&v53 - 6) = v40;
      *(&v53 - 5) = v37;
      *(&v53 - 4) = v38;
      *(&v53 - 3) = (uint64_t)sub_1BE0DF458;
      *(&v53 - 2) = v46;
      swift_bridgeObjectRetain();
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EF758);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26D0);
      v50 = sub_1BDDA9D60(&qword_1ED6EF750, &qword_1ED6EF758, MEMORY[0x1E0DECC68]);
      v51 = sub_1BDF02134((void (*)(char *, char *))sub_1BE0DF478, (uint64_t)(&v53 - 8), v47, TupleTypeMetadata2, v49, v50, MEMORY[0x1E0DEDB38], (uint64_t)&v72);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v68 = v51;
      v52 = sub_1BE1B2A5C();
      MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v52);
      sub_1BE1B2690();
      *(_QWORD *)&v68 = v40;
      *((_QWORD *)&v68 + 1) = &type metadata for CRSetElement;
      v69 = v67;
      v70 = v38;
      v71 = &off_1EF526828;
      type metadata accessor for CRSetRef();
    }
    swift_release();
  }
  else
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_OWORD *)v35 = xmmword_1BE1BB990;
    *(_BYTE *)(v35 + 16) = 0;
    swift_willThrow();
  }
  swift_release();
  return sub_1BDD9C3E0(a1, type metadata accessor for Proto_Set);
}

void sub_1BE0DE69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 - 232);
  *(_QWORD *)(v1 - 200) = *(_QWORD *)(v1 - 216);
  *(_QWORD *)(v1 - 192) = v2;
  if (qword_1ED6F4510 != -1)
    swift_once();
  swift_retain();
  sub_1BE1B2E40();
  swift_release();
  v3 = *(_QWORD *)(v1 - 72);
  v4 = swift_allocObject();
  sub_1BDDAABC8(*(_QWORD *)(v1 - 304), (_OWORD *)(v1 - 200), v0, v3);
  swift_release();
  sub_1BDD9C3E0(*(_QWORD *)(v1 - 296), type metadata accessor for Proto_Set);
  **(_QWORD **)(v1 - 288) = v4;
  JUMPOUT(0x1BE0DE44CLL);
}

uint64_t sub_1BE0DE778@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, char *)@<X1>, _QWORD *a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  v8 = *a1;
  v9 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EF748) + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = a2(a4, a4 + *(int *)(TupleTypeMetadata2 + 48), v8, v9);
  if (v4)
    *a3 = v4;
  return result;
}

uint64_t sub_1BE0DE824@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE0DE854@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v8;

  v8 = (_QWORD *)sub_1BDDA9128();
  sub_1BE0DDC20(v8, a1, a2, a3, a4);
  return swift_release();
}

uint64_t CRSet<>.encode(to:)(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void (**v3)(_QWORD, _QWORD, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD);

  v22 = a3;
  v6 = a2[2];
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  v21 = *v3;
  v13 = a1[3];
  v14 = a1;
  v15 = v7;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_1BE1B3764();
  v27 = v21;
  CRSet.makeIterator()(&v24);
  v16 = type metadata accessor for CRSet.Iterator(0, v6, a2[3], a2[4]);
  CRSet.Iterator.next()(v16, (uint64_t)v12);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v17(v12, 1, v6) != 1)
  {
    v21 = *(void (**)(_QWORD, _QWORD, _QWORD))(v15 + 32);
    do
    {
      v21(v9, v12, v6);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      v18 = v23;
      sub_1BE1B3380();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v6);
      if (v18)
        break;
      v23 = 0;
      CRSet.Iterator.next()(v16, (uint64_t)v12);
    }
    while (v17(v12, 1, v6) != 1);
  }
  sub_1BDE27FD0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1BE0DEAD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return CRSet<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t sub_1BE0DEAE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BE0DA3F0(a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for CRSet.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSet.Iterator);
}

uint64_t sub_1BE0DEB10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1BE0D9AC4(a1, v3[5], v3[2], v3[3], a2, a3);
}

uint64_t sub_1BE0DEB30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1BE0DA108(a1, v3[5], v3[2], v3[3], v3[4], a2, (void (*)(uint64_t))sub_1BE0DF2D4, a3);
}

void sub_1BE0DEB58()
{
  sub_1BE1B3200();
  __break(1u);
}

_UNKNOWN **sub_1BE0DEBA0()
{
  return &protocol witness table for CRSet<A>.Partial;
}

uint64_t sub_1BE0DEBAC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRSet<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

_UNKNOWN **sub_1BE0DEBD8()
{
  return &off_1EF526828;
}

void sub_1BE0DEBE4()
{
  JUMPOUT(0x1C3B7DF54);
}

void sub_1BE0DEBF4()
{
  JUMPOUT(0x1C3B7DF54);
}

void sub_1BE0DEC04()
{
  JUMPOUT(0x1C3B7DF54);
}

void sub_1BE0DEC14()
{
  JUMPOUT(0x1C3B7DF54);
}

uint64_t type metadata accessor for CRSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSet);
}

uint64_t type metadata accessor for CRSet.ObservableDifference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSet.ObservableDifference);
}

uint64_t type metadata accessor for CRSet.MutatingAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSet.MutatingAction);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t type metadata accessor for CRSet.Partial(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSet.Partial);
}

uint64_t type metadata accessor for CRSet.Index(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRSet.Index);
}

uint64_t sub_1BE0DEC9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BE0DECE4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BE0DED58(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BE0DEE14(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BE0DEE80(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BE0DEEC8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CRSetRefMergeableDelta()
{
  JUMPOUT(0x1C3B7DED0);
}

unint64_t sub_1BE0DEF24(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BE0DEF64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *sub_1BE0DEFB4(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1BE0DF06C(_QWORD *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BE0DF0E0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t sub_1BE0DF130(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1BE0DF184(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BE0DF19C(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

void type metadata accessor for CRSetRefMergeableDelta.RemovedVersion()
{
  JUMPOUT(0x1C3B7DED0);
}

ValueMetadata *type metadata accessor for CRSetElement()
{
  return &type metadata for CRSetElement;
}

_UNKNOWN **sub_1BE0DF1D8()
{
  return &off_1EF526800;
}

BOOL sub_1BE0DF1E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BE0D60C4(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1BE0DF208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1BE0D5388(a1, a2, v3[7], v3[2], v3[3], v3[4], v3[5], v3[6], a3);
}

uint64_t sub_1BE0DF228(uint64_t a1, uint64_t a2)
{
  return sub_1BE0DF31C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BE0D5688);
}

uint64_t sub_1BE0DF244(uint64_t a1, uint64_t a2)
{
  return sub_1BE0DF2AC(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BE0D5734);
}

uint64_t sub_1BE0DF260()
{
  return sub_1BDFDD3AC();
}

uint64_t sub_1BE0DF274(uint64_t a1, uint64_t a2)
{
  return sub_1BE0DF2AC(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BE0D4B54);
}

uint64_t sub_1BE0DF290(uint64_t a1, uint64_t a2)
{
  return sub_1BE0DF2AC(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BE0D4E8C);
}

uint64_t sub_1BE0DF2AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[7], v3[2], v3[3], v3[4], v3[5], v3[6], a2);
}

uint64_t sub_1BE0DF2D4()
{
  return sub_1BDF04F50();
}

uint64_t sub_1BE0DF2E8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;

  return sub_1BE0D61FC(a1, a2, a3, a4, *(_QWORD **)(v4 + 16), *(_OWORD **)(v4 + 24));
}

uint64_t sub_1BE0DF300(uint64_t a1, uint64_t a2)
{
  return sub_1BE0DF31C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BE0D660C);
}

uint64_t sub_1BE0DF31C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[7], v3[8], v3[2], v3[3], v3[4], v3[5], v3[6], a2);
}

BOOL sub_1BE0DF354()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  (*(void (**)(_QWORD *__return_ptr, _QWORD))(*(_QWORD *)(v0 + 48) + 24))(v3, *(_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v3[1] + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 != 0;
}

uint64_t sub_1BE0DF3BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1BE0DD7CC(a1, a2, v3[5], v3[2], v3[3], v3[4], a3);
}

uint64_t sub_1BE0DF3D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = v6(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  if (v3)
    *a2 = v3;
  return result;
}

uint64_t sub_1BE0DF458()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_1BE0DF478@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BE0DE778(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(v3 + 40), a2, a3);
}

double sub_1BE0DF49C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1BE0DCE90(a1, v3[5], v3[2], v3[3], a2, a3);
}

uint64_t sub_1BE0DF4BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BE0DEB10(a1, a2, a3);
}

uint64_t sub_1BE0DF4D8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[7];
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _UNKNOWN **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v43 = a1;
  v6 = a3[2];
  v5 = a3[3];
  v32[4] = a3;
  v35 = a3[4];
  v36 = v5;
  v39 = type metadata accessor for TreeNode(255, v6, v5, v35);
  v7 = sub_1BE1B2EE8();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v34 = (char *)v32 - v9;
  v10 = *(_QWORD *)(v6 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v41 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v32 - v13;
  v15 = sub_1BE1B2EE8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v32[6] = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v40 = (char *)v32 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v32 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v32 - v24;
  v33 = *v3;
  v42 = *(_OWORD *)(v3 + 1);
  v32[5] = v3[3];
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v27 = v26(a2, 1, v6);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v44(v25, a2, v15);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v28(v14, v43, v6);
  if (v27 != 1)
  {
    v32[2] = v28;
    v43 = v16;
    v32[3] = v14;
    v44(v23, (uint64_t)v25, v15);
    v32[1] = v26;
    if (v26((uint64_t)v23, 1, v6) != 1)
    {
      v51 = v33;
      v52 = v42;
      swift_retain();
      swift_retain();
      v29 = v39;
      v30 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v39);
      v45 = v6;
      v46 = v29;
      v47 = v36;
      v48 = v35;
      v49 = &off_1E775B0E8;
      v50 = v30;
      type metadata accessor for CROrderedDictionary();
    }
    __break(1u);
    JUMPOUT(0x1BE0DF954);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
  return 1;
}

void sub_1BE0DF958(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[8];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v24 = a1;
  v5 = a2[2];
  v6 = sub_1BE1B2EE8();
  v19[4] = *(_QWORD *)(v6 - 8);
  v19[5] = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v21 = (char *)v19 - v8;
  v22 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v7);
  v19[6] = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2[3];
  v11 = a2[4];
  v23 = a2;
  v12 = type metadata accessor for TreeNode(255, v5, v10, v11);
  v20 = sub_1BE1B2EE8();
  v13 = MEMORY[0x1E0C80A78](v20);
  v14 = MEMORY[0x1E0C80A78](v13);
  v19[3] = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v16);
  v17 = v3[1];
  v31 = *v3;
  v32 = v17;
  v18 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v12);
  v25 = v5;
  v26 = v12;
  v27 = v10;
  v28 = v11;
  v19[7] = v11;
  v29 = &off_1E775B0E8;
  v30 = v18;
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0DFAF4()
{
  CROrderedDictionary.subscript.getter();
}

uint64_t sub_1BE0DFB08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD);
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v3, 1, v4) == 1)
    return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v3, *(_QWORD *)(v8 - 192));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v0, v6, v4);
  *(_QWORD *)(v8 - 192) = v2;
  *(_QWORD *)(v8 - 240) = v5;
  v10 = sub_1BE1B2A5C();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8254, v4);
  sub_1BE1B2684();
  v11 = (void (*)(uint64_t, _QWORD))sub_1BE1B269C();
  v13 = *v12;
  *(_QWORD *)(v8 - 248) = v6;
  if (v13)
  {
    v14 = *(void (**)(char *, uint64_t))(v8 - 160);
    sub_1BDE0B798((uint64_t)v14, v10);
    v11(v8 - 152, 0);
  }
  else
  {
    v11(v8 - 152, 0);
    v14 = *(void (**)(char *, uint64_t))(v8 - 160);
  }
  v15 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v15(v0, v4);
  v17 = *(_QWORD *)(v8 - 192);
  v16 = *(_QWORD *)(v8 - 184);
  v18 = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v8 - 152) = *(_QWORD *)v17;
  *(_OWORD *)(v8 - 144) = *(_OWORD *)(v17 + 8);
  *(_QWORD *)(v8 - 128) = v18;
  v19 = *(uint64_t **)(v8 - 168);
  sub_1BE0E3828(v14, v19, v16);
  v20 = *(_QWORD *)(v8 - 176);
  v21 = *(_QWORD *)(v8 - 240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v16, 1, v21) != 1)
  {
    v22 = *(_QWORD *)(v8 - 208);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v22, v16, v21);
    v23 = *(_QWORD *)(v8 - 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v23, 1, 1, v21);
    sub_1BDE0B86C(v22, v23, v19);
  }
  v15(*(_QWORD *)(v8 - 248), v4);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 224) + 8))(v16, *(_QWORD *)(v8 - 216));
}

void sub_1BE0DFD14(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t TupleTypeMetadata2;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  _QWORD v53[8];

  v42 = a1;
  v4 = a2[2];
  v3 = a2[3];
  v33 = a2;
  v5 = a2[4];
  v41 = v3;
  v44 = v5;
  v6 = type metadata accessor for TreeNode(0, v4, v3, v5);
  v49 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v31 - v7;
  v8 = sub_1BE1B2EE8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v35 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = (char *)&v31 - v10;
  v12 = *(_QWORD *)(v8 - 8);
  v13 = MEMORY[0x1E0C80A78](v9);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v31 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v20 = *(_QWORD *)(v4 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v52 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v22;
  MEMORY[0x1E0C80A78](v21);
  v51 = (char *)&v31 - v23;
  v45 = v2;
  v24 = v2[3];
  v25 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C3B7C928](v25, v4))
  {
    v43 = v8;
    v37 = v11;
    v46 = v12;
    v47 = v18;
    v26 = v24;
    v34 = v15;
    v39 = v4;
    v38 = v20;
    v40 = v24;
    v27 = sub_1BE1B29FC();
    sub_1BE1B29A8();
    if ((v27 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v51, v26 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)), v4);
    }
    else
    {
      v30 = sub_1BE1B30BC();
      if (v32 != 8)
      {
        __break(1u);
        JUMPOUT(0x1BE0E0340);
      }
      v53[0] = v30;
      (*(void (**)(char *, _QWORD *, uint64_t))(v20 + 16))(v51, v53, v4);
      swift_unknownObjectRelease();
    }
    v50 = 1;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v52, v51, v4);
    v28 = v45[1];
    v53[6] = *v45;
    v53[7] = v28;
    v29 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v6);
    v53[0] = v4;
    v53[1] = v6;
    v53[2] = v41;
    v53[3] = v44;
    v53[4] = &off_1E775B0E8;
    v53[5] = v29;
    type metadata accessor for CROrderedDictionary();
  }
  swift_bridgeObjectRelease();
  sub_1BE0E2AD4(0, v33);
}

void CROrderedTree.actionUndoingDifference(from:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E0408()
{
  CROrderedDictionary.actionUndoingDifference(from:)();
}

_QWORD *CROrderedTree.apply(_:)(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  if (*result != 1)
  {
    v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
    MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
    type metadata accessor for CROrderedDictionary();
  }
  return result;
}

void CROrderedTree.hasDelta(from:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

uint64_t sub_1BE0E0584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  return CROrderedDictionary.hasDelta(from:)(&v5, a1, a3, a4) & 1;
}

void CROrderedTree.delta(_:from:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v3);
  type metadata accessor for CROrderedDictionary();
}

uint64_t sub_1BE0E0628()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = CROrderedDictionary.delta(_:from:)(&v4);
  v2 = v5;
  if (v5)
    v3 = v4;
  else
    v3 = 0;
  *v0 = v3;
  v0[1] = v2;
  return result;
}

uint64_t CROrderedTree.canMerge(delta:)()
{
  return 1;
}

void CROrderedTree.merge(delta:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E06EC(uint64_t a1)
{
  uint64_t v1;

  CROrderedDictionary.merge(delta:)(&v1, a1);
}

void CROrderedTree.copy(renamingReferences:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  swift_retain();
  swift_retain();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E07A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  CROrderedDictionary.copy(renamingReferences:)(v9, a1, (uint64_t)&a9);
}

void sub_1BE0E07B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[12];

  swift_release();
  swift_release();
  v6[0] = v4;
  v6[1] = v5;
  sub_1BE0E29E8(v6, v1, v2, v3, v0);
}

uint64_t CROrderedTree.observableDifference(from:with:)()
{
  return 1;
}

void CROrderedTree.visitReferences(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E0884()
{
  CROrderedDictionary.visitReferences(_:)();
}

Swift::Bool __swiftcall CROrderedTree.needToFinalizeTimestamps()()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = type metadata accessor for TreeNode(255, v0[2], v0[3], v0[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v1);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E091C()
{
  CROrderedDictionary.needToFinalizeTimestamps()();
}

uint64_t sub_1BE0E0924(char a1)
{
  return a1 & 1;
}

void CROrderedTree.finalizeTimestamps(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E09AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  CROrderedDictionary.finalizeTimestamps(_:)(v4, a1, a3, a4);
}

void CROrderedTree.merge(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E0A48(uint64_t a1)
{
  uint64_t v1;

  CROrderedDictionary.merge(_:)(&v1, a1);
}

uint64_t sub_1BE0E0A78(uint64_t a1, uint64_t *a2)
{
  return CROrderedTree.init(from:)(a1, a2[2], a2[3], a2[4]);
}

uint64_t CROrderedTree.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[2];
  _QWORD v13[2];
  uint64_t v14;

  v9 = type metadata accessor for TreeNode(0, a2, a3, a4);
  swift_retain();
  v10 = (_QWORD *)MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v9);
  CROrderedDictionary.init(from:)(a1, a2, v9, a3, a4, (uint64_t *)&off_1E775B0E8, v10, v13);
  if (!v4)
  {
    v12[0] = v13[0];
    v12[1] = v13[1];
    sub_1BE0E29E8(v12, a2, a3, a4, &v14);
  }
  return swift_release();
}

void sub_1BE0E0B90(uint64_t a1, uint64_t *a2)
{
  CROrderedTree.encode(to:)(a1, a2);
}

void CROrderedTree.encode(to:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  swift_retain();
  swift_retain();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

uint64_t sub_1BE0E0C30()
{
  CROrderedDictionary.encode(to:)();
  swift_release();
  return swift_release();
}

void sub_1BE0E0C78(uint64_t *a1)
{
  CROrderedTree.minEncodingVersion.getter(a1);
}

void CROrderedTree.minEncodingVersion.getter(uint64_t *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for TreeNode(255, a1[2], a1[3], a1[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v1);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E0CF8()
{
  _BYTE *v0;

  CROrderedDictionary.minEncodingVersion.getter(v0);
}

uint64_t sub_1BE0E0D1C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[7];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _UNKNOWN **v47;
  uint64_t v48;
  uint64_t v49;

  v41 = a1;
  v6 = a3[2];
  v5 = a3[3];
  v32[3] = a3;
  v33 = a3[4];
  v34 = v5;
  v37 = type metadata accessor for TreeNode(255, v6, v5, v33);
  v7 = sub_1BE1B2EE8();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v32[6] = (char *)v32 - v9;
  v10 = *(_QWORD *)(v6 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v39 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v32 - v13;
  v15 = sub_1BE1B2EE8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v32[5] = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v38 = (char *)v32 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v32 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v32 - v24;
  v40 = *v3;
  v32[4] = *((_QWORD *)v3 + 2);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v27 = v26(a2, 1, v6);
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v42(v25, a2, v15);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v28(v14, v41, v6);
  if (v27 != 1)
  {
    v32[2] = v28;
    v41 = v16;
    v42(v23, (uint64_t)v25, v15);
    v32[1] = v26;
    if (v26((uint64_t)v23, 1, v6) != 1)
    {
      v49 = v40;
      swift_retain();
      v29 = v37;
      v30 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v37);
      v43 = v6;
      v44 = v29;
      v45 = v34;
      v46 = v33;
      v47 = &off_1E775B0E8;
      v48 = v30;
      type metadata accessor for CRDictionary();
    }
    __break(1u);
    JUMPOUT(0x1BE0E114CLL);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v6);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
  return 1;
}

void sub_1BE0E1150(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v24 = a1;
  v5 = a2[2];
  v6 = sub_1BE1B2EE8();
  v18[1] = *(_QWORD *)(v6 - 8);
  v18[2] = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v22 = (char *)v18 - v8;
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v7);
  v18[3] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2[3];
  v11 = a2[4];
  v21 = a2;
  v12 = type metadata accessor for TreeNode(255, v5, v10, v11);
  v19 = sub_1BE1B2EE8();
  v13 = MEMORY[0x1E0C80A78](v19);
  v14 = MEMORY[0x1E0C80A78](v13);
  v18[0] = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v16);
  v20 = v3;
  v31 = *v3;
  v17 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v12);
  v25 = v5;
  v26 = v12;
  v27 = v10;
  v28 = v11;
  v29 = &off_1E775B0E8;
  v30 = v17;
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E12EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, _QWORD);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  CRDictionary.subscript.getter(*(_QWORD *)(v11 - 152), a4, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return (*(uint64_t (**)(uint64_t, _QWORD))(v5 + 8))(v7, *(_QWORD *)(v11 - 192));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v6, v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v4, v6, v8);
  v13 = *(_QWORD *)(v11 - 184);
  *(_QWORD *)(v11 - 192) = v10;
  sub_1BE1B2BF4();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8254, v8);
  sub_1BE1B2684();
  v14 = v4;
  v15 = (void (*)(uint64_t, _QWORD))sub_1BE1B269C();
  v17 = v13;
  v18 = v6;
  if (*v16)
  {
    v19 = *(_QWORD *)(v11 - 152);
    sub_1BDF2E4C0();
    v15(v11 - 144, 0);
  }
  else
  {
    v15(v11 - 144, 0);
    v19 = *(_QWORD *)(v11 - 152);
  }
  v20 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v20(v14, v8);
  v21 = *(_QWORD *)(v17 + 16);
  *(_OWORD *)(v11 - 144) = *(_OWORD *)v17;
  *(_QWORD *)(v11 - 128) = v21;
  v22 = *(_QWORD *)(v11 - 168);
  v23 = v19;
  v24 = *(_QWORD **)(v11 - 176);
  sub_1BE0E6D50(v23, v24, v22);
  v25 = *(_QWORD *)(v11 - 160);
  v26 = *(_QWORD *)(v11 - 192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 1, v26) != 1)
  {
    v27 = *(_QWORD *)(v11 - 200);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v27, v22, v26);
    v28 = *(_QWORD *)(v11 - 224);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v28, 1, 1, v26);
    sub_1BDF2E54C(v27, v28, v24);
  }
  v20(v18, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v11 - 216) + 8))(v22, *(_QWORD *)(v11 - 208));
}

uint64_t sub_1BE0E1508(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t TupleTypeMetadata2;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _UNKNOWN **v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;

  v59 = a1;
  v4 = a2[2];
  v3 = a2[3];
  v45 = a2;
  v5 = a2[4];
  v58 = v3;
  v6 = type metadata accessor for TreeNode(0, v4, v3, v5);
  v64 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)v41 - v7;
  v8 = sub_1BE1B2EE8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v47 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v66 = (char *)v41 - v10;
  v11 = *(_QWORD *)(v8 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v49 = (char *)v41 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v48 = (char *)v41 - v18;
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v17);
  v67 = (char *)v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v43);
  v22 = (char *)v41 - v21;
  v60 = v5;
  v61 = v2;
  v23 = v2[2];
  if ((v23 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BE1B2FB4();
    result = sub_1BE1B2BDC();
    v23 = v75;
    v50 = v76;
    v25 = v77;
    v52 = v78;
    v26 = v79;
  }
  else
  {
    v27 = -1 << *(_BYTE *)(v23 + 32);
    v28 = *(_QWORD *)(v23 + 56);
    v50 = v23 + 56;
    v29 = ~v27;
    v30 = -v27;
    if (v30 < 64)
      v31 = ~(-1 << v30);
    else
      v31 = -1;
    v32 = v31 & v28;
    result = swift_bridgeObjectRetain();
    v25 = v29;
    v26 = v32;
    v52 = 0;
  }
  v44 = v23 & 0x7FFFFFFFFFFFFFFFLL;
  v41[1] = v25;
  v42 = (unint64_t)(v25 + 64) >> 6;
  v62 = v11;
  v57 = v8;
  v46 = v14;
  v53 = v23;
  v56 = v19;
  v55 = v22;
  v54 = v4;
  if (v23 < 0)
  {
    v35 = sub_1BE1B3008();
    v34 = v60;
    if (v35)
    {
      v65 = v26;
      sub_1BE1B3494();
      swift_unknownObjectRelease();
      goto LABEL_25;
    }
    goto LABEL_26;
  }
  if (v26)
  {
    v65 = (v26 - 1) & v26;
    v33 = __clz(__rbit64(v26)) | (v52 << 6);
    v34 = v60;
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v22, *(_QWORD *)(v23 + 48) + *(_QWORD *)(v19 + 72) * v33, v4);
LABEL_25:
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v4);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v67, v22, v4);
    v74 = *v61;
    v40 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v6);
    v68 = v4;
    v69 = v6;
    v70 = v58;
    v71 = v34;
    v72 = &off_1E775B0E8;
    v73 = v40;
    type metadata accessor for CRDictionary();
  }
  v36 = v52 + 1;
  v34 = v60;
  if (!__OFADD__(v52, 1))
  {
    if (v36 >= v42)
      goto LABEL_26;
    v37 = *(_QWORD *)(v50 + 8 * v36);
    v38 = v52 + 1;
    if (v37)
      goto LABEL_23;
    v38 = v52 + 2;
    if (v52 + 2 >= v42)
      goto LABEL_26;
    v37 = *(_QWORD *)(v50 + 8 * v38);
    if (v37)
    {
LABEL_23:
      v65 = (v37 - 1) & v37;
      v33 = __clz(__rbit64(v37)) + (v38 << 6);
      v52 = v38;
      goto LABEL_24;
    }
    v38 = v52 + 3;
    if (v52 + 3 < v42)
    {
      v37 = *(_QWORD *)(v50 + 8 * v38);
      if (!v37)
      {
        v39 = v52 + 4;
        do
        {
          if (v42 == v39)
            goto LABEL_26;
          v37 = *(_QWORD *)(v50 + 8 * v39++);
        }
        while (!v37);
        v38 = v39 - 1;
      }
      goto LABEL_23;
    }
LABEL_26:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v22, 1, 1, v4);
    sub_1BDE27FD0();
    sub_1BE0E6024(0, v45);
  }
  __break(1u);
  return result;
}

void CRUnorderedTree.actionUndoingDifference(from:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E1DC8(unint64_t a1)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[10];

  result = CRDictionary.actionUndoingDifference(from:)(&v4, a1, v5);
  if (v5[0])
    v3 = v5[1];
  else
    v3 = 0;
  *v1 = v5[0];
  v1[1] = v3;
  return result;
}

_QWORD *CRUnorderedTree.apply(_:)(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  if (*result)
  {
    v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
    MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
    type metadata accessor for CRDictionary();
  }
  return result;
}

void CRUnorderedTree.hasDelta(from:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E1F34()
{
  _QWORD *v1;

  return CRDictionary.hasDelta(from:)(&v1) & 1;
}

void CRUnorderedTree.delta(_:from:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v3);
  type metadata accessor for CRDictionary.MergeableDelta();
}

void sub_1BE0E1FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v17 = sub_1BE1B2EE8();
  *(_QWORD *)(v16 - 184) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v16 - 176) = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v19 = MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)(v16 - 192) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)(v16 - 200) = (char *)&a9 - v21;
  v22 = *v15;
  *(_QWORD *)(v16 - 144) = *v14;
  *(_QWORD *)(v16 - 136) = v22;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v16 - 160) = v11;
  *(_QWORD *)(v16 - 128) = v11;
  *(_QWORD *)(v16 - 120) = v9;
  *(_QWORD *)(v16 - 112) = v13;
  *(_QWORD *)(v16 - 104) = v12;
  *(_QWORD *)(v16 - 96) = &off_1E775B0E8;
  *(_QWORD *)(v16 - 88) = v10;
  type metadata accessor for CRDictionary();
}

void sub_1BE0E20B0(_OWORD *a1)
{
  uint64_t v1;

  CRDictionary.delta(_:from:)(*(_QWORD *)(v1 - 168), (uint64_t *)(v1 - 144), a1);
}

void CRUnorderedTree.canMerge(delta:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E2244()
{
  uint64_t *v0;

  return CRDictionary.canMerge(delta:)(v0) & 1;
}

void CRUnorderedTree.merge(delta:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

void sub_1BE0E22E0(uint64_t a1)
{
  uint64_t v1;

  CRDictionary.merge(delta:)(v1, a1);
}

uint64_t sub_1BE0E22EC(char a1)
{
  return a1 & 1;
}

void CRUnorderedTree.copy(renamingReferences:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  swift_retain();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

void sub_1BE0E2390(_QWORD *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  CRDictionary.copy(renamingReferences:)(v2, a1, (uint64_t)va);
}

void sub_1BE0E23A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  sub_1BE0E5EFC(&v4, v1, v2, v3, v0);
}

uint64_t CRUnorderedTree.observableDifference(from:with:)()
{
  return 1;
}

void CRUnorderedTree.visitReferences(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E2460(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return CRDictionary.visitReferences(_:)(v4, a1, a3, a4);
}

Swift::Bool __swiftcall CRUnorderedTree.needToFinalizeTimestamps()()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = type metadata accessor for TreeNode(255, v0[2], v0[3], v0[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v1);
  type metadata accessor for CRDictionary();
}

BOOL sub_1BE0E24F8()
{
  return CRDictionary.needToFinalizeTimestamps()();
}

void CRUnorderedTree.finalizeTimestamps(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E2588()
{
  return CRDictionary.finalizeTimestamps(_:)();
}

void CRUnorderedTree.merge(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

void sub_1BE0E2624(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  CRDictionary.merge(_:)(&v2, a1);
  sub_1BE0E6024(1, v1);
}

uint64_t sub_1BE0E2654(uint64_t a1, uint64_t *a2)
{
  return CRUnorderedTree.init(from:)(a1, a2[2], a2[3], a2[4]);
}

uint64_t CRUnorderedTree.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v9 = type metadata accessor for TreeNode(0, a2, a3, a4);
  swift_retain();
  v10 = (_QWORD *)MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v9);
  CRDictionary.init(from:)(a1, a2, v9, a3, a4, (uint64_t *)&off_1E775B0E8, v10, &v14);
  if (!v4)
  {
    v12 = v14;
    sub_1BE0E5EFC(&v12, a2, a3, a4, &v13);
  }
  return swift_release();
}

void sub_1BE0E2764(uint64_t a1, uint64_t *a2)
{
  CRUnorderedTree.encode(to:)(a1, a2);
}

void CRUnorderedTree.encode(to:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  swift_retain();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E27F8()
{
  CRDictionary.encode(to:)();
  return swift_release();
}

void sub_1BE0E2838(uint64_t *a1)
{
  CRUnorderedTree.minEncodingVersion.getter(a1);
}

void CRUnorderedTree.minEncodingVersion.getter(uint64_t *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for TreeNode(255, a1[2], a1[3], a1[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v1);
  type metadata accessor for CRDictionary();
}

void sub_1BE0E28B8()
{
  _BYTE *v0;

  CRDictionary.minEncodingVersion.getter(v0);
}

void CROrderedTree.init()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = type metadata accessor for TreeNode(0, a1, a2, a3);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v3);
  CROrderedDictionary.init()();
}

uint64_t sub_1BE0E2954()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1BE1B29D8();
  sub_1BE1B2A5C();
  swift_getTupleTypeMetadata2();
  sub_1BE1B29D8();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8254, v1);
  result = sub_1BE1B25DC();
  *v0 = v4;
  v0[1] = v5;
  v0[2] = result;
  v0[3] = v2;
  return result;
}

void sub_1BE0E29E8(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v9 = a1[1];
  *a5 = *a1;
  a5[1] = v9;
  a5[3] = sub_1BE1B29D8();
  v10 = type metadata accessor for TreeNode(255, a2, a3, a4);
  sub_1BE1B2A5C();
  swift_getTupleTypeMetadata2();
  sub_1BE1B29D8();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8254, v10);
  a5[2] = sub_1BE1B25DC();
  v11 = (_QWORD *)type metadata accessor for CROrderedTree(0, a2, a3, a4);
  sub_1BE0E2AD4(1, v11);
}

void sub_1BE0E2AD4(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD v21[2];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  char *v28;
  uint64_t TupleTypeMetadata2;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _UNKNOWN **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = a2[2];
  v4 = a2[3];
  v26 = a2;
  v5 = a2[4];
  v6 = type metadata accessor for TreeNode(255, v3, v4, v5);
  v25 = sub_1BE1B2EE8();
  v24 = *(_QWORD *)(v25 - 8);
  v7 = MEMORY[0x1E0C80A78](v25);
  v23 = (char *)v21 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v28 = (char *)v21 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v27 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = sub_1BE1B2EE8();
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v32 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v31 = (char *)v21 - v16;
  v22 = 0;
  v21[1] = a1;
  if ((a1 & 1) == 0)
  {
    v22 = v35[3];
    swift_bridgeObjectRetain();
  }
  v17 = sub_1BE1B29D8();
  v18 = v35;
  swift_bridgeObjectRelease();
  v18[3] = v17;
  v19 = v18[1];
  v42 = *v18;
  v43 = v19;
  v20 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v6);
  v36 = v3;
  v37 = v6;
  v38 = v4;
  v39 = v5;
  v40 = &off_1E775B0E8;
  v41 = v20;
  v30 = v20;
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E2CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 - 304) = a1;
  CROrderedDictionary.makeIterator()(a1, a4, (uint64_t *)(v9 - 112));
  *(_QWORD *)(v9 - 264) = v8;
  *(_QWORD *)(v9 - 296) = v4;
  *(_QWORD *)(v9 - 176) = v4;
  *(_QWORD *)(v9 - 168) = v5;
  *(_QWORD *)(v9 - 160) = v6;
  *(_QWORD *)(v9 - 152) = v7;
  v10 = *(_QWORD *)(v9 - 224);
  *(_QWORD *)(v9 - 144) = &off_1E775B0E8;
  *(_QWORD *)(v9 - 136) = v10;
  type metadata accessor for CROrderedDictionary.Iterator();
}

void sub_1BE0E2D88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v7 = *(char **)(v6 - 208);
  CROrderedDictionary.Iterator.next()(a1, v7);
  v8 = *(_QWORD *)(v6 - 216);
  (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(v6 - 200) + 32))(v8, v7, *(_QWORD *)(v6 - 192));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v8, 1, v3) != 1)
  {
    v9 = *(_QWORD **)(v6 - 184);
    v10 = v5;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v11(v4, v8, v1);
    v12 = *(_QWORD *)(v6 - 240);
    (*(void (**)(void))(v2 + 32))();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v1) == 1)
    {
      sub_1BDE0B970(v4, *(_QWORD *)(v6 - 256));
      JUMPOUT(0x1BE0E2D58);
    }
    v11(*(_QWORD *)(v6 - 248), v12, v1);
    v13 = v9[1];
    *(_QWORD *)(v6 - 176) = *v9;
    *(_QWORD *)(v6 - 168) = v13;
    CROrderedDictionary.subscript.getter();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BE0E45B0(*(_QWORD **)(v6 - 256));
}

uint64_t sub_1BE0E2F20()
{
  uint64_t v0;
  char v1;
  uint64_t result;

  if ((*(_DWORD *)(v0 - 316) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if (!*(_QWORD *)(v0 - 312)
    || (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        v1 = sub_1BE1B2A68(),
        swift_bridgeObjectRelease_n(),
        result = swift_bridgeObjectRelease(),
        (v1 & 1) == 0))
  {
LABEL_5:
    sub_1BE0E2FBC(*(_QWORD **)(v0 - 256));
  }
  return result;
}

void sub_1BE0E2FBC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[17];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _UNKNOWN **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = a1[2];
  v2 = a1[3];
  v22 = a1[4];
  v4 = type metadata accessor for TreeNode(0, v3, v2, v22);
  v5 = MEMORY[0x1E0C80A78](v4);
  v21[0] = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v23 = (char *)v21 - v8;
  MEMORY[0x1E0C80A78](v7);
  v21[13] = (char *)v21 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v21[1] = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v21[12] = (char *)v21 - v13;
  v14 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1BE1B2A5C();
  swift_getTupleTypeMetadata2();
  sub_1BE1B29D8();
  v16 = MEMORY[0x1C3B7DF54](&unk_1BE1C8254, v4);
  v24 = v15;
  v17 = v22;
  v21[8] = v16;
  v1[2] = sub_1BE1B25DC();
  swift_bridgeObjectRelease();
  v18 = *v1;
  v19 = v1[1];
  v25 = v1;
  v33 = v18;
  v34 = v19;
  v20 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v4);
  v26 = v3;
  v27 = v3;
  v28 = v4;
  v29 = v2;
  v30 = v17;
  v31 = &off_1E775B0E8;
  v32 = v20;
  v21[6] = v20;
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E31DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  CROrderedDictionary.makeIterator()(a1, a4, (uint64_t *)(v11 - 112));
  *(_QWORD *)(v11 - 232) = 0;
  *(_QWORD *)(v11 - 224) = 0;
  *(_QWORD *)(v11 - 312) = v10;
  *(_QWORD *)(v11 - 320) = v6;
  *(_QWORD *)(v11 - 240) = v8;
  *(_QWORD *)(v11 - 328) = v5;
  *(_QWORD *)(v11 - 336) = v9;
  *(_QWORD *)(v11 - 176) = *(_QWORD *)(v11 - 184);
  *(_QWORD *)(v11 - 168) = v7;
  *(_QWORD *)(v11 - 160) = v8;
  *(_QWORD *)(v11 - 152) = v4;
  v12 = *(_QWORD *)(v11 - 304);
  *(_QWORD *)(v11 - 144) = &off_1E775B0E8;
  *(_QWORD *)(v11 - 136) = v12;
  type metadata accessor for CROrderedDictionary.Iterator();
}

uint64_t sub_1BE0E333C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;

  CROrderedDictionary.Iterator.next()(a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v4) != 1)
  {
    *(_QWORD *)(v9 - 272) = v7;
    *(_QWORD *)(v9 - 264) = v3;
    v10 = *(int *)(v4 + 48);
    v11 = v5;
    v12 = v1;
    v13 = *(_QWORD *)(v9 - 256);
    v14 = v13 + v10;
    v15 = &v6[v10];
    v16 = v4;
    v17 = v8;
    v18 = *(_QWORD *)(*(_QWORD *)(v9 - 184) - 8);
    (*(void (**)(uint64_t, char *))(v18 + 32))(v13, v6);
    v19 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v19(v14, v15, v11);
    v20 = *(_QWORD *)(v9 - 200);
    *(_QWORD *)(v9 - 176) = *(_QWORD *)(*(_QWORD *)(v9 - 192) + 24);
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v20);
    *(_QWORD *)(v9 - 280) = *(_QWORD *)(v12 + 8);
    if ((sub_1BE1B2918() & 1) != 0)
    {
      v21 = *(_QWORD *)(v9 - 248);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v18 + 56))(v21, 1, 1, *(_QWORD *)(v9 - 184));
      v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    }
    else
    {
      v23 = *(int *)(v16 + 48);
      v24 = *(_QWORD *)(v9 - 344);
      v25 = (char *)(v24 + v23);
      v26 = v13;
      v27 = *(_QWORD *)(v9 - 184);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v24, v26, v27);
      v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
      v22(v25, v14, v11);
      v21 = *(_QWORD *)(v9 - 248);
      v19(v21, v25, v11);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v24, v27);
    }
    v28 = *(_QWORD *)(v9 - 208);
    *(_QWORD *)(v9 - 296) = v22;
    v22((char *)v28, v21, v11);
    v29 = (_QWORD *)swift_allocObject();
    v30 = *(_QWORD *)(v9 - 184);
    v31 = *(_QWORD *)(v9 - 240);
    v29[2] = v30;
    v29[3] = v31;
    v32 = *(_QWORD *)(v9 - 216);
    v29[4] = v32;
    sub_1BDE0D5B8(*(_QWORD *)(v9 - 232));
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = v30;
    v33[3] = v31;
    v34 = v11;
    v33[4] = v32;
    v33[5] = sub_1BDE0D060;
    v33[6] = v29;
    sub_1BDE0D5B8(*(_QWORD *)(v9 - 272));
    v35 = *(_QWORD *)(v9 - 192);
    swift_isUniquelyReferenced_nonNull_native();
    v36 = *(_QWORD *)(v35 + 16);
    *(_QWORD *)(v9 - 176) = v36;
    *(_QWORD *)(v35 + 16) = 0x8000000000000000;
    v37 = *(_QWORD *)(v9 - 288);
    sub_1BDE0D1D0(v28, v11, v37);
    if (__OFADD__(*(_QWORD *)(v36 + 16), (v38 & 1) == 0))
    {
      __break(1u);
    }
    else
    {
      v39 = v38;
      sub_1BE1B31B8();
      if ((sub_1BE1B3194() & 1) == 0 || (sub_1BDE0D1D0(*(_QWORD *)(v9 - 208), v34, v37), (v39 & 1) == (v40 & 1)))
      {
        *(_QWORD *)(*(_QWORD *)(v9 - 192) + 16) = *(_QWORD *)(v9 - 176);
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          JUMPOUT(0x1BE0E3284);
        }
LABEL_15:
        JUMPOUT(0x1BE0E321CLL);
      }
    }
    sub_1BE1B3680();
    __break(1u);
    goto LABEL_15;
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BDE0D5B8(*(_QWORD *)(v9 - 232));
  return sub_1BDE0D5B8(v7);
}

BOOL sub_1BE0E3654(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  int v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v24 = a2;
  v6 = a3[2];
  v7 = sub_1BE1B2EE8();
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(v6 - 8);
  v12 = MEMORY[0x1E0C80A78](v8);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - v15;
  v27 = *v3;
  v26 = *(_OWORD *)(v3 + 1);
  v25 = v3[3];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17((char *)&v22 - v15, a1, v6);
  while (1)
  {
    v28 = v27;
    v29 = v26;
    v30 = v25;
    CROrderedTree.parent(of:)(a3, (uint64_t)v10);
    v18 = *(void (**)(char *, uint64_t))(v11 + 8);
    v18(v16, v6);
    v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6);
    if (v19 == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v6);
    v17(v16, (uint64_t)v14, v6);
    v20 = sub_1BE1B2798();
    v18(v14, v6);
    if ((v20 & 1) != 0)
    {
      v18(v16, v6);
      return v19 != 1;
    }
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
  return v19 != 1;
}

uint64_t sub_1BE0E3828@<X0>(void (*a1)(char *, uint64_t)@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t TupleTypeMetadata2;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v64;
  __int128 v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  _UNKNOWN **v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v4 = v3;
  v5 = a2;
  v68 = a1;
  v42 = a3;
  v7 = a2[4];
  v6 = a2[2];
  v52 = a2[3];
  v8 = type metadata accessor for TreeNode(0, v6, v52, v7);
  v59 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v40 - v9;
  v10 = sub_1BE1B2EE8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v40 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v13 = (char *)&v40 - v12;
  v51 = v10;
  v58 = *(_QWORD *)(v10 - 8);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v40 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v40 - v19;
  v45 = sub_1BE1B2EE8();
  v41 = *(_QWORD *)(v45 - 8);
  v21 = MEMORY[0x1E0C80A78](v45);
  v23 = (char *)&v40 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v66 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v40 - v26;
  v67 = *(_QWORD *)v4;
  v65 = *(_OWORD *)(v4 + 8);
  v28 = *(_QWORD *)(v4 + 24);
  v63 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v29 + 16);
  v64 = v29;
  v63((char *)&v40 - v26, (void (*)(_QWORD, _QWORD))v68, v6);
  v50 = v65;
  v55 = v8;
  v56 = v20;
  v48 = v5;
  v47 = v7;
  v60 = v13;
  v44 = v16;
  v49 = v27;
  v61 = v28;
  v62 = v23;
  while (1)
  {
    v69 = v67;
    v70 = v65;
    v71 = v28;
    CROrderedTree.parent(of:)(v5, (uint64_t)v23);
    v30 = v64;
    v31 = *(void (**)(char *, uint64_t))(v64 + 8);
    v31(v27, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v23, 1, v6) == 1)
      break;
    v68 = v31;
    v32 = v5;
    v33 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v34 = v66;
    v33(v66, v23, v6);
    v63(v27, (void (*)(_QWORD, _QWORD))v34, v6);
    v69 = v28;
    v35 = sub_1BE1B2A5C();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v35);
    v36 = *(_QWORD *)(v7 + 8);
    if ((sub_1BE1B2918() & 1) != 0)
    {
      v54 = v36;
      v46 = v33;
      v74 = v67;
      v75 = v50;
      v37 = v55;
      v38 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v55);
      v69 = v6;
      *(_QWORD *)&v70 = v37;
      *((_QWORD *)&v70 + 1) = v52;
      v71 = v7;
      v72 = &off_1E775B0E8;
      v73 = v38;
      type metadata accessor for CROrderedDictionary();
    }
    v68(v34, v6);
    v28 = v61;
    v23 = v62;
    v5 = v32;
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v45);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v42, 1, 1, v6);
}

void CROrderedTree.remove(_:)(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[18];

  v3 = v2;
  v18[9] = a1;
  v5 = a2[2];
  MEMORY[0x1E0C80A78](a1);
  v18[0] = v6;
  v7 = sub_1BE1B2EE8();
  v18[6] = *(_QWORD *)(v7 - 8);
  v18[7] = v7;
  MEMORY[0x1E0C80A78](v7);
  v18[4] = a2;
  v18[5] = (char *)v18 - v8;
  v9 = a2[3];
  v10 = a2[4];
  v11 = type metadata accessor for TreeNode(255, v5, v9, v10);
  v12 = sub_1BE1B2EE8();
  v18[2] = *(_QWORD *)(v12 - 8);
  v18[3] = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v18[8] = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = v3[1];
  v18[16] = *v3;
  v18[17] = v16;
  v17 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v11);
  v18[10] = v5;
  v18[11] = v11;
  v18[12] = v9;
  v18[13] = v10;
  v18[1] = v10;
  v18[14] = &off_1E775B0E8;
  v18[15] = v17;
  type metadata accessor for CROrderedDictionary();
}

uint64_t CROrderedTree.parent(of:)@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = type metadata accessor for TreeNode(255, v2, a1[3], a1[4]);
  v4 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BE1B2A5C();
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v5);
  if ((sub_1BE1B2918() & 1) == 0)
  {
    MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v3);
    type metadata accessor for CROrderedDictionary();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a2, 1, 1, v2);
}

void sub_1BE0E45B0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[6];
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t TupleTypeMetadata2;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _UNKNOWN **v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v2 = v1;
  v82 = *MEMORY[0x1E0C80C00];
  v4 = a1[2];
  v5 = sub_1BE1B2EE8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v52 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v68 = (char *)v47 - v7;
  v56 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v9 = MEMORY[0x1E0C80A78](v8);
  v65 = (char *)v47 - v10;
  MEMORY[0x1E0C80A78](v9);
  v66 = (char *)v47 - v11;
  v62 = type metadata accessor for FinalizedTimestamp(0);
  v61 = *(_QWORD *)(v62 - 8);
  v12 = MEMORY[0x1E0C80A78](v62);
  v53 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v57 = (char *)v47 - v14;
  v15 = a1[3];
  v16 = a1[4];
  v47[0] = a1;
  v17 = type metadata accessor for TreeNode(255, v4, v15, v16);
  v18 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v18);
  v58 = (char *)v47 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F2DC0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v50 = (char *)v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v51 = (char *)v47 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v26 = MEMORY[0x1E0C80A78](v25);
  v55 = (char *)v47 - v27;
  v63 = *(_QWORD *)(v17 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v29 = MEMORY[0x1E0C80A78](v28);
  v72 = (char *)v47 - v30;
  v71 = *(_QWORD *)(v4 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v59 = (char *)v47 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v60 = (char *)v47 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v70 = (char *)v47 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v54 = (char *)v47 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v69 = (char *)v47 - v40;
  MEMORY[0x1E0C80A78](v39);
  v64 = (char *)v47 - v41;
  swift_getTupleTypeMetadata2();
  v48 = sub_1BE1B2EE8();
  v47[5] = *(_QWORD *)(v48 - 8);
  v42 = MEMORY[0x1E0C80A78](v48);
  v47[4] = (char *)v47 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v47[3] = (char *)v47 - v44;
  v73 = sub_1BE1B2594();
  v45 = v2[1];
  v80 = *v2;
  v81 = v45;
  v46 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v17);
  v74 = v4;
  v75 = v17;
  v49 = v15;
  v76 = v15;
  v77 = v16;
  v78 = &off_1E775B0E8;
  v79 = v46;
  v47[2] = v46;
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E4A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 376) = a1;
  CROrderedDictionary.makeIterator()(a1, a4, (uint64_t *)(v13 - 192));
  *(_QWORD *)(v13 - 304) = v8;
  *(_QWORD *)(v13 - 368) = v11;
  *(_QWORD *)(v13 - 384) = v4;
  *(_QWORD *)(v13 - 440) = v12;
  *(_QWORD *)(v13 - 424) = v5;
  *(_QWORD *)(v13 - 504) = v7;
  *(_QWORD *)(v13 - 216) = v9;
  *(_QWORD *)(v13 - 568) = v10;
  *(_QWORD *)(v13 - 160) = v6;
  *(_QWORD *)(v13 - 152) = v9;
  v14 = *(_QWORD *)(v13 - 304);
  *(_QWORD *)(v13 - 144) = *(_QWORD *)(v13 - 520);
  *(_QWORD *)(v13 - 136) = v14;
  v15 = *(_QWORD *)(v13 - 560);
  *(_QWORD *)(v13 - 128) = &off_1E775B0E8;
  *(_QWORD *)(v13 - 120) = v15;
  type metadata accessor for CROrderedDictionary.Iterator();
}

uint64_t sub_1BE0E4B6C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(char **)(v5 - 544);
  CROrderedDictionary.Iterator.next()(a1, v6);
  v7 = *(_QWORD *)(v5 - 552);
  (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(v5 - 536) + 32))(v7, v6, *(_QWORD *)(v5 - 528));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v7, 1, v3) != 1)
  {
    v8 = v7;
    v9 = v7 + *(int *)(v3 + 48);
    v10 = *(_QWORD *)(v5 - 224);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    v12 = *(_QWORD *)(v5 - 312);
    *(_QWORD *)(v5 - 280) = v11;
    v11(v12, v8, v1);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 320) + 32);
    v14 = *(_QWORD *)(v5 - 200);
    *(_QWORD *)(v5 - 360) = v13;
    v13(v14, v9, v2);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v16 = *(_QWORD *)(v5 - 248);
    v15(v16, v12, v1);
    v17 = *(_QWORD *)(v5 - 472);
    *(_QWORD *)(v5 - 240) = v15;
    v15(v17, v16, v1);
    v18 = v4[1];
    *(_QWORD *)(v5 - 160) = *v4;
    *(_QWORD *)(v5 - 152) = v18;
    sub_1BDFB2E8C();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0E5590(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_1BE1B2EE8();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = *v2;
  v10 = v2[1];
  v11 = v2[2];
  v12 = v2[3];
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED6F2898);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BE1B61B0;
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_1BE1B347C();
  v14 = v30;
  *(_QWORD *)(v13 + 32) = v29;
  *(_QWORD *)(v13 + 40) = v14;
  v29 = v9;
  v30 = v10;
  v31 = v11;
  v32 = v12;
  v15 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v5);
  v16 = CROrderedTree.children(of:)((uint64_t)v8, (_QWORD *)a2);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  v29 = v16;
  v23 = v5;
  v24 = *(_OWORD *)(a2 + 24);
  v25 = v9;
  v26 = v10;
  v27 = v11;
  v28 = v12;
  v17 = sub_1BE1B2A5C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF525500);
  v18 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v17);
  sub_1BE0E9500(qword_1EF52FEE0, v18);
  v19 = sub_1BE1B2900();
  swift_bridgeObjectRelease();
  v29 = v13;
  sub_1BDF30B8C(v19);
  return v29;
}

uint64_t sub_1BE0E5764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v7 = type metadata accessor for CROrderedTree(0, a2, a3, a4);
  v8 = sub_1BE0E5590(a1, v7);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BDE224EC(0, v9, 0);
    v10 = v16;
    v11 = v8 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BE1B284C();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_1BDE224EC(v12 > 1, v13 + 1, 1);
      v11 += 16;
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = 8224;
      *(_QWORD *)(v14 + 40) = 0xE200000000000000;
      --v9;
    }
    while (v9);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  *a5 = v10;
  return result;
}

uint64_t CROrderedTree.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BE1B2A5C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF525500);
  v1 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v0);
  sub_1BE0E9500(qword_1EF52FEE0, v1);
  sub_1BE1B2900();
  swift_bridgeObjectRelease();
  sub_1BE0E9500((unint64_t *)&qword_1EF525508, MEMORY[0x1E0DEAF20]);
  v2 = sub_1BE1B2708();
  swift_bridgeObjectRelease();
  return v2;
}

void CROrderedTree.MergeableDelta.merge(delta:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary.MergeableDelta();
}

void sub_1BE0E5A4C()
{
  CROrderedDictionary.MergeableDelta.merge(delta:)();
}

uint64_t sub_1BE0E5A58(char a1)
{
  return a1 & 1;
}

uint64_t CROrderedTree.MergeableDelta.canMerge(delta:)()
{
  return 1;
}

void CROrderedTree.MergeableDelta.visitReferences(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary.MergeableDelta();
}

void sub_1BE0E5AF0()
{
  CROrderedDictionary.MergeableDelta.visitReferences(_:)();
}

uint64_t CROrderedTree.MergeableDelta.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  _QWORD v15[2];

  v11 = type metadata accessor for TreeNode(0, a2, a3, a4);
  v12 = (_QWORD *)MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v11);
  result = CROrderedDictionary.MergeableDelta.init(from:)(a1, a2, v11, a3, a4, (uint64_t *)&off_1E775B0E8, v12, v15);
  if (!v5)
  {
    v14 = v15[1];
    *a5 = v15[0];
    a5[1] = v14;
  }
  return result;
}

void CROrderedTree.MergeableDelta.encode(to:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  swift_retain();
  swift_retain();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary.MergeableDelta();
}

void sub_1BE0E5C48()
{
  CROrderedDictionary.MergeableDelta.encode(to:)();
}

uint64_t sub_1BE0E5C5C()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1BE0E5C98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return CROrderedTree.MergeableDelta.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

void sub_1BE0E5CB8(uint64_t a1, uint64_t *a2)
{
  CROrderedTree.MergeableDelta.encode(to:)(a1, a2);
}

void CROrderedTree<>.encode(to:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CROrderedDictionary();
}

void sub_1BE0E5D4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 - 56) = v1;
  v6 = MEMORY[0x1C3B7DF54](&unk_1BE1C8220, v3, v4 - 56);
  CROrderedDictionary<>.encode(to:)(v2, a1, v1, v6);
}

void sub_1BE0E5DA0(uint64_t a1, uint64_t *a2)
{
  CROrderedTree<>.encode(to:)(a1, a2);
}

void CRUnorderedTree.init()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = type metadata accessor for TreeNode(0, a1, a2, a3);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v3);
  CRDictionary.init()();
}

uint64_t sub_1BE0E5E30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v4 = sub_1BE1B29D8();
  if (MEMORY[0x1C3B7C934](v4, v3))
    v5 = sub_1BDF33648(v4, v3, v2);
  else
    v5 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  sub_1BE1B2BF4();
  swift_getTupleTypeMetadata2();
  sub_1BE1B29D8();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8254, v1);
  result = sub_1BE1B25DC();
  *v0 = v7;
  v0[1] = result;
  v0[2] = v5;
  return result;
}

void sub_1BE0E5EFC(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  *a5 = *a1;
  v9 = sub_1BE1B29D8();
  if (MEMORY[0x1C3B7C934](v9, a2))
    v10 = sub_1BDF33648(v9, a2, a4);
  else
    v10 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  a5[2] = v10;
  v11 = type metadata accessor for TreeNode(255, a2, a3, a4);
  sub_1BE1B2BF4();
  swift_getTupleTypeMetadata2();
  sub_1BE1B29D8();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8254, v11);
  a5[1] = sub_1BE1B25DC();
  v12 = (_QWORD *)type metadata accessor for CRUnorderedTree(0, a2, a3, a4);
  sub_1BE0E6024(1, v12);
}

void sub_1BE0E6024(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _UNKNOWN **v41;
  uint64_t v42;
  uint64_t v43;

  v4 = a2[2];
  v3 = a2[3];
  v27 = a2;
  v5 = a2[4];
  v35 = v3;
  v6 = type metadata accessor for TreeNode(255, v4, v3, v5);
  v26 = sub_1BE1B2EE8();
  v25 = *(_QWORD *)(v26 - 8);
  v7 = MEMORY[0x1E0C80A78](v26);
  v24 = (char *)&v22 - v8;
  v30 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v29 = (char *)&v22 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  swift_getTupleTypeMetadata2();
  v13 = sub_1BE1B2EE8();
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v32 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = 0;
  v23 = a1;
  if ((a1 & 1) == 0)
    v16 = swift_bridgeObjectRetain();
  v22 = v16;
  v17 = sub_1BE1B29D8();
  v18 = v5;
  if (MEMORY[0x1C3B7C934](v17, v4))
    v19 = sub_1BDF33648(v17, v4, v5);
  else
    v19 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  v20 = v36;
  swift_bridgeObjectRelease();
  v20[2] = v19;
  v43 = *v20;
  v21 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v6);
  v37 = v4;
  v38 = v6;
  v39 = v35;
  v40 = v18;
  v41 = &off_1E775B0E8;
  v42 = v21;
  v31 = v21;
  type metadata accessor for CRDictionary();
}

void sub_1BE0E6278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 304) = a1;
  CRDictionary.makeIterator()((_QWORD *)(v5 - 128));
  *(_QWORD *)(v5 - 296) = v3;
  *(_QWORD *)(v5 - 184) = v2;
  *(_QWORD *)(v5 - 176) = v4;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v5 - 200);
  *(_QWORD *)(v5 - 160) = v1;
  v6 = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v5 - 152) = &off_1E775B0E8;
  *(_QWORD *)(v5 - 144) = v6;
  type metadata accessor for CRDictionary.Iterator();
}

void sub_1BE0E62F0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;

  v11 = *(char **)(v10 - 224);
  CRDictionary.Iterator.next()(a1, a4, v11);
  (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(v10 - 216) + 32))(v7, v11, *(_QWORD *)(v10 - 208));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v7, 1, v6) != 1)
  {
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v12(v4, v7, v5);
    v13 = v8;
    v14 = *(_QWORD *)(v10 - 240);
    v15 = *(_QWORD *)(v10 - 248);
    (*(void (**)(void))(v14 + 32))();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v15, 1, v5) == 1)
    {
      sub_1BDF2E674(v4, *(_QWORD *)(v10 - 264));
      JUMPOUT(0x1BE0E62BCLL);
    }
    v16 = v4;
    v17 = *(_QWORD *)(v10 - 256);
    v12(v17, v15, v5);
    *(_QWORD *)(v10 - 184) = **(_QWORD **)(v10 - 192);
    v18 = *(_QWORD *)(v10 - 288);
    CRDictionary.subscript.getter(v17, v19, v18);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 280) + 8))(v18, *(_QWORD *)(v10 - 272));
    if (v20 == 1)
      sub_1BDF2E674(v16, *(_QWORD *)(v10 - 264));
    JUMPOUT(0x1BE0E629CLL);
  }
  sub_1BDE27FD0();
  sub_1BE0E7B94(*(_QWORD **)(v10 - 264));
}

void sub_1BE0E6514(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[20];
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27;
  uint64_t v28;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = type metadata accessor for TreeNode(0, v2, v3, v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  v20[1] = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v20[19] = (char *)v20 - v9;
  MEMORY[0x1E0C80A78](v8);
  v20[14] = (char *)v20 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v20[2] = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v20[13] = (char *)v20 - v14;
  v15 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v15);
  v20[9] = (char *)v20 - v16;
  v17 = sub_1BE1B2BF4();
  swift_getTupleTypeMetadata2();
  sub_1BE1B29D8();
  v18 = MEMORY[0x1C3B7DF54](&unk_1BE1C8254, v5);
  v20[3] = v17;
  v20[12] = v18;
  v1[1] = sub_1BE1B25DC();
  swift_bridgeObjectRelease();
  v21 = v1;
  v28 = *v1;
  v19 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v5);
  v22 = v2;
  v23 = v5;
  v20[18] = v3;
  v24 = v3;
  v25 = v4;
  v26 = &off_1E775B0E8;
  v27 = v19;
  v20[8] = v19;
  type metadata accessor for CRDictionary();
}

void sub_1BE0E6744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  CRDictionary.makeIterator()((_QWORD *)(v7 - 128));
  *(_QWORD *)(v7 - 224) = 0;
  *(_QWORD *)(v7 - 216) = 0;
  *(_QWORD *)(v7 - 296) = v6;
  *(_QWORD *)(v7 - 312) = v3;
  *(_QWORD *)(v7 - 232) = v5;
  *(_QWORD *)(v7 - 304) = v1;
  *(_QWORD *)(v7 - 320) = v2;
  *(_QWORD *)(v7 - 184) = v0;
  *(_QWORD *)(v7 - 176) = v4;
  *(_QWORD *)(v7 - 168) = *(_QWORD *)(v7 - 208);
  *(_QWORD *)(v7 - 160) = v5;
  v8 = *(_QWORD *)(v7 - 288);
  *(_QWORD *)(v7 - 152) = &off_1E775B0E8;
  *(_QWORD *)(v7 - 144) = v8;
  type metadata accessor for CRDictionary.Iterator();
}

uint64_t sub_1BE0E6890(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;

  v12 = *(char **)(v11 - 280);
  CRDictionary.Iterator.next()(a1, a4, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v6) != 1)
  {
    *(_QWORD *)(v11 - 272) = v8;
    *(_QWORD *)(v11 - 264) = v9;
    v13 = *(int *)(v6 + 48);
    v14 = *(_QWORD *)(v11 - 248);
    v15 = v14 + v13;
    v16 = v6;
    v17 = &v12[v13];
    v18 = *(_QWORD *)(v4 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v14, v12, v4);
    v19 = v10;
    v20 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v20(v15, v17, v7);
    swift_bridgeObjectRetain();
    v21 = sub_1BE1B2BE8();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      v22 = *(_QWORD *)(v11 - 240);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v22, 1, 1, v4);
      v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    }
    else
    {
      v24 = *(int *)(v16 + 48);
      v25 = *(_QWORD *)(v11 - 336);
      v26 = (char *)(v25 + v24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v25, v14, v4);
      v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
      v23(v26, v15, v7);
      v22 = *(_QWORD *)(v11 - 240);
      v20(v22, v26, v7);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v25, v4);
    }
    v27 = *(_QWORD *)(v11 - 200);
    v23((char *)v27, v22, v7);
    v28 = (_QWORD *)swift_allocObject();
    v29 = *(_QWORD *)(v11 - 208);
    v28[2] = v4;
    v28[3] = v29;
    v30 = *(_QWORD *)(v11 - 232);
    v28[4] = v30;
    sub_1BDE0D5B8(*(_QWORD *)(v11 - 224));
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = v4;
    v31[3] = v29;
    v31[4] = v30;
    v31[5] = sub_1BDF2EDF8;
    v31[6] = v28;
    sub_1BDE0D5B8(*(_QWORD *)(v11 - 272));
    v32 = *(_QWORD *)(v11 - 192);
    swift_isUniquelyReferenced_nonNull_native();
    v33 = *(_QWORD *)(v32 + 8);
    *(_QWORD *)(v11 - 184) = v33;
    *(_QWORD *)(v32 + 8) = 0x8000000000000000;
    sub_1BDE0D1D0(v27, v7, *(_QWORD *)(v11 - 256));
    if (__OFADD__(*(_QWORD *)(v33 + 16), (v34 & 1) == 0))
    {
      __break(1u);
    }
    else
    {
      v35 = v34;
      *(_QWORD *)(v11 - 216) = v23;
      sub_1BE1B31B8();
      if ((sub_1BE1B3194() & 1) == 0
        || (sub_1BDE0D1D0(*(_QWORD *)(v11 - 200), v7, *(_QWORD *)(v11 - 256)), (v35 & 1) == (v36 & 1)))
      {
        *(_QWORD *)(*(_QWORD *)(v11 - 192) + 8) = *(_QWORD *)(v11 - 184);
        swift_bridgeObjectRelease();
        if ((v35 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          JUMPOUT(0x1BE0E67E0);
        }
LABEL_15:
        JUMPOUT(0x1BE0E6784);
      }
    }
    sub_1BE1B3680();
    __break(1u);
    goto LABEL_15;
  }
  sub_1BDE27FD0();
  sub_1BDE0D5B8(*(_QWORD *)(v11 - 224));
  return sub_1BDE0D5B8(v8);
}

BOOL sub_1BE0E6B8C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  int v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v24 = a2;
  v6 = a3[2];
  v7 = sub_1BE1B2EE8();
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(v6 - 8);
  v12 = MEMORY[0x1E0C80A78](v8);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - v15;
  v26 = *v3;
  v25 = *((_QWORD *)v3 + 2);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17((char *)&v22 - v15, a1, v6);
  while (1)
  {
    v27 = v26;
    v28 = v25;
    CRUnorderedTree.parent(of:)(a3, (uint64_t)v10);
    v18 = *(void (**)(char *, uint64_t))(v11 + 8);
    v18(v16, v6);
    v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6);
    if (v19 == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v6);
    v17(v16, (uint64_t)v14, v6);
    v20 = sub_1BE1B2798();
    v18(v14, v6);
    if ((v20 & 1) != 0)
    {
      v18(v16, v6);
      return v19 != 1;
    }
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
  return v19 != 1;
}

uint64_t sub_1BE0E6D50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t TupleTypeMetadata2;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  __int128 v61;
  uint64_t v62;
  char *v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _UNKNOWN **v67;
  uint64_t v68;
  uint64_t v69;

  v38 = a3;
  v7 = a2[4];
  v6 = a2[2];
  v52 = a2[3];
  v62 = v7;
  v8 = type metadata accessor for TreeNode(0, v6, v52, v7);
  v56 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v36 - v9;
  v51 = v10;
  v11 = sub_1BE1B2EE8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v12 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v57 = (char *)&v36 - v13;
  v49 = v11;
  v55 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v40 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v36 - v17;
  MEMORY[0x1E0C80A78](v16);
  v54 = (char *)&v36 - v19;
  v41 = sub_1BE1B2EE8();
  v37 = *(_QWORD *)(v41 - 8);
  v20 = MEMORY[0x1E0C80A78](v41);
  v22 = (char *)&v36 - v21;
  v23 = *(_QWORD *)(v6 - 8);
  v24 = MEMORY[0x1E0C80A78](v20);
  v63 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v36 - v26;
  v61 = *v3;
  v28 = *((_QWORD *)v3 + 2);
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v60((char *)&v36 - v26, a1, v6);
  v50 = v61;
  v46 = v18;
  v45 = a2;
  v47 = v27;
  v44 = v22;
  v43 = v23;
  v59 = v28;
  v48 = v6;
  while (1)
  {
    v64 = v61;
    v65 = v28;
    CRUnorderedTree.parent(of:)(a2, (uint64_t)v22);
    v29 = *(void (**)(char *, uint64_t))(v23 + 8);
    v29(v27, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v6) == 1)
      break;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v31 = v63;
    v30(v63, v22, v6);
    v60(v27, (uint64_t)v31, v6);
    v32 = v62;
    if ((sub_1BE1B2BE8() & 1) != 0)
    {
      v58 = v29;
      v42 = v30;
      v69 = v50;
      v33 = v51;
      v34 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v51);
      *(_QWORD *)&v64 = v6;
      *((_QWORD *)&v64 + 1) = v33;
      v65 = v52;
      v66 = v32;
      v67 = &off_1E775B0E8;
      v68 = v34;
      type metadata accessor for CRDictionary();
    }
    v29(v31, v6);
    v28 = v59;
  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v41);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v38, 1, 1, v6);
}

void CRUnorderedTree.remove(_:)(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN **v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a2[2];
  v5 = sub_1BE1B2EE8();
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v21 = (char *)&v18 - v7;
  v8 = a2[3];
  v9 = a2[4];
  v27 = a2;
  v10 = type metadata accessor for TreeNode(255, v4, v8, v9);
  v11 = sub_1BE1B2EE8();
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v20 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v15 = MEMORY[0x1E0C80A78](v14);
  v24 = (char *)&v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = v2;
  v34 = *v2;
  v17 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v10);
  v28 = v4;
  v29 = v10;
  v30 = v8;
  v31 = v9;
  v32 = &off_1E775B0E8;
  v33 = v17;
  type metadata accessor for CRDictionary();
}

uint64_t CRUnorderedTree.parent(of:)@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = a1[2];
  v4 = type metadata accessor for TreeNode(255, v3, a1[3], a1[4]);
  v6 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v6);
  if ((sub_1BE1B2BE8() & 1) == 0)
  {
    MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v4);
    type metadata accessor for CRDictionary();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_1BE0E7AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  CRDictionary.subscript.getter(v6, a4, v7);
  v10 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v8 + 8))(v7, *(_QWORD *)(v9 - 144));
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(*(_QWORD *)(v9 - 152), 1, 1, v4);
  }
  else
  {
    sub_1BE17C65C(v5, *(_QWORD *)(v9 - 152));
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v7, v5);
  }
}

void sub_1BE0E7B94(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t TupleTypeMetadata2;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _UNKNOWN **v82;
  uint64_t v83;
  uint64_t v84;

  v84 = *MEMORY[0x1E0C80C00];
  v3 = a1[2];
  v4 = sub_1BE1B2EE8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v53 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v5 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v71 = (char *)v47 - v6;
  v57 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v8 = MEMORY[0x1E0C80A78](v7);
  v67 = (char *)v47 - v9;
  MEMORY[0x1E0C80A78](v8);
  v66 = (char *)v47 - v10;
  v73 = type metadata accessor for FinalizedTimestamp(0);
  v64 = *(_QWORD *)(v73 - 8);
  v11 = MEMORY[0x1E0C80A78](v73);
  v54 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v56 = (char *)v47 - v13;
  v47[0] = a1;
  v15 = a1[3];
  v14 = a1[4];
  v16 = type metadata accessor for TreeNode(255, v3, v15, v14);
  v17 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v17);
  v59 = (char *)v47 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F2DC0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v51 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v52 = (char *)v47 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v25 = MEMORY[0x1E0C80A78](v24);
  v62 = (char *)v47 - v26;
  v72 = *(_QWORD *)(v16 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v61 = (char *)v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v75 = (char *)v47 - v30;
  v74 = *(_QWORD *)(v3 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v58 = (char *)v47 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v60 = (char *)v47 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v63 = (char *)v47 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v38 = MEMORY[0x1E0C80A78](v37);
  v55 = (char *)v47 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v70 = (char *)v47 - v41;
  MEMORY[0x1E0C80A78](v40);
  v65 = (char *)v47 - v42;
  v49 = swift_getTupleTypeMetadata2();
  v48 = sub_1BE1B2EE8();
  v47[4] = *(_QWORD *)(v48 - 8);
  v43 = MEMORY[0x1E0C80A78](v48);
  v47[3] = (char *)v47 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v47[2] = (char *)v47 - v45;
  v77 = sub_1BE1B2594();
  v76 = *v1;
  v46 = MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v16);
  v78 = v3;
  v79 = v16;
  v50 = v15;
  v80 = v15;
  v81 = v14;
  v68 = v14;
  v82 = &off_1E775B0E8;
  v83 = v46;
  v47[1] = v46;
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E8BEC(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v5 = a2[2];
  v22 = sub_1BE1B2EE8();
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v8 = (char *)&v21 - v7;
  v9 = *v2;
  v10 = v2[1];
  v11 = v2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED6F2898);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BE1B61B0;
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_1BE1B347C();
  v13 = v30;
  *(_QWORD *)(v12 + 32) = v29;
  *(_QWORD *)(v12 + 40) = v13;
  v29 = v9;
  v30 = v10;
  v31 = v11;
  v14 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v8, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v5);
  v15 = CRUnorderedTree.children(of:)((uint64_t)v8, a2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  v29 = v15;
  v17 = a2[3];
  v16 = a2[4];
  v23 = v5;
  v24 = v17;
  v25 = v16;
  v26 = v9;
  v27 = v10;
  v28 = v11;
  v18 = sub_1BE1B2BF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF525500);
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEB3D0], v18);
  sub_1BE0E9500(qword_1EF52FEE0, MEMORY[0x1E0DEAF38]);
  v19 = sub_1BE1B2900();
  swift_bridgeObjectRelease();
  v29 = v12;
  sub_1BDF30B8C(v19);
  return v29;
}

uint64_t sub_1BE0E8DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v7 = type metadata accessor for CRUnorderedTree(0, a2, a3, a4);
  v8 = sub_1BE0E8BEC(a1, v7);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BDE224EC(0, v9, 0);
    v10 = v16;
    v11 = v8 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BE1B284C();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_1BDE224EC(v12 > 1, v13 + 1, 1);
      v11 += 16;
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = 8224;
      *(_QWORD *)(v14 + 40) = 0xE200000000000000;
      --v9;
    }
    while (v9);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  *a5 = v10;
  return result;
}

uint64_t CRUnorderedTree.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1BE1B2BF4();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF525500);
  MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEB3D0], v0);
  sub_1BE0E9500(qword_1EF52FEE0, MEMORY[0x1E0DEAF38]);
  sub_1BE1B2900();
  swift_bridgeObjectRelease();
  sub_1BE0E9500((unint64_t *)&qword_1EF525508, MEMORY[0x1E0DEAF20]);
  v1 = sub_1BE1B2708();
  swift_bridgeObjectRelease();
  return v1;
}

void CRUnorderedTree.MergeableDelta.merge(delta:)(uint64_t a1, uint64_t *a2)
{
  sub_1BE0E95B0(a2);
}

void CRUnorderedTree.MergeableDelta.canMerge(delta:)()
{
  sub_1BE1B3200();
  __break(1u);
}

void CRUnorderedTree.MergeableDelta.visitReferences(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E90E8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return CRDictionary.MergeableDelta.visitReferences(_:)(v4, a1, a3, a4);
}

void sub_1BE0E910C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for TreeNode(255, a2, a3, a4);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v4);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E9174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

void CRUnorderedTree.MergeableDelta.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for TreeNode(255, a2, a3, a4);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v4);
  type metadata accessor for CRDictionary.MergeableDelta();
}

void sub_1BE0E921C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&a9 - v13;
  v15 = swift_checkMetadataState();
  CRDictionary.MergeableDelta.init(from:)(v12, v15, v11, v10, (uint64_t)&off_1E775B0E8, v9, (uint64_t)v14);
}

uint64_t sub_1BE0E9280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!v0)
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v4 - 136), v2, v1);
  return result;
}

void CRUnorderedTree.MergeableDelta.encode(to:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E9330(uint64_t a1)
{
  uint64_t v1;

  return CRDictionary.MergeableDelta.encode(to:)(v1, a1);
}

uint64_t type metadata accessor for CRUnorderedTree.MergeableDelta(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRUnorderedTree.MergeableDelta);
}

void sub_1BE0E9364(uint64_t a1, uint64_t *a2)
{
  sub_1BE0E95B0(a2);
}

void sub_1BE0E9370(uint64_t a1, uint64_t *a2)
{
  CRUnorderedTree.MergeableDelta.init(from:)(a1, a2[2], a2[3], a2[4]);
}

void sub_1BE0E9390(uint64_t a1, uint64_t *a2)
{
  CRUnorderedTree.MergeableDelta.encode(to:)(a1, a2);
}

void CRUnorderedTree<>.encode(to:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v2);
  type metadata accessor for CRDictionary();
}

uint64_t sub_1BE0E9424(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;

  v7 = v1;
  v5 = MEMORY[0x1C3B7DF54](&unk_1BE1C8220, v3, &v7);
  return CRDictionary<>.encode(to:)(v2, a1, v1, v5);
}

void sub_1BE0E9478(uint64_t a1, uint64_t *a2)
{
  CRUnorderedTree<>.encode(to:)(a1, a2);
}

uint64_t sub_1BE0E9490@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for CROrderedTree(0, v2[2], v2[3], v2[4]);
  result = sub_1BE0E5590(a1, v5);
  *a2 = result;
  return result;
}

uint64_t sub_1BE0E9500(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF525500);
    result = MEMORY[0x1C3B7DF54](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE0E9544@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)type metadata accessor for CRUnorderedTree(0, v2[2], v2[3], v2[4]);
  result = sub_1BE0E8BEC(a1, v5);
  *a2 = result;
  return result;
}

void sub_1BE0E95B0(uint64_t *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for TreeNode(255, a1[2], a1[3], a1[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v1);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E961C(char a1)
{
  return a1 & 1;
}

uint64_t *sub_1BE0E9638(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  return sub_1BE0EA154(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

uint64_t type metadata accessor for CROrderedTree.MergeableDelta(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CROrderedTree.MergeableDelta);
}

uint64_t *sub_1BE0E9650(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v11;

  v5 = *a1;
  v6 = *a2;
  if (v5)
  {
    if (!v6)
    {
      v11 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
      MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v11);
      type metadata accessor for CRDictionary.MutatingAction();
    }
    *a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else if (v6)
  {
    *a1 = v6;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = (void *)a1[2];
  v8 = (void *)a2[2];
  a1[2] = (uint64_t)v8;
  v9 = v8;

  return a1;
}

_QWORD *sub_1BE0E9768(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  void *v5;
  uint64_t v7;

  if (*a1)
  {
    if (!*a2)
    {
      v7 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
      MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v7);
      type metadata accessor for CRDictionary.MutatingAction();
    }
    *a1 = *a2;
    swift_bridgeObjectRelease();
    a1[1] = a2[1];
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = (void *)a1[2];
  a1[2] = a2[2];

  return a1;
}

uint64_t type metadata accessor for CROrderedTree.MutatingAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CROrderedTree.MutatingAction);
}

void sub_1BE0E9858(uint64_t *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for TreeNode(255, a1[2], a1[3], a1[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v1);
  type metadata accessor for CRDictionary.MergeableDelta();
}

void sub_1BE0E9918(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v3);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t *sub_1BE0E9990(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a1 - 8) + 80);
  v4 = *v2;
  *v1 = *v2;
  if ((v3 & 0x20000) != 0)
  {
    v1 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = v2[2];
    v1[1] = v2[1];
    v1[2] = v5;
    v6 = v2[4];
    v1[3] = v2[3];
    v1[4] = v6;
    v1[5] = v2[5];
    v7 = *(int *)(a1 + 68);
    v8 = (char *)v1 + v7;
    v9 = (char *)v2 + v7;
    v10 = sub_1BE1B1F58();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v8, v9, v10);
    v11 = type metadata accessor for FinalizedTimestamp(0);
    *(_QWORD *)&v8[*(int *)(v11 + 20)] = *(_QWORD *)&v9[*(int *)(v11 + 20)];
  }
  return v1;
}

void sub_1BE0E9A78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = type metadata accessor for TreeNode(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v3);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E9B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 68);
  v3 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

void sub_1BE0E9B54(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v6);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E9C1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(int *)(a1 + 68);
  v4 = v1 + v3;
  v5 = v2 + v3;
  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
  v7 = type metadata accessor for FinalizedTimestamp(0);
  *(_QWORD *)(v4 + *(int *)(v7 + 20)) = *(_QWORD *)(v5 + *(int *)(v7 + 20));
  return v1;
}

void sub_1BE0E9C80(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v6);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E9D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(int *)(a1 + 68);
  v4 = v1 + v3;
  v5 = v2 + v3;
  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(v4, v5, v6);
  v7 = type metadata accessor for FinalizedTimestamp(0);
  *(_QWORD *)(v4 + *(int *)(v7 + 20)) = *(_QWORD *)(v5 + *(int *)(v7 + 20));
  return v1;
}

void sub_1BE0E9DE0(_OWORD *a1, _OWORD *a2, uint64_t *a3)
{
  __int128 v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  v4 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v4);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E9E60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(int *)(a1 + 68);
  v4 = v1 + v3;
  v5 = v2 + v3;
  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v5, v6);
  v7 = type metadata accessor for FinalizedTimestamp(0);
  *(_QWORD *)(v4 + *(int *)(v7 + 20)) = *(_QWORD *)(v5 + *(int *)(v7 + 20));
  return v1;
}

void sub_1BE0E9EBC(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v6);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0E9F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(int *)(a1 + 68);
  v4 = v1 + v3;
  v5 = v2 + v3;
  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(v4, v5, v6);
  v7 = type metadata accessor for FinalizedTimestamp(0);
  *(_QWORD *)(v4 + *(int *)(v7 + 20)) = *(_QWORD *)(v5 + *(int *)(v7 + 20));
  return v1;
}

uint64_t sub_1BE0E9FEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BE0E9FF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = type metadata accessor for TreeNode(255, a3[2], a3[3], a3[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v3);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0EA068(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v2, v1, a1);
}

uint64_t sub_1BE0EA098()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BE0EA0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  v4 = type metadata accessor for TreeNode(255, a4[2], a4[3], a4[4]);
  MEMORY[0x1C3B7DF54](&unk_1BE1C8294, v4);
  type metadata accessor for CRDictionary.MergeableDelta();
}

uint64_t sub_1BE0EA114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v2, v1, v1, a1);
}

uint64_t *sub_1BE0EA148(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  return sub_1BE0EA154(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

uint64_t *sub_1BE0EA154(uint64_t *a1, _OWORD *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7;

  a4(*a1);
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  a4(v7);
  return a1;
}

uint64_t type metadata accessor for CRUnorderedTree.MutatingAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRUnorderedTree.MutatingAction);
}

uint64_t sub_1BE0EA1A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BE0E8DBC(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1BE0EA1C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BE0E5764(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1BE0EA1EC()
{
  return swift_deallocObject();
}

uint64_t sub_1BE0EA1FC()
{
  return swift_deallocObject();
}

uint64_t sub_1BE0EA20C()
{
  return sub_1BE0EA304((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BDE0C638);
}

uint64_t sub_1BE0EA218(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F2DC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BE0EA258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FinalizedTimestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE0EA29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F2DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE0EA2E4()
{
  return swift_deallocObject();
}

uint64_t sub_1BE0EA2F4()
{
  return swift_deallocObject();
}

uint64_t sub_1BE0EA304(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[5], v1[6], v1[2], v1[3], v1[4]);
}

double Anonymous.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v22 = a1;
  v24 = type metadata accessor for Timestamp(0);
  MEMORY[0x1E0C80A78](v24);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BE1B1F58();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Anonymous(0, a2, a3, v14);
  v15 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(&a4[*(int *)(v23 + 36)], a1, a2);
  sub_1BE1B1F4C();
  *(_QWORD *)&v25 = sub_1BDDC4278((uint64_t)&unk_1E775B190);
  *((_QWORD *)&v25 + 1) = v16;
  v17 = sub_1BDEE7C7C();
  v19 = v18;
  sub_1BE1B1EA4();
  sub_1BDDB796C(v17, v19);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_OWORD *)a4 = v25;
  *(_QWORD *)&v25 = MEMORY[0x1E0DEE9E0];
  *((_QWORD *)&v25 + 1) = MEMORY[0x1E0DEE9E0];
  sub_1BE1B1F4C();
  *(_QWORD *)&v9[*(int *)(type metadata accessor for Replica() + 20)] = 0;
  *(_QWORD *)&v9[*(int *)(v24 + 20)] = 0;
  sub_1BDDCB81C((uint64_t)v9);
  sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Timestamp);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v22, a2);
  result = *(double *)&v25;
  *(_OWORD *)&a4[*(int *)(v23 + 40)] = v25;
  return result;
}

uint64_t _s9Coherence9AnonymousV5mergeyyACyxGF_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 8) + 8))(a1 + *(int *)(a2 + 36), *(_QWORD *)(a2 + 16));
}

uint64_t Anonymous.__hasDelta(from:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 24) + 72))(a1 + *(int *)(a2 + 36), *(_QWORD *)(a2 + 16)) & 1;
}

uint64_t Anonymous.mutate.setter(uint64_t a1, uint64_t a2)
{
  double v4;

  v4 = sub_1BE0ECB44(a1, a2);
  return (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1, v4);
}

void (*Anonymous.mutate.modify(_QWORD *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  void (*v10)(void);

  v5 = malloc(0x38uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v10 = *(void (**)(void))(v7 + 16);
  v5[5] = v9;
  v5[6] = v10;
  v10();
  return sub_1BE0EA610;
}

void sub_1BE0EA610(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  void (*v9)(void *, uint64_t, double);
  uint64_t v10;
  uint64_t v11;
  double v12;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 24);
    v4 = *(void **)(v2 + 32);
    v6 = *(_QWORD *)(v2 + 16);
    v7 = *(_QWORD *)v2;
    (*(void (**)(void *, void *, uint64_t))(v2 + 48))(v4, v3, v6);
    v8 = sub_1BE0ECB44((uint64_t)v4, v7);
    v9 = *(void (**)(void *, uint64_t, double))(v5 + 8);
    v9(v4, v6, v8);
    ((void (*)(void *, uint64_t))v9)(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 32);
    v3 = *(void **)(v2 + 40);
    v10 = *(_QWORD *)(v2 + 16);
    v11 = *(_QWORD *)(v2 + 24);
    v12 = sub_1BE0ECB44((uint64_t)v3, *(_QWORD *)v2);
    (*(void (**)(void *, uint64_t, double))(v11 + 8))(v3, v10, v12);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t Anonymous.observableDifference(from:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 16) + 32))(a1 + *(int *)(a3 + 36), a2, *(_QWORD *)(a3 + 16));
}

Swift::Bool __swiftcall Anonymous.needToFinalizeTimestamps()()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) + 48))(*(_QWORD *)(v0 + 16)) & 1;
}

uint64_t Anonymous.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 16) + 56))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t static Anonymous.== infix(_:_:)()
{
  return 1;
}

void sub_1BE0EA780(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  Anonymous.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

void Anonymous.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  void (*v88)(_QWORD, uint64_t, uint64_t, uint64_t);
  void (*v89)(char *, _QWORD, uint64_t);
  uint64_t v90;
  _QWORD *v91;
  void (*v92)(void);
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  int EnumCaseMultiPayload;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  unint64_t v153;
  unsigned int (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t inited;
  uint64_t v179;
  char *v180;
  char *v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  __int128 v193[7];
  __int128 v194;
  __int128 v195;
  __int128 v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;

  v184 = a3;
  v182 = a4;
  v166 = type metadata accessor for Timestamp(0);
  MEMORY[0x1E0C80A78](v166);
  v167 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = type metadata accessor for Proto_Version(0);
  v175 = *(_QWORD *)(v179 - 8);
  v7 = MEMORY[0x1E0C80A78](v179);
  v159 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v163 = (uint64_t *)((char *)&v154 - v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v158 = (char *)&v154 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v162 = (char *)&v154 - v14;
  MEMORY[0x1E0C80A78](v13);
  v174 = (uint64_t)&v154 - v15;
  v16 = sub_1BE1B2EE8();
  v170 = *(_QWORD *)(v16 - 8);
  v171 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v181 = (char *)&v154 - v18;
  v185 = a2;
  v183 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v17);
  v180 = (char *)&v154 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3790);
  MEMORY[0x1E0C80A78](v20);
  *((_QWORD *)&v187 + 1) = (char *)&v154 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Proto_KeyPath(0);
  *((_QWORD *)&v186 + 1) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)&v187 = v22;
  MEMORY[0x1E0C80A78](v22);
  v188 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v156 = (uint64_t)&v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v161 = (uint64_t)&v154 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v172 = (uint64_t)&v154 - v30;
  MEMORY[0x1E0C80A78](v29);
  *(_QWORD *)&v186 = (char *)&v154 - v31;
  v190 = type metadata accessor for Proto_Reference(0);
  v32 = MEMORY[0x1E0C80A78](v190);
  v165 = (uint64_t)&v154 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v176 = (uint64_t)&v154 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v173 = (char *)&v154 - v37;
  MEMORY[0x1E0C80A78](v36);
  v199 = (uint64_t)&v154 - v38;
  v39 = type metadata accessor for Proto_Value(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = MEMORY[0x1E0C80A78](v39);
  v164 = (uint64_t)&v154 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x1E0C80A78](v41);
  v168 = (uint64_t)&v154 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v177 = (uint64_t)&v154 - v46;
  MEMORY[0x1E0C80A78](v45);
  v191 = (uint64_t)&v154 - v47;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v49 = MEMORY[0x1E0C80A78](v48);
  v157 = (uint64_t)&v154 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x1E0C80A78](v49);
  v160 = (uint64_t)&v154 - v52;
  v53 = MEMORY[0x1E0C80A78](v51);
  v169 = (uint64_t)&v154 - v54;
  v55 = MEMORY[0x1E0C80A78](v53);
  v57 = (char *)&v154 - v56;
  MEMORY[0x1E0C80A78](v55);
  v59 = (char *)&v154 - v58;
  v60 = a1;
  v61 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1BDD86DEC(v61, (uint64_t)v59, &qword_1ED6F3770);
  v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  LODWORD(v40) = v62(v59, 1, v39);
  sub_1BDD86E30((uint64_t)v59, &qword_1ED6F3770);
  if ((_DWORD)v40 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v63 = 0xD000000000000017;
    *(_QWORD *)(v63 + 8) = 0x80000001BE1CD110;
    *(_BYTE *)(v63 + 16) = 0;
    swift_willThrow();
    swift_release();
    return;
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  v64 = v60;
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v60;
  sub_1BDD86DEC(v61, (uint64_t)v57, &qword_1ED6F3770);
  if (v62(v57, 1, v39) == 1)
  {
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v65 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v62;
  v66 = v191;
  sub_1BDDA2E8C((uint64_t)v57, v191, type metadata accessor for Proto_Value);
  v155 = v39;
  v67 = *(_QWORD *)(v66 + *(int *)(v39 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v68 = v67;
  v69 = v186;
  sub_1BDD86DEC(v68, v186, &qword_1ED6F26F0);
  v70 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48);
  v72 = v71(v69, 1, v70);
  v73 = v199;
  if (v72 == 1)
  {
    v74 = v64;
    swift_retain();
    sub_1BDD86E30(v69, &qword_1ED6F26F0);
  }
  else
  {
    v74 = v64;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_1BDDA2E8C(v69, v73, type metadata accessor for Proto_Reference);
      v75 = v190;
      goto LABEL_12;
    }
    swift_retain();
    sub_1BDD9C3E0(v69, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1BE1B20E4();
  v75 = v190;
  v76 = *(int *)(v190 + 20);
  if (qword_1ED6EFD78 != -1)
    swift_once();
  *(_QWORD *)(v73 + v76) = qword_1ED6EFD68;
LABEL_12:
  swift_retain();
  sub_1BDD9C3E0(v191, type metadata accessor for Proto_Value);
  v77 = *(_QWORD *)(v73 + *(int *)(v75 + 20))
      + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  v78 = *((_QWORD *)&v187 + 1);
  sub_1BDD86DEC(v77, *((uint64_t *)&v187 + 1), &qword_1ED6F3790);
  v79 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*((_QWORD *)&v186 + 1) + 48))(v78, 1, v187);
  v154 = v65;
  v80 = v188;
  if (v79 == 1)
  {
    *v188 = MEMORY[0x1E0DEE9D8];
    v80[1] = sub_1BE1B20CC();
    v80[2] = v81;
    sub_1BE1B20E4();
    sub_1BDD86E30(v78, &qword_1ED6F3790);
  }
  else
  {
    sub_1BDDA2E8C(v78, (uint64_t)v188, type metadata accessor for Proto_KeyPath);
  }
  sub_1BDD9C3E0(v199, type metadata accessor for Proto_Reference);
  swift_retain();
  v82 = v189;
  sub_1BDDC8ECC((uint64_t)v80);
  if (v82)
  {
    swift_release();
LABEL_17:
    swift_setDeallocating();
    swift_release();
    return;
  }
  v199 = v70;
  if (!*(_QWORD *)(v74 + 16))
    goto LABEL_64;
  v83 = v195;
  v194 = v195;
  swift_retain();
  v84 = v185;
  sub_1BE15668C(v185, &v194);
  v85 = swift_release();
  v188 = v197;
  v189 = v198;
  v187 = v196;
  v186 = v195;
  if ((_QWORD)v196)
  {
    if ((_QWORD)v195)
    {
      (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)v195 + 88))(&v195, v85);
      goto LABEL_23;
    }
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v195 = 0u;
  v196 = 0u;
LABEL_23:
  v191 = v83;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF52B750);
  v86 = swift_dynamicCast();
  v87 = v183;
  v88 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v183 + 56);
  if ((v86 & 1) == 0)
  {
    v88(v83, 1, 1, v84);
    (*(void (**)(_QWORD, unint64_t))(v170 + 8))(v83, v171);
    *(_QWORD *)&v195 = 0;
    *((_QWORD *)&v195 + 1) = 0xE000000000000000;
    sub_1BE1B305C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v195 = 0xD000000000000022;
    *((_QWORD *)&v195 + 1) = 0x80000001BE1CFC90;
    v105 = v187;
    sub_1BE1B284C();
    swift_bridgeObjectRelease();
    sub_1BE1B284C();
    sub_1BE1B37AC();
    sub_1BE1B284C();
    swift_bridgeObjectRelease();
    sub_1BE1B284C();
    v106 = v195;
    sub_1BDDFCAFC();
    swift_allocError();
    *(_OWORD *)v107 = v106;
    *(_BYTE *)(v107 + 16) = 0;
    swift_willThrow();
    swift_release();
    sub_1BDDBA008(v186, *((uint64_t *)&v186 + 1), v105);
    sub_1BDDB796C(v191, *((unint64_t *)&v83 + 1));
    goto LABEL_17;
  }
  v88(v83, 0, 1, v84);
  v89 = *(void (**)(char *, _QWORD, uint64_t))(v87 + 32);
  v171 = *((_QWORD *)&v83 + 1);
  v89(v180, v83, v84);
  v184 = type metadata accessor for Anonymous(0, v84, v184, v90);
  v91 = v182;
  v92 = *(void (**)(void))(v87 + 16);
  v181 = (char *)v182 + *(int *)(v184 + 36);
  v93 = v171;
  v92();
  *v91 = v191;
  v91[1] = v93;
  v94 = *(_QWORD *)(inited + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  v95 = v94;
  v96 = v169;
  sub_1BDD86DEC(v95, v169, &qword_1ED6F3770);
  v97 = v155;
  if (v154(v96, 1, v155) == 1)
    goto LABEL_66;
  v98 = v177;
  sub_1BDDA2E8C(v96, v177, type metadata accessor for Proto_Value);
  v99 = *(_QWORD *)(v98 + *(int *)(v97 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v100 = v99;
  v101 = v172;
  sub_1BDD86DEC(v100, v172, &qword_1ED6F26F0);
  v102 = v71(v101, 1, v199);
  v103 = (uint64_t)v173;
  if (v102 == 1)
  {
    sub_1BDDB6CA4(v191, v93);
    sub_1BDD86E30(v101, &qword_1ED6F26F0);
    v104 = v190;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v104 = v190;
    v109 = v191;
    if (EnumCaseMultiPayload == 7)
    {
      sub_1BDDA2E8C(v101, v103, type metadata accessor for Proto_Reference);
      sub_1BDDB6CA4(v109, v93);
      v110 = v175;
      v98 = v177;
      goto LABEL_34;
    }
    sub_1BDDB6CA4(v191, v93);
    sub_1BDD9C3E0(v101, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    v98 = v177;
  }
  sub_1BE1B20E4();
  v111 = *(int *)(v104 + 20);
  v110 = v175;
  if (qword_1ED6EFD78 != -1)
    swift_once();
  *(_QWORD *)(v103 + v111) = qword_1ED6EFD68;
  swift_retain();
  v104 = v190;
LABEL_34:
  sub_1BDD9C3E0(v98, type metadata accessor for Proto_Value);
  v112 = *(_QWORD *)(v103 + *(int *)(v104 + 20))
       + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  v113 = v174;
  sub_1BDD86DEC(v112, v174, &qword_1ED6F37A8);
  v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
  LODWORD(v112) = v114(v113, 1, v179);
  sub_1BDD86E30(v113, &qword_1ED6F37A8);
  sub_1BDD9C3E0(v103, type metadata accessor for Proto_Reference);
  if ((_DWORD)v112 == 1)
  {
LABEL_51:
    *(_QWORD *)&v192 = MEMORY[0x1E0DEE9E0];
    *((_QWORD *)&v192 + 1) = MEMORY[0x1E0DEE9E0];
    v145 = (uint64_t)v167;
    sub_1BE1B1F4C();
    *(_QWORD *)(v145 + *(int *)(type metadata accessor for Replica() + 20)) = 0;
    *(_QWORD *)(v145 + *(int *)(v166 + 20)) = 0;
    sub_1BDDCB81C(v145);
    sub_1BDD9C3E0(v145, type metadata accessor for Timestamp);
    swift_release();
    swift_release();
    sub_1BDDB796C(v191, v171);
    sub_1BDDBA008(v186, *((uint64_t *)&v186 + 1), v187);
    (*(void (**)(char *, uint64_t))(v183 + 8))(v180, v185);
    v146 = *(int *)(v184 + 40);
    v147 = v192;
LABEL_52:
    *(_OWORD *)((char *)v182 + v146) = v147;
    return;
  }
  v115 = *(_QWORD *)(inited + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  v116 = v115;
  v117 = v160;
  sub_1BDD86DEC(v116, v160, &qword_1ED6F3770);
  v118 = v155;
  if (v154(v117, 1, v155) == 1)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v119 = v117;
  v120 = v168;
  sub_1BDDA2E8C(v119, v168, type metadata accessor for Proto_Value);
  v121 = *(_QWORD *)(v120 + *(int *)(v118 + 20))
       + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v122 = v161;
  sub_1BDD86DEC(v121, v161, &qword_1ED6F26F0);
  v123 = v71(v122, 1, v199);
  v124 = (uint64_t)v162;
  if (v123 == 1)
  {
    sub_1BDD86E30(v122, &qword_1ED6F26F0);
    v125 = v190;
    v126 = v176;
  }
  else
  {
    v127 = swift_getEnumCaseMultiPayload() == 7;
    v128 = v122;
    v125 = v190;
    v126 = v176;
    if (v127)
    {
      sub_1BDDA2E8C(v128, v176, type metadata accessor for Proto_Reference);
      goto LABEL_44;
    }
    sub_1BDD9C3E0(v128, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1BE1B20E4();
  v129 = *(int *)(v125 + 20);
  if (qword_1ED6EFD78 != -1)
    swift_once();
  *(_QWORD *)(v126 + v129) = qword_1ED6EFD68;
  swift_retain();
  v125 = v190;
LABEL_44:
  sub_1BDD9C3E0(v168, type metadata accessor for Proto_Value);
  v130 = *(_QWORD *)(v126 + *(int *)(v125 + 20))
       + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v130, v124, &qword_1ED6F37A8);
  if (v114(v124, 1, v179) == 1)
  {
    v131 = MEMORY[0x1E0DEE9D8];
    v132 = v163;
    *v163 = MEMORY[0x1E0DEE9D8];
    v132[1] = v131;
    sub_1BE1B20E4();
    sub_1BDD86E30(v124, &qword_1ED6F37A8);
  }
  else
  {
    v132 = v163;
    sub_1BDDA2E8C(v124, (uint64_t)v163, type metadata accessor for Proto_Version);
  }
  sub_1BDD9C3E0(v176, type metadata accessor for Proto_Reference);
  v133 = *v132;
  swift_bridgeObjectRetain();
  sub_1BDD9C3E0((uint64_t)v132, type metadata accessor for Proto_Version);
  v134 = *(_QWORD *)(v133 + 16);
  swift_bridgeObjectRelease();
  if (!v134)
    goto LABEL_51;
  v135 = *(_QWORD *)(inited + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  v136 = v157;
  sub_1BDD86DEC(v135, v157, &qword_1ED6F3770);
  v137 = v155;
  if (v154(v136, 1, v155) != 1)
  {
    v138 = v136;
    v139 = v164;
    sub_1BDDA2E8C(v138, v164, type metadata accessor for Proto_Value);
    v140 = *(_QWORD *)(v139 + *(int *)(v137 + 20))
         + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    v141 = v156;
    sub_1BDD86DEC(v140, v156, &qword_1ED6F26F0);
    if (v71(v141, 1, v199) == 1)
    {
      sub_1BDD86E30(v141, &qword_1ED6F26F0);
      v142 = v185;
      v143 = (uint64_t)v158;
      v144 = v165;
    }
    else
    {
      v148 = swift_getEnumCaseMultiPayload();
      v143 = (uint64_t)v158;
      v144 = v165;
      if (v148 == 7)
      {
        sub_1BDDA2E8C(v141, v165, type metadata accessor for Proto_Reference);
        v142 = v185;
LABEL_59:
        sub_1BDD9C3E0(v164, type metadata accessor for Proto_Value);
        v150 = *(_QWORD *)(v144 + *(int *)(v190 + 20))
             + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
        swift_beginAccess();
        sub_1BDD86DEC(v150, v143, &qword_1ED6F37A8);
        if (v114(v143, 1, v179) == 1)
        {
          v151 = MEMORY[0x1E0DEE9D8];
          v152 = v159;
          *v159 = MEMORY[0x1E0DEE9D8];
          v152[1] = v151;
          sub_1BE1B20E4();
          sub_1BDD86E30(v143, &qword_1ED6F37A8);
        }
        else
        {
          v152 = v159;
          sub_1BDDA2E8C(v143, (uint64_t)v159, type metadata accessor for Proto_Version);
        }
        v153 = v171;
        sub_1BDD9C3E0(v165, type metadata accessor for Proto_Reference);
        sub_1BDDA9DA0(v152, v64, v193);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v180, v142);
        sub_1BDDBA008(v186, *((uint64_t *)&v186 + 1), v187);
        sub_1BDDB796C(v191, v153);
        swift_release();
        v146 = *(int *)(v184 + 40);
        v147 = v193[0];
        goto LABEL_52;
      }
      sub_1BDD9C3E0(v141, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      v142 = v185;
    }
    sub_1BE1B20E4();
    v149 = *(int *)(v190 + 20);
    if (qword_1ED6EFD78 != -1)
      swift_once();
    *(_QWORD *)(v144 + v149) = qword_1ED6EFD68;
    swift_retain();
    goto LABEL_59;
  }
LABEL_68:
  __break(1u);
}

uint64_t sub_1BE0EBACC(uint64_t a1, uint64_t a2)
{
  return Anonymous.encode(to:)(a1, a2);
}

uint64_t Anonymous.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t result;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int EnumCaseMultiPayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t *v127;
  unint64_t v128;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  unsigned int (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  __int128 v168;
  uint64_t v169;

  v162 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v4 = MEMORY[0x1E0C80A78](v3);
  v148 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v147 = (char *)&v133 - v6;
  v146 = type metadata accessor for Proto_CRDT(0);
  v145 = *(_QWORD *)(v146 - 8);
  MEMORY[0x1E0C80A78](v146);
  v160 = (uint64_t)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1E0C80A78](v166);
  v164 = (uint64_t)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v144 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v161 = (char *)&v133 - v12;
  v152 = type metadata accessor for Proto_Version(0);
  v151 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v163 = (char **)((char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3CD0);
  MEMORY[0x1E0C80A78](v14);
  v158 = (char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3790);
  v17 = MEMORY[0x1E0C80A78](v16);
  v157 = (char *)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v156 = (char *)&v133 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v153 = (uint64_t)&v133 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v150 = (uint64_t)&v133 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v149 = (uint64_t)&v133 - v26;
  MEMORY[0x1E0C80A78](v25);
  v155 = (uint64_t)&v133 - v27;
  v169 = type metadata accessor for Proto_Reference(0);
  v28 = *(_QWORD *)(v169 - 8);
  v29 = MEMORY[0x1E0C80A78](v169);
  v31 = (char *)&v133 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v133 - v33;
  v35 = MEMORY[0x1E0C80A78](v32);
  v37 = (char *)&v133 - v36;
  v38 = MEMORY[0x1E0C80A78](v35);
  v40 = (char *)&v133 - v39;
  MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v133 - v41;
  v154 = type metadata accessor for Proto_KeyPath(0);
  v43 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v45 = (char **)((char *)&v133 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = v165;
  result = sub_1BDE25870();
  if (v46)
    return result;
  v141 = v43;
  v139 = v42;
  v142 = v40;
  v143 = v37;
  v165 = 0;
  v133 = v31;
  v134 = v28;
  v135 = v34;
  v138 = a1;
  v49 = *v167;
  v48 = v167[1];
  *v45 = MEMORY[0x1E0DEE9D8];
  v50 = result;
  swift_retain();
  sub_1BDDB6CA4(v49, v48);
  v51 = sub_1BE1B20CC();
  v53 = v52;
  v54 = v154;
  sub_1BE1B20E4();
  sub_1BDDB796C(v51, v53);
  v45[1] = v49;
  v45[2] = v48;
  v137 = v50;
  v55 = v50 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
  swift_beginAccess();
  v56 = v166;
  v57 = *(int *)(v166 + 20);
  v140 = v55;
  v58 = *(_QWORD *)(v55 + v57)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v59 = v58;
  v60 = v155;
  sub_1BDD86DEC(v59, v155, &qword_1ED6F26F0);
  v61 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  v136 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48);
  v62 = v136(v60, 1, v61);
  v159 = v61;
  v63 = v54;
  if (v62 == 1)
  {
    sub_1BDD86E30(v60, &qword_1ED6F26F0);
    v64 = (uint64_t)v158;
    v65 = (uint64_t)v157;
    v66 = (uint64_t)v156;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v64 = (uint64_t)v158;
    v65 = (uint64_t)v157;
    v66 = (uint64_t)v156;
    if (EnumCaseMultiPayload == 7)
    {
      v68 = (uint64_t)v139;
      sub_1BDDA2E8C(v60, (uint64_t)v139, type metadata accessor for Proto_Reference);
      goto LABEL_10;
    }
    sub_1BDD9C3E0(v60, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  v68 = (uint64_t)v139;
  sub_1BE1B20E4();
  v69 = *(int *)(v169 + 20);
  if (qword_1ED6EFD78 != -1)
    swift_once();
  *(_QWORD *)(v68 + v69) = qword_1ED6EFD68;
  swift_retain();
LABEL_10:
  v70 = *(int *)(v169 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    v71 = swift_retain();
    *(_QWORD *)(v68 + v70) = sub_1BDDA1424(v71);
    swift_release();
  }
  v72 = *(_QWORD *)(v68 + v70);
  sub_1BDDA2E8C((uint64_t)v45, v66, type metadata accessor for Proto_KeyPath);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v141 + 56))(v66, 0, 1, v63);
  sub_1BDDA2EF0(v66, v65, &qword_1ED6F3790);
  v73 = v72 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v65, v73, &qword_1ED6F3790);
  swift_endAccess();
  swift_release();
  v74 = v140;
  sub_1BE12A648(v68);
  swift_endAccess();
  v75 = v167;
  v168 = *(_OWORD *)v167;
  CRKeyPath.uuid.getter();
  v76 = sub_1BE1B1F58();
  v77 = *(_QWORD *)(v76 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v64, 1, v76);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    return result;
  }
  v78 = v138;
  v158 = (char *)sub_1BDDAE244(v64);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v64, v76);
  swift_beginAccess();
  v79 = *(_QWORD *)(v74 + *(int *)(v56 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v80 = v149;
  sub_1BDD86DEC(v79, v149, &qword_1ED6F26F0);
  v81 = v136;
  if (v136(v80, 1, v159) == 1)
  {
    sub_1BDD86E30(v80, &qword_1ED6F26F0);
    v82 = v169;
  }
  else
  {
    v83 = swift_getEnumCaseMultiPayload();
    v82 = v169;
    if (v83 == 7)
    {
      v84 = v78;
      v85 = (uint64_t)v142;
      sub_1BDDA2E8C(v80, (uint64_t)v142, type metadata accessor for Proto_Reference);
      goto LABEL_21;
    }
    sub_1BDD9C3E0(v80, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  v85 = (uint64_t)v142;
  sub_1BE1B20E4();
  v86 = *(int *)(v82 + 20);
  if (qword_1ED6EFD78 != -1)
    swift_once();
  v84 = v78;
  *(_QWORD *)(v85 + v86) = qword_1ED6EFD68;
  swift_retain();
LABEL_21:
  v87 = *(int *)(v82 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    v88 = swift_retain();
    v89 = sub_1BDDA1424(v88);
    v85 = (uint64_t)v142;
    *(_QWORD *)&v142[v87] = v89;
    swift_release();
  }
  v90 = *(_QWORD *)(v85 + v87);
  swift_beginAccess();
  *(_QWORD *)(v90 + 16) = v158;
  sub_1BE12A648(v85);
  swift_endAccess();
  v91 = (uint64_t *)((char *)v75 + *(int *)(v162 + 40));
  v92 = v91[1];
  *(_QWORD *)&v168 = *v91;
  *((_QWORD *)&v168 + 1) = v92;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDDAD780(v84, v163);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v93 = *(_QWORD *)(v74 + *(int *)(v166 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v94 = v150;
  sub_1BDD86DEC(v93, v150, &qword_1ED6F26F0);
  if (v81(v94, 1, v159) == 1)
  {
    sub_1BDD86E30(v94, &qword_1ED6F26F0);
    v95 = (uint64_t)v144;
    v96 = (uint64_t)v161;
    v97 = (uint64_t)v143;
  }
  else
  {
    v98 = swift_getEnumCaseMultiPayload();
    v95 = (uint64_t)v144;
    v96 = (uint64_t)v161;
    v97 = (uint64_t)v143;
    if (v98 == 7)
    {
      sub_1BDDA2E8C(v94, (uint64_t)v143, type metadata accessor for Proto_Reference);
      goto LABEL_31;
    }
    sub_1BDD9C3E0(v94, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1BE1B20E4();
  v99 = v97;
  v100 = *(int *)(v82 + 20);
  if (qword_1ED6EFD78 != -1)
    swift_once();
  *(_QWORD *)(v99 + v100) = qword_1ED6EFD68;
  swift_retain();
  v97 = v99;
LABEL_31:
  v101 = *(int *)(v82 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    v102 = swift_retain();
    v97 = (uint64_t)v143;
    v103 = sub_1BDDA1424(v102);
    v96 = (uint64_t)v161;
    *(_QWORD *)(v97 + v101) = v103;
    swift_release();
  }
  v104 = v97;
  v105 = *(_QWORD *)(v97 + v101);
  sub_1BDDA2E8C((uint64_t)v163, v96, type metadata accessor for Proto_Version);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v151 + 56))(v96, 0, 1, v152);
  sub_1BDDA2EF0(v96, v95, &qword_1ED6F37A8);
  v106 = v105 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v95, v106, &qword_1ED6F37A8);
  swift_endAccess();
  swift_release();
  sub_1BE12A648(v104);
  swift_endAccess();
  v107 = v164;
  sub_1BDD9C318(v74, v164, type metadata accessor for Proto_Value);
  v108 = *(_QWORD *)(v107 + *(int *)(v166 + 20))
       + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v109 = v108;
  v110 = v153;
  sub_1BDD86DEC(v109, v153, &qword_1ED6F26F0);
  if (v81(v110, 1, v159) == 1)
  {
    sub_1BDD86E30(v110, &qword_1ED6F26F0);
    v111 = (uint64_t)v148;
    v112 = (uint64_t)v147;
    v113 = v146;
    v114 = v145;
    v115 = (uint64_t)v135;
    v116 = v160;
    v117 = v162;
LABEL_38:
    sub_1BE1B20E4();
    v119 = *(int *)(v169 + 20);
    if (qword_1ED6EFD78 != -1)
      swift_once();
    *(_QWORD *)(v115 + v119) = qword_1ED6EFD68;
    swift_retain();
    goto LABEL_41;
  }
  v118 = swift_getEnumCaseMultiPayload();
  v111 = (uint64_t)v148;
  v112 = (uint64_t)v147;
  v113 = v146;
  v114 = v145;
  v115 = (uint64_t)v135;
  v116 = v160;
  v117 = v162;
  if (v118 != 7)
  {
    sub_1BDD9C3E0(v110, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_38;
  }
  sub_1BDDA2E8C(v110, (uint64_t)v135, type metadata accessor for Proto_Reference);
LABEL_41:
  v120 = sub_1BDD9C3E0(v164, type metadata accessor for Proto_Value);
  MEMORY[0x1E0C80A78](v120);
  *((_OWORD *)&v133 - 2) = *(_OWORD *)(v117 + 16);
  *(&v133 - 2) = (char *)v167;
  *(&v133 - 1) = (char *)v84;
  v121 = v165;
  sub_1BDDA82F8((void (*)(uint64_t))sub_1BE0ECC40, v116);
  v165 = v121;
  if (v121)
  {
    sub_1BDD9C3E0(v115, type metadata accessor for Proto_Reference);
    return swift_release();
  }
  else
  {
    v122 = *(int *)(v169 + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Reference._StorageClass(0);
      swift_allocObject();
      v123 = swift_retain();
      *(_QWORD *)(v115 + v122) = sub_1BDDA1424(v123);
      swift_release();
    }
    v124 = *(_QWORD *)(v115 + v122);
    sub_1BDDA2E8C(v160, v112, type metadata accessor for Proto_CRDT);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v114 + 56))(v112, 0, 1, v113);
    sub_1BDDA2EF0(v112, v111, &qword_1ED6F3728);
    v125 = v124 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v111, v125, &qword_1ED6F3728);
    swift_endAccess();
    swift_release();
    v126 = (uint64_t)v133;
    sub_1BDD9C318(v115, (uint64_t)v133, type metadata accessor for Proto_Reference);
    v127 = (unint64_t *)(v84 + 64);
    swift_beginAccess();
    v128 = *(_QWORD *)(v84 + 64);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v84 + 64) = v128;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v128 = sub_1BDDC5EAC(0, *(_QWORD *)(v128 + 16) + 1, 1, v128);
      *v127 = v128;
    }
    v130 = v134;
    v132 = *(_QWORD *)(v128 + 16);
    v131 = *(_QWORD *)(v128 + 24);
    if (v132 >= v131 >> 1)
    {
      v128 = sub_1BDDC5EAC(v131 > 1, v132 + 1, 1, v128);
      *v127 = v128;
    }
    *(_QWORD *)(v128 + 16) = v132 + 1;
    sub_1BDDA2E8C(v126, v128+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(_QWORD *)(v130 + 72) * v132, type metadata accessor for Proto_Reference);
    swift_endAccess();
    swift_release();
    return sub_1BDD9C3E0(v115, type metadata accessor for Proto_Reference);
  }
}

void sub_1BE0ECB28(_BYTE *a1@<X8>)
{
  Anonymous.minEncodingVersion.getter(a1);
}

void Anonymous.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

double sub_1BE0ECB44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _OWORD *v9;
  double result;
  __int128 v11;

  v3 = v2;
  v6 = type metadata accessor for Timestamp(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 24))(v3 + *(int *)(a2 + 36), a1);
  *(_QWORD *)&v11 = MEMORY[0x1E0DEE9E0];
  *((_QWORD *)&v11 + 1) = MEMORY[0x1E0DEE9E0];
  sub_1BE1B1F4C();
  *(_QWORD *)&v8[*(int *)(type metadata accessor for Replica() + 20)] = 0;
  *(_QWORD *)&v8[*(int *)(v6 + 20)] = 0;
  sub_1BDDCB81C((uint64_t)v8);
  sub_1BDD9C3E0((uint64_t)v8, type metadata accessor for Timestamp);
  v9 = (_OWORD *)(v3 + *(int *)(a2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(double *)&v11;
  *v9 = v11;
  return result;
}

uint64_t sub_1BE0ECC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v4[2];
  v6 = v4[3];
  v7 = v4[5];
  type metadata accessor for Anonymous(0, v5, v6, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 16) + 8) + 16))(v7, v5);
}

uint64_t sub_1BE0ECCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for Anonymous(0, *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8), a4);
  return Anonymous.get.getter(v4);
}

double sub_1BE0ECCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for Anonymous(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  return sub_1BE0ECB44(a1, v5);
}

uint64_t sub_1BE0ECD1C()
{
  return 16;
}

__n128 sub_1BE0ECD28(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *sub_1BE0ECD34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + ((v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v12 = *a2;
    v13 = a2[1];
    sub_1BDDB6CA4(*a2, v13);
    *a1 = v12;
    a1[1] = v13;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v7 + 16) & ~v7, ((unint64_t)a2 + v7 + 16) & ~v7, v5);
    v14 = (_QWORD *)((v8 + (((unint64_t)a1 + v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)((v8 + (((unint64_t)a2 + v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v14[1] = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BE0ECE48(uint64_t a1, uint64_t a2)
{
  sub_1BDDB796C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1BE0ECEBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v6 = *a2;
  v7 = a2[1];
  sub_1BDDB6CA4(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1BE0ECF6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = *a2;
  v7 = a2[1];
  sub_1BDDB6CA4(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1BDDB796C(v8, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)a1 + v11 + 16) & ~v11;
  v13 = ((unint64_t)a2 + v11 + 16) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BE0ED038(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  *(_OWORD *)((*(_QWORD *)(v4 + 64) + 7 + v6) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v4 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t *sub_1BE0ED0B8(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BDDB796C(v6, v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  swift_bridgeObjectRelease();
  v13[1] = v14[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t FinalizedTimestamp.init(replica:counter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for FinalizedTimestamp(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t static FinalizedTimestamp.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(int *)(type metadata accessor for FinalizedTimestamp(0) + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a2 + v4);
  if (v5 == v6)
    return sub_1BDDB2BF8();
  else
    return v5 < v6;
}

uint64_t static FinalizedTimestamp.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  v4 = type metadata accessor for FinalizedTimestamp(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v16 - v9;
  v11 = *(int *)(v8 + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  sub_1BDD9C318(a1, (uint64_t)&v16 - v9, type metadata accessor for FinalizedTimestamp);
  sub_1BDD9C318(a2, (uint64_t)v7, type metadata accessor for FinalizedTimestamp);
  if (v12 == v13)
    v14 = sub_1BE1B1F10();
  else
    v14 = 0;
  sub_1BDD9C3E0((uint64_t)v7, type metadata accessor for FinalizedTimestamp);
  sub_1BDD9C3E0((uint64_t)v10, type metadata accessor for FinalizedTimestamp);
  return v14 & 1;
}

uint64_t FinalizedTimestamp.nextUnique()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  sub_1BE1B1F4C();
  result = type metadata accessor for FinalizedTimestamp(0);
  v4 = *(int *)(result + 20);
  v5 = *(_QWORD *)(v1 + v4);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    *(_QWORD *)(a1 + v4) = v7;
  return result;
}

uint64_t static FinalizedTimestamp.unique()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  sub_1BE1B1F4C();
  result = type metadata accessor for FinalizedTimestamp(0);
  *(_QWORD *)(a1 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t FinalizedTimestamp.replica.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FinalizedTimestamp.counter.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FinalizedTimestamp(0) + 20));
}

uint64_t FinalizedTimestamp.hash(into:)()
{
  sub_1BE1B1F28();
  type metadata accessor for FinalizedTimestamp(0);
  return sub_1BE1B3704();
}

uint64_t static FinalizedTimestamp.zero.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6EF4D8 != -1)
    swift_once();
  v2 = type metadata accessor for FinalizedTimestamp(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED6F8A38);
  return sub_1BDD9C318(v3, a1, type metadata accessor for FinalizedTimestamp);
}

uint64_t FinalizedTimestamp.description.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3190);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BE1B61C0;
  v1 = sub_1BE1B1F40();
  v2 = MEMORY[0x1E0DEDE70];
  v3 = MEMORY[0x1E0DEDEC8];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEDE70];
  *(_QWORD *)(v0 + 64) = v3;
  *(_BYTE *)(v0 + 32) = v1;
  v4 = sub_1BE1B1F40();
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v3;
  *(_BYTE *)(v0 + 72) = BYTE1(v4);
  v6 = sub_1BE1B27EC();
  sub_1BE1B284C();
  type metadata accessor for FinalizedTimestamp(0);
  sub_1BE1B32E4();
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  sub_1BE1B284C();
  return v6;
}

uint64_t FinalizedTimestamp.hashValue.getter()
{
  sub_1BE1B36F8();
  sub_1BE1B1F28();
  type metadata accessor for FinalizedTimestamp(0);
  sub_1BE1B3704();
  return sub_1BE1B371C();
}

uint64_t sub_1BE0ED5E4()
{
  sub_1BE1B36F8();
  sub_1BE1B1F28();
  sub_1BE1B3704();
  return sub_1BE1B371C();
}

uint64_t sub_1BE0ED634()
{
  sub_1BE1B1F28();
  return sub_1BE1B3704();
}

uint64_t sub_1BE0ED670()
{
  sub_1BE1B36F8();
  sub_1BE1B1F28();
  sub_1BE1B3704();
  return sub_1BE1B371C();
}

uint64_t sub_1BE0ED6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(int *)(a3 + 20);
  v4 = *(_QWORD *)(a1 + v3);
  v5 = *(_QWORD *)(a2 + v3);
  if (v4 == v5)
    return sub_1BDDB2BF8();
  else
    return v4 < v5;
}

BOOL sub_1BE0ED6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(int *)(a3 + 20);
  v4 = *(_QWORD *)(a2 + v3);
  v5 = *(_QWORD *)(a1 + v3);
  if (v4 == v5)
    v6 = sub_1BDDB2BF8();
  else
    v6 = v4 < v5;
  return (v6 & 1) == 0;
}

BOOL sub_1BE0ED720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(int *)(a3 + 20);
  v4 = *(_QWORD *)(a1 + v3);
  v5 = *(_QWORD *)(a2 + v3);
  if (v4 == v5)
    v6 = sub_1BDDB2BF8();
  else
    v6 = v4 < v5;
  return (v6 & 1) == 0;
}

uint64_t sub_1BE0ED758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(int *)(a3 + 20);
  v4 = *(_QWORD *)(a2 + v3);
  v5 = *(_QWORD *)(a1 + v3);
  if (v4 == v5)
    return sub_1BDDB2BF8();
  else
    return v4 < v5;
}

uint64_t sub_1BE0ED788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v16 - v7;
  v10 = *(int *)(v9 + 20);
  v11 = *(_QWORD *)(v6 + v10);
  v13 = *(_QWORD *)(v12 + v10);
  sub_1BDD9C318(v6, (uint64_t)&v16 - v7, type metadata accessor for FinalizedTimestamp);
  sub_1BDD9C318(a2, (uint64_t)v5, type metadata accessor for FinalizedTimestamp);
  if (v11 == v13)
    v14 = sub_1BE1B1F10();
  else
    v14 = 0;
  sub_1BDD9C3E0((uint64_t)v5, type metadata accessor for FinalizedTimestamp);
  sub_1BDD9C3E0((uint64_t)v8, type metadata accessor for FinalizedTimestamp);
  return v14 & 1;
}

uint64_t FinalizedTimestamp.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Proto_Timestamp(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (unint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Proto_Value(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v28 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v26 - v14;
  v16 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v15, &qword_1ED6F3770);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v8) = v17(v15, 1, v7);
  sub_1BDD86E30((uint64_t)v15, &qword_1ED6F3770);
  if ((_DWORD)v8 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v18 = 0xD000000000000017;
    *(_QWORD *)(v18 + 8) = 0x80000001BE1CD110;
    *(_BYTE *)(v18 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  *(_QWORD *)(swift_initStackObject() + 16) = a1;
  sub_1BDD86DEC(v16, (uint64_t)v13, &qword_1ED6F3770);
  result = v17(v13, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    return result;
  }
  v20 = v28;
  sub_1BDDA2E8C((uint64_t)v13, v28, type metadata accessor for Proto_Value);
  swift_retain();
  swift_release();
  v21 = *(_QWORD *)(v20 + *(int *)(v7 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v21, (uint64_t)v5, &qword_1ED6F26F0);
  v22 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v5, 1, v22) == 1)
  {
    sub_1BDD86E30((uint64_t)v5, &qword_1ED6F26F0);
    v24 = v29;
    v23 = v30;
LABEL_9:
    *v24 = 0;
    v24[1] = 0;
    sub_1BE1B20E4();
    goto LABEL_10;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v24 = v29;
  if (EnumCaseMultiPayload != 9)
  {
    sub_1BDD9C3E0((uint64_t)v5, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    v23 = v30;
    goto LABEL_9;
  }
  sub_1BDDA2E8C((uint64_t)v5, (uint64_t)v29, type metadata accessor for Proto_Timestamp);
  v23 = v30;
LABEL_10:
  sub_1BDD9C3E0(v20, type metadata accessor for Proto_Value);
  return sub_1BDDAA440(v24, a1, v23);
}

uint64_t FinalizedTimestamp.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v9;

  v2 = type metadata accessor for Proto_Timestamp(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v9 - v6);
  sub_1BE1B20E4();
  *v7 = sub_1BDDAE244(v0);
  v7[1] = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FinalizedTimestamp(0) + 20));
  sub_1BDE25870();
  if (!v1)
  {
    sub_1BDD9C318((uint64_t)v7, (uint64_t)v5, type metadata accessor for Proto_Timestamp);
    swift_beginAccess();
    swift_retain();
    sub_1BE12851C((uint64_t)v5);
    swift_release();
  }
  return sub_1BDD9C3E0((uint64_t)v7, type metadata accessor for Proto_Timestamp);
}

void FinalizedTimestamp.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BE0EDD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return FinalizedTimestamp.init(from:)(a1, a2);
}

uint64_t sub_1BE0EDD58()
{
  return FinalizedTimestamp.encode(to:)();
}

uint64_t sub_1BE0EDFEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v3 = type metadata accessor for FinalizedTimestamp(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  sub_1BDD9C318(v1 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)&v14 - v7, type metadata accessor for FinalizedTimestamp);
  sub_1BDD9C318(a1 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)v6, type metadata accessor for FinalizedTimestamp);
  v9 = *(int *)(v3 + 20);
  v10 = *(_QWORD *)&v6[v9];
  v11 = *(_QWORD *)&v8[v9];
  if (v10 == v11)
    v12 = sub_1BDDB2BF8();
  else
    v12 = v10 < v11;
  sub_1BDD9C3E0((uint64_t)v6, type metadata accessor for FinalizedTimestamp);
  sub_1BDD9C3E0((uint64_t)v8, type metadata accessor for FinalizedTimestamp);
  return v12 & 1;
}

uint64_t sub_1BE0EE148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _BYTE v42[24];
  uint64_t v43;

  v3 = type metadata accessor for FinalizedTimestamp(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v38 = (uint64_t)&v38 - v8;
  MEMORY[0x1E0C80A78](v7);
  v40 = (uint64_t)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EFC88);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F2DC0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v38 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v38 - v20;
  sub_1BDD9C318(v1 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)&v38 - v20, type metadata accessor for FinalizedTimestamp);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v22(v21, 0, 1, v3);
  sub_1BDD86DEC(a1, (uint64_t)v42, qword_1EF52B750);
  if (v43)
  {
    type metadata accessor for ObjCFinalizedTimestamp(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = v41;
      sub_1BDD9C318((uint64_t)v41 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)v19, type metadata accessor for FinalizedTimestamp);

      v24 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BDD86E30((uint64_t)v42, qword_1EF52B750);
  }
  v24 = 1;
LABEL_6:
  v22(v19, v24, 1, v3);
  v25 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1BDD86DEC((uint64_t)v21, (uint64_t)v12, (uint64_t *)&unk_1ED6F2DC0);
  sub_1BDD86DEC((uint64_t)v19, v25, (uint64_t *)&unk_1ED6F2DC0);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v26((uint64_t)v12, 1, v3) == 1)
  {
    sub_1BDD86E30((uint64_t)v19, (uint64_t *)&unk_1ED6F2DC0);
    sub_1BDD86E30((uint64_t)v21, (uint64_t *)&unk_1ED6F2DC0);
    v27 = v26(v25, 1, v3);
    if (v27 == 1)
      v28 = (uint64_t *)&unk_1ED6F2DC0;
    else
      v28 = &qword_1ED6EFC88;
    if (v27 == 1)
      v29 = -1;
    else
      v29 = 0;
  }
  else
  {
    sub_1BDD86DEC((uint64_t)v12, (uint64_t)v16, (uint64_t *)&unk_1ED6F2DC0);
    if (v26(v25, 1, v3) == 1)
    {
      sub_1BDD86E30((uint64_t)v19, (uint64_t *)&unk_1ED6F2DC0);
      sub_1BDD86E30((uint64_t)v21, (uint64_t *)&unk_1ED6F2DC0);
      sub_1BDD9C3E0((uint64_t)v16, type metadata accessor for FinalizedTimestamp);
      v29 = 0;
      v28 = &qword_1ED6EFC88;
    }
    else
    {
      v30 = v40;
      sub_1BDDA2E8C(v25, v40, type metadata accessor for FinalizedTimestamp);
      v31 = *(int *)(v3 + 20);
      v32 = *(_QWORD *)&v16[v31];
      v33 = *(_QWORD *)(v30 + v31);
      v34 = v38;
      sub_1BDD9C318((uint64_t)v16, v38, type metadata accessor for FinalizedTimestamp);
      v35 = v30;
      v36 = v39;
      sub_1BDD9C318(v35, v39, type metadata accessor for FinalizedTimestamp);
      if (v32 == v33)
        v29 = sub_1BE1B1F10();
      else
        v29 = 0;
      sub_1BDD9C3E0(v36, type metadata accessor for FinalizedTimestamp);
      sub_1BDD9C3E0(v34, type metadata accessor for FinalizedTimestamp);
      sub_1BDD9C3E0(v40, type metadata accessor for FinalizedTimestamp);
      v28 = (uint64_t *)&unk_1ED6F2DC0;
      sub_1BDD86E30((uint64_t)v19, (uint64_t *)&unk_1ED6F2DC0);
      sub_1BDD86E30((uint64_t)v21, (uint64_t *)&unk_1ED6F2DC0);
      sub_1BDD9C3E0((uint64_t)v16, type metadata accessor for FinalizedTimestamp);
    }
  }
  sub_1BDD86E30((uint64_t)v12, v28);
  return v29 & 1;
}

id sub_1BE0EE790()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ObjCFinalizedTimestamp(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1BE0EE7F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5300E8;
  if (!qword_1EF5300E8)
  {
    v1 = type metadata accessor for FinalizedTimestamp(255);
    result = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for FinalizedTimestamp, v1);
    atomic_store(result, (unint64_t *)&qword_1EF5300E8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FinalizedTimestamp(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BE1B1F58();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for FinalizedTimestamp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for FinalizedTimestamp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for FinalizedTimestamp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for FinalizedTimestamp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1BE0EEA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BE0EEA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BE0EEAAC()
{
  return type metadata accessor for ObjCFinalizedTimestamp(0);
}

uint64_t type metadata accessor for ObjCFinalizedTimestamp(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF5300F0);
}

uint64_t sub_1BE0EEAC8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FinalizedTimestamp(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BE0EEB34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_1BE0FBE8C(a1, a2, type metadata accessor for Proto4_Set.Element, (void (*)(BOOL, unint64_t, uint64_t))sub_1BDE22880, type metadata accessor for Proto_Set.Element, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1BE0F56C0);
  swift_release();
  return v2;
}

uint64_t sub_1BE0EEB94(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;

  v51 = a3;
  v52 = a4;
  v7 = type metadata accessor for Proto4_Struct.Field(0);
  v49 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44 = (uint64_t)&v40 - v11;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530108);
  v12 = MEMORY[0x1E0C80A78](v50);
  v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x1E0C80A78](v12);
  v42 = (uint64_t *)((char *)&v40 - v16);
  MEMORY[0x1E0C80A78](v15);
  v41 = (uint64_t *)((char *)&v40 - v17);
  v18 = *(_QWORD *)(a1 + 16);
  v53 = *(_QWORD *)(a2 + 16);
  if (v53 >= v18)
    v19 = v18;
  else
    v19 = v53;
  v54 = MEMORY[0x1E0DEE9D8];
  sub_1BDE22854(0, v19, 0);
  v20 = v54;
  v43 = a2;
  v48 = v18;
  if (v19)
  {
    v47 = *(_QWORD *)(type metadata accessor for Proto_CRDT(0) - 8);
    v46 = a2 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v22 = 0;
    v45 = a1;
    while (v18 != v22)
    {
      if (v53 == v22)
        goto LABEL_35;
      v23 = *(_QWORD *)(a1 + 8 * v22 + 32);
      v24 = v46 + *(_QWORD *)(v47 + 72) * v22;
      v25 = (uint64_t)v14 + *(int *)(v50 + 48);
      *v14 = v23;
      sub_1BDD9C318(v24, v25, type metadata accessor for Proto_CRDT);
      v51(v23, v25);
      if (v4)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BDD86E30((uint64_t)v14, &qword_1EF530108);
        return v20;
      }
      sub_1BDD86E30((uint64_t)v14, &qword_1EF530108);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE22854(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v54;
      }
      v27 = *(_QWORD *)(v20 + 16);
      v26 = *(_QWORD *)(v20 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1BDE22854(v26 > 1, v27 + 1, 1);
        v20 = v54;
      }
      ++v22;
      *(_QWORD *)(v20 + 16) = v27 + 1;
      result = sub_1BDDA2E8C((uint64_t)v10, v20+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v27, type metadata accessor for Proto4_Struct.Field);
      a1 = v45;
      v18 = v48;
      if (v19 == v22)
        goto LABEL_16;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
LABEL_16:
  v28 = v53;
  if (v18 > v53)
  {
    v47 = a1 + 32;
    if (v19 <= (uint64_t)v53)
      v29 = v53;
    else
      v29 = v19;
    v30 = v43;
    while (v18 != v19)
    {
      if (v28 == v19)
        goto LABEL_30;
      if (v29 == v19)
        goto LABEL_37;
      v31 = *(_QWORD *)(v47 + 8 * v19);
      v32 = type metadata accessor for Proto_CRDT(0);
      v33 = v30
          + ((*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80))
          + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * v19;
      v20 = v50;
      v34 = v42;
      v35 = (uint64_t)v42 + *(int *)(v50 + 48);
      *v42 = v31;
      sub_1BDD9C318(v33, v35, type metadata accessor for Proto_CRDT);
      v36 = (uint64_t)v34;
      v37 = v41;
      sub_1BDDA2EF0(v36, (uint64_t)v41, &qword_1EF530108);
      v51(*v37, (uint64_t)v37 + *(int *)(v20 + 48));
      sub_1BDD86E30((uint64_t)v37, &qword_1EF530108);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        return v20;
      }
      v20 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE22854(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v54;
      }
      v39 = *(_QWORD *)(v20 + 16);
      v38 = *(_QWORD *)(v20 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_1BDE22854(v38 > 1, v39 + 1, 1);
        v20 = v54;
      }
      ++v19;
      *(_QWORD *)(v20 + 16) = v39 + 1;
      result = sub_1BDDA2E8C(v44, v20+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v39, type metadata accessor for Proto4_Struct.Field);
      v18 = v48;
      v30 = v43;
      v28 = v53;
      if (v48 == v19)
        goto LABEL_30;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1BE0EF04C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v4 = v1;
  v6 = sub_1BE1B1F58();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - v10;
  v12 = v1[6];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
LABEL_13:
    v1 = (_QWORD *)sub_1BDDAEBE8(0, v1[2] + 1, 1, (unint64_t)v1);
    *v2 = v1;
    goto LABEL_8;
  }
  v25 = v9;
  v1[6] = v14;
  swift_beginAccess();
  v15 = v1[3];
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    v16 = sub_1BDDAE974(a1);
    if ((v17 & 1) != 0)
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRelease();
      if ((v3 & 0x8000000000000000) == 0)
        return v3;
      sub_1BE1B31F4();
      __break(1u);
    }
    swift_bridgeObjectRelease();
  }
  v2 = v4 + 2;
  swift_beginAccess();
  v3 = *(_QWORD *)(v4[2] + 16);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18(v11, a1, v6);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v26 = v4[3];
  v4[3] = 0x8000000000000000;
  sub_1BDDAEB3C(v3, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  v4[3] = v26;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  swift_endAccess();
  v11 = v25;
  v18(v25, a1, v6);
  swift_beginAccess();
  v1 = (_QWORD *)v4[2];
  v20 = swift_isUniquelyReferenced_nonNull_native();
  v4[2] = v1;
  if ((v20 & 1) == 0)
    goto LABEL_13;
LABEL_8:
  v22 = v1[2];
  v21 = v1[3];
  if (v22 >= v21 >> 1)
  {
    v1 = (_QWORD *)sub_1BDDAEBE8(v21 > 1, v22 + 1, 1, (unint64_t)v1);
    *v2 = v1;
  }
  v1[2] = v22 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))((unint64_t)v1+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v22, v11, v6);
  swift_endAccess();
  return v3;
}

uint64_t sub_1BE0EF30C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v5 = v2;
  v8 = sub_1BE1B2840();
  v9 = v2[7];
  v10 = __OFADD__(v9, v8);
  v11 = v9 + v8;
  if (v10)
  {
    __break(1u);
LABEL_13:
    v2 = sub_1BDDA8B2C(0, v2[2] + 1, 1, v2);
    *v4 = v2;
    goto LABEL_8;
  }
  v2[7] = v11;
  swift_beginAccess();
  v12 = v2[5];
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BDDB271C(a1, a2);
    if ((v14 & 1) != 0)
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v3 & 0x8000000000000000) == 0)
        return v3;
      sub_1BE1B31F4();
      __break(1u);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = v5 + 4;
  swift_beginAccess();
  v3 = *(_QWORD *)(v5[4] + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = v5[5];
  v5[5] = 0x8000000000000000;
  sub_1BDDA86D4(v3, a1, a2, isUniquelyReferenced_nonNull_native);
  v5[5] = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  v2 = (_QWORD *)v5[4];
  swift_bridgeObjectRetain();
  v16 = swift_isUniquelyReferenced_nonNull_native();
  v5[4] = v2;
  if ((v16 & 1) == 0)
    goto LABEL_13;
LABEL_8:
  v18 = v2[2];
  v17 = v2[3];
  if (v18 >= v17 >> 1)
  {
    v2 = sub_1BDDA8B2C((_QWORD *)(v17 > 1), v18 + 1, 1, v2);
    *v4 = v2;
  }
  v2[2] = v18 + 1;
  v19 = &v2[2 * v18];
  v19[4] = a1;
  v19[5] = a2;
  swift_endAccess();
  return v3;
}

uint64_t sub_1BE0EF550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  int v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;

  v123 = a1;
  v139 = *MEMORY[0x1E0C80C00];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v4 = MEMORY[0x1E0C80A78](v3);
  v112 = (uint64_t)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v115 = (char *)&v108 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v114 = (char *)&v108 - v9;
  MEMORY[0x1E0C80A78](v8);
  v109 = (uint64_t)&v108 - v10;
  v116 = type metadata accessor for Proto_Constants(0);
  v111 = *(_QWORD *)(v116 - 8);
  v11 = MEMORY[0x1E0C80A78](v116);
  v113 = (uint64_t *)((char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v110 = (uint64_t *)((char *)&v108 - v13);
  v14 = sub_1BE1B1F58();
  v127 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v124 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3CD0);
  MEMORY[0x1E0C80A78](v16);
  v126 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37C8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v119 = (uint64_t)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v118 = (uint64_t)&v108 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCD0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Proto4_CRDT(0);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v108 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v32 = *(int *)(type metadata accessor for Proto_Document(0) + 20);
  if (qword_1ED6F3268 != -1)
    swift_once();
  v125 = a2;
  v120 = v32;
  *(_QWORD *)(a2 + v32) = qword_1ED6F37F0;
  v33 = *(int *)(type metadata accessor for Proto4_Root(0) + 20);
  v34 = *(_QWORD *)(v123 + v33)
      + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root;
  swift_beginAccess();
  sub_1BDD86DEC(v34, (uint64_t)v24, &qword_1EF52CCD0);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25);
  v117 = v33;
  if (v35 == 1)
  {
    swift_retain();
    sub_1BE1B20E4();
    v36 = *(int *)(v25 + 20);
    v37 = v122;
    if (qword_1EF52BD40 != -1)
      swift_once();
    *(_QWORD *)&v28[v36] = qword_1EF52C640;
    swift_retain();
    sub_1BDD86E30((uint64_t)v24, &qword_1EF52CCD0);
    v38 = v125;
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v24, (uint64_t)v28, type metadata accessor for Proto4_CRDT);
    swift_retain();
    v38 = v125;
    v37 = v122;
  }
  v39 = v121;
  sub_1BE0F0A28((uint64_t)v28, (uint64_t)v31);
  sub_1BDD9C3E0((uint64_t)v28, type metadata accessor for Proto4_CRDT);
  if (v39)
    return sub_1BDD9C3E0(v38, type metadata accessor for Proto_Document);
  v40 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    v41 = swift_retain();
    *(_QWORD *)(v38 + v40) = sub_1BDDA0F18(v41);
    swift_release();
  }
  v42 = *(_QWORD *)(v38 + v40);
  v43 = v118;
  sub_1BDDA2E8C((uint64_t)v31, v118, type metadata accessor for Proto_CRDT);
  v44 = type metadata accessor for Proto_Document.OneOf_Root(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 0, 1, v44);
  v45 = v119;
  sub_1BDDA2EF0(v43, v119, &qword_1ED6F37C8);
  v46 = v42 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v45, v46, &qword_1ED6F37C8);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  v47 = swift_bridgeObjectRetain();
  v48 = sub_1BE0FC068(v47, v37, type metadata accessor for Proto_Reference, (void (*)(BOOL, unint64_t, uint64_t))sub_1BDE22634, type metadata accessor for Proto4_Reference, (void (*)(uint64_t))sub_1BE0F8930);
  swift_bridgeObjectRelease();
  swift_release();
  v50 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    v51 = swift_retain();
    *(_QWORD *)(v38 + v50) = sub_1BDDA0F18(v51);
    swift_release();
  }
  v52 = (uint64_t *)(*(_QWORD *)(v38 + v50)
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__references);
  swift_beginAccess();
  *v52 = v48;
  swift_bridgeObjectRelease();
  v53 = v37 + 16;
  swift_beginAccess();
  v54 = *(_QWORD *)(*(_QWORD *)(v37 + 16) + 16);
  if (v54 >> 59)
    __break(1u);
  v123 = 0;
  v137 = sub_1BDDD6DF0(16 * v54);
  v138 = v55;
  v56 = *(_QWORD *)v53;
  v57 = *(_QWORD *)(*(_QWORD *)v53 + 16);
  v58 = v127;
  v59 = v126;
  v121 = *(_QWORD *)v53;
  if (v57)
  {
    v60 = v56 + ((*((unsigned __int8 *)v127 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v127 + 80));
    v61 = *((_QWORD *)v127 + 9);
    v62 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v127 + 2);
    swift_bridgeObjectRetain();
    v63 = v124;
    while (1)
    {
      v62(v59, v60, v14);
      v64 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v58 + 7);
      v64(v59, 0, 1, v14);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v58 + 6))(v59, 1, v14) == 1)
        break;
      (*((void (**)(char *, char *, uint64_t))v58 + 4))(v63, v59, v14);
      v128 = sub_1BE1B1F40();
      v129 = v65;
      v130 = v66;
      v131 = v67;
      v132 = v68;
      v133 = v69;
      v134 = v70;
      v135 = v71;
      v136 = v72;
      sub_1BE1B1F40();
      sub_1BE1B1CAC();
      swift_allocObject();
      sub_1BE1B1C64();
      sub_1BE1B1EA4();
      v58 = v127;
      v59 = v126;
      swift_release();
      (*((void (**)(char *, uint64_t))v58 + 1))(v63, v14);
      v60 += v61;
      if (!--v57)
        goto LABEL_22;
    }
  }
  else
  {
    v64 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v127 + 7);
    swift_bridgeObjectRetain();
LABEL_22:
    v64(v59, 1, 1, v14);
  }
  swift_bridgeObjectRelease();
  v73 = v137;
  v74 = v138;
  v75 = *(_QWORD *)(v125 + v120)
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  v76 = v109;
  sub_1BDD86DEC(v75, v109, &qword_1ED6F3290);
  v77 = v111;
  v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
  v79 = v78(v76, 1, v116);
  v127 = v78;
  if (v79 == 1)
  {
    sub_1BDDB6CA4(v73, v74);
    v80 = sub_1BE1B20CC();
    v81 = v110;
    *v110 = v80;
    v81[1] = v82;
    v81[2] = MEMORY[0x1E0DEE9D8];
    v83 = v81;
    sub_1BE1B20E4();
    sub_1BDD86E30(v76, &qword_1ED6F3290);
  }
  else
  {
    v83 = v110;
    sub_1BDDA2E8C(v76, (uint64_t)v110, type metadata accessor for Proto_Constants);
    sub_1BDDB6CA4(v73, v74);
  }
  v84 = (uint64_t)v115;
  v85 = (uint64_t)v114;
  sub_1BDDB796C(*v83, v83[1]);
  *v83 = v73;
  v83[1] = v74;
  v86 = v125;
  v87 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    v88 = swift_retain();
    *(_QWORD *)(v86 + v87) = sub_1BDDA0F18(v88);
    swift_release();
  }
  v89 = *(_QWORD *)(v86 + v87);
  sub_1BDDA2E8C((uint64_t)v83, v85, type metadata accessor for Proto_Constants);
  v90 = *(char **)(v77 + 56);
  v91 = v116;
  v126 = v90;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v90)(v85, 0, 1, v116);
  sub_1BDDA2EF0(v85, v84, &qword_1ED6F3290);
  v92 = v89 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v84, v92, &qword_1ED6F3290);
  swift_endAccess();
  swift_release();
  v93 = v122;
  swift_beginAccess();
  v94 = *(_QWORD *)(v93 + 32);
  v95 = *(_QWORD *)(v86 + v87);
  v96 = v91;
  v97 = v95 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  v98 = v97;
  v99 = v112;
  sub_1BDD86DEC(v98, v112, &qword_1ED6F3290);
  if (v127(v99, 1, v91) == 1)
  {
    swift_bridgeObjectRetain();
    v100 = sub_1BE1B20CC();
    v101 = v113;
    *v113 = v100;
    v101[1] = v102;
    v101[2] = MEMORY[0x1E0DEE9D8];
    sub_1BE1B20E4();
    sub_1BDD86E30(v99, &qword_1ED6F3290);
  }
  else
  {
    v101 = v113;
    sub_1BDDA2E8C(v99, (uint64_t)v113, type metadata accessor for Proto_Constants);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v101[2] = v94;
  v103 = v125;
  v104 = v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    v105 = swift_retain();
    *(_QWORD *)(v103 + v104) = sub_1BDDA0F18(v105);
    swift_release();
  }
  v106 = *(_QWORD *)(v103 + v104);
  sub_1BDDA2E8C((uint64_t)v101, v85, type metadata accessor for Proto_Constants);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v126)(v85, 0, 1, v96);
  sub_1BDDA2EF0(v85, v84, &qword_1ED6F3290);
  v107 = v106
       + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v84, v107, &qword_1ED6F3290);
  swift_endAccess();
  swift_release();
  return sub_1BDDB796C(v137, v138);
}

uint64_t sub_1BE0F023C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v68 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCD0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v62 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v61 = (uint64_t)&v58 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37C8);
  MEMORY[0x1E0C80A78](v7);
  v66 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1E0C80A78](v64);
  v67 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for Proto4_CRDT(0);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v65 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v58 - v15;
  v17 = type metadata accessor for Proto_Constants(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (uint64_t *)((char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19);
  v23 = (uint64_t *)((char *)&v58 - v22);
  v24 = *(int *)(type metadata accessor for Proto_Document(0) + 20);
  v63 = a1;
  v58 = v24;
  v25 = *(_QWORD *)(a1 + v24);
  v26 = v25 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v26, (uint64_t)v16, &qword_1ED6F3290);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v27(v16, 1, v17) == 1)
  {
    *v23 = sub_1BE1B20CC();
    v23[1] = v28;
    v23[2] = MEMORY[0x1E0DEE9D8];
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3290);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v16, (uint64_t)v23, type metadata accessor for Proto_Constants);
  }
  v29 = *v23;
  v30 = v23[1];
  sub_1BDDB6CA4(*v23, v30);
  sub_1BDD9C3E0((uint64_t)v23, type metadata accessor for Proto_Constants);
  v31 = v70;
  sub_1BDD928C0(v29, v30);
  v33 = v32;
  result = sub_1BDDB796C(v29, v30);
  if (v31)
    return result;
  v35 = v69;
  swift_beginAccess();
  *(_QWORD *)(v35 + 16) = v33;
  swift_bridgeObjectRelease();
  v36 = v25 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v36, (uint64_t)v14, &qword_1ED6F3290);
  if (v27(v14, 1, v17) == 1)
  {
    *v21 = sub_1BE1B20CC();
    v21[1] = v37;
    v21[2] = MEMORY[0x1E0DEE9D8];
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v14, &qword_1ED6F3290);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v14, (uint64_t)v21, type metadata accessor for Proto_Constants);
  }
  v38 = (uint64_t)v67;
  v39 = v21[2];
  swift_bridgeObjectRetain();
  sub_1BDD9C3E0((uint64_t)v21, type metadata accessor for Proto_Constants);
  v40 = v69;
  swift_beginAccess();
  *(_QWORD *)(v40 + 32) = v39;
  swift_bridgeObjectRelease();
  v41 = v68;
  sub_1BE1B20E4();
  v42 = *(int *)(type metadata accessor for Proto4_Root(0) + 20);
  if (qword_1EF52BD20 != -1)
    swift_once();
  *(_QWORD *)(v41 + v42) = qword_1EF52C630;
  v43 = v25 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  v44 = v66;
  sub_1BDD86DEC(v43, v66, &qword_1ED6F37C8);
  v45 = type metadata accessor for Proto_Document.OneOf_Root(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45) == 1)
  {
    swift_retain();
    sub_1BDD86E30(v44, &qword_1ED6F37C8);
LABEL_14:
    v46 = (uint64_t)v65;
    sub_1BE1B20E4();
    v47 = *(int *)(v64 + 20);
    if (qword_1ED6F2E18 != -1)
      swift_once();
    *(_QWORD *)(v38 + v47) = qword_1ED6F2E08;
    goto LABEL_17;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    swift_retain();
    sub_1BDD9C3E0(v44, type metadata accessor for Proto_Document.OneOf_Root);
    goto LABEL_14;
  }
  sub_1BDDA2E8C(v44, v38, type metadata accessor for Proto_CRDT);
  v46 = (uint64_t)v65;
LABEL_17:
  swift_retain();
  sub_1BE0F14DC(v38, v46);
  sub_1BDD9C3E0(v38, type metadata accessor for Proto_CRDT);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Root._StorageClass(0);
    swift_allocObject();
    v48 = swift_retain();
    *(_QWORD *)(v41 + v42) = sub_1BDE3613C(v48);
    swift_release();
  }
  v49 = *(_QWORD *)(v41 + v42);
  v50 = v46;
  v51 = v61;
  sub_1BDDA2E8C(v50, v61, type metadata accessor for Proto4_CRDT);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v51, 0, 1, v60);
  v52 = v62;
  sub_1BDDA2EF0(v51, v62, &qword_1EF52CCD0);
  v53 = v49 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v52, v53, &qword_1EF52CCD0);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  v54 = swift_bridgeObjectRetain();
  v55 = sub_1BE0FC068(v54, v40, type metadata accessor for Proto4_Reference, (void (*)(BOOL, unint64_t, uint64_t))sub_1BDE228AC, type metadata accessor for Proto_Reference, (void (*)(uint64_t))sub_1BE0F9638);
  swift_bridgeObjectRelease();
  swift_release();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Root._StorageClass(0);
    swift_allocObject();
    v56 = swift_retain();
    *(_QWORD *)(v41 + v42) = sub_1BDE3613C(v56);
    swift_release();
  }
  v57 = (uint64_t *)(*(_QWORD *)(v41 + v42)
                  + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__references);
  swift_beginAccess();
  *v57 = v55;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0F0A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD v43[5];
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;

  v54 = a2;
  v49 = type metadata accessor for Proto_CustomCRDT(0);
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto4_CustomCRDT(0);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Counter(0);
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto4_Counter(0);
  MEMORY[0x1E0C80A78](v8);
  v47 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto4_Sequence(0);
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1E0C80A78](v44);
  v52 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Proto4_Struct(0);
  MEMORY[0x1E0C80A78](v15);
  v53 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Proto_Set(0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v43[4] = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v43[3] = (char *)v43 - v20;
  v21 = type metadata accessor for Proto4_Set(0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v43[2] = (char *)v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v43[1] = (char *)v43 - v24;
  v25 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1E0C80A78](v25);
  v26 = type metadata accessor for Proto4_Register(0);
  MEMORY[0x1E0C80A78](v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CD50);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = (char *)v43 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v36 = (char *)v43 - v35;
  v37 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto4_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v37, (uint64_t)v29, &qword_1EF52CD50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) != 1)
  {
    sub_1BDDA2E8C((uint64_t)v29, (uint64_t)v36, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
    v40 = v54;
    sub_1BE1B20E4();
    v41 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
    if (qword_1ED6F2E18 != -1)
      swift_once();
    *(_QWORD *)(v40 + v41) = qword_1ED6F2E08;
    sub_1BDD9C318((uint64_t)v36, (uint64_t)v34, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
    v42 = (char *)&loc_1BE0F0F00 + 4 * byte_1BE1C24D0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BDD86E30((uint64_t)v29, &qword_1EF52CD50);
  sub_1BDDFCAFC();
  swift_allocError();
  *(_OWORD *)v38 = xmmword_1BE1C24B0;
  *(_BYTE *)(v38 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1BE0F14DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v66 = a2;
  v3 = type metadata accessor for Proto4_Set(0);
  MEMORY[0x1E0C80A78](v3);
  v61 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1E0C80A78](v5);
  v60 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Proto4_Struct(0);
  v7 = MEMORY[0x1E0C80A78](v59);
  v63 = (uint64_t *)((char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v56 = (uint64_t)&v55 - v9;
  v10 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1E0C80A78](v10);
  v62 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for Proto4_Counter(0);
  MEMORY[0x1E0C80A78](v12);
  v58 = (uint64_t)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Proto_Counter(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Proto4_Register(0);
  MEMORY[0x1E0C80A78](v17);
  v57 = (uint64_t)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v55 - v30;
  v32 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v32, (uint64_t)v24, &qword_1ED6F2DF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_1BDD86E30((uint64_t)v24, &qword_1ED6F2DF0);
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v33 = 0xD000000000000011;
    *(_QWORD *)(v33 + 8) = 0x80000001BE1CFE20;
    *(_BYTE *)(v33 + 16) = 0;
    return swift_willThrow();
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v24, (uint64_t)v31, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    v35 = v66;
    sub_1BE1B20E4();
    v36 = *(int *)(type metadata accessor for Proto4_CRDT(0) + 20);
    if (qword_1EF52BD40 != -1)
      swift_once();
    *(_QWORD *)(v35 + v36) = qword_1EF52C640;
    v55 = v31;
    sub_1BDD9C318((uint64_t)v31, (uint64_t)v29, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_1BDDA2E8C((uint64_t)v29, (uint64_t)v21, type metadata accessor for Proto_Register);
        swift_retain();
        v37 = v57;
        v38 = v65;
        sub_1BE0F3670((uint64_t)v21, v57);
        if (v38)
        {
          v39 = type metadata accessor for Proto_Register;
          goto LABEL_11;
        }
        sub_1BDE353C0(v37);
        v44 = type metadata accessor for Proto_Register;
        goto LABEL_17;
      case 2u:
        v21 = v60;
        sub_1BDDA2E8C((uint64_t)v29, (uint64_t)v60, type metadata accessor for Proto_Set);
        swift_retain();
        v42 = v61;
        v43 = v65;
        sub_1BE0F5088((uint64_t)v21, v61);
        if (!v43)
        {
          sub_1BDE355D4(v42);
          v44 = type metadata accessor for Proto_Set;
          goto LABEL_17;
        }
        v39 = type metadata accessor for Proto_Set;
LABEL_11:
        sub_1BDD9C3E0((uint64_t)v21, v39);
        v44 = type metadata accessor for Proto4_CRDT;
        v45 = v35;
        break;
      case 3u:
        v21 = (char *)v35;
        v46 = v62;
        sub_1BDDA2E8C((uint64_t)v29, (uint64_t)v62, type metadata accessor for Proto_Struct);
        v47 = v63;
        *v63 = MEMORY[0x1E0DEE9D8];
        swift_retain();
        sub_1BE1B20E4();
        v48 = *v46;
        v49 = v46[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v50 = v65;
        v51 = sub_1BE0EEB94(v48, v49, (void (*)(uint64_t, uint64_t))sub_1BE0FC050, v64);
        if (v50)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BDD9C3E0((uint64_t)v47, type metadata accessor for Proto4_Struct);
          sub_1BDD9C3E0((uint64_t)v46, type metadata accessor for Proto_Struct);
          v44 = type metadata accessor for Proto4_CRDT;
LABEL_17:
          v45 = (uint64_t)v21;
        }
        else
        {
          v53 = v51;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *v47 = v53;
          v54 = v56;
          sub_1BDDA2E8C((uint64_t)v47, v56, type metadata accessor for Proto4_Struct);
          sub_1BDE357E8(v54);
          v44 = type metadata accessor for Proto_Struct;
          v45 = (uint64_t)v46;
        }
        break;
      case 7u:
        sub_1BDDA2E8C((uint64_t)v29, (uint64_t)v16, type metadata accessor for Proto_Counter);
        swift_retain();
        v52 = v58;
        sub_1BE0F8174((uint64_t)v16, v58);
        sub_1BDE359FC(v52);
        sub_1BDD9C3E0((uint64_t)v16, type metadata accessor for Proto_Counter);
        goto LABEL_20;
      default:
        sub_1BDDFCAFC();
        swift_allocError();
        *(_QWORD *)v40 = 0xD00000000000001FLL;
        *(_QWORD *)(v40 + 8) = 0x80000001BE1CFDE0;
        *(_BYTE *)(v40 + 16) = 0;
        swift_retain();
        swift_willThrow();
        sub_1BDD9C3E0(v35, type metadata accessor for Proto4_CRDT);
        sub_1BDD9C3E0((uint64_t)v55, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
        v41 = (uint64_t)v29;
        return sub_1BDD9C3E0(v41, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    sub_1BDD9C3E0(v45, v44);
LABEL_20:
    v41 = (uint64_t)v55;
    return sub_1BDD9C3E0(v41, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
}

uint64_t sub_1BE0F1BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD v36[8];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = a2;
  v47 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  MEMORY[0x1E0C80A78](v2);
  v36[2] = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto4_Value(0);
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v36[4] = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1E0C80A78](v6);
  v36[5] = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE00);
  v9 = MEMORY[0x1E0C80A78](v8);
  v36[3] = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)v36 - v11;
  v45 = type metadata accessor for Proto_Optional(0);
  v12 = MEMORY[0x1E0C80A78](v45);
  v36[1] = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v40 = (char *)v36 - v14;
  v39 = type metadata accessor for Proto4_Optional(0);
  MEMORY[0x1E0C80A78](v39);
  v44 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1E0C80A78](v16);
  v38 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Proto4_Reference(0);
  MEMORY[0x1E0C80A78](v18);
  v36[7] = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1BE1B20C0();
  v36[6] = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCF8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v36 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)v36 - v28;
  v43 = v4;
  v30 = *(_QWORD *)(v47 + *(int *)(v4 + 20))
      + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v30, (uint64_t)v22, &qword_1EF52CCF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
  {
    sub_1BDDA2E8C((uint64_t)v22, (uint64_t)v29, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
    v33 = v46;
    sub_1BE1B20E4();
    v34 = *(int *)(v6 + 20);
    if (qword_1ED6F2718 != -1)
      swift_once();
    *(_QWORD *)(v33 + v34) = qword_1ED6F2708;
    sub_1BDD9C318((uint64_t)v29, (uint64_t)v27, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
    v35 = (char *)&loc_1BE0F2024 + 4 * byte_1BE1C24E1[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BDD86E30((uint64_t)v22, &qword_1EF52CCF8);
  sub_1BDDFCAFC();
  swift_allocError();
  *(_OWORD *)v31 = xmmword_1BE1C24B0;
  *(_BYTE *)(v31 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1BE0F2620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v78 = a2;
  v3 = type metadata accessor for Proto_Value(0);
  v74 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v69 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v75 = (uint64_t)&v67 - v6;
  v7 = sub_1BE1B20C0();
  MEMORY[0x1E0C80A78](v7);
  v67 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_RepeatedValue(0);
  MEMORY[0x1E0C80A78](v9);
  v73 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Proto4_Reference(0);
  MEMORY[0x1E0C80A78](v11);
  v72 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v68 = (uint64_t)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v70 = (uint64_t)&v67 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v67 - v21;
  v23 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (uint64_t *)((char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v67 - v28;
  v71 = v3;
  v30 = *(_QWORD *)(a1 + *(int *)(v3 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v30, (uint64_t)v22, &qword_1ED6F26F0);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v31(v22, 1, v23) == 1)
  {
    sub_1BDD86E30((uint64_t)v22, &qword_1ED6F26F0);
    sub_1BDDFCAFC();
    swift_allocError();
    *(_OWORD *)v32 = xmmword_1BE1C24B0;
    *(_BYTE *)(v32 + 16) = 0;
    return swift_willThrow();
  }
  sub_1BDDA2E8C((uint64_t)v22, (uint64_t)v29, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  v34 = v78;
  sub_1BE1B20E4();
  v35 = *(int *)(type metadata accessor for Proto4_Value(0) + 20);
  if (qword_1EF52BD30 != -1)
    swift_once();
  *(_QWORD *)(v34 + v35) = qword_1EF52C638;
  sub_1BDD9C318((uint64_t)v29, (uint64_t)v27, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  v36 = (uint64_t)v29;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v37 = *v27;
      if ((*v27 & 0x8000000000000000) == 0)
        goto LABEL_14;
      __break(1u);
LABEL_8:
      v38 = *(double *)v27;
      swift_retain();
      sub_1BDE34B54(v38);
      return sub_1BDD9C3E0((uint64_t)v29, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 1u:
      goto LABEL_8;
    case 2u:
      v39 = *v27;
      if ((v39 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v40 = v76;
        swift_beginAccess();
        v41 = *(_QWORD *)(v40 + 32);
        if (v39 < *(_QWORD *)(v41 + 16))
        {
          v42 = v41 + 16 * v39;
          v44 = *(_QWORD *)(v42 + 32);
          v43 = *(_QWORD *)(v42 + 40);
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1BDE34D60(v44, v43);
          return sub_1BDD9C3E0((uint64_t)v29, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    case 3u:
      v46 = *v27;
      v45 = v27[1];
      swift_retain();
      sub_1BDE34D68(v46, v45);
      return sub_1BDD9C3E0((uint64_t)v29, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 4u:
      v37 = *v27;
LABEL_14:
      swift_retain();
      sub_1BDE34950(v37);
      return sub_1BDD9C3E0((uint64_t)v29, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 7u:
      sub_1BDDA2E8C((uint64_t)v27, (uint64_t)v15, type metadata accessor for Proto_Reference);
      swift_retain();
      v48 = v72;
      v49 = v77;
      sub_1BE0F9638((uint64_t)v15, v72);
      if (v49)
      {
        sub_1BDD9C3E0((uint64_t)v15, type metadata accessor for Proto_Reference);
        v50 = type metadata accessor for Proto4_Value;
        v51 = v34;
      }
      else
      {
        sub_1BDE351A8(v48);
        v50 = type metadata accessor for Proto_Reference;
        v51 = (uint64_t)v15;
      }
      sub_1BDD9C3E0(v51, v50);
      v60 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf;
      v59 = (uint64_t)v29;
      return sub_1BDD9C3E0(v59, v60);
    case 8u:
      sub_1BDDFCAFC();
      swift_allocError();
      *(_OWORD *)v47 = xmmword_1BE1C24C0;
      goto LABEL_24;
    case 0xAu:
      v52 = v73;
      sub_1BDDA2E8C((uint64_t)v27, v73, type metadata accessor for Proto_RepeatedValue);
      if (!*(_QWORD *)(*(_QWORD *)v52 + 16))
        goto LABEL_43;
      v53 = v75;
      v54 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      sub_1BDD9C318(*(_QWORD *)v52 + v54, v75, type metadata accessor for Proto_Value);
      v55 = v71;
      v56 = *(_QWORD *)(v53 + *(int *)(v71 + 20))
          + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
      swift_beginAccess();
      v57 = v56;
      v58 = v70;
      sub_1BDD86DEC(v57, v70, &qword_1ED6F26F0);
      if (v31((char *)v58, 1, v23) == 1)
      {
        swift_retain();
        sub_1BDD86E30(v58, &qword_1ED6F26F0);
      }
      else if (swift_getEnumCaseMultiPayload() == 4)
      {
        swift_retain();
      }
      else
      {
        swift_retain();
        sub_1BDD9C3E0(v58, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      }
      sub_1BDD9C3E0(v75, type metadata accessor for Proto_Value);
      if (*(_QWORD *)(*(_QWORD *)v52 + 16) < 2uLL)
        goto LABEL_44;
      v61 = *(_QWORD *)v52 + v54 + *(_QWORD *)(v74 + 72);
      v62 = v69;
      sub_1BDD9C318(v61, v69, type metadata accessor for Proto_Value);
      v63 = *(_QWORD *)(v62 + *(int *)(v55 + 20))
          + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
      swift_beginAccess();
      v64 = v63;
      v65 = v68;
      sub_1BDD86DEC(v64, v68, &qword_1ED6F26F0);
      if (v31((char *)v65, 1, v23) == 1)
      {
        sub_1BDD86E30(v65, &qword_1ED6F26F0);
LABEL_38:
        sub_1BDD9C3E0(v62, type metadata accessor for Proto_Value);
        goto LABEL_39;
      }
      if (swift_getEnumCaseMultiPayload() != 4)
        goto LABEL_37;
      v65 = *(_QWORD *)v65;
      sub_1BDD9C3E0(v62, type metadata accessor for Proto_Value);
      if (v65 < (uint64_t)0xFFFFFFFF80000000)
      {
LABEL_45:
        __break(1u);
        JUMPOUT(0x1BE0F2E90);
      }
      if (v65 > 0x7FFFFFFF)
      {
        __break(1u);
LABEL_37:
        sub_1BDD9C3E0(v65, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
        goto LABEL_38;
      }
LABEL_39:
      v66 = (uint64_t)v67;
      sub_1BE1B20A8();
      sub_1BDE34F88(v66);
      sub_1BDD9C3E0(v36, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      v60 = type metadata accessor for Proto_RepeatedValue;
      v59 = v52;
      return sub_1BDD9C3E0(v59, v60);
    case 0xBu:
      sub_1BDDFCAFC();
      swift_allocError();
      *(_QWORD *)v47 = 0xD000000000000019;
      *(_QWORD *)(v47 + 8) = 0x80000001BE1CFE00;
      goto LABEL_24;
    default:
      sub_1BDDFCAFC();
      swift_allocError();
      *(_QWORD *)v47 = 0xD00000000000001FLL;
      *(_QWORD *)(v47 + 8) = 0x80000001BE1CFDE0;
LABEL_24:
      *(_BYTE *)(v47 + 16) = 0;
      swift_retain();
      swift_willThrow();
      sub_1BDD9C3E0(v34, type metadata accessor for Proto4_Value);
      sub_1BDD9C3E0((uint64_t)v29, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      v59 = (uint64_t)v27;
      v60 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf;
      return sub_1BDD9C3E0(v59, v60);
  }
}

uint64_t sub_1BE0F2EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;

  v78 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v4 = MEMORY[0x1E0C80A78](v3);
  v62 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v61 = (uint64_t)&v59 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE00);
  MEMORY[0x1E0C80A78](v7);
  v74 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto4_Value(0);
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x1E0C80A78](v9);
  v75 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for Proto_Value(0);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v76 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v13 = MEMORY[0x1E0C80A78](v12);
  v70 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v69 = (uint64_t)&v59 - v15;
  v64 = sub_1BE1B1F58();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE08);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Proto4_Timestamp(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (uint64_t *)((char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = type metadata accessor for Proto_Timestamp(0);
  v66 = *(_QWORD *)(v67 - 8);
  v25 = MEMORY[0x1E0C80A78](v67);
  v27 = (uint64_t *)((char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v65 = (uint64_t)&v59 - v28;
  sub_1BE1B20E4();
  v29 = *(int *)(type metadata accessor for Proto_Register(0) + 20);
  if (qword_1ED6EF788 != -1)
    swift_once();
  v77 = a2;
  v71 = v29;
  *(_QWORD *)(a2 + v29) = qword_1ED6EF780;
  v78 = *(_QWORD *)(v78 + *(int *)(type metadata accessor for Proto4_Register(0) + 20));
  v30 = v78 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1BDD86DEC(v30, (uint64_t)v20, &qword_1EF52CE08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    swift_retain();
    *v24 = sub_1BE1B20CC();
    v24[1] = v31;
    v24[2] = 0;
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v20, &qword_1EF52CE08);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v20, (uint64_t)v24, type metadata accessor for Proto4_Timestamp);
    swift_retain();
  }
  v32 = v67;
  *v27 = 0;
  v27[1] = 0;
  sub_1BE1B20E4();
  v33 = *v24;
  v34 = v24[1];
  sub_1BDDB6CA4(*v24, v34);
  v35 = v68;
  sub_1BDD92AA8(v33, v34);
  v36 = v77;
  if (v35)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v37 = sub_1BE0EF04C((uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v64);
    v38 = v24[2];
    *v27 = v37;
    v27[1] = v38;
    v39 = v65;
    sub_1BDDA2E8C((uint64_t)v27, v65, type metadata accessor for Proto_Timestamp);
    sub_1BDD9C3E0((uint64_t)v24, type metadata accessor for Proto4_Timestamp);
    v40 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Register._StorageClass(0);
      swift_allocObject();
      v41 = swift_retain();
      *(_QWORD *)(v36 + v40) = sub_1BE131250(v41);
      swift_release();
    }
    v42 = *(_QWORD *)(v36 + v40);
    v43 = v39;
    v44 = v69;
    sub_1BDDA2E8C(v43, v69, type metadata accessor for Proto_Timestamp);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v44, 0, 1, v32);
    v45 = v70;
    sub_1BDDA2EF0(v44, v70, &qword_1ED6F3850);
    v46 = v42
        + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v45, v46, &qword_1ED6F3850);
    swift_endAccess();
    swift_release();
    v47 = v78 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
    swift_beginAccess();
    v48 = v74;
    sub_1BDD86DEC(v47, v74, &qword_1EF52CE00);
    v49 = v73;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v48, 1, v73) == 1)
    {
      v50 = v75;
      sub_1BE1B20E4();
      v51 = *(int *)(v49 + 20);
      v52 = (uint64_t)v76;
      if (qword_1EF52BD30 != -1)
        swift_once();
      *(_QWORD *)(v50 + v51) = qword_1EF52C638;
      swift_retain();
      sub_1BDD86E30(v48, &qword_1EF52CE00);
    }
    else
    {
      v50 = v75;
      sub_1BDDA2E8C(v48, v75, type metadata accessor for Proto4_Value);
      v52 = (uint64_t)v76;
    }
    sub_1BE0F1BC0(v50, v52);
    sub_1BDD9C3E0(v50, type metadata accessor for Proto4_Value);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Register._StorageClass(0);
      swift_allocObject();
      v53 = swift_retain();
      *(_QWORD *)(v36 + v40) = sub_1BE131250(v53);
      swift_release();
    }
    v54 = *(_QWORD *)(v36 + v40);
    v55 = v61;
    sub_1BDDA2E8C(v52, v61, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v55, 0, 1, v60);
    v56 = v62;
    sub_1BDDA2EF0(v55, v62, &qword_1ED6F3770);
    v57 = v54 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v56, v57, &qword_1ED6F3770);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE0F3670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v78 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE00);
  v4 = MEMORY[0x1E0C80A78](v3);
  v63 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v62 = (uint64_t)&v59 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v7);
  v73 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Value(0);
  v71 = *(_QWORD *)(v9 - 8);
  v72 = v9;
  MEMORY[0x1E0C80A78](v9);
  v74 = (unint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = type metadata accessor for Proto4_Value(0);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v75 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE08);
  v13 = MEMORY[0x1E0C80A78](v12);
  v69 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v68 = (uint64_t)&v59 - v15;
  v65 = sub_1BE1B1F58();
  v16 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Proto_Timestamp(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (unint64_t *)((char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = type metadata accessor for Proto4_Timestamp(0);
  v67 = *(_QWORD *)(v79 - 8);
  v25 = MEMORY[0x1E0C80A78](v79);
  v27 = (uint64_t)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v66 = (uint64_t)&v59 - v28;
  v29 = a2;
  sub_1BE1B20E4();
  v30 = *(int *)(type metadata accessor for Proto4_Register(0) + 20);
  if (qword_1EF52BD80 != -1)
    swift_once();
  v77 = v29;
  v70 = v30;
  *(_QWORD *)(v29 + v30) = qword_1EF52C648;
  v78 = *(_QWORD *)(v78 + *(int *)(type metadata accessor for Proto_Register(0) + 20));
  v31 = v78 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1BDD86DEC(v31, (uint64_t)v20, &qword_1ED6F3850);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    *v24 = 0;
    v24[1] = 0;
    swift_retain();
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v20, &qword_1ED6F3850);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v20, (uint64_t)v24, type metadata accessor for Proto_Timestamp);
    swift_retain();
  }
  v32 = v80;
  *(_QWORD *)v27 = sub_1BE1B20CC();
  *(_QWORD *)(v27 + 8) = v33;
  *(_QWORD *)(v27 + 16) = 0;
  v34 = v79;
  sub_1BE1B20E4();
  v35 = *v24;
  if ((*v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  swift_beginAccess();
  v36 = *(_QWORD *)(v32 + 16);
  if (v35 >= *(_QWORD *)(v36 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v37 = v64;
  v38 = v65;
  (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v64, v36+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v35, v65);
  v39 = sub_1BDEE7C7C();
  v41 = v40;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v37, v38);
  sub_1BDDB796C(*(_QWORD *)v27, *(_QWORD *)(v27 + 8));
  *(_QWORD *)v27 = v39;
  *(_QWORD *)(v27 + 8) = v41;
  *(_QWORD *)(v27 + 16) = v24[1];
  v42 = v66;
  sub_1BDDA2E8C(v27, v66, type metadata accessor for Proto4_Timestamp);
  sub_1BDD9C3E0((uint64_t)v24, type metadata accessor for Proto_Timestamp);
  v31 = v77;
  v16 = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Register._StorageClass(0);
    swift_allocObject();
    v43 = swift_retain();
    *(_QWORD *)(v31 + v16) = sub_1BDE3E03C(v43);
    swift_release();
  }
  v44 = *(_QWORD *)(v31 + v16);
  v45 = v42;
  v46 = v68;
  sub_1BDDA2E8C(v45, v68, type metadata accessor for Proto4_Timestamp);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56))(v46, 0, 1, v34);
  v47 = v69;
  sub_1BDDA2EF0(v46, v69, &qword_1EF52CE08);
  v48 = v44 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v47, v48, &qword_1EF52CE08);
  swift_endAccess();
  swift_release();
  v49 = v78 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  v29 = v73;
  sub_1BDD86DEC(v49, v73, &qword_1ED6F3770);
  v50 = v72;
  v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v29, 1, v72);
  v24 = v74;
  if (v51 == 1)
  {
    sub_1BE1B20E4();
    v27 = *(int *)(v50 + 20);
    v35 = (unint64_t)v75;
    if (qword_1ED6F2718 == -1)
    {
LABEL_12:
      *(unint64_t *)((char *)v24 + v27) = qword_1ED6F2708;
      swift_retain();
      sub_1BDD86E30(v29, &qword_1ED6F3770);
      goto LABEL_14;
    }
LABEL_21:
    swift_once();
    goto LABEL_12;
  }
  sub_1BDDA2E8C(v29, (uint64_t)v74, type metadata accessor for Proto_Value);
  v35 = (unint64_t)v75;
LABEL_14:
  v52 = v76;
  sub_1BE0F2620((uint64_t)v24, v35);
  sub_1BDD9C3E0((uint64_t)v24, type metadata accessor for Proto_Value);
  if (v52)
    return sub_1BDD9C3E0(v31, type metadata accessor for Proto4_Register);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Register._StorageClass(0);
    swift_allocObject();
    v54 = swift_retain();
    *(_QWORD *)(v31 + v16) = sub_1BDE3E03C(v54);
    swift_release();
  }
  v55 = *(_QWORD *)(v31 + v16);
  v56 = v62;
  sub_1BDDA2E8C(v35, v62, type metadata accessor for Proto4_Value);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v56, 0, 1, v61);
  v57 = v63;
  sub_1BDDA2EF0(v56, v63, &qword_1EF52CE00);
  v58 = v55 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v57, v58, &qword_1EF52CE00);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE0F3E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v52 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v51 = (uint64_t)&v43 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  MEMORY[0x1E0C80A78](v8);
  v45 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Proto4_Version(0);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v11 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for Proto_Version(0);
  v49 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  MEMORY[0x1E0C80A78](v12);
  v47 = (uint64_t *)((char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1BE1B1F58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v18 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  if (qword_1ED6F2808 != -1)
    swift_once();
  *(_QWORD *)(a2 + v18) = qword_1ED6F2800;
  v19 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto4_Set(0) + 20));
  swift_beginAccess();
  v46 = v19;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = *(_QWORD *)(v19 + 24);
  swift_retain();
  sub_1BDDB6CA4(v20, v21);
  v22 = v48;
  sub_1BDD92AA8(v20, v21);
  v48 = v22;
  if (v22)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v23 = v53;
    v24 = sub_1BE0EF04C((uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set._StorageClass(0);
      swift_allocObject();
      v25 = swift_retain();
      *(_QWORD *)(a2 + v18) = sub_1BDDA1768(v25);
      swift_release();
    }
    v26 = *(_QWORD *)(a2 + v18);
    swift_beginAccess();
    *(_QWORD *)(v26 + 16) = v24;
    v27 = v46 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
    swift_beginAccess();
    v28 = v27;
    v29 = v45;
    sub_1BDD86DEC(v28, v45, &qword_1EF52CE20);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v29, 1, v44);
    v31 = v47;
    if (v30 == 1)
    {
      *v11 = MEMORY[0x1E0DEE9D8];
      sub_1BE1B20E4();
      sub_1BDD86E30(v29, &qword_1EF52CE20);
    }
    else
    {
      sub_1BDDA2E8C(v29, (uint64_t)v11, type metadata accessor for Proto4_Version);
    }
    sub_1BE0F86E8(v11, v31);
    sub_1BDD9C3E0((uint64_t)v11, type metadata accessor for Proto4_Version);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set._StorageClass(0);
      swift_allocObject();
      v32 = swift_retain();
      *(_QWORD *)(a2 + v18) = sub_1BDDA1768(v32);
      swift_release();
    }
    v33 = *(_QWORD *)(a2 + v18);
    v34 = v51;
    sub_1BDDA2E8C((uint64_t)v31, v51, type metadata accessor for Proto_Version);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v34, 0, 1, v50);
    v35 = v52;
    sub_1BDDA2EF0(v34, v52, &qword_1ED6F37A8);
    v36 = v33 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v35, v36, &qword_1ED6F37A8);
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    v37 = swift_bridgeObjectRetain();
    v38 = v48;
    v39 = sub_1BE0FBE8C(v37, v23, type metadata accessor for Proto_Set.Element, (void (*)(BOOL, unint64_t, uint64_t))sub_1BDE22558, type metadata accessor for Proto4_Set.Element, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1BE0F440C);
    swift_bridgeObjectRelease();
    swift_release();
    if (v38)
    {
      return sub_1BDD9C3E0(a2, type metadata accessor for Proto_Set);
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set._StorageClass(0);
        swift_allocObject();
        v41 = swift_retain();
        *(_QWORD *)(a2 + v18) = sub_1BDDA1768(v41);
        swift_release();
      }
      v42 = (uint64_t *)(*(_QWORD *)(a2 + v18)
                      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
      swift_beginAccess();
      *v42 = v39;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BE0F440C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  char *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v115 = a3;
  v123 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v103 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v102 = (char *)&v91 - v9;
  v111 = type metadata accessor for Proto4_Version(0);
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v100 = (uint64_t *)((char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = type metadata accessor for Proto_Version(0);
  v105 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v112 = (uint64_t *)((char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  v13 = MEMORY[0x1E0C80A78](v12);
  v104 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v109 = (uint64_t)&v91 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v17 = MEMORY[0x1E0C80A78](v16);
  v95 = (uint64_t)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v94 = (uint64_t)&v91 - v19;
  v121 = type metadata accessor for Proto4_CRDT(0);
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v107 = (uint64_t)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for Proto_CRDT(0);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v108 = (uint64_t)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCD0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v106 = (uint64_t)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v119 = (uint64_t)&v91 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v27 = MEMORY[0x1E0C80A78](v26);
  v99 = (uint64_t)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v98 = (uint64_t)&v91 - v29;
  v30 = type metadata accessor for Proto4_Value(0);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v113 = (uint64_t)&v91 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for Proto_Value(0);
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v114 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE00);
  v35 = MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v91 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v91 - v38;
  sub_1BE1B20E4();
  v40 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  if (qword_1ED6EF6F0 != -1)
    swift_once();
  v41 = a4;
  v116 = v40;
  *(_QWORD *)(a4 + v40) = qword_1ED6EF6E0;
  v42 = *(int *)(type metadata accessor for Proto4_Set.Element(0) + 20);
  v118 = a1;
  v117 = v42;
  v43 = *(_QWORD *)(a1 + v42);
  v44 = v43 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v44, (uint64_t)v39, &qword_1EF52CE00);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v44) = v45(v39, 1, v30);
  swift_retain();
  sub_1BDD86E30((uint64_t)v39, &qword_1EF52CE00);
  if ((_DWORD)v44 == 1)
  {
    v46 = v122;
    v47 = v41;
    v48 = v121;
  }
  else
  {
    v49 = v43 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
    swift_beginAccess();
    sub_1BDD86DEC(v49, (uint64_t)v37, &qword_1EF52CE00);
    v50 = v45(v37, 1, v30);
    v51 = v122;
    v52 = v41;
    if (v50 == 1)
    {
      v53 = v113;
      sub_1BE1B20E4();
      v54 = *(int *)(v30 + 20);
      v55 = (uint64_t)v114;
      if (qword_1EF52BD30 != -1)
        swift_once();
      *(_QWORD *)(v53 + v54) = qword_1EF52C638;
      swift_retain();
      sub_1BDD86E30((uint64_t)v37, &qword_1EF52CE00);
    }
    else
    {
      v53 = v113;
      sub_1BDDA2E8C((uint64_t)v37, v113, type metadata accessor for Proto4_Value);
      v55 = (uint64_t)v114;
    }
    sub_1BE0F1BC0(v53, v55);
    v46 = v51;
    sub_1BDD9C3E0(v53, type metadata accessor for Proto4_Value);
    v48 = v121;
    if (v51)
      goto LABEL_22;
    v56 = v116;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set.Element._StorageClass(0);
      swift_allocObject();
      v57 = swift_retain();
      *(_QWORD *)(v41 + v56) = sub_1BE13500C(v57);
      swift_release();
    }
    v47 = v41;
    v58 = *(_QWORD *)(v41 + v56);
    v59 = v98;
    sub_1BDDA2E8C(v55, v98, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v96 + 56))(v59, 0, 1, v97);
    v60 = v99;
    sub_1BDDA2EF0(v59, v99, &qword_1ED6F3770);
    v61 = v58 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v60, v61, &qword_1ED6F3770);
    swift_endAccess();
    swift_release();
    v43 = *(_QWORD *)(v118 + v117);
  }
  v62 = v43 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  v63 = v119;
  sub_1BDD86DEC(v62, v119, &qword_1EF52CCD0);
  v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
  LODWORD(v62) = v64(v63, 1, v48);
  sub_1BDD86E30(v63, &qword_1EF52CCD0);
  if ((_DWORD)v62 != 1)
  {
    v65 = v43
        + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
    swift_beginAccess();
    v66 = v106;
    sub_1BDD86DEC(v65, v106, &qword_1EF52CCD0);
    v52 = v47;
    if (v64(v66, 1, v48) == 1)
    {
      v67 = v107;
      sub_1BE1B20E4();
      v68 = *(int *)(v48 + 20);
      if (qword_1EF52BD40 != -1)
        swift_once();
      *(_QWORD *)(v67 + v68) = qword_1EF52C640;
      swift_retain();
      sub_1BDD86E30(v66, &qword_1EF52CCD0);
    }
    else
    {
      v67 = v107;
      sub_1BDDA2E8C(v66, v107, type metadata accessor for Proto4_CRDT);
    }
    sub_1BE0F0A28(v67);
    sub_1BDD9C3E0(v67, type metadata accessor for Proto4_CRDT);
    if (!v46)
    {
      v70 = v116;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set.Element._StorageClass(0);
        swift_allocObject();
        v71 = swift_retain();
        *(_QWORD *)(v47 + v70) = sub_1BE13500C(v71);
        swift_release();
      }
      v72 = *(_QWORD *)(v47 + v70);
      v73 = v94;
      sub_1BDDA2E8C(v108, v94, type metadata accessor for Proto_CRDT);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v73, 0, 1, v93);
      v74 = v95;
      sub_1BDDA2EF0(v73, v95, &qword_1ED6F3728);
      v75 = v72
          + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v74, v75, &qword_1ED6F3728);
      swift_endAccess();
      swift_release();
      goto LABEL_26;
    }
LABEL_22:
    result = sub_1BDD9C3E0(v52, type metadata accessor for Proto_Set.Element);
    *v115 = v46;
    return result;
  }
  v52 = v47;
LABEL_26:
  v76 = *(_QWORD *)(v118 + v117);
  v77 = v76
      + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
  swift_beginAccess();
  v78 = v109;
  sub_1BDD86DEC(v77, v109, &qword_1EF52CE20);
  v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
  v80 = v111;
  LODWORD(v77) = v79(v78, 1, v111);
  result = sub_1BDD86E30(v78, &qword_1EF52CE20);
  if ((_DWORD)v77 != 1)
  {
    v81 = v76
        + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
    swift_beginAccess();
    v82 = v104;
    sub_1BDD86DEC(v81, v104, &qword_1EF52CE20);
    if (v79(v82, 1, v80) == 1)
    {
      v83 = v100;
      *v100 = MEMORY[0x1E0DEE9D8];
      sub_1BE1B20E4();
      sub_1BDD86E30(v82, &qword_1EF52CE20);
    }
    else
    {
      v83 = v100;
      sub_1BDDA2E8C(v82, (uint64_t)v100, type metadata accessor for Proto4_Version);
    }
    v84 = (uint64_t)v103;
    v85 = (uint64_t)v102;
    v86 = v101;
    sub_1BE0F86E8(v83, v112);
    sub_1BDD9C3E0((uint64_t)v83, type metadata accessor for Proto4_Version);
    v87 = v116;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set.Element._StorageClass(0);
      swift_allocObject();
      v88 = swift_retain();
      *(_QWORD *)(v52 + v87) = sub_1BE13500C(v88);
      swift_release();
    }
    v89 = *(_QWORD *)(v52 + v87);
    sub_1BDDA2E8C((uint64_t)v112, v85, type metadata accessor for Proto_Version);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v105 + 56))(v85, 0, 1, v86);
    sub_1BDDA2EF0(v85, v84, &qword_1ED6F37A8);
    v90 = v89
        + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v84, v90, &qword_1ED6F37A8);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE0F5088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v60 = (uint64_t)&v54 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v9);
  v57 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for Proto_Version(0);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v12 = (uint64_t *)((char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = type metadata accessor for Proto4_Version(0);
  v59 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v61 = (uint64_t *)((char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1BE1B1F58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v18 = *(int *)(type metadata accessor for Proto4_Set(0) + 20);
  if (qword_1EF52BDA0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v18) = qword_1EF52C658;
  v19 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_Set(0) + 20));
  result = swift_beginAccess();
  v62 = v19;
  v21 = *(_QWORD *)(v19 + 16);
  if ((v21 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v54 = v7;
  v22 = v64;
  result = swift_beginAccess();
  v23 = *(_QWORD *)(v22 + 16);
  if (v21 >= *(_QWORD *)(v23 + 16))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, v23+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v21, v14);
  swift_retain();
  v24 = sub_1BDEE7C7C();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Set._StorageClass(0);
    swift_allocObject();
    v27 = swift_retain();
    *(_QWORD *)(a2 + v18) = sub_1BDE4063C(v27);
    swift_release();
  }
  v28 = *(_QWORD *)(a2 + v18);
  swift_beginAccess();
  v29 = *(_QWORD *)(v28 + 16);
  v30 = *(_QWORD *)(v28 + 24);
  *(_QWORD *)(v28 + 16) = v24;
  *(_QWORD *)(v28 + 24) = v26;
  sub_1BDDB796C(v29, v30);
  v31 = v62 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  v32 = v31;
  v33 = v57;
  sub_1BDD86DEC(v32, v57, &qword_1ED6F37A8);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v33, 1, v56);
  v35 = (uint64_t)v54;
  if (v34 == 1)
  {
    v36 = MEMORY[0x1E0DEE9D8];
    *v12 = MEMORY[0x1E0DEE9D8];
    v12[1] = v36;
    sub_1BE1B20E4();
    sub_1BDD86E30(v33, &qword_1ED6F37A8);
  }
  else
  {
    sub_1BDDA2E8C(v33, (uint64_t)v12, type metadata accessor for Proto_Version);
  }
  v37 = v61;
  sub_1BE1B20E4();
  v38 = *v12;
  v39 = v12[1];
  v40 = v64;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = v58;
  v42 = sub_1BE0FB5F4(v38, v39, v40);
  v58 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *v37 = v42;
  sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_Version);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Set._StorageClass(0);
    swift_allocObject();
    v43 = swift_retain();
    *(_QWORD *)(a2 + v18) = sub_1BDE4063C(v43);
    swift_release();
  }
  v44 = *(_QWORD *)(a2 + v18);
  v45 = v60;
  sub_1BDDA2E8C((uint64_t)v61, v60, type metadata accessor for Proto4_Version);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v45, 0, 1, v63);
  sub_1BDDA2EF0(v45, v35, &qword_1EF52CE20);
  v46 = v44 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v35, v46, &qword_1EF52CE20);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v47 = v64;
  swift_retain();
  v48 = swift_bridgeObjectRetain();
  v49 = v47;
  v50 = v58;
  v51 = sub_1BE0EEB34(v48, v49);
  swift_bridgeObjectRelease();
  if (v50)
    return sub_1BDD9C3E0(a2, type metadata accessor for Proto4_Set);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Set._StorageClass(0);
    swift_allocObject();
    v52 = swift_retain();
    *(_QWORD *)(a2 + v18) = sub_1BDE4063C(v52);
    swift_release();
  }
  v53 = (uint64_t *)(*(_QWORD *)(a2 + v18)
                  + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__insertions);
  swift_beginAccess();
  *v53 = v51;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0F56C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v117 = a3;
  v126 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  v7 = MEMORY[0x1E0C80A78](v6);
  v104 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v107 = (uint64_t)&v94 - v9;
  v123 = type metadata accessor for Proto_Version(0);
  v112 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v103 = (uint64_t *)((char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v114 = type metadata accessor for Proto4_Version(0);
  v106 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v113 = (uint64_t *)((char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v105 = (uint64_t)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v111 = (uint64_t)&v94 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCD0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v98 = (uint64_t)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v97 = (uint64_t)&v94 - v19;
  v122 = type metadata accessor for Proto_CRDT(0);
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v109 = (uint64_t)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for Proto4_CRDT(0);
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v110 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v23 = MEMORY[0x1E0C80A78](v22);
  v108 = (uint64_t)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v120 = (uint64_t)&v94 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE00);
  v27 = MEMORY[0x1E0C80A78](v26);
  v102 = (uint64_t)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v101 = (uint64_t)&v94 - v29;
  v30 = type metadata accessor for Proto_Value(0);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v116 = (uint64_t)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for Proto4_Value(0);
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v115 = (uint64_t)&v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v35 = MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v94 - v38;
  sub_1BE1B20E4();
  v40 = *(int *)(type metadata accessor for Proto4_Set.Element(0) + 20);
  if (qword_1EF52BDB8 != -1)
    swift_once();
  v125 = a4;
  v127 = v40;
  *(_QWORD *)(a4 + v40) = qword_1EF52C660;
  v41 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  v119 = a1;
  v118 = v41;
  v42 = *(_QWORD *)(a1 + v41);
  v43 = v42 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v43, (uint64_t)v39, &qword_1ED6F3770);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v43) = v44(v39, 1, v30);
  swift_retain();
  sub_1BDD86E30((uint64_t)v39, &qword_1ED6F3770);
  if ((_DWORD)v43 == 1)
  {
    v45 = v124;
    v46 = v123;
    v47 = v122;
  }
  else
  {
    v48 = v42 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
    swift_beginAccess();
    sub_1BDD86DEC(v48, (uint64_t)v37, &qword_1ED6F3770);
    if (v44(v37, 1, v30) == 1)
    {
      v49 = v116;
      sub_1BE1B20E4();
      v50 = *(int *)(v30 + 20);
      v51 = v124;
      v52 = v125;
      v53 = v127;
      if (qword_1ED6F2718 != -1)
        swift_once();
      *(_QWORD *)(v49 + v50) = qword_1ED6F2708;
      swift_retain();
      sub_1BDD86E30((uint64_t)v37, &qword_1ED6F3770);
      v46 = v123;
    }
    else
    {
      v49 = v116;
      sub_1BDDA2E8C((uint64_t)v37, v116, type metadata accessor for Proto_Value);
      v51 = v124;
      v52 = v125;
      v46 = v123;
      v53 = v127;
    }
    v54 = v115;
    sub_1BE0F2620(v49, v115);
    v45 = v51;
    sub_1BDD9C3E0(v49, type metadata accessor for Proto_Value);
    v47 = v122;
    if (v51)
      goto LABEL_21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto4_Set.Element._StorageClass(0);
      swift_allocObject();
      v55 = swift_retain();
      *(_QWORD *)(v52 + v53) = sub_1BDE41658(v55);
      swift_release();
    }
    v56 = *(_QWORD *)(v52 + v53);
    v57 = v101;
    sub_1BDDA2E8C(v54, v101, type metadata accessor for Proto4_Value);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v57, 0, 1, v100);
    v58 = v102;
    sub_1BDDA2EF0(v57, v102, &qword_1EF52CE00);
    v59 = v56 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v58, v59, &qword_1EF52CE00);
    swift_endAccess();
    swift_release();
    v42 = *(_QWORD *)(v119 + v118);
  }
  v60 = v42 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  v61 = v120;
  sub_1BDD86DEC(v60, v120, &qword_1ED6F3728);
  v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
  LODWORD(v60) = v62(v61, 1, v47);
  sub_1BDD86E30(v61, &qword_1ED6F3728);
  if ((_DWORD)v60 != 1)
  {
    v63 = v42 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
    swift_beginAccess();
    v64 = v108;
    sub_1BDD86DEC(v63, v108, &qword_1ED6F3728);
    if (v62(v64, 1, v47) == 1)
    {
      v65 = v109;
      sub_1BE1B20E4();
      v66 = *(int *)(v47 + 20);
      v52 = v125;
      v67 = v127;
      if (qword_1ED6F2E18 != -1)
        swift_once();
      *(_QWORD *)(v65 + v66) = qword_1ED6F2E08;
      swift_retain();
      sub_1BDD86E30(v64, &qword_1ED6F3728);
    }
    else
    {
      v65 = v109;
      sub_1BDDA2E8C(v64, v109, type metadata accessor for Proto_CRDT);
      v52 = v125;
      v67 = v127;
    }
    sub_1BE0F14DC(v65);
    sub_1BDD9C3E0(v65, type metadata accessor for Proto_CRDT);
    if (v45)
    {
LABEL_21:
      result = sub_1BDD9C3E0(v52, type metadata accessor for Proto4_Set.Element);
      *v117 = v45;
      return result;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto4_Set.Element._StorageClass(0);
      swift_allocObject();
      v69 = swift_retain();
      *(_QWORD *)(v52 + v67) = sub_1BDE41658(v69);
      swift_release();
    }
    v70 = *(_QWORD *)(v52 + v67);
    v71 = v97;
    sub_1BDDA2E8C(v110, v97, type metadata accessor for Proto4_CRDT);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v71, 0, 1, v96);
    v72 = v98;
    sub_1BDDA2EF0(v71, v98, &qword_1EF52CCD0);
    v73 = v70
        + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v72, v73, &qword_1EF52CCD0);
    swift_endAccess();
    swift_release();
  }
  v74 = *(_QWORD *)(v119 + v118);
  v75 = v74 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  v76 = v111;
  sub_1BDD86DEC(v75, v111, &qword_1ED6F37A8);
  v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
  LODWORD(v75) = v77(v76, 1, v46);
  result = sub_1BDD86E30(v76, &qword_1ED6F37A8);
  if ((_DWORD)v75 != 1)
  {
    v78 = v74
        + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
    swift_beginAccess();
    v79 = v105;
    sub_1BDD86DEC(v78, v105, &qword_1ED6F37A8);
    if (v77(v79, 1, v46) == 1)
    {
      v80 = MEMORY[0x1E0DEE9D8];
      v81 = v103;
      *v103 = MEMORY[0x1E0DEE9D8];
      v81[1] = v80;
      sub_1BE1B20E4();
      sub_1BDD86E30(v79, &qword_1ED6F37A8);
    }
    else
    {
      v81 = v103;
      sub_1BDDA2E8C(v79, (uint64_t)v103, type metadata accessor for Proto_Version);
    }
    v82 = (uint64_t)v104;
    v83 = v125;
    v84 = v113;
    sub_1BE1B20E4();
    v85 = *v81;
    v86 = v81[1];
    v87 = v126;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v88 = sub_1BE0FB5F4(v85, v86, v87);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *v84 = v88;
    sub_1BDD9C3E0((uint64_t)v81, type metadata accessor for Proto_Version);
    v89 = v127;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto4_Set.Element._StorageClass(0);
      swift_allocObject();
      v90 = swift_retain();
      *(_QWORD *)(v83 + v89) = sub_1BDE41658(v90);
      swift_release();
    }
    v91 = *(_QWORD *)(v83 + v89);
    v92 = v107;
    sub_1BDDA2E8C((uint64_t)v113, v107, type metadata accessor for Proto4_Version);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v92, 0, 1, v114);
    sub_1BDDA2EF0(v92, v82, &qword_1EF52CE20);
    v93 = v91
        + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v82, v93, &qword_1EF52CE20);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE0F63D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCD0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v30 - v11;
  v13 = type metadata accessor for Proto4_CRDT(0);
  v33 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  result = type metadata accessor for Proto4_Struct.Field(0);
  v17 = *(int *)(result + 20);
  if (qword_1EF52BDD8 != -1)
    result = swift_once();
  *(_QWORD *)(a4 + v17) = qword_1EF52C668;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  result = swift_beginAccess();
  v18 = *(_QWORD *)(a3 + 32);
  if (*(_QWORD *)(v18 + 16) <= a1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v31 = v13;
  v32 = v10;
  v19 = v18 + 16 * a1;
  v21 = *(_QWORD *)(v19 + 32);
  v20 = *(_QWORD *)(v19 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Struct.Field._StorageClass(0);
    swift_allocObject();
    v22 = swift_retain();
    *(_QWORD *)(a4 + v17) = sub_1BDE43040(v22);
    swift_release();
  }
  v23 = *(_QWORD *)(a4 + v17);
  swift_beginAccess();
  *(_QWORD *)(v23 + 16) = v21;
  *(_QWORD *)(v23 + 24) = v20;
  swift_bridgeObjectRelease();
  v24 = v35;
  sub_1BE0F14DC(v34);
  if (v24)
    return sub_1BDD9C3E0(a4, type metadata accessor for Proto4_Struct.Field);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Struct.Field._StorageClass(0);
    swift_allocObject();
    v25 = swift_retain();
    *(_QWORD *)(a4 + v17) = sub_1BDE43040(v25);
    swift_release();
  }
  v26 = *(_QWORD *)(a4 + v17);
  sub_1BDDA2E8C((uint64_t)v15, (uint64_t)v12, type metadata accessor for Proto4_CRDT);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v12, 0, 1, v31);
  v27 = (uint64_t)v12;
  v28 = (uint64_t)v32;
  sub_1BDDA2EF0(v27, (uint64_t)v32, &qword_1EF52CCD0);
  v29 = v26
      + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v28, v29, &qword_1EF52CCD0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE0F66CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v64 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v67 = (uint64_t)&v57 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  v9 = MEMORY[0x1E0C80A78](v8);
  v63 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v57 - v11;
  v65 = type metadata accessor for Proto4_Version(0);
  v60 = *(_QWORD *)(v65 - 8);
  v13 = MEMORY[0x1E0C80A78](v65);
  v58 = (uint64_t *)((char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v57 - v15);
  v66 = type metadata accessor for Proto_Version(0);
  v62 = *(_QWORD *)(v66 - 8);
  v17 = MEMORY[0x1E0C80A78](v66);
  v59 = (uint64_t *)((char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v61 = (uint64_t *)((char *)&v57 - v19);
  sub_1BE1B20E4();
  v20 = *(int *)(type metadata accessor for Proto_Sequence(0) + 20);
  if (qword_1ED6EF5C0 != -1)
    swift_once();
  *(_QWORD *)(a2 + v20) = qword_1ED6EF5B0;
  v21 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto4_Sequence(0) + 20));
  swift_beginAccess();
  v22 = *(_QWORD *)(v21 + 16);
  v23 = *(_QWORD *)(v21 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v24 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + v20) = sub_1BE13BE10(v24);
    swift_release();
  }
  v25 = *(_QWORD *)(a2 + v20);
  swift_beginAccess();
  *(_QWORD *)(v25 + 16) = v22;
  *(_QWORD *)(v25 + 24) = v23;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v26 = v69;
  swift_retain();
  v27 = swift_bridgeObjectRetain();
  v28 = v68;
  v29 = sub_1BE0FAE40(v27, v26);
  swift_bridgeObjectRelease();
  swift_release();
  if (v28)
    return sub_1BDD9C3E0(a2, type metadata accessor for Proto_Sequence);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v31 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + v20) = sub_1BE13BE10(v31);
    swift_release();
  }
  v32 = *(_QWORD *)(a2 + v20);
  swift_beginAccess();
  *(_QWORD *)(v32 + 32) = v29;
  swift_bridgeObjectRelease();
  v33 = v21 + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v33, (uint64_t)v12, &qword_1EF52CE20);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  if (v34(v12, 1, v65) == 1)
  {
    *v16 = MEMORY[0x1E0DEE9D8];
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v12, &qword_1EF52CE20);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v16, type metadata accessor for Proto4_Version);
  }
  v68 = 0;
  v35 = v61;
  sub_1BE0F86E8(v16, v61);
  sub_1BDD9C3E0((uint64_t)v16, type metadata accessor for Proto4_Version);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v36 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + v20) = sub_1BE13BE10(v36);
    swift_release();
  }
  v37 = *(_QWORD *)(a2 + v20);
  v38 = (uint64_t)v35;
  v39 = v67;
  sub_1BDDA2E8C(v38, v67, type metadata accessor for Proto_Version);
  v40 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56);
  v40(v39, 0, 1, v66);
  v41 = v64;
  sub_1BDDA2EF0(v39, v64, &qword_1ED6F37A8);
  v42 = v37 + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v41, v42, &qword_1ED6F37A8);
  swift_endAccess();
  swift_release();
  v43 = v21
      + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedByVersion;
  swift_beginAccess();
  v44 = v43;
  v45 = v63;
  sub_1BDD86DEC(v44, v63, &qword_1EF52CE20);
  if (v34((char *)v45, 1, v65) == 1)
  {
    v46 = v58;
    *v58 = MEMORY[0x1E0DEE9D8];
    sub_1BE1B20E4();
    sub_1BDD86E30(v45, &qword_1EF52CE20);
  }
  else
  {
    v46 = v58;
    sub_1BDDA2E8C(v45, (uint64_t)v58, type metadata accessor for Proto4_Version);
  }
  v47 = v69;
  v48 = v59;
  sub_1BE0F86E8(v46, v59);
  sub_1BDD9C3E0((uint64_t)v46, type metadata accessor for Proto4_Version);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v49 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + v20) = sub_1BE13BE10(v49);
    swift_release();
  }
  v50 = *(_QWORD *)(a2 + v20);
  v51 = v67;
  sub_1BDDA2E8C((uint64_t)v48, v67, type metadata accessor for Proto_Version);
  v40(v51, 0, 1, v66);
  sub_1BDDA2EF0(v51, v41, &qword_1ED6F37A8);
  v52 = v50
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v41, v52, &qword_1ED6F37A8);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  v53 = swift_bridgeObjectRetain();
  v54 = sub_1BE0FA248(v53, v47, a2);
  swift_bridgeObjectRelease();
  swift_release();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v55 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + v20) = sub_1BE13BE10(v55);
    swift_release();
  }
  v56 = *(_QWORD *)(a2 + v20);
  swift_beginAccess();
  *(_QWORD *)(v56 + 40) = v54;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0F6ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t *v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _DWORD *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t *v95;
  unsigned int (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v100 = a3;
  v93 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v7 = MEMORY[0x1E0C80A78](v6);
  v98 = (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v99 = (char *)&v92 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v108 = (uint64_t)&v92 - v12;
  MEMORY[0x1E0C80A78](v11);
  v103 = (char *)&v92 - v13;
  v110 = type metadata accessor for Proto_Timestamp(0);
  v106 = *(_QWORD *)(v110 - 8);
  v14 = MEMORY[0x1E0C80A78](v110);
  v94 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v95 = (uint64_t *)((char *)&v92 - v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3CD0);
  MEMORY[0x1E0C80A78](v17);
  v101 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1BE1B1F58();
  v102 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE60);
  v22 = MEMORY[0x1E0C80A78](v21);
  v97 = (uint64_t)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v92 - v24;
  v26 = type metadata accessor for Proto4_IndexedTimestamp(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v104 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v31 = (uint64_t *)((char *)&v92 - v30);
  sub_1BE1B20E4();
  v32 = *(int *)(type metadata accessor for Proto_Subsequence(0) + 20);
  if (qword_1ED6EF680 != -1)
    swift_once();
  *(_QWORD *)(a4 + v32) = qword_1ED6EF678;
  v33 = *(int *)(type metadata accessor for Proto4_Subsequence(0) + 20);
  v109 = a1;
  v107 = v33;
  v34 = *(_QWORD *)(a1 + v33)
      + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  sub_1BDD86DEC(v34, (uint64_t)v25, &qword_1EF52CE60);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v36 = v35(v25, 1, v26);
  v96 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v35;
  if (v36 == 1)
  {
    *v31 = 0;
    v31[1] = 0;
    swift_retain();
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v25, &qword_1EF52CE60);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v25, (uint64_t)v31, type metadata accessor for Proto4_IndexedTimestamp);
    swift_retain();
  }
  v37 = (uint64_t)v103;
  v38 = *v31;
  result = sub_1BDD9C3E0((uint64_t)v31, type metadata accessor for Proto4_IndexedTimestamp);
  v40 = v101;
  v41 = v102;
  if (!v38)
  {
    sub_1BE1B1EEC();
    v45 = v92;
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v40, 1, v92);
    v43 = v104;
    if ((_DWORD)result != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v20, v40, v45);
      v46 = v45;
      v44 = sub_1BE0EF04C((uint64_t)v20);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v46);
      goto LABEL_13;
    }
LABEL_36:
    __break(1u);
    return result;
  }
  v42 = v38 - 1;
  v43 = v104;
  if (__OFSUB__(v38, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if ((v42 & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v42 >= *(_QWORD *)(*(_QWORD *)v93 + 16))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v44 = *(_QWORD *)(*(_QWORD *)v93 + 8 * v42 + 32);
LABEL_13:
  v47 = *(_QWORD *)(a4 + v32)
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  sub_1BDD86DEC(v47, v37, &qword_1ED6F3850);
  v48 = v110;
  v104 = *(char **)(v106 + 48);
  v49 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v104)(v37, 1, v110);
  v50 = v95;
  if (v49 == 1)
  {
    *v95 = 0;
    v50[1] = 0;
    sub_1BE1B20E4();
    sub_1BDD86E30(v37, &qword_1ED6F3850);
  }
  else
  {
    sub_1BDDA2E8C(v37, (uint64_t)v95, type metadata accessor for Proto_Timestamp);
  }
  v51 = v26;
  *v50 = v44;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v53 = (uint64_t)v99;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    type metadata accessor for Proto_Subsequence._StorageClass(0);
    swift_allocObject();
    v54 = swift_retain();
    v55 = sub_1BE148B38(v54);
    v48 = v110;
    swift_release();
    *(_QWORD *)(a4 + v32) = v55;
    swift_release();
  }
  v56 = *(_QWORD *)(a4 + v32);
  v57 = v108;
  sub_1BDDA2E8C((uint64_t)v50, v108, type metadata accessor for Proto_Timestamp);
  v58 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56);
  v58(v57, 0, 1, v48);
  sub_1BDDA2EF0(v57, v53, &qword_1ED6F3850);
  v59 = v56
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v53, v59, &qword_1ED6F3850);
  swift_endAccess();
  swift_release();
  v60 = *(_QWORD *)(v109 + v107)
      + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  v61 = v60;
  v62 = v97;
  sub_1BDD86DEC(v61, v97, &qword_1EF52CE60);
  if (v96(v62, 1, v51) == 1)
  {
    *v43 = 0;
    v43[1] = 0;
    sub_1BE1B20E4();
    sub_1BDD86E30(v62, &qword_1EF52CE60);
  }
  else
  {
    sub_1BDDA2E8C(v62, (uint64_t)v43, type metadata accessor for Proto4_IndexedTimestamp);
  }
  v63 = v94;
  v64 = v43[1];
  sub_1BDD9C3E0((uint64_t)v43, type metadata accessor for Proto4_IndexedTimestamp);
  v65 = *(_QWORD *)(a4 + v32)
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  v66 = v98;
  sub_1BDD86DEC(v65, v98, &qword_1ED6F3850);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v104)(v66, 1, v110) == 1)
  {
    *v63 = 0;
    v63[1] = 0;
    sub_1BE1B20E4();
    sub_1BDD86E30(v66, &qword_1ED6F3850);
  }
  else
  {
    sub_1BDDA2E8C(v66, (uint64_t)v63, type metadata accessor for Proto_Timestamp);
  }
  v63[1] = v64;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Subsequence._StorageClass(0);
    swift_allocObject();
    v67 = swift_retain();
    v68 = sub_1BE148B38(v67);
    swift_release();
    *(_QWORD *)(a4 + v32) = v68;
    swift_release();
  }
  v69 = *(_QWORD *)(a4 + v32);
  v70 = (uint64_t)v63;
  v71 = v108;
  sub_1BDDA2E8C(v70, v108, type metadata accessor for Proto_Timestamp);
  v58(v71, 0, 1, v110);
  sub_1BDDA2EF0(v71, v53, &qword_1ED6F3850);
  v72 = v69
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v53, v72, &qword_1ED6F3850);
  swift_endAccess();
  swift_release();
  v73 = *(_QWORD *)(v109 + v107);
  v74 = (int *)(v73
              + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__length);
  swift_beginAccess();
  v75 = *v74;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Subsequence._StorageClass(0);
    swift_allocObject();
    v76 = swift_retain();
    v77 = sub_1BE148B38(v76);
    swift_release();
    *(_QWORD *)(a4 + v32) = v77;
    swift_release();
  }
  v78 = (_DWORD *)(*(_QWORD *)(a4 + v32)
                 + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__length);
  swift_beginAccess();
  *v78 = v75;
  v79 = (uint64_t *)(v73
                  + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy);
  v80 = swift_beginAccess();
  v81 = *v79;
  MEMORY[0x1E0C80A78](v80);
  v82 = v100;
  *(&v92 - 2) = v105;
  *(&v92 - 1) = v82;
  swift_bridgeObjectRetain();
  v83 = sub_1BDFCDEB4((void (*)(uint64_t))sub_1BE0FBE70, (uint64_t)(&v92 - 4), v81);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Subsequence._StorageClass(0);
    swift_allocObject();
    v84 = swift_retain();
    v85 = sub_1BE148B38(v84);
    swift_release();
    *(_QWORD *)(a4 + v32) = v85;
    swift_release();
  }
  v86 = (uint64_t *)(*(_QWORD *)(a4 + v32)
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy);
  swift_beginAccess();
  *v86 = v83;
  swift_bridgeObjectRelease();
  v87 = (uint64_t *)(v73
                  + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__child);
  swift_beginAccess();
  v88 = *v87;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Subsequence._StorageClass(0);
    swift_allocObject();
    v89 = swift_retain();
    v90 = sub_1BE148B38(v89);
    swift_release();
    *(_QWORD *)(a4 + v32) = v90;
    swift_release();
  }
  v91 = (_QWORD *)(*(_QWORD *)(a4 + v32)
                 + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__child);
  swift_beginAccess();
  *v91 = v88;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0F7928@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3CD0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BE1B1F58();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Proto_Timestamp(0);
  *a3 = 0;
  a3[1] = 0;
  result = sub_1BE1B20E4();
  v14 = *a1;
  if (*a1)
  {
    v15 = __OFSUB__(v14, 1);
    v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
    }
    else if ((v16 & 0x8000000000000000) == 0)
    {
      if (v16 < *(_QWORD *)(*(_QWORD *)a2 + 16))
      {
        v17 = *(_QWORD *)(*(_QWORD *)a2 + 8 * v16 + 32);
LABEL_8:
        v18 = a1[1];
        *a3 = v17;
        a3[1] = v18;
        return result;
      }
      goto LABEL_11;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1BE1B1EEC();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v17 = sub_1BE0EF04C((uint64_t)v12);
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1BE0F7AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v58 = (uint64_t)&v52 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  v9 = MEMORY[0x1E0C80A78](v8);
  v56 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v52 - v11;
  v61 = type metadata accessor for Proto4_Version(0);
  v52 = *(_QWORD *)(v61 - 8);
  v13 = MEMORY[0x1E0C80A78](v61);
  v55 = (uint64_t *)((char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v52 - v15);
  v63 = type metadata accessor for Proto_Version(0);
  v54 = *(_QWORD *)(v63 - 8);
  v17 = MEMORY[0x1E0C80A78](v63);
  v57 = (uint64_t *)((char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v53 = (uint64_t *)((char *)&v52 - v19);
  v20 = sub_1BE1B1F58();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v24 = *(int *)(type metadata accessor for Proto_Counter(0) + 20);
  if (qword_1EF52BFB8 != -1)
    swift_once();
  *(_QWORD *)(a2 + v24) = qword_1EF530758;
  v25 = *(int *)(type metadata accessor for Proto4_Counter(0) + 20);
  v62 = a1;
  v60 = v25;
  v26 = *(_QWORD *)(a1 + v25);
  swift_beginAccess();
  v27 = *(_QWORD *)(v26 + 16);
  v28 = *(_QWORD *)(v26 + 24);
  swift_retain();
  sub_1BDDB6CA4(v27, v28);
  sub_1BDD92AA8(v27, v28);
  v29 = sub_1BE0EF04C((uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Counter._StorageClass(0);
    swift_allocObject();
    v30 = swift_retain();
    *(_QWORD *)(a2 + v24) = sub_1BE132E6C(v30);
    swift_release();
  }
  v31 = *(_QWORD *)(a2 + v24);
  swift_beginAccess();
  *(_QWORD *)(v31 + 16) = v29;
  v32 = *(_QWORD *)(v62 + v60)
      + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive;
  swift_beginAccess();
  sub_1BDD86DEC(v32, (uint64_t)v12, &qword_1EF52CE20);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v34 = v33(v12, 1, v61);
  v35 = MEMORY[0x1E0DEE9D8];
  v36 = (uint64_t)v59;
  if (v34 == 1)
  {
    *v16 = MEMORY[0x1E0DEE9D8];
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v12, &qword_1EF52CE20);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v16, type metadata accessor for Proto4_Version);
  }
  v37 = v53;
  sub_1BE0F86E8(v16, v53);
  sub_1BDD9C3E0((uint64_t)v16, type metadata accessor for Proto4_Version);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Counter._StorageClass(0);
    swift_allocObject();
    v38 = swift_retain();
    *(_QWORD *)(a2 + v24) = sub_1BE132E6C(v38);
    swift_release();
  }
  v39 = *(_QWORD *)(a2 + v24);
  v40 = v58;
  sub_1BDDA2E8C((uint64_t)v37, v58, type metadata accessor for Proto_Version);
  v41 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56);
  v41(v40, 0, 1, v63);
  sub_1BDDA2EF0(v40, v36, &qword_1ED6F37A8);
  v42 = v39 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v36, v42, &qword_1ED6F37A8);
  swift_endAccess();
  swift_release();
  v43 = *(_QWORD *)(v62 + v60)
      + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative;
  swift_beginAccess();
  v44 = v43;
  v45 = v56;
  sub_1BDD86DEC(v44, v56, &qword_1EF52CE20);
  if (v33((char *)v45, 1, v61) == 1)
  {
    v46 = v55;
    *v55 = v35;
    sub_1BE1B20E4();
    sub_1BDD86E30(v45, &qword_1EF52CE20);
  }
  else
  {
    v46 = v55;
    sub_1BDDA2E8C(v45, (uint64_t)v55, type metadata accessor for Proto4_Version);
  }
  v47 = v57;
  sub_1BE0F86E8(v46, v57);
  sub_1BDD9C3E0((uint64_t)v46, type metadata accessor for Proto4_Version);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Counter._StorageClass(0);
    swift_allocObject();
    v48 = swift_retain();
    *(_QWORD *)(a2 + v24) = sub_1BE132E6C(v48);
    swift_release();
  }
  v49 = *(_QWORD *)(a2 + v24);
  sub_1BDDA2E8C((uint64_t)v47, v40, type metadata accessor for Proto_Version);
  v41(v40, 0, 1, v63);
  sub_1BDDA2EF0(v40, v36, &qword_1ED6F37A8);
  v50 = v49 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v36, v50, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE0F8174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v62 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v60 = (uint64_t)&v56 - v9;
  v61 = type metadata accessor for Proto_Version(0);
  v57 = *(_QWORD *)(v61 - 8);
  v10 = MEMORY[0x1E0C80A78](v61);
  v64 = (uint64_t *)((char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v56 - v12);
  v65 = type metadata accessor for Proto4_Version(0);
  v14 = MEMORY[0x1E0C80A78](v65);
  v63 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v59 = (uint64_t *)((char *)&v56 - v16);
  v17 = sub_1BE1B1F58();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v21 = *(int *)(type metadata accessor for Proto4_Counter(0) + 20);
  if (qword_1EF52BD90 != -1)
    swift_once();
  v66 = a2;
  *(_QWORD *)(a2 + v21) = qword_1EF52C650;
  v22 = *(int *)(type metadata accessor for Proto_Counter(0) + 20);
  v58 = a1;
  v23 = *(_QWORD *)(a1 + v22);
  result = swift_beginAccess();
  v25 = *(_QWORD *)(v23 + 16);
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  result = swift_beginAccess();
  v26 = *(_QWORD *)(v3 + 16);
  if (v25 >= *(_QWORD *)(v26 + 16))
  {
LABEL_15:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v20, v26+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v25, v17);
  swift_retain();
  v27 = sub_1BDEE7C7C();
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v30 = v66;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Counter._StorageClass(0);
    swift_allocObject();
    v31 = swift_retain();
    *(_QWORD *)(v30 + v21) = sub_1BDE3F3C4(v31);
    swift_release();
  }
  v32 = *(_QWORD *)(v30 + v21);
  swift_beginAccess();
  v33 = *(_QWORD *)(v32 + 16);
  v34 = *(_QWORD *)(v32 + 24);
  *(_QWORD *)(v32 + 16) = v27;
  *(_QWORD *)(v32 + 24) = v29;
  sub_1BDDB796C(v33, v34);
  v35 = *(_QWORD *)(v58 + v22);
  v36 = v35 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
  swift_beginAccess();
  v37 = v36;
  v38 = v60;
  sub_1BDD86DEC(v37, v60, &qword_1ED6F37A8);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  v40 = v61;
  v41 = v39(v38, 1, v61);
  v42 = MEMORY[0x1E0DEE9D8];
  if (v41 == 1)
  {
    *v13 = MEMORY[0x1E0DEE9D8];
    v13[1] = v42;
    sub_1BE1B20E4();
    sub_1BDD86E30(v38, &qword_1ED6F37A8);
  }
  else
  {
    sub_1BDDA2E8C(v38, (uint64_t)v13, type metadata accessor for Proto_Version);
  }
  v43 = v59;
  sub_1BE1B20E4();
  v44 = *v13;
  v45 = v13[1];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = sub_1BE0FB5F4(v44, v45, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *v43 = v46;
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_Version);
  sub_1BDE35C14((uint64_t)v43);
  v47 = v35 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
  swift_beginAccess();
  v48 = v47;
  v49 = v62;
  sub_1BDD86DEC(v48, v62, &qword_1ED6F37A8);
  if (v39(v49, 1, v40) == 1)
  {
    v50 = v64;
    v51 = MEMORY[0x1E0DEE9D8];
    *v64 = MEMORY[0x1E0DEE9D8];
    v50[1] = v51;
    sub_1BE1B20E4();
    sub_1BDD86E30(v49, &qword_1ED6F37A8);
  }
  else
  {
    v50 = v64;
    sub_1BDDA2E8C(v49, (uint64_t)v64, type metadata accessor for Proto_Version);
  }
  v52 = v63;
  sub_1BE1B20E4();
  v53 = *v50;
  v54 = v50[1];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = sub_1BE0FB5F4(v53, v54, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *v52 = v55;
  sub_1BDD9C3E0((uint64_t)v50, type metadata accessor for Proto_Version);
  return sub_1BDE35C20((uint64_t)v52);
}

uint64_t sub_1BE0F86E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = type metadata accessor for Proto4_Version.Seen(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Proto_RLE(0);
  v10 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0DEE9D8];
  a2[1] = MEMORY[0x1E0DEE9D8];
  type metadata accessor for Proto_Version(0);
  sub_1BE1B20E4();
  v14 = *a1;
  swift_retain();
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1BE0FA08C(v15, v3);
  swift_bridgeObjectRelease();
  swift_release();
  *a2 = v16;
  v17 = *(_QWORD *)(v14 + 16);
  if (v17)
  {
    v25 = a2;
    v27 = v13;
    swift_bridgeObjectRetain();
    sub_1BDE22508(0, v17, 0);
    v18 = *(unsigned __int8 *)(v7 + 80);
    v24 = v14;
    v19 = v14 + ((v18 + 32) & ~v18);
    v20 = *(_QWORD *)(v7 + 72);
    v13 = v27;
    do
    {
      sub_1BDD9C318(v19, (uint64_t)v9, type metadata accessor for Proto4_Version.Seen);
      sub_1BE1B20E4();
      *v12 = *((_QWORD *)v9 + 2);
      swift_bridgeObjectRetain();
      sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Proto4_Version.Seen);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE22508(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v27;
      }
      v22 = *(_QWORD *)(v13 + 16);
      v21 = *(_QWORD *)(v13 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1BDE22508(v21 > 1, v22 + 1, 1);
        v13 = v27;
      }
      *(_QWORD *)(v13 + 16) = v22 + 1;
      sub_1BDDA2E8C((uint64_t)v12, v13+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v22, type metadata accessor for Proto_RLE);
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a2 = v25;
  }
  result = swift_bridgeObjectRelease();
  a2[1] = v13;
  return result;
}

uint64_t sub_1BE0F8930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t result;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v125 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3790);
  v4 = MEMORY[0x1E0C80A78](v3);
  v124 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v123 = (uint64_t)&v103 - v6;
  v132 = type metadata accessor for Proto_KeyPath(0);
  v122 = *(_QWORD *)(v132 - 8);
  v7 = MEMORY[0x1E0C80A78](v132);
  v121 = (uint64_t)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v133 = (char *)&v103 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v11 = MEMORY[0x1E0C80A78](v10);
  v107 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v106 = (uint64_t)&v103 - v13;
  v131 = type metadata accessor for Proto4_CRDT(0);
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v116 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for Proto_CRDT(0);
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v117 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCD0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v115 = (uint64_t)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v128 = (uint64_t)&v103 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v114 = (uint64_t)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v113 = (uint64_t)&v103 - v23;
  v127 = type metadata accessor for Proto4_Version(0);
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v109 = (uint64_t *)((char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v112 = type metadata accessor for Proto_Version(0);
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v110 = (uint64_t *)((char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  v27 = MEMORY[0x1E0C80A78](v26);
  v108 = (uint64_t)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v103 - v29;
  v134 = sub_1BE1B1F58();
  v31 = *(_QWORD *)(v134 - 8);
  v32 = MEMORY[0x1E0C80A78](v134);
  v120 = (char *)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v103 - v34;
  v36 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v103 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v39 = *(int *)(v36 + 20);
  if (qword_1ED6EFD78 != -1)
    swift_once();
  *(_QWORD *)&v38[v39] = qword_1ED6EFD68;
  v40 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto4_Reference(0) + 20));
  v118 = v40 + 16;
  swift_beginAccess();
  v41 = *(_QWORD *)(v40 + 16);
  v42 = *(_QWORD *)(v40 + 24);
  swift_retain();
  sub_1BDDB6CA4(v41, v42);
  v43 = v137;
  sub_1BDD92AA8(v41, v42);
  v129 = v43;
  if (v43)
  {
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v44 = sub_1BE0EF04C((uint64_t)v35);
    v119 = *(void (**)(char *, uint64_t))(v31 + 8);
    v119(v35, v134);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Reference._StorageClass(0);
      swift_allocObject();
      v45 = swift_retain();
      *(_QWORD *)&v38[v39] = sub_1BDDA1424(v45);
      swift_release();
    }
    v137 = v39;
    v46 = *(_QWORD *)&v38[v39];
    swift_beginAccess();
    *(_QWORD *)(v46 + 16) = v44;
    v47 = v40
        + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
    swift_beginAccess();
    sub_1BDD86DEC(v47, (uint64_t)v30, &qword_1EF52CE20);
    v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48);
    v49 = v127;
    LODWORD(v47) = v48(v30, 1, v127);
    sub_1BDD86E30((uint64_t)v30, &qword_1EF52CE20);
    v50 = v133;
    if ((_DWORD)v47 != 1)
    {
      v51 = v40
          + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
      swift_beginAccess();
      v52 = v51;
      v53 = v108;
      sub_1BDD86DEC(v52, v108, &qword_1EF52CE20);
      if (v48((char *)v53, 1, v49) == 1)
      {
        v54 = v109;
        *v109 = MEMORY[0x1E0DEE9D8];
        sub_1BE1B20E4();
        sub_1BDD86E30(v53, &qword_1EF52CE20);
      }
      else
      {
        v54 = v109;
        sub_1BDDA2E8C(v53, (uint64_t)v109, type metadata accessor for Proto4_Version);
      }
      v55 = v137;
      v56 = v110;
      sub_1BE0F86E8(v54, v110);
      sub_1BDD9C3E0((uint64_t)v54, type metadata accessor for Proto4_Version);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Reference._StorageClass(0);
        swift_allocObject();
        v57 = swift_retain();
        v55 = v137;
        *(_QWORD *)&v38[v55] = sub_1BDDA1424(v57);
        swift_release();
      }
      v58 = *(_QWORD *)&v38[v55];
      v59 = (uint64_t)v56;
      v60 = v113;
      sub_1BDDA2E8C(v59, v113, type metadata accessor for Proto_Version);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v111 + 56))(v60, 0, 1, v112);
      v61 = v114;
      sub_1BDDA2EF0(v60, v114, &qword_1ED6F37A8);
      v62 = v58
          + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v61, v62, &qword_1ED6F37A8);
      swift_endAccess();
      swift_release();
    }
    v63 = v40 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
    swift_beginAccess();
    v64 = v128;
    sub_1BDD86DEC(v63, v128, &qword_1EF52CCD0);
    v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
    v66 = v131;
    LODWORD(v63) = v65(v64, 1, v131);
    sub_1BDD86E30(v64, &qword_1EF52CCD0);
    if ((_DWORD)v63 == 1)
    {
      v67 = v132;
      v68 = v129;
    }
    else
    {
      v69 = v40 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
      swift_beginAccess();
      v70 = v115;
      sub_1BDD86DEC(v69, v115, &qword_1EF52CCD0);
      v71 = v65(v70, 1, v66);
      v72 = v66;
      v67 = v132;
      if (v71 == 1)
      {
        v73 = v116;
        sub_1BE1B20E4();
        v74 = *(int *)(v72 + 20);
        v68 = v129;
        v75 = v117;
        if (qword_1EF52BD40 != -1)
          swift_once();
        *(_QWORD *)(v73 + v74) = qword_1EF52C640;
        swift_retain();
        sub_1BDD86E30(v70, &qword_1EF52CCD0);
      }
      else
      {
        v73 = v116;
        sub_1BDDA2E8C(v70, v116, type metadata accessor for Proto4_CRDT);
        v68 = v129;
        v75 = v117;
      }
      sub_1BE0F0A28(v73);
      sub_1BDD9C3E0(v73, type metadata accessor for Proto4_CRDT);
      v76 = v137;
      if (v68)
      {
        v77 = type metadata accessor for Proto_Reference;
        v78 = (uint64_t)v38;
        return sub_1BDD9C3E0(v78, v77);
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Reference._StorageClass(0);
        swift_allocObject();
        v79 = swift_retain();
        v76 = v137;
        *(_QWORD *)&v38[v76] = sub_1BDDA1424(v79);
        swift_release();
      }
      v80 = *(_QWORD *)&v38[v76];
      v81 = (uint64_t)v75;
      v82 = v106;
      sub_1BDDA2E8C(v81, v106, type metadata accessor for Proto_CRDT);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v104 + 56))(v82, 0, 1, v105);
      v83 = v107;
      sub_1BDDA2EF0(v82, v107, &qword_1ED6F3728);
      v84 = v80 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v83, v84, &qword_1ED6F3728);
      swift_endAccess();
      swift_release();
    }
    *v50 = MEMORY[0x1E0DEE9D8];
    v50[1] = sub_1BE1B20CC();
    v50[2] = v85;
    sub_1BE1B20E4();
    swift_beginAccess();
    v86 = *(_QWORD *)(v40 + 16);
    v87 = *(_QWORD *)(v40 + 24);
    sub_1BDDB6CA4(v86, v87);
    v88 = v120;
    sub_1BDD92AA8(v86, v87);
    if (!v68)
    {
      v135 = sub_1BDDC4278((uint64_t)&unk_1E77548E0);
      v136 = v89;
      v90 = sub_1BDEE7C7C();
      v92 = v91;
      sub_1BE1B1EA4();
      sub_1BDDB796C(v90, v92);
      v119(v88, v134);
      v93 = v135;
      v94 = v136;
      sub_1BDDB796C(v50[1], v50[2]);
      v50[1] = v93;
      v50[2] = v94;
      v95 = v121;
      sub_1BDD9C318((uint64_t)v50, v121, type metadata accessor for Proto_KeyPath);
      v96 = v137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Reference._StorageClass(0);
        swift_allocObject();
        v97 = swift_retain();
        v96 = v137;
        *(_QWORD *)&v38[v96] = sub_1BDDA1424(v97);
        swift_release();
      }
      v98 = *(_QWORD *)&v38[v96];
      v99 = v123;
      sub_1BDDA2E8C(v95, v123, type metadata accessor for Proto_KeyPath);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56))(v99, 0, 1, v67);
      v100 = v124;
      sub_1BDDA2EF0(v99, v124, &qword_1ED6F3790);
      v101 = v98
           + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v100, v101, &qword_1ED6F3790);
      swift_endAccess();
      swift_release();
      sub_1BDDA2E8C((uint64_t)v38, v125, type metadata accessor for Proto_Reference);
      v78 = (uint64_t)v50;
      v77 = type metadata accessor for Proto_KeyPath;
      return sub_1BDD9C3E0(v78, v77);
    }
  }
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BE0F9638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v91 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  v4 = MEMORY[0x1E0C80A78](v3);
  v81 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v78 = (char *)&v72 - v6;
  v7 = type metadata accessor for Proto_Version(0);
  v86 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v77 = (uint64_t *)((char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = type metadata accessor for Proto4_Version(0);
  v80 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v87 = (uint64_t *)((char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v79 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v85 = (uint64_t)&v72 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCD0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v76 = (uint64_t)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v75 = (uint64_t)&v72 - v17;
  v90 = type metadata accessor for Proto_CRDT(0);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Proto4_CRDT(0);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v84 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v21 = MEMORY[0x1E0C80A78](v20);
  v82 = (unint64_t)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (uint64_t)&v72 - v23;
  v25 = sub_1BE1B1F58();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v29 = *(int *)(type metadata accessor for Proto4_Reference(0) + 20);
  if (qword_1EF52BDE8 != -1)
    swift_once();
  v30 = qword_1EF52C670;
  v31 = a2;
  v92 = v29;
  *(_QWORD *)(a2 + v29) = qword_1EF52C670;
  v32 = *(_QWORD *)(v91 + *(int *)(type metadata accessor for Proto_Reference(0) + 20));
  swift_beginAccess();
  v33 = *(_QWORD *)(v32 + 16);
  if ((v33 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  v91 = v7;
  v7 = v93;
  swift_beginAccess();
  v34 = *(_QWORD *)(v7 + 16);
  if (v33 >= *(_QWORD *)(v34 + 16))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_11;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v28, v34+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v33, v25);
  swift_retain();
  v35 = sub_1BDEE7C7C();
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v25 = v31;
  v31 = v92;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Reference._StorageClass(0);
    swift_allocObject();
    v38 = swift_retain();
    *(_QWORD *)(v25 + v31) = sub_1BDE43D40(v38);
    swift_release();
  }
  v39 = *(_QWORD *)(v25 + v31);
  swift_beginAccess();
  v40 = *(_QWORD *)(v39 + 16);
  v41 = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v39 + 16) = v35;
  *(_QWORD *)(v39 + 24) = v37;
  sub_1BDDB796C(v40, v41);
  v42 = v32 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v42, v24, &qword_1ED6F3728);
  v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
  v44 = v90;
  LODWORD(v42) = v43(v24, 1, v90);
  sub_1BDD86E30(v24, &qword_1ED6F3728);
  v30 = v91;
  if ((_DWORD)v42 == 1)
  {
    v45 = v91;
    goto LABEL_18;
  }
  v46 = v32 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  v33 = v82;
  sub_1BDD86DEC(v46, v82, &qword_1ED6F3728);
  if (v43(v33, 1, v44) != 1)
  {
    v47 = (uint64_t)v83;
    sub_1BDDA2E8C(v33, (uint64_t)v83, type metadata accessor for Proto_CRDT);
    v26 = v94;
    v7 = (uint64_t)v84;
    goto LABEL_13;
  }
  v28 = v83;
  sub_1BE1B20E4();
  v24 = *(int *)(v44 + 20);
  v26 = v94;
  v7 = (uint64_t)v84;
  if (qword_1ED6F2E18 != -1)
    goto LABEL_27;
LABEL_11:
  *(_QWORD *)&v28[v24] = qword_1ED6F2E08;
  swift_retain();
  sub_1BDD86E30(v33, &qword_1ED6F3728);
  v47 = (uint64_t)v28;
LABEL_13:
  v45 = v30;
  sub_1BE0F14DC(v47);
  sub_1BDD9C3E0(v47, type metadata accessor for Proto_CRDT);
  v94 = v26;
  if (v26)
    return sub_1BDD9C3E0(v25, type metadata accessor for Proto4_Reference);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Reference._StorageClass(0);
    swift_allocObject();
    v49 = swift_retain();
    *(_QWORD *)(v25 + v31) = sub_1BDE43D40(v49);
    swift_release();
  }
  v50 = *(_QWORD *)(v25 + v31);
  v51 = v75;
  sub_1BDDA2E8C(v7, v75, type metadata accessor for Proto4_CRDT);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v51, 0, 1, v74);
  v52 = v76;
  sub_1BDDA2EF0(v51, v76, &qword_1EF52CCD0);
  v53 = v50 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4(v52, v53, &qword_1EF52CCD0);
  swift_endAccess();
  swift_release();
LABEL_18:
  v54 = v32 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  v55 = v85;
  sub_1BDD86DEC(v54, v85, &qword_1ED6F37A8);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
  LODWORD(v54) = v56(v55, 1, v45);
  result = sub_1BDD86E30(v55, &qword_1ED6F37A8);
  if ((_DWORD)v54 != 1)
  {
    v57 = v32 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    v58 = v79;
    sub_1BDD86DEC(v57, v79, &qword_1ED6F37A8);
    if (v56(v58, 1, v45) == 1)
    {
      v59 = MEMORY[0x1E0DEE9D8];
      v60 = v77;
      *v77 = MEMORY[0x1E0DEE9D8];
      v60[1] = v59;
      sub_1BE1B20E4();
      sub_1BDD86E30(v58, &qword_1ED6F37A8);
    }
    else
    {
      v60 = v77;
      sub_1BDDA2E8C(v58, (uint64_t)v77, type metadata accessor for Proto_Version);
    }
    v61 = (uint64_t)v78;
    v62 = v87;
    sub_1BE1B20E4();
    v63 = *v60;
    v64 = v60[1];
    v65 = v93;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66 = sub_1BE0FB5F4(v63, v64, v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *v62 = v66;
    sub_1BDD9C3E0((uint64_t)v60, type metadata accessor for Proto_Version);
    v67 = v92;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto4_Reference._StorageClass(0);
      swift_allocObject();
      v68 = swift_retain();
      *(_QWORD *)(v25 + v67) = sub_1BDE43D40(v68);
      swift_release();
    }
    v69 = *(_QWORD *)(v25 + v67);
    sub_1BDDA2E8C((uint64_t)v87, v61, type metadata accessor for Proto4_Version);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v61, 0, 1, v88);
    v70 = v81;
    sub_1BDDA2EF0(v61, v81, &qword_1EF52CE20);
    v71 = v69
        + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v70, v71, &qword_1EF52CE20);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for Upgrade4to5()
{
  return objc_opt_self();
}

uint64_t sub_1BE0FA08C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a2;
  v4 = sub_1BE1B1F58();
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    return v8;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1BDE22534(0, v7, 0);
  v9 = *(_QWORD *)(type metadata accessor for Proto4_Version.Seen(0) - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (unint64_t *)(((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
                           + a1
                           + 8);
  while (1)
  {
    v12 = *(v11 - 1);
    v13 = *v11;
    sub_1BDDB6CA4(v12, *v11);
    sub_1BDD92AA8(v12, v13);
    if (v2)
      break;
    v14 = sub_1BE0EF04C((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
    v8 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BDE22534(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v22;
    }
    v16 = *(_QWORD *)(v8 + 16);
    v15 = *(_QWORD *)(v8 + 24);
    if (v16 >= v15 >> 1)
    {
      sub_1BDE22534(v15 > 1, v16 + 1, 1);
      v8 = v22;
    }
    v11 = (unint64_t *)((char *)v11 + v10);
    *(_QWORD *)(v8 + 16) = v16 + 1;
    *(_QWORD *)(v8 + 8 * v16 + 32) = v14;
    if (!--v7)
      return v8;
  }
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BE0FA248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v42 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v39 = (uint64_t)&v34 - v9;
  v38 = type metadata accessor for Proto_Version(0);
  v41 = *(_QWORD *)(v38 - 8);
  v10 = MEMORY[0x1E0C80A78](v38);
  v37 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v34 - v12);
  v14 = type metadata accessor for Proto_Subsequence(0);
  v40 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v45 = (uint64_t)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v34 = v3;
    v46 = MEMORY[0x1E0DEE9D8];
    sub_1BDE225B0(0, v16, 0);
    v18 = *(_QWORD *)(type metadata accessor for Proto4_Subsequence(0) - 8);
    v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v44 = *(int *)(type metadata accessor for Proto_Sequence(0) + 20);
    v35 = *(_QWORD *)(v18 + 72);
    v36 = a3;
    v20 = v38;
    do
    {
      v21 = *(_QWORD *)(a3 + v44)
          + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
      swift_beginAccess();
      v22 = v21;
      v23 = v39;
      sub_1BDD86DEC(v22, v39, &qword_1ED6F37A8);
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
      if (v24(v23, 1, v20) == 1)
      {
        v25 = MEMORY[0x1E0DEE9D8];
        *v13 = MEMORY[0x1E0DEE9D8];
        v13[1] = v25;
        sub_1BE1B20E4();
        sub_1BDD86E30(v23, &qword_1ED6F37A8);
      }
      else
      {
        sub_1BDDA2E8C(v23, (uint64_t)v13, type metadata accessor for Proto_Version);
      }
      v26 = *(_QWORD *)(a3 + v44)
          + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion;
      swift_beginAccess();
      v27 = v26;
      v28 = v42;
      sub_1BDD86DEC(v27, v42, &qword_1ED6F37A8);
      if (v24(v28, 1, v20) == 1)
      {
        v29 = MEMORY[0x1E0DEE9D8];
        v30 = v37;
        *v37 = MEMORY[0x1E0DEE9D8];
        v30[1] = v29;
        sub_1BE1B20E4();
        sub_1BDD86E30(v28, &qword_1ED6F37A8);
      }
      else
      {
        v30 = v37;
        sub_1BDDA2E8C(v28, (uint64_t)v37, type metadata accessor for Proto_Version);
      }
      sub_1BE0F6ECC(v19, (uint64_t)v13, (uint64_t)v30, v45);
      sub_1BDD9C3E0((uint64_t)v30, type metadata accessor for Proto_Version);
      sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_Version);
      v17 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE225B0(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v46;
      }
      v32 = *(_QWORD *)(v17 + 16);
      v31 = *(_QWORD *)(v17 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1BDE225B0(v31 > 1, v32 + 1, 1);
        v17 = v46;
      }
      *(_QWORD *)(v17 + 16) = v32 + 1;
      sub_1BDDA2E8C(v45, v17+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v32, type metadata accessor for Proto_Subsequence);
      a3 = v36;
      v19 += v35;
      --v16;
    }
    while (v16);
  }
  return v17;
}

uint64_t sub_1BE0FA608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v77 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE20);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Proto4_Version(0);
  v76 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v75 = (uint64_t *)((char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = type metadata accessor for Proto_Version(0);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v80 = (uint64_t *)((char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v74 = (uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v79 = (uint64_t)&v65 - v13;
  v73 = type metadata accessor for Proto_CustomCRDT.Sibling(0);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v65 = v2;
    v84 = MEMORY[0x1E0DEE9D8];
    sub_1BDE22608(0, v16, 0);
    v69 = type metadata accessor for Proto4_CustomCRDT.Sibling(0);
    v18 = *(_QWORD *)(v69 - 8);
    v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v68 = *(_QWORD *)(v18 + 72);
    v71 = v6;
    v70 = v7;
    do
    {
      v78 = v16;
      sub_1BE1B20E4();
      v20 = *(int *)(v73 + 20);
      if (qword_1EF52B448 != -1)
        swift_once();
      *(_QWORD *)&v15[v20] = qword_1EF52B440;
      v21 = *(int *)(v69 + 20);
      v83 = v19;
      v22 = (uint64_t *)(*(_QWORD *)(v19 + v21)
                      + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data);
      swift_beginAccess();
      v24 = *v22;
      v23 = v22[1];
      swift_retain();
      sub_1BDDB6CA4(v24, v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v67 = v23;
        v25 = *(_QWORD *)&v15[v20];
        type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass(0);
        v26 = swift_allocObject();
        v27 = v26
            + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
        v28 = v26;
        v66 = v26;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v26+ OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version, 1, 1, v82);
        v29 = (uint64_t *)(v28
                        + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
        swift_retain();
        *v29 = sub_1BE1B20CC();
        v29[1] = v30;
        v31 = v25
            + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
        swift_beginAccess();
        v32 = v31;
        v33 = v79;
        sub_1BDD86DEC(v32, v79, &qword_1ED6F37A8);
        swift_beginAccess();
        sub_1BDDA1AF4(v33, v27, &qword_1ED6F37A8);
        swift_endAccess();
        v34 = (uint64_t *)(v25
                        + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
        swift_beginAccess();
        v36 = *v34;
        v35 = v34[1];
        sub_1BDDB6CA4(v36, v35);
        v23 = v67;
        swift_release();
        swift_beginAccess();
        v37 = *v29;
        v38 = v29[1];
        *v29 = v36;
        v29[1] = v35;
        v6 = v71;
        sub_1BDDB796C(v37, v38);
        *(_QWORD *)&v15[v20] = v66;
        swift_release();
      }
      v39 = (uint64_t *)(*(_QWORD *)&v15[v20]
                      + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
      swift_beginAccess();
      v40 = *v39;
      v41 = v39[1];
      *v39 = v24;
      v39[1] = v23;
      sub_1BDDB796C(v40, v41);
      v42 = v83;
      v43 = *(_QWORD *)(v83 + v21)
          + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
      swift_beginAccess();
      sub_1BDD86DEC(v43, (uint64_t)v6, &qword_1EF52CE20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v6, 1, v70) == 1)
      {
        v44 = v75;
        *v75 = MEMORY[0x1E0DEE9D8];
        sub_1BE1B20E4();
        sub_1BDD86E30((uint64_t)v6, &qword_1EF52CE20);
      }
      else
      {
        v44 = v75;
        sub_1BDDA2E8C((uint64_t)v6, (uint64_t)v75, type metadata accessor for Proto4_Version);
      }
      sub_1BE0F86E8(v44, v80);
      sub_1BDD9C3E0((uint64_t)v44, type metadata accessor for Proto4_Version);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v45 = *(_QWORD *)&v15[v20];
        type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass(0);
        v46 = swift_allocObject();
        v47 = v46
            + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v46+ OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version, 1, 1, v82);
        v48 = (uint64_t *)(v46
                        + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
        swift_retain();
        *v48 = sub_1BE1B20CC();
        v48[1] = v49;
        v50 = v45
            + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
        swift_beginAccess();
        v51 = v50;
        v52 = v79;
        sub_1BDD86DEC(v51, v79, &qword_1ED6F37A8);
        swift_beginAccess();
        sub_1BDDA1AF4(v52, v47, &qword_1ED6F37A8);
        swift_endAccess();
        v53 = (uint64_t *)(v45
                        + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
        swift_beginAccess();
        v55 = *v53;
        v54 = v53[1];
        sub_1BDDB6CA4(v55, v54);
        v42 = v83;
        swift_release();
        swift_beginAccess();
        v56 = *v48;
        v57 = v48[1];
        *v48 = v55;
        v48[1] = v54;
        v6 = v71;
        sub_1BDDB796C(v56, v57);
        *(_QWORD *)&v15[v20] = v46;
        swift_release();
      }
      v58 = *(_QWORD *)&v15[v20];
      v59 = v79;
      sub_1BDDA2E8C((uint64_t)v80, v79, type metadata accessor for Proto_Version);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v81 + 56))(v59, 0, 1, v82);
      v60 = v74;
      sub_1BDDA2EF0(v59, v74, &qword_1ED6F37A8);
      v61 = v58
          + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v60, v61, &qword_1ED6F37A8);
      swift_endAccess();
      swift_release();
      v17 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE22608(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v84;
      }
      v63 = *(_QWORD *)(v17 + 16);
      v62 = *(_QWORD *)(v17 + 24);
      if (v63 >= v62 >> 1)
      {
        sub_1BDE22608(v62 > 1, v63 + 1, 1);
        v17 = v84;
      }
      *(_QWORD *)(v17 + 16) = v63 + 1;
      sub_1BDDA2E8C((uint64_t)v15, v17+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(_QWORD *)(v72 + 72) * v63, type metadata accessor for Proto_CustomCRDT.Sibling);
      v19 = v42 + v68;
      v16 = v78 - 1;
    }
    while (v78 != 1);
  }
  return v17;
}

uint64_t sub_1BE0FAE40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v41 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CE00);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto4_Value(0);
  v40 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CD50);
  MEMORY[0x1E0C80A78](v11);
  v39 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Proto4_Register(0);
  MEMORY[0x1E0C80A78](v42);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Proto_Value(0);
  v38 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v44 = (uint64_t)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v45 = MEMORY[0x1E0DEE9D8];
    sub_1BDE225DC(0, v17, 0);
    v36 = type metadata accessor for Proto4_CRDT(0);
    v19 = *(_QWORD *)(v36 - 8);
    v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v34 = *(_QWORD *)(v19 + 72);
    v35 = v7;
    v37 = v8;
    do
    {
      v43 = v3;
      v21 = (uint64_t)v14;
      v22 = *(_QWORD *)(v20 + *(int *)(v36 + 20))
          + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
      swift_beginAccess();
      v23 = v39;
      sub_1BDD86DEC(v22, v39, &qword_1EF52CD50);
      v24 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24) == 1)
      {
        sub_1BDD86E30(v23, &qword_1EF52CD50);
      }
      else
      {
        if (!swift_getEnumCaseMultiPayload())
        {
          v31 = v23;
          v14 = (char *)v21;
          sub_1BDDA2E8C(v31, v21, type metadata accessor for Proto4_Register);
          v3 = v43;
          goto LABEL_10;
        }
        sub_1BDD9C3E0(v23, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      }
      v14 = (char *)v21;
      sub_1BE1B20E4();
      v25 = *(int *)(v42 + 20);
      if (qword_1EF52BD80 != -1)
        swift_once();
      *(_QWORD *)(v21 + v25) = qword_1EF52C648;
      swift_retain();
      v3 = v43;
LABEL_10:
      v26 = v37;
      v27 = *(_QWORD *)&v14[*(int *)(v42 + 20)]
          + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
      swift_beginAccess();
      sub_1BDD86DEC(v27, (uint64_t)v7, &qword_1EF52CE00);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v7, 1, v26) == 1)
      {
        sub_1BE1B20E4();
        v28 = *(int *)(v26 + 20);
        if (qword_1EF52BD30 != -1)
          swift_once();
        *(_QWORD *)&v10[v28] = qword_1EF52C638;
        swift_retain();
        sub_1BDD86E30((uint64_t)v7, &qword_1EF52CE00);
      }
      else
      {
        sub_1BDDA2E8C((uint64_t)v7, (uint64_t)v10, type metadata accessor for Proto4_Value);
      }
      sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto4_Register);
      sub_1BE0F1BC0((uint64_t)v10, v44);
      sub_1BDD9C3E0((uint64_t)v10, type metadata accessor for Proto4_Value);
      v18 = v45;
      if (v3)
      {
        swift_release();
        return v18;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE225DC(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v45;
      }
      v30 = *(_QWORD *)(v18 + 16);
      v29 = *(_QWORD *)(v18 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1BDE225DC(v29 > 1, v30 + 1, 1);
        v18 = v45;
      }
      *(_QWORD *)(v18 + 16) = v30 + 1;
      sub_1BDDA2E8C(v44, v18+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v30, type metadata accessor for Proto_Value);
      v7 = v35;
      v20 += v34;
      --v17;
    }
    while (v17);
  }
  return v18;
}

uint64_t sub_1BE0FB2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCD0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Proto4_CRDT(0);
  v27 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Proto_CRDT(0);
  v26 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BDE22584(0, v13, 0);
    v25 = type metadata accessor for Proto4_Struct.Field(0);
    v15 = *(_QWORD *)(v25 - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v23 = *(_QWORD *)(v15 + 72);
    v24 = v7;
    while (1)
    {
      v17 = *(_QWORD *)(v16 + *(int *)(v25 + 20))
          + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
      swift_beginAccess();
      sub_1BDD86DEC(v17, (uint64_t)v6, &qword_1EF52CCD0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v7) == 1)
      {
        sub_1BE1B20E4();
        v18 = *(int *)(v7 + 20);
        if (qword_1EF52BD40 != -1)
          swift_once();
        *(_QWORD *)&v9[v18] = qword_1EF52C640;
        swift_retain();
        sub_1BDD86E30((uint64_t)v6, &qword_1EF52CCD0);
      }
      else
      {
        sub_1BDDA2E8C((uint64_t)v6, (uint64_t)v9, type metadata accessor for Proto4_CRDT);
      }
      sub_1BE0F0A28(v9);
      sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Proto4_CRDT);
      v14 = v29;
      if (v2)
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE22584(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v29;
      }
      v20 = *(_QWORD *)(v14 + 16);
      v19 = *(_QWORD *)(v14 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BDE22584(v19 > 1, v20 + 1, 1);
        v14 = v29;
      }
      *(_QWORD *)(v14 + 16) = v20 + 1;
      sub_1BDDA2E8C((uint64_t)v12, v14+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v20, type metadata accessor for Proto_CRDT);
      v7 = v24;
      v16 += v23;
      if (!--v13)
        return v14;
    }
    swift_release();
  }
  return v14;
}

uint64_t sub_1BE0FB5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  char *v87;
  uint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t __src;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  uint64_t v114;

  v78 = a3;
  v114 = *MEMORY[0x1E0C80C00];
  v91 = sub_1BE1B1F58();
  v5 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for Proto4_Version.Seen(0);
  v90 = *(_QWORD *)(v92 - 8);
  v8 = MEMORY[0x1E0C80A78](v92);
  v10 = (uint64_t *)((char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v88 = (uint64_t *)((char *)&v76 - v11);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530100);
  v12 = MEMORY[0x1E0C80A78](v94);
  v87 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (unint64_t *)((char *)&v76 - v15);
  v17 = MEMORY[0x1E0C80A78](v14);
  v80 = (uint64_t *)((char *)&v76 - v18);
  MEMORY[0x1E0C80A78](v17);
  v82 = (unint64_t *)((char *)&v76 - v19);
  v20 = *(_QWORD *)(a2 + 16);
  v93 = *(_QWORD *)(a1 + 16);
  if (v20 >= v93)
    v21 = v93;
  else
    v21 = v20;
  v104 = MEMORY[0x1E0DEE9D8];
  sub_1BDE22828(0, v21, 0);
  v81 = a2;
  v89 = v20;
  v77 = a1;
  if (v21)
  {
    v86 = a1 + 32;
    v85 = *(_QWORD *)(type metadata accessor for Proto_RLE(0) - 8);
    v84 = a2 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
    v22 = v78 + 16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v83 = v22;
    swift_beginAccess();
    v23 = 0;
    while (v93 != v23)
    {
      if (v20 == v23)
        goto LABEL_34;
      v24 = *(_QWORD *)(v86 + 8 * v23);
      v25 = v84 + *(_QWORD *)(v85 + 72) * v23;
      v26 = (uint64_t)v16 + *(int *)(v94 + 48);
      *v16 = v24;
      sub_1BDD9C318(v25, v26, type metadata accessor for Proto_RLE);
      *v10 = sub_1BE1B20CC();
      v10[1] = v27;
      v10[2] = MEMORY[0x1E0DEE9D8];
      sub_1BE1B20E4();
      if ((v24 & 0x8000000000000000) != 0)
        goto LABEL_35;
      if (v24 >= *(_QWORD *)(*(_QWORD *)v83 + 16))
        goto LABEL_36;
      v28 = v91;
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)v83+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v24, v91);
      v105 = sub_1BE1B1F40();
      v106 = v29;
      v107 = v30;
      v108 = v31;
      v109 = v32;
      v110 = v33;
      v111 = v34;
      v112 = v35;
      v113 = v36;
      sub_1BE1B1F40();
      sub_1BE1B1CAC();
      swift_allocObject();
      v37 = sub_1BE1B1C64() | 0x4000000000000000;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v28);
      sub_1BDDB796C(*v10, v10[1]);
      *v10 = 0x1000000000;
      v10[1] = v37;
      v38 = &v87[*(int *)(v94 + 48)];
      *(_QWORD *)v87 = *v16;
      sub_1BDD9C318(v26, (uint64_t)v38, type metadata accessor for Proto_RLE);
      v39 = *(_QWORD *)v38;
      swift_bridgeObjectRetain();
      sub_1BDD9C3E0((uint64_t)v38, type metadata accessor for Proto_RLE);
      swift_bridgeObjectRelease();
      v10[2] = v39;
      sub_1BDD86E30((uint64_t)v16, &qword_1EF530100);
      v40 = v104;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE22828(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v40 = v104;
      }
      v42 = *(_QWORD *)(v40 + 16);
      v41 = *(_QWORD *)(v40 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1BDE22828(v41 > 1, v42 + 1, 1);
        v40 = v104;
      }
      ++v23;
      *(_QWORD *)(v40 + 16) = v42 + 1;
      sub_1BDDA2E8C((uint64_t)v10, v40+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(_QWORD *)(v90 + 72) * v42, type metadata accessor for Proto4_Version.Seen);
      v20 = v89;
      if (v21 == v23)
        goto LABEL_17;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
  v40 = v104;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_17:
  v87 = (char *)(v78 + 16);
  swift_beginAccess();
  if (v93 > v20)
  {
    if (v21 <= (uint64_t)v20)
      v43 = v20;
    else
      v43 = v21;
    v85 = v77 + 32;
    v86 = v43;
    v44 = v81;
    v79 = v5;
    v45 = v82;
    while (v93 != v21)
    {
      if (v20 == v21)
        goto LABEL_32;
      if (v86 == v21)
        goto LABEL_38;
      v46 = *(_QWORD *)(v85 + 8 * v21);
      v47 = v44;
      v48 = type metadata accessor for Proto_RLE(0);
      v49 = v47
          + ((*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v48 - 8) + 80))
          + *(_QWORD *)(*(_QWORD *)(v48 - 8) + 72) * v21;
      v50 = (uint64_t)v80;
      v51 = (uint64_t)v80 + *(int *)(v94 + 48);
      *v80 = v46;
      sub_1BDD9C318(v49, v51, type metadata accessor for Proto_RLE);
      v52 = v82;
      sub_1BDDA2EF0(v50, (uint64_t)v82, &qword_1EF530100);
      v53 = sub_1BE1B20CC();
      v54 = (uint64_t)v88;
      *v88 = v53;
      *(_QWORD *)(v54 + 8) = v55;
      *(_QWORD *)(v54 + 16) = MEMORY[0x1E0DEE9D8];
      sub_1BE1B20E4();
      v56 = *v52;
      if ((*v52 & 0x8000000000000000) != 0)
        goto LABEL_39;
      if (v56 >= *(_QWORD *)(*(_QWORD *)v87 + 16))
        goto LABEL_40;
      v57 = v91;
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)v87+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v56, v91);
      __src = sub_1BE1B1F40();
      v96 = v58;
      v97 = v59;
      v98 = v60;
      v99 = v61;
      v100 = v62;
      v101 = v63;
      v102 = v64;
      v103 = v65;
      sub_1BE1B1F40();
      v66 = sub_1BDDD6E84(&__src, 16);
      v68 = v67;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v57);
      v69 = v88;
      sub_1BDDB796C(*v88, v88[1]);
      *v69 = v66;
      v69[1] = v68;
      v70 = *(int *)(v94 + 48);
      v71 = (uint64_t *)((char *)v16 + v70);
      *v16 = *v45;
      sub_1BDD9C318((uint64_t)v45 + v70, (uint64_t)v16 + v70, type metadata accessor for Proto_RLE);
      v72 = *v71;
      swift_bridgeObjectRetain();
      sub_1BDD9C3E0((uint64_t)v71, type metadata accessor for Proto_RLE);
      swift_bridgeObjectRelease();
      v69[2] = v72;
      sub_1BDD86E30((uint64_t)v45, &qword_1EF530100);
      v40 = v104;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDE22828(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v40 = v104;
      }
      v74 = *(_QWORD *)(v40 + 16);
      v73 = *(_QWORD *)(v40 + 24);
      if (v74 >= v73 >> 1)
      {
        sub_1BDE22828(v73 > 1, v74 + 1, 1);
        v40 = v104;
      }
      ++v21;
      *(_QWORD *)(v40 + 16) = v74 + 1;
      sub_1BDDA2E8C((uint64_t)v88, v40+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(_QWORD *)(v90 + 72) * v74, type metadata accessor for Proto4_Version.Seen);
      v44 = v81;
      v20 = v89;
      v5 = v79;
      if (v93 == v21)
        goto LABEL_32;
    }
    goto LABEL_37;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1BE0FBE70@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BE0F7928(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BE0FBE8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(BOOL, unint64_t, uint64_t), uint64_t (*a5)(_QWORD), void (*a6)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  void (*v24)(BOOL, unint64_t, uint64_t);
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t *);
  uint64_t v28;
  uint64_t v29;

  v26 = a2;
  v27 = a6;
  v9 = v6;
  v25 = a3;
  v11 = a3(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    v24 = a4;
    a4(0, v15, 0);
    v16 = v29;
    v17 = *(_QWORD *)(a5(0) - 8);
    v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v19 = *(_QWORD *)(v17 + 72);
    while (1)
    {
      v27(v18, v26, &v28);
      if (v9)
        break;
      v9 = 0;
      v29 = v16;
      v21 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      if (v21 >= v20 >> 1)
      {
        v24(v20 > 1, v21 + 1, 1);
        v16 = v29;
      }
      *(_QWORD *)(v16 + 16) = v21 + 1;
      sub_1BDDA2E8C((uint64_t)v14, v16+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v21, v25);
      v18 += v19;
      if (!--v15)
        return v16;
    }
    swift_release();
  }
  return v16;
}

unint64_t sub_1BE0FC008()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5254F0;
  if (!qword_1EF5254F0)
  {
    v1 = sub_1BE1B20C0();
    result = MEMORY[0x1C3B7DF54](MEMORY[0x1E0D3E5B8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5254F0);
  }
  return result;
}

uint64_t sub_1BE0FC050@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BE0F63D8(a1, a2, v3, a3);
}

uint64_t sub_1BE0FC068(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(BOOL, unint64_t, uint64_t), uint64_t (*a5)(_QWORD), void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void (*v22)(BOOL, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;

  v25 = a2;
  v26 = a6;
  v24 = a3;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    v22 = a4;
    a4(0, v14, 0);
    v15 = v27;
    v16 = *(_QWORD *)(a5(0) - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v23 = *(_QWORD *)(v16 + 72);
    while (1)
    {
      v26(v17);
      if (v6)
        break;
      v27 = v15;
      v19 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        v22(v18 > 1, v19 + 1, 1);
        v15 = v27;
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      sub_1BDDA2E8C((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v19, v24);
      v17 += v23;
      if (!--v14)
        return v15;
    }
    swift_release();
  }
  return v15;
}

uint64_t sub_1BE0FC1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Proto_Counter(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v9, &qword_1ED6F2DF0);
  v14 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14) == 1)
  {
    sub_1BDD86E30((uint64_t)v9, &qword_1ED6F2DF0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_1BDDA2E8C((uint64_t)v9, (uint64_t)v12, type metadata accessor for Proto_Counter);
      goto LABEL_9;
    }
    sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1BE1B20E4();
  v15 = *(int *)(v10 + 20);
  if (qword_1EF52BFB8 != -1)
    swift_once();
  *(_QWORD *)&v12[v15] = qword_1EF530758;
  swift_retain();
LABEL_9:
  type metadata accessor for CRCounterRef();
  v16 = swift_allocObject();
  sub_1BE0FEDEC((uint64_t)v12, a2);
  result = sub_1BDD9C3E0(a1, type metadata accessor for Proto_CRDT);
  if (!v3)
    *a3 = v16;
  return result;
}

_QWORD *sub_1BE0FC3F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F43C0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BE1B1F58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0DEE9E0];
  v0[3] = MEMORY[0x1E0DEE9E0];
  v0[4] = v8;
  v0[5] = v8;
  v0[6] = v8;
  v0[7] = 0;
  sub_1BE1B1F4C();
  type metadata accessor for ReplicaState();
  v9 = swift_allocObject();
  v10 = v9 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  v11 = type metadata accessor for Replica();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v7, v4);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  v12((uint64_t)v3, 1, 1, v11);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v3, v10, &qword_1ED6F43C0);
  swift_endAccess();
  v0[2] = v9;
  return v0;
}

_QWORD *sub_1BE0FC59C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = v1;
  v4 = MEMORY[0x1E0DEE9E0];
  v1[3] = MEMORY[0x1E0DEE9E0];
  v1[5] = v4;
  v1[4] = v4;
  v1[6] = v4;
  v1[7] = 0;
  v5 = qword_1ED6F3700;
  swift_retain();
  if (v5 != -1)
    swift_once();
  type metadata accessor for ReplicaState();
  sub_1BE1B2E40();
  swift_release();
  v2[2] = v13;
  swift_beginAccess();
  v6 = a1[3];
  v7 = a1[4];
  swift_beginAccess();
  v2[3] = v6;
  v2[4] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = a1[5];
  v9 = a1[6];
  swift_beginAccess();
  v2[5] = v8;
  v2[6] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2[7] = a1[7];
  if (qword_1ED6F4510 != -1)
    swift_once();
  swift_retain();
  sub_1BE0FC79C(0, &v12);
  v11 = v12;
  sub_1BDDAC830((uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v2;
}

double sub_1BE0FC79C@<D0>(int a1@<W0>, _OWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  double result;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43;

  v3 = v2;
  v6 = type metadata accessor for Replica();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BE1B1F58();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v34 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v35 = (char *)&v34 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F43C0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v40 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v34 - v16;
  swift_beginAccess();
  v18 = v3[4];
  LODWORD(v39) = a1;
  v41 = v7;
  v42 = a2;
  if ((a1 & 1) != 0)
  {
    v19 = qword_1ED6F3700;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v19 != -1)
      swift_once();
    sub_1BE1B2E40();
    swift_release();
    v7 = v41;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v17, 1, 1, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v20 = (uint64_t)v38;
  *(_QWORD *)&v43 = MEMORY[0x1E0DEE9E0];
  *((_QWORD *)&v43 + 1) = v18;
  swift_bridgeObjectRetain();
  sub_1BDD86E30((uint64_t)v17, &qword_1ED6F43C0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v22 = (char *)v3[5];
  v21 = v3[6];
  if ((v39 & 1) != 0)
  {
    v23 = qword_1ED6F3700;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v23 != -1)
      swift_once();
    v38 = v22;
    v39 = (char *)&v43 + 8;
    sub_1BE1B2E40();
    if (qword_1EF52C108 != -1)
      swift_once();
    v24 = v37;
    v25 = __swift_project_value_buffer(v37, (uint64_t)qword_1EF5497E8);
    v26 = v36;
    v27 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v34, v25, v24);
    v28 = v35;
    sub_1BDDD6AB4();
    v29 = *(void (**)(char *, uint64_t))(v26 + 8);
    v29(v27, v24);
    v29((char *)v20, v24);
    sub_1BE1B2E40();
    v30 = *(_QWORD *)(v20 + *(int *)(v6 + 20));
    sub_1BDD9C3E0(v20, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
    v31 = (uint64_t)v40;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v40, v28, v24);
    swift_release();
    *(_QWORD *)(v31 + *(int *)(v6 + 20)) = v30;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v31, 0, 1, v6);
    v32 = v42;
  }
  else
  {
    v31 = (uint64_t)v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v40, 1, 1, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v42;
  }
  swift_bridgeObjectRetain();
  sub_1BDD86E30(v31, &qword_1ED6F43C0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDDAF714(v21);
  sub_1BDDAF714(MEMORY[0x1E0DEE9E0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(double *)&v43;
  *v32 = v43;
  return result;
}

uint64_t sub_1BE0FCC04()
{
  __int128 v1;
  __int128 v2;

  if (qword_1ED6F4510 != -1)
    swift_once();
  swift_retain();
  sub_1BE0FC79C(0, &v2);
  v1 = v2;
  sub_1BDDAAAEC((uint64_t)&v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BE0FCCE0(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v3 = sub_1BE1B1F58();
  v4 = *(uint64_t **)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  v10 = type metadata accessor for Replica();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (uint64_t)&v28 - v15;
  result = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v28 - v18;
  if (a1 < 1)
  {
    v31 = (uint64_t)v1;
    if (a1 < 0)
    {
      v30 = (uint64_t *)a1;
      v29 = *(_QWORD *)(*(_QWORD *)(v31 + 16) + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter);
      v23 = qword_1ED6F3700;
      swift_retain();
      if (v23 == -1)
        goto LABEL_9;
      goto LABEL_20;
    }
    return result;
  }
  v9 = (char *)a1;
  v4 = &OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter;
  v16 = *(_QWORD *)(*((_QWORD *)v1 + 2) + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter);
  v20 = qword_1ED6F3700;
  swift_retain();
  v7 = v1;
  if (v20 != -1)
    goto LABEL_16;
  while (1)
  {
    sub_1BE1B2E40();
    swift_release();
    v3 = (uint64_t)&v9[v16];
    if (__OFADD__(v16, v9))
    {
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    if (v3 < v16)
      goto LABEL_18;
    swift_beginAccess();
    sub_1BDEE9160((uint64_t)v19, v16, (uint64_t)&v9[v16]);
    swift_endAccess();
    result = sub_1BDD9C3E0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
    v21 = (_QWORD *)(*((_QWORD *)v7 + 2) + *v4);
    v22 = &v9[*v21];
    if (!__OFADD__(*v21, v9))
      goto LABEL_6;
LABEL_19:
    __break(1u);
LABEL_20:
    swift_once();
LABEL_9:
    sub_1BE1B2E40();
    if (qword_1EF52C108 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v3, (uint64_t)qword_1EF5497E8);
    ((void (*)(char *, uint64_t, uint64_t))v4[2])(v7, v24, v3);
    sub_1BDDD6AB4();
    v25 = (void (*)(char *, uint64_t))v4[1];
    v25(v7, v3);
    v25(v13, v3);
    sub_1BE1B2E40();
    v26 = *(_QWORD *)&v13[*(int *)(v10 + 20)];
    sub_1BDD9C3E0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
    ((void (*)(uint64_t, char *, uint64_t))v4[4])(v16, v9, v3);
    result = swift_release();
    *(_QWORD *)(v16 + *(int *)(v10 + 20)) = v26;
    v27 = v29;
    v4 = v30;
    v19 = (char *)(v29 - (_QWORD)v30);
    if (__OFSUB__(v29, v30))
      break;
    v10 = v31;
    if ((uint64_t)v19 < v29)
      goto LABEL_22;
    swift_beginAccess();
    sub_1BDEE9160(v16, v27, v27 - (_QWORD)v4);
    swift_endAccess();
    result = sub_1BDD9C3E0(v16, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
    v21 = (_QWORD *)(*(_QWORD *)(v10 + 16) + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter);
    v22 = (char *)(*v21 - (_QWORD)v4);
    if (!__OFSUB__(*v21, v4))
    {
LABEL_6:
      *v21 = v22;
      return result;
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1BE0FD0DC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76[12];
  __int128 v77;
  uint64_t v78;

  v2 = v1;
  v4 = *v1;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F43C0);
  v5 = MEMORY[0x1E0C80A78](v68);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v65 - v8;
  v9 = sub_1BE1B1F58();
  v72 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v70 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v73 = (char *)&v65 - v12;
  v13 = v2[7];
  v14 = a1[7];
  v69 = v7;
  if (v13 == v14)
  {
    v67 = 0;
    swift_retain();
  }
  else
  {
    v74 = v4;
    if (qword_1ED6F4510 != -1)
      swift_once();
    swift_retain();
    sub_1BE1B2E40();
    v67 = 0;
    swift_release();
    v15 = v77;
    v16 = BYTE8(v77);
    v17 = v78;
    v18 = swift_allocObject();
    v19 = (_QWORD *)swift_retain();
    sub_1BE0FC59C(v19);
    swift_beginAccess();
    sub_1BDDB2D90(v15, v16, v17);
    swift_endAccess();
    swift_beginAccess();
    sub_1BDDB2D90(v15, v16, v17);
    swift_endAccess();
    *(_QWORD *)(v18 + 56) = v15;
    swift_beginAccess();
    sub_1BDDB2D90(v15, v16, v17);
    swift_endAccess();
    swift_beginAccess();
    sub_1BDDB2D90(v15, v16, v17);
    swift_endAccess();
    v2[7] = v15;
    swift_bridgeObjectRelease();
    a1 = (_QWORD *)v18;
  }
  sub_1BE0FC79C(1, &v77);
  v66 = *((_QWORD *)&v77 + 1);
  v74 = v77;
  v20 = v2[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
  swift_beginAccess();
  v21 = v72;
  v22 = v73;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v23(v73, v20, v9);
  v24 = a1[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
  swift_beginAccess();
  v25 = v70;
  v65 = v23;
  v23(v70, v24, v9);
  sub_1BDDB2BB0();
  LOBYTE(v24) = sub_1BE1B2798();
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v25, v9);
  v26(v22, v9);
  if ((v24 & 1) != 0)
    goto LABEL_17;
  result = swift_beginAccess();
  v28 = *(_QWORD *)(v2[3] + 16);
  v29 = *(_QWORD *)(v2[4] + 16);
  v30 = v28 + v29;
  if (__OFADD__(v28, v29))
  {
    __break(1u);
    goto LABEL_23;
  }
  result = swift_beginAccess();
  v31 = *(_QWORD *)(v2[5] + 16);
  v32 = *(_QWORD *)(v2[6] + 16);
  v33 = __OFADD__(v31, v32);
  v34 = v31 + v32;
  if (v33)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v33 = __OFADD__(v30, v34);
  v35 = v30 + v34;
  if (v33)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  result = swift_beginAccess();
  v36 = *(_QWORD *)(a1[3] + 16);
  v37 = *(_QWORD *)(a1[4] + 16);
  v38 = v36 + v37;
  if (__OFADD__(v36, v37))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = swift_beginAccess();
  v39 = *(_QWORD *)(a1[5] + 16);
  v40 = *(_QWORD *)(a1[6] + 16);
  v33 = __OFADD__(v39, v40);
  v41 = v39 + v40;
  if (v33)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v33 = __OFADD__(v38, v41);
  v42 = v38 + v41;
  if (v33)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  if (v35 < v42)
    goto LABEL_14;
  if (v35 == v42)
  {
    v52 = v2[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
    swift_beginAccess();
    v53 = v73;
    v54 = v65;
    v65(v73, v52, v9);
    v55 = a1[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
    swift_beginAccess();
    v56 = v70;
    v54(v70, v55, v9);
    LOBYTE(v55) = sub_1BDDB2BF8();
    v26(v56, v9);
    v26(v53, v9);
    if ((v55 & 1) != 0)
    {
LABEL_14:
      v43 = v2[2];
      v44 = a1[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
      swift_beginAccess();
      v45 = v73;
      v65(v73, v44, v9);
      v46 = v43 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
      swift_beginAccess();
      v47 = *(void (**)(uint64_t, char *, uint64_t))(v72 + 40);
      swift_retain();
      v47(v46, v45, v9);
      swift_endAccess();
      swift_release();
      v48 = v2[2];
      v49 = type metadata accessor for Replica();
      v50 = (uint64_t)v71;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v71, 1, 1, v49);
      v51 = v48 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v50, v51, &qword_1ED6F43C0);
      swift_endAccess();
      swift_release();
    }
  }
LABEL_17:
  swift_beginAccess();
  v57 = a1[3];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v58 = swift_bridgeObjectRetain();
  sub_1BDDAF714(v58);
  sub_1BDDAF714(v57);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v59 = a1[5];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v60 = swift_bridgeObjectRetain();
  sub_1BDDAF714(v60);
  sub_1BDDAF714(v59);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BE0FC79C(1, v76);
  v61 = *(_OWORD *)v76;
  if (qword_1ED6F4510 != -1)
    swift_once();
  v76[0] = v74;
  v76[1] = v66;
  v75 = v61;
  v72 = *((_QWORD *)&v61 + 1);
  v73 = (char *)v61;
  v62 = qword_1ED6F3700;
  swift_retain();
  swift_retain();
  if (v62 != -1)
    swift_once();
  v63 = (uint64_t)v71;
  sub_1BE1B2E40();
  swift_release();
  swift_retain();
  v64 = (uint64_t)v69;
  sub_1BE1B2E40();
  swift_release();
  sub_1BDDAC84C(v76, (uint64_t *)&v75, v63, v64);
  swift_release();
  swift_release();
  sub_1BDD86E30(v64, &qword_1ED6F43C0);
  sub_1BDD86E30(v63, &qword_1ED6F43C0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE0FD930(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_beginAccess();
  v3 = v1[3];
  v4 = v1[4];
  swift_beginAccess();
  v6 = a1[3];
  v5 = a1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_1BDDB04C0(v4, v5) & 1) != 0)
    goto LABEL_5;
  v7 = sub_1BDDB04C0(v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    swift_beginAccess();
    v9 = v1[5];
    v10 = v1[6];
    swift_beginAccess();
    v12 = a1[5];
    v11 = a1[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_1BDDB04C0(v10, v11) & 1) == 0)
    {
      v8 = sub_1BDDB04C0(v9, v12);
      goto LABEL_6;
    }
LABEL_5:
    v8 = 1;
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8 & 1;
  }
  v8 = 1;
  return v8 & 1;
}

uint64_t sub_1BE0FDAA4(_QWORD *a1)
{
  _QWORD *v1;
  char v3;
  _QWORD *v4;

  if (v1 == a1)
  {
    v3 = 0;
  }
  else if (v1[7] != a1[7]
         && ((swift_beginAccess(), *(_QWORD *)(v1[4] + 16))
          || (swift_beginAccess(), *(_QWORD *)(v1[6] + 16))
          || (swift_beginAccess(), *(_QWORD *)(a1[4] + 16))
          || (swift_beginAccess(), *(_QWORD *)(a1[6] + 16))))
  {
    sub_1BE0FDBB4();
    v4 = (_QWORD *)sub_1BE0FDBB4();
    v3 = sub_1BE0FD930(v4);
    swift_release();
    swift_release();
  }
  else
  {
    v3 = sub_1BE0FD930(a1);
  }
  return v3 & 1;
}

uint64_t sub_1BE0FDBB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;
  uint64_t v10;

  v1 = v0;
  sub_1BE0FC79C(0, &v9);
  if (*(_QWORD *)(*((_QWORD *)&v9 + 1) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v2)
    {
      swift_retain();
      return v1;
    }
  }
  if (qword_1ED6F4510 != -1)
    swift_once();
  swift_retain();
  sub_1BE1B2E40();
  swift_release();
  v3 = v9;
  v4 = BYTE8(v9);
  v5 = v10;
  v6 = swift_allocObject();
  v7 = (_QWORD *)swift_retain();
  sub_1BE0FC59C(v7);
  swift_beginAccess();
  sub_1BDDB2D90(v3, v4, v5);
  swift_endAccess();
  swift_beginAccess();
  sub_1BDDB2D90(v3, v4, v5);
  swift_endAccess();
  *(_QWORD *)(v6 + 56) = v3;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BE0FDD3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t i;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t j;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  v2 = v1;
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3CB8);
  v4 = MEMORY[0x1E0C80A78](v147);
  v137 = (uint64_t)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v138 = (uint64_t)&v135 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v139 = (uint64_t)&v135 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v135 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v144 = (char *)&v135 - v14;
  MEMORY[0x1E0C80A78](v13);
  v142 = (uint64_t)&v135 - v15;
  swift_beginAccess();
  v16 = a1[4];
  v150 = a1[3];
  v151 = v16;
  swift_beginAccess();
  v17 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = swift_bridgeObjectRetain();
  sub_1BDEE9868(v18);
  sub_1BDEE9868(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = a1[6];
  v148 = a1[5];
  v149 = v19;
  swift_beginAccess();
  v20 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRetain();
  sub_1BDEE9868(v21);
  sub_1BDEE9868(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v140 = v151;
  v22 = *(_QWORD *)(v150 + 64);
  v135 = v150 + 64;
  v23 = 1 << *(_BYTE *)(v150 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v136 = (unint64_t)(v23 + 63) >> 6;
  v141 = v150;
  result = swift_bridgeObjectRetain_n();
  v27 = 0;
  v28 = 0;
  v146 = v12;
  v29 = (uint64_t)v144;
  v145 = 0;
  if (!v25)
    goto LABEL_5;
LABEL_4:
  v30 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  v143 = v27;
  for (i = v30 | (v27 << 6); ; i = __clz(__rbit64(v33)) + (v34 << 6))
  {
    v36 = v141;
    v37 = *(_QWORD *)(v141 + 48);
    v38 = type metadata accessor for Replica();
    v39 = v142;
    sub_1BDD9C318(v37 + *(_QWORD *)(*(_QWORD *)(v38 - 8) + 72) * i, v142, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
    v40 = *(_QWORD *)(v36 + 56);
    v41 = sub_1BE1B206C();
    v42 = *(_QWORD *)(v41 - 8);
    v43 = v40 + *(_QWORD *)(v42 + 72) * i;
    v44 = v147;
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
    v45(v39 + *(int *)(v147 + 48), v43, v41);
    sub_1BDDA2EF0(v39, v29, &qword_1ED6F3CB8);
    v46 = *(int *)(v44 + 48);
    v47 = &v12[v46];
    v48 = v29 + v46;
    sub_1BDD9C318(v29, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
    v45((uint64_t)v47, v48, v41);
    v49 = sub_1BE1B1FB8();
    result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v47, v41);
    v28 = v145 + v49;
    if (__OFADD__(v145, v49))
    {
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    sub_1BDD9C3E0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
    result = sub_1BDD86E30(v29, &qword_1ED6F3CB8);
    v27 = v143;
    v145 = v28;
    if (v25)
      goto LABEL_4;
LABEL_5:
    v32 = v27 + 1;
    if (__OFADD__(v27, 1))
      goto LABEL_101;
    if (v32 >= v136)
      goto LABEL_24;
    v33 = *(_QWORD *)(v135 + 8 * v32);
    v34 = v27 + 1;
    if (!v33)
    {
      v34 = v27 + 2;
      if (v27 + 2 >= v136)
        goto LABEL_24;
      v33 = *(_QWORD *)(v135 + 8 * v34);
      if (!v33)
      {
        v34 = v27 + 3;
        if (v27 + 3 >= v136)
          goto LABEL_24;
        v33 = *(_QWORD *)(v135 + 8 * v34);
        if (!v33)
        {
          v34 = v27 + 4;
          if (v27 + 4 >= v136)
            goto LABEL_24;
          v33 = *(_QWORD *)(v135 + 8 * v34);
          if (!v33)
            break;
        }
      }
    }
LABEL_20:
    v25 = (v33 - 1) & v33;
    v143 = v34;
  }
  v35 = v27 + 5;
  if (v27 + 5 >= v136)
  {
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    v50 = *(_QWORD *)(v140 + 64);
    v135 = v140 + 64;
    v51 = 1 << *(_BYTE *)(v140 + 32);
    v52 = -1;
    if (v51 < 64)
      v52 = ~(-1 << v51);
    v53 = v52 & v50;
    v136 = (unint64_t)(v51 + 63) >> 6;
    result = swift_bridgeObjectRetain_n();
    v54 = 0;
    v55 = 0;
    v56 = (uint64_t)v144;
    v143 = 0;
    if (!v53)
      goto LABEL_28;
LABEL_27:
    v57 = __clz(__rbit64(v53));
    v53 &= v53 - 1;
    v142 = v54;
    for (j = v57 | (v54 << 6); ; j = __clz(__rbit64(v60)) + (v61 << 6))
    {
      v63 = v140;
      v64 = *(_QWORD *)(v140 + 48);
      v65 = type metadata accessor for Replica();
      v66 = v139;
      sub_1BDD9C318(v64 + *(_QWORD *)(*(_QWORD *)(v65 - 8) + 72) * j, v139, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
      v67 = *(_QWORD *)(v63 + 56);
      v68 = sub_1BE1B206C();
      v69 = *(_QWORD *)(v68 - 8);
      v70 = v67 + *(_QWORD *)(v69 + 72) * j;
      v71 = v147;
      v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
      v72(v66 + *(int *)(v147 + 48), v70, v68);
      sub_1BDDA2EF0(v66, v56, &qword_1ED6F3CB8);
      v73 = *(int *)(v71 + 48);
      v74 = (uint64_t)v146;
      v75 = &v146[v73];
      v76 = v56 + v73;
      sub_1BDD9C318(v56, (uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
      v72((uint64_t)v75, v76, v68);
      v77 = sub_1BE1B1FB8();
      result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v75, v68);
      v55 = v143 + v77;
      if (__OFADD__(v143, v77))
        break;
      sub_1BDD9C3E0(v74, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
      result = sub_1BDD86E30(v56, &qword_1ED6F3CB8);
      v28 = v145;
      v54 = v142;
      v143 = v55;
      if (v53)
        goto LABEL_27;
LABEL_28:
      v59 = v54 + 1;
      if (__OFADD__(v54, 1))
        goto LABEL_102;
      if (v59 >= v136)
      {
LABEL_47:
        swift_release();
        swift_bridgeObjectRelease_n();
        result = swift_bridgeObjectRelease();
        if (__OFADD__(v28, v55))
          goto LABEL_109;
        v136 = v28 + v55;
        v140 = v149;
        v78 = *(_QWORD *)(v148 + 64);
        v139 = v148 + 64;
        v79 = 1 << *(_BYTE *)(v148 + 32);
        v80 = -1;
        if (v79 < 64)
          v80 = ~(-1 << v79);
        v81 = v80 & v78;
        v142 = (unint64_t)(v79 + 63) >> 6;
        v141 = v148;
        result = swift_bridgeObjectRetain_n();
        v82 = 0;
        v83 = 0;
        v84 = (uint64_t)v146;
        v145 = 0;
        if (!v81)
          goto LABEL_52;
LABEL_51:
        v85 = __clz(__rbit64(v81));
        v81 &= v81 - 1;
        v143 = v82;
        v86 = v85 | (v82 << 6);
        v87 = (uint64_t)v144;
        while (1)
        {
          v92 = v141;
          v93 = *(_QWORD *)(v141 + 48);
          v94 = type metadata accessor for Replica();
          v95 = v138;
          sub_1BDD9C318(v93 + *(_QWORD *)(*(_QWORD *)(v94 - 8) + 72) * v86, v138, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
          v96 = *(_QWORD *)(v92 + 56);
          v97 = sub_1BE1B206C();
          v98 = *(_QWORD *)(v97 - 8);
          v99 = v96 + *(_QWORD *)(v98 + 72) * v86;
          v100 = v147;
          v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16);
          v101(v95 + *(int *)(v147 + 48), v99, v97);
          sub_1BDDA2EF0(v95, v87, &qword_1ED6F3CB8);
          v102 = *(int *)(v100 + 48);
          v103 = v84 + v102;
          v104 = v87 + v102;
          sub_1BDD9C318(v87, v84, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
          v101(v103, v104, v97);
          v105 = sub_1BE1B1FB8();
          result = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8))(v103, v97);
          v83 = v145 + v105;
          if (__OFADD__(v145, v105))
            goto LABEL_99;
          sub_1BDD9C3E0(v84, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
          result = sub_1BDD86E30(v87, &qword_1ED6F3CB8);
          v82 = v143;
          v145 = v83;
          if (v81)
            goto LABEL_51;
LABEL_52:
          v88 = v82 + 1;
          v87 = (uint64_t)v144;
          if (__OFADD__(v82, 1))
            goto LABEL_103;
          if (v88 >= v142)
          {
LABEL_71:
            swift_release();
            swift_bridgeObjectRelease();
            v106 = *(_QWORD *)(v140 + 64);
            v138 = v140 + 64;
            v107 = 1 << *(_BYTE *)(v140 + 32);
            v108 = -1;
            if (v107 < 64)
              v108 = ~(-1 << v107);
            v109 = v108 & v106;
            v139 = (unint64_t)(v107 + 63) >> 6;
            result = swift_bridgeObjectRetain_n();
            v110 = 0;
            v111 = 0;
            v112 = (uint64_t)v146;
            v143 = 0;
            if (!v109)
              goto LABEL_75;
LABEL_74:
            v113 = __clz(__rbit64(v109));
            v109 &= v109 - 1;
            v142 = v110;
            v114 = v113 | (v110 << 6);
            v115 = (uint64_t)v144;
            while (1)
            {
              v120 = v140;
              v121 = *(_QWORD *)(v140 + 48);
              v122 = type metadata accessor for Replica();
              v123 = v137;
              sub_1BDD9C318(v121 + *(_QWORD *)(*(_QWORD *)(v122 - 8) + 72) * v114, v137, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
              v124 = *(_QWORD *)(v120 + 56);
              v125 = sub_1BE1B206C();
              v126 = *(_QWORD *)(v125 - 8);
              v127 = v124 + *(_QWORD *)(v126 + 72) * v114;
              v128 = v147;
              v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16);
              v129(v123 + *(int *)(v147 + 48), v127, v125);
              sub_1BDDA2EF0(v123, v115, &qword_1ED6F3CB8);
              v130 = *(int *)(v128 + 48);
              v131 = v112 + v130;
              v132 = v115 + v130;
              sub_1BDD9C318(v115, v112, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
              v129(v131, v132, v125);
              v133 = sub_1BE1B1FB8();
              result = (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8))(v131, v125);
              v111 = v143 + v133;
              if (__OFADD__(v143, v133))
                goto LABEL_100;
              sub_1BDD9C3E0(v112, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
              result = sub_1BDD86E30(v115, &qword_1ED6F3CB8);
              v83 = v145;
              v110 = v142;
              v143 = v111;
              if (v109)
                goto LABEL_74;
LABEL_75:
              v116 = v110 + 1;
              v115 = (uint64_t)v144;
              if (__OFADD__(v110, 1))
                goto LABEL_104;
              if (v116 >= v139)
              {
LABEL_94:
                swift_release();
                swift_bridgeObjectRelease_n();
                result = swift_bridgeObjectRelease();
                v134 = v83 + v111;
                if (__OFADD__(v83, v111))
                  goto LABEL_110;
                result = v136 - v134;
                if (__OFSUB__(v136, v134))
                  goto LABEL_111;
                return result;
              }
              v117 = *(_QWORD *)(v138 + 8 * v116);
              v118 = v110 + 1;
              if (!v117)
              {
                v118 = v110 + 2;
                if (v110 + 2 >= v139)
                  goto LABEL_94;
                v117 = *(_QWORD *)(v138 + 8 * v118);
                if (!v117)
                {
                  v118 = v110 + 3;
                  if (v110 + 3 >= v139)
                    goto LABEL_94;
                  v117 = *(_QWORD *)(v138 + 8 * v118);
                  if (!v117)
                  {
                    v118 = v110 + 4;
                    if (v110 + 4 >= v139)
                      goto LABEL_94;
                    v117 = *(_QWORD *)(v138 + 8 * v118);
                    if (!v117)
                    {
                      v119 = v110 + 5;
                      if (v110 + 5 >= v139)
                        goto LABEL_94;
                      v117 = *(_QWORD *)(v138 + 8 * v119);
                      if (!v117)
                      {
                        while (1)
                        {
                          v118 = v119 + 1;
                          if (__OFADD__(v119, 1))
                            goto LABEL_108;
                          if (v118 >= v139)
                            goto LABEL_94;
                          v117 = *(_QWORD *)(v138 + 8 * v118);
                          ++v119;
                          if (v117)
                            goto LABEL_90;
                        }
                      }
                      v118 = v110 + 5;
                    }
                  }
                }
              }
LABEL_90:
              v109 = (v117 - 1) & v117;
              v142 = v118;
              v114 = __clz(__rbit64(v117)) + (v118 << 6);
            }
          }
          v89 = *(_QWORD *)(v139 + 8 * v88);
          v90 = v82 + 1;
          if (!v89)
          {
            v90 = v82 + 2;
            if (v82 + 2 >= v142)
              goto LABEL_71;
            v89 = *(_QWORD *)(v139 + 8 * v90);
            if (!v89)
            {
              v90 = v82 + 3;
              if (v82 + 3 >= v142)
                goto LABEL_71;
              v89 = *(_QWORD *)(v139 + 8 * v90);
              if (!v89)
              {
                v90 = v82 + 4;
                if (v82 + 4 >= v142)
                  goto LABEL_71;
                v89 = *(_QWORD *)(v139 + 8 * v90);
                if (!v89)
                {
                  v91 = v82 + 5;
                  if (v82 + 5 >= v142)
                    goto LABEL_71;
                  v89 = *(_QWORD *)(v139 + 8 * v91);
                  if (!v89)
                  {
                    while (1)
                    {
                      v90 = v91 + 1;
                      if (__OFADD__(v91, 1))
                        goto LABEL_107;
                      if (v90 >= v142)
                        goto LABEL_71;
                      v89 = *(_QWORD *)(v139 + 8 * v90);
                      ++v91;
                      if (v89)
                        goto LABEL_67;
                    }
                  }
                  v90 = v82 + 5;
                }
              }
            }
          }
LABEL_67:
          v81 = (v89 - 1) & v89;
          v143 = v90;
          v86 = __clz(__rbit64(v89)) + (v90 << 6);
        }
      }
      v60 = *(_QWORD *)(v135 + 8 * v59);
      v61 = v54 + 1;
      if (!v60)
      {
        v61 = v54 + 2;
        if (v54 + 2 >= v136)
          goto LABEL_47;
        v60 = *(_QWORD *)(v135 + 8 * v61);
        if (!v60)
        {
          v61 = v54 + 3;
          if (v54 + 3 >= v136)
            goto LABEL_47;
          v60 = *(_QWORD *)(v135 + 8 * v61);
          if (!v60)
          {
            v61 = v54 + 4;
            if (v54 + 4 >= v136)
              goto LABEL_47;
            v60 = *(_QWORD *)(v135 + 8 * v61);
            if (!v60)
            {
              v62 = v54 + 5;
              if (v54 + 5 >= v136)
                goto LABEL_47;
              v60 = *(_QWORD *)(v135 + 8 * v62);
              if (!v60)
              {
                while (1)
                {
                  v61 = v62 + 1;
                  if (__OFADD__(v62, 1))
                    goto LABEL_106;
                  if (v61 >= v136)
                    goto LABEL_47;
                  v60 = *(_QWORD *)(v135 + 8 * v61);
                  ++v62;
                  if (v60)
                    goto LABEL_43;
                }
              }
              v61 = v54 + 5;
            }
          }
        }
      }
LABEL_43:
      v53 = (v60 - 1) & v60;
      v142 = v61;
    }
    goto LABEL_98;
  }
  v33 = *(_QWORD *)(v135 + 8 * v35);
  if (v33)
  {
    v34 = v27 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v34 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v34 >= v136)
      goto LABEL_24;
    v33 = *(_QWORD *)(v135 + 8 * v34);
    ++v35;
    if (v33)
      goto LABEL_20;
  }
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
  return result;
}

uint64_t sub_1BE0FEAD4(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1;
  if (v1 == a1)
    return 0;
  if (v2[7] == a1[7])
    return sub_1BE0FDD3C(v2);
  swift_beginAccess();
  if (!*(_QWORD *)(v2[4] + 16))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(v2[6] + 16))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(a1[4] + 16))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(a1[6] + 16))
          return sub_1BE0FDD3C(v2);
      }
    }
  }
  sub_1BE0FDBB4();
  v5 = (_QWORD *)sub_1BE0FDBB4();
  v4 = sub_1BE0FDD3C(v5);
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1BE0FEBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;

  sub_1BE0FC79C(0, &v6);
  if (*(_QWORD *)(*((_QWORD *)&v6 + 1) + 16) || *(_QWORD *)(v6 + 16))
  {
    if (qword_1ED6F4510 != -1)
      v1 = swift_once();
    MEMORY[0x1E0C80A78](v1);
    swift_retain();
    sub_1BE1B2E40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v2 = v6;
    v3 = BYTE8(v6);
    v4 = v7;
    swift_beginAccess();
    sub_1BDDB2D90(v2, v3, v4);
    swift_endAccess();
    swift_beginAccess();
    sub_1BDDB2D90(v2, v3, v4);
    swift_endAccess();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED6F4510 != -1)
      swift_once();
    swift_retain();
    sub_1BE1B2E40();
    result = swift_release();
    v2 = v6;
  }
  *(_QWORD *)(v0 + 56) = v2;
  return result;
}

_QWORD *sub_1BE0FEDEC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;

  v3 = v2;
  v54 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v58 = (uint64_t)&v49 - v10;
  v62 = type metadata accessor for Proto_Version(0);
  v55 = *(_QWORD *)(v62 - 8);
  v11 = MEMORY[0x1E0C80A78](v62);
  v52 = (char **)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v57 = (char **)((char *)&v49 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F43C0);
  MEMORY[0x1E0C80A78](v14);
  v53 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BE1B1F58();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0DEE9E0];
  v3[3] = MEMORY[0x1E0DEE9E0];
  v3[4] = v20;
  v3[5] = v20;
  v51 = v3 + 5;
  v3[6] = v20;
  v3[7] = 0;
  v56 = *(int *)(type metadata accessor for Proto_Counter(0) + 20);
  v21 = *(_QWORD *)(a1 + v56);
  swift_beginAccess();
  v22 = *(_QWORD *)(a2 + 24);
  v23 = *(_QWORD *)(v22 + 16);
  if (v23 && (v24 = *(_QWORD *)(v21 + 16), v24 < v23))
  {
    v49 = v9;
    v50 = a2;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, v22+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v24, v16);
    type metadata accessor for ReplicaState();
    v25 = swift_allocObject();
    v26 = v25 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
    v27 = type metadata accessor for Replica();
    v28 = *(_QWORD *)(v27 - 8);
    v54 = a1;
    v29 = v3;
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v30(v26, 1, 1, v27);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v25 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v19, v16);
    *(_QWORD *)(v25 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
    *(_QWORD *)(v25 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
    v31 = (uint64_t)v53;
    v30((uint64_t)v53, 1, 1, v27);
    v3 = v29;
    v32 = v54;
    swift_beginAccess();
    sub_1BDDA1AF4(v31, v26, &qword_1ED6F43C0);
    swift_endAccess();
    v29[2] = v25;
    v33 = v56;
    v34 = *(_QWORD *)(v32 + v56)
        + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
    swift_beginAccess();
    v35 = v58;
    sub_1BDD86DEC(v34, v58, &qword_1ED6F37A8);
    v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
    v37 = v62;
    if (v36(v35, 1, v62) == 1)
    {
      v38 = MEMORY[0x1E0DEE9D8];
      v39 = v57;
      *v57 = MEMORY[0x1E0DEE9D8];
      v39[1] = v38;
      sub_1BE1B20E4();
      sub_1BDD86E30(v35, &qword_1ED6F37A8);
    }
    else
    {
      v39 = v57;
      sub_1BDDA2E8C(v35, (uint64_t)v57, type metadata accessor for Proto_Version);
    }
    v41 = v50;
    swift_retain();
    v42 = v59;
    sub_1BDDA9DA0(v39, v41, &v60);
    v43 = (uint64_t)v49;
    if (v42)
    {
      swift_release();
      swift_release();
      sub_1BDD9C3E0(v32, type metadata accessor for Proto_Counter);
    }
    else
    {
      swift_beginAccess();
      *(_OWORD *)(v3 + 3) = v60;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v32 + v33)
          + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
      swift_beginAccess();
      sub_1BDD86DEC(v44, v43, &qword_1ED6F37A8);
      if (v36(v43, 1, v37) == 1)
      {
        v45 = MEMORY[0x1E0DEE9D8];
        v46 = v52;
        *v52 = MEMORY[0x1E0DEE9D8];
        v46[1] = v45;
        sub_1BE1B20E4();
        sub_1BDD86E30(v43, &qword_1ED6F37A8);
      }
      else
      {
        v46 = v52;
        sub_1BDDA2E8C(v43, (uint64_t)v52, type metadata accessor for Proto_Version);
      }
      swift_retain();
      sub_1BDDA9DA0(v46, v41, &v61);
      swift_beginAccess();
      *(_OWORD *)(v3 + 5) = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED6F4510 != -1)
        swift_once();
      swift_retain();
      sub_1BE1B2E40();
      swift_release();
      swift_release();
      v48 = v61;
      sub_1BDD9C3E0(v32, type metadata accessor for Proto_Counter);
      v3[7] = v48;
    }
  }
  else
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_OWORD *)v40 = xmmword_1BE1BB990;
    *(_BYTE *)(v40 + 16) = 0;
    swift_willThrow();
    swift_release();
    sub_1BDD9C3E0(a1, type metadata accessor for Proto_Counter);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  return v3;
}

uint64_t sub_1BE0FF460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = v0;
  sub_1BE0FC79C(0, &v6);
  if (*(_QWORD *)(*((_QWORD *)&v6 + 1) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v2)
    {
      swift_retain();
      return v1;
    }
  }
  v3 = swift_allocObject();
  v4 = (_QWORD *)swift_retain();
  sub_1BE0FC59C(v4);
  sub_1BE0FEBF8();
  return v3;
}

uint64_t sub_1BE0FF514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[5];

  v3 = v2;
  v6 = type metadata accessor for Proto_Version(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1BE1B1F58();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B20E4();
  v13 = *(int *)(type metadata accessor for Proto_Counter(0) + 20);
  if (qword_1EF52BFB8 != -1)
    swift_once();
  *(_QWORD *)(a2 + v13) = qword_1EF530758;
  v14 = v2[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  swift_retain();
  v15 = sub_1BDDAE244((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Counter._StorageClass(0);
    swift_allocObject();
    v16 = swift_retain();
    *(_QWORD *)(a2 + v13) = sub_1BE132E6C(v16);
    swift_release();
  }
  v17 = *(_QWORD *)(a2 + v13);
  swift_beginAccess();
  *(_QWORD *)(v17 + 16) = v15;
  swift_beginAccess();
  v18 = v3[4];
  v22[2] = v3[3];
  v22[3] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDDAD780(a1, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BE12B9C8((uint64_t)v8);
  swift_beginAccess();
  v20 = v3[5];
  v19 = v3[6];
  v22[0] = v20;
  v22[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDDAD780(a1, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BE12BB4C((uint64_t)v8);
}

uint64_t CRCounter.copy(renamingReferences:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = CRCounter.value.getter();
  type metadata accessor for CRCounterRef();
  v3 = swift_allocObject();
  sub_1BE0FC3F4();
  *a1 = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v4 = swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    sub_1BE0FC59C(v5);
    *a1 = v4;
    swift_release();
  }
  return sub_1BE0FCCE0(v2);
}

uint64_t CRCounter.value.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  unint64_t v24;
  unint64_t i;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t (*v53)();
  uint64_t v54;
  unint64_t v55;
  unint64_t j;
  int64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)();
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t k;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  int64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;

  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3CB8);
  v1 = MEMORY[0x1E0C80A78](v150);
  v141 = (uint64_t)&v137 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v142 = (uint64_t)&v137 - v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v143 = (uint64_t)&v137 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v137 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v151 = (uint64_t)&v137 - v11;
  MEMORY[0x1E0C80A78](v10);
  v146 = (uint64_t)&v137 - v12;
  v13 = *v0;
  swift_beginAccess();
  v138 = v13;
  v14 = *(_QWORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 32);
  v16 = *(_QWORD *)(v14 + 64);
  v139 = v14 + 64;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v140 = (unint64_t)(v17 + 63) >> 6;
  v145 = v14;
  swift_bridgeObjectRetain_n();
  v144 = v15;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v22 = 0;
  v23 = type metadata accessor for Replica;
  v149 = v9;
  v148 = 0;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v147 = v21;
  for (i = v24 | (v21 << 6); ; i = __clz(__rbit64(v27)) + (v28 << 6))
  {
    v30 = v145;
    v31 = *(_QWORD *)(v145 + 48);
    v32 = type metadata accessor for Replica();
    v33 = v146;
    sub_1BDD9C318(v31 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * i, v146, (uint64_t (*)(_QWORD))v23);
    v34 = *(_QWORD *)(v30 + 56);
    v35 = sub_1BE1B206C();
    v36 = *(_QWORD *)(v35 - 8);
    v37 = v34 + *(_QWORD *)(v36 + 72) * i;
    v38 = v150;
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v39(v33 + *(int *)(v150 + 48), v37, v35);
    v40 = v23;
    v41 = v151;
    sub_1BDDA2EF0(v33, v151, &qword_1ED6F3CB8);
    v42 = *(int *)(v38 + 48);
    v43 = &v9[v42];
    v44 = v41 + v42;
    v45 = v41;
    v23 = v40;
    sub_1BDD9C318(v45, (uint64_t)v9, (uint64_t (*)(_QWORD))v40);
    v39((uint64_t)v43, v44, v35);
    v46 = sub_1BE1B1FB8();
    result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v43, v35);
    v22 = v148 + v46;
    if (__OFADD__(v148, v46))
    {
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    sub_1BDD9C3E0((uint64_t)v9, (uint64_t (*)(_QWORD))v23);
    result = sub_1BDD86E30(v151, &qword_1ED6F3CB8);
    v21 = v147;
    v148 = v22;
    if (v19)
      goto LABEL_4;
LABEL_5:
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
      goto LABEL_101;
    if (v26 >= v140)
      goto LABEL_24;
    v27 = *(_QWORD *)(v139 + 8 * v26);
    v28 = v21 + 1;
    if (!v27)
    {
      v28 = v21 + 2;
      if (v21 + 2 >= v140)
        goto LABEL_24;
      v27 = *(_QWORD *)(v139 + 8 * v28);
      if (!v27)
      {
        v28 = v21 + 3;
        if (v21 + 3 >= v140)
          goto LABEL_24;
        v27 = *(_QWORD *)(v139 + 8 * v28);
        if (!v27)
        {
          v28 = v21 + 4;
          if (v21 + 4 >= v140)
            goto LABEL_24;
          v27 = *(_QWORD *)(v139 + 8 * v28);
          if (!v27)
            break;
        }
      }
    }
LABEL_20:
    v19 = (v27 - 1) & v27;
    v147 = v28;
  }
  v29 = v21 + 5;
  if (v21 + 5 >= v140)
  {
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    v47 = *(_QWORD *)(v144 + 64);
    v139 = v144 + 64;
    v48 = 1 << *(_BYTE *)(v144 + 32);
    v49 = -1;
    if (v48 < 64)
      v49 = ~(-1 << v48);
    v50 = v49 & v47;
    v140 = (unint64_t)(v48 + 63) >> 6;
    result = swift_bridgeObjectRetain_n();
    v51 = 0;
    v52 = 0;
    v53 = type metadata accessor for Replica;
    v54 = v151;
    v147 = 0;
    if (!v50)
      goto LABEL_28;
LABEL_27:
    v55 = __clz(__rbit64(v50));
    v50 &= v50 - 1;
    v146 = v51;
    for (j = v55 | (v51 << 6); ; j = __clz(__rbit64(v58)) + (v59 << 6))
    {
      v61 = v144;
      v62 = *(_QWORD *)(v144 + 48);
      v63 = type metadata accessor for Replica();
      v64 = v143;
      sub_1BDD9C318(v62 + *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72) * j, v143, (uint64_t (*)(_QWORD))v53);
      v65 = *(_QWORD *)(v61 + 56);
      v66 = v53;
      v67 = sub_1BE1B206C();
      v68 = *(_QWORD *)(v67 - 8);
      v69 = v65 + *(_QWORD *)(v68 + 72) * j;
      v70 = v150;
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
      v71(v64 + *(int *)(v150 + 48), v69, v67);
      sub_1BDDA2EF0(v64, v54, &qword_1ED6F3CB8);
      v72 = *(int *)(v70 + 48);
      v73 = (uint64_t)v149;
      v74 = &v149[v72];
      v75 = v54 + v72;
      sub_1BDD9C318(v54, (uint64_t)v149, (uint64_t (*)(_QWORD))v66);
      v71((uint64_t)v74, v75, v67);
      v76 = sub_1BE1B1FB8();
      result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v74, v67);
      v52 = v147 + v76;
      if (__OFADD__(v147, v76))
        break;
      sub_1BDD9C3E0(v73, (uint64_t (*)(_QWORD))v66);
      result = sub_1BDD86E30(v151, &qword_1ED6F3CB8);
      v22 = v148;
      v53 = v66;
      v51 = v146;
      v147 = v52;
      if (v50)
        goto LABEL_27;
LABEL_28:
      v57 = v51 + 1;
      if (__OFADD__(v51, 1))
        goto LABEL_102;
      if (v57 >= v140)
      {
LABEL_47:
        swift_release();
        swift_bridgeObjectRelease_n();
        result = swift_bridgeObjectRelease();
        if (__OFADD__(v22, v52))
          goto LABEL_109;
        v140 = v22 + v52;
        v77 = v138;
        swift_beginAccess();
        v78 = *(_QWORD *)(v77 + 40);
        v79 = *(_QWORD *)(v77 + 48);
        v80 = *(_QWORD *)(v78 + 64);
        v143 = v78 + 64;
        v81 = 1 << *(_BYTE *)(v78 + 32);
        v82 = -1;
        if (v81 < 64)
          v82 = ~(-1 << v81);
        v83 = v82 & v80;
        v145 = v78;
        v146 = (unint64_t)(v81 + 63) >> 6;
        swift_bridgeObjectRetain_n();
        v144 = v79;
        result = swift_bridgeObjectRetain();
        v84 = 0;
        v85 = 0;
        v86 = v151;
        v148 = 0;
        if (!v83)
          goto LABEL_52;
LABEL_51:
        v87 = __clz(__rbit64(v83));
        v83 &= v83 - 1;
        v147 = v84;
        for (k = v87 | (v84 << 6); ; k = __clz(__rbit64(v90)) + (v91 << 6))
        {
          v93 = v145;
          v94 = *(_QWORD *)(v145 + 48);
          v95 = type metadata accessor for Replica();
          v96 = v142;
          sub_1BDD9C318(v94 + *(_QWORD *)(*(_QWORD *)(v95 - 8) + 72) * k, v142, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
          v97 = *(_QWORD *)(v93 + 56);
          v98 = sub_1BE1B206C();
          v99 = *(_QWORD *)(v98 - 8);
          v100 = v97 + *(_QWORD *)(v99 + 72) * k;
          v101 = v150;
          v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16);
          v102(v96 + *(int *)(v150 + 48), v100, v98);
          sub_1BDDA2EF0(v96, v86, &qword_1ED6F3CB8);
          v103 = *(int *)(v101 + 48);
          v104 = (uint64_t)v149;
          v105 = &v149[v103];
          v106 = v86 + v103;
          sub_1BDD9C318(v86, (uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
          v102((uint64_t)v105, v106, v98);
          v107 = sub_1BE1B1FB8();
          result = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v105, v98);
          v85 = v148 + v107;
          if (__OFADD__(v148, v107))
            break;
          sub_1BDD9C3E0(v104, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
          result = sub_1BDD86E30(v86, &qword_1ED6F3CB8);
          v84 = v147;
          v148 = v85;
          if (v83)
            goto LABEL_51;
LABEL_52:
          v89 = v84 + 1;
          if (__OFADD__(v84, 1))
            goto LABEL_103;
          if (v89 >= v146)
          {
LABEL_71:
            swift_release();
            swift_bridgeObjectRelease();
            v108 = *(_QWORD *)(v144 + 64);
            v142 = v144 + 64;
            v109 = 1 << *(_BYTE *)(v144 + 32);
            v110 = -1;
            if (v109 < 64)
              v110 = ~(-1 << v109);
            v111 = v110 & v108;
            v143 = (unint64_t)(v109 + 63) >> 6;
            result = swift_bridgeObjectRetain_n();
            v112 = 0;
            v113 = 0;
            v114 = (uint64_t)v149;
            v147 = 0;
            if (!v111)
              goto LABEL_75;
LABEL_74:
            v115 = __clz(__rbit64(v111));
            v111 &= v111 - 1;
            v146 = v112;
            v116 = v115 | (v112 << 6);
            v117 = v151;
            while (1)
            {
              v122 = v144;
              v123 = *(_QWORD *)(v144 + 48);
              v124 = type metadata accessor for Replica();
              v125 = v141;
              sub_1BDD9C318(v123 + *(_QWORD *)(*(_QWORD *)(v124 - 8) + 72) * v116, v141, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
              v126 = *(_QWORD *)(v122 + 56);
              v127 = sub_1BE1B206C();
              v128 = *(_QWORD *)(v127 - 8);
              v129 = v126 + *(_QWORD *)(v128 + 72) * v116;
              v130 = v150;
              v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 16);
              v131(v125 + *(int *)(v150 + 48), v129, v127);
              sub_1BDDA2EF0(v125, v117, &qword_1ED6F3CB8);
              v132 = *(int *)(v130 + 48);
              v133 = v114 + v132;
              v134 = v117 + v132;
              sub_1BDD9C318(v117, v114, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
              v131(v133, v134, v127);
              v135 = sub_1BE1B1FB8();
              result = (*(uint64_t (**)(uint64_t, uint64_t))(v128 + 8))(v133, v127);
              v113 = v147 + v135;
              if (__OFADD__(v147, v135))
                goto LABEL_100;
              sub_1BDD9C3E0(v114, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
              result = sub_1BDD86E30(v117, &qword_1ED6F3CB8);
              v85 = v148;
              v112 = v146;
              v147 = v113;
              if (v111)
                goto LABEL_74;
LABEL_75:
              v118 = v112 + 1;
              v117 = v151;
              if (__OFADD__(v112, 1))
                goto LABEL_104;
              if (v118 >= v143)
              {
LABEL_94:
                swift_release();
                swift_bridgeObjectRelease_n();
                result = swift_bridgeObjectRelease();
                v136 = v85 + v113;
                if (__OFADD__(v85, v113))
                  goto LABEL_110;
                result = v140 - v136;
                if (__OFSUB__(v140, v136))
                  goto LABEL_111;
                return result;
              }
              v119 = *(_QWORD *)(v142 + 8 * v118);
              v120 = v112 + 1;
              if (!v119)
              {
                v120 = v112 + 2;
                if (v112 + 2 >= v143)
                  goto LABEL_94;
                v119 = *(_QWORD *)(v142 + 8 * v120);
                if (!v119)
                {
                  v120 = v112 + 3;
                  if (v112 + 3 >= v143)
                    goto LABEL_94;
                  v119 = *(_QWORD *)(v142 + 8 * v120);
                  if (!v119)
                  {
                    v120 = v112 + 4;
                    if (v112 + 4 >= v143)
                      goto LABEL_94;
                    v119 = *(_QWORD *)(v142 + 8 * v120);
                    if (!v119)
                    {
                      v121 = v112 + 5;
                      if (v112 + 5 >= v143)
                        goto LABEL_94;
                      v119 = *(_QWORD *)(v142 + 8 * v121);
                      if (!v119)
                      {
                        while (1)
                        {
                          v120 = v121 + 1;
                          if (__OFADD__(v121, 1))
                            goto LABEL_108;
                          if (v120 >= v143)
                            goto LABEL_94;
                          v119 = *(_QWORD *)(v142 + 8 * v120);
                          ++v121;
                          if (v119)
                            goto LABEL_90;
                        }
                      }
                      v120 = v112 + 5;
                    }
                  }
                }
              }
LABEL_90:
              v111 = (v119 - 1) & v119;
              v146 = v120;
              v116 = __clz(__rbit64(v119)) + (v120 << 6);
            }
          }
          v90 = *(_QWORD *)(v143 + 8 * v89);
          v91 = v84 + 1;
          if (!v90)
          {
            v91 = v84 + 2;
            if (v84 + 2 >= v146)
              goto LABEL_71;
            v90 = *(_QWORD *)(v143 + 8 * v91);
            if (!v90)
            {
              v91 = v84 + 3;
              if (v84 + 3 >= v146)
                goto LABEL_71;
              v90 = *(_QWORD *)(v143 + 8 * v91);
              if (!v90)
              {
                v91 = v84 + 4;
                if (v84 + 4 >= v146)
                  goto LABEL_71;
                v90 = *(_QWORD *)(v143 + 8 * v91);
                if (!v90)
                {
                  v92 = v84 + 5;
                  if (v84 + 5 >= v146)
                    goto LABEL_71;
                  v90 = *(_QWORD *)(v143 + 8 * v92);
                  if (!v90)
                  {
                    while (1)
                    {
                      v91 = v92 + 1;
                      if (__OFADD__(v92, 1))
                        goto LABEL_107;
                      if (v91 >= v146)
                        goto LABEL_71;
                      v90 = *(_QWORD *)(v143 + 8 * v91);
                      ++v92;
                      if (v90)
                        goto LABEL_67;
                    }
                  }
                  v91 = v84 + 5;
                }
              }
            }
          }
LABEL_67:
          v83 = (v90 - 1) & v90;
          v147 = v91;
        }
        goto LABEL_99;
      }
      v58 = *(_QWORD *)(v139 + 8 * v57);
      v59 = v51 + 1;
      if (!v58)
      {
        v59 = v51 + 2;
        if (v51 + 2 >= v140)
          goto LABEL_47;
        v58 = *(_QWORD *)(v139 + 8 * v59);
        if (!v58)
        {
          v59 = v51 + 3;
          if (v51 + 3 >= v140)
            goto LABEL_47;
          v58 = *(_QWORD *)(v139 + 8 * v59);
          if (!v58)
          {
            v59 = v51 + 4;
            if (v51 + 4 >= v140)
              goto LABEL_47;
            v58 = *(_QWORD *)(v139 + 8 * v59);
            if (!v58)
            {
              v60 = v51 + 5;
              if (v51 + 5 >= v140)
                goto LABEL_47;
              v58 = *(_QWORD *)(v139 + 8 * v60);
              if (!v58)
              {
                while (1)
                {
                  v59 = v60 + 1;
                  if (__OFADD__(v60, 1))
                    goto LABEL_106;
                  if (v59 >= v140)
                    goto LABEL_47;
                  v58 = *(_QWORD *)(v139 + 8 * v59);
                  ++v60;
                  if (v58)
                    goto LABEL_43;
                }
              }
              v59 = v51 + 5;
            }
          }
        }
      }
LABEL_43:
      v50 = (v58 - 1) & v58;
      v146 = v59;
    }
    goto LABEL_98;
  }
  v27 = *(_QWORD *)(v139 + 8 * v29);
  if (v27)
  {
    v28 = v21 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v28 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v28 >= v140)
      goto LABEL_24;
    v27 = *(_QWORD *)(v139 + 8 * v28);
    ++v29;
    if (v27)
      goto LABEL_20;
  }
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
  return result;
}

uint64_t CRCounter.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  type metadata accessor for CRCounterRef();
  v4 = swift_allocObject();
  sub_1BE0FC3F4();
  *a2 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v5 = swift_allocObject();
    v6 = (_QWORD *)swift_retain();
    sub_1BE0FC59C(v6);
    *a2 = v5;
    swift_release();
  }
  return sub_1BE0FCCE0(a1);
}

uint64_t CRCounter.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16) + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
  swift_beginAccess();
  v4 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void CRCounter.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  type metadata accessor for CRCounterRef();
  v4 = swift_allocObject();
  sub_1BE0FC3F4();

  *a2 = v4;
}

_QWORD *CRCounter.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  type metadata accessor for CRCounterRef();
  v2 = swift_allocObject();
  result = sub_1BE0FC3F4();
  *a1 = v2;
  return result;
}

Swift::Void __swiftcall CRCounter.increment(by:)(Swift::Int by)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CRCounterRef();
    v3 = swift_allocObject();
    v4 = (_QWORD *)swift_retain();
    sub_1BE0FC59C(v4);
    *v1 = v3;
    swift_release();
  }
  sub_1BE0FCCE0(by);
}

uint64_t type metadata accessor for CRCounterRef()
{
  return objc_opt_self();
}

Swift::Void __swiftcall CRCounter.decrement(by:)(Swift::Int by)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = -by;
  if (__OFSUB__(0, by))
  {
    __break(1u);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for CRCounterRef();
      v3 = swift_allocObject();
      v4 = (_QWORD *)swift_retain();
      sub_1BE0FC59C(v4);
      *v1 = v3;
      swift_release();
    }
    sub_1BE0FCCE0(v2);
  }
}

uint64_t CRCounter.merge(_:)(_QWORD **a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;

  v2 = *a1;
  result = *v1;
  if ((_QWORD *)*v1 != v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for CRCounterRef();
      v4 = swift_allocObject();
      v5 = (_QWORD *)swift_retain();
      sub_1BE0FC59C(v5);
      *v1 = v4;
      swift_release();
    }
    return sub_1BE0FD0DC(v2);
  }
  return result;
}

Swift::Bool __swiftcall CRCounter.needToFinalizeTimestamps()()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 32) + 16))
    return 1;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16) != 0;
}

uint64_t CRCounter.finalizeTimestamps(_:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0;
  v2 = *v0;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 32) + 16)
    || (result = swift_beginAccess(), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16)))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for CRCounterRef();
      v4 = swift_allocObject();
      v5 = (_QWORD *)swift_retain();
      sub_1BE0FC59C(v5);
      *v1 = v4;
      swift_release();
    }
    return sub_1BE0FEBF8();
  }
  return result;
}

uint64_t CRCounter.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t inited;
  _BYTE v16[40];
  uint64_t v17;

  v5 = type metadata accessor for Proto_CRDT(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v12, (uint64_t)v11, &qword_1ED6F3728);
  LODWORD(v5) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  sub_1BDD86E30((uint64_t)v11, &qword_1ED6F3728);
  if ((_DWORD)v5 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000014;
    *(_QWORD *)(v13 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v13 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = a1;
    *(_QWORD *)(inited + 24) = 0;
    *(_BYTE *)(inited + 32) = 1;
    swift_retain();
    sub_1BDDA0528((uint64_t)v8);
    sub_1BE0FC1E8((uint64_t)v8, a1, &v17);
    result = swift_release();
    if (!v2)
      *a2 = v17;
  }
  return result;
}

uint64_t CRCounter.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for Proto_Counter(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BDDA8D6C();
  if (!v0)
  {
    v8 = result;
    v9 = *(_QWORD *)(result + 16);
    swift_retain();
    sub_1BE1B20E4();
    v10 = *(int *)(v4 + 20);
    if (qword_1ED6F2E18 != -1)
      swift_once();
    *(_QWORD *)&v6[v10] = qword_1ED6F2E08;
    swift_retain();
    sub_1BE0FF460();
    sub_1BE0FF514(v9, (uint64_t)v3);
    swift_release();
    sub_1BE12B7B4((uint64_t)v3);
    v11 = v8 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1BDE07910((uint64_t)v6, v11);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

{
  CRCounter.value.getter();
  return sub_1BE1B2C18();
}

BOOL CRCounter.hasEncodedData.getter()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)*v0;
  swift_beginAccess();
  if (*(_QWORD *)(v1[4] + 16))
    return 1;
  if (*(_QWORD *)(v1[3] + 16))
    return 1;
  swift_beginAccess();
  return *(_QWORD *)(v1[6] + 16) || *(_QWORD *)(v1[5] + 16) != 0;
}

void CRCounter.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BE100BF0@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;
  uint64_t v5;

  result = sub_1BE0FEAD4(*a1);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t CRCounter.actionUndoingDifference(from:)@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;
  uint64_t v5;

  result = sub_1BE0FEAD4(*a1);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

Swift::Void __swiftcall CRCounter.apply(_:)(Coherence::CRCounter::MutatingAction_optional a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if ((*(_BYTE *)(a1.value.delta + 8) & 1) == 0)
  {
    v2 = *(_QWORD *)a1.value.delta;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for CRCounterRef();
      v3 = swift_allocObject();
      v4 = (_QWORD *)swift_retain();
      sub_1BE0FC59C(v4);
      *v1 = v3;
      swift_release();
    }
    v5 = -v2;
    if (__OFSUB__(0, v2))
    {
      __break(1u);
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for CRCounterRef();
        v6 = swift_allocObject();
        v7 = (_QWORD *)swift_retain();
        sub_1BE0FC59C(v7);
        *v1 = v6;
        swift_release();
      }
      sub_1BE0FCCE0(v5);
    }
  }
}

uint64_t sub_1BE100D2C(_QWORD **a1)
{
  return sub_1BE0FDAA4(*a1) & 1;
}

uint64_t CRCounter.hasDelta(from:)(_QWORD **a1)
{
  return sub_1BE0FDAA4(*a1) & 1;
}

uint64_t CRCounter.delta(_:from:)@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  _QWORD *v17;
  uint64_t v18;

  v4 = (_QWORD *)*a1;
  v5 = *v2;
  swift_beginAccess();
  v6 = v4[3];
  v7 = v4[4];
  swift_beginAccess();
  v8 = *(_QWORD *)(v5 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = swift_bridgeObjectRetain();
  if ((sub_1BDDB04C0(v9, v7) & 1) != 0)
    goto LABEL_4;
  v10 = sub_1BDDB04C0(v8, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    swift_beginAccess();
    v11 = v4[5];
    v12 = v4[6];
    swift_beginAccess();
    v13 = *(_QWORD *)(v5 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    if ((sub_1BDDB04C0(v14, v12) & 1) != 0)
    {
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    v16 = sub_1BDDB04C0(v13, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      *a2 = 0;
      return result;
    }
  }
LABEL_5:
  v17 = v4;
  v18 = v5;
  swift_retain();
  result = sub_1BE101A78((uint64_t *)&v17);
  *a2 = v18;
  return result;
}

uint64_t CRCounter.canMerge(delta:)()
{
  return 1;
}

uint64_t sub_1BE100F34(_QWORD **a1)
{
  CRCounter.merge(delta:)(a1);
  return 1;
}

uint64_t CRCounter.merge(delta:)(_QWORD **a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *a1;
  if ((_QWORD *)*v1 != *a1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for CRCounterRef();
      v3 = swift_allocObject();
      v4 = (_QWORD *)swift_retain();
      sub_1BE0FC59C(v4);
      *v1 = v3;
      swift_release();
    }
    sub_1BE0FD0DC(v2);
  }
  return 1;
}

uint64_t sub_1BE100FD0@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1BE0FEAD4(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t CRCounter.observableDifference(from:with:)(_QWORD **a1)
{
  return sub_1BE0FEAD4(*a1);
}

uint64_t sub_1BE101038@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return CRCounter.init(from:)(a1, a2);
}

uint64_t sub_1BE10104C()
{
  return CRCounter.encode(to:)();
}

uint64_t CRCounter.MutatingAction.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  _QWORD *v46;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1E0C80A78](v41);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_CRDT(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Proto_Value(0);
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v20, (uint64_t)v19, &qword_1ED6F3728);
  LODWORD(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v19, 1, v12);
  sub_1BDD86E30((uint64_t)v19, &qword_1ED6F3728);
  if ((_DWORD)v20 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v21 = 0xD000000000000014;
    *(_QWORD *)(v21 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v21 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = a1;
  *(_QWORD *)(inited + 24) = 0;
  *(_BYTE *)(inited + 32) = 1;
  swift_retain();
  sub_1BDDA0528((uint64_t)v15);
  v24 = *(_QWORD *)&v15[*(int *)(v12 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v24, (uint64_t)v9, &qword_1ED6F2DF0);
  v25 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v9, 1, v25) == 1)
  {
    sub_1BDD86E30((uint64_t)v9, &qword_1ED6F2DF0);
    v27 = (uint64_t)v43;
    v26 = (uint64_t)v44;
    v28 = v42;
    v29 = v41;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v27 = (uint64_t)v43;
    v28 = v42;
    v29 = v41;
    if (!EnumCaseMultiPayload)
    {
      sub_1BDDA2E8C((uint64_t)v9, (uint64_t)v11, type metadata accessor for Proto_Register);
      v26 = (uint64_t)v44;
      goto LABEL_10;
    }
    sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    v26 = (uint64_t)v44;
  }
  sub_1BE1B20E4();
  v31 = *(int *)(v29 + 20);
  if (qword_1ED6EF788 != -1)
    swift_once();
  *(_QWORD *)&v11[v31] = qword_1ED6EF780;
  swift_retain();
LABEL_10:
  sub_1BDD9C3E0((uint64_t)v15, type metadata accessor for Proto_CRDT);
  v32 = *(_QWORD *)&v11[*(int *)(v29 + 20)]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1BDD86DEC(v32, v27, &qword_1ED6F3770);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v27, 1, v28);
  v34 = (uint64_t *)v45;
  if (v33 == 1)
  {
    sub_1BE1B20E4();
    v35 = *(int *)(v28 + 20);
    if (qword_1ED6F2718 != -1)
      swift_once();
    *(_QWORD *)(v26 + v35) = qword_1ED6F2708;
    swift_retain();
    sub_1BDD86E30(v27, &qword_1ED6F3770);
  }
  else
  {
    sub_1BDDA2E8C(v27, v26, type metadata accessor for Proto_Value);
  }
  sub_1BDD9C3E0((uint64_t)v11, type metadata accessor for Proto_Register);
  v36 = *(_QWORD *)(v26 + *(int *)(v28 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v36, (uint64_t)v34, &qword_1ED6F26F0);
  v37 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v34, 1, v37) == 1)
  {
    sub_1BDD86E30((uint64_t)v34, &qword_1ED6F26F0);
LABEL_20:
    v38 = 0;
    goto LABEL_21;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_1BDD9C3E0((uint64_t)v34, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_20;
  }
  v38 = *v34;
LABEL_21:
  swift_release();
  swift_release();
  result = sub_1BDD9C3E0(v26, type metadata accessor for Proto_Value);
  *v46 = v38;
  return result;
}

uint64_t CRCounter.MutatingAction.encode(to:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;

  v39 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v3 = MEMORY[0x1E0C80A78](v2);
  v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v31 - v5;
  v6 = type metadata accessor for Proto_Register(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - v10;
  v12 = type metadata accessor for Proto_Value(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v31 - v17;
  v19 = *v1;
  v20 = (uint64_t)v40;
  result = sub_1BDDA8D6C();
  if (!v20)
  {
    v32 = v19;
    v33 = v6;
    v34 = 0;
    v35 = v13;
    v40 = v16;
    v22 = (uint64_t)v37;
    v39 = result;
    swift_retain();
    sub_1BE1B20E4();
    v23 = *(int *)(v12 + 20);
    if (qword_1ED6F2718 != -1)
      swift_once();
    v36 = v12;
    *(_QWORD *)&v18[v23] = qword_1ED6F2708;
    swift_retain();
    sub_1BE1293B0(v32);
    v24 = (uint64_t)v11;
    sub_1BE1B20E4();
    v25 = *(int *)(v33 + 20);
    v26 = (uint64_t)v38;
    v27 = (uint64_t)v40;
    if (qword_1ED6EF788 != -1)
      swift_once();
    *(_QWORD *)(v24 + v25) = qword_1ED6EF780;
    sub_1BDD9C318((uint64_t)v18, v27, type metadata accessor for Proto_Value);
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Register._StorageClass(0);
      swift_allocObject();
      v28 = swift_retain();
      *(_QWORD *)(v24 + v25) = sub_1BE131250(v28);
      swift_release();
    }
    v29 = *(_QWORD *)(v24 + v25);
    sub_1BDDA2E8C((uint64_t)v40, v26, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v36);
    sub_1BDDA2EF0(v26, v22, &qword_1ED6F3770);
    v30 = v29 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v22, v30, &qword_1ED6F3770);
    swift_endAccess();
    swift_release();
    sub_1BDD9C318(v24, (uint64_t)v9, type metadata accessor for Proto_Register);
    swift_beginAccess();
    sub_1BE12AA70((uint64_t)v9);
    swift_release();
    sub_1BDD9C3E0(v24, type metadata accessor for Proto_Register);
    return sub_1BDD9C3E0((uint64_t)v18, type metadata accessor for Proto_Value);
  }
  return result;
}

void CRCounter.MutatingAction.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BE1019C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return CRCounter.MutatingAction.init(from:)(a1, a2);
}

uint64_t sub_1BE1019D4(uint64_t a1)
{
  return CRCounter.MutatingAction.encode(to:)(a1);
}

uint64_t sub_1BE101A30()
{
  CRCounter.value.getter();
  return sub_1BE1B2C18();
}

uint64_t sub_1BE101A78(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CRCounterRef();
    v3 = swift_allocObject();
    v4 = (_QWORD *)swift_retain();
    sub_1BE0FC59C(v4);
    *v1 = v3;
    swift_release();
  }
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  sub_1BDEE9868(v6);
  sub_1BDEE9868(v5);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 40);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v8 = swift_bridgeObjectRetain();
  sub_1BDEE9868(v8);
  sub_1BDEE9868(v7);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_UNKNOWN **sub_1BE101BD0()
{
  return &protocol witness table for CRCounter;
}

ValueMetadata *type metadata accessor for CRCounter.MutatingAction()
{
  return &type metadata for CRCounter.MutatingAction;
}

void sub_1BE101BEC()
{
  uint64_t v0;

  sub_1BDD84450();
  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
  {
    *(_BYTE *)(v0 + 40) = 1;
    sqlite3_finalize(*(sqlite3_stmt **)(v0 + 88));
    sqlite3_finalize(*(sqlite3_stmt **)(v0 + 96));
    sqlite3_finalize(*(sqlite3_stmt **)(v0 + 104));
    sqlite3_finalize(*(sqlite3_stmt **)(v0 + 112));
    if (sqlite3_close(*(sqlite3 **)(v0 + 32)))
    {
      sub_1BE1B305C();
      swift_bridgeObjectRelease();
      sub_1BE1B32E4();
      sub_1BE1B284C();
      swift_bridgeObjectRelease();
      sub_1BE1B284C();
      sub_1BE1B3200();
      __break(1u);
    }
  }
}

uint64_t sub_1BE101D04()
{
  uint64_t v0;

  v0 = sub_1BE1B23C0();
  __swift_allocate_value_buffer(v0, qword_1EF530110);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF530110);
  return sub_1BE1B23B4();
}

uint64_t sub_1BE101D7C()
{
  sqlite3_stmt **v0;

  sqlite3_finalize(v0[11]);
  sqlite3_finalize(v0[12]);
  sqlite3_finalize(v0[13]);
  return sqlite3_finalize(v0[14]);
}

void sub_1BE101DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[6];

  v1 = v0;
  v13[5] = *MEMORY[0x1E0C80C00];
  v2 = sub_1BE1B1F58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C98);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC9Coherence17CRReplicaDatabase_replica;
  swift_beginAccess();
  sub_1BDD86DEC(v9, (uint64_t)v8, &qword_1ED6F3C98);
  v10 = type metadata accessor for CRReplicaDatabase.Replica(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1BE1028A4((uint64_t)v8);
    sub_1BDEE7C7C();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1BE102108);
}

uint64_t sub_1BE10211C(void *a1, uint64_t a2, uint64_t a3)
{
  sqlite3_stmt *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v9;

  sqlite3_bind_blob(*(sqlite3_stmt **)(a3 + 112), 1, a1, 16, *(void (__cdecl **)(void *))(a3 + 72));
  v4 = *(sqlite3_stmt **)(a3 + 112);
  v5 = a3 + OBJC_IVAR____TtC9Coherence17CRReplicaDatabase_replica;
  swift_beginAccess();
  v6 = type metadata accessor for CRReplicaDatabase.Replica(0);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  if (v7(v5, 1, v6) == 1)
  {
    __break(1u);
    goto LABEL_8;
  }
  sqlite3_bind_int64(v4, 2, *(_QWORD *)(v5 + *(int *)(v6 + 20)));
  if (v7(v5, 1, v6) == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sqlite3_bind_int64(*(sqlite3_stmt **)(a3 + 112), 3, *(_QWORD *)(v5 + *(int *)(v6 + 24)));
  result = sqlite3_step(*(sqlite3_stmt **)(a3 + 112));
  if ((_DWORD)result == 101)
    return result;
  sub_1BE1B305C();
  swift_bridgeObjectRelease();
  if (!sqlite3_errmsg(*(sqlite3 **)(a3 + 32)))
  {
LABEL_9:
    __break(1u);
    JUMPOUT(0x1BE1022C0);
  }
  sub_1BE1B2864();
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  sub_1BE1B284C();
  sub_1BDDFC134();
  swift_allocError();
  *(_QWORD *)v9 = 0xD000000000000010;
  *(_QWORD *)(v9 + 8) = 0x80000001BE1D0180;
  *(_BYTE *)(v9 + 16) = 2;
  return swift_willThrow();
}

uint64_t sub_1BE1022D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BDD86E30(v0 + OBJC_IVAR____TtC9Coherence17CRReplicaDatabase_replica, &qword_1ED6F3C98);
}

uint64_t sub_1BE102308()
{
  uint64_t v0;

  sub_1BE101BEC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDD86E30(v0 + OBJC_IVAR____TtC9Coherence17CRReplicaDatabase_replica, &qword_1ED6F3C98);
  return swift_deallocClassInstance();
}

uint64_t sub_1BE10236C()
{
  return type metadata accessor for CRReplicaDatabase(0);
}

uint64_t *sub_1BE102374(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BE1B1F58();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1BE102404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1BE102468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1BE1024D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1BE102534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BE1B1F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1BE102598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BE1025D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BE102614(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BDDC49A0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BE1026A8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BE1026A8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BE1026A8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3A08);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BE1B326C();
  __break(1u);
  return result;
}

uint64_t sub_1BE1027F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  result = sub_1BE1B1C70();
  v8 = (char *)result;
  if (result)
  {
    result = sub_1BE1B1C94();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = sub_1BE1B1C88();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = &v8[v12];
  if (v8)
    v14 = (uint64_t)v13;
  else
    v14 = 0;
  sub_1BE10211C(v8, v14, a4);
  return swift_release();
}

uint64_t sub_1BE1028A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRReplicaDatabase.Replica(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BE1028E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BE102904()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1BDD92F18(319, &qword_1EF5301A8, (void (*)(uint64_t))type metadata accessor for Proto_Document);
    if (v1 <= 0x3F)
    {
      sub_1BDD92F18(319, &qword_1EF5301B0, (void (*)(uint64_t))type metadata accessor for Peer_KeyPaths);
      if (v2 <= 0x3F)
      {
        sub_1BDD92F18(319, &qword_1EF5301B8, (void (*)(uint64_t))type metadata accessor for Peer_RespondAsset);
        if (v3 <= 0x3F)
          swift_initClassMetadata2();
      }
    }
  }
}

uint64_t sub_1BE102A38@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a3 + 16) && (result = sub_1BDDB7F0C(result, a2), (v6 & 1) != 0))
  {
    v7 = (_QWORD *)(*(_QWORD *)(a3 + 56) + 24 * result);
    v8 = v7[1];
    v9 = v7[2];
    *a4 = *v7;
    a4[1] = v8;
    a4[2] = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
  return result;
}

uint64_t sub_1BE102AB4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_1BE102B08(a1, a2, a3);
  return v6;
}

uint64_t *sub_1BE102B08(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 136);
  *(uint64_t *)((char *)v3 + v8) = (uint64_t)dispatch_semaphore_create(0);
  v9 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 144));
  *v9 = 0;
  v9[1] = 0;
  v10 = MEMORY[0x1E0DEE9E0];
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 152)) = MEMORY[0x1E0DEE9E0];
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 160)) = v10;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 168)) = v10;
  v11 = (uint64_t)v3 + *(_QWORD *)(*v3 + 176);
  v12 = type metadata accessor for Proto_Document(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (uint64_t)v3 + *(_QWORD *)(*v3 + 184);
  v14 = type metadata accessor for Peer_KeyPaths(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 192)) = 0;
  v15 = (uint64_t)v3 + *(_QWORD *)(*v3 + 200);
  v16 = type metadata accessor for Peer_RespondAsset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_OWORD *)((char *)v3 + *(_QWORD *)(*v3 + 208)) = xmmword_1BE1B6B20;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 120)) = a1;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 88) - 8) + 32))((uint64_t)v3 + *(_QWORD *)(*v3 + 112), a2);
  *((_BYTE *)v3 + *(_QWORD *)(*v3 + 128)) = a3;
  return v3;
}

uint64_t sub_1BE102C78@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[4];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for Peer_RequestVersion(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Peer_MergeRequest(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v4 + 144);
  v13 = *(_QWORD *)((char *)v2 + v11);
  v12 = *(_QWORD *)((char *)v2 + v11 + 8);
  if (!v13)
  {
    v18[2] = *(_QWORD *)((char *)v2 + v11 + 8);
    sub_1BE1B20E4();
    v14 = *(int *)(v8 + 20);
    if (qword_1EF52BED8 != -1)
      swift_once();
    *(_QWORD *)&v10[v14] = qword_1EF530428;
    swift_retain();
    sub_1BE1B20E4();
    sub_1BE117BBC((uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C628);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BE1B61C0;
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 32) = 0xD000000000000012;
    *(_QWORD *)(v15 + 40) = 0x80000001BE1D0560;
    sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
    sub_1BE1B227C();
    __asm { BR              X10 }
  }
  *a1 = v13;
  a1[1] = v12;
  return sub_1BDDC8E74(v13);
}

uint64_t sub_1BE102FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22;
  __int128 v23;
  char v24;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Proto_Version(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = 2;
  sub_1BDD9C318(a1, (uint64_t)v13, v14);
  v15 = *(_QWORD *)(*(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) + OBJC_IVAR___CRContext_assetManager);
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  v16 = sub_1BDD8E57C(&v24, 0, (uint64_t)v13, 0, v15);
  v17 = *(_QWORD *)(a1 + *(int *)(v11 + 20))
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v17, (uint64_t)v6, &qword_1ED6F37A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    *v10 = MEMORY[0x1E0DEE9D8];
    v10[1] = v18;
    sub_1BE1B20E4();
    sub_1BDD86E30((uint64_t)v6, &qword_1ED6F37A8);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v6, (uint64_t)v10, type metadata accessor for Proto_Version);
  }
  swift_retain();
  sub_1BDDA9DA0(v10, v16, &v23);
  swift_release();
  v19 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v20 = *v19;
  *(_OWORD *)v19 = v23;
  return sub_1BDDC8EA0(v20);
}

uint64_t sub_1BE103254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int EnumCaseMultiPayload;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v4 = v3;
  v8 = *v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v81 = (char *)&v73 - v14;
  MEMORY[0x1E0C80A78](v13);
  v84 = (uint64_t)&v73 - v15;
  v86 = type metadata accessor for Proto_Constants(0);
  v87 = *(_QWORD *)(v86 - 8);
  v16 = MEMORY[0x1E0C80A78](v86);
  v85 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v82 = (uint64_t)&v73 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v20 = MEMORY[0x1E0C80A78](v19);
  v79 = (uint64_t)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v73 - v22;
  v88 = type metadata accessor for Peer_KeyPaths(0);
  v24 = MEMORY[0x1E0C80A78](v88);
  v80 = (uint64_t)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v73 - v26;
  v28 = type metadata accessor for Peer_MergeRequest(0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a1;
  result = sub_1BE1B2C78();
  if (result >= 1)
  {
    v32 = a3;
    v73 = v12;
    v75 = v8;
    sub_1BE1B20E4();
    v77 = v28;
    v33 = *(int *)(v28 + 20);
    if (qword_1EF52BED8 != -1)
      swift_once();
    *(_QWORD *)&v30[v33] = qword_1EF530428;
    v34 = *(_QWORD *)(*v4 + 120);
    v78 = v4;
    v35 = *(void **)((char *)v4 + v34);
    type metadata accessor for CREncoder();
    inited = swift_initStackObject();
    v37 = MEMORY[0x1E0DEE9D8];
    v38 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(inited + 32) = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(inited + 40) = v37;
    *(_QWORD *)(inited + 48) = v37;
    *(_QWORD *)(inited + 56) = v38;
    *(_QWORD *)(inited + 64) = v37;
    *(_QWORD *)(inited + 80) = 0;
    *(_QWORD *)(inited + 88) = 0;
    *(_QWORD *)(inited + 16) = v35;
    *(_QWORD *)(inited + 24) = v37;
    *(_BYTE *)(inited + 72) = 2;
    v39 = v30;
    v40 = type metadata accessor for Proto_KeyPath(0);
    swift_retain();
    v41 = v35;
    v42 = (char *)v40;
    v43 = v39;
    v76 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE108660, inited, a2, v42, MEMORY[0x1E0DEDCE8], v32, MEMORY[0x1E0DEDD18], v44);
    v74 = v33;
    v45 = *(_QWORD *)&v39[v33]
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v45, (uint64_t)v23, &qword_1EF52F958);
    v46 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48);
    v48 = v47(v23, 1, v46);
    v83 = 0;
    if (v48 == 1)
    {
      sub_1BDD86E30((uint64_t)v23, &qword_1EF52F958);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1BDDA2E8C((uint64_t)v23, (uint64_t)v27, type metadata accessor for Peer_KeyPaths);
        goto LABEL_12;
      }
      sub_1BDD9C3E0((uint64_t)v23, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    }
    sub_1BE1B20E4();
    v49 = *(int *)(v88 + 20);
    if (qword_1EF52BF00 != -1)
      swift_once();
    *(_QWORD *)&v27[v49] = qword_1EF530438;
    swift_retain();
LABEL_12:
    v50 = v88;
    v51 = *(int *)(v88 + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Peer_KeyPaths._StorageClass(0);
      swift_allocObject();
      v52 = swift_retain();
      *(_QWORD *)&v27[v51] = sub_1BE1209BC(v52);
      swift_release();
    }
    v53 = (uint64_t *)(*(_QWORD *)&v27[v51]
                    + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths);
    swift_beginAccess();
    *v53 = v76;
    swift_bridgeObjectRelease();
    sub_1BE117DD0((uint64_t)v27);
    v54 = v84;
    sub_1BDDC90C0(v84);
    v55 = v86;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v54, 1, v86) == 1)
    {
      sub_1BDD86E30(v54, &qword_1ED6F3290);
      goto LABEL_27;
    }
    v56 = v82;
    sub_1BDDA2E8C(v54, v82, type metadata accessor for Proto_Constants);
    sub_1BDD9C318(v56, v85, type metadata accessor for Proto_Constants);
    v57 = *(_QWORD *)&v43[v74]
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    v58 = v57;
    v59 = v79;
    sub_1BDD86DEC(v58, v79, &qword_1EF52F958);
    if (v47((char *)v59, 1, v46) == 1)
    {
      sub_1BDD86E30(v59, &qword_1EF52F958);
      v60 = (uint64_t)v73;
      v61 = (uint64_t)v81;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v60 = (uint64_t)v73;
      v61 = (uint64_t)v81;
      if (EnumCaseMultiPayload == 3)
      {
        v63 = v80;
        sub_1BDDA2E8C(v59, v80, type metadata accessor for Peer_KeyPaths);
LABEL_24:
        v65 = *(int *)(v50 + 20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for Peer_KeyPaths._StorageClass(0);
          swift_allocObject();
          v66 = swift_retain();
          v67 = sub_1BE1209BC(v66);
          v55 = v86;
          *(_QWORD *)(v63 + v65) = v67;
          swift_release();
        }
        v68 = *(_QWORD *)(v63 + v65);
        sub_1BDDA2E8C(v85, v61, type metadata accessor for Proto_Constants);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v61, 0, 1, v55);
        sub_1BDDA2EF0(v61, v60, &qword_1ED6F3290);
        v69 = v68
            + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
        swift_beginAccess();
        swift_retain();
        sub_1BDDA1AF4(v60, v69, &qword_1ED6F3290);
        swift_endAccess();
        swift_release();
        sub_1BE117DD0(v63);
        sub_1BDD9C3E0(v56, type metadata accessor for Proto_Constants);
LABEL_27:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C628);
        v70 = swift_allocObject();
        *(_OWORD *)(v70 + 16) = xmmword_1BE1B61C0;
        *(_QWORD *)(v70 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v70 + 32) = 0xD000000000000025;
        *(_QWORD *)(v70 + 40) = 0x80000001BE1D0530;
        sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
        v71 = v83;
        sub_1BE1B227C();
        if (!v71)
          __asm { BR              X10 }
        swift_unexpectedError();
        __break(1u);
        JUMPOUT(0x1BE103C08);
      }
      sub_1BDD9C3E0(v59, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    }
    v63 = v80;
    sub_1BE1B20E4();
    v64 = *(int *)(v50 + 20);
    if (qword_1EF52BF00 != -1)
      swift_once();
    *(_QWORD *)(v63 + v64) = qword_1EF530438;
    swift_retain();
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1BE103C38@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  *a2 = MEMORY[0x1E0DEE9D8];
  v5 = sub_1BE1B20CC();
  v7 = v6;
  type metadata accessor for Proto_KeyPath(0);
  sub_1BE1B20E4();
  sub_1BDDB6CA4(v3, v4);
  result = sub_1BDDB796C(v5, v7);
  a2[1] = v3;
  a2[2] = v4;
  return result;
}

uint64_t sub_1BE103CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char v69[8];

  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CF08);
  v56 = *(_QWORD *)(v58 - 8);
  v1 = MEMORY[0x1E0C80A78](v58);
  v62 = (char *)v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v57 = (char *)v50 - v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3790);
  MEMORY[0x1E0C80A78](v6);
  v66 = (uint64_t)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for Proto_KeyPath(0);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v9 = (_QWORD *)((char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = type metadata accessor for Proto_Reference(0);
  v52 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v68 = (uint64_t)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for Proto_Constants(0);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v15 = (_QWORD *)((char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D920);
  v17 = MEMORY[0x1E0C80A78](v16);
  v54 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v50 - v19;
  v21 = type metadata accessor for Proto_Document(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  v61 = v0;
  v26 = v0 + v25;
  swift_beginAccess();
  v53 = v26;
  sub_1BDD86DEC(v26, (uint64_t)v20, &qword_1EF52D920);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_1BDD86E30((uint64_t)v20, &qword_1EF52D920);
    v27 = (uint64_t)v54;
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v20, (uint64_t)v24, type metadata accessor for Proto_Document);
    v51 = v21;
    v28 = *(int *)(v21 + 20);
    v29 = *(_QWORD *)&v24[v28]
        + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
    swift_beginAccess();
    sub_1BDD86DEC(v29, (uint64_t)v13, &qword_1ED6F3290);
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48))(v13, 1, v60);
    v31 = MEMORY[0x1E0DEE9D8];
    v32 = (uint64_t)v24;
    if (v30 == 1)
    {
      *v15 = sub_1BE1B20CC();
      v15[1] = v33;
      v15[2] = v31;
      sub_1BE1B20E4();
      sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3290);
    }
    else
    {
      sub_1BDDA2E8C((uint64_t)v13, (uint64_t)v15, type metadata accessor for Proto_Constants);
    }
    v34 = v61;
    v69[0] = 2;
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    v35 = sub_1BDE116B0(v15, v69);
    v36 = *(_QWORD *)(*(_QWORD *)(v34 + *(_QWORD *)(*(_QWORD *)v34 + 120)) + OBJC_IVAR___CRContext_assetManager);
    type metadata accessor for CRDataStorePartialDecodeContext();
    v37 = (_QWORD *)swift_allocObject();
    v38 = MEMORY[0x1E0DEE9E0];
    v37[2] = MEMORY[0x1E0DEE9E0];
    v37[3] = v38;
    v37[4] = v36;
    *(_QWORD *)(v35 + 16) = v37;
    swift_retain();
    swift_release();
    *(_BYTE *)(v35 + 48) = 1;
    v39 = *(_QWORD *)(v32 + v28)
        + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__references;
    swift_beginAccess();
    v40 = *(_QWORD *)v39;
    if (*(_QWORD *)(*(_QWORD *)v39 + 16))
    {
      v55 = v35;
      v50[1] = v32;
      v50[2] = v22;
      v41 = *(_QWORD *)(*(_QWORD *)v34 + 160);
      v61 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 152);
      v60 = v34 + v41;
      v42 = v40 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
      v59 = *(_QWORD *)(v52 + 72);
      v52 = v40;
      swift_bridgeObjectRetain();
      v43 = v68;
      sub_1BDD9C318(v42, v68, type metadata accessor for Proto_Reference);
      v44 = *(_QWORD *)(v43 + *(int *)(v63 + 20))
          + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
      swift_beginAccess();
      v45 = v44;
      v46 = v66;
      sub_1BDD86DEC(v45, v66, &qword_1ED6F3790);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v46, 1, v65) == 1)
      {
        *v9 = MEMORY[0x1E0DEE9D8];
        v9[1] = sub_1BE1B20CC();
        v9[2] = v47;
        sub_1BE1B20E4();
        sub_1BDD86E30(v46, &qword_1ED6F3790);
      }
      else
      {
        sub_1BDDA2E8C(v46, (uint64_t)v9, type metadata accessor for Proto_KeyPath);
      }
      __asm { BR              X9 }
    }
    swift_release();
    v27 = (uint64_t)v54;
    sub_1BDD9C3E0(v32, type metadata accessor for Proto_Document);
    v21 = v51;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v27, 1, 1, v21);
  v48 = v53;
  swift_beginAccess();
  sub_1BDDA1AF4(v27, v48, &qword_1EF52D920);
  return swift_endAccess();
}

uint64_t sub_1BE104898@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t inited;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int EnumCaseMultiPayload;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  uint64_t *v167;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t (*v188)(char *, uint64_t, uint64_t);
  uint64_t *v189;
  void (*v190)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t *v208;
  _QWORD *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  __int128 v218;
  uint64_t v219[7];

  v6 = v5;
  v183 = a4;
  v200 = a2;
  v209 = a5;
  v9 = *v6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v172 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Version(0);
  v203 = *(_QWORD *)(v13 - 8);
  v204 = v13;
  MEMORY[0x1E0C80A78](v13);
  v205 = (char *)&v172 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_1BE1B2EE8();
  v195 = *(_QWORD *)(v197 - 8);
  v15 = MEMORY[0x1E0C80A78](v197);
  v196 = (char *)&v172 - v16;
  v201 = a3;
  v199 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v15);
  v198 = (char *)&v172 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v19 = MEMORY[0x1E0C80A78](v18);
  v211 = (uint64_t)&v172 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v194 = (uint64_t)&v172 - v21;
  v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CF08);
  v22 = *(_QWORD **)(v216 - 8);
  v23 = MEMORY[0x1E0C80A78](v216);
  v202 = (uint64_t)&v172 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v213 = (uint64_t)&v172 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v193 = (uint64_t)&v172 - v28;
  MEMORY[0x1E0C80A78](v27);
  v215 = (uint64_t)&v172 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v31 = MEMORY[0x1E0C80A78](v30);
  v181 = (uint64_t)&v172 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v180 = (char *)&v172 - v34;
  MEMORY[0x1E0C80A78](v33);
  v185 = (uint64_t)&v172 - v35;
  v36 = type metadata accessor for Proto_Constants(0);
  v191 = *(_QWORD *)(v36 - 8);
  v192 = v36;
  v37 = MEMORY[0x1E0C80A78](v36);
  v186 = (uint64_t)&v172 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v187 = (uint64_t)&v172 - v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v41 = MEMORY[0x1E0C80A78](v40);
  v178 = (uint64_t)&v172 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v184 = (uint64_t)&v172 - v43;
  v212 = type metadata accessor for Peer_KeyPaths(0);
  v44 = MEMORY[0x1E0C80A78](v212);
  v179 = (uint64_t)&v172 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v172 - v46;
  v207 = type metadata accessor for Peer_MergeRequest(0);
  MEMORY[0x1E0C80A78](v207);
  v210 = (char *)&v172 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301D8);
  v50 = MEMORY[0x1E0C80A78](v49);
  v206 = (char *)&v172 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v50);
  v53 = (char *)&v172 - v52;
  v55 = *a1;
  v54 = a1[1];
  v56 = (uint64_t *)((char *)v6 + *(_QWORD *)(v9 + 152));
  swift_beginAccess();
  v214 = v56;
  v57 = *v56;
  if (*(_QWORD *)(v57 + 16))
  {
    sub_1BDDB6CA4(v55, v54);
    v58 = sub_1BDDB7F0C(v55, v54);
    if ((v59 & 1) != 0)
    {
      v60 = *(_BYTE *)(*(_QWORD *)(v57 + 56) + v58);
      swift_endAccess();
      sub_1BDDB796C(v55, v54);
      if ((v60 & 1) != 0)
        goto LABEL_44;
    }
    else
    {
      swift_endAccess();
      sub_1BDDB796C(v55, v54);
    }
  }
  else
  {
    swift_endAccess();
  }
  v61 = (uint64_t *)((char *)v6 + *(_QWORD *)(*v6 + 160));
  swift_beginAccess();
  v189 = v61;
  v62 = *v61;
  if (*(_QWORD *)(v62 + 16))
  {
    sub_1BDDB6CA4(v55, v54);
    v63 = sub_1BDDB7F0C(v55, v54);
    if ((v64 & 1) != 0)
    {
      sub_1BDD86DEC(*(_QWORD *)(v62 + 56) + v22[9] * v63, (uint64_t)v53, &qword_1EF52CF08);
      v65 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v22[7];
      v66 = v53;
      v67 = 0;
    }
    else
    {
      v65 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v22[7];
      v66 = v53;
      v67 = 1;
    }
    v68 = v216;
    v190 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v65;
    v65(v66, v67, 1, v216);
    sub_1BDDB796C(v55, v54);
  }
  else
  {
    v68 = v216;
    v190 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v22[7];
    v190(v53, 1, 1, v216);
  }
  swift_endAccess();
  v188 = (uint64_t (*)(char *, uint64_t, uint64_t))v22[6];
  v69 = v188(v53, 1, v68);
  sub_1BDD86E30((uint64_t)v53, &qword_1EF5301D8);
  v208 = v6;
  if (v69 == 1)
  {
    v176 = v12;
    v177 = v9;
    v174 = v22;
    v70 = v210;
    sub_1BE1B20E4();
    v71 = *(int *)(v207 + 20);
    if (qword_1EF52BED8 != -1)
      swift_once();
    v72 = qword_1EF530428;
    v173 = v71;
    *(_QWORD *)&v70[v71] = qword_1EF530428;
    v73 = *(void **)((char *)v6 + *(_QWORD *)(*v6 + 120));
    type metadata accessor for CREncoder();
    inited = swift_initStackObject();
    v75 = MEMORY[0x1E0DEE9D8];
    v76 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(inited + 32) = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(inited + 40) = v75;
    *(_QWORD *)(inited + 48) = v75;
    *(_QWORD *)(inited + 56) = v76;
    *(_QWORD *)(inited + 64) = v75;
    *(_QWORD *)(inited + 80) = 0;
    *(_QWORD *)(inited + 88) = 0;
    *(_QWORD *)(inited + 16) = v73;
    *(_QWORD *)(inited + 24) = v75;
    v182 = inited;
    *(_BYTE *)(inited + 72) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52BCF0);
    v77 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Proto_KeyPath(0) - 8) + 80);
    v78 = (v77 + 32) & ~v77;
    v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = xmmword_1BE1B61B0;
    v175 = v79;
    v80 = (_QWORD *)(v79 + v78);
    *v80 = v75;
    swift_retain();
    v81 = v73;
    v82 = sub_1BE1B20CC();
    v84 = v83;
    v80[1] = v82;
    v80[2] = v83;
    sub_1BE1B20E4();
    sub_1BDDB6CA4(v55, v54);
    sub_1BDDB796C(v82, v84);
    v80[1] = v55;
    v80[2] = v54;
    v85 = v72
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    v86 = v85;
    v87 = v184;
    sub_1BDD86DEC(v86, v184, &qword_1EF52F958);
    v88 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 48);
    if (v89(v87, 1, v88) == 1)
    {
      sub_1BDD86E30(v87, &qword_1EF52F958);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1BDDA2E8C(v87, (uint64_t)v47, type metadata accessor for Peer_KeyPaths);
        v90 = v210;
        goto LABEL_25;
      }
      sub_1BDD9C3E0(v87, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    }
    v90 = v210;
    sub_1BE1B20E4();
    v91 = *(int *)(v212 + 20);
    if (qword_1EF52BF00 != -1)
      swift_once();
    *(_QWORD *)&v47[v91] = qword_1EF530438;
    swift_retain();
LABEL_25:
    v92 = *(int *)(v212 + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Peer_KeyPaths._StorageClass(0);
      swift_allocObject();
      v93 = swift_retain();
      *(_QWORD *)&v47[v92] = sub_1BE1209BC(v93);
      swift_release();
    }
    v94 = (uint64_t *)(*(_QWORD *)&v47[v92]
                    + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths);
    swift_beginAccess();
    *v94 = v175;
    swift_bridgeObjectRelease();
    sub_1BE117DD0((uint64_t)v47);
    v95 = v185;
    sub_1BDDC90C0(v185);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48))(v95, 1, v192) == 1)
    {
      sub_1BDD86E30(v95, &qword_1ED6F3290);
      goto LABEL_40;
    }
    v96 = v95;
    v97 = v187;
    sub_1BDDA2E8C(v96, v187, type metadata accessor for Proto_Constants);
    sub_1BDD9C318(v97, v186, type metadata accessor for Proto_Constants);
    v98 = *(_QWORD *)&v90[v173]
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    v99 = v98;
    v100 = v178;
    sub_1BDD86DEC(v99, v178, &qword_1EF52F958);
    if (v89(v100, 1, v88) == 1)
    {
      sub_1BDD86E30(v100, &qword_1EF52F958);
      v102 = v179;
      v101 = (uint64_t)v180;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v102 = v179;
      v101 = (uint64_t)v180;
      if (EnumCaseMultiPayload == 3)
      {
        sub_1BDDA2E8C(v100, v179, type metadata accessor for Peer_KeyPaths);
LABEL_37:
        v105 = *(int *)(v212 + 20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for Peer_KeyPaths._StorageClass(0);
          swift_allocObject();
          v106 = swift_retain();
          *(_QWORD *)(v102 + v105) = sub_1BE1209BC(v106);
          swift_release();
        }
        v107 = *(_QWORD *)(v102 + v105);
        sub_1BDDA2E8C(v186, v101, type metadata accessor for Proto_Constants);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v191 + 56))(v101, 0, 1, v192);
        v108 = v102;
        v109 = v181;
        sub_1BDDA2EF0(v101, v181, &qword_1ED6F3290);
        v110 = v107
             + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
        swift_beginAccess();
        swift_retain();
        sub_1BDDA1AF4(v109, v110, &qword_1ED6F3290);
        swift_endAccess();
        swift_release();
        sub_1BE117DD0(v108);
        sub_1BDD9C3E0(v187, type metadata accessor for Proto_Constants);
LABEL_40:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C628);
        v111 = swift_allocObject();
        *(_OWORD *)(v111 + 16) = xmmword_1BE1B61C0;
        *(_QWORD *)(v111 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v111 + 32) = 0xD000000000000026;
        *(_QWORD *)(v111 + 40) = 0x80000001BE1D0500;
        sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
        sub_1BE1B227C();
        __asm { BR              X10 }
      }
      sub_1BDD9C3E0(v100, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    }
    sub_1BE1B20E4();
    v104 = *(int *)(v212 + 20);
    if (qword_1EF52BF00 != -1)
      swift_once();
    *(_QWORD *)(v102 + v104) = qword_1EF530438;
    swift_retain();
    goto LABEL_37;
  }
  v113 = (uint64_t)v206;
  v114 = v214;
  swift_beginAccess();
  v115 = *v114;
  if (*(_QWORD *)(v115 + 16))
  {
    sub_1BDDB6CA4(v55, v54);
    v116 = sub_1BDDB7F0C(v55, v54);
    if ((v117 & 1) != 0)
    {
      v118 = *(_BYTE *)(*(_QWORD *)(v115 + 56) + v116);
      swift_endAccess();
      sub_1BDDB796C(v55, v54);
      if ((v118 & 1) != 0)
      {
LABEL_44:
        v119 = (uint64_t *)((char *)v6 + *(_QWORD *)(*v6 + 168));
        swift_beginAccess();
        v120 = *v119;
        sub_1BDDB6CA4(v55, v54);
        sub_1BE102A38(v55, v54, v120, v209);
        swift_endAccess();
        return sub_1BDDB796C(v55, v54);
      }
    }
    else
    {
      swift_endAccess();
      sub_1BDDB796C(v55, v54);
    }
  }
  else
  {
    swift_endAccess();
  }
  v122 = v189;
  swift_beginAccess();
  v123 = *v122;
  if (*(_QWORD *)(v123 + 16))
  {
    sub_1BDDB6CA4(v55, v54);
    v124 = sub_1BDDB7F0C(v55, v54);
    if ((v125 & 1) != 0)
    {
      sub_1BDD86DEC(*(_QWORD *)(v123 + 56) + v22[9] * v124, v113, &qword_1EF52CF08);
      v126 = v113;
      v127 = 0;
    }
    else
    {
      v126 = v113;
      v127 = 1;
    }
    v128 = v216;
    v190((char *)v126, v127, 1, v216);
    sub_1BDDB796C(v55, v54);
  }
  else
  {
    v128 = v216;
    v190((char *)v113, 1, 1, v216);
  }
  v212 = 0;
  v129 = v12;
  swift_endAccess();
  if (v188((char *)v113, 1, v128) == 1)
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x1BE105D2CLL);
  }
  v130 = *(int *)(v128 + 48);
  v131 = *(_QWORD *)(v113 + v130);
  v132 = v113;
  v133 = v215;
  sub_1BDDA2E8C(v132, v215, type metadata accessor for Proto_Reference);
  *(_QWORD *)(v133 + v130) = v131;
  v134 = *(int *)(v128 + 48);
  v135 = v193;
  sub_1BDD9C318(v133, v193, type metadata accessor for Proto_Reference);
  *(_QWORD *)(v135 + v134) = v131;
  swift_retain_n();
  sub_1BDD9C3E0(v135, type metadata accessor for Proto_Reference);
  v136 = *(int *)(v128 + 48);
  v137 = v213;
  sub_1BDD9C318(v133, v213, type metadata accessor for Proto_Reference);
  *(_QWORD *)(v137 + v136) = v131;
  v210 = (char *)type metadata accessor for Proto_Reference(0);
  v138 = *(_QWORD *)(v137 + *((int *)v210 + 5))
       + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  v139 = v211;
  sub_1BDD86DEC(v138, v211, &qword_1ED6F3728);
  v140 = type metadata accessor for Proto_CRDT(0);
  v141 = *(_QWORD *)(v140 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v139, 1, v140) == 1)
  {
    v207 = v55;
    v142 = v129;
    v143 = v194;
    sub_1BE1B20E4();
    v144 = *(int *)(v140 + 20);
    if (qword_1ED6F2E18 != -1)
      swift_once();
    *(_QWORD *)(v143 + v144) = qword_1ED6F2E08;
    swift_retain();
    sub_1BDD86E30(v211, &qword_1ED6F3728);
    v129 = v142;
    v55 = v207;
  }
  else
  {
    v143 = v194;
    sub_1BDDA2E8C(v139, v194, type metadata accessor for Proto_CRDT);
  }
  v145 = v196;
  v146 = v197;
  sub_1BDD9C3E0(v213, type metadata accessor for Proto_Reference);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v141 + 56))(v143, 0, 1, v140);
  v147 = v131 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDDA1AF4(v143, v147, &qword_1ED6F3728);
  swift_endAccess();
  v148 = v195;
  (*(void (**)(char *, uint64_t, uint64_t))(v195 + 16))(v145, v200, v146);
  v149 = v199;
  v150 = v201;
  v151 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v199 + 48))(v145, 1, v201);
  v152 = v145;
  v153 = v198;
  if (v151 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v198, v152, v150);
    v158 = v153;
    v159 = v212;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v183 + 8))(v219, v131, v150);
    if (!v159)
    {
      (*(void (**)(char *, uint64_t))(v149 + 8))(v158, v150);
      v157 = v219[0];
      v156 = v216;
      goto LABEL_64;
    }
LABEL_70:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x1BE105D8CLL);
  }
  (*(void (**)(char *, uint64_t))(v148 + 8))(v152, v146);
  v154 = swift_retain();
  v155 = v212;
  AnyCRDT.init(from:)(v154, v219);
  v156 = v216;
  if (v155)
  {
    swift_unexpectedError();
    __break(1u);
    goto LABEL_70;
  }
  v157 = v219[0];
LABEL_64:
  v160 = (uint64_t)v129;
  v161 = v202;
  v162 = v205;
  v163 = *(int *)(v156 + 48);
  sub_1BDD9C318(v215, v202, type metadata accessor for Proto_Reference);
  swift_release();
  *(_QWORD *)(v161 + v163) = v131;
  v164 = *(_QWORD *)(v161 + *((int *)v210 + 5))
       + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v164, v160, &qword_1ED6F37A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v203 + 48))(v160, 1, v204) == 1)
  {
    v165 = MEMORY[0x1E0DEE9D8];
    *v162 = MEMORY[0x1E0DEE9D8];
    v162[1] = v165;
    sub_1BE1B20E4();
    sub_1BDD86E30(v160, &qword_1ED6F37A8);
  }
  else
  {
    sub_1BDDA2E8C(v160, (uint64_t)v162, type metadata accessor for Proto_Version);
  }
  sub_1BDD9C3E0(v161, type metadata accessor for Proto_Reference);
  swift_retain();
  sub_1BDDA9DA0(v162, v131, &v218);
  v166 = v218;
  v167 = (uint64_t *)((char *)v208 + *(_QWORD *)(*v208 + 168));
  swift_beginAccess();
  sub_1BDDB6CA4(v55, v54);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v217 = *v167;
  *v167 = 0x8000000000000000;
  sub_1BE1548B8(v157, v166, *((uint64_t *)&v166 + 1), v55, v54, isUniquelyReferenced_nonNull_native);
  *v167 = v217;
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v55, v54);
  swift_endAccess();
  v169 = v214;
  swift_beginAccess();
  sub_1BDDB6CA4(v55, v54);
  v170 = swift_isUniquelyReferenced_nonNull_native();
  v217 = *v169;
  *v169 = 0x8000000000000000;
  sub_1BE15475C(1, v55, v54, v170);
  *v169 = v217;
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v55, v54);
  swift_endAccess();
  swift_beginAccess();
  v171 = *v167;
  sub_1BDDB6CA4(v55, v54);
  sub_1BE102A38(v55, v54, v171, v209);
  swift_endAccess();
  sub_1BDDB796C(v55, v54);
  swift_release();
  swift_release();
  return sub_1BDD86E30(v215, &qword_1EF52CF08);
}

void sub_1BE105D9C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int EnumCaseMultiPayload;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v76 = *v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301C8);
  MEMORY[0x1E0C80A78](v3);
  v75 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v6 = MEMORY[0x1E0C80A78](v5);
  v74 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v73 = (char *)&v69 - v9;
  MEMORY[0x1E0C80A78](v8);
  v79 = (uint64_t)&v69 - v10;
  v87 = type metadata accessor for Proto_Constants(0);
  v86 = *(_QWORD *)(v87 - 8);
  v11 = MEMORY[0x1E0C80A78](v87);
  v80 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v81 = (uint64_t)&v69 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v15 = MEMORY[0x1E0C80A78](v14);
  v71 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v69 - v17;
  v84 = type metadata accessor for Peer_KeyPaths(0);
  v77 = *(_QWORD *)(v84 - 8);
  v19 = MEMORY[0x1E0C80A78](v84);
  v72 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v69 - v21;
  v23 = type metadata accessor for Peer_MergeRequest(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[1];
  v78 = *a1;
  sub_1BE1B20E4();
  v82 = v23;
  v27 = *(int *)(v23 + 20);
  if (qword_1EF52BED8 != -1)
    swift_once();
  v28 = qword_1EF530428;
  v83 = v25;
  v70 = v27;
  *(_QWORD *)&v25[v27] = qword_1EF530428;
  v29 = *(_QWORD *)(*v1 + 120);
  v85 = v1;
  v30 = *(void **)((char *)v1 + v29);
  type metadata accessor for CREncoder();
  inited = swift_initStackObject();
  v32 = MEMORY[0x1E0DEE9D8];
  v33 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(inited + 32) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(inited + 40) = v32;
  *(_QWORD *)(inited + 48) = v32;
  *(_QWORD *)(inited + 56) = v33;
  *(_QWORD *)(inited + 64) = v32;
  *(_QWORD *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 16) = v30;
  *(_QWORD *)(inited + 24) = v32;
  v88 = inited;
  *(_BYTE *)(inited + 72) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52BCF0);
  v34 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Proto_KeyPath(0) - 8) + 80);
  v35 = (v34 + 32) & ~v34;
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BE1B61B0;
  v37 = (_QWORD *)(v36 + v35);
  *v37 = v32;
  swift_retain();
  v38 = v30;
  v39 = sub_1BE1B20CC();
  v41 = v40;
  v37[1] = v39;
  v37[2] = v40;
  sub_1BE1B20E4();
  v42 = v78;
  sub_1BDDB6CA4(v78, v26);
  sub_1BDDB796C(v39, v41);
  v37[1] = v42;
  v37[2] = v26;
  v43 = v28
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v43, (uint64_t)v18, &qword_1EF52F958);
  v44 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48);
  if (v45(v18, 1, v44) == 1)
  {
    sub_1BDD86E30((uint64_t)v18, &qword_1EF52F958);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1BDDA2E8C((uint64_t)v18, (uint64_t)v22, type metadata accessor for Peer_KeyPaths);
      v46 = v84;
      goto LABEL_11;
    }
    sub_1BDD9C3E0((uint64_t)v18, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  }
  sub_1BE1B20E4();
  v46 = v84;
  v47 = *(int *)(v84 + 20);
  if (qword_1EF52BF00 != -1)
    swift_once();
  *(_QWORD *)&v22[v47] = qword_1EF530438;
  swift_retain();
LABEL_11:
  v48 = *(int *)(v46 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Peer_KeyPaths._StorageClass(0);
    swift_allocObject();
    v49 = swift_retain();
    *(_QWORD *)&v22[v48] = sub_1BE1209BC(v49);
    swift_release();
  }
  v50 = (uint64_t *)(*(_QWORD *)&v22[v48]
                  + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths);
  swift_beginAccess();
  *v50 = v36;
  swift_bridgeObjectRelease();
  v51 = v83;
  sub_1BE117FE4((uint64_t)v22);
  v52 = v79;
  sub_1BDDC90C0(v79);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v52, 1, v87) == 1)
  {
    sub_1BDD86E30(v52, &qword_1ED6F3290);
    goto LABEL_26;
  }
  v53 = v81;
  sub_1BDDA2E8C(v52, v81, type metadata accessor for Proto_Constants);
  sub_1BDD9C318(v53, v80, type metadata accessor for Proto_Constants);
  v54 = *(_QWORD *)&v51[v70]
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v55 = v54;
  v56 = v71;
  sub_1BDD86DEC(v55, v71, &qword_1EF52F958);
  if (v45((char *)v56, 1, v44) == 1)
  {
    sub_1BDD86E30(v56, &qword_1EF52F958);
    v57 = (uint64_t)v74;
    v58 = (uint64_t)v73;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v57 = (uint64_t)v74;
    v58 = (uint64_t)v73;
    if (EnumCaseMultiPayload == 2)
    {
      v60 = v72;
      sub_1BDDA2E8C(v56, v72, type metadata accessor for Peer_KeyPaths);
LABEL_23:
      v63 = *(int *)(v46 + 20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Peer_KeyPaths._StorageClass(0);
        swift_allocObject();
        v64 = swift_retain();
        *(_QWORD *)(v60 + v63) = sub_1BE1209BC(v64);
        swift_release();
      }
      v65 = *(_QWORD *)(v60 + v63);
      sub_1BDDA2E8C(v80, v58, type metadata accessor for Proto_Constants);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v58, 0, 1, v87);
      sub_1BDDA2EF0(v58, v57, &qword_1ED6F3290);
      v66 = v65
          + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
      swift_beginAccess();
      swift_retain();
      sub_1BDDA1AF4(v57, v66, &qword_1ED6F3290);
      swift_endAccess();
      swift_release();
      sub_1BE117FE4(v60);
      sub_1BDD9C3E0(v81, type metadata accessor for Proto_Constants);
LABEL_26:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C628);
      v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_1BE1B61C0;
      *(_QWORD *)(v67 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v67 + 32) = 0xD000000000000017;
      *(_QWORD *)(v67 + 40) = 0x80000001BE1D04C0;
      sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
      sub_1BE1B227C();
      __asm { BR              X10 }
    }
    sub_1BDD9C3E0(v56, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  }
  v61 = v72;
  sub_1BE1B20E4();
  v62 = *(int *)(v46 + 20);
  if (qword_1EF52BF00 != -1)
    swift_once();
  *(_QWORD *)(v61 + v62) = qword_1EF530438;
  swift_retain();
  v60 = v61;
  goto LABEL_23;
}

uint64_t sub_1BE1068F0(_OWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t inited;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int EnumCaseMultiPayload;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t, uint64_t);
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;

  v103 = a1;
  v2 = *v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v4 = MEMORY[0x1E0C80A78](v3);
  v97 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v95 = (char *)&v82 - v7;
  MEMORY[0x1E0C80A78](v6);
  v101 = (uint64_t)&v82 - v8;
  v98 = type metadata accessor for Proto_Constants(0);
  v104 = *(_QWORD *)(v98 - 8);
  v9 = MEMORY[0x1E0C80A78](v98);
  v102 = (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v96 = (uint64_t)&v82 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v100 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v99 = (char *)&v82 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v82 - v20;
  v22 = type metadata accessor for Proto_Document(0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v82 - v26;
  v28 = type metadata accessor for Proto_Version(0);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (uint64_t *)((char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = type metadata accessor for Peer_MergeRequest(0);
  MEMORY[0x1E0C80A78](v32);
  v33 = v2;
  v35 = (char *)&v82 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(v33 + 192);
  if (!*(_QWORD *)(v105 + v36))
  {
    v89 = v21;
    v94 = v31;
    v90 = v29;
    v91 = v28;
    v92 = v27;
    v84 = v19;
    v85 = v25;
    v38 = v98;
    v86 = v36;
    v88 = *v103;
    v87 = v33;
    v39 = *(void **)(v105 + *(_QWORD *)(v33 + 120));
    type metadata accessor for CREncoder();
    inited = swift_initStackObject();
    v41 = MEMORY[0x1E0DEE9D8];
    v42 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(inited + 32) = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(inited + 40) = v41;
    *(_QWORD *)(inited + 48) = v41;
    *(_QWORD *)(inited + 56) = v42;
    *(_QWORD *)(inited + 64) = v41;
    *(_QWORD *)(inited + 80) = 0;
    *(_QWORD *)(inited + 88) = 0;
    *(_QWORD *)(inited + 16) = v39;
    *(_QWORD *)(inited + 24) = v41;
    *(_BYTE *)(inited + 72) = 2;
    v43 = v39;
    sub_1BE1B20E4();
    v44 = *(int *)(v32 + 20);
    if (qword_1EF52BED8 != -1)
      swift_once();
    v45 = qword_1EF530428;
    v103 = v35;
    *(_QWORD *)&v35[v44] = qword_1EF530428;
    v106 = v88;
    swift_retain();
    sub_1BDDAD780(inited, v94);
    v46 = v45
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    v47 = (uint64_t)v89;
    sub_1BDD86DEC(v46, (uint64_t)v89, &qword_1EF52F958);
    v48 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48);
    v49 = v83(v47, 1, v48);
    v50 = v22;
    v93 = v32;
    *(_QWORD *)&v88 = v48;
    if (v49 == 1)
    {
      sub_1BDD86E30(v47, &qword_1EF52F958);
      v51 = (uint64_t)v100;
      v52 = (uint64_t)v99;
      v53 = (uint64_t)v92;
    }
    else
    {
      v54 = swift_getEnumCaseMultiPayload() == 1;
      v55 = v47;
      v51 = (uint64_t)v100;
      v52 = (uint64_t)v99;
      v53 = (uint64_t)v92;
      if (v54)
      {
        v56 = v44;
        sub_1BDDA2E8C(v55, (uint64_t)v92, type metadata accessor for Proto_Document);
        goto LABEL_13;
      }
      sub_1BDD9C3E0(v55, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    }
    sub_1BE1B20E4();
    v57 = *(int *)(v50 + 20);
    if (qword_1ED6F3268 != -1)
      swift_once();
    v56 = v44;
    *(_QWORD *)(v53 + v57) = qword_1ED6F37F0;
    swift_retain();
LABEL_13:
    v58 = *(int *)(v50 + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Document._StorageClass(0);
      swift_allocObject();
      v59 = swift_retain();
      *(_QWORD *)(v53 + v58) = sub_1BDDA0F18(v59);
      swift_release();
    }
    v60 = *(_QWORD *)(v53 + v58);
    sub_1BDDA2E8C((uint64_t)v94, v52, type metadata accessor for Proto_Version);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v52, 0, 1, v91);
    sub_1BDDA2EF0(v52, v51, &qword_1ED6F37A8);
    v61 = v60 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4(v51, v61, &qword_1ED6F37A8);
    swift_endAccess();
    swift_release();
    v62 = v103;
    sub_1BE1181F8(v53);
    v63 = v101;
    sub_1BDDC90C0(v101);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v63, 1, v38) == 1)
    {
      sub_1BDD86E30(v63, &qword_1ED6F3290);
      goto LABEL_28;
    }
    v64 = v96;
    sub_1BDDA2E8C(v63, v96, type metadata accessor for Proto_Constants);
    sub_1BDD9C318(v64, v102, type metadata accessor for Proto_Constants);
    v65 = *(_QWORD *)((char *)v62 + v56)
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    v66 = v65;
    v67 = (uint64_t)v84;
    sub_1BDD86DEC(v66, (uint64_t)v84, &qword_1EF52F958);
    if (v83(v67, 1, v88) == 1)
    {
      sub_1BDD86E30(v67, &qword_1EF52F958);
      v68 = (uint64_t)v97;
      v69 = (uint64_t)v95;
      v70 = (uint64_t)v85;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v68 = (uint64_t)v97;
      v69 = (uint64_t)v95;
      v70 = (uint64_t)v85;
      if (EnumCaseMultiPayload == 1)
      {
        sub_1BDDA2E8C(v67, (uint64_t)v85, type metadata accessor for Proto_Document);
LABEL_25:
        v73 = *(int *)(v50 + 20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for Proto_Document._StorageClass(0);
          swift_allocObject();
          v74 = swift_retain();
          v75 = sub_1BDDA0F18(v74);
          v70 = (uint64_t)v85;
          *(_QWORD *)&v85[v73] = v75;
          swift_release();
        }
        v76 = v70;
        v77 = *(_QWORD *)(v70 + v73);
        sub_1BDDA2E8C(v102, v69, type metadata accessor for Proto_Constants);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v104 + 56))(v69, 0, 1, v38);
        sub_1BDDA2EF0(v69, v68, &qword_1ED6F3290);
        v78 = v77
            + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
        swift_beginAccess();
        swift_retain();
        sub_1BDDA1AF4(v68, v78, &qword_1ED6F3290);
        swift_endAccess();
        swift_release();
        sub_1BE1181F8(v76);
        sub_1BDD9C3E0(v64, type metadata accessor for Proto_Constants);
LABEL_28:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C628);
        v79 = swift_allocObject();
        *(_OWORD *)(v79 + 16) = xmmword_1BE1B61C0;
        *(_QWORD *)(v79 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v79 + 32) = 0xD00000000000001DLL;
        *(_QWORD *)(v79 + 40) = 0x80000001BE1D04E0;
        sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
        sub_1BE1B227C();
        __asm { BR              X10 }
      }
      sub_1BDD9C3E0(v67, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    }
    sub_1BE1B20E4();
    v72 = *(int *)(v50 + 20);
    if (qword_1ED6F3268 != -1)
      swift_once();
    *(_QWORD *)(v70 + v72) = qword_1ED6F37F0;
    swift_retain();
    goto LABEL_25;
  }
  v37 = *(_QWORD *)(v105 + v36);
  swift_bridgeObjectRetain();
  return v37;
}

uint64_t sub_1BE107440@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[3];
  _QWORD v33[3];

  v4 = v3;
  v8 = (_QWORD *)*v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301C0);
  MEMORY[0x1E0C80A78](v9);
  v32[2] = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Peer_RequestAssets(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Peer_MergeRequest(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v4 + v8[16]) == 1)
  {
    v32[1] = a3;
    sub_1BE1B20E4();
    v20 = *(int *)(v17 + 20);
    if (qword_1EF52BED8 != -1)
      swift_once();
    v21 = qword_1EF530428;
    *(_QWORD *)&v19[v20] = qword_1EF530428;
    v22 = v21
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v22, (uint64_t)v13, &qword_1EF52F958);
    v23 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v13, 1, v23) == 1)
    {
      swift_retain();
      sub_1BDDB6CA4(a1, a2);
      sub_1BDD86E30((uint64_t)v13, &qword_1EF52F958);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        sub_1BDDA2E8C((uint64_t)v13, (uint64_t)v16, type metadata accessor for Peer_RequestAssets);
        swift_retain();
        sub_1BDDB6CA4(a1, a2);
        goto LABEL_11;
      }
      swift_retain();
      sub_1BDDB6CA4(a1, a2);
      sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    }
    *(_QWORD *)v16 = sub_1BE1B20CC();
    *((_QWORD *)v16 + 1) = v25;
    sub_1BE1B20E4();
LABEL_11:
    sub_1BDDB796C(*(_QWORD *)v16, *((_QWORD *)v16 + 1));
    *(_QWORD *)v16 = a1;
    *((_QWORD *)v16 + 1) = a2;
    sub_1BE11840C((uint64_t)v16);
    (*(void (**)(char *, _QWORD))(v8[13] + 16))(v19, v8[11]);
    v26 = *(_QWORD *)(*v4 + 136);
    v27 = *(id *)((char *)v4 + v26);
    sub_1BE1B2EA0();

    v28 = *(id *)((char *)v4 + v26);
    sub_1BE1B2EA0();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C628);
    v29 = swift_allocObject();
    v30 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v29 + 16) = xmmword_1BE1B61C0;
    *(_QWORD *)(v29 + 56) = v30;
    *(_QWORD *)(v29 + 32) = 0x61636F6C20746547;
    *(_QWORD *)(v29 + 40) = 0xEF7465737361206CLL;
    v31 = *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 208) + 8);
    if (v31 >> 60 != 15)
      __asm { BR              X13 }
    __break(1u);
    JUMPOUT(0x1BE107994);
  }
  sub_1BDDB6CA4(a1, a2);
  swift_retain();
  sub_1BE108BC8(a1, a2, v33);
  swift_release();
  result = sub_1BDDB796C(a1, a2);
  *a3 = v33[0];
  return result;
}

void sub_1BE1079C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  _BYTE v20[48];
  uint64_t v21;

  v3 = v2;
  v6 = sub_1BE1B2108();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for Peer_MergeResponse(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301C0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 200);
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v12, &qword_1EF5301C0);
  v14 = type metadata accessor for Peer_RespondAsset(0);
  LODWORD(v13) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14);
  sub_1BDD86E30((uint64_t)v12, &qword_1EF5301C0);
  if ((_DWORD)v13 == 1)
  {
    v21 = 0;
    memset(&v20[16], 0, 32);
    sub_1BDDB6CA4(a1, a2);
    sub_1BE1B20FC();
    sub_1BDD8422C((unint64_t *)&qword_1EF52F960, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C3308);
    sub_1BE1B2270();
    sub_1BE107C10((uint64_t)v9);
    sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Peer_MergeResponse);
  }
  else
  {
    v15 = (uint64_t *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 208));
    v16 = *v15;
    v17 = v15[1];
    *v15 = a1;
    v15[1] = a2;
    sub_1BDD9CC0C(v16, v17);
    v18 = *(void **)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 136));
    sub_1BDDB6CA4(a1, a2);
    v19 = v18;
    sub_1BE1B2EAC();

  }
}

void sub_1BE107C10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v2 = type metadata accessor for Peer_MergeResponse(0);
  MEMORY[0x1E0C80A78](v2);
  v27[0] = (uint64_t)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301C0);
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301C8);
  MEMORY[0x1E0C80A78](v6);
  v34 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D920);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  MEMORY[0x1E0C80A78](v10);
  v33 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_Constants(0);
  v30 = *(_QWORD *)(v12 - 8);
  v31 = v12;
  MEMORY[0x1E0C80A78](v12);
  v35 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for Peer_KeyPaths(0);
  v29 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Proto_Document(0);
  v27[2] = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v27 - v23;
  v27[1] = v2;
  v25 = *(_QWORD *)(a1 + *(int *)(v2 + 20))
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v25, (uint64_t)v17, &qword_1EF52F950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    sub_1BDDA2E8C((uint64_t)v17, (uint64_t)v24, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
    sub_1BDD9C318((uint64_t)v24, (uint64_t)v22, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
    v26 = (char *)&loc_1BE107F68 + 4 * byte_1BE1C2690[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BDD86E30((uint64_t)v17, &qword_1EF52F950);
  sub_1BDD9C318(a1, v27[0], type metadata accessor for Peer_MergeResponse);
  v39 = 0;
  v40 = 0xE000000000000000;
  sub_1BE1B305C();
  sub_1BE1B284C();
  sub_1BE1B3164();
  sub_1BE1B284C();
  sub_1BE1B3200();
  __break(1u);
  JUMPOUT(0x1BE108398);
}

uint64_t sub_1BE1083E0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));

  sub_1BDDC8EA0(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144)));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDD86E30(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176), &qword_1EF52D920);
  sub_1BDD86E30(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184), &qword_1EF5301C8);
  swift_bridgeObjectRelease();
  sub_1BDD86E30(v0 + *(_QWORD *)(*(_QWORD *)v0 + 200), &qword_1EF5301C0);
  sub_1BDD9CC0C(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208) + 8));
  return v0;
}

uint64_t sub_1BE1084E0()
{
  sub_1BE1083E0();
  return swift_deallocClassInstance();
}

void type metadata accessor for LocalCapsuleSource()
{
  JUMPOUT(0x1C3B7DED0);
}

unint64_t sub_1BE108514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF52CEF0;
  if (!qword_1EF52CEF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED6ED778);
    result = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF52CEF0);
  }
  return result;
}

uint64_t sub_1BE108560@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BE102C78(a1);
}

uint64_t sub_1BE108580()
{
  return sub_1BE103250();
}

uint64_t sub_1BE108594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BE103254(a1, a2, a3);
}

uint64_t sub_1BE1085B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_1BE104898(a1, a2, a3, a4, a5);
}

uint64_t sub_1BE1085DC@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BE1068F0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BE108614(uint64_t *a1)
{
  char v1;

  sub_1BE105D9C(a1);
  return v1 & 1;
}

uint64_t sub_1BE108638@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1BE107440(a1, a2, a3);
}

uint64_t sub_1BE108660@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BE103C38(a1, a2);
}

uint64_t sub_1BE10867C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  v3 = type metadata accessor for Proto_KeyPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v10[0] = v1;
    v10[3] = MEMORY[0x1E0DEE9D8];
    sub_1BDD93E38(0, v7, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10[1] = *(_QWORD *)(v4 + 72);
    sub_1BDD9C318(v8, (uint64_t)v6, type metadata accessor for Proto_KeyPath);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BE10889C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1BE1B1DF0();
  v33 = *(_QWORD *)(v35 - 8);
  v13 = MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v33 - v15;
  type metadata accessor for CRAssetRef();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = v5;
  type metadata accessor for CRFileSnapshot();
  v36 = a1;
  v37 = a2;
  sub_1BDDB6CA4(a1, a2);
  swift_retain();
  sub_1BE0C53DC(0, 0, (uint64_t)v16);
  sub_1BDD86DEC(v5 + 56, (uint64_t)&v41, qword_1ED6F3DD0);
  if (v42)
  {
    sub_1BDD85B8C(&v41, (uint64_t)v43);
    v18 = a5;
    v19 = v44;
    v20 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    v21 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v20 + 8);
    v22 = v20;
    a5 = v18;
    a3 = v21(a3, a4, v19, v22);
    a4 = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    sub_1BDD86E30((uint64_t)&v41, qword_1ED6F3DD0);
    sub_1BDDB6CA4(a3, a4);
  }
  sub_1BE1B1E98();
  sub_1BDDB796C(a3, a4);
  v24 = v34;
  v25 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v26 = v35;
  v25(v34, v16, v35);
  v27 = swift_allocObject();
  v25((char *)(v27 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url), v24, v26);
  v28 = (_QWORD *)swift_allocObject();
  v30 = v36;
  v29 = v37;
  v28[2] = v36;
  v28[3] = v29;
  v28[4] = v27;
  v43[0] = &unk_1EF5303C0;
  v43[1] = v28;
  swift_weakInit();
  sub_1BDDB6CA4(v30, v29);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  v31 = v38;
  sub_1BE1B2AEC();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v40);
  swift_release();
  result = swift_release();
  *a5 = v17;
  return result;
}

uint64_t sub_1BE108BC8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  _QWORD v27[2];
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x1E0C80A78](v8);
  v29 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6EE518 != -1)
    swift_once();
  v10 = sub_1BE1B23C0();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED6F8A50);
  sub_1BDDB6CA4(a1, a2);
  sub_1BDDB6CA4(a1, a2);
  swift_retain();
  v11 = sub_1BE1B23A8();
  v12 = sub_1BE1B2DC8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v28 = a3;
    v14 = v13;
    v15 = swift_slowAlloc();
    v36 = v15;
    *(_DWORD *)v14 = 136315394;
    v16 = *(_QWORD *)(v3 + 104);
    v17 = *(_QWORD *)(v3 + 112);
    swift_bridgeObjectRetain();
    v37 = (void *)sub_1BDDC1468(v16, v17, &v36);
    sub_1BE1B2F0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v27[1] = v14 + 14;
    v37 = (void *)sub_1BE1B1E74();
    v38 = v18;
    v34 = 47;
    v35 = 0xE100000000000000;
    v32 = 95;
    v33 = 0xE100000000000000;
    sub_1BDDC8C50();
    v19 = sub_1BE1B2F30();
    v21 = v20;
    swift_bridgeObjectRelease();
    v37 = (void *)sub_1BDDC1468(v19, v21, &v36);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    sub_1BDDB796C(a1, a2);
    sub_1BDDB796C(a1, a2);
    _os_log_impl(&dword_1BDD82000, v11, v12, "%s addLazyAsset %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v15, -1, -1);
    v22 = v14;
    a3 = v28;
    MEMORY[0x1C3B7E068](v22, -1, -1);
  }
  else
  {
    swift_release();
    sub_1BDDB796C(a1, a2);
    sub_1BDDB796C(a1, a2);
  }

  type metadata accessor for CRAssetRef();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a1;
  v23[3] = a2;
  v23[4] = v4;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = a2;
  v37 = &unk_1EF530400;
  v38 = v24;
  swift_weakInit();
  sub_1BDDB6CA4(a1, a2);
  sub_1BDDB6CA4(a1, a2);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  v25 = v29;
  sub_1BE1B2AEC();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v31);
  result = swift_release();
  *a3 = v23;
  return result;
}

uint64_t sub_1BE108F84@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;

  v5 = v4;
  v29 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x1E0C80A78](v9);
  v26 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BE1B1DF0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRAssetRef();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = v4;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v19(v17, a3, v14);
  v19(v13, v5 + OBJC_IVAR____TtC9Coherence14CRAssetManager_temporaryDirectory, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  sub_1BDDB6CA4(a1, a2);
  swift_retain();
  v20 = sub_1BE0C59D4((uint64_t)v17, 0, 0, 0, (uint64_t)v13);
  type metadata accessor for CRAssetProviderUniqueFile(0);
  v21 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v21 + 112) = 0;
  *(_BYTE *)(v21 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_isTemporary) = 0;
  v19((char *)(v21 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl), v20 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url, v14);
  *(_QWORD *)(v21 + 120) = v20;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount) = 1;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a1;
  v22[3] = a2;
  v22[4] = v21;
  v30 = &unk_1EF530350;
  v31 = v22;
  swift_weakInit();
  sub_1BDDB6CA4(a1, a2);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  v23 = v26;
  sub_1BE1B2AEC();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v28);
  swift_release();
  result = swift_release();
  *v29 = v18;
  return result;
}

uint64_t sub_1BE109230@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;

  v31 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x1E0C80A78](v8);
  v28 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BE1B1DF0();
  v10 = *(_QWORD *)(v25 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v25);
  v13 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - v14;
  v27 = (char *)&v24 - v14;
  type metadata accessor for CRAssetRef();
  v16 = (_QWORD *)swift_allocObject();
  v26 = v16;
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v4;
  sub_1BDDB6CA4(a1, a2);
  swift_retain();
  sub_1BE1B1DC0();
  v32 = v4;
  v33 = v15;
  type metadata accessor for CRAssetWatchedDirectory();
  sub_1BE1B2E40();
  v17 = v34;
  v18 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a3, v25);
  v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = (v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v21 + v19, v13, v18);
  *(_QWORD *)(v21 + v20) = v17;
  v34 = &unk_1EF530368;
  v35 = v21;
  swift_weakInit();
  sub_1BDDB6CA4(a1, a2);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  v22 = v28;
  sub_1BE1B2AEC();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v30);
  swift_release();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v27, v18);
  *v31 = v26;
  return result;
}

uint64_t sub_1BE109490()
{
  uint64_t v0;

  v0 = sub_1BE1B23C0();
  __swift_allocate_value_buffer(v0, qword_1ED6F8A50);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6F8A50);
  return sub_1BE1B23B4();
}

uint64_t sub_1BE109500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530308);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  swift_beginAccess();
  v10 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v10 + 64);
  v34 = v0;
  v35 = v10 + 64;
  v12 = 1 << *(_BYTE *)(v10 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v15 = (unint64_t)(v12 + 63) >> 6;
  v33 = v15 - 1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v14)
    goto LABEL_8;
LABEL_6:
  v21 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  v22 = v21 | (v17 << 6);
  while (2)
  {
    v23 = *(_QWORD *)(v10 + 48);
    v24 = sub_1BE1B1F58();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v7, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, v24);
    v25 = *(_QWORD *)(v10 + 56);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530310);
    *(_QWORD *)&v7[*(int *)(v26 + 48)] = *(_QWORD *)(v25 + 8 * v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 0, 1, v26);
    while (1)
    {
      sub_1BDDA2EF0((uint64_t)v7, (uint64_t)v9, &qword_1EF530308);
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530310);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v9, 1, v31) == 1)
      {
        swift_release();
        v32 = v34;
        swift_bridgeObjectRelease();
        sub_1BDD86E30(v32 + OBJC_IVAR____TtC9Coherence19CRLazyAssetProvider_url, &qword_1ED6F3C70);
        swift_defaultActor_destroy();
        return v32;
      }
      v18 = *(_QWORD *)&v9[*(int *)(v31 + 48)];
      v19 = sub_1BE1B1DF0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 1, v19);
      sub_1BDDA2EF0((uint64_t)v3, *(_QWORD *)(*(_QWORD *)(v18 + 64) + 40), &qword_1ED6F3C70);
      swift_continuation_resume();
      v20 = sub_1BE1B1F58();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v9, v20);
      if (v14)
        goto LABEL_6;
LABEL_8:
      v27 = v17 + 1;
      if (__OFADD__(v17, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v27 < v15)
      {
        v28 = *(_QWORD *)(v35 + 8 * v27);
        if (v28)
          goto LABEL_11;
        v29 = v17 + 2;
        ++v17;
        if (v27 + 1 < v15)
        {
          v28 = *(_QWORD *)(v35 + 8 * v29);
          if (v28)
            goto LABEL_14;
          v17 = v27 + 1;
          if (v27 + 2 < v15)
          {
            v28 = *(_QWORD *)(v35 + 8 * (v27 + 2));
            if (v28)
            {
              v27 += 2;
              goto LABEL_11;
            }
            v29 = v27 + 3;
            v17 = v27 + 2;
            if (v27 + 3 < v15)
              break;
          }
        }
      }
LABEL_25:
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530310);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v7, 1, 1, v30);
      v14 = 0;
    }
    v28 = *(_QWORD *)(v35 + 8 * v29);
    if (v28)
    {
LABEL_14:
      v27 = v29;
LABEL_11:
      v14 = (v28 - 1) & v28;
      v22 = __clz(__rbit64(v28)) + (v27 << 6);
      v17 = v27;
      continue;
    }
    break;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v15)
    {
      v17 = v33;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v35 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BE109888()
{
  sub_1BE109500();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1BE1098A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_1BE1B1F58();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE109904()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  sub_1BE1B1F4C();
  v1 = sub_1BE1B2B40();
  v2 = *(_QWORD *)(v0 + 64);
  if ((v1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    v4 = sub_1BE1B1DF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 24);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v9;
    v9[2] = v8;
    v9[3] = v7;
    v9[4] = v6;
    v9[5] = v2;
    v10 = swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v10;
    *(_QWORD *)(v10 + 16) = v6;
    *(_QWORD *)(v10 + 24) = v2;
    sub_1BDD8422C((unint64_t *)&unk_1EF530328, type metadata accessor for CRLazyAssetProvider, (uint64_t)&unk_1BE1C2A08);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
    *v11 = v0;
    v11[1] = sub_1BE109A58;
    return sub_1BE1B34B8();
  }
}

uint64_t sub_1BE109A58()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE109ACC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE109B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  v6 = sub_1BE1B1F58();
  v5[20] = v6;
  v5[21] = *(_QWORD *)(v6 - 8);
  v5[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  v5[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE109B9C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  if (qword_1ED6EE518 != -1)
    swift_once();
  v1 = sub_1BE1B23C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6F8A50);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v2 = sub_1BE1B23A8();
  v3 = sub_1BE1B2DC8();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[17];
  if (v4)
  {
    v6 = v0[16];
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[13] = sub_1BDDC1468(v6, v5, &v13);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    v9 = sub_1BE1B278C();
    v0[14] = sub_1BDDC1468(v9, v10, &v13);
    sub_1BE1B2F0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BDD82000, v2, v3, "%s reading waiting for %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v8, -1, -1);
    MEMORY[0x1C3B7E068](v7, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v11 = v0[18];
  sub_1BDD8422C((unint64_t *)&unk_1EF530328, type metadata accessor for CRLazyAssetProvider, (uint64_t)&unk_1BE1C2A08);
  if (v11)
  {
    swift_getObjectType();
    sub_1BE1B2A98();
  }
  return swift_task_switch();
}

uint64_t sub_1BE109E08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v1 = v0[22];
  v2 = v0[20];
  v3 = v0[21];
  v5 = v0[18];
  v4 = v0[19];
  v0[7] = v0[23];
  v0[2] = v0;
  v0[3] = sub_1BE109EF8;
  v6 = swift_continuation_init();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v5 + 112);
  *(_QWORD *)(v5 + 112) = 0x8000000000000000;
  sub_1BE154EB0(v6, v1, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v5 + 112) = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_endAccess();
  return swift_continuation_await();
}

uint64_t sub_1BE109EF8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  sub_1BDDA2EF0(*(_QWORD *)(*v0 + 184), *(_QWORD *)(*v0 + 120), &qword_1ED6F3C70);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BE109F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v4 = sub_1BE1B1F58();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C10);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BE1B2ABC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_1BE193A0C((uint64_t)v9, (uint64_t)&unk_1EF530340, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1BE10A0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1BE10A0C0()
{
  uint64_t v0;

  sub_1BE10A0F0(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10A0F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BDDAE974(a1);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      v10 = sub_1BE1B1DF0();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
      sub_1BDDA2EF0((uint64_t)v5, *(_QWORD *)(*(_QWORD *)(v9 + 64) + 40), &qword_1ED6F3C70);
      swift_continuation_resume();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  sub_1BDEF0B44(a1);
  return swift_endAccess();
}

uint64_t sub_1BE10A21C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530308);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE10A2C0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  uint64_t (*v15)(_QWORD, uint64_t, unint64_t, uint64_t, _QWORD);
  uint64_t v16;

  if (qword_1ED6EE518 != -1)
    swift_once();
  v1 = sub_1BE1B23C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6F8A50);
  swift_retain_n();
  v2 = sub_1BE1B23A8();
  v3 = sub_1BE1B2DC8();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[12];
  if (v4)
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v16 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = sub_1BE1B278C();
    v0[8] = sub_1BDDC1468(v8, v9, &v16);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2048;
    swift_beginAccess();
    v10 = *(_QWORD *)(*(_QWORD *)(v5 + 112) + 16);
    swift_release();
    v0[9] = v10;
    sub_1BE1B2F0C();
    swift_release();
    _os_log_impl(&dword_1BDD82000, v2, v3, "%s accommodateReplacement of lazy provider with %ld readers", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v7, -1, -1);
    MEMORY[0x1C3B7E068](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v11 = v0[11];
  ObjectType = swift_getObjectType();
  v15 = (uint64_t (*)(_QWORD, uint64_t, unint64_t, uint64_t, _QWORD))(**(int **)(v11 + 56)
                                                                                   + *(_QWORD *)(v11 + 56));
  v13 = (_QWORD *)swift_task_alloc();
  v0[17] = v13;
  *v13 = v0;
  v13[1] = sub_1BE10A514;
  return v15(v0[16], 45, 0xE100000000000000, ObjectType, v0[11]);
}

uint64_t sub_1BE10A514()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE10A56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;

  v28 = *(_QWORD *)(v0 + 96) + 112;
  swift_beginAccess();
  v1 = *(_QWORD *)v28;
  v29 = *(_QWORD *)v28 + 64;
  v2 = -1;
  v3 = -1 << *(_BYTE *)(*(_QWORD *)v28 + 32);
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  v4 = v2 & *(_QWORD *)(*(_QWORD *)v28 + 64);
  v30 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  if (!v4)
    goto LABEL_8;
LABEL_6:
  v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v10 = v9 | (v6 << 6);
  while (2)
  {
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v1 + 48);
    v13 = sub_1BE1B1F58();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v10, v13);
    v14 = *(_QWORD *)(v1 + 56);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530310);
    *(_QWORD *)(v11 + *(int *)(v15 + 48)) = *(_QWORD *)(v14 + 8 * v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 0, 1, v15);
    while (1)
    {
      v21 = *(_QWORD *)(v0 + 112);
      sub_1BDDA2EF0(*(_QWORD *)(v0 + 104), v21, &qword_1EF530308);
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530310);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22);
      v24 = *(_QWORD *)(v0 + 120);
      v25 = *(_QWORD *)(v0 + 128);
      v26 = *(_QWORD *)(v0 + 112);
      if (v23 == 1)
      {
        swift_release();
        v27 = sub_1BE126CD0(MEMORY[0x1E0DEE9D8]);
        sub_1BDD86E30(v25, &qword_1ED6F3C70);
        *(_QWORD *)v28 = v27;
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v7 = *(_QWORD *)(v26 + *(int *)(v22 + 48));
      sub_1BDD86DEC(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 120), &qword_1ED6F3C70);
      sub_1BDDA2EF0(v24, *(_QWORD *)(*(_QWORD *)(v7 + 64) + 40), &qword_1ED6F3C70);
      swift_continuation_resume();
      v8 = sub_1BE1B1F58();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v26, v8);
      if (v4)
        goto LABEL_6;
LABEL_8:
      v16 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v16 < v30)
      {
        v17 = *(_QWORD *)(v29 + 8 * v16);
        if (v17)
          goto LABEL_11;
        v18 = v6 + 2;
        ++v6;
        if (v16 + 1 < v30)
        {
          v17 = *(_QWORD *)(v29 + 8 * v18);
          if (v17)
            goto LABEL_14;
          v6 = v16 + 1;
          if (v16 + 2 < v30)
          {
            v17 = *(_QWORD *)(v29 + 8 * (v16 + 2));
            if (v17)
            {
              v16 += 2;
              goto LABEL_11;
            }
            v18 = v16 + 3;
            v6 = v16 + 2;
            if (v16 + 3 < v30)
              break;
          }
        }
      }
LABEL_25:
      v19 = *(_QWORD *)(v0 + 104);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530310);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
      v4 = 0;
    }
    v17 = *(_QWORD *)(v29 + 8 * v18);
    if (v17)
    {
LABEL_14:
      v16 = v18;
LABEL_11:
      v4 = (v17 - 1) & v17;
      v10 = __clz(__rbit64(v17)) + (v16 << 6);
      v6 = v16;
      continue;
    }
    break;
  }
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v30)
    {
      v6 = v30 - 1;
      goto LABEL_25;
    }
    v17 = *(_QWORD *)(v29 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BE10A8B8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 128);
}

uint64_t sub_1BE10A8E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 128) = a1;
  return result;
}

uint64_t (*sub_1BE10A924())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BE10A960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BDD86DEC(v1 + OBJC_IVAR____TtC9Coherence19CRLazyAssetProvider_url, a1, &qword_1ED6F3C70);
}

uint64_t sub_1BE10A98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BDE281A0;
  return sub_1BE1098A0(a1, a2, a3);
}

uint64_t sub_1BE10A9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1BE10AA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_unknownObjectRetain();
  return v4(v2, v1);
}

uint64_t sub_1BE10AA48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDE281A0;
  return sub_1BE10A21C(a1, a2);
}

uint64_t sub_1BE10AAA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  v1[6] = swift_task_alloc();
  v2 = sub_1BE1B1DF0();
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE10AB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v6(v1, v5 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_fileUrl, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v4);
  v7 = sub_1BE0C59D4(v1, 0, 0, 0, v3);
  v8 = (uint64_t *)(v5 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_retainCount);
  swift_beginAccess();
  v9 = *v8;
  type metadata accessor for CRAssetProviderUniqueFile(0);
  v10 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v10 + 112) = 0;
  *(_BYTE *)(v10 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_isTemporary) = 0;
  v6(v10 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl, v7 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url, v4);
  *(_QWORD *)(v10 + 120) = v7;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount) = v9;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 8))(v10, &off_1E7759A40);
}

uint64_t sub_1BE10AC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_fileUrl;
  v2 = sub_1BE1B1DF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1BE10ACBC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_retainCount;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BE10AD00(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_retainCount);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BE10AD48())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BE10AD8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE10AFAC(&OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_fileUrl, a1);
}

uint64_t sub_1BE10AD98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1BE10ADB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_fileUrl;
  v3 = sub_1BE1B1DF0();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10AE2C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BE1161A8;
  return sub_1BE10AAA4();
}

uint64_t sub_1BE10AE70()
{
  uint64_t v0;

  return sub_1BE11195C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BE10AE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl;
  v2 = sub_1BE1B1DF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1BE10AED0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BE10AF14(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BE10AF5C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BE10AFA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE10AFAC(&OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl, a1);
}

uint64_t sub_1BE10AFAC@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2 + *a1;
  v5 = sub_1BE1B1DF0();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, v4, v5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(a2, 0, 1, v5);
}

uint64_t sub_1BE10B010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1BE10B028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl;
  v3 = sub_1BE1B1DF0();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10B0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  swift_unknownObjectRetain();
  return sub_1BE111964(v5, v3, v2, a2);
}

uint64_t sub_1BE10B1C8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BE1B1DF0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v22 = a1;
  v14((char *)&v22 - v12, a1, v7);
  if (a2)
  {
    v15 = *(void (**)(char *, uint64_t))(v8 + 8);
    v16 = a2;
  }
  else
  {
    v17 = sub_1BE1B1DC0();
    MEMORY[0x1E0C80A78](v17);
    *(&v22 - 2) = v18;
    *(&v22 - 1) = (uint64_t)v11;
    type metadata accessor for CRAssetWatchedDirectory();
    sub_1BE1B2E40();
    v16 = v25;
    v15 = *(void (**)(char *, uint64_t))(v8 + 8);
    v15(v11, v7);
  }
  swift_retain();
  v15(v13, v7);
  v14(v11, v22, v7);
  v19 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, v11, v7);
  *(_QWORD *)(v20 + ((v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v16;
  v25 = &unk_1EF5302D8;
  v26 = v20;
  swift_weakInit();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  sub_1BE1B2AEC();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  swift_release();
  return swift_release();
}

void sub_1BE10B5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1BE1B1D30();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t sub_1BE10B6E0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = (void *)objc_opt_self();
  v2 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_removeFilePresenter_, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1BE10B728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F39F8);
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE10B78C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C58);
  sub_1BE1B2B10();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1BE10B814;
  return sub_1BE1B2B1C();
}

uint64_t sub_1BE10B814()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE10B868()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);

  if (!*(_QWORD *)(v0 + 16))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    goto LABEL_7;
  }
  sub_1BE116100((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 40));
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 104) = Strong;
  if (!Strong)
  {
LABEL_5:
    v4 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 72);
    sub_1BE116134(v0 + 40);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
LABEL_7:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = Strong;
  if ((sub_1BE1B2B40() & 1) != 0)
  {
    swift_release();
    goto LABEL_5;
  }
  v7 = *(int **)(v0 + 40);
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 48);
  v9 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v8;
  *v8 = v0;
  v8[1] = sub_1BE10B974;
  return v9(v2);
}

uint64_t sub_1BE10B974()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BE10B9D0()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  sub_1BE116134(v0 + 40);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1BE10B814;
  return sub_1BE1B2B1C();
}

uint64_t sub_1BE10BA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9Coherence10AssetActor__streamContinuation;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  sub_1BE1B2AF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1BE10BAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_1BE10BAEC()
{
  uint64_t v0;

  swift_continuation_throwingResume();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void (*sub_1BE10BB1C(uint64_t a1, unint64_t a2))(_QWORD *, _QWORD)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  void (*result)(_QWORD *, _QWORD);
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[8];
  uint64_t v32;

  v3 = v2;
  v6 = (uint64_t *)(v2 + 112);
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 112);
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_9;
  sub_1BDDB6CA4(a1, a2);
  swift_bridgeObjectRetain();
  v8 = sub_1BDE5E12C(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BDDB796C(a1, a2);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v8 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(a1, a2);
  ObjectType = swift_getObjectType();
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
  result = (void (*)(_QWORD *, _QWORD))swift_unknownObjectRelease();
  if (v12 <= 1)
  {
LABEL_9:
    if (qword_1ED6EE518 != -1)
      swift_once();
    v20 = sub_1BE1B23C0();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED6F8A50);
    sub_1BDDB6CA4(a1, a2);
    sub_1BDDB6CA4(a1, a2);
    swift_retain();
    v21 = sub_1BE1B23A8();
    v22 = sub_1BE1B2DC8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v32 = v30;
      *(_DWORD *)v23 = 136315394;
      v25 = *(_QWORD *)(v3 + 120);
      v24 = *(_QWORD *)(v3 + 128);
      swift_bridgeObjectRetain();
      sub_1BDDC1468(v25, v24, &v32);
      sub_1BE1B2F0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      sub_1BE1B1E74();
      v31[1] = v26;
      v31[6] = 47;
      v31[7] = 0xE100000000000000;
      v31[4] = 95;
      v31[5] = 0xE100000000000000;
      sub_1BDDC8C50();
      v27 = sub_1BE1B2F30();
      v29 = v28;
      swift_bridgeObjectRelease();
      v31[0] = sub_1BDDC1468(v27, v29, &v32);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      sub_1BDDB796C(a1, a2);
      sub_1BDDB796C(a1, a2);
      _os_log_impl(&dword_1BDD82000, v21, v22, "%s deinitAsset %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7E068](v30, -1, -1);
      MEMORY[0x1C3B7E068](v23, -1, -1);
    }
    else
    {
      swift_release();
      sub_1BDDB796C(a1, a2);
      sub_1BDDB796C(a1, a2);
    }

    swift_beginAccess();
    sub_1BDDB6CA4(a1, a2);
    sub_1BDEF0C1C(a1, a2);
    swift_endAccess();
    sub_1BDDB796C(a1, a2);
    return (void (*)(_QWORD *, _QWORD))swift_unknownObjectRelease();
  }
  v14 = *v6;
  if (!*(_QWORD *)(v14 + 16))
    return result;
  sub_1BDDB6CA4(a1, a2);
  swift_bridgeObjectRetain();
  v15 = sub_1BDE5E12C(a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (void (*)(_QWORD *, _QWORD))sub_1BDDB796C(a1, a2);
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 16 * v15 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(a1, a2);
  v18 = swift_getObjectType();
  result = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v17 + 24))(v31, v18, v17);
  if (__OFSUB__(*v19, 1))
  {
    __break(1u);
    return result;
  }
  --*v19;
  result(v31, 0);
  return (void (*)(_QWORD *, _QWORD))swift_unknownObjectRelease();
}

uint64_t sub_1BE10BF70(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 144) = a5;
  *(_QWORD *)(v6 + 152) = v5;
  *(_QWORD *)(v6 + 128) = a2;
  *(_QWORD *)(v6 + 136) = a4;
  *(_BYTE *)(v6 + 184) = a3;
  *(_QWORD *)(v6 + 120) = a1;
  return swift_task_switch();
}

void (*sub_1BE10BF94())(uint64_t, _QWORD)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  void (*result)(uint64_t, _QWORD);
  unint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 152) + 112;
  v2 = swift_beginAccess();
  v3 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_8;
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  sub_1BDDB6CA4(v5, v4);
  swift_bridgeObjectRetain();
  v6 = sub_1BDE5E12C(v5, v4);
  if ((v7 & 1) == 0)
  {
    v25 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 128);
    swift_bridgeObjectRelease();
    v2 = sub_1BDDB796C(v25, v24);
LABEL_8:
    v27 = *(_QWORD *)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 128);
    v28 = (*(uint64_t (**)(uint64_t))(v0 + 136))(v2);
    v30 = v29;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(1, ObjectType, v30);
    swift_beginAccess();
    sub_1BDDB6CA4(v27, v26);
    swift_unknownObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *(_QWORD *)v1;
    *(_QWORD *)v1 = 0x8000000000000000;
    sub_1BE112710(v28, v27, v26, isUniquelyReferenced_nonNull_native, &v37, ObjectType, v30);
    *(_QWORD *)v1 = v37;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v27, v26);
    swift_endAccess();
LABEL_9:
    swift_unknownObjectRelease();
    return (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_BYTE *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 128);
  v11 = (_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v6);
  *(_QWORD *)(v0 + 160) = *v11;
  v12 = v11[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v10, v9);
  v13 = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v13, v12) & 1) != 0 && (v8 & 1) == 0)
  {
    v14 = (*(uint64_t (**)(void))(v0 + 136))();
    v16 = v15;
    *(_QWORD *)(v0 + 168) = v14;
    v35 = swift_getObjectType();
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
    v18 = __OFADD__(v17, 1);
    result = (void (*)(uint64_t, _QWORD))(v17 + 1);
    v34 = v13;
    if (!v18)
    {
      v21 = *(_QWORD *)(v0 + 120);
      v20 = *(_QWORD *)(v0 + 128);
      (*(void (**)(void (*)(uint64_t, _QWORD), uint64_t, uint64_t))(v16 + 16))(result, v35, v16);
      swift_beginAccess();
      sub_1BDDB6CA4(v21, v20);
      swift_unknownObjectRetain();
      v22 = swift_isUniquelyReferenced_nonNull_native();
      v37 = *(_QWORD *)v1;
      *(_QWORD *)v1 = 0x8000000000000000;
      sub_1BE112710(v14, v21, v20, v22, &v37, v35, v16);
      *(_QWORD *)v1 = v37;
      swift_bridgeObjectRelease();
      sub_1BDDB796C(v21, v20);
      swift_endAccess();
      v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v12 + 72) + *(_QWORD *)(v12 + 72));
      v23 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v23;
      *v23 = v0;
      v23[1] = sub_1BE10C2E8;
      return (void (*)(uint64_t, _QWORD))v36(v14, v16, v34, v12);
    }
    __break(1u);
    goto LABEL_13;
  }
  result = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v0 + 16, v13, v12);
  if (!__OFADD__(*v33, 1))
  {
    ++*v33;
    result(v0 + 16, 0);
    goto LABEL_9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BE10C2E8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE10C340()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10C378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = sub_1BE1B1DF0();
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE10C3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  uint64_t v38;
  NSObject *log;
  uint64_t v40;
  os_log_type_t type[8];
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v46;

  if (qword_1ED6EE518 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = sub_1BE1B23C0();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED6F8A50);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v3);
  swift_retain();
  v7 = sub_1BE1B23A8();
  v8 = sub_1BE1B2DC8();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 144);
  if (v9)
  {
    v42 = v6;
    v14 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    v46 = v40;
    *(_DWORD *)v14 = 136315394;
    v38 = v11;
    log = v7;
    v16 = *(_QWORD *)(v13 + 120);
    v15 = *(_QWORD *)(v13 + 128);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 112) = sub_1BDDC1468(v16, v15, &v46);
    sub_1BE1B2F0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v17 = sub_1BE1B32E4();
    *(_QWORD *)(v0 + 120) = sub_1BDDC1468(v17, v18, &v46);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v10, v12);
    v7 = log;
    _os_log_impl(&dword_1BDD82000, log, v8, "%s presentedSubitemDidAppear %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v40, -1, -1);
    v19 = v14;
    v6 = v42;
    MEMORY[0x1C3B7E068](v19, -1, -1);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }

  *(_QWORD *)(v0 + 80) = sub_1BE1B1D78();
  *(_QWORD *)(v0 + 88) = v20;
  *(_QWORD *)(v0 + 96) = 95;
  *(_QWORD *)(v0 + 104) = 0xE100000000000000;
  *(_QWORD *)(v0 + 64) = 47;
  *(_QWORD *)(v0 + 72) = 0xE100000000000000;
  sub_1BDDC8C50();
  sub_1BE1B2F30();
  swift_bridgeObjectRelease();
  v21 = sub_1BE1B1E20();
  v23 = v22;
  *(_QWORD *)(v0 + 184) = v21;
  *(_QWORD *)(v0 + 192) = v22;
  sub_1BDD9C9A0(v21, v22);
  swift_bridgeObjectRelease();
  if (v23 >> 60 == 15)
    goto LABEL_13;
  v24 = *(_QWORD *)(v0 + 144);
  sub_1BDD9CC0C(v21, v23);
  v25 = (uint64_t *)(v24 + 112);
  swift_beginAccess();
  v26 = *(_QWORD *)(v24 + 112);
  if (!*(_QWORD *)(v26 + 16))
    goto LABEL_12;
  sub_1BDD9C9A0(v21, v23);
  swift_bridgeObjectRetain();
  v27 = sub_1BDE5E12C(v21, v23);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BDD9CC0C(v21, v23);
LABEL_12:
    sub_1BDD9CC0C(v21, v23);
    goto LABEL_13;
  }
  v29 = (_QWORD *)(*(_QWORD *)(v26 + 56) + 16 * v27);
  *(_QWORD *)(v0 + 200) = *v29;
  v30 = v29[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDD9CC0C(v21, v23);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v30 + 40))(ObjectType, v30) & 1) != 0)
  {
    v32 = *(_QWORD *)(v0 + 168);
    v44 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 152);
    *(_QWORD *)type = *(_QWORD *)(v0 + 136);
    v6(v32, *(_QWORD *)(v0 + 128), v33);
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(ObjectType, v30);
    type metadata accessor for CRAssetProviderUrl(0);
    v34 = swift_allocObject();
    *(_QWORD *)(v0 + 208) = v34;
    swift_retain();
    swift_defaultActor_initialize();
    *(_BYTE *)(v34 + 112) = 0;
    *(_QWORD *)(v34 + 120) = 0;
    *(_BYTE *)(v34 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_isTemporary) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v34 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_fileUrl, v32, v33);
    *(_QWORD *)(v34 + 120) = *(_QWORD *)type;
    swift_release();
    *(_QWORD *)(v34 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_retainCount) = v43;
    swift_beginAccess();
    sub_1BDD9C9A0(v21, v23);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v46 = *v25;
    *v25 = 0x8000000000000000;
    sub_1BE1125CC(v34, v21, v23, isUniquelyReferenced_nonNull_native, &v46, (uint64_t)&off_1E7758460);
    *v25 = v46;
    swift_bridgeObjectRelease();
    sub_1BDD9CC0C(v21, v23);
    swift_endAccess();
    v45 = (uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v30 + 72) + *(_QWORD *)(v30 + 72));
    swift_retain();
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v36;
    *v36 = v0;
    v36[1] = sub_1BE10C9C4;
    return v45(v34, &off_1E7758460, ObjectType, v30);
  }
  sub_1BDD9CC0C(v21, v23);
  swift_unknownObjectRelease();
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10C9C4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BE10CA24()
{
  uint64_t v0;

  sub_1BDD9CC0C(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10CA78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_1BE1B1DF0();
  v2[21] = v3;
  v2[22] = *(_QWORD *)(v3 - 8);
  v2[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE10CAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t ObjectType;
  _QWORD *v29;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *log;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;

  if (qword_1ED6EE518 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = sub_1BE1B23C0();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED6F8A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  swift_retain();
  v6 = sub_1BE1B23A8();
  v7 = sub_1BE1B2DC8();
  v8 = os_log_type_enabled(v6, v7);
  v10 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 168);
  if (v8)
  {
    v13 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v39 = v37;
    *(_DWORD *)v13 = 136315394;
    v35 = v10;
    log = v6;
    v15 = *(_QWORD *)(v11 + 120);
    v14 = *(_QWORD *)(v11 + 128);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 136) = sub_1BDDC1468(v15, v14, &v39);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v16 = sub_1BE1B32E4();
    *(_QWORD *)(v0 + 144) = sub_1BDDC1468(v16, v17, &v39);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v9, v12);
    v6 = log;
    _os_log_impl(&dword_1BDD82000, log, v7, "%s accommodatePresentedSubitemDeletion %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v37, -1, -1);
    MEMORY[0x1C3B7E068](v13, -1, -1);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v12);
  }

  *(_QWORD *)(v0 + 104) = sub_1BE1B1D78();
  *(_QWORD *)(v0 + 112) = v18;
  *(_QWORD *)(v0 + 120) = 95;
  *(_QWORD *)(v0 + 128) = 0xE100000000000000;
  *(_QWORD *)(v0 + 88) = 47;
  *(_QWORD *)(v0 + 96) = 0xE100000000000000;
  sub_1BDDC8C50();
  sub_1BE1B2F30();
  swift_bridgeObjectRelease();
  v19 = sub_1BE1B1E20();
  v21 = v20;
  *(_QWORD *)(v0 + 192) = v19;
  *(_QWORD *)(v0 + 200) = v20;
  sub_1BDD9C9A0(v19, v20);
  swift_bridgeObjectRelease();
  if (v21 >> 60 != 15)
  {
    v22 = *(_QWORD *)(v0 + 160);
    sub_1BDD9CC0C(v19, v21);
    swift_beginAccess();
    v23 = *(_QWORD *)(v22 + 112);
    if (*(_QWORD *)(v23 + 16))
    {
      sub_1BDD9C9A0(v19, v21);
      swift_bridgeObjectRetain();
      v24 = sub_1BDE5E12C(v19, v21);
      if ((v25 & 1) != 0)
      {
        v26 = (_QWORD *)(*(_QWORD *)(v23 + 56) + 16 * v24);
        *(_QWORD *)(v0 + 208) = *v26;
        v27 = v26[1];
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_1BDD9CC0C(v19, v21);
        ObjectType = swift_getObjectType();
        v38 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v27 + 64) + *(_QWORD *)(v27 + 64));
        v29 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 216) = v29;
        *v29 = v0;
        v29[1] = sub_1BE10CF74;
        return v38(ObjectType, v27);
      }
      swift_bridgeObjectRelease();
      sub_1BDD9CC0C(v19, v21);
    }
    swift_beginAccess();
    v32 = *(_QWORD *)(v0 + 192);
    v31 = *(_QWORD *)(v0 + 200);
    sub_1BDDB6CA4(v32, v31);
    sub_1BDEF0C1C(v32, v31);
    sub_1BDD9CC0C(v32, v31);
    swift_unknownObjectRelease();
    v34 = *(_QWORD *)(v0 + 192);
    v33 = *(_QWORD *)(v0 + 200);
    swift_endAccess();
    sub_1BDD9CC0C(v34, v33);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10CF74(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[8] = v2;
  v3[9] = a1;
  v3[10] = a2;
  v3[28] = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BE10CFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t ObjectType;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 224);
  swift_beginAccess();
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 192);
    v4 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 160);
    sub_1BDDB6CA4(v5, v4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *(_QWORD *)(v6 + 112);
    *(_QWORD *)(v6 + 112) = 0x8000000000000000;
    ObjectType = swift_getObjectType();
    sub_1BE112710(v2, v5, v4, isUniquelyReferenced_nonNull_native, &v14, ObjectType, v3);
    *(_QWORD *)(v6 + 112) = v14;
    swift_bridgeObjectRelease();
    sub_1BDD9CC0C(v5, v4);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 200);
    sub_1BDDB6CA4(v10, v9);
    sub_1BDEF0C1C(v10, v9);
    sub_1BDD9CC0C(v10, v9);
    swift_unknownObjectRelease();
  }
  v12 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 200);
  swift_endAccess();
  sub_1BDD9CC0C(v12, v11);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10D124(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a1;
  v2[11] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  v2[12] = swift_task_alloc();
  v3 = sub_1BE1B1DF0();
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE10D1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t i;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t ObjectType;
  void (*v45)(uint64_t, uint64_t);
  char v46;
  int *v48;
  _QWORD *v49;
  NSObject *loga;
  os_log_t log;
  os_log_type_t type;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t (*v58)(os_log_t, uint64_t);
  uint64_t v59;

  if (qword_1ED6EE518 != -1)
LABEL_34:
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = sub_1BE1B23C0();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED6F8A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  swift_retain();
  v6 = sub_1BE1B23A8();
  v7 = sub_1BE1B2DC8();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 88);
  if (v8)
  {
    v53 = *(_QWORD *)(v0 + 112);
    v13 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v59 = v55;
    *(_DWORD *)v13 = 136315394;
    loga = v6;
    type = v7;
    v14 = *(_QWORD *)(v12 + 120);
    v15 = *(_QWORD *)(v12 + 128);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_1BDDC1468(v14, v15, &v59);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v16 = sub_1BE1B32E4();
    *(_QWORD *)(v0 + 72) = sub_1BDDC1468(v16, v17, &v59);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v18(v9, v11);
    _os_log_impl(&dword_1BDD82000, loga, type, "%s accommodatePresentedItemDeletion %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v55, -1, -1);
    MEMORY[0x1C3B7E068](v13, -1, -1);

  }
  else
  {
    swift_release();
    v18 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v18(v9, v11);

  }
  *(_QWORD *)(v0 + 136) = v18;
  v19 = *(_QWORD *)(v0 + 88);
  swift_beginAccess();
  v20 = *(_QWORD *)(v19 + 112);
  *(_QWORD *)(v0 + 144) = v20;
  v21 = *(_BYTE *)(v20 + 32);
  *(_BYTE *)(v0 + 216) = v21;
  v22 = 1 << v21;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  else
    v23 = -1;
  v24 = v23 & *(_QWORD *)(v20 + 64);
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v56)
  {
    if (v24)
    {
      v27 = __clz(__rbit64(v24));
      v28 = (v24 - 1) & v24;
      v29 = v27 | (i << 6);
      v30 = *(_QWORD *)(v0 + 144);
    }
    else
    {
      v31 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      v32 = (unint64_t)((1 << *(_BYTE *)(v0 + 216)) + 63) >> 6;
      v30 = *(_QWORD *)(v0 + 144);
      if (v31 >= v32)
        goto LABEL_30;
      v33 = v30 + 64;
      v34 = *(_QWORD *)(v30 + 64 + 8 * v31);
      ++i;
      if (!v34)
      {
        i = v31 + 1;
        if (v31 + 1 >= v32)
          goto LABEL_30;
        v34 = *(_QWORD *)(v33 + 8 * i);
        if (!v34)
        {
          i = v31 + 2;
          if (v31 + 2 >= v32)
            goto LABEL_30;
          v34 = *(_QWORD *)(v33 + 8 * i);
          if (!v34)
          {
            v35 = v31 + 3;
            if (v35 >= v32)
            {
LABEL_30:
              swift_release();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              return (*(uint64_t (**)(void))(v0 + 8))();
            }
            v34 = *(_QWORD *)(v33 + 8 * v35);
            if (!v34)
            {
              while (1)
              {
                i = v35 + 1;
                if (__OFADD__(v35, 1))
                  goto LABEL_33;
                if (i >= v32)
                  goto LABEL_30;
                v34 = *(_QWORD *)(v33 + 8 * i);
                ++v35;
                if (v34)
                  goto LABEL_26;
              }
            }
            i = v35;
          }
        }
      }
LABEL_26:
      v28 = (v34 - 1) & v34;
      v29 = __clz(__rbit64(v34)) + (i << 6);
    }
    v54 = v28;
    v56 = i;
    *(_QWORD *)(v0 + 152) = i;
    *(_QWORD *)(v0 + 160) = v28;
    v36 = *(_QWORD *)(v0 + 112);
    v57 = *(_QWORD *)(v0 + 104);
    v37 = *(_QWORD *)(v0 + 96);
    v38 = 16 * v29;
    v39 = (uint64_t *)(*(_QWORD *)(v30 + 48) + v38);
    v40 = *v39;
    *(_QWORD *)(v0 + 168) = *v39;
    v41 = v39[1];
    *(_QWORD *)(v0 + 176) = v41;
    v42 = (_QWORD *)(*(_QWORD *)(v30 + 56) + v38);
    *(_QWORD *)(v0 + 184) = *v42;
    v43 = v42[1];
    ObjectType = swift_getObjectType();
    v45 = *(void (**)(uint64_t, uint64_t))(v43 + 48);
    sub_1BDDB6CA4(v40, v41);
    swift_unknownObjectRetain();
    log = (os_log_t)ObjectType;
    v45(ObjectType, v43);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v57) == 1)
    {
      v26 = *(_QWORD *)(v0 + 96);
      swift_unknownObjectRelease();
      sub_1BDDB796C(v40, v41);
      sub_1BDD86E30(v26, &qword_1ED6F3C70);
      goto LABEL_10;
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    sub_1BE1B1D48();
    sub_1BE1B1D48();
    v46 = sub_1BE1B287C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v46 & 1) != 0)
      break;
    (*(void (**)(_QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    sub_1BDDB796C(v40, v41);
    swift_unknownObjectRelease();
LABEL_10:
    v24 = v54;
  }
  v48 = *(int **)(v43 + 64);
  sub_1BDDB6CA4(v40, v41);
  v58 = (uint64_t (*)(os_log_t, uint64_t))((char *)v48 + *v48);
  v49 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v49;
  *v49 = v0;
  v49[1] = sub_1BE10D73C;
  return v58(log, v43);
}

uint64_t sub_1BE10D73C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE10D79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t ObjectType;
  uint64_t result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  int *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41 = *(_QWORD *)(v6 + 112);
  *(_QWORD *)(v6 + 112) = 0x8000000000000000;
  ObjectType = swift_getObjectType();
  sub_1BE112710(v2, v4, v3, isUniquelyReferenced_nonNull_native, &v41, ObjectType, v1);
  *(_QWORD *)(v6 + 112) = v41;
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v4, v3);
  swift_endAccess();
  swift_unknownObjectRelease();
  sub_1BDDB796C(v4, v3);
  result = v38(v36, v5);
  v11 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 160);
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v14 = (v10 - 1) & v10;
      v15 = v13 | (v11 << 6);
      result = *(_QWORD *)(v0 + 144);
      goto LABEL_20;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    v17 = (unint64_t)((1 << *(_BYTE *)(v0 + 216)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 144);
    if (v16 >= v17)
      goto LABEL_23;
    v18 = result + 64;
    v19 = *(_QWORD *)(result + 64 + 8 * v16);
    ++v11;
    if (!v19)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v17)
        goto LABEL_23;
      v19 = *(_QWORD *)(v18 + 8 * v11);
      if (!v19)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v17)
          goto LABEL_23;
        v19 = *(_QWORD *)(v18 + 8 * v11);
        if (!v19)
          break;
      }
    }
LABEL_19:
    v14 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_20:
    v35 = v14;
    v37 = v11;
    *(_QWORD *)(v0 + 152) = v11;
    *(_QWORD *)(v0 + 160) = v14;
    v21 = *(_QWORD *)(v0 + 112);
    v39 = *(_QWORD *)(v0 + 104);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = 16 * v15;
    v24 = (uint64_t *)(*(_QWORD *)(result + 48) + v23);
    v25 = *v24;
    *(_QWORD *)(v0 + 168) = *v24;
    v26 = v24[1];
    *(_QWORD *)(v0 + 176) = v26;
    v27 = (_QWORD *)(*(_QWORD *)(result + 56) + v23);
    *(_QWORD *)(v0 + 184) = *v27;
    v28 = v27[1];
    v29 = swift_getObjectType();
    v30 = *(void (**)(uint64_t, uint64_t))(v28 + 48);
    sub_1BDDB6CA4(v25, v26);
    swift_unknownObjectRetain();
    v30(v29, v28);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v22, 1, v39) == 1)
    {
      v12 = *(_QWORD *)(v0 + 96);
      swift_unknownObjectRelease();
      sub_1BDDB796C(v25, v26);
      result = sub_1BDD86E30(v12, &qword_1ED6F3C70);
    }
    else
    {
      v31 = v29;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
      sub_1BE1B1D48();
      sub_1BE1B1D48();
      v32 = sub_1BE1B287C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v32 & 1) != 0)
      {
        v33 = *(int **)(v28 + 64);
        sub_1BDDB6CA4(v25, v26);
        v40 = (uint64_t (*)(uint64_t, uint64_t))((char *)v33 + *v33);
        v34 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 192) = v34;
        *v34 = v0;
        v34[1] = sub_1BE10D73C;
        return v40(v31, v28);
      }
      (*(void (**)(_QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
      sub_1BDDB796C(v25, v26);
      result = swift_unknownObjectRelease();
    }
    v10 = v35;
    v11 = v37;
  }
  v20 = v16 + 3;
  if (v20 >= v17)
  {
LABEL_23:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v19 = *(_QWORD *)(v18 + 8 * v20);
  if (v19)
  {
    v11 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v17)
      goto LABEL_23;
    v19 = *(_QWORD *)(v18 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BE10DB50(uint64_t a1, uint64_t *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v7 + 168) = a6;
  *(_QWORD *)(v7 + 176) = v6;
  *(_QWORD *)(v7 + 152) = a4;
  *(_QWORD *)(v7 + 160) = a5;
  *(_BYTE *)(v7 + 320) = a3;
  *(_QWORD *)(v7 + 144) = a1;
  *(_QWORD *)(v7 + 184) = *(_QWORD *)(a6 - 8);
  *(_QWORD *)(v7 + 192) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  *(_QWORD *)(v7 + 200) = swift_task_alloc();
  v9 = sub_1BE1B1DF0();
  *(_QWORD *)(v7 + 208) = v9;
  *(_QWORD *)(v7 + 216) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 224) = swift_task_alloc();
  v10 = swift_task_alloc();
  v11 = *a2;
  *(_QWORD *)(v7 + 232) = v10;
  *(_QWORD *)(v7 + 240) = v11;
  return swift_task_switch();
}

uint64_t sub_1BE10DC1C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  if (qword_1ED6EE518 != -1)
    swift_once();
  v1 = sub_1BE1B23C0();
  *(_QWORD *)(v0 + 248) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED6F8A50);
  swift_retain_n();
  swift_retain();
  v2 = sub_1BE1B23A8();
  v3 = sub_1BE1B2DC8();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 176);
  if (v4)
  {
    v7 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v35 = v33;
    *(_DWORD *)v7 = 136315394;
    v9 = *(_QWORD *)(v6 + 120);
    v8 = *(_QWORD *)(v6 + 128);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 112) = sub_1BDDC1468(v9, v8, &v35);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 12) = 2080;
    v10 = *(_QWORD *)(v5 + 16);
    v11 = *(_QWORD *)(v5 + 24);
    sub_1BDDB6CA4(v10, v11);
    *(_QWORD *)(v0 + 96) = sub_1BE1B1E74();
    *(_QWORD *)(v0 + 104) = v12;
    *(_QWORD *)(v0 + 80) = 47;
    *(_QWORD *)(v0 + 88) = 0xE100000000000000;
    *(_QWORD *)(v0 + 64) = 95;
    *(_QWORD *)(v0 + 72) = 0xE100000000000000;
    sub_1BDDC8C50();
    v13 = sub_1BE1B2F30();
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v10, v11);
    *(_QWORD *)(v0 + 136) = sub_1BDDC1468(v13, v15, &v35);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BDD82000, v2, v3, "%s readAsset %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v33, -1, -1);
    MEMORY[0x1C3B7E068](v7, -1, -1);
  }
  else
  {
    swift_release();
    swift_release_n();
  }

  v16 = *(_QWORD *)(v0 + 240);
  v17 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 24);
  swift_beginAccess();
  v20 = *(_QWORD *)(v17 + 112);
  if (!*(_QWORD *)(v20 + 16))
    goto LABEL_12;
  sub_1BDDB6CA4(v19, v18);
  swift_bridgeObjectRetain();
  v21 = sub_1BDE5E12C(v19, v18);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v19, v18);
    goto LABEL_12;
  }
  v23 = *(_BYTE *)(v0 + 320);
  v24 = (_QWORD *)(*(_QWORD *)(v20 + 56) + 16 * v21);
  *(_QWORD *)(v0 + 256) = *v24;
  v25 = v24[1];
  *(_QWORD *)(v0 + 264) = v25;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v19, v18);
  if ((v23 & 1) == 0)
  {
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(ObjectType, v25) & 1) != 0)
    {
      swift_unknownObjectRelease();
LABEL_12:
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 56))(*(_QWORD *)(v0 + 144), 1, 1, *(_QWORD *)(v0 + 168));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v28 = *(_QWORD *)(v0 + 176);
  v29 = swift_getObjectType();
  v30 = *(_QWORD *)(v28 + 120);
  *(_QWORD *)(v0 + 272) = v30;
  v31 = *(_QWORD *)(v28 + 128);
  *(_QWORD *)(v0 + 280) = v31;
  v34 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v25 + 56) + *(_QWORD *)(v25 + 56));
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v32;
  *v32 = v0;
  v32[1] = sub_1BE10E07C;
  return v34(*(_QWORD *)(v0 + 200), v30, v31, v29, v25);
}

uint64_t sub_1BE10E07C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE10E0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD, _QWORD);
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_unknownObjectRelease();
    sub_1BDD86E30(v3, &qword_1ED6F3C70);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 56))(*(_QWORD *)(v0 + 144), 1, 1, *(_QWORD *)(v0 + 168));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v5, v1);
    swift_retain();
    v7 = sub_1BE1B23A8();
    v8 = sub_1BE1B2DC8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = *(_QWORD *)(v0 + 272);
      v10 = *(_QWORD *)(v0 + 280);
      v21 = *(_QWORD *)(v0 + 224);
      v22 = *(_QWORD *)(v0 + 216);
      v20 = *(_QWORD *)(v0 + 208);
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v24 = v12;
      *(_DWORD *)v11 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 128) = sub_1BDDC1468(v9, v10, &v24);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v11 + 12) = 2080;
      sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v13 = sub_1BE1B32E4();
      *(_QWORD *)(v0 + 120) = sub_1BDDC1468(v13, v14, &v24);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v15(v21, v20);
      _os_log_impl(&dword_1BDD82000, v7, v8, "%s reading url %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7E068](v12, -1, -1);
      MEMORY[0x1C3B7E068](v11, -1, -1);
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 216);
      v16 = *(_QWORD *)(v0 + 224);
      v18 = *(_QWORD *)(v0 + 208);
      swift_release();
      v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v15(v16, v18);
    }

    *(_QWORD *)(v0 + 296) = v15;
    v23 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 152) + *(_QWORD *)(v0 + 152));
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v19;
    *v19 = v0;
    v19[1] = sub_1BE10E3FC;
    return v23(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 232));
  }
}

uint64_t sub_1BE10E3FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE10E460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v10 = *(_QWORD *)(v0 + 184);
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  v5 = *(_QWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 56) = v2;
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  swift_retain();
  swift_unknownObjectRetain();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5302E0);
  sub_1BE10E650(v0 + 40, (uint64_t)sub_1BE112AD8, v6, v7, MEMORY[0x1E0DEDCE8], v5, MEMORY[0x1E0DEDD18], v8);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  v11(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 56))(*(_QWORD *)(v0 + 144), 0, 1, *(_QWORD *)(v0 + 168));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10E5D0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 208);
  swift_unknownObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10E650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(char *);
  uint64_t result;
  uint64_t v16;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v14(v13);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v13, a5);
  return result;
}

uint64_t CRAssetManager.encryptionDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BDD86DEC(v1 + 56, a1, qword_1ED6F3DD0);
}

uint64_t sub_1BE10E6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BE10E71C()
{
  uint64_t v0;

  sub_1BE10BB1C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BE10E750(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v3 = sub_1BE1B2570();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940];
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1BE1B2534();
  MEMORY[0x1E0C80A78](v5);
  sub_1BDD8422C(&qword_1EF52CFA0, v4, MEMORY[0x1E0CA9930]);
  sub_1BE1B2528();
  __asm { BR              X10 }
}

uint64_t sub_1BE10E858()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  *(_QWORD *)(v7 - 112) = v2;
  *(_WORD *)(v7 - 104) = v1;
  *(_BYTE *)(v7 - 102) = BYTE2(v1);
  *(_BYTE *)(v7 - 101) = BYTE3(v1);
  *(_BYTE *)(v7 - 100) = BYTE4(v1);
  *(_BYTE *)(v7 - 99) = BYTE5(v1);
  sub_1BE1B2510();
  sub_1BDDB796C(v2, v1);
  sub_1BE1B251C();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v6, v5);
  sub_1BDD8422C(&qword_1ED6EE730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA92F8], MEMORY[0x1E0CA92F0]);
  v8 = sub_1BE1B2540();
  v10 = sub_1BDFCFD98(v8, v9);
  swift_bridgeObjectRelease();
  v11 = sub_1BDDC4278(v10);
  v13 = v12;
  swift_release();
  sub_1BE10889C(v11, v13, v2, v1, *(_QWORD **)(v7 - 120));
  sub_1BDDB796C(v11, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 8))(v4, v3);
}

uint64_t sub_1BE10EABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BE10EAD8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, char, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_1EF5303A0 + dword_1EF5303A0);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_1BE116164;
  return v3(v0[3], v0[4], 0, v0[2], v0[5]);
}

void sub_1BE10EB4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  MEMORY[0x1E0C80A78](v2);
  v27[0] = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BE1B1DF0();
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BE1B2534();
  v30 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BE1B2570();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE1B2564();
  v12 = objc_allocWithZone(MEMORY[0x1E0C99DB0]);
  v28 = a1;
  v13 = (void *)sub_1BE1B1D90();
  v14 = objc_msgSend(v12, sel_initWithURL_, v13);

  if (v14)
  {
    objc_msgSend(v14, sel_open);
    v15 = swift_slowAlloc();
    if (objc_msgSend(v14, sel_hasBytesAvailable))
    {
      do
      {
        objc_msgSend(v14, sel_read_maxLength_, v15, 0x4000);
        sub_1BE1B254C();
      }
      while ((objc_msgSend(v14, sel_hasBytesAvailable) & 1) != 0);
    }
    MEMORY[0x1C3B7E068](v15, -1, -1);
    objc_msgSend(v14, sel_close);
    sub_1BE1B2558();
    sub_1BDD8422C(&qword_1ED6EE730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA92F8], MEMORY[0x1E0CA92F0]);
    v16 = sub_1BE1B2540();
    v18 = sub_1BDFCFD98(v16, v17);
    swift_bridgeObjectRelease();
    v27[1] = sub_1BDDC4278(v18);
    swift_release();
    v19 = v33;
    sub_1BDD86DEC(v33 + 56, (uint64_t)&v34, qword_1ED6F3DD0);
    if (v35)
    {
      sub_1BDD85B8C(&v34, (uint64_t)v36);
      v20 = v37;
      v21 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 24))(v28, v20, v21);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
      type metadata accessor for CRFileSnapshot();
      v22 = swift_allocObject();
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v22 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url, v6, v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    }
    else
    {
      sub_1BDD86E30((uint64_t)&v34, qword_1ED6F3DD0);
      v23 = v32;
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
      v24(v6, v28, v4);
      v25 = v19 + OBJC_IVAR____TtC9Coherence14CRAssetManager_temporaryDirectory;
      v26 = v27[0];
      v24((char *)v27[0], v25, v4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v26, 0, 1, v4);
      sub_1BE0C59D4((uint64_t)v6, 0, 0, 0, v26);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BE10EF38@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)(uint64_t);
  _QWORD *v32;
  uint64_t v33;
  void *aBlock;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  void *v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = 0;
  v41 = 0;
  v42 = 0;
  if ((a2 & 1) != 0)
  {
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_init);
    v13 = sub_1BE1B1D90();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = &v40;
    *(_QWORD *)(v14 + 24) = v4;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1BE115478;
    *(_QWORD *)(v15 + 24) = v14;
    v33 = v14;
    v38 = sub_1BDFC5BB8;
    v39 = v15;
    aBlock = (void *)MEMORY[0x1E0C809B0];
    v35 = 1107296256;
    v36 = sub_1BDE30BE4;
    v37 = &block_descriptor_97;
    v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v13, 0, 0, v16);

    _Block_release(v16);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v13 & 1) != 0)
    {
      __break(1u);
      goto LABEL_9;
    }
    v18 = v9;
    v19 = v42;
    v31 = sub_1BE115478;
  }
  else
  {
    v18 = v9;
    sub_1BE10EB4C(a1);
    v19 = v20;
    v40 = v21;
    v41 = v22;
    v42 = v20;
    result = sub_1BE1153A4(0, 0, 0);
    v31 = 0;
    v33 = 0;
  }
  v32 = a3;
  if (!v19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v23 = v8;
  v25 = v40;
  v24 = v41;
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v25;
  v26[3] = v24;
  v26[4] = v19;
  aBlock = &unk_1EF5303B0;
  v35 = (uint64_t)v26;
  swift_weakInit();
  swift_retain();
  sub_1BDDB6CA4(v25, v24);
  swift_retain();
  sub_1BDDB6CA4(v25, v24);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  sub_1BE1B2AEC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v23);
  swift_release();
  swift_release();
  result = sub_1BDDB796C(v25, v24);
  v27 = v42;
  if (v42)
  {
    v28 = v40;
    v29 = v41;
    type metadata accessor for CRAssetRef();
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = v28;
    v30[3] = v29;
    v30[4] = v4;
    *v32 = v30;
    swift_retain();
    sub_1BDDB6CA4(v28, v29);
    sub_1BE1153A4(v28, v29, v27);
    return sub_1BDE0D5B8((uint64_t)v31);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1BE10F28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BE10F2A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, char, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_1EF5303B8 + dword_1EF5303B8);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_1BE10F31C;
  return v3(v0[3], v0[4], 0, v0[2], v0[5]);
}

uint64_t sub_1BE10F31C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BE10F36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1BDE281A0;
  return sub_1BE10C378(a2, a3);
}

uint64_t sub_1BE10F3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;

  v4[2] = a3;
  v4[3] = a4;
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_1BE10F428;
  return sub_1BE10CA78(a2);
}

uint64_t sub_1BE10F428()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE10F47C()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 16);
  if (v1)
    v1(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE10F4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;

  v4[2] = a3;
  v4[3] = a4;
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_1BE10F510;
  return sub_1BE10D124(a2);
}

uint64_t sub_1BE10F510()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE10F564()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 16))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BE10F598(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  objc_class *v18;
  char *v19;
  char *v20;
  id v21;
  char *v22;
  id v23;
  id v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  id v28;
  uint64_t *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v47[2];
  os_log_t v48;
  uint64_t v49;
  id v50;
  int v51;
  char *v52;
  char *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  objc_super v59;
  uint64_t v60[3];
  uint64_t v61;
  uint64_t v62;

  v7 = sub_1BE1B1DF0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v52 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v47 - v11;
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_1BDD901B8(a2), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_endAccess();
    *a3 = v16;
    swift_retain();
  }
  else
  {
    v54 = (uint64_t *)(a1 + 16);
    v55 = a3;
    v56 = v3;
    swift_endAccess();
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v58 = a2;
    v17(v12, a2, v7);
    v18 = (objc_class *)type metadata accessor for CRAssetFilePresenter(0);
    v19 = (char *)objc_allocWithZone(v18);
    swift_weakInit();
    v20 = &v19[OBJC_IVAR____TtC9Coherence20CRAssetFilePresenter_presentedItemURL];
    v57 = v17;
    v17(&v19[OBJC_IVAR____TtC9Coherence20CRAssetFilePresenter_presentedItemURL], (uint64_t)v12, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v7);
    v21 = objc_allocWithZone(MEMORY[0x1E0CB3828]);
    swift_retain();
    v22 = v19;
    v23 = objc_msgSend(v21, sel_init);
    *(_QWORD *)&v22[OBJC_IVAR____TtC9Coherence20CRAssetFilePresenter_presentedItemOperationQueue] = v23;
    swift_weakAssign();

    v59.receiver = v22;
    v59.super_class = v18;
    v24 = objc_msgSendSuper2(&v59, sel_init);
    swift_release();
    v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    v53 = v12;
    v26 = v25;
    v25(v12, v7);
    type metadata accessor for CRAssetWatchedDirectory();
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v24;
    if ((*(_BYTE *)(a1 + 96) & 1) != 0)
    {
      v28 = v24;
      v29 = v55;
    }
    else
    {
      v30 = qword_1ED6EE518;
      v31 = v24;
      if (v30 != -1)
        swift_once();
      v32 = sub_1BE1B23C0();
      __swift_project_value_buffer(v32, (uint64_t)qword_1ED6F8A50);
      v33 = v52;
      v57(v52, v58, v7);
      swift_retain();
      v34 = sub_1BE1B23A8();
      v35 = sub_1BE1B2DC8();
      v51 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        v50 = v31;
        v37 = v36;
        v49 = swift_slowAlloc();
        v60[0] = v49;
        *(_DWORD *)v37 = 136315394;
        v47[0] = v37 + 4;
        v48 = v34;
        v39 = *(_QWORD *)(a1 + 104);
        v38 = *(_QWORD *)(a1 + 112);
        swift_bridgeObjectRetain();
        v61 = sub_1BDDC1468(v39, v38, v60);
        v47[1] = &v62;
        sub_1BE1B2F0C();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v37 + 12) = 2080;
        sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v40 = sub_1BE1B32E4();
        v61 = sub_1BDDC1468(v40, v41, v60);
        sub_1BE1B2F0C();
        swift_bridgeObjectRelease();
        v26(v33, v7);
        v34 = v48;
        _os_log_impl(&dword_1BDD82000, v48, (os_log_type_t)v51, "%s watchDirectory %s", (uint8_t *)v37, 0x16u);
        v42 = v49;
        swift_arrayDestroy();
        MEMORY[0x1C3B7E068](v42, -1, -1);
        v43 = v37;
        v31 = v50;
        MEMORY[0x1C3B7E068](v43, -1, -1);
      }
      else
      {
        swift_release();
        v26(v33, v7);
      }

      v29 = v55;
      objc_msgSend((id)objc_opt_self(), sel_addFilePresenter_, v31);
    }
    v44 = (uint64_t)v53;
    v57(v53, v58, v7);
    v45 = v54;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61 = *v45;
    *v45 = 0x8000000000000000;
    sub_1BE154EC4(v27, v44, isUniquelyReferenced_nonNull_native);
    *v45 = v61;
    swift_bridgeObjectRelease();
    v26((char *)v44, v7);
    swift_endAccess();

    *v29 = v27;
  }
}

uint64_t sub_1BE10FA80()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t result;
  _QWORD v5[6];

  v1 = *(NSObject **)(v0 + 32);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1BE112AC0;
  *(_QWORD *)(v2 + 24) = v0;
  v5[4] = sub_1BDD843E8;
  v5[5] = v2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1BDD843A8;
  v5[3] = &block_descriptor_33;
  v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1BE10FB88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t *v55;
  char isUniquelyReferenced_nonNull_native;
  id v57;
  void *v58;
  unint64_t v59;
  uint64_t *v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  __int128 v73;
  char *v74;
  uint64_t v75;
  uint64_t *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  id v86[11];

  v86[9] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1BE1B1DF0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v82 = (char *)&v67 - v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v67 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED6F2928);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v67 - v15;
  *(_BYTE *)(a1 + 96) = 1;
  v17 = sub_1BDDBF9AC(MEMORY[0x1E0DEE9D8]);
  v76 = (uint64_t *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(a1 + 48) = v17;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(v18 + 64);
  v69 = v18 + 64;
  v20 = 1 << *(_BYTE *)(v18 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v71 = (unint64_t)(v20 + 63) >> 6;
  v68 = v71 - 1;
  v75 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v70 = 0;
  *(_QWORD *)&v24 = 136315394;
  v73 = v24;
  v72 = MEMORY[0x1E0DEE9B8] + 8;
  v74 = v6;
  v78 = v14;
  v79 = v3;
  v83 = v10;
  v77 = v16;
  while (1)
  {
    if (v22)
    {
      v80 = (v22 - 1) & v22;
      v81 = v23;
      v25 = __clz(__rbit64(v22)) | (v23 << 6);
LABEL_8:
      v26 = v75;
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v14, *(_QWORD *)(v75 + 48) + *(_QWORD *)(v3 + 72) * v25, v2);
      v27 = *(_QWORD *)(v26 + 56);
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DB0);
      *(_QWORD *)&v14[*(int *)(v28 + 48)] = *(_QWORD *)(v27 + 8 * v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 0, 1, v28);
      swift_retain();
      goto LABEL_21;
    }
    v29 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_46:
      __break(1u);
    }
    if (v29 >= v71)
      goto LABEL_19;
    v30 = *(_QWORD *)(v69 + 8 * v29);
    if (v30)
      goto LABEL_12;
    v23 += 2;
    if (v29 + 1 >= v71)
      goto LABEL_43;
    v30 = *(_QWORD *)(v69 + 8 * v23);
    if (v30)
      goto LABEL_15;
    if (v29 + 2 >= v71)
    {
LABEL_19:
      v81 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v69 + 8 * (v29 + 2));
      if (v30)
      {
        v29 += 2;
        goto LABEL_12;
      }
      v23 = v29 + 3;
      if (v29 + 3 < v71)
      {
        v30 = *(_QWORD *)(v69 + 8 * v23);
        if (v30)
        {
LABEL_15:
          v29 = v23;
LABEL_12:
          v80 = (v30 - 1) & v30;
          v81 = v29;
          v25 = __clz(__rbit64(v30)) + (v29 << 6);
          goto LABEL_8;
        }
        while (1)
        {
          v29 = v23 + 1;
          if (__OFADD__(v23, 1))
            goto LABEL_46;
          if (v29 >= v71)
            break;
          v30 = *(_QWORD *)(v69 + 8 * v29);
          ++v23;
          if (v30)
            goto LABEL_12;
        }
        v29 = v68;
LABEL_43:
        v81 = v29;
        goto LABEL_20;
      }
      v81 = v29 + 2;
    }
LABEL_20:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 1, 1, v31);
    v80 = 0;
LABEL_21:
    sub_1BDDA2EF0((uint64_t)v14, (uint64_t)v16, qword_1ED6F2928);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v16, 1, v32) == 1)
      return swift_release();
    v84 = *(_QWORD *)&v16[*(int *)(v32 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v16, v2);
    if (qword_1ED6EE518 != -1)
      swift_once();
    v33 = sub_1BE1B23C0();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED6F8A50);
    v34 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v34(v82, v10, v2);
    swift_retain();
    v35 = sub_1BE1B23A8();
    v36 = sub_1BE1B2DC8();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = a1;
      v38 = swift_slowAlloc();
      v39 = (void *)swift_slowAlloc();
      v40 = v2;
      v41 = v82;
      v42 = v39;
      v86[0] = v39;
      *(_DWORD *)v38 = v73;
      v43 = *(_QWORD *)(v37 + 104);
      v44 = *(_QWORD *)(v37 + 112);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v38 + 4) = sub_1BDDC1468(v43, v44, (uint64_t *)v86);
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v38 + 12) = 2080;
      sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v45 = sub_1BE1B32E4();
      *(_QWORD *)(v38 + 14) = sub_1BDDC1468(v45, v46, (uint64_t *)v86);
      swift_bridgeObjectRelease();
      v47 = *(void (**)(char *, uint64_t))(v79 + 8);
      v47(v41, v40);
      _os_log_impl(&dword_1BDD82000, v35, v36, "%s unwatchDirectory(enterBackground) %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      v2 = v40;
      MEMORY[0x1C3B7E068](v42, -1, -1);
      v48 = v38;
      a1 = v37;
      v3 = v79;
      v6 = v74;
      MEMORY[0x1C3B7E068](v48, -1, -1);
    }
    else
    {
      swift_release();
      v47 = *(void (**)(char *, uint64_t))(v3 + 8);
      v47(v82, v2);
    }

    objc_msgSend((id)objc_opt_self(), sel_removeFilePresenter_, *(_QWORD *)(v84 + 16));
    v34(v6, v83, v2);
    v49 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1BE1B1DE4();
    v50 = (void *)sub_1BE1B27A4();
    swift_bridgeObjectRelease();
    v86[0] = 0;
    v51 = objc_msgSend(v49, sel_contentsOfDirectoryAtPath_error_, v50, v86);

    v52 = v86[0];
    if (v51)
    {
      v53 = sub_1BE1B2978();
      v54 = v52;

      v55 = v76;
      swift_beginAccess();
      v14 = v78;
      if (v53)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v85 = *v55;
        *v55 = 0x8000000000000000;
        sub_1BE154ED8(v53, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
        *v55 = v85;
        swift_bridgeObjectRelease();
        v47(v6, v2);
        v10 = v83;
        goto LABEL_5;
      }
    }
    else
    {
      v57 = v86[0];
      v58 = (void *)sub_1BE1B1D3C();

      swift_willThrow();
      v55 = v76;
      swift_beginAccess();
      v70 = 0;
      v14 = v78;
    }
    swift_bridgeObjectRetain();
    v59 = sub_1BDD901B8((uint64_t)v6);
    v60 = v55;
    v62 = v61;
    swift_bridgeObjectRelease();
    if ((v62 & 1) != 0)
    {
      v63 = swift_isUniquelyReferenced_nonNull_native();
      v64 = *v60;
      v85 = *v60;
      *v60 = 0x8000000000000000;
      if ((v63 & 1) == 0)
      {
        sub_1BDE66EF8();
        v64 = v85;
      }
      v47((char *)(*(_QWORD *)(v64 + 48) + *(_QWORD *)(v3 + 72) * v59), v2);
      v65 = v85;
      sub_1BDEF206C(v59, v85);
      *v60 = v65;
      swift_bridgeObjectRelease();
    }
    v47(v6, v2);
    swift_bridgeObjectRelease();
    v10 = v83;
LABEL_5:
    v22 = v80;
    swift_endAccess();
    swift_release();
    v47(v10, v2);
    v16 = v77;
    v23 = v81;
  }
}

uint64_t sub_1BE110428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BE110448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_1BE1104D4;
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 144) = v1;
  *(_QWORD *)(v2 + 152) = v3;
  *(_QWORD *)(v2 + 136) = sub_1BE1142FC;
  *(_BYTE *)(v2 + 184) = 0;
  *(_OWORD *)(v2 + 120) = v4;
  return swift_task_switch();
}

uint64_t sub_1BE1104D4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BE110524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1BE1B1DF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  type metadata accessor for CRAssetProviderUrl(0);
  v8 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  *(_BYTE *)(v8 + 112) = 0;
  *(_QWORD *)(v8 + 120) = 0;
  *(_BYTE *)(v8 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_isTemporary) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_fileUrl, v7, v4);
  *(_QWORD *)(v8 + 120) = a2;
  swift_release();
  *(_QWORD *)(v8 + OBJC_IVAR____TtC9Coherence18CRAssetProviderUrl_retainCount) = 1;
  return v8;
}

uint64_t sub_1BE110624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BE110640()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, char, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_1EF530358 + dword_1EF530358);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_1BE116164;
  return v3(v0[3], v0[4], 0, v0[2], v0[5]);
}

uint64_t sub_1BE1106B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch();
}

void (*sub_1BE1106D4())(uint64_t, _QWORD)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*result)(uint64_t, _QWORD);
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 96) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_6;
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1BDDB6CA4(v4, v3);
  swift_bridgeObjectRetain();
  v5 = sub_1BDE5E12C(v4, v3);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v7, v6);
LABEL_6:
    v14 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 112);
    type metadata accessor for CRLazyAssetProvider(0);
    v15 = swift_allocObject();
    swift_defaultActor_initialize();
    *(_QWORD *)(v15 + 112) = sub_1BE126CD0(MEMORY[0x1E0DEE9D8]);
    *(_BYTE *)(v15 + 120) = 1;
    v16 = v15 + OBJC_IVAR____TtC9Coherence19CRLazyAssetProvider_url;
    v17 = sub_1BE1B1DF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    *(_BYTE *)(v15 + OBJC_IVAR____TtC9Coherence19CRLazyAssetProvider_isTemporary) = 1;
    *(_QWORD *)(v15 + 128) = 1;
    swift_beginAccess();
    *(_QWORD *)(v15 + 128) = 1;
    swift_beginAccess();
    sub_1BDDB6CA4(v14, v13);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *(_QWORD *)v1;
    *(_QWORD *)v1 = 0x8000000000000000;
    sub_1BE1125CC(v15, v14, v13, isUniquelyReferenced_nonNull_native, &v19, (uint64_t)&off_1E7758B38);
    *(_QWORD *)v1 = v19;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v14, v13);
    swift_endAccess();
    swift_release();
    return (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v5 + 8);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v7, v6);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
  result = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v0 + 16, ObjectType, v9);
  if (!__OFADD__(*v12, 1))
  {
    ++*v12;
    result(v0 + 16, 0);
    swift_unknownObjectRelease();
    return (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE110934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v7[23] = v8;
  v7[24] = *(_QWORD *)(v8 - 8);
  v7[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE11099C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, char, uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(Strong + 24);
    swift_retain();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    swift_beginAccess();
    v3 = swift_weakLoadStrong();
    if (v3)
    {
      v4 = *(_QWORD *)(v3 + 24);
      *(_QWORD *)(v0 + 216) = v4;
      swift_retain();
      swift_release();
      v6 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF5303F0 + dword_1EF5303F0);
      swift_retain();
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v5;
      *v5 = v0;
      v5[1] = sub_1BE110CFC;
      return v6(*(_QWORD *)(v0 + 160), 1, v4, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
    }
    else
    {
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_1BE110AE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v0[2] = v0;
  v0[3] = sub_1BE110BBC;
  v4 = swift_continuation_init();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  v0[13] = &unk_1EF5303E8;
  v0[14] = v5;
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  sub_1BE1B2AEC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_1BE110BBC()
{
  return swift_task_switch();
}

uint64_t sub_1BE110C08()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, char, uint64_t, uint64_t, uint64_t);

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = *(_QWORD *)(Strong + 24);
    *(_QWORD *)(v0 + 216) = v2;
    swift_retain();
    swift_release();
    v5 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF5303F0 + dword_1EF5303F0);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v3;
    *v3 = v0;
    v3[1] = sub_1BE110CFC;
    return v5(*(_QWORD *)(v0 + 160), 1, v2, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BE110CFC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BE110D64()
{
  return sub_1BE1B2B34();
}

uint64_t sub_1BE110D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[23] = a8;
  v8[24] = v11;
  v8[21] = a6;
  v8[22] = a7;
  v8[19] = a4;
  v8[20] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v8[25] = v9;
  v8[26] = *(_QWORD *)(v9 - 8);
  v8[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE110DF4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, char, uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(v0 + 224) = *(_QWORD *)(Strong + 24);
    swift_retain();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    swift_beginAccess();
    v3 = swift_weakLoadStrong();
    if (v3)
    {
      v4 = *(uint64_t (**)(uint64_t))(v0 + 168);
      v5 = *(_QWORD *)(v3 + 24);
      *(_QWORD *)(v0 + 232) = v5;
      swift_retain();
      v6 = swift_release();
      v7 = v4(v6);
      v9 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF530390 + dword_1EF530390);
      swift_retain();
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 240) = v8;
      *v8 = v0;
      v8[1] = sub_1BE111188;
      return v9(*(_QWORD *)(v0 + 160), v7 & 1, v5, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
    }
    else
    {
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_1BE110F5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[27];
  v2 = v0[25];
  v3 = v0[26];
  v0[2] = v0;
  v0[3] = sub_1BE111030;
  v4 = swift_continuation_init();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  v0[13] = &unk_1EF52F150;
  v0[14] = v5;
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  sub_1BE1B2AEC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_1BE111030()
{
  return swift_task_switch();
}

uint64_t sub_1BE11107C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, char, uint64_t, uint64_t, uint64_t);

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = *(uint64_t (**)(uint64_t))(v0 + 168);
    v3 = *(_QWORD *)(Strong + 24);
    *(_QWORD *)(v0 + 232) = v3;
    swift_retain();
    v4 = swift_release();
    v5 = v2(v4);
    v8 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF530390 + dword_1EF530390);
    swift_retain();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v6;
    *v6 = v0;
    v6[1] = sub_1BE111188;
    return v8(*(_QWORD *)(v0 + 160), v5 & 1, v3, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BE111188()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BE1111F0(uint64_t a1, uint64_t *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v7 + 136) = a6;
  *(_QWORD *)(v7 + 144) = v6;
  *(_QWORD *)(v7 + 120) = a4;
  *(_QWORD *)(v7 + 128) = a5;
  *(_BYTE *)(v7 + 208) = a3;
  *(_QWORD *)(v7 + 112) = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  *(_QWORD *)(v7 + 152) = v9;
  *(_QWORD *)(v7 + 160) = *(_QWORD *)(v9 - 8);
  v10 = swift_task_alloc();
  v11 = *a2;
  *(_QWORD *)(v7 + 168) = v10;
  *(_QWORD *)(v7 + 176) = v11;
  return swift_task_switch();
}

uint64_t sub_1BE111268()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 24);
  return swift_task_switch();
}

uint64_t sub_1BE111288()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[19];
  v0[2] = v0;
  v0[3] = sub_1BE111360;
  v4 = swift_continuation_init();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  v0[10] = &unk_1EF5303D8;
  v0[11] = v5;
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  sub_1BE1B2AEC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_continuation_await();
}

uint64_t sub_1BE111360()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = *v0;
  *(_QWORD *)(v1 + 104) = *(_QWORD *)(*v0 + 176);
  v1 += 104;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 88) = v3;
  *v3 = v2;
  v3[1] = sub_1BE1113D8;
  return sub_1BE10DB50(*(_QWORD *)(v1 + 8), (uint64_t *)v1, *(_BYTE *)(v1 + 104), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BE1113D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BE11144C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CRAssetManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDD86E30(v0 + 56, qword_1ED6F3DD0);
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9Coherence14CRAssetManager_temporaryDirectory;
  v2 = sub_1BE1B1DF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t CRAssetManager.__deallocating_deinit()
{
  CRAssetManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BE111528(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_1BE111580()
{
  return type metadata accessor for CRLazyAssetProvider(0);
}

uint64_t type metadata accessor for CRLazyAssetProvider(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF5301E0);
}

void sub_1BE11159C()
{
  unint64_t v0;

  sub_1BE111638();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1BE111638()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF52B360)
  {
    sub_1BE1B1DF0();
    v0 = sub_1BE1B2EE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF52B360);
  }
}

uint64_t sub_1BE11168C()
{
  return type metadata accessor for CRAssetProviderUrl(0);
}

uint64_t type metadata accessor for CRAssetProviderUrl(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B550);
}

uint64_t sub_1BE1116A8()
{
  return sub_1BE1116E0();
}

uint64_t sub_1BE1116B4()
{
  return type metadata accessor for CRAssetProviderUniqueFile(0);
}

uint64_t type metadata accessor for CRAssetProviderUniqueFile(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF525710);
}

uint64_t sub_1BE1116D0()
{
  return sub_1BE1116E0();
}

uint64_t sub_1BE1116E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BE1B1DF0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BE111774()
{
  return type metadata accessor for CRAssetFilePresenter(0);
}

uint64_t type metadata accessor for CRAssetFilePresenter(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B578);
}

void sub_1BE111790()
{
  unint64_t v0;

  sub_1BE111638();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BE111814()
{
  return type metadata accessor for AssetActor(0);
}

uint64_t sub_1BE11181C()
{
  return type metadata accessor for CRAssetManager(0);
}

uint64_t method lookup function for CRAssetManager()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for AssetActor.Item()
{
  swift_release();
  return swift_weakDestroy();
}

_QWORD *initializeWithCopy for AssetActor.Item(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_weakCopyInit();
  return a1;
}

_QWORD *assignWithCopy for AssetActor.Item(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  swift_weakCopyAssign();
  return a1;
}

_OWORD *initializeWithTake for AssetActor.Item(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_weakTakeInit();
  return a1;
}

_OWORD *assignWithTake for AssetActor.Item(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_weakTakeAssign();
  return a1;
}

uint64_t sub_1BE11195C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BE111964(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_1BE111978()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BE11199C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BE1B1C70();
  if (!result || (result = sub_1BE1B1C94(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1BE1B1C88();
      sub_1BE1B2570();
      sub_1BDD8422C(&qword_1EF52CFA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
      return sub_1BE1B2510();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE111A60(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5302D0);
  result = sub_1BE1B3044();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1BE1B36F8();
    swift_bridgeObjectRetain();
    sub_1BE1B2834();
    result = sub_1BE1B371C();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BE111CF4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BDE75720(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BE111E88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1BDE27FD0();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1BE1B36F8();
      swift_bridgeObjectRetain();
      sub_1BE1B2834();
      v19 = sub_1BE1B371C();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1BE1B34AC() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1BE1B34AC() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1BE1122F0((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1BDE27FD0();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1BE1122F0((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1BDE27FD0();
      MEMORY[0x1C3B7E068](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1BE1122F0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_1BE111A60(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1BE1B36F8();
        swift_bridgeObjectRetain();
        sub_1BE1B2834();
        v22 = sub_1BE1B371C();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_1BE1B34AC() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1BE1B34AC() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
LABEL_29:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1BE1125CC(uint64_t a1, uint64_t a2, unint64_t a3, char a4, _QWORD *a5, uint64_t a6)
{
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  uint64_t v23;
  char v24;

  v12 = (_QWORD *)*a5;
  v14 = sub_1BDE5E12C(a2, a3);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      v20 = (_QWORD *)*a5;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        result = swift_unknownObjectRelease();
        *v21 = a1;
        v21[1] = a6;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1BDE66AF0();
      goto LABEL_7;
    }
    sub_1BDE63274(v17, a4 & 1);
    v23 = sub_1BDE5E12C(a2, a3);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = (_QWORD *)*a5;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BE112888(v14, a2, a3, a1, v20, a6);
      return sub_1BDDB6CA4(a2, a3);
    }
  }
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE112710(uint64_t a1, uint64_t a2, unint64_t a3, char a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t result;
  uint64_t v24;
  char v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v13 = (_QWORD *)*a5;
  v15 = sub_1BDE5E12C(a2, a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1BDE66AF0();
LABEL_7:
    v21 = (_QWORD *)*a5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (_QWORD *)(v21[7] + 16 * v15);
      result = swift_unknownObjectRelease();
      *v22 = a1;
      v22[1] = a7;
      return result;
    }
LABEL_11:
    v21[(v15 >> 6) + 8] |= 1 << v15;
    v26 = (uint64_t *)(v21[6] + 16 * v15);
    *v26 = a2;
    v26[1] = a3;
    v27 = (_QWORD *)(v21[7] + 16 * v15);
    *v27 = a1;
    v27[1] = a7;
    v28 = v21[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v21[2] = v30;
      return sub_1BDDB6CA4(a2, a3);
    }
    goto LABEL_14;
  }
  sub_1BDE63274(v18, a4 & 1);
  v24 = sub_1BDE5E12C(a2, a3);
  if ((v19 & 1) == (v25 & 1))
  {
    v15 = v24;
    v21 = (_QWORD *)*a5;
    if ((v19 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

unint64_t sub_1BE112888(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a5[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a5[7] + 16 * result);
  *v7 = a4;
  v7[1] = a6;
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BE1128DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_1BE1B1DF0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  v6 = *v5;
  v7 = v5[1];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_1BDE281A0;
  v8[2] = v6;
  v8[3] = v7;
  v9 = (_QWORD *)swift_task_alloc();
  v8[4] = v9;
  *v9 = v8;
  v9[1] = sub_1BE10F428;
  return sub_1BE10CA78(v4);
}

uint64_t sub_1BE112998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(sub_1BE1B1DF0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1BDE281A0;
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_1BDE281A0;
  return sub_1BE10C378(v4, v5);
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BE1B1DF0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BE112AC0()
{
  uint64_t v0;

  return sub_1BE10FB88(v0);
}

uint64_t sub_1BE112AC8()
{
  return swift_deallocObject();
}

uint64_t sub_1BE112AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 16))(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BE112B0C(uint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v20 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BE1B1DF0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  if (swift_weakLoadStrong())
  {
    v19 = v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    v12 = *(unsigned __int8 *)(v9 + 80);
    v18 = v5;
    v13 = (v12 + 16) & ~v12;
    v14 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    v15 = (_QWORD *)(v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v15 = sub_1BE11616C;
    v15[1] = v11;
    v21 = &unk_1EF530300;
    v22 = v14;
    swift_weakInit();
    _Block_copy(a3);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
    v16 = v20;
    sub_1BE1B2AEC();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    swift_release();
    swift_release();
  }
  else
  {
    _Block_copy(a3);
    a3[2](a3, 0);
  }
  return swift_release();
}

uint64_t sub_1BE112D3C(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t Strong;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(unint64_t, char *, uint64_t);
  uint64_t v22;
  void (**v23)(uint64_t);
  char *v24;
  _QWORD v26[2];
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C20);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BE1B1DF0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v26 - v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  sub_1BDD86DEC(a1 + OBJC_IVAR____TtC9Coherence20CRAssetFilePresenter_presentedItemURL, (uint64_t)v8, &qword_1ED6F3C70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    _Block_copy(a2);
    sub_1BDD86E30((uint64_t)v8, &qword_1ED6F3C70);
LABEL_6:
    a2[2](a2, 0);
    return swift_release();
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v17(v15, v8, v9);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    _Block_copy(a2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    goto LABEL_6;
  }
  v26[1] = *(_QWORD *)(Strong + 24);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v19 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = swift_allocObject();
  v21 = (void (*)(unint64_t, char *, uint64_t))v17;
  v22 = v20;
  v21(v20 + v19, v13, v9);
  v23 = (void (**)(uint64_t))(v22 + ((v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v23 = sub_1BE113040;
  v23[1] = (void (*)(uint64_t))v16;
  v30 = &unk_1EF5302F8;
  v31 = v22;
  swift_weakInit();
  _Block_copy(a2);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C38);
  v24 = v27;
  sub_1BE1B2AEC();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v29);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return swift_release();
}

uint64_t sub_1BE11301C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BE113040(uint64_t a1)
{
  uint64_t v1;

  sub_1BE10B5C0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BE113048()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BE1B1DF0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BE1130C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(sub_1BE1B1DF0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v0 + v4);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_1BDE281A0;
  *(_OWORD *)(v6 + 16) = v7;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v8;
  *v8 = v6;
  v8[1] = sub_1BE10F510;
  return sub_1BE10D124(v5);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BE1B1DF0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BE1131F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BDE28004;
  return sub_1BE109B0C(a1, v4, v5, v7, v6);
}

uint64_t sub_1BE113268()
{
  uint64_t v0;

  return sub_1BE109F64(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BE113270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BE1B1F58();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BE1132EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BE1B1F58() - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BDE281A0;
  v5[2] = v3;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1BE11336C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1BDE281A0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1BE1133EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 184) = a4;
  *(_QWORD *)(v5 + 192) = a5;
  *(_BYTE *)(v5 + 224) = a3;
  *(_QWORD *)(v5 + 168) = a1;
  *(_QWORD *)(v5 + 176) = a2;
  return swift_task_switch();
}

char *sub_1BE11340C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *result;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 184) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_8;
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  sub_1BDDB6CA4(v4, v3);
  swift_bridgeObjectRetain();
  v5 = sub_1BDE5E12C(v4, v3);
  if ((v6 & 1) == 0)
  {
    v26 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v26, v25);
LABEL_8:
    v27 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 176);
    type metadata accessor for CRAssetProviderUniqueFile(0);
    v30 = swift_allocObject();
    swift_retain();
    swift_defaultActor_initialize();
    *(_BYTE *)(v30 + 112) = 0;
    *(_BYTE *)(v30 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_isTemporary) = 0;
    v31 = v27 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url;
    v32 = v30 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl;
    v33 = sub_1BE1B1DF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v32, v31, v33);
    *(_QWORD *)(v30 + 120) = v27;
    v34 = (_QWORD *)(v30 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount);
    *(_QWORD *)(v30 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount) = 1;
    swift_beginAccess();
    *v34 = 1;
    swift_beginAccess();
    sub_1BDDB6CA4(v29, v28);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *(_QWORD *)v1;
    *(_QWORD *)v1 = 0x8000000000000000;
    sub_1BE1125CC(v30, v29, v28, isUniquelyReferenced_nonNull_native, &v38, (uint64_t)&off_1E7759A40);
    *(_QWORD *)v1 = v38;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v29, v28);
    swift_endAccess();
    swift_release();
    return (char *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_BYTE *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 176);
  v10 = (_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v5);
  *(_QWORD *)(v0 + 200) = *v10;
  v11 = v10[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v9, v8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11) & 1) != 0 && (v7 & 1) == 0)
  {
    v13 = *(_QWORD *)(v0 + 192);
    type metadata accessor for CRAssetProviderUniqueFile(0);
    v14 = swift_allocObject();
    *(_QWORD *)(v0 + 208) = v14;
    swift_retain();
    swift_defaultActor_initialize();
    *(_BYTE *)(v14 + 112) = 0;
    *(_BYTE *)(v14 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_isTemporary) = 0;
    v15 = v13 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url;
    v16 = v14 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl;
    v17 = sub_1BE1B1DF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v15, v17);
    *(_QWORD *)(v14 + 120) = v13;
    v18 = (_QWORD *)(v14 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount);
    *(_QWORD *)(v14 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount) = 1;
    result = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
    v20 = result + 1;
    if (!__OFADD__(result, 1))
    {
      v22 = *(_QWORD *)(v0 + 168);
      v21 = *(_QWORD *)(v0 + 176);
      swift_beginAccess();
      *v18 = v20;
      swift_beginAccess();
      sub_1BDDB6CA4(v22, v21);
      swift_retain();
      v23 = swift_isUniquelyReferenced_nonNull_native();
      v38 = *(_QWORD *)v1;
      *(_QWORD *)v1 = 0x8000000000000000;
      sub_1BE1125CC(v14, v22, v21, v23, &v38, (uint64_t)&off_1E7759A40);
      *(_QWORD *)v1 = v38;
      swift_bridgeObjectRelease();
      sub_1BDDB796C(v22, v21);
      swift_endAccess();
      v37 = (uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v11 + 72) + *(_QWORD *)(v11 + 72));
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v24;
      *v24 = v0;
      v24[1] = sub_1BE113858;
      return (char *)v37(v14, &off_1E7759A40, ObjectType, v11);
    }
    __break(1u);
    goto LABEL_13;
  }
  result = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v0 + 16, ObjectType, v11);
  if (!__OFADD__(*v36, 1))
  {
    ++*v36;
    ((void (*)(uint64_t, _QWORD))result)(v0 + 16, 0);
    swift_unknownObjectRelease();
    return (char *)(*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BE113858()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE1138B0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE1138E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 184) = a4;
  *(_QWORD *)(v5 + 192) = a5;
  *(_BYTE *)(v5 + 224) = a3;
  *(_QWORD *)(v5 + 168) = a1;
  *(_QWORD *)(v5 + 176) = a2;
  return swift_task_switch();
}

char *sub_1BE113908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *result;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 184) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_8;
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  sub_1BDDB6CA4(v4, v3);
  swift_bridgeObjectRetain();
  v5 = sub_1BDE5E12C(v4, v3);
  if ((v6 & 1) == 0)
  {
    v26 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v26, v25);
LABEL_8:
    v27 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 176);
    type metadata accessor for CRAssetProviderUniqueFile(0);
    v30 = swift_allocObject();
    swift_retain();
    swift_defaultActor_initialize();
    *(_BYTE *)(v30 + 112) = 0;
    *(_BYTE *)(v30 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_isTemporary) = 0;
    v31 = v27 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url;
    v32 = v30 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl;
    v33 = sub_1BE1B1DF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v32, v31, v33);
    *(_QWORD *)(v30 + 120) = v27;
    v34 = (_QWORD *)(v30 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount);
    *(_QWORD *)(v30 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount) = 1;
    swift_beginAccess();
    *v34 = 1;
    swift_beginAccess();
    sub_1BDDB6CA4(v29, v28);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *(_QWORD *)v1;
    *(_QWORD *)v1 = 0x8000000000000000;
    sub_1BE1125CC(v30, v29, v28, isUniquelyReferenced_nonNull_native, &v38, (uint64_t)&off_1E7759A40);
    *(_QWORD *)v1 = v38;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v29, v28);
    swift_endAccess();
    swift_release();
    return (char *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_BYTE *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 176);
  v10 = (_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v5);
  *(_QWORD *)(v0 + 200) = *v10;
  v11 = v10[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v9, v8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11) & 1) != 0 && (v7 & 1) == 0)
  {
    v13 = *(_QWORD *)(v0 + 192);
    type metadata accessor for CRAssetProviderUniqueFile(0);
    v14 = swift_allocObject();
    *(_QWORD *)(v0 + 208) = v14;
    swift_retain();
    swift_defaultActor_initialize();
    *(_BYTE *)(v14 + 112) = 0;
    *(_BYTE *)(v14 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_isTemporary) = 0;
    v15 = v13 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url;
    v16 = v14 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_fileUrl;
    v17 = sub_1BE1B1DF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v15, v17);
    *(_QWORD *)(v14 + 120) = v13;
    v18 = (_QWORD *)(v14 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount);
    *(_QWORD *)(v14 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount) = 1;
    result = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
    v20 = result + 1;
    if (!__OFADD__(result, 1))
    {
      v22 = *(_QWORD *)(v0 + 168);
      v21 = *(_QWORD *)(v0 + 176);
      swift_beginAccess();
      *v18 = v20;
      swift_beginAccess();
      sub_1BDDB6CA4(v22, v21);
      swift_retain();
      v23 = swift_isUniquelyReferenced_nonNull_native();
      v38 = *(_QWORD *)v1;
      *(_QWORD *)v1 = 0x8000000000000000;
      sub_1BE1125CC(v14, v22, v21, v23, &v38, (uint64_t)&off_1E7759A40);
      *(_QWORD *)v1 = v38;
      swift_bridgeObjectRelease();
      sub_1BDDB796C(v22, v21);
      swift_endAccess();
      v37 = (uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v11 + 72) + *(_QWORD *)(v11 + 72));
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v24;
      *v24 = v0;
      v24[1] = sub_1BE113D54;
      return (char *)v37(v14, &off_1E7759A40, ObjectType, v11);
    }
    __break(1u);
    goto LABEL_13;
  }
  result = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v0 + 16, ObjectType, v11);
  if (!__OFADD__(*v36, 1))
  {
    ++*v36;
    ((void (*)(uint64_t, _QWORD))result)(v0 + 16, 0);
    swift_unknownObjectRelease();
    return (char *)(*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BE113D54()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE113DAC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 184) = a4;
  *(_QWORD *)(v5 + 192) = a5;
  *(_BYTE *)(v5 + 216) = a3;
  *(_QWORD *)(v5 + 168) = a1;
  *(_QWORD *)(v5 + 176) = a2;
  return swift_task_switch();
}

char *sub_1BE113DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(uint64_t, uint64_t);
  char *result;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v29;
  uint64_t (*v30)(_QWORD, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 184) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_8;
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  sub_1BDDB6CA4(v4, v3);
  swift_bridgeObjectRetain();
  v5 = sub_1BDE5E12C(v4, v3);
  if ((v6 & 1) == 0)
  {
    v23 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v23, v22);
LABEL_8:
    v24 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 176);
    v27 = (_QWORD *)(v24 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount);
    swift_beginAccess();
    *v27 = 1;
    swift_beginAccess();
    swift_retain();
    sub_1BDDB6CA4(v26, v25);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *(_QWORD *)v1;
    *(_QWORD *)v1 = 0x8000000000000000;
    sub_1BE1125CC(v24, v26, v25, isUniquelyReferenced_nonNull_native, &v31, (uint64_t)&off_1E7759A40);
    *(_QWORD *)v1 = v31;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v26, v25);
    swift_endAccess();
    swift_release();
    return (char *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_BYTE *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 176);
  v10 = (_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v5);
  *(_QWORD *)(v0 + 200) = *v10;
  v11 = v10[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v9, v8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11) & 1) != 0 && (v7 & 1) == 0)
  {
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    swift_retain();
    result = (char *)v13(ObjectType, v11);
    v15 = result + 1;
    if (!__OFADD__(result, 1))
    {
      v16 = *(_QWORD *)(v0 + 192);
      v18 = *(_QWORD *)(v0 + 168);
      v17 = *(_QWORD *)(v0 + 176);
      v19 = (_QWORD *)(v16 + OBJC_IVAR____TtC9Coherence25CRAssetProviderUniqueFile_retainCount);
      swift_beginAccess();
      *v19 = v15;
      swift_beginAccess();
      sub_1BDDB6CA4(v18, v17);
      swift_retain();
      v20 = swift_isUniquelyReferenced_nonNull_native();
      v31 = *(_QWORD *)v1;
      *(_QWORD *)v1 = 0x8000000000000000;
      sub_1BE1125CC(v16, v18, v17, v20, &v31, (uint64_t)&off_1E7759A40);
      *(_QWORD *)v1 = v31;
      swift_bridgeObjectRelease();
      sub_1BDDB796C(v18, v17);
      swift_endAccess();
      v30 = (uint64_t (*)(_QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v11 + 72) + *(_QWORD *)(v11 + 72));
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v21;
      *v21 = v0;
      v21[1] = sub_1BE114130;
      return (char *)v30(*(_QWORD *)(v0 + 192), &off_1E7759A40, ObjectType, v11);
    }
    __break(1u);
    goto LABEL_13;
  }
  result = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v0 + 16, ObjectType, v11);
  if (!__OFADD__(*v29, 1))
  {
    ++*v29;
    ((void (*)(uint64_t, _QWORD))result)(v0 + 16, 0);
    swift_unknownObjectRelease();
    return (char *)(*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1BE114130()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE114188()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE1141C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BE1B1DF0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_1BDDB796C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BE114250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_1BE1B1DF0() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1BDE281A0;
  v10[5] = v8;
  v10[6] = v9;
  v10[3] = v6;
  v10[4] = v7;
  v10[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BE1142FC()
{
  uint64_t v0;

  return sub_1BE110524(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BE114304()
{
  return swift_deallocObject();
}

uint64_t sub_1BE114314(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 136) = a4;
  *(_QWORD *)(v5 + 144) = a5;
  *(_BYTE *)(v5 + 240) = a2;
  *(_QWORD *)(v5 + 120) = a1;
  *(_QWORD *)(v5 + 128) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  v6 = sub_1BE1B1DF0();
  *(_QWORD *)(v5 + 160) = v6;
  *(_QWORD *)(v5 + 168) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE1143B4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  os_log_type_t type;
  uint64_t (*v35)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;

  if (qword_1ED6EE518 != -1)
    swift_once();
  v1 = sub_1BE1B23C0();
  *(_QWORD *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED6F8A50);
  swift_retain_n();
  swift_retain();
  v2 = sub_1BE1B23A8();
  v3 = sub_1BE1B2DC8();
  v4 = os_log_type_enabled(v2, v3);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  if (v4)
  {
    type = v3;
    v7 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v36 = v33;
    *(_DWORD *)v7 = 136315394;
    v9 = *(_QWORD *)(v5 + 120);
    v8 = *(_QWORD *)(v5 + 128);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_1BDDC1468(v9, v8, &v36);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 12) = 2080;
    v10 = *(_QWORD *)(v6 + 16);
    v11 = *(_QWORD *)(v6 + 24);
    sub_1BDDB6CA4(v10, v11);
    *(_QWORD *)(v0 + 40) = sub_1BE1B1E74();
    *(_QWORD *)(v0 + 48) = v12;
    *(_QWORD *)(v0 + 56) = 47;
    *(_QWORD *)(v0 + 64) = 0xE100000000000000;
    *(_QWORD *)(v0 + 72) = 95;
    *(_QWORD *)(v0 + 80) = 0xE100000000000000;
    sub_1BDDC8C50();
    v13 = sub_1BE1B2F30();
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v10, v11);
    *(_QWORD *)(v0 + 112) = sub_1BDDC1468(v13, v15, &v36);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BDD82000, v2, type, "%s readAsset %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v33, -1, -1);
    MEMORY[0x1C3B7E068](v7, -1, -1);
  }
  else
  {
    swift_release();
    swift_release_n();
  }

  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 24);
  swift_beginAccess();
  v20 = *(_QWORD *)(v17 + 112);
  if (!*(_QWORD *)(v20 + 16))
    goto LABEL_12;
  sub_1BDDB6CA4(v19, v18);
  swift_bridgeObjectRetain();
  v21 = sub_1BDE5E12C(v19, v18);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v19, v18);
    goto LABEL_12;
  }
  v23 = *(_BYTE *)(v0 + 240);
  v24 = (_QWORD *)(*(_QWORD *)(v20 + 56) + 16 * v21);
  *(_QWORD *)(v0 + 200) = *v24;
  v25 = v24[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v19, v18);
  if ((v23 & 1) == 0)
  {
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(ObjectType, v25) & 1) != 0)
    {
      swift_unknownObjectRelease();
LABEL_12:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
    }
  }
  v28 = *(_QWORD *)(v0 + 128);
  v29 = swift_getObjectType();
  v30 = *(_QWORD *)(v28 + 120);
  *(_QWORD *)(v0 + 208) = v30;
  v31 = *(_QWORD *)(v28 + 128);
  *(_QWORD *)(v0 + 216) = v31;
  v35 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v25 + 56) + *(_QWORD *)(v25 + 56));
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v32;
  *v32 = v0;
  v32[1] = sub_1BE1147EC;
  return v35(*(_QWORD *)(v0 + 152), v30, v31, v29, v25);
}

uint64_t sub_1BE1147EC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE114844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_unknownObjectRelease();
    sub_1BDD86E30(v3, &qword_1ED6F3C70);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v5, v1);
    swift_retain();
    v7 = sub_1BE1B23A8();
    v8 = sub_1BE1B2DC8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = *(_QWORD *)(v0 + 208);
      v10 = *(_QWORD *)(v0 + 216);
      v20 = *(_QWORD *)(v0 + 176);
      v21 = *(_QWORD *)(v0 + 168);
      v19 = *(_QWORD *)(v0 + 160);
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v22 = v12;
      *(_DWORD *)v11 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 104) = sub_1BDDC1468(v9, v10, &v22);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v11 + 12) = 2080;
      sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v13 = sub_1BE1B32E4();
      *(_QWORD *)(v0 + 88) = sub_1BDDC1468(v13, v14, &v22);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      v15 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v15(v20, v19);
      _os_log_impl(&dword_1BDD82000, v7, v8, "%s reading url %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7E068](v12, -1, -1);
      MEMORY[0x1C3B7E068](v11, -1, -1);
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 160);
      swift_release();
      v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v15(v16, v18);
    }

    *(_QWORD *)(v0 + 232) = v15;
    return swift_task_switch();
  }
}

uint64_t sub_1BE114B18()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 136))(*(_QWORD *)(v0 + 184));
  return swift_task_switch();
}

uint64_t sub_1BE114B5C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 136) = a4;
  *(_QWORD *)(v5 + 144) = a5;
  *(_BYTE *)(v5 + 240) = a2;
  *(_QWORD *)(v5 + 120) = a1;
  *(_QWORD *)(v5 + 128) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  v6 = sub_1BE1B1DF0();
  *(_QWORD *)(v5 + 160) = v6;
  *(_QWORD *)(v5 + 168) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE114BFC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  os_log_type_t type;
  uint64_t (*v35)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;

  if (qword_1ED6EE518 != -1)
    swift_once();
  v1 = sub_1BE1B23C0();
  *(_QWORD *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED6F8A50);
  swift_retain_n();
  swift_retain();
  v2 = sub_1BE1B23A8();
  v3 = sub_1BE1B2DC8();
  v4 = os_log_type_enabled(v2, v3);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  if (v4)
  {
    type = v3;
    v7 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v36 = v33;
    *(_DWORD *)v7 = 136315394;
    v9 = *(_QWORD *)(v5 + 120);
    v8 = *(_QWORD *)(v5 + 128);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_1BDDC1468(v9, v8, &v36);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 12) = 2080;
    v10 = *(_QWORD *)(v6 + 16);
    v11 = *(_QWORD *)(v6 + 24);
    sub_1BDDB6CA4(v10, v11);
    *(_QWORD *)(v0 + 40) = sub_1BE1B1E74();
    *(_QWORD *)(v0 + 48) = v12;
    *(_QWORD *)(v0 + 56) = 47;
    *(_QWORD *)(v0 + 64) = 0xE100000000000000;
    *(_QWORD *)(v0 + 72) = 95;
    *(_QWORD *)(v0 + 80) = 0xE100000000000000;
    sub_1BDDC8C50();
    v13 = sub_1BE1B2F30();
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v10, v11);
    *(_QWORD *)(v0 + 112) = sub_1BDDC1468(v13, v15, &v36);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BDD82000, v2, type, "%s readAsset %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v33, -1, -1);
    MEMORY[0x1C3B7E068](v7, -1, -1);
  }
  else
  {
    swift_release();
    swift_release_n();
  }

  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 24);
  swift_beginAccess();
  v20 = *(_QWORD *)(v17 + 112);
  if (!*(_QWORD *)(v20 + 16))
    goto LABEL_12;
  sub_1BDDB6CA4(v19, v18);
  swift_bridgeObjectRetain();
  v21 = sub_1BDE5E12C(v19, v18);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v19, v18);
    goto LABEL_12;
  }
  v23 = *(_BYTE *)(v0 + 240);
  v24 = (_QWORD *)(*(_QWORD *)(v20 + 56) + 16 * v21);
  *(_QWORD *)(v0 + 200) = *v24;
  v25 = v24[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v19, v18);
  if ((v23 & 1) == 0)
  {
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(ObjectType, v25) & 1) != 0)
    {
      swift_unknownObjectRelease();
LABEL_12:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
    }
  }
  v28 = *(_QWORD *)(v0 + 128);
  v29 = swift_getObjectType();
  v30 = *(_QWORD *)(v28 + 120);
  *(_QWORD *)(v0 + 208) = v30;
  v31 = *(_QWORD *)(v28 + 128);
  *(_QWORD *)(v0 + 216) = v31;
  v35 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v25 + 56) + *(_QWORD *)(v25 + 56));
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v32;
  *v32 = v0;
  v32[1] = sub_1BE115034;
  return v35(*(_QWORD *)(v0 + 152), v30, v31, v29, v25);
}

uint64_t sub_1BE115034()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE11508C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_unknownObjectRelease();
    sub_1BDD86E30(v3, &qword_1ED6F3C70);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v5, v1);
    swift_retain();
    v7 = sub_1BE1B23A8();
    v8 = sub_1BE1B2DC8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = *(_QWORD *)(v0 + 208);
      v10 = *(_QWORD *)(v0 + 216);
      v20 = *(_QWORD *)(v0 + 176);
      v21 = *(_QWORD *)(v0 + 168);
      v19 = *(_QWORD *)(v0 + 160);
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v22 = v12;
      *(_DWORD *)v11 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 104) = sub_1BDDC1468(v9, v10, &v22);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v11 + 12) = 2080;
      sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v13 = sub_1BE1B32E4();
      *(_QWORD *)(v0 + 88) = sub_1BDDC1468(v13, v14, &v22);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      v15 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v15(v20, v19);
      _os_log_impl(&dword_1BDD82000, v7, v8, "%s reading url %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7E068](v12, -1, -1);
      MEMORY[0x1C3B7E068](v11, -1, -1);
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 160);
      swift_release();
      v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v15(v16, v18);
    }

    *(_QWORD *)(v0 + 232) = v15;
    return swift_task_switch();
  }
}

uint64_t sub_1BE115360()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 136))(*(_QWORD *)(v0 + 184));
  return swift_task_switch();
}

uint64_t sub_1BE1153A4(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1BDDB796C(result, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE1153D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1BDE281A0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1BE115454()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BE115478(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(uint64_t **)(v1 + 16);
  sub_1BE10EB4C(a1);
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  *v2 = v6;
  v2[1] = v7;
  v2[2] = v8;
  return sub_1BE1153A4(v3, v4, v5);
}

uint64_t sub_1BE1154B4()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_66Tm()
{
  uint64_t v0;

  sub_1BDDB796C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BE1154F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1BDE281A0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1BE115574(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 160) = a7;
  *(_QWORD *)(v8 + 168) = a8;
  *(_QWORD *)(v8 + 144) = a5;
  *(_QWORD *)(v8 + 152) = a6;
  *(_QWORD *)(v8 + 128) = a3;
  *(_QWORD *)(v8 + 136) = a4;
  *(_BYTE *)(v8 + 280) = a2;
  *(_QWORD *)(v8 + 120) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3C70);
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v9 = sub_1BE1B1DF0();
  *(_QWORD *)(v8 + 184) = v9;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BE11561C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  os_log_type_t type;
  uint64_t (*v35)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;

  if (qword_1ED6EE518 != -1)
    swift_once();
  v1 = sub_1BE1B23C0();
  *(_QWORD *)(v0 + 216) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED6F8A50);
  swift_retain_n();
  swift_retain();
  v2 = sub_1BE1B23A8();
  v3 = sub_1BE1B2DC8();
  v4 = os_log_type_enabled(v2, v3);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  if (v4)
  {
    type = v3;
    v7 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v36 = v33;
    *(_DWORD *)v7 = 136315394;
    v9 = *(_QWORD *)(v5 + 120);
    v8 = *(_QWORD *)(v5 + 128);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_1BDDC1468(v9, v8, &v36);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 12) = 2080;
    v10 = *(_QWORD *)(v6 + 16);
    v11 = *(_QWORD *)(v6 + 24);
    sub_1BDDB6CA4(v10, v11);
    *(_QWORD *)(v0 + 40) = sub_1BE1B1E74();
    *(_QWORD *)(v0 + 48) = v12;
    *(_QWORD *)(v0 + 56) = 47;
    *(_QWORD *)(v0 + 64) = 0xE100000000000000;
    *(_QWORD *)(v0 + 72) = 95;
    *(_QWORD *)(v0 + 80) = 0xE100000000000000;
    sub_1BDDC8C50();
    v13 = sub_1BE1B2F30();
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v10, v11);
    *(_QWORD *)(v0 + 112) = sub_1BDDC1468(v13, v15, &v36);
    sub_1BE1B2F0C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BDD82000, v2, type, "%s readAsset %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7E068](v33, -1, -1);
    MEMORY[0x1C3B7E068](v7, -1, -1);
  }
  else
  {
    swift_release();
    swift_release_n();
  }

  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 24);
  swift_beginAccess();
  v20 = *(_QWORD *)(v17 + 112);
  if (!*(_QWORD *)(v20 + 16))
    goto LABEL_12;
  sub_1BDDB6CA4(v19, v18);
  swift_bridgeObjectRetain();
  v21 = sub_1BDE5E12C(v19, v18);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BDDB796C(v19, v18);
    goto LABEL_12;
  }
  v23 = *(_BYTE *)(v0 + 280);
  v24 = (_QWORD *)(*(_QWORD *)(v20 + 56) + 16 * v21);
  *(_QWORD *)(v0 + 224) = *v24;
  v25 = v24[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(v19, v18);
  if ((v23 & 1) == 0)
  {
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(ObjectType, v25) & 1) != 0)
    {
      swift_unknownObjectRelease();
LABEL_12:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
    }
  }
  v28 = *(_QWORD *)(v0 + 128);
  v29 = swift_getObjectType();
  v30 = *(_QWORD *)(v28 + 120);
  *(_QWORD *)(v0 + 232) = v30;
  v31 = *(_QWORD *)(v28 + 128);
  *(_QWORD *)(v0 + 240) = v31;
  v35 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v25 + 56) + *(_QWORD *)(v25 + 56));
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v32;
  *v32 = v0;
  v32[1] = sub_1BE115A54;
  return v35(*(_QWORD *)(v0 + 176), v30, v31, v29, v25);
}

uint64_t sub_1BE115A54()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE115AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_unknownObjectRelease();
    sub_1BDD86E30(v3, &qword_1ED6F3C70);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v5, v1);
    swift_retain();
    v7 = sub_1BE1B23A8();
    v8 = sub_1BE1B2DC8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = *(_QWORD *)(v0 + 232);
      v10 = *(_QWORD *)(v0 + 240);
      v21 = *(_QWORD *)(v0 + 200);
      v22 = *(_QWORD *)(v0 + 192);
      v20 = *(_QWORD *)(v0 + 184);
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v23 = v12;
      *(_DWORD *)v11 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 104) = sub_1BDDC1468(v9, v10, &v23);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v11 + 12) = 2080;
      sub_1BDD8422C(&qword_1EF52F158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v13 = sub_1BE1B32E4();
      *(_QWORD *)(v0 + 88) = sub_1BDDC1468(v13, v14, &v23);
      sub_1BE1B2F0C();
      swift_bridgeObjectRelease();
      v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v15(v21, v20);
      _os_log_impl(&dword_1BDD82000, v7, v8, "%s reading url %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7E068](v12, -1, -1);
      MEMORY[0x1C3B7E068](v11, -1, -1);
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 192);
      v16 = *(_QWORD *)(v0 + 200);
      v18 = *(_QWORD *)(v0 + 184);
      swift_release();
      v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v15(v16, v18);
    }

    *(_QWORD *)(v0 + 256) = v15;
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v19;
    *v19 = v0;
    v19[1] = sub_1BE115DA0;
    return sub_1BE171324((uint64_t)v19, *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
  }
}

uint64_t sub_1BE115DA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BE115E04()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  swift_unknownObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1BE115E78()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  swift_unknownObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BE115EEC()
{
  return swift_deallocObject();
}

uint64_t sub_1BE115EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BDE281A0;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1BE115F5C()
{
  return swift_deallocObject();
}

uint64_t sub_1BE115F6C()
{
  uint64_t v0;

  sub_1BDDB796C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1BE115F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1BDE281A0;
  v6[13] = v5;
  v6[14] = v4;
  v6[12] = a1;
  return swift_task_switch();
}

uint64_t sub_1BE116000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C58);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BE116078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3C58) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BDE28004;
  return sub_1BE10B728(a1, v5, v6, v7);
}

_OWORD *sub_1BE116100(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  swift_weakTakeInit();
  return a2;
}

uint64_t sub_1BE116134(uint64_t a1)
{
  swift_release();
  swift_weakDestroy();
  return a1;
}

void sub_1BE11618C(uint64_t *a1@<X8>)
{
  sub_1BDFC5D5C(a1);
}

_QWORD *sub_1BE1161AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[3];
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v5 = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v11);
  v48 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F29C8);
  v39 = *(_QWORD *)(v41 - 8);
  v13 = MEMORY[0x1E0C80A78](v41);
  v50 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v40 = (char *)v33 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3790);
  MEMORY[0x1E0C80A78](v16);
  v45 = (uint64_t)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Proto_KeyPath(0);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Proto_Reference(0);
  v19 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v51 = (uint64_t)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0DEE9E0];
  v3[5] = MEMORY[0x1E0DEE9E0];
  v3[2] = v21;
  v3[3] = v21;
  v3[4] = a3;
  v22 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Proto_Document(0) + 20))
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__references;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v22 + 16))
  {
    v34 = a1;
    v33[1] = v4;
    swift_beginAccess();
    swift_retain();
    v35 = v3;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EF848);
    sub_1BE1B25D0();
    swift_endAccess();
    v23 = *(_QWORD *)v22;
    v24 = *(_QWORD *)(*(_QWORD *)v22 + 16);
    v33[2] = *(_QWORD *)v22;
    if (v24)
    {
      v25 = v23 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      v36 = *(_QWORD *)(v19 + 72);
      swift_bridgeObjectRetain();
      v38 = a2;
      v37 = a3;
      v26 = v47;
      v27 = v51;
      v49 = v24;
      sub_1BDD9C318(v25, v51, type metadata accessor for Proto_Reference);
      v28 = *(_QWORD *)(v27 + *(int *)(v42 + 20))
          + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
      swift_beginAccess();
      v29 = v28;
      v30 = v45;
      sub_1BDD86DEC(v29, v45, &qword_1ED6F3790);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v30, 1, v44) == 1)
      {
        *v26 = MEMORY[0x1E0DEE9D8];
        v26[1] = sub_1BE1B20CC();
        v26[2] = v31;
        sub_1BE1B20E4();
        sub_1BDD86E30(v30, &qword_1ED6F3790);
      }
      else
      {
        sub_1BDDA2E8C(v30, (uint64_t)v26, type metadata accessor for Proto_KeyPath);
      }
      __asm { BR              X9 }
    }
    swift_bridgeObjectRetain();
    swift_release();
    v5 = v35;
    swift_release();
    swift_release();
    sub_1BDD9C3E0(v34, type metadata accessor for Proto_Document);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    sub_1BDD9C3E0(a1, type metadata accessor for Proto_Document);
  }
  return v5;
}

uint64_t sub_1BE116ACC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE116AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F29C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE116B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_Message(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_Message._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52D8F8);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52D8F8);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Document);
  v16 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52D8F8);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52D8F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE116D30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_Message(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_Message._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52D8F8);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52D8F8);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Document);
  v16 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52D8F8);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52D8F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE116F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_Message(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_Message._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52D8F8);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52D8F8);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_Heartbeat);
  v16 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52D8F8);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52D8F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE117158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeResponse._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F950);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F950);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Document);
  v16 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F950);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F950);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE11736C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeResponse._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F950);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F950);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_KeyPaths);
  v16 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F950);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F950);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE117580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeResponse._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F950);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F950);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Document);
  v16 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F950);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F950);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE117794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeResponse._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F950);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F950);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_KeyPaths);
  v16 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F950);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F950);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE1179A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeResponse._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F950);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F950);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_RespondAsset);
  v16 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F950);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F950);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE117BBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeRequest._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F958);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F958);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_RequestVersion);
  v16 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F958);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F958);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE117DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeRequest._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F958);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F958);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_KeyPaths);
  v16 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F958);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F958);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE117FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeRequest._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F958);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F958);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_KeyPaths);
  v16 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F958);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F958);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE1181F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeRequest._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F958);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F958);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Document);
  v16 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F958);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F958);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE11840C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_MergeRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_MergeRequest._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52F958);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52F958);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_RequestAssets);
  v16 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52F958);
  v17 = v15
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52F958);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE118620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v21[-v9];
  v11 = *(int *)(type metadata accessor for Peer_Message(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v12 = *(_QWORD *)(v2 + v11);
    type metadata accessor for Peer_Message._StorageClass(0);
    v13 = swift_allocObject();
    v14 = v13
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v15 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
    v16 = v12
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v16, (uint64_t)v10, &qword_1EF52D8F8);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v10, v14, &qword_1EF52D8F8);
    swift_endAccess();
    *(_QWORD *)(v2 + v11) = v13;
    swift_release();
  }
  v17 = *(_QWORD *)(v2 + v11);
  *v10 = a1;
  v10[1] = a2;
  v18 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 0, 1, v18);
  sub_1BDDA2EF0((uint64_t)v10, (uint64_t)v8, &qword_1EF52D8F8);
  v19 = v17 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v8, v19, &qword_1EF52D8F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE11882C(char a1)
{
  return sub_1BE11883C(a1);
}

uint64_t sub_1BE118834(char a1)
{
  return sub_1BE11883C(a1);
}

uint64_t sub_1BE11883C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_Message(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_Message._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52D8F8);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52D8F8);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  *v8 = a1 & 1;
  v16 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52D8F8);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52D8F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE118A4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_Message(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_Message._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52D8F8);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52D8F8);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_MergeRequest);
  v16 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52D8F8);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52D8F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE118C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Peer_Message(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Peer_Message._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1EF52D8F8);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1EF52D8F8);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Peer_MergeResponse);
  v16 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1EF52D8F8);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1EF52D8F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE118E74(char a1)
{
  return sub_1BE11883C(a1);
}

uint64_t sub_1BE118E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5493A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5493A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BE1B6B30;
  v5 = v25 + v4;
  v6 = v25 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v25 + v4) = 1;
  *(_QWORD *)v6 = "wantsToBeSource";
  *(_QWORD *)(v6 + 8) = 15;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0D3EF08];
  v8 = sub_1BE1B236C();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "isDestination";
  *(_QWORD *)(v10 + 8) = 13;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "deltaMerge";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "fullModelRequest";
  *((_QWORD *)v14 + 1) = 16;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "fullModel";
  *((_QWORD *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "heartbeat";
  *((_QWORD *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "mergeRequest";
  *((_QWORD *)v20 + 1) = 12;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "mergeResponse";
  *((_QWORD *)v22 + 1) = 13;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "done";
  *(_QWORD *)(v23 + 8) = 4;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  return sub_1BE1B2378();
}

uint64_t sub_1BE11915C(uint64_t a1)
{
  return sub_1BDD8CC18(a1, (void (*)(_QWORD))type metadata accessor for Peer_Message._StorageClass, &OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf, type metadata accessor for Peer_Message.OneOf_TaggedOneOf, &qword_1EF530418);
}

uint64_t sub_1BE119180()
{
  return sub_1BDD96A3C(&OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf, &qword_1EF52D8F8);
}

uint64_t sub_1BE119194()
{
  return type metadata accessor for Peer_Message._StorageClass(0);
}

uint64_t type metadata accessor for Peer_Message._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530448);
}

void sub_1BE1191B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDDD2FB0(a1, a2, a3, &qword_1EF530458, (void (*)(uint64_t))type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
}

uint64_t type metadata accessor for Peer_Message.OneOf_TaggedOneOf(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530540);
}

uint64_t sub_1BE1191D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(type metadata accessor for Peer_Message(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v12 = *(_QWORD *)(v3 + v11);
    type metadata accessor for Peer_Message._StorageClass(0);
    v13 = swift_allocObject();
    v25 = v4;
    v14 = v13;
    v24 = a1;
    v15 = a2;
    v16 = a3;
    v17 = v13
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v18 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    v19 = v12
        + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v19, (uint64_t)v10, &qword_1EF52D8F8);
    swift_beginAccess();
    v20 = v17;
    a3 = v16;
    a2 = v15;
    a1 = v24;
    sub_1BDDA1AF4((uint64_t)v10, v20, &qword_1EF52D8F8);
    swift_endAccess();
    *(_QWORD *)(v3 + v11) = v14;
    swift_release();
  }
  v21 = swift_retain();
  sub_1BE119380(v21, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BE119380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t result;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  void (*v120)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  __int128 v267;
  uint64_t v268;

  v263 = a4;
  v264 = a1;
  v6 = type metadata accessor for Peer_MergeResponse(0);
  v259 = *(_QWORD *)(v6 - 8);
  v260 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v242 = (char *)&v210 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v223 = (uint64_t)&v210 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530670);
  v11 = MEMORY[0x1E0C80A78](v10);
  v239 = (char *)&v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v252 = (uint64_t)&v210 - v13;
  v246 = type metadata accessor for Peer_MergeRequest(0);
  v248 = *(_QWORD *)(v246 - 8);
  v14 = MEMORY[0x1E0C80A78](v246);
  v225 = (uint64_t)&v210 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v222 = (uint64_t)&v210 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530678);
  v18 = MEMORY[0x1E0C80A78](v17);
  v258 = (uint64_t)&v210 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v245 = (uint64_t)&v210 - v20;
  v249 = type metadata accessor for Peer_Heartbeat(0);
  v247 = *(_QWORD *)(v249 - 8);
  v21 = MEMORY[0x1E0C80A78](v249);
  v241 = (char *)&v210 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v221 = (uint64_t)&v210 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530680);
  v25 = MEMORY[0x1E0C80A78](v24);
  v238 = (uint64_t)&v210 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v251 = (uint64_t)&v210 - v27;
  v28 = type metadata accessor for Proto_Document(0);
  v255 = *(_QWORD *)(v28 - 8);
  v256 = v28;
  v29 = MEMORY[0x1E0C80A78](v28);
  v240 = (char *)&v210 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v220 = (uint64_t)&v210 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v224 = (uint64_t)&v210 - v34;
  MEMORY[0x1E0C80A78](v33);
  v219 = (uint64_t)&v210 - v35;
  v268 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  v265 = *(_QWORD *)(v268 - 8);
  v36 = MEMORY[0x1E0C80A78](v268);
  v230 = (uint64_t)&v210 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0C80A78](v36);
  v235 = (uint64_t)&v210 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v229 = (uint64_t)&v210 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v234 = (uint64_t)&v210 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v228 = (uint64_t)&v210 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v233 = (uint64_t)&v210 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v227 = (uint64_t)&v210 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v232 = (uint64_t)&v210 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v226 = (uint64_t)&v210 - v53;
  MEMORY[0x1E0C80A78](v52);
  v231 = (uint64_t)&v210 - v54;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D920);
  v56 = MEMORY[0x1E0C80A78](v55);
  v237 = (uint64_t)&v210 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = MEMORY[0x1E0C80A78](v56);
  v253 = (uint64_t)&v210 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v236 = (uint64_t)&v210 - v61;
  MEMORY[0x1E0C80A78](v60);
  v250 = (uint64_t)&v210 - v62;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v64 = MEMORY[0x1E0C80A78](v63);
  v244 = (uint64_t)&v210 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = MEMORY[0x1E0C80A78](v64);
  v243 = (uint64_t)&v210 - v67;
  v68 = MEMORY[0x1E0C80A78](v66);
  v70 = (char *)&v210 - v69;
  v71 = MEMORY[0x1E0C80A78](v68);
  v73 = (char *)&v210 - v72;
  v74 = MEMORY[0x1E0C80A78](v71);
  v76 = (char *)&v210 - v75;
  v77 = MEMORY[0x1E0C80A78](v74);
  v79 = (char *)&v210 - v78;
  v80 = MEMORY[0x1E0C80A78](v77);
  v82 = (char *)&v210 - v81;
  v83 = MEMORY[0x1E0C80A78](v80);
  v85 = (char *)&v210 - v84;
  v86 = MEMORY[0x1E0C80A78](v83);
  v257 = (uint64_t)&v210 - v87;
  v88 = MEMORY[0x1E0C80A78](v86);
  v266 = (uint64_t *)((char *)&v210 - v89);
  MEMORY[0x1E0C80A78](v88);
  v91 = (char *)&v210 - v90;
  v264 += OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v262 = a2;
  v92 = (uint64_t)v254;
  v261 = a3;
  result = sub_1BE1B2144();
  if (!v92)
  {
    v213 = v91;
    v214 = v85;
    v215 = v82;
    v216 = v79;
    v217 = v76;
    v218 = v73;
    v254 = v70;
    v212 = xmmword_1BE1B6B20;
    v95 = v261;
    v97 = v258;
    v96 = v259;
    v98 = v263;
    v99 = v266;
    v100 = v260;
    while (2)
    {
      if ((v94 & 1) == 0)
      {
        switch(result)
        {
          case 1:
            v105 = v97;
            v106 = (uint64_t)v213;
            sub_1BDD86DEC(v264, (uint64_t)v213, &qword_1EF52D8F8);
            v107 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v106, 1, v268);
            sub_1BDD86E30(v106, &qword_1EF52D8F8);
            if (v107 == 1)
            {
              v100 = v260;
              v98 = v263;
            }
            else
            {
              v98 = v263;
              sub_1BE1B2150();
              v100 = v260;
            }
            v99 = v266;
            v97 = v105;
            v267 = v212;
            sub_1BE1B2198();
            v135 = *((_QWORD *)&v267 + 1);
            if (*((_QWORD *)&v267 + 1) >> 60 != 15)
            {
              *v99 = v267;
              v99[1] = v135;
              v136 = v268;
              goto LABEL_4;
            }
            goto LABEL_5;
          case 2:
            v108 = v97;
            v109 = (uint64_t)v214;
            sub_1BDD86DEC(v264, (uint64_t)v214, &qword_1EF52D8F8);
            v110 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v109, 1, v268);
            sub_1BDD86E30(v109, &qword_1EF52D8F8);
            if (v110 == 1)
            {
              v100 = v260;
              v98 = v263;
            }
            else
            {
              v98 = v263;
              sub_1BE1B2150();
              v100 = v260;
            }
            v99 = v266;
            v97 = v108;
            LOBYTE(v267) = 2;
            sub_1BE1B215C();
            if (v267 != 2)
            {
              *(_BYTE *)v99 = v267 & 1;
              v136 = v268;
              goto LABEL_4;
            }
            goto LABEL_5;
          case 3:
            v111 = v96;
            v112 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v255 + 56);
            v112(v250, 1, 1, v256);
            v113 = (uint64_t)v215;
            sub_1BDD86DEC(v264, (uint64_t)v215, &qword_1EF52D8F8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v113, 1, v268) == 1)
            {
              sub_1BDD86E30(v113, &qword_1EF52D8F8);
            }
            else
            {
              v137 = v231;
              sub_1BDDA2E8C(v113, v231, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              sub_1BE1B2150();
              v138 = v226;
              sub_1BDDA2E8C(v137, v226, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              if (swift_getEnumCaseMultiPayload() == 2)
              {
                v139 = v95;
                v140 = v250;
                sub_1BDD86E30(v250, &qword_1EF52D920);
                v141 = v138;
                v142 = v219;
                sub_1BDDA2E8C(v141, v219, type metadata accessor for Proto_Document);
                sub_1BDDA2E8C(v142, v140, type metadata accessor for Proto_Document);
                v143 = v256;
                v112(v140, 0, 1, v256);
                v144 = v111;
                v145 = v140;
                v95 = v139;
                v96 = v144;
                v97 = v258;
                v146 = v143;
                goto LABEL_50;
              }
              sub_1BDD9C3E0(v138, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
            }
            v145 = v250;
            v97 = v258;
            v146 = v256;
LABEL_50:
            sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
            sub_1BE1B2258();
            v173 = v145;
            v174 = v236;
            sub_1BDDA2EF0(v173, v236, &qword_1EF52D920);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v255 + 48))(v174, 1, v146) == 1)
            {
              sub_1BDD86E30(v174, &qword_1EF52D920);
              v99 = v266;
            }
            else
            {
              v175 = v224;
              sub_1BDDA2E8C(v174, v224, type metadata accessor for Proto_Document);
              v99 = v266;
              sub_1BDDA2E8C(v175, (uint64_t)v266, type metadata accessor for Proto_Document);
              v176 = v268;
              swift_storeEnumTagMultiPayload();
              v177 = v264;
              v178 = v176;
              v179 = v95;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v99, 0, 1, v178);
              v180 = v257;
              sub_1BDDA2EF0((uint64_t)v99, v257, &qword_1EF52D8F8);
              swift_beginAccess();
              v181 = v180;
              v95 = v179;
              sub_1BDDA1AF4(v181, v177, &qword_1EF52D8F8);
              swift_endAccess();
            }
            v100 = v260;
            v98 = v263;
            goto LABEL_5;
          case 4:
            v114 = v97;
            v115 = (uint64_t)v216;
            sub_1BDD86DEC(v264, (uint64_t)v216, &qword_1EF52D8F8);
            v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v115, 1, v268);
            sub_1BDD86E30(v115, &qword_1EF52D8F8);
            if (v116 == 1)
            {
              v100 = v260;
              v98 = v263;
            }
            else
            {
              v98 = v263;
              sub_1BE1B2150();
              v100 = v260;
            }
            v99 = v266;
            v97 = v114;
            LOBYTE(v267) = 2;
            sub_1BE1B215C();
            if (v267 != 2)
            {
              *(_BYTE *)v99 = v267 & 1;
              v136 = v268;
              goto LABEL_4;
            }
            goto LABEL_5;
          case 5:
            v117 = v97;
            v118 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v255 + 56);
            v118(v253, 1, 1, v256);
            v119 = (uint64_t)v217;
            sub_1BDD86DEC(v264, (uint64_t)v217, &qword_1EF52D8F8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v119, 1, v268) == 1)
            {
              sub_1BDD86E30(v119, &qword_1EF52D8F8);
            }
            else
            {
              v147 = v232;
              sub_1BDDA2E8C(v119, v232, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              sub_1BE1B2150();
              v148 = v227;
              sub_1BDDA2E8C(v147, v227, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              if (swift_getEnumCaseMultiPayload() == 4)
              {
                v149 = v253;
                sub_1BDD86E30(v253, &qword_1EF52D920);
                v150 = v220;
                sub_1BDDA2E8C(v148, v220, type metadata accessor for Proto_Document);
                sub_1BDDA2E8C(v150, v149, type metadata accessor for Proto_Document);
                v151 = v149;
                v152 = v256;
                v118(v151, 0, 1, v256);
                v153 = (uint64_t)v240;
                v97 = v117;
                v154 = v152;
LABEL_56:
                sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
                v182 = v253;
                sub_1BE1B2258();
                v183 = v182;
                v184 = v237;
                sub_1BDDA2EF0(v183, v237, &qword_1EF52D920);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v255 + 48))(v184, 1, v154) == 1)
                {
                  sub_1BDD86E30(v184, &qword_1EF52D920);
                  v99 = v266;
                }
                else
                {
                  sub_1BDDA2E8C(v184, v153, type metadata accessor for Proto_Document);
                  v185 = (uint64_t)v266;
                  sub_1BDDA2E8C(v153, (uint64_t)v266, type metadata accessor for Proto_Document);
                  v186 = v268;
                  swift_storeEnumTagMultiPayload();
                  v187 = v186;
                  v99 = (_QWORD *)v185;
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v265 + 56))(v185, 0, 1, v187);
                  v188 = v185;
                  v189 = v257;
                  sub_1BDDA2EF0(v188, v257, &qword_1EF52D8F8);
                  v190 = v264;
                  swift_beginAccess();
                  sub_1BDDA1AF4(v189, v190, &qword_1EF52D8F8);
                  swift_endAccess();
                }
                v100 = v260;
                goto LABEL_77;
              }
              sub_1BDD9C3E0(v148, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
            }
            v153 = (uint64_t)v240;
            v97 = v117;
            v154 = v256;
            goto LABEL_56;
          case 6:
            v120 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 56);
            v120(v251, 1, 1, v249);
            v121 = (uint64_t)v218;
            sub_1BDD86DEC(v264, (uint64_t)v218, &qword_1EF52D8F8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v121, 1, v268) == 1)
            {
              sub_1BDD86E30(v121, &qword_1EF52D8F8);
              v96 = v259;
              v122 = (uint64_t)v241;
            }
            else
            {
              v155 = v233;
              sub_1BDDA2E8C(v121, v233, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              sub_1BE1B2150();
              v156 = v228;
              sub_1BDDA2E8C(v155, v228, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              if (swift_getEnumCaseMultiPayload() == 5)
              {
                v157 = v251;
                sub_1BDD86E30(v251, &qword_1EF530680);
                v158 = v156;
                v159 = v221;
                sub_1BDDA2E8C(v158, v221, type metadata accessor for Peer_Heartbeat);
                sub_1BDDA2E8C(v159, v157, type metadata accessor for Peer_Heartbeat);
                v160 = v249;
                v120(v157, 0, 1, v249);
                v97 = v258;
                v122 = (uint64_t)v241;
                v96 = v259;
                goto LABEL_62;
              }
              sub_1BDD9C3E0(v156, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              v122 = (uint64_t)v241;
              v96 = v259;
            }
            v157 = v251;
            v97 = v258;
            v160 = v249;
LABEL_62:
            sub_1BDD8422C(&qword_1EF530638, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C35D8);
            sub_1BE1B2258();
            v191 = v98;
            v192 = v157;
            v193 = v238;
            sub_1BDDA2EF0(v192, v238, &qword_1EF530680);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 48))(v193, 1, v160) == 1)
            {
              sub_1BDD86E30(v193, &qword_1EF530680);
              v99 = v266;
            }
            else
            {
              sub_1BDDA2E8C(v193, v122, type metadata accessor for Peer_Heartbeat);
              v194 = v122;
              v99 = v266;
              sub_1BDDA2E8C(v194, (uint64_t)v266, type metadata accessor for Peer_Heartbeat);
              v195 = v268;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v99, 0, 1, v195);
              v196 = v257;
              sub_1BDDA2EF0((uint64_t)v99, v257, &qword_1EF52D8F8);
              v197 = v264;
              swift_beginAccess();
              sub_1BDDA1AF4(v196, v197, &qword_1EF52D8F8);
              swift_endAccess();
            }
            v98 = v191;
            v100 = v260;
            v95 = v261;
            goto LABEL_5;
          case 7:
            v123 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 56);
            v124 = v245;
            v125 = v246;
            v123(v245, 1, 1, v246);
            v126 = (uint64_t)v254;
            sub_1BDD86DEC(v264, (uint64_t)v254, &qword_1EF52D8F8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v126, 1, v268) == 1)
            {
              sub_1BDD86E30(v126, &qword_1EF52D8F8);
            }
            else
            {
              v211 = v123;
              v161 = v234;
              sub_1BDDA2E8C(v126, v234, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              sub_1BE1B2150();
              v162 = v229;
              sub_1BDDA2E8C(v161, v229, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              if (swift_getEnumCaseMultiPayload() == 6)
              {
                sub_1BDD86E30(v124, &qword_1EF530678);
                v163 = v222;
                sub_1BDDA2E8C(v162, v222, type metadata accessor for Peer_MergeRequest);
                v124 = v245;
                sub_1BDDA2E8C(v163, v245, type metadata accessor for Peer_MergeRequest);
                v125 = v246;
                v211(v124, 0, 1, v246);
                v95 = v261;
                v99 = v266;
              }
              else
              {
                sub_1BDD9C3E0(v162, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
                v95 = v261;
                v99 = v266;
                v125 = v246;
              }
            }
            sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
            sub_1BE1B2258();
            v97 = v258;
            sub_1BDDA2EF0(v124, v258, &qword_1EF530678);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v97, 1, v125) == 1)
            {
              sub_1BDD86E30(v97, &qword_1EF530678);
            }
            else
            {
              v198 = v225;
              sub_1BDDA2E8C(v97, v225, type metadata accessor for Peer_MergeRequest);
              v97 = v258;
              sub_1BDDA2E8C(v198, (uint64_t)v99, type metadata accessor for Peer_MergeRequest);
              v199 = v268;
              swift_storeEnumTagMultiPayload();
              v200 = v199;
              v99 = v266;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v266, 0, 1, v200);
              v201 = v95;
              v202 = v257;
              sub_1BDDA2EF0((uint64_t)v99, v257, &qword_1EF52D8F8);
              v203 = v264;
              swift_beginAccess();
              v204 = v202;
              v95 = v201;
              sub_1BDDA1AF4(v204, v203, &qword_1EF52D8F8);
              swift_endAccess();
            }
            v96 = v259;
            v100 = v260;
            v98 = v263;
            goto LABEL_5;
          case 8:
            v127 = v96;
            v128 = v98;
            v129 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56);
            v129(v252, 1, 1, v100);
            v130 = v243;
            sub_1BDD86DEC(v264, v243, &qword_1EF52D8F8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v130, 1, v268) == 1)
            {
              v131 = (uint64_t)v239;
              sub_1BDD86E30(v130, &qword_1EF52D8F8);
            }
            else
            {
              v164 = v130;
              v165 = v235;
              sub_1BDDA2E8C(v164, v235, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              sub_1BE1B2150();
              v166 = v230;
              sub_1BDDA2E8C(v165, v230, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
              if (swift_getEnumCaseMultiPayload() == 7)
              {
                v131 = (uint64_t)v239;
                v167 = v252;
                sub_1BDD86E30(v252, &qword_1EF530670);
                v168 = v166;
                v169 = v223;
                sub_1BDDA2E8C(v168, v223, type metadata accessor for Peer_MergeResponse);
                sub_1BDDA2E8C(v169, v167, type metadata accessor for Peer_MergeResponse);
                v170 = v260;
                v129(v167, 0, 1, v260);
                v171 = (uint64_t)v242;
                v172 = v128;
                goto LABEL_73;
              }
              v131 = (uint64_t)v239;
              sub_1BDD9C3E0(v166, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
            }
            v170 = v260;
            v171 = (uint64_t)v242;
            v172 = v128;
            v167 = v252;
LABEL_73:
            sub_1BDD8422C((unint64_t *)&qword_1EF52F960, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C3308);
            v205 = v172;
            sub_1BE1B2258();
            sub_1BDDA2EF0(v167, v131, &qword_1EF530670);
            v100 = v170;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v259 + 48))(v131, 1, v170) == 1)
            {
              sub_1BDD86E30(v131, &qword_1EF530670);
              v97 = v258;
              v99 = v266;
            }
            else
            {
              sub_1BDDA2E8C(v131, v171, type metadata accessor for Peer_MergeResponse);
              v206 = v171;
              v99 = v266;
              sub_1BDDA2E8C(v206, (uint64_t)v266, type metadata accessor for Peer_MergeResponse);
              v207 = v268;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v99, 0, 1, v207);
              v208 = v257;
              sub_1BDDA2EF0((uint64_t)v99, v257, &qword_1EF52D8F8);
              v209 = v264;
              swift_beginAccess();
              sub_1BDDA1AF4(v208, v209, &qword_1EF52D8F8);
              swift_endAccess();
              v97 = v258;
            }
            v98 = v205;
LABEL_77:
            v95 = v261;
            v96 = v259;
LABEL_5:
            result = sub_1BE1B2144();
            continue;
          case 9:
            v132 = v97;
            v133 = v244;
            sub_1BDD86DEC(v264, v244, &qword_1EF52D8F8);
            v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v265 + 48))(v133, 1, v268);
            sub_1BDD86E30(v133, &qword_1EF52D8F8);
            if (v134 == 1)
            {
              v100 = v260;
              v98 = v263;
            }
            else
            {
              v98 = v263;
              sub_1BE1B2150();
              v100 = v260;
            }
            v99 = v266;
            v97 = v132;
            LOBYTE(v267) = 2;
            sub_1BE1B215C();
            if (v267 != 2)
            {
              *(_BYTE *)v99 = v267 & 1;
              v136 = v268;
LABEL_4:
              swift_storeEnumTagMultiPayload();
              v101 = v136;
              v99 = v266;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v266, 0, 1, v101);
              v102 = v257;
              sub_1BDDA2EF0((uint64_t)v99, v257, &qword_1EF52D8F8);
              v103 = v264;
              swift_beginAccess();
              v104 = v102;
              v95 = v261;
              v98 = v263;
              sub_1BDDA1AF4(v104, v103, &qword_1EF52D8F8);
              swift_endAccess();
            }
            goto LABEL_5;
          default:
            goto LABEL_5;
        }
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1BE11AECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a3;
  v22 = a4;
  v20 = a2;
  v18 = type metadata accessor for Peer_MergeResponse(0);
  MEMORY[0x1E0C80A78](v18);
  v19 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Peer_MergeRequest(0);
  MEMORY[0x1E0C80A78](v17);
  v6 = type metadata accessor for Peer_Heartbeat(0);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for Proto_Document(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v12, (uint64_t)v11, &qword_1EF52D8F8);
  v13 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13);
  if ((_DWORD)result != 1)
  {
    v15 = (char *)&loc_1BE11B0C4 + 4 * byte_1BE1C2A69[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

BOOL sub_1BE11B318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v25 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530688);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D8F8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  v16 = a1 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v15, &qword_1EF52D8F8);
  v17 = a2 + OBJC_IVAR____TtCV9Coherence12Peer_MessageP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BDD86DEC((uint64_t)v15, (uint64_t)v9, &qword_1EF52D8F8);
  sub_1BDD86DEC(v17, v18, &qword_1EF52D8F8);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1EF52D8F8);
    if (v19(v18, 1, v4) == 1)
    {
      sub_1BDD86E30((uint64_t)v9, &qword_1EF52D8F8);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1BDD86DEC((uint64_t)v9, (uint64_t)v13, &qword_1EF52D8F8);
  if (v19(v18, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1EF52D8F8);
    sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
LABEL_6:
    sub_1BDD86E30((uint64_t)v9, &qword_1EF530688);
    return 0;
  }
  v20 = v25;
  sub_1BDDA2E8C(v18, v25, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
  sub_1BE125870((uint64_t)v13, v20);
  v22 = v21;
  sub_1BDD9C3E0(v20, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v15, &qword_1EF52D8F8);
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v9, &qword_1EF52D8F8);
  return (v22 & 1) != 0;
}

uint64_t sub_1BE11B5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52BEB8, &qword_1EF530418, a2);
}

uint64_t sub_1BE11B5EC()
{
  return 0x73654D2E72656550;
}

uint64_t sub_1BE11B60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BE1191D8(a1, a2, a3);
}

uint64_t sub_1BE11B620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Peer_Message, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE11AECC);
}

uint64_t sub_1BE11B644()
{
  sub_1BDD8422C(&qword_1EF530668, type metadata accessor for Peer_Message, (uint64_t)&unk_1BE1C3708);
  return sub_1BE1B212C();
}

uint64_t sub_1BE11B694(uint64_t a1)
{
  return sub_1BDE38BE4(a1, type metadata accessor for Peer_Message, (uint64_t (*)(uint64_t, uint64_t))sub_1BE11B318) & 1;
}

uint64_t sub_1BE11B6BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BEB0, (uint64_t)qword_1EF5493A0, a1);
}

uint64_t sub_1BE11B6D8()
{
  sub_1BDD8422C((unint64_t *)&unk_1EF52D8E8, type metadata accessor for Peer_Message, (uint64_t)&unk_1BE1C3740);
  return sub_1BE1B2288();
}

uint64_t sub_1BE11B718()
{
  sub_1BDD8422C((unint64_t *)&unk_1EF52D8E8, type metadata accessor for Peer_Message, (uint64_t)&unk_1BE1C3740);
  return sub_1BE1B2294();
}

uint64_t sub_1BE11B768()
{
  sub_1BDD8422C(&qword_1EF530668, type metadata accessor for Peer_Message, (uint64_t)&unk_1BE1C3708);
  return sub_1BE1B2120();
}

uint64_t sub_1BE11B7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5493B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5493B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "version";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isInitialHeartbeat";
  *((_QWORD *)v11 + 1) = 18;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE11B910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for Peer_Heartbeat._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__version;
  v2 = type metadata accessor for Proto_Document(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__isInitialHeartbeat) = 0;
  qword_1EF530420 = v0;
  return result;
}

uint64_t sub_1BE11B984()
{
  return sub_1BDD96A3C(&OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__version, &qword_1EF52D920);
}

uint64_t sub_1BE11B998()
{
  return type metadata accessor for Peer_Heartbeat._StorageClass(0);
}

uint64_t type metadata accessor for Peer_Heartbeat._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530470);
}

void sub_1BE11B9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDE47F60(a1, a2, a3, &qword_1EF5301A8, (void (*)(uint64_t))type metadata accessor for Proto_Document);
}

uint64_t sub_1BE11B9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  _QWORD v19[14];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D920);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(int *)(type metadata accessor for Peer_Heartbeat(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v19[2] = a2;
    v10 = *(_QWORD *)(v2 + v9);
    type metadata accessor for Peer_Heartbeat._StorageClass(0);
    v11 = swift_allocObject();
    v19[1] = a1;
    v12 = v11;
    v19[13] = v3;
    v13 = v11 + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__version;
    v14 = type metadata accessor for Proto_Document(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    v15 = (_BYTE *)(v12
                  + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__isInitialHeartbeat);
    *(_BYTE *)(v12
             + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__isInitialHeartbeat) = 0;
    v16 = v10 + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__version;
    swift_beginAccess();
    sub_1BDD86DEC(v16, (uint64_t)v8, &qword_1EF52D920);
    swift_beginAccess();
    swift_retain();
    sub_1BDDA1AF4((uint64_t)v8, v13, &qword_1EF52D920);
    swift_endAccess();
    v17 = (_BYTE *)(v10
                  + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__isInitialHeartbeat);
    swift_beginAccess();
    LOBYTE(v17) = *v17;
    swift_beginAccess();
    *v15 = (_BYTE)v17;
    swift_release();
    *(_QWORD *)(v2 + v9) = v12;
    swift_release();
  }
  swift_retain();
  sub_1BE11BBD4();
  return swift_release();
}

uint64_t sub_1BE11BBD4()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto_Document(0);
        sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
        v4 = v3;
        sub_1BE1B2258();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    swift_beginAccess();
    v4 = v3;
    sub_1BE1B2168();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1BE11BD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  _BYTE *v15;
  _QWORD v16[10];

  v16[9] = a4;
  v16[1] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D920);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Document(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v8, &qword_1EF52D920);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BDD86E30((uint64_t)v8, &qword_1EF52D920);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Document);
    sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
    sub_1BE1B2360();
    result = sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_Document);
    if (v4)
      return result;
  }
  v15 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__isInitialHeartbeat);
  result = swift_beginAccess();
  if (*v15 == 1)
    return sub_1BE1B22C4();
  return result;
}

uint64_t sub_1BE11BF08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE *v23;
  char *v24;
  char v25;
  char v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v3 = type metadata accessor for Proto_Document(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5306B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D920);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v28 - v13;
  v15 = a1 + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v15, (uint64_t)v14, &qword_1EF52D920);
  v16 = v29;
  v17 = v29 + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__version;
  swift_beginAccess();
  v18 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1BDD86DEC((uint64_t)v14, (uint64_t)v8, &qword_1EF52D920);
  sub_1BDD86DEC(v17, v18, &qword_1EF52D920);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v8, 1, v3) != 1)
  {
    v20 = a1;
    sub_1BDD86DEC((uint64_t)v8, (uint64_t)v12, &qword_1EF52D920);
    if (v19(v18, 1, v3) != 1)
    {
      v21 = v28;
      sub_1BDDA2E8C(v18, v28, type metadata accessor for Proto_Document);
      swift_retain();
      swift_retain();
      v22 = sub_1BE147204((uint64_t)v12, v21);
      sub_1BDD9C3E0(v21, type metadata accessor for Proto_Document);
      sub_1BDD86E30((uint64_t)v14, &qword_1EF52D920);
      sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_Document);
      sub_1BDD86E30((uint64_t)v8, &qword_1EF52D920);
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      swift_release();
      swift_release();
      v26 = 0;
      return v26 & 1;
    }
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v14, &qword_1EF52D920);
    sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_Document);
LABEL_6:
    sub_1BDD86E30((uint64_t)v8, &qword_1EF5306B0);
    goto LABEL_9;
  }
  swift_retain();
  swift_retain();
  sub_1BDD86E30((uint64_t)v14, &qword_1EF52D920);
  v20 = a1;
  if (v19(v18, 1, v3) != 1)
    goto LABEL_6;
  sub_1BDD86E30((uint64_t)v8, &qword_1EF52D920);
LABEL_8:
  v23 = (_BYTE *)(v20
                + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__isInitialHeartbeat);
  swift_beginAccess();
  LOBYTE(v23) = *v23;
  swift_release();
  v24 = (char *)(v16
               + OBJC_IVAR____TtCV9Coherence14Peer_HeartbeatP33_9CC68E4D751A0306394090738A44396513_StorageClass__isInitialHeartbeat);
  swift_beginAccess();
  v25 = *v24;
  swift_release();
  v26 = v23 ^ v25 ^ 1;
  return v26 & 1;
}

uint64_t sub_1BE11C26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52BEC8, &qword_1EF530420, a2);
}

uint64_t sub_1BE11C288()
{
  return 0x6165482E72656550;
}

uint64_t sub_1BE11C2AC(uint64_t a1, uint64_t a2)
{
  return sub_1BE11B9D0(a1, a2);
}

uint64_t sub_1BE11C2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Peer_Heartbeat, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE11BD20);
}

uint64_t sub_1BE11C2E4()
{
  sub_1BDD8422C(&qword_1EF5306A8, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C35A0);
  return sub_1BE1B212C();
}

uint64_t sub_1BE11C334(uint64_t a1)
{
  return sub_1BDE38BE4(a1, type metadata accessor for Peer_Heartbeat, sub_1BE11BF08) & 1;
}

uint64_t sub_1BE11C35C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BEC0, (uint64_t)qword_1EF5493B8, a1);
}

uint64_t sub_1BE11C378()
{
  sub_1BDD8422C(&qword_1EF530638, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C35D8);
  return sub_1BE1B2288();
}

uint64_t sub_1BE11C3B8()
{
  sub_1BDD8422C(&qword_1EF530638, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C35D8);
  return sub_1BE1B2294();
}

uint64_t sub_1BE11C408()
{
  sub_1BDD8422C(&qword_1EF5306A8, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C35A0);
  return sub_1BE1B2120();
}

uint64_t sub_1BE11C460(uint64_t a1)
{
  return sub_1BE11E338(a1, qword_1EF5493D0, (uint64_t)"assets", 6);
}

uint64_t sub_1BE11C478(uint64_t a1)
{
  return sub_1BDD8CC18(a1, (void (*)(_QWORD))type metadata accessor for Peer_MergeRequest._StorageClass, &OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf, &qword_1EF530428);
}

uint64_t sub_1BE11C49C()
{
  return sub_1BDD96A3C(&OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf, &qword_1EF52F958);
}

uint64_t sub_1BE11C4B0()
{
  return type metadata accessor for Peer_MergeRequest._StorageClass(0);
}

uint64_t type metadata accessor for Peer_MergeRequest._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530488);
}

void sub_1BE11C4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDDD2FB0(a1, a2, a3, &qword_1EF530498, (void (*)(uint64_t))type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
}

uint64_t type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530510);
}

uint64_t sub_1BE11C4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(type metadata accessor for Peer_MergeRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v12 = *(_QWORD *)(v3 + v11);
    type metadata accessor for Peer_MergeRequest._StorageClass(0);
    v13 = swift_allocObject();
    v25 = v4;
    v14 = v13;
    v24 = a1;
    v15 = a2;
    v16 = a3;
    v17 = v13
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v18 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    v19 = v12
        + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v19, (uint64_t)v10, &qword_1EF52F958);
    swift_beginAccess();
    v20 = v17;
    a3 = v16;
    a2 = v15;
    a1 = v24;
    sub_1BDDA1AF4((uint64_t)v10, v20, &qword_1EF52F958);
    swift_endAccess();
    *(_QWORD *)(v3 + v11) = v14;
    swift_release();
  }
  v21 = swift_retain();
  sub_1BE11C69C(v21, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BE11C69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t result;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t *v90;
  void (*v91)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;

  v226 = a1;
  v228 = a4;
  v217 = type metadata accessor for Peer_RequestAssets(0);
  v214 = *(_QWORD *)(v217 - 8);
  v6 = MEMORY[0x1E0C80A78](v217);
  v189 = (uint64_t)&v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v184 = (uint64_t)&v177 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5306B8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v213 = (uint64_t)&v177 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v220 = (char *)&v177 - v12;
  v13 = type metadata accessor for Peer_KeyPaths(0);
  v14 = *(_QWORD *)(v13 - 8);
  v221 = v13;
  v222 = v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v185 = (uint64_t)&v177 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v198 = (char *)&v177 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v188 = (uint64_t)&v177 - v20;
  MEMORY[0x1E0C80A78](v19);
  v197 = (char *)&v177 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301C8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v201 = (uint64_t)&v177 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v210 = (char *)&v177 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v200 = (uint64_t)&v177 - v28;
  MEMORY[0x1E0C80A78](v27);
  v209 = (char *)&v177 - v29;
  v212 = type metadata accessor for Proto_Document(0);
  v216 = *(_QWORD *)(v212 - 8);
  v30 = MEMORY[0x1E0C80A78](v212);
  v187 = (uint64_t)&v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v196 = (char *)&v177 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D920);
  v34 = MEMORY[0x1E0C80A78](v33);
  v199 = (uint64_t)&v177 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v203 = (char *)&v177 - v36;
  v211 = type metadata accessor for Peer_RequestVersion(0);
  v215 = *(_QWORD *)(v211 - 8);
  v37 = MEMORY[0x1E0C80A78](v211);
  v186 = (uint64_t)&v177 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v195 = (char *)&v177 - v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v41 = MEMORY[0x1E0C80A78](v40);
  v208 = (uint64_t)&v177 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x1E0C80A78](v41);
  v207 = (uint64_t)&v177 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v206 = (uint64_t)&v177 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v205 = (uint64_t)&v177 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v219 = (uint64_t)&v177 - v50;
  v51 = MEMORY[0x1E0C80A78](v49);
  v218 = (uint64_t)&v177 - v52;
  MEMORY[0x1E0C80A78](v51);
  v204 = (uint64_t)&v177 - v53;
  v54 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  v224 = *(_QWORD *)(v54 - 8);
  v225 = v54;
  v55 = MEMORY[0x1E0C80A78](v54);
  v192 = (uint64_t)&v177 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = MEMORY[0x1E0C80A78](v55);
  v194 = (uint64_t)&v177 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v191 = (uint64_t)&v177 - v60;
  v61 = MEMORY[0x1E0C80A78](v59);
  v193 = (uint64_t)&v177 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v190 = (uint64_t)&v177 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v67 = (char *)&v177 - v66;
  v68 = MEMORY[0x1E0C80A78](v65);
  v70 = (char *)&v177 - v69;
  v71 = MEMORY[0x1E0C80A78](v68);
  v73 = (char *)&v177 - v72;
  v74 = MEMORY[0x1E0C80A78](v71);
  v76 = (char *)&v177 - v75;
  MEMORY[0x1E0C80A78](v74);
  v78 = (char *)&v177 - v77;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5306C0);
  v80 = MEMORY[0x1E0C80A78](v79);
  v82 = (char *)&v177 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v80);
  v84 = (char *)&v177 - v83;
  v223 = v226
       + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v85 = v227;
  v227 = a3;
  result = sub_1BE1B2144();
  if (!v85)
  {
    v183 = v82;
    v202 = v84;
    v180 = v78;
    v178 = v76;
    v181 = v73;
    v179 = v70;
    v182 = v67;
    v226 = a2;
    v88 = &qword_1EF52F958;
    v89 = (uint64_t)v220;
    while (1)
    {
      if ((v87 & 1) != 0)
        return result;
      v90 = v88;
      switch(result)
      {
        case 1:
          v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v215 + 56);
          v92 = v211;
          v91(v202, 1, 1, v211);
          v93 = v204;
          sub_1BDD86DEC(v223, v204, v90);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v93, 1, v225) == 1)
          {
            sub_1BDD86E30(v93, v90);
LABEL_21:
            v113 = (uint64_t)v202;
            goto LABEL_22;
          }
          v108 = v93;
          v109 = (uint64_t)v180;
          sub_1BDDA2E8C(v108, (uint64_t)v180, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
          sub_1BE1B2150();
          v110 = (uint64_t)v195;
          v111 = v109;
          v112 = (uint64_t)v178;
          sub_1BDDA2E8C(v111, (uint64_t)v178, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
          if (swift_getEnumCaseMultiPayload())
          {
            sub_1BDD9C3E0(v112, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            v92 = v211;
            goto LABEL_21;
          }
          v175 = (uint64_t)v202;
          sub_1BDD86E30((uint64_t)v202, &qword_1EF5306C0);
          v176 = v112;
          v113 = v175;
          sub_1BDDA2E8C(v176, v110, type metadata accessor for Peer_RequestVersion);
          sub_1BDDA2E8C(v110, v175, type metadata accessor for Peer_RequestVersion);
          v92 = v211;
          v91((char *)v175, 0, 1, v211);
LABEL_22:
          sub_1BDD8422C(&qword_1EF5305E8, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C31A0);
          v114 = v113;
          v115 = v92;
          sub_1BE1B2258();
          v116 = (uint64_t)v183;
          sub_1BDDA2EF0(v114, (uint64_t)v183, &qword_1EF5306C0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48))(v116, 1, v115) != 1)
          {
            v135 = v116;
            v136 = v186;
            sub_1BDDA2E8C(v135, v186, type metadata accessor for Peer_RequestVersion);
            v137 = v136;
            v138 = v218;
            sub_1BDDA2E8C(v137, v218, type metadata accessor for Peer_RequestVersion);
            v139 = v225;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v224 + 56))(v138, 0, 1, v139);
            v140 = v138;
            v141 = v219;
            v88 = v90;
            sub_1BDDA2EF0(v140, v219, v90);
            v142 = v223;
            swift_beginAccess();
            v143 = v141;
            v144 = v142;
            v145 = v90;
            goto LABEL_49;
          }
          sub_1BDD86E30(v116, &qword_1EF5306C0);
          v88 = v90;
LABEL_6:
          result = sub_1BE1B2144();
          break;
        case 2:
          v94 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v216 + 56);
          v95 = (uint64_t)v203;
          v96 = v212;
          v94(v203, 1, 1, v212);
          v97 = v205;
          sub_1BDD86DEC(v223, v205, v88);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v97, 1, v225) == 1)
          {
            sub_1BDD86E30(v97, v88);
          }
          else
          {
            v117 = v97;
            v118 = (uint64_t)v181;
            sub_1BDDA2E8C(v117, (uint64_t)v181, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v119 = (uint64_t)v196;
            v120 = v118;
            v121 = (uint64_t)v179;
            sub_1BDDA2E8C(v120, (uint64_t)v179, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1BDD86E30(v95, &qword_1EF52D920);
              sub_1BDDA2E8C(v121, v119, type metadata accessor for Proto_Document);
              sub_1BDDA2E8C(v119, v95, type metadata accessor for Proto_Document);
              v96 = v212;
              v94((char *)v95, 0, 1, v212);
            }
            else
            {
              sub_1BDD9C3E0(v121, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
              v96 = v212;
            }
          }
          sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
          v146 = v96;
          sub_1BE1B2258();
          v147 = v199;
          sub_1BDDA2EF0(v95, v199, &qword_1EF52D920);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v216 + 48))(v147, 1, v146) != 1)
          {
            v148 = v147;
            v149 = v187;
            sub_1BDDA2E8C(v148, v187, type metadata accessor for Proto_Document);
            v150 = v149;
            v151 = v218;
            sub_1BDDA2E8C(v150, v218, type metadata accessor for Proto_Document);
            v152 = v225;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v224 + 56))(v151, 0, 1, v152);
            goto LABEL_48;
          }
          sub_1BDD86E30(v147, &qword_1EF52D920);
          goto LABEL_6;
        case 3:
          v98 = v221;
          v99 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v222 + 56);
          v100 = (uint64_t)v209;
          v99(v209, 1, 1, v221);
          v101 = v206;
          sub_1BDD86DEC(v223, v206, v88);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v101, 1, v225) == 1)
          {
            sub_1BDD86E30(v101, v88);
          }
          else
          {
            v122 = v101;
            v123 = (uint64_t)v182;
            sub_1BDDA2E8C(v122, (uint64_t)v182, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v124 = (uint64_t)v197;
            v125 = v123;
            v126 = v190;
            sub_1BDDA2E8C(v125, v190, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 2)
            {
              sub_1BDD86E30(v100, &qword_1EF5301C8);
              sub_1BDDA2E8C(v126, v124, type metadata accessor for Peer_KeyPaths);
              sub_1BDDA2E8C(v124, v100, type metadata accessor for Peer_KeyPaths);
              v98 = v221;
              v99((char *)v100, 0, 1, v221);
            }
            else
            {
              sub_1BDD9C3E0(v126, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
              v98 = v221;
            }
          }
          sub_1BDD8422C(&qword_1EF5305C8, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3038);
          v153 = v98;
          sub_1BE1B2258();
          v154 = v200;
          sub_1BDDA2EF0(v100, v200, &qword_1EF5301C8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48))(v154, 1, v153) == 1)
            goto LABEL_4;
          v155 = v154;
          v156 = v188;
          sub_1BDDA2E8C(v155, v188, type metadata accessor for Peer_KeyPaths);
          v157 = v156;
          v158 = v218;
          sub_1BDDA2E8C(v157, v218, type metadata accessor for Peer_KeyPaths);
          v159 = v225;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v224 + 56))(v158, 0, 1, v159);
          goto LABEL_43;
        case 4:
          v102 = v221;
          v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v222 + 56);
          v104 = (uint64_t)v210;
          v103(v210, 1, 1, v221);
          v105 = v207;
          sub_1BDD86DEC(v223, v207, v88);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v105, 1, v225) == 1)
          {
            sub_1BDD86E30(v105, v88);
          }
          else
          {
            v127 = v105;
            v128 = v193;
            sub_1BDDA2E8C(v127, v193, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v129 = (uint64_t)v198;
            v130 = v128;
            v131 = v191;
            sub_1BDDA2E8C(v130, v191, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 3)
            {
              sub_1BDD86E30(v104, &qword_1EF5301C8);
              sub_1BDDA2E8C(v131, v129, type metadata accessor for Peer_KeyPaths);
              sub_1BDDA2E8C(v129, v104, type metadata accessor for Peer_KeyPaths);
              v102 = v221;
              v103((char *)v104, 0, 1, v221);
            }
            else
            {
              sub_1BDD9C3E0(v131, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
              v102 = v221;
            }
          }
          sub_1BDD8422C(&qword_1EF5305C8, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3038);
          v160 = v102;
          sub_1BE1B2258();
          v154 = v201;
          sub_1BDDA2EF0(v104, v201, &qword_1EF5301C8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48))(v154, 1, v160) == 1)
          {
LABEL_4:
            sub_1BDD86E30(v154, &qword_1EF5301C8);
          }
          else
          {
            v161 = v154;
            v162 = v185;
            sub_1BDDA2E8C(v161, v185, type metadata accessor for Peer_KeyPaths);
            v163 = v162;
            v158 = v218;
            sub_1BDDA2E8C(v163, v218, type metadata accessor for Peer_KeyPaths);
            v164 = v225;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v224 + 56))(v158, 0, 1, v164);
LABEL_43:
            v165 = v158;
            v166 = v219;
            sub_1BDDA2EF0(v165, v219, v88);
            v167 = v223;
            swift_beginAccess();
            sub_1BDDA1AF4(v166, v167, v88);
            swift_endAccess();
          }
          v89 = (uint64_t)v220;
          goto LABEL_6;
        case 5:
          v106 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56);
          v106(v89, 1, 1, v217);
          v107 = v208;
          sub_1BDD86DEC(v223, v208, v88);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v107, 1, v225) == 1)
          {
            sub_1BDD86E30(v107, v88);
          }
          else
          {
            v132 = v194;
            sub_1BDDA2E8C(v107, v194, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v133 = v192;
            sub_1BDDA2E8C(v132, v192, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 4)
            {
              sub_1BDD86E30(v89, &qword_1EF5306B8);
              v134 = v184;
              sub_1BDDA2E8C(v133, v184, type metadata accessor for Peer_RequestAssets);
              sub_1BDDA2E8C(v134, v89, type metadata accessor for Peer_RequestAssets);
              v106(v89, 0, 1, v217);
            }
            else
            {
              sub_1BDD9C3E0(v133, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
            }
          }
          sub_1BDD8422C(&qword_1EF5305A8, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2ED0);
          v168 = v217;
          sub_1BE1B2258();
          v169 = v213;
          sub_1BDDA2EF0(v89, v213, &qword_1EF5306B8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48))(v169, 1, v168) == 1)
          {
            sub_1BDD86E30(v213, &qword_1EF5306B8);
          }
          else
          {
            v170 = v189;
            sub_1BDDA2E8C(v213, v189, type metadata accessor for Peer_RequestAssets);
            v151 = v218;
            sub_1BDDA2E8C(v170, v218, type metadata accessor for Peer_RequestAssets);
            v171 = v225;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v224 + 56))(v151, 0, 1, v171);
LABEL_48:
            v172 = v151;
            v173 = v219;
            sub_1BDDA2EF0(v172, v219, v88);
            v174 = v223;
            swift_beginAccess();
            v143 = v173;
            v144 = v174;
            v145 = v88;
LABEL_49:
            sub_1BDDA1AF4(v143, v144, v145);
            swift_endAccess();
          }
          goto LABEL_6;
        default:
          goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t sub_1BE11DAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a3;
  v22 = a4;
  v20 = a2;
  v17 = type metadata accessor for Peer_RequestAssets(0);
  MEMORY[0x1E0C80A78](v17);
  v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Peer_KeyPaths(0);
  v6 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for Peer_RequestVersion(0);
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v12, (uint64_t)v11, &qword_1EF52F958);
  v13 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13);
  if ((_DWORD)result != 1)
  {
    v15 = (char *)&loc_1BE11DCA0 + 4 * byte_1BE1C2A77[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

BOOL sub_1BE11DE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v25 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5306C8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F958);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  v16 = a1
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v15, &qword_1EF52F958);
  v17 = a2
      + OBJC_IVAR____TtCV9Coherence17Peer_MergeRequestP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BDD86DEC((uint64_t)v15, (uint64_t)v9, &qword_1EF52F958);
  sub_1BDD86DEC(v17, v18, &qword_1EF52F958);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1EF52F958);
    if (v19(v18, 1, v4) == 1)
    {
      sub_1BDD86E30((uint64_t)v9, &qword_1EF52F958);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1BDD86DEC((uint64_t)v9, (uint64_t)v13, &qword_1EF52F958);
  if (v19(v18, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1EF52F958);
    sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
LABEL_6:
    sub_1BDD86E30((uint64_t)v9, &qword_1EF5306C8);
    return 0;
  }
  v20 = v25;
  sub_1BDDA2E8C(v18, v25, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  sub_1BE125290((uint64_t)v13, v20);
  v22 = v21;
  sub_1BDD9C3E0(v20, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v15, &qword_1EF52F958);
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v9, &qword_1EF52F958);
  return (v22 & 1) != 0;
}

uint64_t sub_1BE11E134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52BED8, &qword_1EF530428, a2);
}

unint64_t sub_1BE11E150()
{
  return 0xD000000000000011;
}

uint64_t sub_1BE11E16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BE11C4F4(a1, a2, a3);
}

uint64_t sub_1BE11E180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Peer_MergeRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE11DAA8);
}

uint64_t sub_1BE11E1A4()
{
  sub_1BDD8422C(&qword_1EF5306A0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3438);
  return sub_1BE1B212C();
}

uint64_t sub_1BE11E1F4(uint64_t a1)
{
  return sub_1BDE38BE4(a1, type metadata accessor for Peer_MergeRequest, (uint64_t (*)(uint64_t, uint64_t))sub_1BE11DE7C) & 1;
}

uint64_t sub_1BE11E21C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BED0, (uint64_t)qword_1EF5493D0, a1);
}

uint64_t sub_1BE11E238()
{
  sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
  return sub_1BE1B2288();
}

uint64_t sub_1BE11E278()
{
  sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
  return sub_1BE1B2294();
}

uint64_t sub_1BE11E2C8()
{
  sub_1BDD8422C(&qword_1EF5306A0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3438);
  return sub_1BE1B2120();
}

uint64_t sub_1BE11E320(uint64_t a1)
{
  return sub_1BE11E338(a1, qword_1EF5493E8, (uint64_t)"asset", 5);
}

uint64_t sub_1BE11E338(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;

  v5 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BE1B6B50;
  v11 = (_QWORD *)(v10 + v9);
  v12 = (char *)v11 + *(int *)(v6 + 48);
  *v11 = 1;
  *(_QWORD *)v12 = "version";
  *((_QWORD *)v12 + 1) = 7;
  v12[16] = 2;
  v13 = *MEMORY[0x1E0D3EF08];
  v14 = sub_1BE1B236C();
  v15 = *(void (**)(void))(*(_QWORD *)(v14 - 8) + 104);
  ((void (*)(char *, uint64_t, uint64_t))v15)(v12, v13, v14);
  v16 = (char *)v11 + v8 + *(int *)(v6 + 48);
  *(_QWORD *)((char *)v11 + v8) = 2;
  *(_QWORD *)v16 = "referencesSince";
  *((_QWORD *)v16 + 1) = 15;
  v16[16] = 2;
  v15();
  v17 = (_QWORD *)((char *)v11 + 2 * v8);
  v18 = (char *)v17 + *(int *)(v6 + 48);
  *v17 = 3;
  *(_QWORD *)v18 = "containsReferences";
  *((_QWORD *)v18 + 1) = 18;
  v18[16] = 2;
  v15();
  v19 = (_QWORD *)((char *)v11 + 3 * v8);
  v20 = (char *)v19 + *(int *)(v6 + 48);
  *v19 = 4;
  *(_QWORD *)v20 = "references";
  *((_QWORD *)v20 + 1) = 10;
  v20[16] = 2;
  v15();
  v21 = (uint64_t)v11 + 4 * v8 + *(int *)(v6 + 48);
  *(_QWORD *)((char *)v11 + 4 * v8) = 5;
  *(_QWORD *)v21 = a3;
  *(_QWORD *)(v21 + 8) = a4;
  *(_BYTE *)(v21 + 16) = 2;
  v15();
  return sub_1BE1B2378();
}

uint64_t sub_1BE11E538(uint64_t a1)
{
  return sub_1BDD8CC18(a1, (void (*)(_QWORD))type metadata accessor for Peer_MergeResponse._StorageClass, &OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf, &qword_1EF530430);
}

uint64_t sub_1BE11E55C()
{
  return sub_1BDD96A3C(&OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf, &qword_1EF52F950);
}

uint64_t sub_1BE11E570()
{
  return type metadata accessor for Peer_MergeResponse._StorageClass(0);
}

uint64_t type metadata accessor for Peer_MergeResponse._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF5304A8);
}

void sub_1BE11E58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDDD2FB0(a1, a2, a3, &qword_1EF5304B8, (void (*)(uint64_t))type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
}

uint64_t type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF5304F0);
}

uint64_t sub_1BE11E5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(type metadata accessor for Peer_MergeResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v12 = *(_QWORD *)(v3 + v11);
    type metadata accessor for Peer_MergeResponse._StorageClass(0);
    v13 = swift_allocObject();
    v25 = v4;
    v14 = v13;
    v24 = a1;
    v15 = a2;
    v16 = a3;
    v17 = v13
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    v18 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    v19 = v12
        + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v19, (uint64_t)v10, &qword_1EF52F950);
    swift_beginAccess();
    v20 = v17;
    a3 = v16;
    a2 = v15;
    a1 = v24;
    sub_1BDDA1AF4((uint64_t)v10, v20, &qword_1EF52F950);
    swift_endAccess();
    *(_QWORD *)(v3 + v11) = v14;
    swift_release();
  }
  v21 = swift_retain();
  sub_1BE11E75C(v21, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BE11E75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t result;
  char v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;

  v237 = a1;
  v225 = type metadata accessor for Peer_RespondAsset(0);
  v223 = *(_QWORD *)(v225 - 8);
  v7 = MEMORY[0x1E0C80A78](v225);
  v200 = (uint64_t)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v195 = (uint64_t)&v189 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301C0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v222 = (uint64_t)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v230 = (char *)&v189 - v13;
  v229 = type metadata accessor for Peer_KeyPaths(0);
  v233 = *(_QWORD *)(v229 - 8);
  v14 = MEMORY[0x1E0C80A78](v229);
  v196 = (uint64_t)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v211 = (char *)&v189 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v199 = (uint64_t)&v189 - v19;
  MEMORY[0x1E0C80A78](v18);
  v210 = (char *)&v189 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5301C8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v213 = (uint64_t)&v189 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v221 = (char *)&v189 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v212 = (uint64_t)&v189 - v27;
  MEMORY[0x1E0C80A78](v26);
  v220 = (char *)&v189 - v28;
  v228 = type metadata accessor for Proto_Document(0);
  v232 = *(_QWORD *)(v228 - 8);
  v29 = MEMORY[0x1E0C80A78](v228);
  v198 = (uint64_t)&v189 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v209 = (char *)&v189 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v197 = (uint64_t)&v189 - v34;
  MEMORY[0x1E0C80A78](v33);
  v208 = (char *)&v189 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v37 = MEMORY[0x1E0C80A78](v36);
  v219 = (uint64_t)&v189 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x1E0C80A78](v37);
  v218 = (uint64_t)&v189 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v217 = (uint64_t)&v189 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v216 = (uint64_t)&v189 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v227 = (uint64_t)&v189 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v226 = (uint64_t)&v189 - v48;
  MEMORY[0x1E0C80A78](v47);
  v215 = (uint64_t)&v189 - v49;
  v50 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  v235 = *(_QWORD *)(v50 - 8);
  v236 = v50;
  v51 = MEMORY[0x1E0C80A78](v50);
  v204 = (uint64_t)&v189 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x1E0C80A78](v51);
  v207 = (uint64_t)&v189 - v54;
  v55 = MEMORY[0x1E0C80A78](v53);
  v203 = (uint64_t)&v189 - v56;
  v57 = MEMORY[0x1E0C80A78](v55);
  v206 = (uint64_t)&v189 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v202 = (uint64_t)&v189 - v60;
  v61 = MEMORY[0x1E0C80A78](v59);
  v205 = (uint64_t)&v189 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v201 = (uint64_t)&v189 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v67 = (char *)&v189 - v66;
  v68 = MEMORY[0x1E0C80A78](v65);
  v70 = (char *)&v189 - v69;
  MEMORY[0x1E0C80A78](v68);
  v72 = (char *)&v189 - v71;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52D920);
  v74 = MEMORY[0x1E0C80A78](v73);
  v76 = (char *)&v189 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = MEMORY[0x1E0C80A78](v74);
  v79 = (char *)&v189 - v78;
  v80 = MEMORY[0x1E0C80A78](v77);
  v82 = (char *)&v189 - v81;
  MEMORY[0x1E0C80A78](v80);
  v224 = (uint64_t)&v189 - v83;
  v234 = v237
       + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v84 = v238;
  v238 = a3;
  result = sub_1BE1B2144();
  if (!v84)
  {
    v193 = v82;
    v194 = v76;
    v214 = v79;
    v191 = v72;
    v190 = v70;
    v192 = v67;
    v237 = a2;
    v87 = a4;
    v88 = (uint64_t)v230;
    v231 = a4;
    while ((v86 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v232 + 56);
          v90 = v228;
          v89(v224, 1, 1, v228);
          v91 = v215;
          sub_1BDD86DEC(v234, v215, &qword_1EF52F950);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48))(v91, 1, v236) == 1)
          {
            sub_1BDD86E30(v91, &qword_1EF52F950);
            v92 = v224;
          }
          else
          {
            v107 = v91;
            v108 = (uint64_t)v191;
            sub_1BDDA2E8C(v107, (uint64_t)v191, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v109 = (uint64_t)v208;
            v110 = v108;
            v111 = (uint64_t)v190;
            sub_1BDDA2E8C(v110, (uint64_t)v190, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload())
            {
              sub_1BDD9C3E0(v111, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
              v90 = v228;
              v92 = v224;
            }
            else
            {
              v177 = v224;
              sub_1BDD86E30(v224, &qword_1EF52D920);
              v178 = v111;
              v92 = v177;
              sub_1BDDA2E8C(v178, v109, type metadata accessor for Proto_Document);
              sub_1BDDA2E8C(v109, v177, type metadata accessor for Proto_Document);
              v90 = v228;
              v89(v177, 0, 1, v228);
            }
          }
          sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
          v179 = v92;
          v180 = v90;
          sub_1BE1B2258();
          v156 = (uint64_t)v193;
          sub_1BDDA2EF0(v179, (uint64_t)v193, &qword_1EF52D920);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v232 + 48))(v156, 1, v180) == 1)
            goto LABEL_4;
          v181 = v156;
          v182 = v197;
          sub_1BDDA2E8C(v181, v197, type metadata accessor for Proto_Document);
          v183 = v182;
          v184 = v226;
          sub_1BDDA2E8C(v183, v226, type metadata accessor for Proto_Document);
          v185 = v236;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v235 + 56))(v184, 0, 1, v185);
          v186 = v184;
          v187 = v227;
          sub_1BDDA2EF0(v186, v227, &qword_1EF52F950);
          v188 = v234;
          swift_beginAccess();
          v165 = v187;
          v166 = v188;
          goto LABEL_50;
        case 2:
          v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v233 + 56);
          v94 = (uint64_t)v220;
          v95 = v229;
          v93(v220, 1, 1, v229);
          v96 = v216;
          sub_1BDD86DEC(v234, v216, &qword_1EF52F950);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48))(v96, 1, v236) == 1)
          {
            sub_1BDD86E30(v96, &qword_1EF52F950);
          }
          else
          {
            v112 = v96;
            v113 = (uint64_t)v192;
            sub_1BDDA2E8C(v112, (uint64_t)v192, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v114 = (uint64_t)v210;
            v115 = v113;
            v116 = v201;
            sub_1BDDA2E8C(v115, v201, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1BDD86E30(v94, &qword_1EF5301C8);
              sub_1BDDA2E8C(v116, v114, type metadata accessor for Peer_KeyPaths);
              sub_1BDDA2E8C(v114, v94, type metadata accessor for Peer_KeyPaths);
              v95 = v229;
              v93((char *)v94, 0, 1, v229);
            }
            else
            {
              sub_1BDD9C3E0(v116, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
              v95 = v229;
            }
          }
          sub_1BDD8422C(&qword_1EF5305C8, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3038);
          v134 = v95;
          sub_1BE1B2258();
          v135 = v212;
          sub_1BDDA2EF0(v94, v212, &qword_1EF5301C8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48))(v135, 1, v134) == 1)
          {
            sub_1BDD86E30(v135, &qword_1EF5301C8);
          }
          else
          {
            v136 = v135;
            v137 = v199;
            sub_1BDDA2E8C(v136, v199, type metadata accessor for Peer_KeyPaths);
            v138 = v137;
            v139 = v226;
            sub_1BDDA2E8C(v138, v226, type metadata accessor for Peer_KeyPaths);
            v140 = v236;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v235 + 56))(v139, 0, 1, v140);
            v141 = v139;
            v142 = v227;
            sub_1BDDA2EF0(v141, v227, &qword_1EF52F950);
            v143 = v234;
            swift_beginAccess();
            sub_1BDDA1AF4(v142, v143, &qword_1EF52F950);
            swift_endAccess();
          }
          v87 = v231;
          goto LABEL_6;
        case 3:
          v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v233 + 56);
          v98 = (uint64_t)v221;
          v99 = v229;
          v97(v221, 1, 1, v229);
          v100 = v217;
          sub_1BDD86DEC(v234, v217, &qword_1EF52F950);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48))(v100, 1, v236) == 1)
          {
            sub_1BDD86E30(v100, &qword_1EF52F950);
          }
          else
          {
            v117 = v100;
            v118 = v205;
            sub_1BDDA2E8C(v117, v205, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v119 = (uint64_t)v211;
            v120 = v118;
            v121 = v202;
            sub_1BDDA2E8C(v120, v202, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 2)
            {
              sub_1BDD86E30(v98, &qword_1EF5301C8);
              sub_1BDDA2E8C(v121, v119, type metadata accessor for Peer_KeyPaths);
              sub_1BDDA2E8C(v119, v98, type metadata accessor for Peer_KeyPaths);
              v99 = v229;
              v97((char *)v98, 0, 1, v229);
            }
            else
            {
              sub_1BDD9C3E0(v121, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
              v99 = v229;
            }
          }
          sub_1BDD8422C(&qword_1EF5305C8, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3038);
          v144 = v99;
          sub_1BE1B2258();
          v145 = v213;
          sub_1BDDA2EF0(v98, v213, &qword_1EF5301C8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48))(v145, 1, v144) == 1)
          {
            sub_1BDD86E30(v145, &qword_1EF5301C8);
          }
          else
          {
            v146 = v145;
            v147 = v196;
            sub_1BDDA2E8C(v146, v196, type metadata accessor for Peer_KeyPaths);
            v148 = v147;
            v149 = v226;
            sub_1BDDA2E8C(v148, v226, type metadata accessor for Peer_KeyPaths);
            v150 = v236;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v235 + 56))(v149, 0, 1, v150);
            v151 = v149;
            v152 = v227;
            sub_1BDDA2EF0(v151, v227, &qword_1EF52F950);
            v153 = v234;
            swift_beginAccess();
            sub_1BDDA1AF4(v152, v153, &qword_1EF52F950);
            swift_endAccess();
          }
          v88 = (uint64_t)v230;
          v87 = v231;
          goto LABEL_6;
        case 4:
          v101 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v232 + 56);
          v102 = v228;
          v101(v214, 1, 1, v228);
          v103 = v218;
          sub_1BDD86DEC(v234, v218, &qword_1EF52F950);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48))(v103, 1, v236) == 1)
          {
            sub_1BDD86E30(v103, &qword_1EF52F950);
          }
          else
          {
            v122 = v103;
            v123 = v206;
            sub_1BDDA2E8C(v122, v206, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v124 = (uint64_t)v209;
            v125 = v123;
            v126 = v203;
            sub_1BDDA2E8C(v125, v203, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 3)
            {
              v127 = v87;
              v128 = (uint64_t)v214;
              sub_1BDD86E30((uint64_t)v214, &qword_1EF52D920);
              v129 = v126;
              v130 = v128;
              v87 = v127;
              sub_1BDDA2E8C(v129, v124, type metadata accessor for Proto_Document);
              sub_1BDDA2E8C(v124, v130, type metadata accessor for Proto_Document);
              v102 = v228;
              v101((char *)v130, 0, 1, v228);
              goto LABEL_41;
            }
            sub_1BDD9C3E0(v126, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            v102 = v228;
          }
          v130 = (uint64_t)v214;
LABEL_41:
          sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
          v154 = v130;
          v155 = v102;
          sub_1BE1B2258();
          v156 = (uint64_t)v194;
          sub_1BDDA2EF0(v154, (uint64_t)v194, &qword_1EF52D920);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v232 + 48))(v156, 1, v155) == 1)
          {
LABEL_4:
            sub_1BDD86E30(v156, &qword_1EF52D920);
          }
          else
          {
            v157 = v156;
            v158 = v198;
            sub_1BDDA2E8C(v157, v198, type metadata accessor for Proto_Document);
            v159 = v158;
            v160 = v226;
            sub_1BDDA2E8C(v159, v226, type metadata accessor for Proto_Document);
            v161 = v236;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v235 + 56))(v160, 0, 1, v161);
            v162 = v160;
            v163 = v227;
            sub_1BDDA2EF0(v162, v227, &qword_1EF52F950);
            v164 = v234;
            swift_beginAccess();
            v165 = v163;
            v166 = v164;
LABEL_50:
            sub_1BDDA1AF4(v165, v166, &qword_1EF52F950);
            swift_endAccess();
          }
          v88 = (uint64_t)v230;
LABEL_6:
          result = sub_1BE1B2144();
          break;
        case 5:
          v104 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v223 + 56);
          v104(v88, 1, 1, v225);
          v105 = v219;
          sub_1BDD86DEC(v234, v219, &qword_1EF52F950);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48))(v105, 1, v236) == 1)
          {
            v106 = v88;
            sub_1BDD86E30(v105, &qword_1EF52F950);
          }
          else
          {
            v131 = v207;
            sub_1BDDA2E8C(v105, v207, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            sub_1BE1B2150();
            v106 = v88;
            v132 = v204;
            sub_1BDDA2E8C(v131, v204, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 4)
            {
              sub_1BDD86E30(v88, &qword_1EF5301C0);
              v133 = v195;
              sub_1BDDA2E8C(v132, v195, type metadata accessor for Peer_RespondAsset);
              sub_1BDDA2E8C(v133, v88, type metadata accessor for Peer_RespondAsset);
              v104(v88, 0, 1, v225);
            }
            else
            {
              sub_1BDD9C3E0(v132, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
            }
          }
          sub_1BDD8422C(&qword_1EF530588, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2D68);
          v167 = v225;
          sub_1BE1B2258();
          v168 = v222;
          sub_1BDDA2EF0(v106, v222, &qword_1EF5301C0);
          v88 = v106;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v223 + 48))(v168, 1, v167) == 1)
          {
            sub_1BDD86E30(v222, &qword_1EF5301C0);
          }
          else
          {
            v169 = v200;
            sub_1BDDA2E8C(v222, v200, type metadata accessor for Peer_RespondAsset);
            v170 = v169;
            v171 = v226;
            sub_1BDDA2E8C(v170, v226, type metadata accessor for Peer_RespondAsset);
            v172 = v236;
            swift_storeEnumTagMultiPayload();
            v173 = v172;
            v88 = v106;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v235 + 56))(v171, 0, 1, v173);
            v174 = v171;
            v175 = v227;
            sub_1BDDA2EF0(v174, v227, &qword_1EF52F950);
            v176 = v234;
            swift_beginAccess();
            sub_1BDDA1AF4(v175, v176, &qword_1EF52F950);
            swift_endAccess();
          }
          goto LABEL_6;
        default:
          goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t sub_1BE11FC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = a3;
  v19 = a4;
  v17 = a2;
  v15 = type metadata accessor for Peer_RespondAsset(0);
  MEMORY[0x1E0C80A78](v15);
  v16 = type metadata accessor for Peer_KeyPaths(0);
  v5 = MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for Proto_Document(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v11, (uint64_t)v10, &qword_1EF52F950);
  v12 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12);
  if ((_DWORD)result != 1)
  {
    v14 = (char *)&loc_1BE11FE18 + 4 * byte_1BE1C2A81[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

BOOL sub_1BE120008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v25 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5306F0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52F950);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  v16 = a1
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v15, &qword_1EF52F950);
  v17 = a2
      + OBJC_IVAR____TtCV9Coherence18Peer_MergeResponseP33_9CC68E4D751A0306394090738A44396513_StorageClass__taggedOneOf;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BDD86DEC((uint64_t)v15, (uint64_t)v9, &qword_1EF52F950);
  sub_1BDD86DEC(v17, v18, &qword_1EF52F950);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1EF52F950);
    if (v19(v18, 1, v4) == 1)
    {
      sub_1BDD86E30((uint64_t)v9, &qword_1EF52F950);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1BDD86DEC((uint64_t)v9, (uint64_t)v13, &qword_1EF52F950);
  if (v19(v18, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1EF52F950);
    sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
LABEL_6:
    sub_1BDD86E30((uint64_t)v9, &qword_1EF5306F0);
    return 0;
  }
  v20 = v25;
  sub_1BDDA2E8C(v18, v25, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  sub_1BE124D6C((uint64_t)v13, v20);
  v22 = v21;
  sub_1BDD9C3E0(v20, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v15, &qword_1EF52F950);
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v9, &qword_1EF52F950);
  return (v22 & 1) != 0;
}

uint64_t sub_1BE1202C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52BEE8, &qword_1EF530430, a2);
}

unint64_t sub_1BE1202DC()
{
  return 0xD000000000000012;
}

uint64_t sub_1BE1202F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BE11E5B4(a1, a2, a3);
}

uint64_t sub_1BE12030C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Peer_MergeResponse, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE11FC40);
}

uint64_t sub_1BE120330()
{
  sub_1BDD8422C(&qword_1EF530698, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C32D0);
  return sub_1BE1B212C();
}

uint64_t sub_1BE120380(uint64_t a1)
{
  return sub_1BDE38BE4(a1, type metadata accessor for Peer_MergeResponse, (uint64_t (*)(uint64_t, uint64_t))sub_1BE120008) & 1;
}

uint64_t sub_1BE1203A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BEE0, (uint64_t)qword_1EF5493E8, a1);
}

uint64_t sub_1BE1203C4()
{
  sub_1BDD8422C((unint64_t *)&qword_1EF52F960, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C3308);
  return sub_1BE1B2288();
}

uint64_t sub_1BE120404()
{
  sub_1BDD8422C((unint64_t *)&qword_1EF52F960, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C3308);
  return sub_1BE1B2294();
}

uint64_t sub_1BE120454()
{
  sub_1BDD8422C(&qword_1EF530698, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C32D0);
  return sub_1BE1B2120();
}

uint64_t sub_1BE1204AC()
{
  uint64_t v0;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549400);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549400);
  return sub_1BE1B2384();
}

uint64_t sub_1BE1204F4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_1BE1B2144();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t sub_1BE120534()
{
  return sub_1BE1B20D8();
}

unint64_t sub_1BE12054C()
{
  return 0xD000000000000013;
}

uint64_t sub_1BE120568()
{
  return sub_1BE1204F4();
}

uint64_t sub_1BE12057C()
{
  return sub_1BE120534();
}

uint64_t sub_1BE120590()
{
  sub_1BDD8422C(&qword_1EF5306E8, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C3168);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1205E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v2 = v1;
  v4 = sub_1BE1B20F0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v15 - v10, v2, v4);
  v12(v9, a1, v4);
  sub_1BDD8422C(&qword_1EF52C340, v5, MEMORY[0x1E0D3E9A8]);
  LOBYTE(v2) = sub_1BE1B2798();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return v2 & 1;
}

uint64_t sub_1BE1206EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BEF0, (uint64_t)qword_1EF549400, a1);
}

uint64_t sub_1BE120708()
{
  sub_1BDD8422C(&qword_1EF5305E8, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C31A0);
  return sub_1BE1B2288();
}

uint64_t sub_1BE120748()
{
  sub_1BDD8422C(&qword_1EF5305E8, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C31A0);
  return sub_1BE1B2294();
}

uint64_t sub_1BE120798()
{
  sub_1BDD8422C(&qword_1EF5306E8, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C3168);
  return sub_1BE1B2120();
}

uint64_t sub_1BE1207F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549418);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549418);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "constants";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "keyPaths";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE120940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for Peer_KeyPaths._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
  v2 = type metadata accessor for Proto_Constants(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths) = MEMORY[0x1E0DEE9D8];
  qword_1EF530438 = v0;
  return result;
}

uint64_t sub_1BE1209BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
  v7 = type metadata accessor for Proto_Constants(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths) = MEMORY[0x1E0DEE9D8];
  v9 = a1 + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v9, (uint64_t)v5, &qword_1ED6F3290);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F3290);
  swift_endAccess();
  v10 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths);
  swift_beginAccess();
  v11 = *v10;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v8 = v11;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BE120B28()
{
  uint64_t v0;

  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants, &qword_1ED6F3290);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BE120B70()
{
  return type metadata accessor for Peer_KeyPaths._StorageClass(0);
}

uint64_t type metadata accessor for Peer_KeyPaths._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF5304D0);
}

void sub_1BE120B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDE47F60(a1, a2, a3, &qword_1ED6F3848, (void (*)(uint64_t))type metadata accessor for Proto_Constants);
}

uint64_t sub_1BE120BAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE120BBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Peer_MergeResponse(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF5304E0);
}

uint64_t sub_1BE120BE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BE120C34 + 4 * byte_1BE1C2A86[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t type metadata accessor for Peer_KeyPaths(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530570);
}

uint64_t type metadata accessor for Peer_RespondAsset(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530560);
}

uint64_t sub_1BE120E14(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
      v3 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for Proto_Document(0);
      goto LABEL_4;
    case 1:
    case 2:
      v4 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for Peer_KeyPaths(0);
LABEL_4:
      result = swift_release();
      break;
    case 4:
      sub_1BDDB796C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      v5 = a1 + *(int *)(type metadata accessor for Peer_RespondAsset(0) + 24);
      v6 = sub_1BE1B20F0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BE120EF4()
{
  char *v0;

  v0 = (char *)sub_1BE120F3C + 4 * byte_1BE1C2A90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE120F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = type metadata accessor for Proto_Document(0);
  *(_QWORD *)(v0 + *(int *)(v3 + 20)) = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1BE1210D4(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BDD9C3E0(result, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
    v2 = (char *)&loc_1BE121134 + 4 * byte_1BE1C2A95[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1BE1212CC()
{
  char *v0;

  v0 = (char *)sub_1BE121318 + 4 * byte_1BE1C2A9A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE121318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = type metadata accessor for Proto_Document(0);
  *(_QWORD *)(v0 + *(int *)(v3 + 20)) = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1BE1213E8(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BDD9C3E0(result, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
    v2 = (char *)&loc_1BE12144C + 4 * byte_1BE1C2A9F[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BE12151C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for Proto_Document(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Peer_KeyPaths(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Peer_RespondAsset(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BE1215BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1215CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Peer_MergeRequest(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530500);
}

uint64_t sub_1BE1215F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BE121644 + 4 * byte_1BE1C2AA4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t type metadata accessor for Peer_RequestAssets(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530520);
}

uint64_t sub_1BE1217F0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_6;
    case 1:
      v4 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for Proto_Document(0);
      goto LABEL_4;
    case 2:
    case 3:
      v3 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for Peer_KeyPaths(0);
LABEL_4:
      result = swift_release();
      break;
    case 4:
      sub_1BDDB796C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      a1 += *(int *)(type metadata accessor for Peer_RequestAssets(0) + 20);
LABEL_6:
      v5 = sub_1BE1B20F0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BE1218D0()
{
  char *v0;

  v0 = (char *)sub_1BE121918 + 4 * byte_1BE1C2AAE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE121918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1BE121A90(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BDD9C3E0(result, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    v2 = (char *)&loc_1BE121AF0 + 4 * byte_1BE1C2AB3[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1BE121C68()
{
  char *v0;

  v0 = (char *)sub_1BE121CB4 + 4 * byte_1BE1C2AB8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE121CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = type metadata accessor for Peer_KeyPaths(0);
  *(_QWORD *)(v0 + *(int *)(v3 + 20)) = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1BE121D98(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BDD9C3E0(result, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
    v2 = (char *)&loc_1BE121DFC + 4 * byte_1BE1C2ABD[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BE121EE0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_1BE1B20F0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_Document(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Peer_KeyPaths(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Peer_RequestAssets(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1BE121F98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1BDDB6CA4(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BE1B20F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_1BE12203C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1BDDB796C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BE1B20F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_1BE122088(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = a2[1];
  sub_1BDDB6CA4(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *sub_1BE122100(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_1BDDB6CA4(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1BDDB796C(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_1BE122180(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_1BE1221DC(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BDDB796C(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1BE12224C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE122258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_1BE1B20F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BE1222E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BE1222EC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_1BE1B20F0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BE122368()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BE1B20F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BE1223DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1223EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Peer_Message(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530530);
}

uint64_t *sub_1BE122410(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = *a2;
        v7 = a2[1];
        sub_1BDDB6CA4(v8, v7);
        *a1 = v8;
        a1[1] = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 4u:
        v11 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        v12 = type metadata accessor for Proto_Document(0);
        *(uint64_t *)((char *)a1 + *(int *)(v12 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v13 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = type metadata accessor for Peer_Heartbeat(0);
        *(uint64_t *)((char *)a1 + *(int *)(v14 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v15 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = type metadata accessor for Peer_MergeRequest(0);
        *(uint64_t *)((char *)a1 + *(int *)(v16 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v16 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v17 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v18 = type metadata accessor for Peer_MergeResponse(0);
        *(uint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for Peer_Heartbeat(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530550);
}

uint64_t sub_1BE122664(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      return sub_1BDDB796C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    case 2:
    case 4:
      v3 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for Proto_Document(0);
      goto LABEL_7;
    case 5:
      v4 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for Peer_Heartbeat(0);
      goto LABEL_7;
    case 6:
      v5 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      type metadata accessor for Peer_MergeRequest(0);
      goto LABEL_7;
    case 7:
      v6 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      type metadata accessor for Peer_MergeResponse(0);
LABEL_7:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_1BE122768(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = *a2;
      v6 = a2[1];
      sub_1BDDB6CA4(v7, v6);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_8;
    case 2u:
    case 4u:
      v8 = sub_1BE1B20F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = type metadata accessor for Proto_Document(0);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 20));
      swift_retain();
      goto LABEL_8;
    case 5u:
      v10 = sub_1BE1B20F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = type metadata accessor for Peer_Heartbeat(0);
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
      swift_retain();
      goto LABEL_8;
    case 6u:
      v12 = sub_1BE1B20F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = type metadata accessor for Peer_MergeRequest(0);
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v13 + 20));
      swift_retain();
      goto LABEL_8;
    case 7u:
      v14 = sub_1BE1B20F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = type metadata accessor for Peer_MergeResponse(0);
      *(uint64_t *)((char *)a1 + *(int *)(v15 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 20));
      swift_retain();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_1BE12296C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_1BDD9C3E0((uint64_t)a1, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *a2;
        v6 = a2[1];
        sub_1BDDB6CA4(v7, v6);
        *a1 = v7;
        a1[1] = v6;
        goto LABEL_9;
      case 2u:
      case 4u:
        v8 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = type metadata accessor for Proto_Document(0);
        *(uint64_t *)((char *)a1 + *(int *)(v9 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 20));
        swift_retain();
        goto LABEL_9;
      case 5u:
        v10 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = type metadata accessor for Peer_Heartbeat(0);
        *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
        swift_retain();
        goto LABEL_9;
      case 6u:
        v12 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = type metadata accessor for Peer_MergeRequest(0);
        *(uint64_t *)((char *)a1 + *(int *)(v13 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v13 + 20));
        swift_retain();
        goto LABEL_9;
      case 7u:
        v14 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v15 = type metadata accessor for Peer_MergeResponse(0);
        *(uint64_t *)((char *)a1 + *(int *)(v15 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 20));
        swift_retain();
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1BE122B88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 4u:
      v6 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for Proto_Document(0);
      *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
      goto LABEL_7;
    case 5u:
      v8 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = type metadata accessor for Peer_Heartbeat(0);
      *(_QWORD *)&a1[*(int *)(v9 + 20)] = *(_QWORD *)&a2[*(int *)(v9 + 20)];
      goto LABEL_7;
    case 6u:
      v10 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = type metadata accessor for Peer_MergeRequest(0);
      *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
      goto LABEL_7;
    case 7u:
      v12 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = type metadata accessor for Peer_MergeResponse(0);
      *(_QWORD *)&a1[*(int *)(v13 + 20)] = *(_QWORD *)&a2[*(int *)(v13 + 20)];
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1BE122D54(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_1BDD9C3E0((uint64_t)a1, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 4u:
        v6 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = type metadata accessor for Proto_Document(0);
        *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
        goto LABEL_8;
      case 5u:
        v8 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = type metadata accessor for Peer_Heartbeat(0);
        *(_QWORD *)&a1[*(int *)(v9 + 20)] = *(_QWORD *)&a2[*(int *)(v9 + 20)];
        goto LABEL_8;
      case 6u:
        v10 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = type metadata accessor for Peer_MergeRequest(0);
        *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
        goto LABEL_8;
      case 7u:
        v12 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v13 = type metadata accessor for Peer_MergeResponse(0);
        *(_QWORD *)&a1[*(int *)(v13 + 20)] = *(_QWORD *)&a2[*(int *)(v13 + 20)];
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BE122F38()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for Proto_Document(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Peer_Heartbeat(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Peer_MergeRequest(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Peer_MergeResponse(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BE123008()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE123018()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE123028()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE123034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_1BE1B20F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BE1230BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BE1230C8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_1BE1B20F0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BE123144()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BE1B20F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BE1231C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1231D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1231E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(type metadata accessor for Peer_KeyPaths(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Peer_KeyPaths._StorageClass(0);
    swift_allocObject();
    v2 = swift_retain();
    *(_QWORD *)(v0 + v1) = sub_1BE1209BC(v2);
    swift_release();
  }
  swift_retain();
  sub_1BE1232AC();
  return swift_release();
}

uint64_t sub_1BE1232AC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto_Constants(0);
        sub_1BDD8422C(&qword_1ED6F3830, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C62C4);
        v4 = v3;
        sub_1BE1B2258();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    swift_beginAccess();
    type metadata accessor for Proto_KeyPath(0);
    sub_1BDD8422C(&qword_1ED6EFCD0, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C615C);
    v4 = v3;
    sub_1BE1B224C();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1BE123428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[10];

  v16[9] = a4;
  v16[1] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Constants(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v8, &qword_1ED6F3290);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BDD86E30((uint64_t)v8, &qword_1ED6F3290);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Constants);
    sub_1BDD8422C(&qword_1ED6F3830, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C62C4);
    sub_1BE1B2360();
    result = sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_Constants);
    if (v4)
      return result;
  }
  v15 = a1 + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v15 + 16))
  {
    type metadata accessor for Proto_KeyPath(0);
    sub_1BDD8422C(&qword_1ED6EFCD0, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C615C);
    swift_bridgeObjectRetain();
    sub_1BE1B2354();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BE123650(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v38 = a2;
  v3 = type metadata accessor for Proto_Constants(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530708);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v11 = MEMORY[0x1E0C80A78](v10);
  v37 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v35 - v13;
  v15 = a1 + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v15, (uint64_t)v14, &qword_1ED6F3290);
  v16 = v38;
  v17 = v38 + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__constants;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BDD86DEC((uint64_t)v14, (uint64_t)v9, &qword_1ED6F3290);
  sub_1BDD86DEC(v17, v18, &qword_1ED6F3290);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    v36 = a1;
    v25 = v37;
    sub_1BDD86DEC((uint64_t)v9, (uint64_t)v37, &qword_1ED6F3290);
    if (v19(v18, 1, v3) != 1)
    {
      v35 = v3;
      sub_1BDDA2E8C(v18, (uint64_t)v6, type metadata accessor for Proto_Constants);
      v28 = *v25;
      v29 = v37[1];
      swift_retain();
      swift_retain();
      v30 = v29;
      v31 = (uint64_t)v37;
      sub_1BDDD6F30(v28, v30);
      if ((v32 & 1) != 0 && (sub_1BDDFFE5C(*(_QWORD **)(v31 + 16), *((_QWORD **)v6 + 2)) & 1) != 0)
      {
        sub_1BE1B20F0();
        sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v33 = sub_1BE1B2798();
        sub_1BDD9C3E0((uint64_t)v6, type metadata accessor for Proto_Constants);
        sub_1BDD86E30((uint64_t)v14, &qword_1ED6F3290);
        sub_1BDD9C3E0(v31, type metadata accessor for Proto_Constants);
        a1 = v36;
        sub_1BDD86E30((uint64_t)v9, &qword_1ED6F3290);
        if ((v33 & 1) != 0)
          goto LABEL_4;
LABEL_14:
        v24 = 0;
        goto LABEL_15;
      }
      sub_1BDD9C3E0((uint64_t)v6, type metadata accessor for Proto_Constants);
      sub_1BDD86E30((uint64_t)v14, &qword_1ED6F3290);
      sub_1BDD9C3E0(v31, type metadata accessor for Proto_Constants);
      v27 = (uint64_t)v9;
      v26 = &qword_1ED6F3290;
LABEL_13:
      sub_1BDD86E30(v27, v26);
      goto LABEL_14;
    }
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v14, &qword_1ED6F3290);
    sub_1BDD9C3E0((uint64_t)v25, type metadata accessor for Proto_Constants);
LABEL_7:
    v26 = &qword_1EF530708;
    v27 = (uint64_t)v9;
    goto LABEL_13;
  }
  swift_retain();
  swift_retain();
  sub_1BDD86E30((uint64_t)v14, &qword_1ED6F3290);
  if (v19(v18, 1, v3) != 1)
    goto LABEL_7;
  sub_1BDD86E30((uint64_t)v9, &qword_1ED6F3290);
LABEL_4:
  v20 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths);
  swift_beginAccess();
  v21 = *v20;
  v22 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCV9Coherence13Peer_KeyPathsP33_9CC68E4D751A0306394090738A44396513_StorageClass__keyPaths);
  swift_beginAccess();
  v23 = *v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1BDE00904(v21, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  swift_release();
  swift_release();
  return v24 & 1;
}

uint64_t sub_1BE123A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52BF00, &qword_1EF530438, a2);
}

uint64_t sub_1BE123AB4()
{
  return 0x79654B2E72656550;
}

uint64_t sub_1BE123AD8()
{
  return sub_1BE1231E4();
}

uint64_t sub_1BE123AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Peer_KeyPaths, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE123428);
}

uint64_t sub_1BE123B10()
{
  sub_1BDD8422C(&qword_1EF5306E0, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3000);
  return sub_1BE1B212C();
}

uint64_t sub_1BE123B60(uint64_t a1)
{
  return sub_1BDE38BE4(a1, type metadata accessor for Peer_KeyPaths, sub_1BE123650) & 1;
}

uint64_t sub_1BE123B88@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BEF8, (uint64_t)qword_1EF549418, a1);
}

uint64_t sub_1BE123BA4()
{
  sub_1BDD8422C(&qword_1EF5305C8, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3038);
  return sub_1BE1B2288();
}

uint64_t sub_1BE123BE4()
{
  sub_1BDD8422C(&qword_1EF5305C8, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3038);
  return sub_1BE1B2294();
}

uint64_t sub_1BE123C34()
{
  sub_1BDD8422C(&qword_1EF5306E0, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3000);
  return sub_1BE1B2120();
}

uint64_t sub_1BE123C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549430);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549430);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BE1B61B0;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "digests";
  *(_QWORD *)(v5 + 8) = 7;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x1E0D3EF08];
  v7 = sub_1BE1B236C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_1BE1B2378();
}

uint64_t sub_1BE123D90()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1BE1B2144();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_1BE1B21A4();
  }
  return result;
}

void sub_1BE123DFC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BE123E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_1BE1B22E8(), !v2))
  {
    type metadata accessor for Peer_RequestAssets(0);
    return sub_1BE1B20D8();
  }
  return result;
}

uint64_t sub_1BE123ED0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v3 = sub_1BE1B20F0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  sub_1BDDD6F30(*v1, v1[1]);
  if ((v10 & 1) != 0)
  {
    v11 = type metadata accessor for Peer_RequestAssets(0);
    v12 = (char *)v1 + *(int *)(v11 + 20);
    v13 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v13(v9, v12, v3);
    v13(v7, (char *)(a1 + *(int *)(v11 + 20)), v3);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v14 = sub_1BE1B2798();
    v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    v15(v7, v3);
    v15(v9, v3);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1BE124004@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1BE1B20CC();
  a1[1] = v2;
  return sub_1BE1B20E4();
}

unint64_t sub_1BE124038()
{
  return 0xD000000000000012;
}

uint64_t sub_1BE124054()
{
  return sub_1BE123D90();
}

void sub_1BE124068()
{
  sub_1BE123DFC();
}

uint64_t sub_1BE12407C()
{
  sub_1BDD8422C(&qword_1EF5306D8, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2E98);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1240D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BF08, (uint64_t)qword_1EF549430, a1);
}

uint64_t sub_1BE1240EC()
{
  sub_1BDD8422C(&qword_1EF5305A8, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2ED0);
  return sub_1BE1B2288();
}

uint64_t sub_1BE12412C()
{
  sub_1BDD8422C(&qword_1EF5305A8, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2ED0);
  return sub_1BE1B2294();
}

uint64_t sub_1BE12417C()
{
  sub_1BDD8422C(&qword_1EF5306D8, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2E98);
  return sub_1BE1B2120();
}

uint64_t sub_1BE1241D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549448);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549448);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "digest";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "assetSize";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE124324()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1BE1B2144();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1BE1B2240();
      }
      else if (result == 1)
      {
        sub_1BE1B21A4();
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

void sub_1BE1243C4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BE12440C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_1BE1B22E8(), !v2))
  {
    if (!*(_QWORD *)(v3 + 16) || (result = sub_1BE1B2348(), !v2))
    {
      type metadata accessor for Peer_RespondAsset(0);
      return sub_1BE1B20D8();
    }
  }
  return result;
}

uint64_t sub_1BE1244C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v3 = sub_1BE1B20F0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  sub_1BDDD6F30(*v1, v1[1]);
  if ((v10 & 1) != 0 && v1[2] == *(_QWORD *)(a1 + 16))
  {
    v11 = type metadata accessor for Peer_RespondAsset(0);
    v12 = (char *)v1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v13(v9, v12, v3);
    v13(v7, (char *)(a1 + *(int *)(v11 + 24)), v3);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v14 = sub_1BE1B2798();
    v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    v15(v7, v3);
    v15(v9, v3);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1BE124604@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1BE1B20CC();
  a1[1] = v2;
  a1[2] = 0;
  return sub_1BE1B20E4();
}

unint64_t sub_1BE12463C()
{
  return 0xD000000000000011;
}

uint64_t sub_1BE124658()
{
  return sub_1BE124324();
}

void sub_1BE12466C()
{
  sub_1BE1243C4();
}

uint64_t sub_1BE124680()
{
  sub_1BDD8422C(&qword_1EF530700, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2D30);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1246D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BF10, (uint64_t)qword_1EF549448, a1);
}

uint64_t sub_1BE1246F0()
{
  sub_1BDD8422C(&qword_1EF530588, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2D68);
  return sub_1BE1B2288();
}

uint64_t sub_1BE124730()
{
  sub_1BDD8422C(&qword_1EF530588, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2D68);
  return sub_1BE1B2294();
}

uint64_t sub_1BE124780()
{
  sub_1BDD8422C(&qword_1EF530700, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2D30);
  return sub_1BE1B2120();
}

uint64_t sub_1BE1247D8()
{
  return sub_1BDD8422C(&qword_1EF530580, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2C78);
}

uint64_t sub_1BE124804()
{
  return sub_1BDD8422C(&qword_1EF530588, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2D68);
}

uint64_t sub_1BE124830()
{
  return sub_1BDD8422C(&qword_1EF530590, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2CA0);
}

uint64_t sub_1BE12485C()
{
  return sub_1BDD8422C(&qword_1EF530598, type metadata accessor for Peer_RespondAsset, (uint64_t)&unk_1BE1C2CE0);
}

uint64_t sub_1BE124888()
{
  return sub_1BDD8422C(&qword_1EF5305A0, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2DE0);
}

uint64_t sub_1BE1248B4()
{
  return sub_1BDD8422C(&qword_1EF5305A8, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2ED0);
}

uint64_t sub_1BE1248E0()
{
  return sub_1BDD8422C(&qword_1EF5305B0, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2E08);
}

uint64_t sub_1BE12490C()
{
  return sub_1BDD8422C(&qword_1EF5305B8, type metadata accessor for Peer_RequestAssets, (uint64_t)&unk_1BE1C2E48);
}

uint64_t sub_1BE124938()
{
  return sub_1BDD8422C(&qword_1EF5305C0, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C2F48);
}

uint64_t sub_1BE124964()
{
  return sub_1BDD8422C(&qword_1EF5305C8, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C3038);
}

uint64_t sub_1BE124990()
{
  return sub_1BDD8422C(&qword_1EF5305D0, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C2F70);
}

uint64_t sub_1BE1249BC()
{
  return sub_1BDD8422C(&qword_1EF5305D8, type metadata accessor for Peer_KeyPaths, (uint64_t)&unk_1BE1C2FB0);
}

uint64_t sub_1BE1249E8()
{
  return sub_1BDD8422C(&qword_1EF5305E0, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C30B0);
}

uint64_t type metadata accessor for Peer_RequestVersion(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530710);
}

uint64_t sub_1BE124A28()
{
  return sub_1BDD8422C(&qword_1EF5305E8, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C31A0);
}

uint64_t sub_1BE124A54()
{
  return sub_1BDD8422C(&qword_1EF5305F0, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C30D8);
}

uint64_t sub_1BE124A80()
{
  return sub_1BDD8422C(&qword_1EF5305F8, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C3118);
}

uint64_t sub_1BE124AAC()
{
  return sub_1BDD8422C(&qword_1EF530600, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C3218);
}

uint64_t sub_1BE124AD8()
{
  return sub_1BDD8422C((unint64_t *)&qword_1EF52F960, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C3308);
}

uint64_t sub_1BE124B04()
{
  return sub_1BDD8422C(&qword_1EF530608, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C3240);
}

uint64_t sub_1BE124B30()
{
  return sub_1BDD8422C(&qword_1EF530610, type metadata accessor for Peer_MergeResponse, (uint64_t)&unk_1BE1C3280);
}

uint64_t sub_1BE124B5C()
{
  return sub_1BDD8422C(&qword_1EF530618, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3380);
}

uint64_t sub_1BE124B88()
{
  return sub_1BDD8422C(&qword_1EF5301D0, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C3470);
}

uint64_t sub_1BE124BB4()
{
  return sub_1BDD8422C(&qword_1EF530620, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C33A8);
}

uint64_t sub_1BE124BE0()
{
  return sub_1BDD8422C(&qword_1EF530628, type metadata accessor for Peer_MergeRequest, (uint64_t)&unk_1BE1C33E8);
}

uint64_t sub_1BE124C0C()
{
  return sub_1BDD8422C(&qword_1EF530630, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C34E8);
}

uint64_t sub_1BE124C38()
{
  return sub_1BDD8422C(&qword_1EF530638, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C35D8);
}

uint64_t sub_1BE124C64()
{
  return sub_1BDD8422C(&qword_1EF530640, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C3510);
}

uint64_t sub_1BE124C90()
{
  return sub_1BDD8422C(&qword_1EF530648, type metadata accessor for Peer_Heartbeat, (uint64_t)&unk_1BE1C3550);
}

uint64_t sub_1BE124CBC()
{
  return sub_1BDD8422C(&qword_1EF530650, type metadata accessor for Peer_Message, (uint64_t)&unk_1BE1C3650);
}

uint64_t sub_1BE124CE8()
{
  return sub_1BDD8422C((unint64_t *)&unk_1EF52D8E8, type metadata accessor for Peer_Message, (uint64_t)&unk_1BE1C3740);
}

uint64_t sub_1BE124D14()
{
  return sub_1BDD8422C(&qword_1EF530658, type metadata accessor for Peer_Message, (uint64_t)&unk_1BE1C3678);
}

uint64_t sub_1BE124D40()
{
  return sub_1BDD8422C(&qword_1EF530660, type metadata accessor for Peer_Message, (uint64_t)&unk_1BE1C36B8);
}

void sub_1BE124D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD v21[3];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v28 = a2;
  v22 = type metadata accessor for Peer_RespondAsset(0);
  v2 = MEMORY[0x1E0C80A78](v22);
  v21[2] = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v21[1] = (char *)v21 - v4;
  v24 = type metadata accessor for Peer_KeyPaths(0);
  v5 = MEMORY[0x1E0C80A78](v24);
  v25 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v26 = (char *)v21 - v7;
  v8 = type metadata accessor for Proto_Document(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v23 = (char *)v21 - v10;
  v11 = type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v15 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5306F8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v21 + *(int *)(v17 + 48) - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD9C318(v27, (uint64_t)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  sub_1BDD9C318(v28, (uint64_t)v19, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  v20 = (char *)sub_1BE124FD4 + 4 * byte_1BE1C2AF6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE124FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_1BDD9C318(v0, v2, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BDD9C3E0(v2, type metadata accessor for Proto_Document);
    sub_1BDD86E30(v0, &qword_1EF5306F8);
    v5 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v4 - 128);
    sub_1BDDA2E8C(v2, v6, type metadata accessor for Proto_Document);
    sub_1BDDA2E8C(v1, v3, type metadata accessor for Proto_Document);
    v5 = sub_1BE12BCD0(v6, v3);
    sub_1BDD9C3E0(v3, type metadata accessor for Proto_Document);
    sub_1BDD9C3E0(v6, type metadata accessor for Proto_Document);
    sub_1BDD9C3E0(v0, type metadata accessor for Peer_MergeResponse.OneOf_TaggedOneOf);
  }
  return v5 & 1;
}

void sub_1BE125290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a2;
  v30 = type metadata accessor for Peer_RequestAssets(0);
  v2 = MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v28 = (char *)&v24 - v4;
  v31 = type metadata accessor for Peer_KeyPaths(0);
  v5 = MEMORY[0x1E0C80A78](v31);
  v32 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v24 - v7;
  v8 = type metadata accessor for Proto_Document(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v27 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v26 = (char *)&v24 - v11;
  v25 = type metadata accessor for Peer_RequestVersion(0);
  v12 = MEMORY[0x1E0C80A78](v25);
  v24 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v17 = MEMORY[0x1E0C80A78](v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5306D0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v24 + *(int *)(v20 + 48) - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD9C318(v34, (uint64_t)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  sub_1BDD9C318(v35, (uint64_t)v22, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  v23 = (char *)sub_1BE125554 + 4 * byte_1BE1C2AFB[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE125554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  sub_1BDD9C318(v0, v2, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BDD9C3E0(v2, type metadata accessor for Peer_RequestVersion);
    sub_1BDD86E30(v0, &qword_1EF5306D0);
    v5 = 0;
  }
  else
  {
    sub_1BDDA2E8C(v2, v1, type metadata accessor for Peer_RequestVersion);
    v7 = *(_QWORD *)(v4 - 176);
    sub_1BDDA2E8C(v3, v7, type metadata accessor for Peer_RequestVersion);
    sub_1BDD8422C(&qword_1EF5306E8, type metadata accessor for Peer_RequestVersion, (uint64_t)&unk_1BE1C3168);
    v5 = sub_1BE1B2120();
    sub_1BDD9C3E0(v7, type metadata accessor for Peer_RequestVersion);
    sub_1BDD9C3E0(v1, type metadata accessor for Peer_RequestVersion);
    sub_1BDD9C3E0(v0, type metadata accessor for Peer_MergeRequest.OneOf_TaggedOneOf);
  }
  return v5 & 1;
}

void sub_1BE125870(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD v32[2];
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;

  v45 = a2;
  v46 = (char *)a1;
  v39 = type metadata accessor for Peer_MergeResponse(0);
  v2 = MEMORY[0x1E0C80A78](v39);
  v38 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)v32 - v4;
  v36 = type metadata accessor for Peer_MergeRequest(0);
  v5 = MEMORY[0x1E0C80A78](v36);
  v35 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)v32 - v7;
  v33 = type metadata accessor for Peer_Heartbeat(0);
  v8 = MEMORY[0x1E0C80A78](v33);
  v32[1] = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v32[0] = (char *)v32 - v10;
  v11 = type metadata accessor for Proto_Document(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v41 = (char *)v32 - v14;
  v15 = type metadata accessor for Peer_Message.OneOf_TaggedOneOf(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v44 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v43 = (char *)v32 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v42 = (char *)v32 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v23 = MEMORY[0x1E0C80A78](v22);
  v24 = MEMORY[0x1E0C80A78](v23);
  v25 = MEMORY[0x1E0C80A78](v24);
  v26 = MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530690);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (char *)v32 + *(int *)(v28 + 48) - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD9C318((uint64_t)v46, (uint64_t)v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
  v46 = v30;
  sub_1BDD9C318(v45, (uint64_t)v30, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
  v31 = (char *)sub_1BE125BBC + 4 * byte_1BE1C2B00[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE125BBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  sub_1BDD9C318(v1, (uint64_t)v0, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
  v4 = *v0;
  v3 = v0[1];
  v5 = *(uint64_t **)(v2 - 88);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BDDB796C(v4, v3);
    sub_1BDD86E30(v1, &qword_1EF530690);
    v6 = 0;
  }
  else
  {
    v7 = *v5;
    v8 = v5[1];
    sub_1BDDD6F30(v4, v3);
    v6 = v9;
    sub_1BDDB796C(v7, v8);
    sub_1BDDB796C(v4, v3);
    sub_1BDD9C3E0(v1, type metadata accessor for Peer_Message.OneOf_TaggedOneOf);
  }
  return v6 & 1;
}

uint64_t sub_1BE12601C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B20F0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1BE126058(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BE1B20F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1BE12608C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BE1260D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BE126114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BE126158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BE12619C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1261A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B20F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BE1261E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1261F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B20F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BE126230()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BE1B20F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BE126298(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EEC08);
  v2 = (_QWORD *)sub_1BE1B3260();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    sub_1BDDB6CA4(v5, v6);
    swift_unknownObjectRetain();
    result = sub_1BDE5E12C(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE1263C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED6EE400);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6ED648);
  v6 = sub_1BE1B3260();
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return v7;
  }
  v9 = v6 + 64;
  v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v21[1] = a1;
  v11 = a1 + v10;
  v12 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDD86DEC(v11, (uint64_t)v5, qword_1ED6EE400);
    result = sub_1BDD901B8((uint64_t)v5);
    if ((v14 & 1) != 0)
      break;
    v15 = result;
    *(_QWORD *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = *(_QWORD *)(v7 + 48);
    v17 = sub_1BE1B1DF0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v15, v5, v17);
    result = sub_1BDDF32F4();
    v18 = *(_QWORD *)(v7 + 16);
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    *(_QWORD *)(v7 + 16) = v20;
    v11 += v12;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE126560(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530738);
  v2 = (_QWORD *)sub_1BE1B3260();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1BDDB271C(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE12667C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CF60);
  v2 = (_QWORD *)sub_1BE1B3260();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = v4[1];
    v8 = v4[2];
    v9 = v4[3];
    v10 = v4[4];
    sub_1BDDB6CA4(v5, *v4);
    sub_1BDDB6CA4(v7, v8);
    sub_1BDDB6CA4(v9, v10);
    result = sub_1BDDB7F0C(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = (uint64_t *)(v2[7] + 32 * result);
    *v14 = v7;
    v14[1] = v8;
    v14[2] = v9;
    v14[3] = v10;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE1267C4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EFDB8);
  v2 = (_QWORD *)sub_1BE1B3260();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    sub_1BDDB6CA4(v5, v6);
    swift_retain();
    result = sub_1BDDB7F0C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE1268E0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CFA8);
  v2 = (_QWORD *)sub_1BE1B3260();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    sub_1BDDB6CA4(v5, v6);
    sub_1BDDB6CA4(v7, v8);
    result = sub_1BDDB7F0C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE126A08(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52B720);
  v2 = sub_1BE1B3260();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDD86DEC(v6, (uint64_t)&v13, &qword_1EF530750);
    v7 = v13;
    result = sub_1BDDC4B9C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BDE77688(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE126B34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530728);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530730);
  v6 = sub_1BE1B3260();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDD86DEC(v12, (uint64_t)v5, &qword_1EF530728);
    result = sub_1BDE5E1A0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1BE1B317C();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_1BDE77688(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE126CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530740);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CF40);
  v6 = sub_1BE1B3260();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDD86DEC(v12, (uint64_t)v5, &qword_1EF530740);
    result = sub_1BDDAE974((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1BE1B1F58();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BE126E64(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CF20);
  v2 = (_QWORD *)sub_1BE1B3260();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1BDDB271C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BE126F7C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;
  int EnumCaseMultiPayload;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;

  v5 = v4;
  v6 = v3;
  v60 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v57 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)&v53 - v12;
  v58 = type metadata accessor for Proto_CustomCRValue(0);
  v13 = MEMORY[0x1E0C80A78](v58);
  v15 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v59 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v53 - v16);
  v17 = type metadata accessor for Proto_Value(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v53 - v23;
  v65 = a1;
  if ((a3 & 1) == 0)
  {
    v61 = a1;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EFBA8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v55 = v21;
      v25 = v15;
      v26 = v24;
      v27 = *((_QWORD *)&v63 + 1);
      v28 = v64;
      __swift_project_boxed_opaque_existential_1(&v62, *((uint64_t *)&v63 + 1));
      v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
      v30 = v28;
      v24 = v26;
      v15 = v25;
      v5 = v4;
      v21 = v55;
      v31 = v29(v27, v30);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
      if ((v31 & 1) != 0)
        return result;
    }
    else
    {
      v64 = 0;
      v62 = 0u;
      v63 = 0u;
      result = sub_1BDD86E30((uint64_t)&v62, (uint64_t *)&unk_1ED6EF4E0);
    }
  }
  MEMORY[0x1E0C80A78](result);
  result = sub_1BDE1CC84((void (*)(uint64_t))sub_1BE1282A4, (uint64_t)v24);
  if (!v5)
  {
    v55 = v24;
    if (v60 < 0)
    {
      result = sub_1BE1B31F4();
      __break(1u);
      return result;
    }
    v32 = *(_QWORD *)(v6 + 16) + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
    swift_beginAccess();
    v54 = *(int *)(v17 + 20);
    v33 = *(_QWORD *)(v32 + v54)
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    v34 = v56;
    sub_1BDD86DEC(v33, v56, &qword_1ED6F26F0);
    v35 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48);
    v36 = v53(v34, 1, v35);
    v37 = MEMORY[0x1E0DEE9D8];
    if (v36 == 1)
    {
      sub_1BDD86E30(v34, &qword_1ED6F26F0);
      v38 = v59;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v38 = v59;
      if (EnumCaseMultiPayload == 13)
      {
        sub_1BDDA2E8C(v34, (uint64_t)v59, type metadata accessor for Proto_CustomCRValue);
        goto LABEL_14;
      }
      sub_1BDD9C3E0(v34, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    *v38 = v37;
    v38[1] = v37;
    sub_1BE1B20E4();
LABEL_14:
    v40 = (_QWORD *)*v38;
    v41 = (uint64_t)v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v40 = sub_1BDDAEBFC(0, v40[2] + 1, 1, v40);
    v43 = v40[2];
    v42 = v40[3];
    if (v43 >= v42 >> 1)
      v40 = sub_1BDDAEBFC((_QWORD *)(v42 > 1), v43 + 1, 1, v40);
    v40[2] = v43 + 1;
    v44 = v59;
    v40[v43 + 4] = v60;
    *v44 = v40;
    sub_1BE128730((uint64_t)v44);
    v45 = v41;
    sub_1BDDD2EB4((uint64_t)v55, v41);
    v46 = *(_QWORD *)(v32 + v54)
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    v47 = v46;
    v48 = v57;
    sub_1BDD86DEC(v47, v57, &qword_1ED6F26F0);
    if (v53(v48, 1, v35) == 1)
    {
      sub_1BDD86E30(v48, &qword_1ED6F26F0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        sub_1BDDA2E8C(v48, (uint64_t)v15, type metadata accessor for Proto_CustomCRValue);
LABEL_24:
        v50 = v15[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v50 = sub_1BDE069C8(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
        v52 = *(_QWORD *)(v50 + 16);
        v51 = *(_QWORD *)(v50 + 24);
        if (v52 >= v51 >> 1)
          v50 = sub_1BDE069C8(v51 > 1, v52 + 1, 1, v50);
        *(_QWORD *)(v50 + 16) = v52 + 1;
        sub_1BDDA2E8C(v45, v50+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v52, type metadata accessor for Proto_Value);
        v15[1] = v50;
        sub_1BE128730((uint64_t)v15);
        swift_endAccess();
        return sub_1BDD9C3E0((uint64_t)v55, type metadata accessor for Proto_Value);
      }
      sub_1BDD9C3E0(v48, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    v49 = MEMORY[0x1E0DEE9D8];
    *v15 = MEMORY[0x1E0DEE9D8];
    v15[1] = v49;
    sub_1BE1B20E4();
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1BE127554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t);
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;

  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v8 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v14 >= v8)
      return sub_1BDE27FD0();
    v15 = *(_QWORD *)(v4 + 8 * v14);
    v16 = v10 + 1;
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v8)
        return sub_1BDE27FD0();
      v15 = *(_QWORD *)(v4 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 >= v8)
          return sub_1BDE27FD0();
        v15 = *(_QWORD *)(v4 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_21:
    v7 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v16 << 6);
    v10 = v16;
LABEL_6:
    v13 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(a2 + 56) + 8 * v12) + 120);
    swift_retain();
    v13(a1);
    result = swift_release();
  }
  v17 = v10 + 4;
  if (v10 + 4 >= v8)
    return sub_1BDE27FD0();
  v15 = *(_QWORD *)(v4 + 8 * v17);
  if (v15)
  {
    v16 = v10 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v8)
      return sub_1BDE27FD0();
    v15 = *(_QWORD *)(v4 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_21;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1BE1276CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  int64_t v29;
  uint64_t v30;
  int64_t v32;
  _QWORD *v33;

  v33 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6EF0E8);
  sub_1BE1B25D0();
  v30 = a2 + 64;
  v3 = -1 << *(_BYTE *)(a2 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v29 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  v32 = 0;
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v8 = v7 | (v32 << 6);
    }
    else
    {
      v9 = v32 + 1;
      if (__OFADD__(v32, 1))
        goto LABEL_35;
      if (v9 >= v29)
      {
LABEL_32:
        sub_1BDE27FD0();
        return (uint64_t)v33;
      }
      v10 = *(_QWORD *)(v30 + 8 * v9);
      v11 = v32 + 1;
      if (!v10)
      {
        v11 = v32 + 2;
        if (v32 + 2 >= v29)
          goto LABEL_32;
        v10 = *(_QWORD *)(v30 + 8 * v11);
        if (!v10)
        {
          v11 = v32 + 3;
          if (v32 + 3 >= v29)
            goto LABEL_32;
          v10 = *(_QWORD *)(v30 + 8 * v11);
          if (!v10)
          {
            v12 = v32 + 4;
            if (v32 + 4 >= v29)
              goto LABEL_32;
            v10 = *(_QWORD *)(v30 + 8 * v12);
            if (!v10)
            {
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                  goto LABEL_36;
                if (v11 >= v29)
                  goto LABEL_32;
                v10 = *(_QWORD *)(v30 + 8 * v11);
                ++v12;
                if (v10)
                  goto LABEL_22;
              }
            }
            v11 = v32 + 4;
          }
        }
      }
LABEL_22:
      v5 = (v10 - 1) & v10;
      v8 = __clz(__rbit64(v10)) + (v11 << 6);
      v32 = v11;
    }
    v13 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v8);
    v14 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(a2 + 56) + 8 * v8) + 104);
    swift_retain();
    v15 = v14(a1);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = sub_1BDE5E0FC(v13);
    v19 = v33[2];
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (v33[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BDE66720();
    }
    else
    {
      sub_1BDE62FB4(v21, isUniquelyReferenced_nonNull_native);
      v23 = sub_1BDE5E0FC(v13);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_37;
      v18 = v23;
    }
    if ((v22 & 1) != 0)
    {
      v6 = v33[7];
      swift_release();
      *(_QWORD *)(v6 + 8 * v18) = v15;
    }
    else
    {
      v33[(v18 >> 6) + 8] |= 1 << v18;
      *(_QWORD *)(v33[6] + 8 * v18) = v13;
      *(_QWORD *)(v33[7] + 8 * v18) = v15;
      v25 = v33[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_34;
      v33[2] = v27;
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE1279DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v13 >= v6)
      goto LABEL_26;
    v14 = *(_QWORD *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v6)
        goto LABEL_26;
      v14 = *(_QWORD *)(v2 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v6)
          goto LABEL_26;
        v14 = *(_QWORD *)(v2 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v6)
            goto LABEL_26;
          v14 = *(_QWORD *)(v2 + 8 * v8);
          if (!v14)
          {
            v8 = v13 + 4;
            if (v13 + 4 >= v6)
              goto LABEL_26;
            v14 = *(_QWORD *)(v2 + 8 * v8);
            if (!v14)
            {
              v15 = v13 + 5;
              if (v15 >= v6)
              {
LABEL_26:
                v16 = 0;
                goto LABEL_27;
              }
              v14 = *(_QWORD *)(v2 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v8 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_29;
                  if (v8 >= v6)
                    goto LABEL_26;
                  v14 = *(_QWORD *)(v2 + 8 * v8);
                  ++v15;
                  if (v14)
                    goto LABEL_24;
                }
              }
              v8 = v15;
            }
          }
        }
      }
    }
LABEL_24:
    v5 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    v11 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 56) + 8 * v10) + 128);
    v12 = swift_retain();
    LOBYTE(v11) = v11(v12);
    result = swift_release();
    if ((v11 & 1) != 0)
    {
      v16 = 1;
LABEL_27:
      swift_release();
      return v16;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t _s9Coherence22UnknownValuePropertiesV18finalizeTimestampsyyAA9CRContextCF_0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v2 = *v1;
  result = sub_1BE1279DC(*v1);
  if ((result & 1) != 0)
  {
    v33 = v1;
    v37 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6EF0E8);
    sub_1BE1B25D0();
    v4 = 0;
    v36 = v2 + 64;
    v5 = -1;
    v6 = -1 << *(_BYTE *)(v2 + 32);
    if (-v6 < 64)
      v5 = ~(-1 << -(char)v6);
    v7 = v5 & *(_QWORD *)(v2 + 64);
    v35 = (unint64_t)(63 - v6) >> 6;
    while (1)
    {
      if (v7)
      {
        v9 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v10 = v9 | (v4 << 6);
      }
      else
      {
        v11 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_40;
        if (v11 >= v35)
        {
LABEL_36:
          result = sub_1BDE27FD0();
          *v33 = (uint64_t)v37;
          return result;
        }
        v12 = *(_QWORD *)(v36 + 8 * v11);
        v13 = v4 + 1;
        if (!v12)
        {
          v13 = v4 + 2;
          if (v4 + 2 >= v35)
            goto LABEL_36;
          v12 = *(_QWORD *)(v36 + 8 * v13);
          if (!v12)
          {
            v13 = v4 + 3;
            if (v4 + 3 >= v35)
              goto LABEL_36;
            v12 = *(_QWORD *)(v36 + 8 * v13);
            if (!v12)
            {
              v14 = v4 + 4;
              if (v4 + 4 >= v35)
                goto LABEL_36;
              v12 = *(_QWORD *)(v36 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_41;
                  if (v13 >= v35)
                    goto LABEL_36;
                  v12 = *(_QWORD *)(v36 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_22;
                }
              }
              v13 = v4 + 4;
            }
          }
        }
LABEL_22:
        v7 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
        v4 = v13;
      }
      v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10);
      v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
      v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 128);
      v18 = swift_retain_n();
      LOBYTE(v17) = v17(v18);
      swift_release();
      if ((v17 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v19 = (*(uint64_t (**)(void))(*(_QWORD *)v16 + 144))();
          swift_release();
          v16 = v19;
        }
        (*(void (**)(uint64_t))(*(_QWORD *)v16 + 136))(a1);
      }
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v22 = sub_1BDE5E0FC(v15);
      v23 = v37[2];
      v24 = (v21 & 1) == 0;
      v25 = v23 + v24;
      if (__OFADD__(v23, v24))
        break;
      v26 = v21;
      if (v37[3] >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BDE66720();
      }
      else
      {
        sub_1BDE62FB4(v25, isUniquelyReferenced_nonNull_native);
        v27 = sub_1BDE5E0FC(v15);
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_42;
        v22 = v27;
      }
      v29 = 8 * v22;
      if ((v26 & 1) != 0)
      {
        v8 = v37[7];
        swift_release();
        *(_QWORD *)(v8 + v29) = v16;
      }
      else
      {
        v37[(v22 >> 6) + 8] |= 1 << v22;
        *(_QWORD *)(v37[6] + 8 * v22) = v15;
        *(_QWORD *)(v37[7] + 8 * v22) = v16;
        v30 = v37[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_39;
        v37[2] = v32;
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    result = sub_1BE1B3680();
    __break(1u);
  }
  return result;
}

Coherence::UnknownValueProperties __swiftcall UnknownValueProperties.init()()
{
  Coherence::UnknownValueProperties *v0;
  Coherence::UnknownValueProperties *v1;
  Coherence::UnknownValueProperties result;

  v1 = v0;
  result.properties._rawValue = (void *)sub_1BE128150(MEMORY[0x1E0DEE9D8]);
  v1->properties._rawValue = result.properties._rawValue;
  return result;
}

Coherence::UnknownValueProperties __swiftcall UnknownValueProperties.init(_:)(Coherence::UnknownValueProperties result)
{
  Coherence::UnknownValueProperties *v1;

  v1->properties._rawValue = result.properties._rawValue;
  return result;
}

Coherence::UnknownValueProperties __swiftcall UnknownValueProperties.copy(renamingReferences:)(Swift::OpaquePointer_optional renamingReferences)
{
  Coherence::UnknownValueProperties *v1;
  uint64_t *v2;
  Coherence::UnknownValueProperties *v3;
  Coherence::UnknownValueProperties result;

  v3 = v1;
  result.properties._rawValue = (void *)sub_1BE1276CC((uint64_t)renamingReferences.value._rawValue, *v2);
  v3->properties._rawValue = result.properties._rawValue;
  return result;
}

uint64_t UnknownValueProperties.visitReferences(_:)(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BE127554(a1, *v1);
}

void UnknownValueProperties.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

Swift::Bool __swiftcall UnknownValueProperties.needToFinalizeTimestamps()()
{
  uint64_t *v0;

  return sub_1BE1279DC(*v0);
}

uint64_t UnknownValueProperties.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  int64_t v17;

  v2 = v1;
  v3 = *v0;
  v4 = *v0 + 64;
  v5 = 1 << *(_BYTE *)(*v0 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*v0 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    v14 = swift_retain();
    sub_1BE126F7C(v14, v13, 1);
    result = swift_release();
    if (v2)
      return swift_release();
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v10 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v10);
  if (v16)
  {
LABEL_17:
    v7 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v10 << 6);
    goto LABEL_5;
  }
  v17 = v10 + 1;
  if (v10 + 1 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v10 + 2;
  if (v10 + 2 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v10 + 3;
  if (v10 + 3 >= v8)
    return swift_release();
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v10 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v16 = *(_QWORD *)(v4 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t UnknownValueProperties.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1BDEF5B94(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static UnknownValueProperties.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BDEEE13C(*a1, *a2);
}

uint64_t UnknownValueProperties.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BE1B36F8();
  swift_bridgeObjectRetain();
  sub_1BDEF5B94((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1BE1B371C();
}

unint64_t sub_1BE128150(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CFC0);
  v3 = (_QWORD *)sub_1BE1B3260();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1BDE5E0FC(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_1BDE5E0FC(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BE128250()
{
  unint64_t result;

  result = qword_1EF530720;
  if (!qword_1EF530720)
  {
    result = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for UnknownValueProperties, &type metadata for UnknownValueProperties);
    atomic_store(result, (unint64_t *)&qword_1EF530720);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnknownValueProperties()
{
  return &type metadata for UnknownValueProperties;
}

uint64_t sub_1BE1282A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(v0 + 16) + 152))(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 24));
}

uint64_t sub_1BE1282D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BE128310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BE1B1F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BE128350()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED6F3190);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BE1B61C0;
  v1 = sub_1BE1B1F40();
  v2 = MEMORY[0x1E0DEDE70];
  v3 = MEMORY[0x1E0DEDEC8];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEDE70];
  *(_QWORD *)(v0 + 64) = v3;
  *(_BYTE *)(v0 + 32) = v1;
  v4 = sub_1BE1B1F40();
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v3;
  *(_BYTE *)(v0 + 72) = BYTE1(v4);
  v6 = sub_1BE1B27EC();
  sub_1BE1B284C();
  type metadata accessor for Replica();
  sub_1BE1B32E4();
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BE128450(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v16 - v7;
  v10 = *(int *)(v9 + 20);
  v11 = *(_QWORD *)(v6 + v10);
  v13 = *(_QWORD *)(v12 + v10);
  sub_1BDEFCE38(v6, (uint64_t)&v16 - v7);
  sub_1BDEFCE38(a2, (uint64_t)v5);
  if (v11 == v13)
    v14 = sub_1BE1B1F10();
  else
    v14 = 0;
  sub_1BDDF3284((uint64_t)v5);
  sub_1BDDF3284((uint64_t)v8);
  return v14 & 1;
}

uint64_t sub_1BE12851C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Timestamp);
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE128730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_CustomCRValue);
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE128944(uint64_t a1)
{
  return sub_1BE1293B8(a1);
}

uint64_t sub_1BE12894C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_CRDT._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F2DF0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F2DF0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Sequence);
  v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F2DF0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F2DF0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE128B60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Version);
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE128D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_CRDT._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F2DF0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F2DF0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_OrderedSet);
  v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F2DF0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F2DF0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE128F88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_CRDT._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F2DF0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F2DF0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Sequence);
  v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F2DF0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F2DF0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12919C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_CRDT._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F2DF0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F2DF0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_CustomCRDT);
  v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F2DF0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F2DF0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE1293B0(uint64_t a1)
{
  return sub_1BE1293B8(a1);
}

uint64_t sub_1BE1293B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  *v8 = a1;
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE1295C4(uint64_t a1)
{
  return sub_1BE1293B8(a1);
}

uint64_t sub_1BE1295CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_RepeatedValue);
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE1297E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v21[-v9];
  v11 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v12 = *(_QWORD *)(v2 + v11);
    type metadata accessor for Proto_Value._StorageClass(0);
    v13 = swift_allocObject();
    v14 = v13 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v15 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
    v16 = v12 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v16, (uint64_t)v10, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v10, v14, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v2 + v11) = v13;
    swift_release();
  }
  v17 = *(_QWORD *)(v2 + v11);
  *v10 = a1;
  v10[1] = a2;
  v18 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 0, 1, v18);
  sub_1BDDA2EF0((uint64_t)v10, (uint64_t)v8, &qword_1ED6F26F0);
  v19 = v17 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v8, v19, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE1299EC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = (double *)&v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  *v8 = a1;
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE129BF8(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  float *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = (float *)&v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  *v8 = a1;
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(float *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE129E04(uint64_t a1)
{
  return sub_1BE1293B8(a1);
}

uint64_t sub_1BE129E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Asset);
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12A020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Optional(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Optional._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
    v13 = type metadata accessor for Proto_Value(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F3770);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F3770);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Value);
  v16 = type metadata accessor for Proto_Value(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F3770);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F3770);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12A220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Optional);
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12A434(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_TaggedValue);
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12A648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_Value._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F26F0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F26F0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Reference);
  v16 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F26F0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F26F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12A85C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_CRDT._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F2DF0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F2DF0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_OrderedSet);
  v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F2DF0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F2DF0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12AA70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_CRDT._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F2DF0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F2DF0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Register);
  v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F2DF0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F2DF0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12AC84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(int *)(type metadata accessor for Proto_Subsequence(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Subsequence._StorageClass(0);
    swift_allocObject();
    v11 = swift_retain();
    v12 = sub_1BE148B38(v11);
    swift_release();
    *(_QWORD *)(v2 + v10) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(v2 + v10);
  sub_1BDDA2E8C(a1, (uint64_t)v9, type metadata accessor for Proto_Timestamp);
  v14 = type metadata accessor for Proto_Timestamp(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_1BDDA2EF0((uint64_t)v9, (uint64_t)v7, &qword_1ED6F3850);
  v15 = v13
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v7, v15, &qword_1ED6F3850);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12AE0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Sequence(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_1BE13BE10(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Version);
  v12 = type metadata accessor for Proto_Version(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F37A8);
  v13 = v11 + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v13, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12AF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Sequence(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_1BE13BE10(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Version);
  v12 = type metadata accessor for Proto_Version(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F37A8);
  v13 = v11
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v13, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12B114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Sequence(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_1BE13BE10(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Version);
  v12 = type metadata accessor for Proto_Version(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F37A8);
  v13 = v11
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromVersion;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v13, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12B298(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Sequence(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    v10 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + v9) = sub_1BE13BE10(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Version);
  v12 = type metadata accessor for Proto_Version(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F37A8);
  v13 = v11
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromAddedByVersion;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v13, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12B41C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set.Element._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_1BE13500C(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Version);
  v12 = type metadata accessor for Proto_Version(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F37A8);
  v13 = v11 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v13, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12B5A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_CRDT._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F2DF0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F2DF0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Set);
  v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F2DF0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F2DF0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12B7B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v19[-v7];
  v9 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + v9);
    type metadata accessor for Proto_CRDT._StorageClass(0);
    v11 = swift_allocObject();
    v12 = v11 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v10 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1BDD86DEC(v14, (uint64_t)v8, &qword_1ED6F2DF0);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v8, v12, &qword_1ED6F2DF0);
    swift_endAccess();
    *(_QWORD *)(v1 + v9) = v11;
    swift_release();
  }
  v15 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Counter);
  v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F2DF0);
  v17 = v15 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v17, &qword_1ED6F2DF0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12B9C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Counter(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Counter._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_1BE132E6C(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Version);
  v12 = type metadata accessor for Proto_Version(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F37A8);
  v13 = v11 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v13, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12BB4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Counter(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Counter._StorageClass(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v1 + v9) = sub_1BE132E6C(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + v9);
  sub_1BDDA2E8C(a1, (uint64_t)v8, type metadata accessor for Proto_Version);
  v12 = type metadata accessor for Proto_Version(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1BDDA2EF0((uint64_t)v8, (uint64_t)v6, &qword_1ED6F37A8);
  v13 = v11 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
  swift_beginAccess();
  swift_retain();
  sub_1BDDA1AF4((uint64_t)v6, v13, &qword_1ED6F37A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BE12BCD0(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Document, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12C1E8) & 1;
}

uint64_t sub_1BE12BD0C()
{
  sub_1BE148AB0();
  return sub_1BE1B2138();
}

void sub_1BE12BD4C()
{
  qword_1EF549460 = (uint64_t)&unk_1E77579D8;
}

uint64_t sub_1BE12BD60@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BE12BE94(&qword_1EF52BF18, &qword_1EF549460, a1);
}

unint64_t sub_1BE12BD7C@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

_QWORD *sub_1BE12BD94@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 3uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1BE12BDB0()
{
  sub_1BE148AF4();
  return sub_1BE1B2138();
}

BOOL sub_1BE12BDE8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_1BE12BDFC()
{
  qword_1EF549468 = (uint64_t)&unk_1E7758358;
}

uint64_t sub_1BE12BE10@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BE12BE94(&qword_1EF52BF20, &qword_1EF549468, a1);
}

uint64_t sub_1BE12BE2C()
{
  sub_1BE148E24();
  return sub_1BE1B2138();
}

void sub_1BE12BE64()
{
  qword_1EF549470 = (uint64_t)&unk_1E7757AA8;
}

uint64_t sub_1BE12BE78@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BE12BE94(&qword_1EF52BF28, &qword_1EF549470, a1);
}

uint64_t sub_1BE12BE94@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE12BED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549478);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549478);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1C0F40;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "crdt";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "reference";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "references";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "version";
  *((_QWORD *)v17 + 1) = 7;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "constants";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "assets";
  *((_QWORD *)v21 + 1) = 6;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "versionUuid";
  *((_QWORD *)v23 + 1) = 11;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 8 * v3) = 9;
  *(_QWORD *)v24 = "deltaReferences";
  *(_QWORD *)(v24 + 8) = 15;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "minVersion";
  *((_QWORD *)v26 + 1) = 10;
  v26[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE12C1E0()
{
  return type metadata accessor for Proto_Document._StorageClass(0);
}

BOOL sub_1BE12C1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  char v73;
  uint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  int v94;
  uint64_t v95;
  char v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v129 = a2;
  v3 = type metadata accessor for Proto_Constants(0);
  v117 = *(_QWORD *)(v3 - 8);
  v118 = v3;
  MEMORY[0x1E0C80A78](v3);
  v113 = (uint64_t)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530708);
  MEMORY[0x1E0C80A78](v116);
  v119 = (uint64_t)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v7 = MEMORY[0x1E0C80A78](v6);
  v114 = (uint64_t)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v125 = (uint64_t)&v109 - v9;
  v123 = type metadata accessor for Proto_Version(0);
  v121 = *(_QWORD *)(v123 - 8);
  v10 = MEMORY[0x1E0C80A78](v123);
  v109 = (uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v115 = (uint64_t)&v109 - v12;
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A10);
  v13 = MEMORY[0x1E0C80A78](v124);
  v111 = (uint64_t)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v122 = (uint64_t)&v109 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v110 = (uint64_t)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v112 = (uint64_t)&v109 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v120 = (uint64_t)&v109 - v22;
  MEMORY[0x1E0C80A78](v21);
  v127 = (uint64_t)&v109 - v23;
  v24 = type metadata accessor for Proto_Document.OneOf_Root(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v126 = (uint64_t)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A18);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37C8);
  v31 = MEMORY[0x1E0C80A78](v30);
  v128 = (uint64_t)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v109 - v33;
  v35 = a1;
  v36 = a1 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  sub_1BDD86DEC(v36, (uint64_t)v34, &qword_1ED6F37C8);
  v37 = v129;
  v38 = v129 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  v39 = (uint64_t)&v29[*(int *)(v27 + 48)];
  sub_1BDD86DEC((uint64_t)v34, (uint64_t)v29, &qword_1ED6F37C8);
  sub_1BDD86DEC(v38, v39, &qword_1ED6F37C8);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v40((uint64_t)v29, 1, v24) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v34, &qword_1ED6F37C8);
    if (v40(v39, 1, v24) == 1)
    {
      sub_1BDD86E30((uint64_t)v29, &qword_1ED6F37C8);
      goto LABEL_9;
    }
LABEL_6:
    v42 = &qword_1EF530A18;
    v43 = (uint64_t)v29;
LABEL_7:
    sub_1BDD86E30(v43, v42);
    goto LABEL_37;
  }
  v41 = v128;
  sub_1BDD86DEC((uint64_t)v29, v128, &qword_1ED6F37C8);
  if (v40(v39, 1, v24) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v34, &qword_1ED6F37C8);
    sub_1BDD9C3E0(v41, type metadata accessor for Proto_Document.OneOf_Root);
    goto LABEL_6;
  }
  v44 = v126;
  sub_1BDDA2E8C(v39, v126, type metadata accessor for Proto_Document.OneOf_Root);
  swift_retain();
  swift_retain();
  v45 = sub_1BE146E88(v41, v44);
  sub_1BDD9C3E0(v44, type metadata accessor for Proto_Document.OneOf_Root);
  sub_1BDD86E30((uint64_t)v34, &qword_1ED6F37C8);
  sub_1BDD9C3E0(v41, type metadata accessor for Proto_Document.OneOf_Root);
  sub_1BDD86E30((uint64_t)v29, &qword_1ED6F37C8);
  if ((v45 & 1) == 0)
    goto LABEL_37;
LABEL_9:
  v46 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__references);
  swift_beginAccess();
  v47 = *v46;
  v48 = (uint64_t *)(v37
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__references);
  swift_beginAccess();
  v49 = *v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50 = sub_1BDE01804(v47, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v50 & 1) == 0)
    goto LABEL_37;
  v51 = v35 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  v52 = v127;
  sub_1BDD86DEC(v51, v127, &qword_1ED6F37A8);
  v53 = v37 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  v54 = v122;
  v55 = v122 + *(int *)(v124 + 48);
  sub_1BDD86DEC(v52, v122, &qword_1ED6F37A8);
  sub_1BDD86DEC(v53, v55, &qword_1ED6F37A8);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
  v57 = v123;
  if (v56(v54, 1, v123) == 1)
  {
    sub_1BDD86E30(v52, &qword_1ED6F37A8);
    v58 = v56(v55, 1, v57);
    v59 = v125;
    if (v58 == 1)
    {
      sub_1BDD86E30(v54, &qword_1ED6F37A8);
      goto LABEL_13;
    }
    goto LABEL_25;
  }
  v93 = v120;
  sub_1BDD86DEC(v54, v120, &qword_1ED6F37A8);
  v94 = v56(v55, 1, v57);
  v59 = v125;
  if (v94 == 1)
  {
    sub_1BDD86E30(v127, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v93, type metadata accessor for Proto_Version);
LABEL_25:
    v42 = &qword_1EF530A10;
    v43 = v54;
    goto LABEL_7;
  }
  v95 = v115;
  sub_1BDDA2E8C(v55, v115, type metadata accessor for Proto_Version);
  if (!sub_1BDDFED94(*(_QWORD **)v93, *(_QWORD **)v95)
    || (sub_1BDE003E4(*(_QWORD *)(v93 + 8), *(_QWORD *)(v95 + 8)) & 1) == 0)
  {
    sub_1BDD9C3E0(v95, type metadata accessor for Proto_Version);
    v97 = &qword_1ED6F37A8;
    sub_1BDD86E30(v127, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v93, type metadata accessor for Proto_Version);
    v43 = v54;
    goto LABEL_41;
  }
  v128 = v95 + *(int *)(v57 + 24);
  sub_1BE1B20F0();
  sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v96 = sub_1BE1B2798();
  sub_1BDD9C3E0(v95, type metadata accessor for Proto_Version);
  sub_1BDD86E30(v127, &qword_1ED6F37A8);
  sub_1BDD9C3E0(v120, type metadata accessor for Proto_Version);
  sub_1BDD86E30(v54, &qword_1ED6F37A8);
  if ((v96 & 1) == 0)
    goto LABEL_37;
LABEL_13:
  v60 = v35 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v60, v59, &qword_1ED6F3290);
  v61 = v37 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  v62 = v119;
  v63 = v119 + *(int *)(v116 + 48);
  sub_1BDD86DEC(v59, v119, &qword_1ED6F3290);
  v64 = v61;
  v65 = v62;
  sub_1BDD86DEC(v64, v63, &qword_1ED6F3290);
  v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48);
  v67 = v62;
  v68 = v118;
  if (v66(v67, 1, v118) != 1)
  {
    v98 = v68;
    v99 = v114;
    sub_1BDD86DEC(v65, v114, &qword_1ED6F3290);
    if (v66(v63, 1, v98) == 1)
    {
      sub_1BDD86E30(v125, &qword_1ED6F3290);
      sub_1BDD9C3E0(v99, type metadata accessor for Proto_Constants);
      goto LABEL_33;
    }
    v100 = v113;
    sub_1BDDA2E8C(v63, v113, type metadata accessor for Proto_Constants);
    sub_1BDDD6F30(*(_QWORD *)v99, *(_QWORD *)(v99 + 8));
    v101 = v125;
    if ((v102 & 1) != 0 && (sub_1BDDFFE5C(*(_QWORD **)(v99 + 16), *(_QWORD **)(v100 + 16)) & 1) != 0)
    {
      sub_1BE1B20F0();
      sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v103 = sub_1BE1B2798();
      sub_1BDD9C3E0(v100, type metadata accessor for Proto_Constants);
      sub_1BDD86E30(v125, &qword_1ED6F3290);
      sub_1BDD9C3E0(v99, type metadata accessor for Proto_Constants);
      sub_1BDD86E30(v119, &qword_1ED6F3290);
      if ((v103 & 1) != 0)
        goto LABEL_16;
LABEL_37:
      swift_release();
      swift_release();
      return 0;
    }
    sub_1BDD9C3E0(v100, type metadata accessor for Proto_Constants);
    v97 = &qword_1ED6F3290;
    sub_1BDD86E30(v101, &qword_1ED6F3290);
    sub_1BDD9C3E0(v99, type metadata accessor for Proto_Constants);
    v43 = v65;
LABEL_41:
    v42 = v97;
    goto LABEL_7;
  }
  sub_1BDD86E30(v59, &qword_1ED6F3290);
  if (v66(v63, 1, v68) != 1)
  {
LABEL_33:
    v42 = &qword_1EF530708;
    v43 = v65;
    goto LABEL_7;
  }
  sub_1BDD86E30(v65, &qword_1ED6F3290);
LABEL_16:
  v69 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assets);
  swift_beginAccess();
  v70 = *v69;
  v71 = (uint64_t *)(v37
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assets);
  swift_beginAccess();
  v72 = *v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v73 = sub_1BDE01818(v70, v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v73 & 1) == 0)
    goto LABEL_37;
  v74 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__versionUuid);
  swift_beginAccess();
  v76 = *v74;
  v75 = v74[1];
  v77 = (uint64_t *)(v37
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__versionUuid);
  swift_beginAccess();
  v79 = *v77;
  v78 = v77[1];
  sub_1BDDB6CA4(v76, v75);
  sub_1BDDB6CA4(v79, v78);
  sub_1BDDD6F30(v76, v75);
  v81 = v80;
  sub_1BDDB796C(v79, v78);
  sub_1BDDB796C(v76, v75);
  if ((v81 & 1) == 0)
    goto LABEL_37;
  v82 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__deltaReferences);
  swift_beginAccess();
  v83 = *v82;
  v84 = (uint64_t *)(v37
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__deltaReferences);
  swift_beginAccess();
  v85 = *v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v86 = sub_1BDE01804(v83, v85);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v86 & 1) == 0)
    goto LABEL_37;
  v87 = v35 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__minVersion;
  swift_beginAccess();
  v88 = v112;
  sub_1BDD86DEC(v87, v112, &qword_1ED6F37A8);
  v89 = v37 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__minVersion;
  swift_beginAccess();
  v90 = v111;
  v91 = v111 + *(int *)(v124 + 48);
  sub_1BDD86DEC(v88, v111, &qword_1ED6F37A8);
  sub_1BDD86DEC(v89, v91, &qword_1ED6F37A8);
  if (v56(v90, 1, v57) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v88, &qword_1ED6F37A8);
    if (v56(v91, 1, v57) == 1)
    {
      sub_1BDD86E30(v90, &qword_1ED6F37A8);
      return 1;
    }
    goto LABEL_44;
  }
  v104 = v110;
  sub_1BDD86DEC(v90, v110, &qword_1ED6F37A8);
  if (v56(v91, 1, v57) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v88, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v104, type metadata accessor for Proto_Version);
LABEL_44:
    v105 = &qword_1EF530A10;
    v106 = v90;
LABEL_50:
    sub_1BDD86E30(v106, v105);
    return 0;
  }
  v107 = v109;
  sub_1BDDA2E8C(v91, v109, type metadata accessor for Proto_Version);
  if (!sub_1BDDFED94(*(_QWORD **)v104, *(_QWORD **)v107)
    || (sub_1BDE003E4(*(_QWORD *)(v104 + 8), *(_QWORD *)(v107 + 8)) & 1) == 0)
  {
    swift_release();
    swift_release();
    sub_1BDD9C3E0(v107, type metadata accessor for Proto_Version);
    sub_1BDD86E30(v112, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v104, type metadata accessor for Proto_Version);
    v106 = v90;
    v105 = &qword_1ED6F37A8;
    goto LABEL_50;
  }
  sub_1BE1B20F0();
  sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v108 = sub_1BE1B2798();
  swift_release();
  swift_release();
  sub_1BDD9C3E0(v107, type metadata accessor for Proto_Version);
  sub_1BDD86E30(v112, &qword_1ED6F37A8);
  sub_1BDD9C3E0(v104, type metadata accessor for Proto_Version);
  sub_1BDD86E30(v90, &qword_1ED6F37A8);
  return (v108 & 1) != 0;
}

uint64_t sub_1BE12D068()
{
  return 0x6F442E6F746F7250;
}

uint64_t sub_1BE12D08C()
{
  sub_1BDD8422C(&qword_1EF530A08, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C682C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE12D0E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52BF30, (uint64_t)qword_1EF549478, a1);
}

uint64_t sub_1BE12D0FC()
{
  sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE12D13C()
{
  sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE12D190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  uint64_t v37;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549490);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549490);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BE1C3950;
  v5 = v37 + v4;
  v6 = v37 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v37 + v4) = 1;
  *(_QWORD *)v6 = "uint";
  *(_QWORD *)(v6 + 8) = 4;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0D3EF08];
  v8 = sub_1BE1B236C();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v37 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "double";
  *(_QWORD *)(v10 + 8) = 6;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v37 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "string";
  *((_QWORD *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v37 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "data";
  *((_QWORD *)v14 + 1) = 4;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v37 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "sint";
  *((_QWORD *)v16 + 1) = 4;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v37 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "uuid";
  *((_QWORD *)v18 + 1) = 4;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v37 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "version";
  *((_QWORD *)v20 + 1) = 7;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v37 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "reference";
  *((_QWORD *)v22 + 1) = 9;
  v22[16] = 2;
  v9();
  v23 = v37 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "optional";
  *(_QWORD *)(v23 + 8) = 8;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v37 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "timestamp";
  *((_QWORD *)v25 + 1) = 9;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v37 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "repeatedValue";
  *((_QWORD *)v27 + 1) = 13;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v37 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "taggedValue";
  *((_QWORD *)v29 + 1) = 11;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v37 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "asset";
  *((_QWORD *)v31 + 1) = 5;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v37 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "custom";
  *((_QWORD *)v33 + 1) = 6;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v37 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "float";
  *((_QWORD *)v35 + 1) = 5;
  v35[16] = 2;
  v9();
  return sub_1BE1B2378();
}

uint64_t sub_1BE12D57C()
{
  return type metadata accessor for Proto_Value._StorageClass(0);
}

uint64_t sub_1BE12D584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char *v19;
  _QWORD v20[2];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a3;
  v31 = a4;
  v29 = a2;
  v27 = type metadata accessor for Proto_CustomCRValue(0);
  MEMORY[0x1E0C80A78](v27);
  v28 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Proto_Asset(0);
  MEMORY[0x1E0C80A78](v25);
  v26 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Proto_TaggedValue(0);
  MEMORY[0x1E0C80A78](v23);
  v24 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Proto_RepeatedValue(0);
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = type metadata accessor for Proto_Timestamp(0);
  MEMORY[0x1E0C80A78](v20[0]);
  v20[1] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Proto_Optional(0);
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for Proto_Version(0);
  MEMORY[0x1E0C80A78](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v15, &qword_1ED6F26F0);
  v17 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 1, v17);
  if ((_DWORD)result != 1)
  {
    v19 = (char *)&loc_1BE12D850 + 4 * byte_1BE1C398C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

BOOL sub_1BE12DC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  char *v20;
  char v21;
  char v22;
  uint64_t v24;
  char *v25;

  v4 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C338);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  v16 = a1 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v15, &qword_1ED6F26F0);
  v17 = a2 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BDD86DEC((uint64_t)v15, (uint64_t)v9, &qword_1ED6F26F0);
  sub_1BDD86DEC(v17, v18, &qword_1ED6F26F0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F26F0);
    if (v19(v18, 1, v4) == 1)
    {
      sub_1BDD86E30((uint64_t)v9, &qword_1ED6F26F0);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1BDD86DEC((uint64_t)v9, (uint64_t)v13, &qword_1ED6F26F0);
  if (v19(v18, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F26F0);
    sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
LABEL_6:
    sub_1BDD86E30((uint64_t)v9, &qword_1EF52C338);
    return 0;
  }
  v20 = v25;
  sub_1BDDA2E8C(v18, (uint64_t)v25, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  sub_1BE147218((uint64_t)v13, v20);
  v22 = v21;
  sub_1BDD9C3E0((uint64_t)v20, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v15, &qword_1ED6F26F0);
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v9, &qword_1ED6F26F0);
  return (v22 & 1) != 0;
}

uint64_t sub_1BE12DEFC()
{
  return 0x61562E6F746F7250;
}

uint64_t sub_1BE12DF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Value, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE12D584);
}

uint64_t sub_1BE12DF40()
{
  sub_1BDD8422C(&qword_1EF530A60, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66C4);
  return sub_1BE1B212C();
}

uint64_t sub_1BE12DF90@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52BF40, (uint64_t)qword_1EF549490, a1);
}

uint64_t sub_1BE12DFAC()
{
  sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
  return sub_1BE1B2288();
}

uint64_t sub_1BE12DFEC()
{
  sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
  return sub_1BE1B2294();
}

uint64_t sub_1BE12E03C(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Value, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12DC44) & 1;
}

uint64_t sub_1BE12E064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v27;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5494A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5494A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BE1C0F40;
  v5 = v27 + v4;
  v6 = v27 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v27 + v4) = 1;
  *(_QWORD *)v6 = "register";
  *(_QWORD *)(v6 + 8) = 8;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0D3EF08];
  v8 = sub_1BE1B236C();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "set";
  *(_QWORD *)(v10 + 8) = 3;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "dictionary";
  *((_QWORD *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "composite";
  *((_QWORD *)v14 + 1) = 9;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "string";
  *((_QWORD *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "sequence";
  *((_QWORD *)v18 + 1) = 8;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "array";
  *((_QWORD *)v20 + 1) = 5;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "counter";
  *((_QWORD *)v22 + 1) = 7;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "orderedSet";
  *(_QWORD *)(v23 + 8) = 10;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "customCRDT";
  *((_QWORD *)v25 + 1) = 10;
  v25[16] = 2;
  v9();
  return sub_1BE1B2378();
}

uint64_t sub_1BE12E360()
{
  return type metadata accessor for Proto_CRDT._StorageClass(0);
}

BOOL sub_1BE12E368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v25 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C348);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  v16 = a1 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v15, &qword_1ED6F2DF0);
  v17 = a2 + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BDD86DEC((uint64_t)v15, (uint64_t)v9, &qword_1ED6F2DF0);
  sub_1BDD86DEC(v17, v18, &qword_1ED6F2DF0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F2DF0);
    if (v19(v18, 1, v4) == 1)
    {
      sub_1BDD86E30((uint64_t)v9, &qword_1ED6F2DF0);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1BDD86DEC((uint64_t)v9, (uint64_t)v13, &qword_1ED6F2DF0);
  if (v19(v18, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F2DF0);
    sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
LABEL_6:
    sub_1BDD86E30((uint64_t)v9, &qword_1EF52C348);
    return 0;
  }
  v20 = v25;
  sub_1BDDA2E8C(v18, v25, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  sub_1BE148144((uint64_t)v13, v20);
  v22 = v21;
  sub_1BDD9C3E0(v20, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v15, &qword_1ED6F2DF0);
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  sub_1BDD86E30((uint64_t)v9, &qword_1ED6F2DF0);
  return (v22 & 1) != 0;
}

uint64_t sub_1BE12E620()
{
  return 0x52432E6F746F7250;
}

uint64_t sub_1BE12E63C()
{
  sub_1BDD8422C(&qword_1EF530A68, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C655C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE12E68C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52BF50, (uint64_t)qword_1EF5494A8, a1);
}

uint64_t sub_1BE12E6A8()
{
  sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
  return sub_1BE1B2288();
}

uint64_t sub_1BE12E6E8()
{
  sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
  return sub_1BE1B2294();
}

uint64_t sub_1BE12E738(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_CRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12E368) & 1;
}

uint64_t sub_1BE12E760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5494C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5494C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1C0F30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "constants";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "referenceKeys";
  *(_QWORD *)(v11 + 8) = 13;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "referenceRetainCounts";
  *((_QWORD *)v13 + 1) = 21;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "assetDigests";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "assetRetainCounts";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "subcapsuleKeys";
  *((_QWORD *)v19 + 1) = 14;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "subcapsuleRetainCounts";
  *((_QWORD *)v21 + 1) = 22;
  v21[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE12E9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;

  type metadata accessor for Proto_RetainCounts._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  v2 = type metadata accessor for Proto_Constants(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceRetainCounts) = v3;
  v4 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests);
  result = sub_1BE1B20CC();
  *v4 = result;
  v4[1] = v6;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetRetainCounts) = v3;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleKeys) = v3;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleRetainCounts) = v3;
  qword_1EF52BB30 = v0;
  return result;
}

uint64_t sub_1BE12EA90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v33;
  _QWORD *v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1
     + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  v7 = type metadata accessor for Proto_Constants(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys);
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys) = MEMORY[0x1E0DEE9D8];
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceRetainCounts);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceRetainCounts) = v9;
  v11 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests);
  *v11 = sub_1BE1B20CC();
  v11[1] = v12;
  v13 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetRetainCounts);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetRetainCounts) = v9;
  v33 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleKeys);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleKeys) = v9;
  v34 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleRetainCounts);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleRetainCounts) = v9;
  v14 = a1
      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v14, (uint64_t)v5, &qword_1ED6F3290);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F3290);
  swift_endAccess();
  v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys);
  swift_beginAccess();
  v16 = *v15;
  swift_beginAccess();
  *v8 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceRetainCounts);
  swift_beginAccess();
  v18 = *v17;
  swift_beginAccess();
  *v10 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests);
  swift_beginAccess();
  v21 = *v19;
  v20 = v19[1];
  swift_beginAccess();
  v22 = *v11;
  v23 = v11[1];
  *v11 = v21;
  v11[1] = v20;
  sub_1BDDB6CA4(v21, v20);
  sub_1BDDB796C(v22, v23);
  v24 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetRetainCounts);
  swift_beginAccess();
  v25 = *v24;
  swift_beginAccess();
  *v13 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleKeys);
  swift_beginAccess();
  v27 = *v26;
  v28 = v33;
  swift_beginAccess();
  *v28 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleRetainCounts);
  swift_beginAccess();
  v30 = *v29;
  swift_bridgeObjectRetain();
  swift_release();
  v31 = v34;
  swift_beginAccess();
  *v31 = v30;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BE12EE10()
{
  uint64_t v0;

  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants, &qword_1ED6F3290);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDDB796C(*(_QWORD *)(v0+ OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests), *(_QWORD *)(v0+ OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests+ 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BE12EEAC()
{
  return type metadata accessor for Proto_RetainCounts._StorageClass(0);
}

uint64_t type metadata accessor for Proto_RetainCounts._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52BB40);
}

void sub_1BE12EEC8()
{
  unint64_t v0;

  sub_1BDD92F18(319, &qword_1ED6F3848, (void (*)(uint64_t))type metadata accessor for Proto_Constants);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BE12EF64()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for Proto_Constants(0);
          sub_1BDD8422C(&qword_1ED6F3830, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C62C4);
          v4 = v3;
          sub_1BE1B2258();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for Proto_KeyPath(0);
          sub_1BDD8422C(&qword_1ED6EFCD0, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C615C);
          v4 = v3;
          sub_1BE1B224C();
          goto LABEL_5;
        case 3:
        case 5:
          swift_beginAccess();
          v4 = v3;
          sub_1BE1B218C();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_1BE1B21A4();
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          type metadata accessor for Proto_KeyPath(0);
          sub_1BDD8422C(&qword_1ED6EFCD0, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C615C);
          v4 = v3;
          sub_1BE1B224C();
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          v4 = v3;
          sub_1BE1B218C();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

uint64_t sub_1BE12F264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Constants(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  v13 = a1
      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v7, &qword_1ED6F3290);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BDD86E30((uint64_t)v7, &qword_1ED6F3290);
    v14 = v21;
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Constants);
    sub_1BDD8422C(&qword_1ED6F3830, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C62C4);
    v15 = v21;
    sub_1BE1B2360();
    v14 = v15;
    result = sub_1BDD9C3E0((uint64_t)v11, type metadata accessor for Proto_Constants);
    if (v15)
      return result;
  }
  v17 = v12
      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v17 + 16)
    || (type metadata accessor for Proto_KeyPath(0),
        sub_1BDD8422C(&qword_1ED6EFCD0, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C615C),
        swift_bridgeObjectRetain(),
        sub_1BE1B2354(),
        result = swift_bridgeObjectRelease(),
        !v14))
  {
    v18 = v12
        + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceRetainCounts;
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)v18 + 16)
      || (swift_bridgeObjectRetain(), sub_1BE1B22A0(), result = swift_bridgeObjectRelease(), !v14))
    {
      v19 = v12
          + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests;
      swift_beginAccess();
      __asm { BR              X10 }
    }
  }
  return result;
}

BOOL sub_1BE12F6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  _QWORD **v25;
  _QWORD *v26;
  _QWORD **v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD **v37;
  _QWORD *v38;
  _QWORD **v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  _QWORD **v45;
  _QWORD *v46;
  _QWORD **v47;
  BOOL v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v63 = a2;
  v3 = type metadata accessor for Proto_Constants(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v61 = (uint64_t)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530708);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3290);
  v10 = MEMORY[0x1E0C80A78](v9);
  v62 = (uint64_t)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v60 - v12;
  v14 = a1;
  v15 = a1
      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1BDD86DEC(v15, (uint64_t)v13, &qword_1ED6F3290);
  v16 = v63
      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  v17 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1BDD86DEC((uint64_t)v13, (uint64_t)v8, &qword_1ED6F3290);
  sub_1BDD86DEC(v16, v17, &qword_1ED6F3290);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v19 = v3;
  if (v18((uint64_t)v8, 1, v3) != 1)
  {
    v49 = v62;
    sub_1BDD86DEC((uint64_t)v8, v62, &qword_1ED6F3290);
    if (v18(v17, 1, v3) != 1)
    {
      v52 = (uint64_t)v13;
      v60[1] = v19;
      v53 = v61;
      sub_1BDDA2E8C(v17, v61, type metadata accessor for Proto_Constants);
      v54 = *(_QWORD *)v49;
      v55 = *(_QWORD *)(v49 + 8);
      swift_retain();
      swift_retain();
      sub_1BDDD6F30(v54, v55);
      if ((v56 & 1) != 0 && (sub_1BDDFFE5C(*(_QWORD **)(v49 + 16), *(_QWORD **)(v53 + 16)) & 1) != 0)
      {
        v57 = v49;
        sub_1BE1B20F0();
        sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v58 = sub_1BE1B2798();
        sub_1BDD9C3E0(v53, type metadata accessor for Proto_Constants);
        sub_1BDD86E30(v52, &qword_1ED6F3290);
        sub_1BDD9C3E0(v57, type metadata accessor for Proto_Constants);
        sub_1BDD86E30((uint64_t)v8, &qword_1ED6F3290);
        if ((v58 & 1) != 0)
          goto LABEL_4;
LABEL_19:
        swift_release();
        swift_release();
        return 0;
      }
      sub_1BDD9C3E0(v53, type metadata accessor for Proto_Constants);
      sub_1BDD86E30(v52, &qword_1ED6F3290);
      sub_1BDD9C3E0(v49, type metadata accessor for Proto_Constants);
      v51 = (uint64_t)v8;
      v50 = &qword_1ED6F3290;
LABEL_18:
      sub_1BDD86E30(v51, v50);
      goto LABEL_19;
    }
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3290);
    sub_1BDD9C3E0(v49, type metadata accessor for Proto_Constants);
LABEL_12:
    v50 = &qword_1EF530708;
    v51 = (uint64_t)v8;
    goto LABEL_18;
  }
  swift_retain();
  swift_retain();
  sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3290);
  if (v18(v17, 1, v3) != 1)
    goto LABEL_12;
  sub_1BDD86E30((uint64_t)v8, &qword_1ED6F3290);
LABEL_4:
  v20 = (uint64_t *)(v14
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys);
  swift_beginAccess();
  v21 = *v20;
  v22 = (uint64_t *)(v63
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys);
  swift_beginAccess();
  v23 = *v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1BDE00904(v21, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
    goto LABEL_19;
  v25 = (_QWORD **)(v14
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceRetainCounts);
  swift_beginAccess();
  v26 = *v25;
  v27 = (_QWORD **)(v63
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceRetainCounts);
  swift_beginAccess();
  if (!sub_1BDDFED94(v26, *v27))
    goto LABEL_19;
  v28 = (uint64_t *)(v14
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests);
  swift_beginAccess();
  v30 = *v28;
  v29 = v28[1];
  v31 = (uint64_t *)(v63
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests);
  swift_beginAccess();
  v33 = *v31;
  v32 = v31[1];
  sub_1BDDB6CA4(v30, v29);
  sub_1BDDB6CA4(v33, v32);
  sub_1BDDD6F30(v30, v29);
  v34 = v14;
  v36 = v35;
  sub_1BDDB796C(v33, v32);
  sub_1BDDB796C(v30, v29);
  if ((v36 & 1) == 0)
    goto LABEL_19;
  v37 = (_QWORD **)(v34
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetRetainCounts);
  swift_beginAccess();
  v38 = *v37;
  v39 = (_QWORD **)(v63
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetRetainCounts);
  swift_beginAccess();
  if (!sub_1BDDFED94(v38, *v39))
    goto LABEL_19;
  v40 = (uint64_t *)(v34
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleKeys);
  swift_beginAccess();
  v41 = *v40;
  v42 = (uint64_t *)(v63
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleKeys);
  swift_beginAccess();
  v43 = *v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = sub_1BDE00904(v41, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0)
    goto LABEL_19;
  v45 = (_QWORD **)(v34
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleRetainCounts);
  swift_beginAccess();
  v46 = *v45;
  v47 = (_QWORD **)(v63
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__subcapsuleRetainCounts);
  swift_beginAccess();
  v48 = sub_1BDDFED94(v46, *v47);
  swift_release();
  swift_release();
  return v48;
}

uint64_t sub_1BE12FD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52BB38, &qword_1EF52BB30, a2);
}

unint64_t sub_1BE12FD74()
{
  return 0xD000000000000012;
}

uint64_t sub_1BE12FD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_RetainCounts, (void (*)(_QWORD))type metadata accessor for Proto_RetainCounts._StorageClass, sub_1BE12EA90, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE12EF64);
}

uint64_t sub_1BE12FDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_RetainCounts, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE12F264);
}

uint64_t sub_1BE12FDE8()
{
  sub_1BDD8422C(&qword_1EF530A70, type metadata accessor for Proto_RetainCounts, (uint64_t)&unk_1BE1C63F4);
  return sub_1BE1B212C();
}

uint64_t sub_1BE12FE38@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52BF60, (uint64_t)qword_1EF5494C0, a1);
}

uint64_t sub_1BE12FE54()
{
  sub_1BDD8422C(&qword_1EF52BB50, type metadata accessor for Proto_RetainCounts, (uint64_t)&unk_1BE1C642C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE12FE94()
{
  sub_1BDD8422C(&qword_1EF52BB50, type metadata accessor for Proto_RetainCounts, (uint64_t)&unk_1BE1C642C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE12FEE4(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_RetainCounts, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12F6DC) & 1;
}

uint64_t sub_1BE12FF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5494D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5494D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "uuids";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "strings";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE13005C()
{
  return 0x6F432E6F746F7250;
}

uint64_t sub_1BE130080()
{
  sub_1BDD8422C(&qword_1EF530A78, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C628C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1300D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BF70, (uint64_t)qword_1EF5494D8, a1);
}

uint64_t sub_1BE1300EC()
{
  sub_1BDD8422C(&qword_1ED6F3830, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C62C4);
  return sub_1BE1B2288();
}

uint64_t sub_1BE13012C()
{
  sub_1BDD8422C(&qword_1ED6F3830, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C62C4);
  return sub_1BE1B2294();
}

uint64_t sub_1BE130180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5494F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5494F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "components";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "data";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE1302D0()
{
  return 0x654B2E6F746F7250;
}

uint64_t sub_1BE1302F4()
{
  sub_1BDD8422C(&qword_1EF530A80, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C6124);
  return sub_1BE1B212C();
}

uint64_t sub_1BE130344@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BF78, (uint64_t)qword_1EF5494F0, a1);
}

uint64_t sub_1BE130360()
{
  sub_1BDD8422C(&qword_1ED6EFCD0, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C615C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE1303A0()
{
  sub_1BDD8422C(&qword_1ED6EFCD0, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C615C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE1303F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549508);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549508);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "uuid";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "counter";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE130544()
{
  return 0x69542E6F746F7250;
}

uint64_t sub_1BE130568()
{
  sub_1BDD8422C(&qword_1EF530A88, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FBC);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1305B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BF80, (uint64_t)qword_1EF549508, a1);
}

uint64_t sub_1BE1305D4()
{
  sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
  return sub_1BE1B2288();
}

uint64_t sub_1BE130614()
{
  sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
  return sub_1BE1B2294();
}

uint64_t sub_1BE130668(uint64_t a1)
{
  return sub_1BE13A4D8(a1, qword_1EF549520, 2, (uint64_t)"runs", 4);
}

uint64_t sub_1BE130684()
{
  return 0x4C522E6F746F7250;
}

uint64_t sub_1BE1306A0()
{
  sub_1BDD8422C(&qword_1EF530A90, type metadata accessor for Proto_RLE, (uint64_t)&unk_1BE1C5E54);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1306F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BF88, (uint64_t)qword_1EF549520, a1);
}

uint64_t sub_1BE13070C()
{
  sub_1BDD8422C(&qword_1ED6F27C8, type metadata accessor for Proto_RLE, (uint64_t)&unk_1BE1C5E8C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE13074C()
{
  sub_1BDD8422C(&qword_1ED6F27C8, type metadata accessor for Proto_RLE, (uint64_t)&unk_1BE1C5E8C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE13079C(_QWORD *a1, char *a2)
{
  return sub_1BE146558(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1BDDFED94, type metadata accessor for Proto_RLE) & 1;
}

uint64_t sub_1BE1307C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549538);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549538);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "uuids";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "indexSets";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE130914()
{
  return 0x65562E6F746F7250;
}

uint64_t sub_1BE130938()
{
  sub_1BDD8422C(&qword_1EF530A98, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5CEC);
  return sub_1BE1B212C();
}

uint64_t sub_1BE130988@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BF90, (uint64_t)qword_1EF549538, a1);
}

uint64_t sub_1BE1309A4()
{
  sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
  return sub_1BE1B2288();
}

uint64_t sub_1BE1309E4()
{
  sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
  return sub_1BE1B2294();
}

uint64_t sub_1BE130A34(uint64_t a1, uint64_t a2)
{
  return sub_1BE146AA4(a1, a2, sub_1BDE003E4, type metadata accessor for Proto_Version) & 1;
}

uint64_t sub_1BE130A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549550);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549550);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "type";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "digest";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "data";
  *(_QWORD *)(v12 + 8) = 4;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE130BF0()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1BE1B2144();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2)
      {
        sub_1BE1B21A4();
      }
      else if (result == 1)
      {
        sub_1BE1B2240();
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

uint64_t sub_1BE130CA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_1BE1B2348(), !v1))
    __asm { BR              X10 }
  return result;
}

uint64_t sub_1BE130E0C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  a1[1] = sub_1BE1B20CC();
  a1[2] = v2;
  a1[3] = sub_1BE1B20CC();
  a1[4] = v3;
  return sub_1BE1B20E4();
}

uint64_t sub_1BE130E4C()
{
  return 0x73412E6F746F7250;
}

uint64_t sub_1BE130E74()
{
  return sub_1BE130BF0();
}

uint64_t sub_1BE130E88()
{
  return sub_1BE130CA4();
}

uint64_t sub_1BE130E9C()
{
  sub_1BDD8422C(&qword_1EF530AA0, type metadata accessor for Proto_Asset, (uint64_t)&unk_1BE1C5B84);
  return sub_1BE1B212C();
}

uint64_t sub_1BE130EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BF98, (uint64_t)qword_1EF549550, a1);
}

uint64_t sub_1BE130F08()
{
  sub_1BDD8422C(&qword_1EF52B378, type metadata accessor for Proto_Asset, (uint64_t)&unk_1BE1C5BBC);
  return sub_1BE1B2288();
}

uint64_t sub_1BE130F48()
{
  sub_1BDD8422C(&qword_1EF52B378, type metadata accessor for Proto_Asset, (uint64_t)&unk_1BE1C5BBC);
  return sub_1BE1B2294();
}

uint64_t sub_1BE130F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549568);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549568);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6910;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "timestamp";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "crdt";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "partialCRDT";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE131160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  type metadata accessor for Proto_Register._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  v2 = type metadata accessor for Proto_Timestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  v4 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = v0 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  v6 = type metadata accessor for Proto_CRDT(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v0+ OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt, 1, 1, v6);
  qword_1ED6EF780 = v0;
  return result;
}

uint64_t sub_1BE131250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v27 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  v13 = type metadata accessor for Proto_Timestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v1 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  v15 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = v1 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  v28 = v1;
  v17 = type metadata accessor for Proto_CRDT(0);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  v19 = v2 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt;
  v18(v2 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt, 1, 1, v17);
  v20 = v27;
  v21 = v27 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1BDD86DEC(v21, (uint64_t)v11, &qword_1ED6F3850);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v11, v12, &qword_1ED6F3850);
  swift_endAccess();
  v22 = v20 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1BDD86DEC(v22, (uint64_t)v8, &qword_1ED6F3770);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v8, v14, &qword_1ED6F3770);
  swift_endAccess();
  v23 = v20 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v23, (uint64_t)v5, &qword_1ED6F3728);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v16, &qword_1ED6F3728);
  swift_endAccess();
  v24 = v20
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt;
  swift_beginAccess();
  sub_1BDD86DEC(v24, (uint64_t)v5, &qword_1ED6F3728);
  swift_release();
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v19, &qword_1ED6F3728);
  swift_endAccess();
  return v28;
}

uint64_t sub_1BE131590()
{
  uint64_t v0;

  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp, &qword_1ED6F3850);
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value, &qword_1ED6F3770);
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt, &qword_1ED6F3728);
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt, &qword_1ED6F3728);
  return swift_deallocClassInstance();
}

uint64_t sub_1BE131618()
{
  return type metadata accessor for Proto_Register._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Register._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1ED6EF7A0);
}

void sub_1BE131634()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BDD92F18(319, &qword_1ED6F2EB0, (void (*)(uint64_t))type metadata accessor for Proto_Timestamp);
  if (v0 <= 0x3F)
  {
    sub_1BDD92F18(319, &qword_1ED6F3778, (void (*)(uint64_t))type metadata accessor for Proto_Value);
    if (v1 <= 0x3F)
    {
      sub_1BDD92F18(319, &qword_1ED6F3730, (void (*)(uint64_t))type metadata accessor for Proto_CRDT);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1BE131704()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1BE1B2144();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for Proto_Timestamp(0);
          sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for Proto_Value(0);
          sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
          goto LABEL_5;
        case 3:
        case 4:
          swift_beginAccess();
          type metadata accessor for Proto_CRDT(0);
          sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
LABEL_5:
          sub_1BE1B2258();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

uint64_t sub_1BE131920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a3;
  v48 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v6 = MEMORY[0x1E0C80A78](v5);
  v42 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v44 = (uint64_t)&v39 - v8;
  v49 = type metadata accessor for Proto_CRDT(0);
  v43 = *(_QWORD *)(v49 - 8);
  v9 = MEMORY[0x1E0C80A78](v49);
  v39 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v40 = (uint64_t)&v39 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for Proto_Value(0);
  v15 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v41 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Proto_Timestamp(0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a1;
  v24 = a1 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1BDD86DEC(v24, (uint64_t)v19, &qword_1ED6F3850);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1BDD86E30((uint64_t)v19, &qword_1ED6F3850);
    v25 = v46;
    v26 = v49;
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v19, (uint64_t)v23, type metadata accessor for Proto_Timestamp);
    sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
    v27 = v46;
    sub_1BE1B2360();
    v25 = v27;
    result = sub_1BDD9C3E0((uint64_t)v23, type metadata accessor for Proto_Timestamp);
    v26 = v49;
    if (v27)
      return result;
  }
  v29 = v50 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1BDD86DEC(v29, (uint64_t)v14, &qword_1ED6F3770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v45) == 1)
  {
    sub_1BDD86E30((uint64_t)v14, &qword_1ED6F3770);
  }
  else
  {
    v30 = v41;
    sub_1BDDA2E8C((uint64_t)v14, v41, type metadata accessor for Proto_Value);
    sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
    sub_1BE1B2360();
    result = sub_1BDD9C3E0(v30, type metadata accessor for Proto_Value);
    if (v25)
      return result;
  }
  v31 = v50 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  v32 = v44;
  sub_1BDD86DEC(v31, v44, &qword_1ED6F3728);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
  if (v33(v32, 1, v26) == 1)
  {
    sub_1BDD86E30(v32, &qword_1ED6F3728);
  }
  else
  {
    v34 = v32;
    v35 = v40;
    sub_1BDDA2E8C(v34, v40, type metadata accessor for Proto_CRDT);
    sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
    sub_1BE1B2360();
    result = sub_1BDD9C3E0(v35, type metadata accessor for Proto_CRDT);
    if (v25)
      return result;
  }
  v36 = v50
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt;
  swift_beginAccess();
  v37 = v42;
  sub_1BDD86DEC(v36, v42, &qword_1ED6F3728);
  if (v33(v37, 1, v26) == 1)
    return sub_1BDD86E30(v37, &qword_1ED6F3728);
  v38 = v39;
  sub_1BDDA2E8C(v37, v39, type metadata accessor for Proto_CRDT);
  sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
  sub_1BE1B2360();
  return sub_1BDD9C3E0(v38, type metadata accessor for Proto_CRDT);
}

uint64_t sub_1BE131E7C(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Register, (uint64_t (*)(uint64_t, uint64_t))sub_1BE131EA4) & 1;
}

BOOL sub_1BE131EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  uint64_t v53;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v98 = a2;
  v90 = type metadata accessor for Proto_CRDT(0);
  v87 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v81 = (uint64_t)v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A30);
  v4 = MEMORY[0x1E0C80A78](v89);
  v82 = (uint64_t)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v88 = (uint64_t)v79 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v8 = MEMORY[0x1E0C80A78](v7);
  v80 = (uint64_t)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v85 = (char *)v79 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v83 = (uint64_t)v79 - v13;
  MEMORY[0x1E0C80A78](v12);
  v86 = (uint64_t)v79 - v14;
  v96 = type metadata accessor for Proto_Value(0);
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v84 = (uint64_t)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C350);
  MEMORY[0x1E0C80A78](v93);
  v97 = (uint64_t)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v18 = MEMORY[0x1E0C80A78](v17);
  v91 = (uint64_t)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v95 = (uint64_t)v79 - v20;
  v21 = type metadata accessor for Proto_Timestamp(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v92 = (_QWORD *)((char *)v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A38);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (_QWORD *)((char *)v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)v79 - v31;
  v33 = a1;
  v34 = a1 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1BDD86DEC(v34, (uint64_t)v32, &qword_1ED6F3850);
  v35 = v98;
  v36 = v98 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  v37 = (uint64_t)&v26[*(int *)(v24 + 48)];
  sub_1BDD86DEC((uint64_t)v32, (uint64_t)v26, &qword_1ED6F3850);
  sub_1BDD86DEC(v36, v37, &qword_1ED6F3850);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v38((uint64_t)v26, 1, v21) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v32, &qword_1ED6F3850);
    v39 = v38(v37, 1, v21);
    v40 = v33;
    if (v39 == 1)
    {
      sub_1BDD86E30((uint64_t)v26, &qword_1ED6F3850);
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  v48 = v33;
  sub_1BDD86DEC((uint64_t)v26, (uint64_t)v30, &qword_1ED6F3850);
  if (v38(v37, 1, v21) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v32, &qword_1ED6F3850);
    sub_1BDD9C3E0((uint64_t)v30, type metadata accessor for Proto_Timestamp);
LABEL_9:
    v49 = &qword_1EF530A38;
    v50 = (uint64_t)v26;
LABEL_18:
    sub_1BDD86E30(v50, v49);
LABEL_19:
    swift_release();
    swift_release();
    return 0;
  }
  v51 = v92;
  sub_1BDDA2E8C(v37, (uint64_t)v92, type metadata accessor for Proto_Timestamp);
  if (*v30 != *v51 || v30[1] != v51[1])
  {
    swift_retain();
    swift_retain();
    sub_1BDD9C3E0((uint64_t)v51, type metadata accessor for Proto_Timestamp);
    sub_1BDD86E30((uint64_t)v32, &qword_1ED6F3850);
    sub_1BDD9C3E0((uint64_t)v30, type metadata accessor for Proto_Timestamp);
    v50 = (uint64_t)v26;
    v49 = &qword_1ED6F3850;
    goto LABEL_18;
  }
  v79[1] = (char *)v51 + *(int *)(v21 + 24);
  sub_1BE1B20F0();
  sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  swift_retain();
  swift_retain();
  v40 = v48;
  v52 = sub_1BE1B2798();
  sub_1BDD9C3E0((uint64_t)v51, type metadata accessor for Proto_Timestamp);
  sub_1BDD86E30((uint64_t)v32, &qword_1ED6F3850);
  sub_1BDD9C3E0((uint64_t)v30, type metadata accessor for Proto_Timestamp);
  sub_1BDD86E30((uint64_t)v26, &qword_1ED6F3850);
  if ((v52 & 1) == 0)
    goto LABEL_19;
LABEL_4:
  v41 = v40 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  v42 = v95;
  sub_1BDD86DEC(v41, v95, &qword_1ED6F3770);
  v43 = v35 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  v44 = v97;
  v45 = v97 + *(int *)(v93 + 48);
  sub_1BDD86DEC(v42, v97, &qword_1ED6F3770);
  sub_1BDD86DEC(v43, v45, &qword_1ED6F3770);
  v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  v47 = v96;
  if (v46(v44, 1, v96) == 1)
  {
    sub_1BDD86E30(v42, &qword_1ED6F3770);
    if (v46(v45, 1, v47) == 1)
    {
      sub_1BDD86E30(v44, &qword_1ED6F3770);
      goto LABEL_22;
    }
    goto LABEL_17;
  }
  v53 = v91;
  sub_1BDD86DEC(v44, v91, &qword_1ED6F3770);
  if (v46(v45, 1, v47) == 1)
  {
    sub_1BDD86E30(v42, &qword_1ED6F3770);
    sub_1BDD9C3E0(v53, type metadata accessor for Proto_Value);
LABEL_17:
    v49 = &qword_1EF52C350;
    v50 = v44;
    goto LABEL_18;
  }
  v55 = v84;
  sub_1BDDA2E8C(v45, v84, type metadata accessor for Proto_Value);
  v56 = sub_1BE147FD4(v53, v55, type metadata accessor for Proto_Value, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12DC44);
  sub_1BDD9C3E0(v55, type metadata accessor for Proto_Value);
  sub_1BDD86E30(v42, &qword_1ED6F3770);
  sub_1BDD9C3E0(v53, type metadata accessor for Proto_Value);
  sub_1BDD86E30(v44, &qword_1ED6F3770);
  if ((v56 & 1) == 0)
    goto LABEL_19;
LABEL_22:
  v57 = v40 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  v58 = v86;
  sub_1BDD86DEC(v57, v86, &qword_1ED6F3728);
  v59 = v35 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  v60 = v89;
  v61 = v88;
  v62 = v88 + *(int *)(v89 + 48);
  sub_1BDD86DEC(v58, v88, &qword_1ED6F3728);
  sub_1BDD86DEC(v59, v62, &qword_1ED6F3728);
  v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  v64 = v90;
  if (v63(v61, 1, v90) == 1)
  {
    sub_1BDD86E30(v58, &qword_1ED6F3728);
    v65 = v63(v62, 1, v64);
    v66 = (uint64_t)v85;
    if (v65 == 1)
    {
      sub_1BDD86E30(v61, &qword_1ED6F3728);
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  v67 = v83;
  sub_1BDD86DEC(v61, v83, &qword_1ED6F3728);
  if (v63(v62, 1, v64) == 1)
  {
    sub_1BDD86E30(v58, &qword_1ED6F3728);
    sub_1BDD9C3E0(v67, type metadata accessor for Proto_CRDT);
LABEL_27:
    sub_1BDD86E30(v61, &qword_1EF530A30);
    goto LABEL_19;
  }
  v68 = v81;
  sub_1BDDA2E8C(v62, v81, type metadata accessor for Proto_CRDT);
  v69 = sub_1BE147FD4(v67, v68, type metadata accessor for Proto_CRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12E368);
  sub_1BDD9C3E0(v68, type metadata accessor for Proto_CRDT);
  v70 = v58;
  v66 = (uint64_t)v85;
  sub_1BDD86E30(v70, &qword_1ED6F3728);
  sub_1BDD9C3E0(v67, type metadata accessor for Proto_CRDT);
  sub_1BDD86E30(v61, &qword_1ED6F3728);
  if ((v69 & 1) == 0)
    goto LABEL_19;
LABEL_30:
  v71 = v40
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt;
  swift_beginAccess();
  sub_1BDD86DEC(v71, v66, &qword_1ED6F3728);
  v72 = v98
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt;
  swift_beginAccess();
  v73 = *(int *)(v60 + 48);
  v74 = v82;
  v75 = v82 + v73;
  sub_1BDD86DEC(v66, v82, &qword_1ED6F3728);
  sub_1BDD86DEC(v72, v75, &qword_1ED6F3728);
  if (v63(v74, 1, v64) != 1)
  {
    v76 = v80;
    sub_1BDD86DEC(v74, v80, &qword_1ED6F3728);
    if (v63(v75, 1, v64) == 1)
    {
      swift_release();
      swift_release();
      sub_1BDD86E30(v66, &qword_1ED6F3728);
      sub_1BDD9C3E0(v76, type metadata accessor for Proto_CRDT);
      goto LABEL_35;
    }
    v77 = v81;
    sub_1BDDA2E8C(v75, v81, type metadata accessor for Proto_CRDT);
    v78 = sub_1BE147FD4(v76, v77, type metadata accessor for Proto_CRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12E368);
    swift_release();
    swift_release();
    sub_1BDD9C3E0(v77, type metadata accessor for Proto_CRDT);
    sub_1BDD86E30(v66, &qword_1ED6F3728);
    sub_1BDD9C3E0(v76, type metadata accessor for Proto_CRDT);
    sub_1BDD86E30(v74, &qword_1ED6F3728);
    return (v78 & 1) != 0;
  }
  swift_release();
  swift_release();
  sub_1BDD86E30(v66, &qword_1ED6F3728);
  if (v63(v75, 1, v64) != 1)
  {
LABEL_35:
    sub_1BDD86E30(v74, &qword_1EF530A30);
    return 0;
  }
  sub_1BDD86E30(v74, &qword_1ED6F3728);
  return 1;
}

uint64_t sub_1BE132AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1ED6EF788, &qword_1ED6EF780, a2);
}

uint64_t sub_1BE132ACC()
{
  return 0x65522E6F746F7250;
}

uint64_t sub_1BE132AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_Register, (void (*)(_QWORD))type metadata accessor for Proto_Register._StorageClass, sub_1BE131250, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE131704);
}

uint64_t sub_1BE132B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Register, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE131920);
}

uint64_t sub_1BE132B48()
{
  sub_1BDD8422C(&qword_1EF530AA8, type metadata accessor for Proto_Register, (uint64_t)&unk_1BE1C5A1C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE132B98@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52BFA0, (uint64_t)qword_1EF549568, a1);
}

uint64_t sub_1BE132BB4()
{
  sub_1BDD8422C(&qword_1ED6EF7B0, type metadata accessor for Proto_Register, (uint64_t)&unk_1BE1C5A54);
  return sub_1BE1B2288();
}

uint64_t sub_1BE132BF4()
{
  sub_1BDD8422C(&qword_1ED6EF7B0, type metadata accessor for Proto_Register, (uint64_t)&unk_1BE1C5A54);
  return sub_1BE1B2294();
}

uint64_t sub_1BE132C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549580);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549580);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "uuid";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "positive";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "negative";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE132DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  type metadata accessor for Proto_Counter._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v1 = v0 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
  v2 = type metadata accessor for Proto_Version(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative, 1, 1, v2);
  qword_1EF530758 = v0;
  return result;
}

uint64_t sub_1BE132E6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  v6 = v1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
  v7 = type metadata accessor for Proto_Version(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = v1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
  v8(v1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative, 1, 1, v7);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v10;
  v11 = a1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
  swift_beginAccess();
  sub_1BDD86DEC(v11, (uint64_t)v5, &qword_1ED6F37A8);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F37A8);
  swift_endAccess();
  v12 = a1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
  swift_beginAccess();
  sub_1BDD86DEC(v12, (uint64_t)v5, &qword_1ED6F37A8);
  swift_release();
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v9, &qword_1ED6F37A8);
  swift_endAccess();
  return v1;
}

uint64_t sub_1BE133038()
{
  return sub_1BE1417E0(&OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive, &qword_1ED6F37A8, &OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative);
}

uint64_t sub_1BE133054()
{
  return type metadata accessor for Proto_Counter._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Counter._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530778);
}

void sub_1BE133070()
{
  unint64_t v0;

  sub_1BDD92F18(319, &qword_1ED6F37B0, (void (*)(uint64_t))type metadata accessor for Proto_Version);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BE1330FC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3 || result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        v4 = v3;
        sub_1BE1B2240();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    swift_beginAccess();
    type metadata accessor for Proto_Version(0);
    sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
    v4 = v3;
    sub_1BE1B2258();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1BE133294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v27 = (uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - v11;
  v13 = type metadata accessor for Proto_Version(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v26 = (uint64_t)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v26 - v17;
  swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 16);
  v29 = a4;
  v28 = a3;
  if (!v19 || (result = sub_1BE1B2348(), !v4))
  {
    v21 = a1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
    swift_beginAccess();
    sub_1BDD86DEC(v21, (uint64_t)v12, &qword_1ED6F37A8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v22(v12, 1, v13) == 1)
    {
      sub_1BDD86E30((uint64_t)v12, &qword_1ED6F37A8);
    }
    else
    {
      sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_Version);
      sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
      sub_1BE1B2360();
      result = sub_1BDD9C3E0((uint64_t)v18, type metadata accessor for Proto_Version);
      if (v4)
        return result;
    }
    v23 = a1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
    swift_beginAccess();
    v24 = v27;
    sub_1BDD86DEC(v23, v27, &qword_1ED6F37A8);
    if (v22((char *)v24, 1, v13) == 1)
    {
      return sub_1BDD86E30(v24, &qword_1ED6F37A8);
    }
    else
    {
      v25 = v26;
      sub_1BDDA2E8C(v24, v26, type metadata accessor for Proto_Version);
      sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
      sub_1BE1B2360();
      return sub_1BDD9C3E0(v25, type metadata accessor for Proto_Version);
    }
  }
  return result;
}

BOOL sub_1BE13356C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _QWORD v48[2];
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = type metadata accessor for Proto_Version(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v53 = (uint64_t)v48 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A10);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v48 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v52 = (uint64_t)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v54 = (uint64_t)v48 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v55 = (uint64_t)v48 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v48 - v23;
  swift_beginAccess();
  v25 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (v25 != *(_QWORD *)(a2 + 16))
    return 0;
  v49 = v8;
  v51 = v13;
  v26 = a1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
  swift_beginAccess();
  sub_1BDD86DEC(v26, (uint64_t)v24, &qword_1ED6F37A8);
  v27 = a2 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__positive;
  swift_beginAccess();
  v50 = v10;
  v28 = (uint64_t)&v15[*(int *)(v10 + 48)];
  sub_1BDD86DEC((uint64_t)v24, (uint64_t)v15, &qword_1ED6F37A8);
  sub_1BDD86DEC(v27, v28, &qword_1ED6F37A8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v29((uint64_t)v15, 1, v4) != 1)
  {
    v36 = v55;
    sub_1BDD86DEC((uint64_t)v15, v55, &qword_1ED6F37A8);
    if (v29(v28, 1, v4) != 1)
    {
      v39 = v53;
      sub_1BDDA2E8C(v28, v53, type metadata accessor for Proto_Version);
      if (sub_1BDDFED94(*(_QWORD **)v36, *(_QWORD **)v39))
      {
        v40 = *(_QWORD *)(v36 + 8);
        v41 = *(_QWORD *)(v39 + 8);
        swift_retain();
        swift_retain();
        if ((sub_1BDE003E4(v40, v41) & 1) != 0)
        {
          v48[1] = v36 + *(int *)(v4 + 24);
          sub_1BE1B20F0();
          sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
          v42 = sub_1BE1B2798();
          sub_1BDD9C3E0(v39, type metadata accessor for Proto_Version);
          sub_1BDD86E30((uint64_t)v24, &qword_1ED6F37A8);
          sub_1BDD9C3E0(v36, type metadata accessor for Proto_Version);
          sub_1BDD86E30((uint64_t)v15, &qword_1ED6F37A8);
          if ((v42 & 1) != 0)
            goto LABEL_5;
LABEL_22:
          swift_release();
          swift_release();
          return 0;
        }
      }
      else
      {
        swift_retain();
        swift_retain();
      }
      sub_1BDD9C3E0(v39, type metadata accessor for Proto_Version);
      sub_1BDD86E30((uint64_t)v24, &qword_1ED6F37A8);
      sub_1BDD9C3E0(v36, type metadata accessor for Proto_Version);
      v38 = (uint64_t)v15;
      v37 = &qword_1ED6F37A8;
LABEL_21:
      sub_1BDD86E30(v38, v37);
      goto LABEL_22;
    }
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v24, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v36, type metadata accessor for Proto_Version);
LABEL_11:
    v37 = &qword_1EF530A10;
    v38 = (uint64_t)v15;
    goto LABEL_21;
  }
  swift_retain();
  swift_retain();
  sub_1BDD86E30((uint64_t)v24, &qword_1ED6F37A8);
  if (v29(v28, 1, v4) != 1)
    goto LABEL_11;
  sub_1BDD86E30((uint64_t)v15, &qword_1ED6F37A8);
LABEL_5:
  v30 = a1 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
  swift_beginAccess();
  v31 = v54;
  sub_1BDD86DEC(v30, v54, &qword_1ED6F37A8);
  v32 = a2 + OBJC_IVAR____TtCV9Coherence13Proto_CounterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__negative;
  swift_beginAccess();
  v33 = (uint64_t)v51;
  v34 = (uint64_t)&v51[*(int *)(v50 + 48)];
  sub_1BDD86DEC(v31, (uint64_t)v51, &qword_1ED6F37A8);
  sub_1BDD86DEC(v32, v34, &qword_1ED6F37A8);
  if (v29(v33, 1, v4) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v31, &qword_1ED6F37A8);
    if (v29(v34, 1, v4) == 1)
    {
      sub_1BDD86E30(v33, &qword_1ED6F37A8);
      return 1;
    }
    goto LABEL_18;
  }
  v43 = v52;
  sub_1BDD86DEC(v33, v52, &qword_1ED6F37A8);
  if (v29(v34, 1, v4) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v31, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v43, type metadata accessor for Proto_Version);
LABEL_18:
    v44 = &qword_1EF530A10;
    v45 = v33;
LABEL_28:
    sub_1BDD86E30(v45, v44);
    return 0;
  }
  v46 = (uint64_t)v49;
  sub_1BDDA2E8C(v34, (uint64_t)v49, type metadata accessor for Proto_Version);
  if (!sub_1BDDFED94(*(_QWORD **)v43, *(_QWORD **)v46)
    || (sub_1BDE003E4(*(_QWORD *)(v43 + 8), *(_QWORD *)(v46 + 8)) & 1) == 0)
  {
    swift_release();
    swift_release();
    sub_1BDD9C3E0(v46, type metadata accessor for Proto_Version);
    sub_1BDD86E30(v31, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v43, type metadata accessor for Proto_Version);
    v45 = v33;
    v44 = &qword_1ED6F37A8;
    goto LABEL_28;
  }
  sub_1BE1B20F0();
  sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v47 = sub_1BE1B2798();
  swift_release();
  swift_release();
  sub_1BDD9C3E0(v46, type metadata accessor for Proto_Version);
  sub_1BDD86E30(v31, &qword_1ED6F37A8);
  sub_1BDD9C3E0(v43, type metadata accessor for Proto_Version);
  sub_1BDD86E30(v33, &qword_1ED6F37A8);
  return (v47 & 1) != 0;
}

uint64_t sub_1BE133C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52BFB8, &qword_1EF530758, a2);
}

uint64_t sub_1BE133CB8()
{
  return 0x6F432E6F746F7250;
}

uint64_t sub_1BE133CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_Counter, (void (*)(_QWORD))type metadata accessor for Proto_Counter._StorageClass, sub_1BE132E6C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE1330FC);
}

uint64_t sub_1BE133D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Counter, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE133294);
}

uint64_t sub_1BE133D34()
{
  sub_1BDD8422C(&qword_1EF530AB0, type metadata accessor for Proto_Counter, (uint64_t)&unk_1BE1C58B4);
  return sub_1BE1B212C();
}

uint64_t sub_1BE133D84@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BFB0, (uint64_t)qword_1EF549580, a1);
}

uint64_t sub_1BE133DA0()
{
  sub_1BDD8422C(&qword_1EF530910, type metadata accessor for Proto_Counter, (uint64_t)&unk_1BE1C58EC);
  return sub_1BE1B2288();
}

uint64_t sub_1BE133DE0()
{
  sub_1BDD8422C(&qword_1EF530910, type metadata accessor for Proto_Counter, (uint64_t)&unk_1BE1C58EC);
  return sub_1BE1B2294();
}

uint64_t sub_1BE133E30(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Counter, (uint64_t (*)(uint64_t, uint64_t))sub_1BE13356C) & 1;
}

uint64_t sub_1BE133E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549598);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549598);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1C0F20;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "uuid";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "version";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "timestamp";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "insertions";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "minVersion";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "removed";
  *((_QWORD *)v19 + 1) = 7;
  v19[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE13408C()
{
  return type metadata accessor for Proto_Set._StorageClass(0);
}

uint64_t sub_1BE134094(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Set, sub_1BE1340BC) & 1;
}

uint64_t sub_1BE1340BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  _QWORD *v76;
  int v77;
  uint64_t (*v78)(uint64_t);
  uint64_t v79;
  _QWORD *v80;
  char v81;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v100 = type metadata accessor for Proto_Timestamp(0);
  v98 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v94 = (uint64_t *)((char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A38);
  MEMORY[0x1E0C80A78](v97);
  v99 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v7 = MEMORY[0x1E0C80A78](v6);
  v95 = (uint64_t *)((char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v101 = (uint64_t)&v88 - v9;
  v10 = type metadata accessor for Proto_Version(0);
  v104 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v96 = (uint64_t)&v88 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A10);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v88 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v92 = (uint64_t)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v93 = (uint64_t)&v88 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v102 = (uint64_t)&v88 - v27;
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v88 - v28;
  swift_beginAccess();
  v30 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (v30 == *(_QWORD *)(a2 + 16))
  {
    v89 = v13;
    v90 = v18;
    v31 = a1 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    v32 = a1;
    v33 = a2;
    sub_1BDD86DEC(v31, (uint64_t)v29, &qword_1ED6F37A8);
    v34 = a2 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    v91 = v15;
    v35 = (uint64_t)&v20[*(int *)(v15 + 48)];
    sub_1BDD86DEC((uint64_t)v29, (uint64_t)v20, &qword_1ED6F37A8);
    sub_1BDD86DEC(v34, v35, &qword_1ED6F37A8);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
    v37 = v36(v20, 1, v10);
    v38 = v10;
    v103 = v32;
    if (v37 == 1)
    {
      swift_retain();
      swift_retain();
      sub_1BDD86E30((uint64_t)v29, &qword_1ED6F37A8);
      if (v36((char *)v35, 1, v10) != 1)
      {
LABEL_17:
        v66 = &qword_1EF530A10;
        v67 = (uint64_t)v20;
LABEL_34:
        sub_1BDD86E30(v67, v66);
        goto LABEL_35;
      }
      sub_1BDD86E30((uint64_t)v20, &qword_1ED6F37A8);
      goto LABEL_5;
    }
    v63 = v33;
    v64 = v102;
    sub_1BDD86DEC((uint64_t)v20, v102, &qword_1ED6F37A8);
    if (v36((char *)v35, 1, v10) == 1)
    {
      swift_retain();
      swift_retain();
      sub_1BDD86E30((uint64_t)v29, &qword_1ED6F37A8);
      v65 = v64;
LABEL_16:
      sub_1BDD9C3E0(v65, type metadata accessor for Proto_Version);
      goto LABEL_17;
    }
    v68 = v96;
    sub_1BDDA2E8C(v35, v96, type metadata accessor for Proto_Version);
    v69 = v64;
    if (sub_1BDDFED94(*(_QWORD **)v64, *(_QWORD **)v68))
    {
      v104 = v38;
      v70 = *(_QWORD *)(v64 + 8);
      v71 = *(_QWORD *)(v68 + 8);
      swift_retain();
      v72 = v69;
      swift_retain();
      if ((sub_1BDE003E4(v70, v71) & 1) != 0)
      {
        v73 = v68;
        v74 = v104;
        sub_1BE1B20F0();
        sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v75 = sub_1BE1B2798();
        sub_1BDD9C3E0(v73, type metadata accessor for Proto_Version);
        sub_1BDD86E30((uint64_t)v29, &qword_1ED6F37A8);
        v38 = v74;
        v33 = v63;
        sub_1BDD9C3E0(v102, type metadata accessor for Proto_Version);
        sub_1BDD86E30((uint64_t)v20, &qword_1ED6F37A8);
        if ((v75 & 1) == 0)
          goto LABEL_35;
LABEL_5:
        v39 = v103 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
        swift_beginAccess();
        v40 = v101;
        sub_1BDD86DEC(v39, v101, &qword_1ED6F3850);
        v41 = v33 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
        swift_beginAccess();
        v20 = v99;
        v42 = (uint64_t)&v99[*(int *)(v97 + 48)];
        sub_1BDD86DEC(v40, (uint64_t)v99, &qword_1ED6F3850);
        sub_1BDD86DEC(v41, v42, &qword_1ED6F3850);
        v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
        v44 = v100;
        if (v43((uint64_t)v20, 1, v100) == 1)
        {
          sub_1BDD86E30(v40, &qword_1ED6F3850);
          v45 = v43(v42, 1, v44);
          v46 = v91;
          if (v45 == 1)
          {
            sub_1BDD86E30((uint64_t)v20, &qword_1ED6F3850);
LABEL_8:
            v47 = v103;
            v48 = (uint64_t *)(v103
                            + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
            swift_beginAccess();
            v49 = *v48;
            v50 = (uint64_t *)(v33
                            + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
            swift_beginAccess();
            v51 = *v50;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v52 = sub_1BDE029E8(v49, v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v52 & 1) == 0)
              goto LABEL_35;
            v53 = v47
                + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__minVersion;
            swift_beginAccess();
            v54 = &qword_1ED6F37A8;
            v55 = v93;
            sub_1BDD86DEC(v53, v93, &qword_1ED6F37A8);
            v56 = v33
                + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__minVersion;
            swift_beginAccess();
            v20 = v90;
            v57 = (uint64_t)&v90[*(int *)(v46 + 48)];
            sub_1BDD86DEC(v55, (uint64_t)v90, &qword_1ED6F37A8);
            sub_1BDD86DEC(v56, v57, &qword_1ED6F37A8);
            if (v36(v20, 1, v38) == 1)
            {
              sub_1BDD86E30(v55, &qword_1ED6F37A8);
              if (v36((char *)v57, 1, v38) == 1)
              {
                sub_1BDD86E30((uint64_t)v20, &qword_1ED6F37A8);
LABEL_12:
                v58 = (uint64_t *)(v103
                                + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removed);
                swift_beginAccess();
                v59 = *v58;
                v60 = (uint64_t *)(v33
                                + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removed);
                swift_beginAccess();
                v61 = *v60;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v62 = sub_1BDE029E8(v59, v61);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_36:
                swift_release();
                swift_release();
                return v62 & 1;
              }
              goto LABEL_17;
            }
            v83 = v92;
            sub_1BDD86DEC((uint64_t)v20, v92, &qword_1ED6F37A8);
            if (v36((char *)v57, 1, v38) == 1)
            {
              sub_1BDD86E30(v93, &qword_1ED6F37A8);
              v65 = v83;
              goto LABEL_16;
            }
            v84 = (uint64_t)v89;
            sub_1BDDA2E8C(v57, (uint64_t)v89, type metadata accessor for Proto_Version);
            v85 = sub_1BDDFED94(*(_QWORD **)v83, *(_QWORD **)v84);
            v86 = v93;
            if (v85 && (sub_1BDE003E4(*(_QWORD *)(v83 + 8), *(_QWORD *)(v84 + 8)) & 1) != 0)
            {
              sub_1BE1B20F0();
              sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
              v87 = sub_1BE1B2798();
              sub_1BDD9C3E0(v84, type metadata accessor for Proto_Version);
              sub_1BDD86E30(v86, &qword_1ED6F37A8);
              sub_1BDD9C3E0(v83, type metadata accessor for Proto_Version);
              sub_1BDD86E30((uint64_t)v90, &qword_1ED6F37A8);
              if ((v87 & 1) != 0)
                goto LABEL_12;
LABEL_35:
              v62 = 0;
              goto LABEL_36;
            }
            sub_1BDD9C3E0(v84, type metadata accessor for Proto_Version);
            sub_1BDD86E30(v86, &qword_1ED6F37A8);
            sub_1BDD9C3E0(v83, type metadata accessor for Proto_Version);
            v67 = (uint64_t)v90;
LABEL_33:
            v66 = v54;
            goto LABEL_34;
          }
LABEL_24:
          v66 = &qword_1EF530A38;
          v67 = (uint64_t)v20;
          goto LABEL_34;
        }
        v76 = v95;
        sub_1BDD86DEC((uint64_t)v20, (uint64_t)v95, &qword_1ED6F3850);
        v77 = v43(v42, 1, v44);
        v46 = v91;
        if (v77 == 1)
        {
          sub_1BDD86E30(v101, &qword_1ED6F3850);
          sub_1BDD9C3E0((uint64_t)v76, type metadata accessor for Proto_Timestamp);
          goto LABEL_24;
        }
        v80 = v94;
        sub_1BDDA2E8C(v42, (uint64_t)v94, type metadata accessor for Proto_Timestamp);
        if (*v76 == *v80 && v76[1] == v80[1])
        {
          sub_1BE1B20F0();
          sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
          v81 = sub_1BE1B2798();
          sub_1BDD9C3E0((uint64_t)v80, type metadata accessor for Proto_Timestamp);
          sub_1BDD86E30(v101, &qword_1ED6F3850);
          sub_1BDD9C3E0((uint64_t)v95, type metadata accessor for Proto_Timestamp);
          sub_1BDD86E30((uint64_t)v20, &qword_1ED6F3850);
          if ((v81 & 1) == 0)
            goto LABEL_35;
          goto LABEL_8;
        }
        v78 = type metadata accessor for Proto_Timestamp;
        sub_1BDD9C3E0((uint64_t)v80, type metadata accessor for Proto_Timestamp);
        v54 = &qword_1ED6F3850;
        sub_1BDD86E30(v101, &qword_1ED6F3850);
        v79 = (uint64_t)v76;
LABEL_32:
        sub_1BDD9C3E0(v79, v78);
        v67 = (uint64_t)v20;
        goto LABEL_33;
      }
    }
    else
    {
      swift_retain();
      v72 = v64;
      swift_retain();
    }
    v78 = type metadata accessor for Proto_Version;
    sub_1BDD9C3E0(v68, type metadata accessor for Proto_Version);
    v54 = &qword_1ED6F37A8;
    sub_1BDD86E30((uint64_t)v29, &qword_1ED6F37A8);
    v79 = v72;
    goto LABEL_32;
  }
  v62 = 0;
  return v62 & 1;
}

uint64_t sub_1BE134BD4()
{
  return 0x65532E6F746F7250;
}

uint64_t sub_1BE134BF0()
{
  sub_1BDD8422C(&qword_1EF530AB8, type metadata accessor for Proto_Set, (uint64_t)&unk_1BE1C574C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE134C40@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52BFC0, (uint64_t)qword_1EF549598, a1);
}

uint64_t sub_1BE134C5C()
{
  sub_1BDD8422C(&qword_1ED6F2840, type metadata accessor for Proto_Set, (uint64_t)&unk_1BE1C5784);
  return sub_1BE1B2288();
}

uint64_t sub_1BE134C9C()
{
  sub_1BDD8422C(&qword_1ED6F2840, type metadata accessor for Proto_Set, (uint64_t)&unk_1BE1C5784);
  return sub_1BE1B2294();
}

uint64_t sub_1BE134CF0()
{
  uint64_t result;

  result = sub_1BE1B284C();
  qword_1EF5495B0 = 0x65532E6F746F7250;
  *(_QWORD *)algn_1EF5495B8 = 0xE900000000000074;
  return result;
}

uint64_t sub_1BE134D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5495C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5495C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6910;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "addedBy";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "partialValue";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE134F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for Proto_Set.Element._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  v2 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  v4 = type metadata accessor for Proto_CRDT(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v6 = v0 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  v7 = type metadata accessor for Proto_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5)(v0+ OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue, 1, 1, v4);
  qword_1ED6EF6E0 = v0;
  return result;
}

uint64_t sub_1BE13500C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  v12 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = v1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  v14 = type metadata accessor for Proto_CRDT(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v16 = v1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  v17 = type metadata accessor for Proto_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v1
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue;
  v15(v1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue, 1, 1, v14);
  v19 = a1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v19, (uint64_t)v10, &qword_1ED6F3770);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v10, v11, &qword_1ED6F3770);
  swift_endAccess();
  v20 = a1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1BDD86DEC(v20, (uint64_t)v7, &qword_1ED6F3728);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v7, v13, &qword_1ED6F3728);
  swift_endAccess();
  v21 = a1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  v22 = v25;
  sub_1BDD86DEC(v21, v25, &qword_1ED6F37A8);
  swift_beginAccess();
  sub_1BDDA1AF4(v22, v16, &qword_1ED6F37A8);
  swift_endAccess();
  v23 = a1
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue;
  swift_beginAccess();
  sub_1BDD86DEC(v23, (uint64_t)v7, &qword_1ED6F3728);
  swift_release();
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v7, v18, &qword_1ED6F3728);
  swift_endAccess();
  return v1;
}

uint64_t sub_1BE135348()
{
  uint64_t v0;

  sub_1BDD86E30(v0 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key, &qword_1ED6F3770);
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value, &qword_1ED6F3728);
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy, &qword_1ED6F37A8);
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue, &qword_1ED6F3728);
  return swift_deallocClassInstance();
}

uint64_t sub_1BE1353D0()
{
  return type metadata accessor for Proto_Set.Element._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Set.Element._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1ED6EF710);
}

void sub_1BE1353EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BDD92F18(319, &qword_1ED6F3778, (void (*)(uint64_t))type metadata accessor for Proto_Value);
  if (v0 <= 0x3F)
  {
    sub_1BDD92F18(319, &qword_1ED6F3730, (void (*)(uint64_t))type metadata accessor for Proto_CRDT);
    if (v1 <= 0x3F)
    {
      sub_1BDD92F18(319, &qword_1ED6F37B0, (void (*)(uint64_t))type metadata accessor for Proto_Version);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1BE1354BC()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1BE1B2144();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for Proto_Value(0);
          sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
          goto LABEL_5;
        case 2:
        case 4:
          swift_beginAccess();
          type metadata accessor for Proto_CRDT(0);
          sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for Proto_Version(0);
          sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
LABEL_5:
          sub_1BE1B2258();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

uint64_t sub_1BE1356D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a3;
  v51 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v5);
  v46 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Proto_Version(0);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v42 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v9 = MEMORY[0x1E0C80A78](v8);
  v44 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - v11;
  v52 = type metadata accessor for Proto_CRDT(0);
  v48 = *(_QWORD *)(v52 - 8);
  v13 = MEMORY[0x1E0C80A78](v52);
  v41 = (uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v43 = (uint64_t)&v41 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Proto_Value(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1;
  v24 = a1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v24, (uint64_t)v18, &qword_1ED6F3770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1BDD86E30((uint64_t)v18, &qword_1ED6F3770);
    v25 = v49;
    v26 = v23;
    v27 = v52;
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v18, (uint64_t)v22, type metadata accessor for Proto_Value);
    sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
    v28 = v49;
    sub_1BE1B2360();
    v25 = v28;
    result = sub_1BDD9C3E0((uint64_t)v22, type metadata accessor for Proto_Value);
    v26 = v23;
    v27 = v52;
    if (v28)
      return result;
  }
  v30 = v26 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1BDD86DEC(v30, (uint64_t)v12, &qword_1ED6F3728);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  if (v31(v12, 1, v27) == 1)
  {
    sub_1BDD86E30((uint64_t)v12, &qword_1ED6F3728);
  }
  else
  {
    v32 = (uint64_t)v12;
    v33 = v43;
    sub_1BDDA2E8C(v32, v43, type metadata accessor for Proto_CRDT);
    sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
    sub_1BE1B2360();
    result = sub_1BDD9C3E0(v33, type metadata accessor for Proto_CRDT);
    if (v25)
      return result;
  }
  v34 = v26 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  v35 = v46;
  sub_1BDD86DEC(v34, v46, &qword_1ED6F37A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v35, 1, v47) == 1)
  {
    sub_1BDD86E30(v35, &qword_1ED6F37A8);
  }
  else
  {
    v36 = v35;
    v37 = v42;
    v52 = (uint64_t)v31;
    sub_1BDDA2E8C(v36, v42, type metadata accessor for Proto_Version);
    sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
    sub_1BE1B2360();
    v31 = (unsigned int (*)(char *, uint64_t, uint64_t))v52;
    result = sub_1BDD9C3E0(v37, type metadata accessor for Proto_Version);
    if (v25)
      return result;
  }
  v38 = v26
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue;
  swift_beginAccess();
  v39 = v44;
  sub_1BDD86DEC(v38, v44, &qword_1ED6F3728);
  if (v31((char *)v39, 1, v27) == 1)
    return sub_1BDD86E30(v39, &qword_1ED6F3728);
  v40 = v41;
  sub_1BDDA2E8C(v39, v41, type metadata accessor for Proto_CRDT);
  sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
  sub_1BE1B2360();
  return sub_1BDD9C3E0(v40, type metadata accessor for Proto_CRDT);
}

BOOL sub_1BE135C44(uint64_t a1, unsigned int (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(uint64_t, uint64_t, uint64_t);

  v102 = a2;
  v92 = type metadata accessor for Proto_Version(0);
  v90 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v85 = (uint64_t)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A10);
  MEMORY[0x1E0C80A78](v89);
  v91 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v87 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v100 = (uint64_t)&v84 - v8;
  v99 = type metadata accessor for Proto_CRDT(0);
  v95 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v88 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A30);
  v10 = MEMORY[0x1E0C80A78](v97);
  v86 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v96 = (uint64_t)&v84 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v14 = MEMORY[0x1E0C80A78](v13);
  v84 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v98 = (char *)&v84 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v93 = (uint64_t)&v84 - v19;
  MEMORY[0x1E0C80A78](v18);
  v101 = (uint64_t)&v84 - v20;
  v21 = type metadata accessor for Proto_Value(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v94 = (uint64_t)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C350);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v84 - v31;
  v33 = a1;
  v34 = a1 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1BDD86DEC(v34, (uint64_t)v32, &qword_1ED6F3770);
  v35 = v102;
  v36 = (uint64_t)v102
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  v37 = (uint64_t)&v26[*(int *)(v24 + 48)];
  sub_1BDD86DEC((uint64_t)v32, (uint64_t)v26, &qword_1ED6F3770);
  sub_1BDD86DEC(v36, v37, &qword_1ED6F3770);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v38((uint64_t)v26, 1, v21) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v32, &qword_1ED6F3770);
    v39 = v35;
    v40 = v33;
    if (v38(v37, 1, v21) == 1)
    {
      sub_1BDD86E30((uint64_t)v26, &qword_1ED6F3770);
      goto LABEL_8;
    }
LABEL_6:
    v41 = &qword_1EF52C350;
    v42 = (uint64_t)v26;
LABEL_29:
    sub_1BDD86E30(v42, v41);
    goto LABEL_30;
  }
  v39 = v35;
  sub_1BDD86DEC((uint64_t)v26, (uint64_t)v30, &qword_1ED6F3770);
  if (v38(v37, 1, v21) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v32, &qword_1ED6F3770);
    sub_1BDD9C3E0((uint64_t)v30, type metadata accessor for Proto_Value);
    goto LABEL_6;
  }
  v43 = v94;
  sub_1BDDA2E8C(v37, v94, type metadata accessor for Proto_Value);
  v40 = v33;
  swift_retain();
  swift_retain();
  v44 = sub_1BE147FD4((uint64_t)v30, v43, type metadata accessor for Proto_Value, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12DC44);
  sub_1BDD9C3E0(v43, type metadata accessor for Proto_Value);
  sub_1BDD86E30((uint64_t)v32, &qword_1ED6F3770);
  sub_1BDD9C3E0((uint64_t)v30, type metadata accessor for Proto_Value);
  sub_1BDD86E30((uint64_t)v26, &qword_1ED6F3770);
  if ((v44 & 1) == 0)
    goto LABEL_30;
LABEL_8:
  v45 = v40 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  v46 = v101;
  sub_1BDD86DEC(v45, v101, &qword_1ED6F3728);
  v47 = (uint64_t)v39
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  v48 = v97;
  v49 = v96;
  v50 = v96 + *(int *)(v97 + 48);
  sub_1BDD86DEC(v46, v96, &qword_1ED6F3728);
  sub_1BDD86DEC(v47, v50, &qword_1ED6F3728);
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
  v52 = v99;
  if (v51(v49, 1, v99) == 1)
  {
    sub_1BDD86E30(v46, &qword_1ED6F3728);
    v53 = v51(v50, 1, v52);
    v54 = (uint64_t)v98;
    v55 = v100;
    if (v53 == 1)
    {
      v102 = v51;
      sub_1BDD86E30(v49, &qword_1ED6F3728);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v56 = v48;
  v57 = v93;
  sub_1BDD86DEC(v49, v93, &qword_1ED6F3728);
  v58 = v51(v50, 1, v52);
  v59 = v98;
  v55 = v100;
  if (v58 == 1)
  {
    sub_1BDD86E30(v101, &qword_1ED6F3728);
    sub_1BDD9C3E0(v57, type metadata accessor for Proto_CRDT);
LABEL_13:
    v41 = &qword_1EF530A30;
    v42 = v49;
    goto LABEL_29;
  }
  v102 = v51;
  v60 = v49;
  v61 = v88;
  sub_1BDDA2E8C(v50, v88, type metadata accessor for Proto_CRDT);
  v62 = sub_1BE147FD4(v57, v61, type metadata accessor for Proto_CRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12E368);
  sub_1BDD9C3E0(v61, type metadata accessor for Proto_CRDT);
  sub_1BDD86E30(v101, &qword_1ED6F3728);
  sub_1BDD9C3E0(v57, type metadata accessor for Proto_CRDT);
  v63 = v60;
  v54 = (uint64_t)v59;
  sub_1BDD86E30(v63, &qword_1ED6F3728);
  v48 = v56;
  if ((v62 & 1) == 0)
    goto LABEL_30;
LABEL_15:
  v64 = v40 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  sub_1BDD86DEC(v64, v55, &qword_1ED6F37A8);
  v65 = (uint64_t)v39
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  v66 = v91;
  v67 = v91 + *(int *)(v89 + 48);
  sub_1BDD86DEC(v55, v91, &qword_1ED6F37A8);
  sub_1BDD86DEC(v65, v67, &qword_1ED6F37A8);
  v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  v69 = v92;
  if (v68(v66, 1, v92) != 1)
  {
    v76 = v87;
    sub_1BDD86DEC(v66, v87, &qword_1ED6F37A8);
    if (v68(v67, 1, v69) == 1)
    {
      sub_1BDD86E30(v100, &qword_1ED6F37A8);
      sub_1BDD9C3E0(v76, type metadata accessor for Proto_Version);
      goto LABEL_23;
    }
    v77 = v85;
    sub_1BDDA2E8C(v67, v85, type metadata accessor for Proto_Version);
    if (!sub_1BDDFED94(*(_QWORD **)v76, *(_QWORD **)v77)
      || (sub_1BDE003E4(*(_QWORD *)(v76 + 8), *(_QWORD *)(v77 + 8)) & 1) == 0)
    {
      sub_1BDD9C3E0(v77, type metadata accessor for Proto_Version);
      sub_1BDD86E30(v100, &qword_1ED6F37A8);
      sub_1BDD9C3E0(v76, type metadata accessor for Proto_Version);
      v42 = v66;
      v41 = &qword_1ED6F37A8;
      goto LABEL_29;
    }
    v78 = v77;
    sub_1BE1B20F0();
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v79 = sub_1BE1B2798();
    sub_1BDD9C3E0(v78, type metadata accessor for Proto_Version);
    sub_1BDD86E30(v100, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v76, type metadata accessor for Proto_Version);
    sub_1BDD86E30(v66, &qword_1ED6F37A8);
    if ((v79 & 1) != 0)
      goto LABEL_18;
LABEL_30:
    swift_release();
    swift_release();
    return 0;
  }
  sub_1BDD86E30(v55, &qword_1ED6F37A8);
  if (v68(v67, 1, v69) != 1)
  {
LABEL_23:
    v41 = &qword_1EF530A10;
    v42 = v66;
    goto LABEL_29;
  }
  sub_1BDD86E30(v66, &qword_1ED6F37A8);
LABEL_18:
  v70 = v40
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue;
  swift_beginAccess();
  sub_1BDD86DEC(v70, v54, &qword_1ED6F3728);
  v71 = (uint64_t)v39
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue;
  swift_beginAccess();
  v72 = v86;
  v73 = v86 + *(int *)(v48 + 48);
  sub_1BDD86DEC(v54, v86, &qword_1ED6F3728);
  sub_1BDD86DEC(v71, v73, &qword_1ED6F3728);
  v74 = v99;
  v75 = v102;
  if (v102(v72, 1, v99) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v54, &qword_1ED6F3728);
    if (v75(v73, 1, v74) == 1)
    {
      sub_1BDD86E30(v72, &qword_1ED6F3728);
      return 1;
    }
    goto LABEL_35;
  }
  v81 = v84;
  sub_1BDD86DEC(v72, v84, &qword_1ED6F3728);
  if (v75(v73, 1, v74) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v54, &qword_1ED6F3728);
    sub_1BDD9C3E0(v81, type metadata accessor for Proto_CRDT);
LABEL_35:
    sub_1BDD86E30(v72, &qword_1EF530A30);
    return 0;
  }
  v82 = v88;
  sub_1BDDA2E8C(v73, v88, type metadata accessor for Proto_CRDT);
  v83 = sub_1BE147FD4(v81, v82, type metadata accessor for Proto_CRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12E368);
  swift_release();
  swift_release();
  sub_1BDD9C3E0(v82, type metadata accessor for Proto_CRDT);
  sub_1BDD86E30(v54, &qword_1ED6F3728);
  sub_1BDD9C3E0(v81, type metadata accessor for Proto_CRDT);
  sub_1BDD86E30(v72, &qword_1ED6F3728);
  return (v83 & 1) != 0;
}

uint64_t sub_1BE13686C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1ED6EF6F0, &qword_1ED6EF6E0, a2);
}

uint64_t sub_1BE136888(uint64_t a1, uint64_t a2)
{
  return sub_1BDE429D4(a1, a2, &qword_1EF52BFD0, &qword_1EF5495B0);
}

uint64_t sub_1BE1368A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_Set.Element, (void (*)(_QWORD))type metadata accessor for Proto_Set.Element._StorageClass, sub_1BE13500C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE1354BC);
}

uint64_t sub_1BE1368DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Set.Element, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE1356D8);
}

uint64_t sub_1BE136900()
{
  sub_1BDD8422C(&qword_1EF530AC0, type metadata accessor for Proto_Set.Element, (uint64_t)&unk_1BE1C55E4);
  return sub_1BE1B212C();
}

uint64_t sub_1BE136950@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52BFD8, (uint64_t)qword_1EF5495C0, a1);
}

uint64_t sub_1BE13696C()
{
  sub_1BDD8422C(&qword_1ED6EF720, type metadata accessor for Proto_Set.Element, (uint64_t)&unk_1BE1C561C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE1369AC()
{
  sub_1BDD8422C(&qword_1ED6EF720, type metadata accessor for Proto_Set.Element, (uint64_t)&unk_1BE1C561C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE1369FC(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Set.Element, (uint64_t (*)(uint64_t, uint64_t))sub_1BE135C44) & 1;
}

uint64_t sub_1BE136A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5495D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5495D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "keys";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "values";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "intKeys";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE136BB8()
{
  return 0x74532E6F746F7250;
}

uint64_t sub_1BE136BD8()
{
  sub_1BDD8422C(&qword_1EF530AC8, type metadata accessor for Proto_Struct, (uint64_t)&unk_1BE1C547C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE136C28@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52BFE8, (uint64_t)qword_1EF5495D8, a1);
}

uint64_t sub_1BE136C44()
{
  sub_1BDD8422C(&qword_1ED6F2860, type metadata accessor for Proto_Struct, (uint64_t)&unk_1BE1C54B4);
  return sub_1BE1B2288();
}

uint64_t sub_1BE136C84()
{
  sub_1BDD8422C(&qword_1ED6F2860, type metadata accessor for Proto_Struct, (uint64_t)&unk_1BE1C54B4);
  return sub_1BE1B2294();
}

uint64_t sub_1BE136CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5495F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5495F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B50;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "uuid";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "type";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "version";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "crdt";
  *((_QWORD *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "keyPath";
  *(_QWORD *)(v16 + 8) = 7;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE136ED8()
{
  return type metadata accessor for Proto_Reference._StorageClass(0);
}

uint64_t sub_1BE136EE0(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Reference, (uint64_t (*)(uint64_t, uint64_t))sub_1BE136F08) & 1;
}

BOOL sub_1BE136F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  int v57;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t *v70;
  char v71;
  char v72;
  uint64_t v73;
  char *v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;

  v80 = type metadata accessor for Proto_KeyPath(0);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v76 = (uint64_t *)((char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A58);
  MEMORY[0x1E0C80A78](v78);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3790);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v88 = (char *)&v73 - v11;
  v86 = type metadata accessor for Proto_CRDT(0);
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v77 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A30);
  MEMORY[0x1E0C80A78](v83);
  v87 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  v15 = MEMORY[0x1E0C80A78](v14);
  v81 = (uint64_t)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v85 = (uint64_t)&v73 - v17;
  v18 = type metadata accessor for Proto_Version(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v82 = (uint64_t)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A10);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v89 = (uint64_t)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v73 - v27;
  swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (v29 != *(_QWORD *)(a2 + 16))
    return 0;
  v75 = v10;
  swift_beginAccess();
  v30 = *(_QWORD *)(a1 + 24);
  v31 = *(unsigned __int8 *)(a1 + 32);
  swift_beginAccess();
  v32 = *(_QWORD *)(a2 + 24);
  v33 = v30 != 0;
  if (!v31)
    v33 = v30;
  if (*(_BYTE *)(a2 + 32) == 1)
  {
    if (v32)
    {
      if (v33 != 1)
        return 0;
    }
    else if (v33)
    {
      return 0;
    }
  }
  else if (v33 != v32)
  {
    return 0;
  }
  v74 = v6;
  v34 = a1;
  v35 = a1 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v35, (uint64_t)v28, &qword_1ED6F37A8);
  v36 = a2 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  v37 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_1BDD86DEC((uint64_t)v28, (uint64_t)v23, &qword_1ED6F37A8);
  sub_1BDD86DEC(v36, v37, &qword_1ED6F37A8);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v38((uint64_t)v23, 1, v18) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v28, &qword_1ED6F37A8);
    v39 = a1;
    if (v38(v37, 1, v18) == 1)
    {
      sub_1BDD86E30((uint64_t)v23, &qword_1ED6F37A8);
      goto LABEL_14;
    }
LABEL_19:
    v50 = &qword_1EF530A10;
    v51 = (uint64_t)v23;
LABEL_29:
    sub_1BDD86E30(v51, v50);
    goto LABEL_30;
  }
  v49 = v89;
  sub_1BDD86DEC((uint64_t)v23, v89, &qword_1ED6F37A8);
  if (v38(v37, 1, v18) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v28, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v49, type metadata accessor for Proto_Version);
    goto LABEL_19;
  }
  v52 = v82;
  sub_1BDDA2E8C(v37, v82, type metadata accessor for Proto_Version);
  if (!sub_1BDDFED94(*(_QWORD **)v49, *(_QWORD **)v52))
  {
    swift_retain();
    swift_retain();
    goto LABEL_28;
  }
  v53 = *(_QWORD *)(v49 + 8);
  v54 = *(_QWORD *)(v52 + 8);
  v39 = v34;
  swift_retain();
  swift_retain();
  if ((sub_1BDE003E4(v53, v54) & 1) == 0)
  {
LABEL_28:
    sub_1BDD9C3E0(v52, type metadata accessor for Proto_Version);
    sub_1BDD86E30((uint64_t)v28, &qword_1ED6F37A8);
    sub_1BDD9C3E0(v49, type metadata accessor for Proto_Version);
    v51 = (uint64_t)v23;
    v50 = &qword_1ED6F37A8;
    goto LABEL_29;
  }
  sub_1BE1B20F0();
  sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v55 = sub_1BE1B2798();
  sub_1BDD9C3E0(v52, type metadata accessor for Proto_Version);
  sub_1BDD86E30((uint64_t)v28, &qword_1ED6F37A8);
  sub_1BDD9C3E0(v49, type metadata accessor for Proto_Version);
  sub_1BDD86E30((uint64_t)v23, &qword_1ED6F37A8);
  if ((v55 & 1) == 0)
    goto LABEL_30;
LABEL_14:
  v40 = v39 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  v41 = v85;
  sub_1BDD86DEC(v40, v85, &qword_1ED6F3728);
  v42 = a2 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  v43 = v87;
  v44 = v87 + *(int *)(v83 + 48);
  sub_1BDD86DEC(v41, v87, &qword_1ED6F3728);
  sub_1BDD86DEC(v42, v44, &qword_1ED6F3728);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  v46 = v86;
  if (v45(v43, 1, v86) != 1)
  {
    v56 = v81;
    sub_1BDD86DEC(v43, v81, &qword_1ED6F3728);
    v57 = v45(v44, 1, v46);
    v48 = (uint64_t)v88;
    if (v57 != 1)
    {
      v59 = v77;
      sub_1BDDA2E8C(v44, v77, type metadata accessor for Proto_CRDT);
      v60 = sub_1BE147FD4(v56, v59, type metadata accessor for Proto_CRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12E368);
      sub_1BDD9C3E0(v59, type metadata accessor for Proto_CRDT);
      sub_1BDD86E30(v41, &qword_1ED6F3728);
      sub_1BDD9C3E0(v56, type metadata accessor for Proto_CRDT);
      sub_1BDD86E30(v43, &qword_1ED6F3728);
      if ((v60 & 1) != 0)
        goto LABEL_34;
LABEL_30:
      swift_release();
      swift_release();
      return 0;
    }
    sub_1BDD86E30(v41, &qword_1ED6F3728);
    sub_1BDD9C3E0(v56, type metadata accessor for Proto_CRDT);
    goto LABEL_26;
  }
  sub_1BDD86E30(v41, &qword_1ED6F3728);
  v47 = v45(v44, 1, v46);
  v48 = (uint64_t)v88;
  if (v47 != 1)
  {
LABEL_26:
    v50 = &qword_1EF530A30;
    v51 = v43;
    goto LABEL_29;
  }
  sub_1BDD86E30(v43, &qword_1ED6F3728);
LABEL_34:
  v61 = v39 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  sub_1BDD86DEC(v61, v48, &qword_1ED6F3790);
  v62 = a2 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  v63 = (uint64_t)v74;
  v64 = (uint64_t)&v74[*(int *)(v78 + 48)];
  sub_1BDD86DEC(v48, (uint64_t)v74, &qword_1ED6F3790);
  sub_1BDD86DEC(v62, v64, &qword_1ED6F3790);
  v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  v66 = v80;
  if (v65(v63, 1, v80) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v48, &qword_1ED6F3790);
    if (v65(v64, 1, v66) == 1)
    {
      sub_1BDD86E30(v63, &qword_1ED6F3790);
      return 1;
    }
    goto LABEL_40;
  }
  v67 = v75;
  sub_1BDD86DEC(v63, (uint64_t)v75, &qword_1ED6F3790);
  if (v65(v64, 1, v66) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v48, &qword_1ED6F3790);
    sub_1BDD9C3E0((uint64_t)v67, type metadata accessor for Proto_KeyPath);
LABEL_40:
    v68 = &qword_1EF530A58;
    v69 = v63;
LABEL_46:
    sub_1BDD86E30(v69, v68);
    return 0;
  }
  v70 = v76;
  sub_1BDDA2E8C(v64, (uint64_t)v76, type metadata accessor for Proto_KeyPath);
  if ((sub_1BDDFEE20(*v67, *v70) & 1) == 0 || (sub_1BDDD6F30(v67[1], v67[2]), (v71 & 1) == 0))
  {
    swift_release();
    swift_release();
    sub_1BDD9C3E0((uint64_t)v70, type metadata accessor for Proto_KeyPath);
    sub_1BDD86E30(v48, &qword_1ED6F3790);
    sub_1BDD9C3E0((uint64_t)v67, type metadata accessor for Proto_KeyPath);
    v69 = v63;
    v68 = &qword_1ED6F3790;
    goto LABEL_46;
  }
  sub_1BE1B20F0();
  sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v72 = sub_1BE1B2798();
  swift_release();
  swift_release();
  sub_1BDD9C3E0((uint64_t)v70, type metadata accessor for Proto_KeyPath);
  sub_1BDD86E30(v48, &qword_1ED6F3790);
  sub_1BDD9C3E0((uint64_t)v67, type metadata accessor for Proto_KeyPath);
  sub_1BDD86E30(v63, &qword_1ED6F3790);
  return (v72 & 1) != 0;
}

uint64_t sub_1BE137A1C()
{
  return 0x65522E6F746F7250;
}

uint64_t sub_1BE137A40()
{
  sub_1BDD8422C(&qword_1EF530AD0, type metadata accessor for Proto_Reference, (uint64_t)&unk_1BE1C5314);
  return sub_1BE1B212C();
}

uint64_t sub_1BE137A90@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52BFF0, (uint64_t)qword_1EF5495F0, a1);
}

uint64_t sub_1BE137AAC()
{
  sub_1BDD8422C(&qword_1ED6EFDA8, type metadata accessor for Proto_Reference, (uint64_t)&unk_1BE1C534C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE137AEC()
{
  sub_1BDD8422C(&qword_1ED6EFDA8, type metadata accessor for Proto_Reference, (uint64_t)&unk_1BE1C534C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE137B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549608);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549608);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "shared";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "weak";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE137C90@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52C000, (uint64_t)qword_1EF549608, a1);
}

uint64_t sub_1BE137CAC(uint64_t a1)
{
  return sub_1BE13A4D8(a1, qword_1EF549620, 1, (uint64_t)"wrapped", 7);
}

uint64_t sub_1BE137CC8(uint64_t a1)
{
  return sub_1BDD8CC18(a1, (void (*)(_QWORD))type metadata accessor for Proto_Optional._StorageClass, &OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped, type metadata accessor for Proto_Value, &qword_1ED6EEA38);
}

uint64_t sub_1BE137CEC()
{
  return sub_1BDD96A3C(&OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped, &qword_1ED6F3770);
}

uint64_t sub_1BE137D00()
{
  return type metadata accessor for Proto_Optional._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Optional._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1ED6EEA50);
}

void sub_1BE137D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDDD2FB0(a1, a2, a3, &qword_1ED6F3778, (void (*)(uint64_t))type metadata accessor for Proto_Value);
}

uint64_t sub_1BE137D30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[10];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(int *)(type metadata accessor for Proto_Optional(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v8 = *(_QWORD *)(v1 + v7);
    type metadata accessor for Proto_Optional._StorageClass(0);
    v9 = swift_allocObject();
    v15[9] = v2;
    v10 = v9;
    v15[1] = a1;
    v11 = v9 + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
    v12 = type metadata accessor for Proto_Value(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = v8 + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
    swift_beginAccess();
    sub_1BDD86DEC(v13, (uint64_t)v6, &qword_1ED6F3770);
    swift_beginAccess();
    sub_1BDDA1AF4((uint64_t)v6, v11, &qword_1ED6F3770);
    swift_endAccess();
    *(_QWORD *)(v1 + v7) = v10;
    swift_release();
  }
  swift_retain();
  sub_1BE137ED8();
  return swift_release();
}

uint64_t sub_1BE137ED8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1BE1B2144();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto_Value(0);
        sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
        sub_1BE1B2258();
        swift_endAccess();
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

uint64_t sub_1BE137FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Value(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1BDD86DEC(v12, (uint64_t)v7, &qword_1ED6F3770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1BDD86E30((uint64_t)v7, &qword_1ED6F3770);
  sub_1BDDA2E8C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Value);
  sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
  sub_1BE1B2360();
  return sub_1BDD9C3E0((uint64_t)v11, type metadata accessor for Proto_Value);
}

BOOL sub_1BE138178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for Proto_Value(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v24 = (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C350);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  v16 = a1 + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1BDD86DEC(v16, (uint64_t)v15, &qword_1ED6F3770);
  v17 = a2 + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BDD86DEC((uint64_t)v15, (uint64_t)v9, &qword_1ED6F3770);
  sub_1BDD86DEC(v17, v18, &qword_1ED6F3770);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F3770);
    if (v19(v18, 1, v4) == 1)
    {
      sub_1BDD86E30((uint64_t)v9, &qword_1ED6F3770);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1BDD86DEC((uint64_t)v9, (uint64_t)v13, &qword_1ED6F3770);
  if (v19(v18, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F3770);
    sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_Value);
LABEL_6:
    sub_1BDD86E30((uint64_t)v9, &qword_1EF52C350);
    return 0;
  }
  v20 = v24;
  sub_1BDDA2E8C(v18, v24, type metadata accessor for Proto_Value);
  v21 = sub_1BE147FD4((uint64_t)v13, v20, type metadata accessor for Proto_Value, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12DC44);
  sub_1BDD9C3E0(v20, type metadata accessor for Proto_Value);
  sub_1BDD86E30((uint64_t)v15, &qword_1ED6F3770);
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_Value);
  sub_1BDD86E30((uint64_t)v9, &qword_1ED6F3770);
  return (v21 & 1) != 0;
}

uint64_t sub_1BE13843C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1ED6EEA40, &qword_1ED6EEA38, a2);
}

uint64_t sub_1BE138458()
{
  return 0x704F2E6F746F7250;
}

uint64_t sub_1BE13847C(uint64_t a1)
{
  return sub_1BE137D30(a1);
}

uint64_t sub_1BE138490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Optional, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE137FEC);
}

uint64_t sub_1BE1384B4()
{
  sub_1BDD8422C(&qword_1EF530AE0, type metadata accessor for Proto_Optional, (uint64_t)&unk_1BE1C5184);
  return sub_1BE1B212C();
}

uint64_t sub_1BE138504@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52C008, (uint64_t)qword_1EF549620, a1);
}

uint64_t sub_1BE138520()
{
  sub_1BDD8422C(&qword_1ED6EEA60, type metadata accessor for Proto_Optional, (uint64_t)&unk_1BE1C51BC);
  return sub_1BE1B2288();
}

uint64_t sub_1BE138560()
{
  sub_1BDD8422C(&qword_1ED6EEA60, type metadata accessor for Proto_Optional, (uint64_t)&unk_1BE1C51BC);
  return sub_1BE1B2294();
}

uint64_t sub_1BE1385B0(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Optional, (uint64_t (*)(uint64_t, uint64_t))sub_1BE138178) & 1;
}

uint64_t sub_1BE1385D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549638);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549638);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "tag";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "wrapped";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE138728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for Proto_TaggedValue._StorageClass(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v1 = v0 + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  v2 = type metadata accessor for Proto_Value(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_1EF52B518 = v0;
  return result;
}

uint64_t sub_1BE138794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v1 + 16) = 0;
  v6 = v1 + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  v7 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v8;
  v9 = a1 + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1BDD86DEC(v9, (uint64_t)v5, &qword_1ED6F3770);
  swift_release();
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F3770);
  swift_endAccess();
  return v1;
}

uint64_t sub_1BE1388D8()
{
  return sub_1BDD96A3C(&OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped, &qword_1ED6F3770);
}

uint64_t sub_1BE1388EC()
{
  return type metadata accessor for Proto_TaggedValue._StorageClass(0);
}

uint64_t type metadata accessor for Proto_TaggedValue._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B530);
}

void sub_1BE138908()
{
  sub_1BE13F088();
}

uint64_t sub_1BE138918()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        v4 = v3;
        sub_1BE1B21C8();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    swift_beginAccess();
    type metadata accessor for Proto_Value(0);
    sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
    v4 = v3;
    sub_1BE1B2258();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1BE138A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Proto_Value(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (!*(_QWORD *)(a1 + 16) || (result = sub_1BE1B2300(), !v1))
  {
    v11 = a1
        + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
    swift_beginAccess();
    sub_1BDD86DEC(v11, (uint64_t)v5, &qword_1ED6F3770);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      return sub_1BDD86E30((uint64_t)v5, &qword_1ED6F3770);
    }
    else
    {
      sub_1BDDA2E8C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Value);
      sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
      sub_1BE1B2360();
      return sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Proto_Value);
    }
  }
  return result;
}

BOOL sub_1BE138C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;

  v4 = type metadata accessor for Proto_Value(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C350);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v25 - v15;
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (v17 != *(_QWORD *)(a2 + 16))
    return 0;
  v26 = v7;
  v18 = a1 + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1BDD86DEC(v18, (uint64_t)v16, &qword_1ED6F3770);
  v19 = a2 + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1BDD86DEC((uint64_t)v16, (uint64_t)v10, &qword_1ED6F3770);
  sub_1BDD86DEC(v19, v20, &qword_1ED6F3770);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3770);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1BDD86E30((uint64_t)v10, &qword_1ED6F3770);
      return 1;
    }
    goto LABEL_7;
  }
  sub_1BDD86DEC((uint64_t)v10, (uint64_t)v14, &qword_1ED6F3770);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3770);
    sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto_Value);
LABEL_7:
    sub_1BDD86E30((uint64_t)v10, &qword_1EF52C350);
    return 0;
  }
  v23 = (uint64_t)v26;
  sub_1BDDA2E8C(v20, (uint64_t)v26, type metadata accessor for Proto_Value);
  v24 = sub_1BE147FD4((uint64_t)v14, v23, type metadata accessor for Proto_Value, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12DC44);
  sub_1BDD9C3E0(v23, type metadata accessor for Proto_Value);
  sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3770);
  sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto_Value);
  sub_1BDD86E30((uint64_t)v10, &qword_1ED6F3770);
  return (v24 & 1) != 0;
}

uint64_t sub_1BE138F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52B520, &qword_1EF52B518, a2);
}

unint64_t sub_1BE138F38()
{
  return 0xD000000000000011;
}

uint64_t sub_1BE138F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_TaggedValue, (void (*)(_QWORD))type metadata accessor for Proto_TaggedValue._StorageClass, sub_1BE138794, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE138918);
}

uint64_t sub_1BE138F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_TaggedValue, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE138A5C);
}

uint64_t sub_1BE138FAC()
{
  sub_1BDD8422C(&qword_1EF530AE8, type metadata accessor for Proto_TaggedValue, (uint64_t)&unk_1BE1C501C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE138FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52C018, (uint64_t)qword_1EF549638, a1);
}

uint64_t sub_1BE139018()
{
  sub_1BDD8422C(&qword_1EF52B540, type metadata accessor for Proto_TaggedValue, (uint64_t)&unk_1BE1C5054);
  return sub_1BE1B2288();
}

uint64_t sub_1BE139058()
{
  sub_1BDD8422C(&qword_1EF52B540, type metadata accessor for Proto_TaggedValue, (uint64_t)&unk_1BE1C5054);
  return sub_1BE1B2294();
}

uint64_t sub_1BE1390A8(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_TaggedValue, (uint64_t (*)(uint64_t, uint64_t))sub_1BE138C20) & 1;
}

uint64_t sub_1BE1390D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549650);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549650);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "tag";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE139220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(_QWORD))
{
  _QWORD *v7;
  uint64_t v8;
  unint64_t *v12;
  uint64_t result;

  if (*(_QWORD *)(*v7 + 16))
  {
    v12 = a5;
    result = sub_1BE1B22B8();
    if (v8)
      return result;
  }
  else
  {
    v12 = a5;
  }
  if (!*(_QWORD *)(v7[1] + 16) || (a4(0), sub_1BDD8422C(v12, a4, a6), result = sub_1BE1B2354(), !v8))
  {
    a7(0);
    return sub_1BE1B20D8();
  }
  return result;
}

unint64_t sub_1BE139344()
{
  return 0xD000000000000013;
}

uint64_t sub_1BE139360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BE139220(a1, a2, a3, type metadata accessor for Proto_Value, &qword_1ED6F2730, (uint64_t)&unk_1BE1C66FC, (void (*)(_QWORD))type metadata accessor for Proto_CustomCRValue);
}

uint64_t sub_1BE139394()
{
  sub_1BDD8422C(&qword_1EF530AF0, type metadata accessor for Proto_CustomCRValue, (uint64_t)&unk_1BE1C4EB4);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1393E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52C028, (uint64_t)qword_1EF549650, a1);
}

uint64_t sub_1BE139400()
{
  sub_1BDD8422C(&qword_1ED6F2778, type metadata accessor for Proto_CustomCRValue, (uint64_t)&unk_1BE1C4EEC);
  return sub_1BE1B2288();
}

uint64_t sub_1BE139440()
{
  sub_1BDD8422C(&qword_1ED6F2778, type metadata accessor for Proto_CustomCRValue, (uint64_t)&unk_1BE1C4EEC);
  return sub_1BE1B2294();
}

uint64_t sub_1BE139490(uint64_t a1, uint64_t a2)
{
  return sub_1BE146AA4(a1, a2, sub_1BDDFEE20, type metadata accessor for Proto_CustomCRValue) & 1;
}

uint64_t sub_1BE1394B8(uint64_t a1)
{
  return sub_1BE13A4D8(a1, qword_1EF549668, 1, (uint64_t)"siblings", 8);
}

unint64_t sub_1BE1394D4()
{
  return 0xD000000000000010;
}

uint64_t sub_1BE1394F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDE475C8(a1, a2, a3, type metadata accessor for Proto_CustomCRDT.Sibling, &qword_1EF52B470, (uint64_t)&unk_1BE1C4C1C);
}

uint64_t sub_1BE13951C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDE47690(a1, a2, a3, type metadata accessor for Proto_CustomCRDT.Sibling, &qword_1EF52B470, (uint64_t)&unk_1BE1C4C1C, (void (*)(_QWORD))type metadata accessor for Proto_CustomCRDT);
}

uint64_t sub_1BE139550()
{
  sub_1BDD8422C(&qword_1EF530AF8, type metadata accessor for Proto_CustomCRDT, (uint64_t)&unk_1BE1C4D4C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1395A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52C030, (uint64_t)qword_1EF549668, a1);
}

uint64_t sub_1BE1395BC()
{
  sub_1BDD8422C(qword_1EF52B490, type metadata accessor for Proto_CustomCRDT, (uint64_t)&unk_1BE1C4D84);
  return sub_1BE1B2288();
}

uint64_t sub_1BE1395FC()
{
  sub_1BDD8422C(qword_1EF52B490, type metadata accessor for Proto_CustomCRDT, (uint64_t)&unk_1BE1C4D84);
  return sub_1BE1B2294();
}

uint64_t sub_1BE13964C(_QWORD *a1, char *a2)
{
  return sub_1BE146558(a1, a2, sub_1BDDFF350, type metadata accessor for Proto_CustomCRDT) & 1;
}

uint64_t sub_1BE139674()
{
  uint64_t result;

  result = sub_1BE1B284C();
  qword_1EF549680 = 0xD000000000000010;
  *(_QWORD *)algn_1EF549688 = 0x80000001BE1D1790;
  return result;
}

uint64_t sub_1BE1396DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549690);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549690);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "version";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "data";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE13982C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;

  type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  v2 = type metadata accessor for Proto_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
  result = sub_1BE1B20CC();
  *v3 = result;
  v3[1] = v5;
  qword_1EF52B440 = v0;
  return result;
}

uint64_t sub_1BE1398A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1
     + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  v7 = type metadata accessor for Proto_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
  *v8 = sub_1BE1B20CC();
  v8[1] = v9;
  v10 = a1
      + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v10, (uint64_t)v5, &qword_1ED6F37A8);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F37A8);
  swift_endAccess();
  v11 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
  swift_beginAccess();
  v13 = *v11;
  v12 = v11[1];
  sub_1BDDB6CA4(v13, v12);
  swift_release();
  swift_beginAccess();
  v14 = *v8;
  v15 = v8[1];
  *v8 = v13;
  v8[1] = v12;
  sub_1BDDB796C(v14, v15);
  return v1;
}

uint64_t sub_1BE139A14()
{
  uint64_t v0;

  sub_1BDD86E30(v0+ OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version, &qword_1ED6F37A8);
  sub_1BDDB796C(*(_QWORD *)(v0+ OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data), *(_QWORD *)(v0+ OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data+ 8));
  return swift_deallocClassInstance();
}

uint64_t sub_1BE139A60()
{
  return type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass(0);
}

uint64_t type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B460);
}

void sub_1BE139A7C()
{
  unint64_t v0;

  sub_1BDD92F18(319, &qword_1ED6F37B0, (void (*)(uint64_t))type metadata accessor for Proto_Version);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BE139B00()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto_Version(0);
        sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
        v4 = v3;
        sub_1BE1B2258();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    swift_beginAccess();
    v4 = v3;
    sub_1BE1B21A4();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1BE139C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[10];

  v16[9] = a4;
  v16[1] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Version(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1
      + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v8, &qword_1ED6F37A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BDD86E30((uint64_t)v8, &qword_1ED6F37A8);
    goto LABEL_4;
  }
  sub_1BDDA2E8C((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Version);
  sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
  sub_1BE1B2360();
  result = sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_Version);
  if (!v4)
  {
LABEL_4:
    v15 = a1
        + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data;
    swift_beginAccess();
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BE139E90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v41;
  uint64_t v42;

  v42 = a2;
  v3 = type metadata accessor for Proto_Version(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A10);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v41 - v13;
  v15 = a1
      + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  sub_1BDD86DEC(v15, (uint64_t)v14, &qword_1ED6F37A8);
  v16 = v42;
  v17 = v42
      + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  v18 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1BDD86DEC((uint64_t)v14, (uint64_t)v8, &qword_1ED6F37A8);
  v19 = v3;
  sub_1BDD86DEC(v17, v18, &qword_1ED6F37A8);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v8, 1, v3) != 1)
  {
    v30 = (uint64_t)v41;
    v31 = a1;
    sub_1BDD86DEC((uint64_t)v8, (uint64_t)v12, &qword_1ED6F37A8);
    v32 = v20(v18, 1, v19);
    v33 = (uint64_t)v12;
    if (v32 != 1)
    {
      v36 = v30;
      sub_1BDDA2E8C(v18, v30, type metadata accessor for Proto_Version);
      if (sub_1BDDFED94(*(_QWORD **)v12, *(_QWORD **)v30))
      {
        v37 = *((_QWORD *)v12 + 1);
        v38 = *(_QWORD *)(v30 + 8);
        v21 = v31;
        swift_retain();
        swift_retain();
        if ((sub_1BDE003E4(v37, v38) & 1) != 0)
        {
          sub_1BE1B20F0();
          sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
          v39 = sub_1BE1B2798();
          sub_1BDD9C3E0(v36, type metadata accessor for Proto_Version);
          sub_1BDD86E30((uint64_t)v14, &qword_1ED6F37A8);
          sub_1BDD9C3E0(v33, type metadata accessor for Proto_Version);
          sub_1BDD86E30((uint64_t)v8, &qword_1ED6F37A8);
          if ((v39 & 1) != 0)
            goto LABEL_4;
LABEL_15:
          swift_release();
          swift_release();
          v29 = 0;
          return v29 & 1;
        }
      }
      else
      {
        swift_retain();
        swift_retain();
      }
      sub_1BDD9C3E0(v36, type metadata accessor for Proto_Version);
      sub_1BDD86E30((uint64_t)v14, &qword_1ED6F37A8);
      sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_Version);
      v35 = (uint64_t)v8;
      v34 = &qword_1ED6F37A8;
LABEL_14:
      sub_1BDD86E30(v35, v34);
      goto LABEL_15;
    }
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v14, &qword_1ED6F37A8);
    sub_1BDD9C3E0((uint64_t)v12, type metadata accessor for Proto_Version);
LABEL_7:
    v34 = &qword_1EF530A10;
    v35 = (uint64_t)v8;
    goto LABEL_14;
  }
  swift_retain();
  swift_retain();
  sub_1BDD86E30((uint64_t)v14, &qword_1ED6F37A8);
  v21 = a1;
  if (v20(v18, 1, v3) != 1)
    goto LABEL_7;
  sub_1BDD86E30((uint64_t)v8, &qword_1ED6F37A8);
LABEL_4:
  v22 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
  swift_beginAccess();
  v23 = *v22;
  v24 = v22[1];
  v25 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
  swift_beginAccess();
  v26 = *v25;
  v27 = v25[1];
  sub_1BDDB6CA4(v23, v24);
  sub_1BDDB6CA4(v26, v27);
  sub_1BDDD6F30(v23, v24);
  v29 = v28;
  swift_release();
  swift_release();
  sub_1BDDB796C(v26, v27);
  sub_1BDDB796C(v23, v24);
  return v29 & 1;
}

uint64_t sub_1BE13A304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52B448, &qword_1EF52B440, a2);
}

uint64_t sub_1BE13A320(uint64_t a1, uint64_t a2)
{
  return sub_1BDE429D4(a1, a2, &qword_1EF52C038, &qword_1EF549680);
}

uint64_t sub_1BE13A340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_CustomCRDT.Sibling, (void (*)(_QWORD))type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass, sub_1BE1398A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE139B00);
}

uint64_t sub_1BE13A374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_CustomCRDT.Sibling, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE139C4C);
}

uint64_t sub_1BE13A398()
{
  sub_1BDD8422C(&qword_1EF530B00, type metadata accessor for Proto_CustomCRDT.Sibling, (uint64_t)&unk_1BE1C4BE4);
  return sub_1BE1B212C();
}

uint64_t sub_1BE13A3E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52C040, (uint64_t)qword_1EF549690, a1);
}

uint64_t sub_1BE13A404()
{
  sub_1BDD8422C(&qword_1EF52B470, type metadata accessor for Proto_CustomCRDT.Sibling, (uint64_t)&unk_1BE1C4C1C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE13A444()
{
  sub_1BDD8422C(&qword_1EF52B470, type metadata accessor for Proto_CustomCRDT.Sibling, (uint64_t)&unk_1BE1C4C1C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE13A494(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_CustomCRDT.Sibling, sub_1BE139E90) & 1;
}

uint64_t sub_1BE13A4BC(uint64_t a1)
{
  return sub_1BE13A4D8(a1, qword_1EF5496A8, 1, (uint64_t)"values", 6);
}

uint64_t sub_1BE13A4D8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BE1B61B0;
  v14 = v13 + v12 + *(int *)(v10 + 48);
  *(_QWORD *)(v13 + v12) = a3;
  *(_QWORD *)v14 = a4;
  *(_QWORD *)(v14 + 8) = a5;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = *MEMORY[0x1E0D3EF08];
  v16 = sub_1BE1B236C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  return sub_1BE1B2378();
}

unint64_t sub_1BE13A5E4()
{
  return 0xD000000000000013;
}

uint64_t sub_1BE13A600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDE475C8(a1, a2, a3, type metadata accessor for Proto_Value, &qword_1ED6F2730, (uint64_t)&unk_1BE1C66FC);
}

uint64_t sub_1BE13A62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDE47690(a1, a2, a3, type metadata accessor for Proto_Value, &qword_1ED6F2730, (uint64_t)&unk_1BE1C66FC, (void (*)(_QWORD))type metadata accessor for Proto_RepeatedValue);
}

uint64_t sub_1BE13A660()
{
  sub_1BDD8422C(&qword_1EF530B08, type metadata accessor for Proto_RepeatedValue, (uint64_t)&unk_1BE1C4A7C);
  return sub_1BE1B212C();
}

uint64_t sub_1BE13A6B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52C050, (uint64_t)qword_1EF5496A8, a1);
}

uint64_t sub_1BE13A6CC()
{
  sub_1BDD8422C(&qword_1EF52B560, type metadata accessor for Proto_RepeatedValue, (uint64_t)&unk_1BE1C4AB4);
  return sub_1BE1B2288();
}

uint64_t sub_1BE13A70C()
{
  sub_1BDD8422C(&qword_1EF52B560, type metadata accessor for Proto_RepeatedValue, (uint64_t)&unk_1BE1C4AB4);
  return sub_1BE1B2294();
}

uint64_t sub_1BE13A75C(_QWORD *a1, char *a2)
{
  return sub_1BE146558(a1, a2, sub_1BDDFEE20, type metadata accessor for Proto_RepeatedValue) & 1;
}

uint64_t sub_1BE13A784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5496C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5496C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "set";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "sequence";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "timestamps";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE13A918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Proto_OrderedSet._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  v2 = type metadata accessor for Proto_Set(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  v4 = type metadata accessor for Proto_Sequence(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps) = MEMORY[0x1E0DEE9D8];
  qword_1ED6EF618 = v0;
  return result;
}

uint64_t sub_1BE13A9C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2E98);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED6F2EF8);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v1 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  v10 = type metadata accessor for Proto_Set(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = v1 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  v12 = type metadata accessor for Proto_Sequence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps) = MEMORY[0x1E0DEE9D8];
  v14 = a1 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  sub_1BDD86DEC(v14, (uint64_t)v8, qword_1ED6F2EF8);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v8, v9, qword_1ED6F2EF8);
  swift_endAccess();
  v15 = a1 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  sub_1BDD86DEC(v15, (uint64_t)v5, &qword_1ED6F2E98);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v11, &qword_1ED6F2E98);
  swift_endAccess();
  v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
  swift_beginAccess();
  v17 = *v16;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *v13 = v17;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BE13AC04()
{
  uint64_t v0;

  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set, qword_1ED6F2EF8);
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence, &qword_1ED6F2E98);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BE13AC64()
{
  return type metadata accessor for Proto_OrderedSet._StorageClass(0);
}

uint64_t type metadata accessor for Proto_OrderedSet._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1ED6EF638);
}

void sub_1BE13AC80()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BDD92F18(319, &qword_1ED6EF730, (void (*)(uint64_t))type metadata accessor for Proto_Set);
  if (v0 <= 0x3F)
  {
    sub_1BDD92F18(319, &qword_1ED6EF5F8, (void (*)(uint64_t))type metadata accessor for Proto_Sequence);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1BE13AD34()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        type metadata accessor for Proto_Sequence(0);
        sub_1BDD8422C(&qword_1ED6EF5E8, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C47E4);
LABEL_13:
        v4 = v3;
        sub_1BE1B2258();
LABEL_5:
        v3 = v4;
        swift_endAccess();
        goto LABEL_6;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto_Set(0);
        sub_1BDD8422C(&qword_1ED6F2840, type metadata accessor for Proto_Set, (uint64_t)&unk_1BE1C5784);
        goto LABEL_13;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    swift_beginAccess();
    type metadata accessor for Proto_Timestamp(0);
    sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
    v4 = v3;
    sub_1BE1B224C();
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_1BE13AF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a3;
  v31 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2E98);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Sequence(0);
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x1E0C80A78](v8);
  v26 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED6F2EF8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Set(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  v18 = a1 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  sub_1BDD86DEC(v18, (uint64_t)v12, qword_1ED6F2EF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BDD86E30((uint64_t)v12, qword_1ED6F2EF8);
    v19 = v29;
    v20 = v17;
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v16, type metadata accessor for Proto_Set);
    sub_1BDD8422C(&qword_1ED6F2840, type metadata accessor for Proto_Set, (uint64_t)&unk_1BE1C5784);
    v21 = v29;
    sub_1BE1B2360();
    v19 = v21;
    result = sub_1BDD9C3E0((uint64_t)v16, type metadata accessor for Proto_Set);
    v20 = v17;
    if (v21)
      return result;
  }
  v23 = v20 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  sub_1BDD86DEC(v23, (uint64_t)v7, &qword_1ED6F2E98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v28) == 1)
  {
    sub_1BDD86E30((uint64_t)v7, &qword_1ED6F2E98);
  }
  else
  {
    v24 = v26;
    sub_1BDDA2E8C((uint64_t)v7, v26, type metadata accessor for Proto_Sequence);
    sub_1BDD8422C(&qword_1ED6EF5E8, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C47E4);
    sub_1BE1B2360();
    result = sub_1BDD9C3E0(v24, type metadata accessor for Proto_Sequence);
    if (v19)
      return result;
  }
  v25 = v20
      + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v25 + 16))
  {
    type metadata accessor for Proto_Timestamp(0);
    sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
    swift_bridgeObjectRetain();
    sub_1BE1B2354();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BE13B27C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a2;
  v53 = type metadata accessor for Proto_Sequence(0);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v47 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A48);
  MEMORY[0x1E0C80A78](v50);
  v54 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2E98);
  v6 = MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v52 = (uint64_t)&v47 - v8;
  v9 = type metadata accessor for Proto_Set(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v49 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A50);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED6F2EF8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v47 - v19;
  v21 = a1;
  v22 = a1 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  sub_1BDD86DEC(v22, (uint64_t)v20, qword_1ED6F2EF8);
  v23 = v55;
  v24 = v55 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  v25 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1BDD86DEC((uint64_t)v20, (uint64_t)v14, qword_1ED6F2EF8);
  sub_1BDD86DEC(v24, v25, qword_1ED6F2EF8);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v26((uint64_t)v14, 1, v9) != 1)
  {
    sub_1BDD86DEC((uint64_t)v14, (uint64_t)v18, qword_1ED6F2EF8);
    if (v26(v25, 1, v9) != 1)
    {
      v29 = v49;
      sub_1BDDA2E8C(v25, v49, type metadata accessor for Proto_Set);
      swift_retain();
      swift_retain();
      v30 = sub_1BE147FD4((uint64_t)v18, v29, type metadata accessor for Proto_Set, sub_1BE1340BC);
      sub_1BDD9C3E0(v29, type metadata accessor for Proto_Set);
      sub_1BDD86E30((uint64_t)v20, qword_1ED6F2EF8);
      sub_1BDD9C3E0((uint64_t)v18, type metadata accessor for Proto_Set);
      sub_1BDD86E30((uint64_t)v14, qword_1ED6F2EF8);
      if ((v30 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v20, qword_1ED6F2EF8);
    sub_1BDD9C3E0((uint64_t)v18, type metadata accessor for Proto_Set);
LABEL_6:
    v27 = &qword_1EF530A50;
    v28 = (uint64_t)v14;
LABEL_14:
    sub_1BDD86E30(v28, v27);
    goto LABEL_15;
  }
  swift_retain();
  swift_retain();
  sub_1BDD86E30((uint64_t)v20, qword_1ED6F2EF8);
  if (v26(v25, 1, v9) != 1)
    goto LABEL_6;
  sub_1BDD86E30((uint64_t)v14, qword_1ED6F2EF8);
LABEL_8:
  v31 = v21 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  v32 = v52;
  sub_1BDD86DEC(v31, v52, &qword_1ED6F2E98);
  v33 = v23 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  v34 = v54;
  v35 = v54 + *(int *)(v50 + 48);
  sub_1BDD86DEC(v32, v54, &qword_1ED6F2E98);
  sub_1BDD86DEC(v33, v35, &qword_1ED6F2E98);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  v37 = v53;
  if (v36(v34, 1, v53) == 1)
  {
    sub_1BDD86E30(v32, &qword_1ED6F2E98);
    if (v36(v35, 1, v37) == 1)
    {
      sub_1BDD86E30(v34, &qword_1ED6F2E98);
LABEL_18:
      v43 = (uint64_t *)(v21
                      + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
      swift_beginAccess();
      v44 = *v43;
      v45 = (uint64_t *)(v23
                      + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
      swift_beginAccess();
      v46 = *v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39 = sub_1BDE02BE0(v44, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  v38 = v48;
  sub_1BDD86DEC(v34, v48, &qword_1ED6F2E98);
  if (v36(v35, 1, v37) == 1)
  {
    sub_1BDD86E30(v32, &qword_1ED6F2E98);
    sub_1BDD9C3E0(v38, type metadata accessor for Proto_Sequence);
LABEL_13:
    v27 = &qword_1EF530A48;
    v28 = v34;
    goto LABEL_14;
  }
  v41 = v47;
  sub_1BDDA2E8C(v35, v47, type metadata accessor for Proto_Sequence);
  v42 = sub_1BE147FD4(v38, v41, type metadata accessor for Proto_Sequence, (uint64_t (*)(uint64_t, uint64_t))sub_1BE13CDE8);
  sub_1BDD9C3E0(v41, type metadata accessor for Proto_Sequence);
  sub_1BDD86E30(v32, &qword_1ED6F2E98);
  sub_1BDD9C3E0(v38, type metadata accessor for Proto_Sequence);
  sub_1BDD86E30(v34, &qword_1ED6F2E98);
  if ((v42 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v39 = 0;
LABEL_16:
  swift_release();
  swift_release();
  return v39 & 1;
}

uint64_t sub_1BE13B8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1ED6EF620, &qword_1ED6EF618, a2);
}

unint64_t sub_1BE13B8DC()
{
  return 0xD000000000000010;
}

uint64_t sub_1BE13B8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_OrderedSet, (void (*)(_QWORD))type metadata accessor for Proto_OrderedSet._StorageClass, sub_1BE13A9C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE13AD34);
}

uint64_t sub_1BE13B92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_OrderedSet, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE13AF08);
}

uint64_t sub_1BE13B950()
{
  sub_1BDD8422C(&qword_1EF530B10, type metadata accessor for Proto_OrderedSet, (uint64_t)&unk_1BE1C4914);
  return sub_1BE1B212C();
}

uint64_t sub_1BE13B9A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52C058, (uint64_t)qword_1EF5496C0, a1);
}

uint64_t sub_1BE13B9BC()
{
  sub_1BDD8422C(&qword_1ED6EF648, type metadata accessor for Proto_OrderedSet, (uint64_t)&unk_1BE1C494C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE13B9FC()
{
  sub_1BDD8422C(&qword_1ED6EF648, type metadata accessor for Proto_OrderedSet, (uint64_t)&unk_1BE1C494C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE13BA4C(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_OrderedSet, sub_1BE13B27C) & 1;
}

uint64_t sub_1BE13BA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5496D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5496D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B10;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "string";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "elements";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "subsequence";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "version";
  *((_QWORD *)v15 + 1) = 7;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "addedByVersion";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "attributeRuns";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "fromVersion";
  *((_QWORD *)v21 + 1) = 11;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "fromAddedByVersion";
  *((_QWORD *)v23 + 1) = 18;
  v23[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE13BD20()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void (*v4)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  type metadata accessor for Proto_Sequence._StorageClass(0);
  v0 = (char *)swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v0 + 2) = 0;
  *((_QWORD *)v0 + 3) = 0xE000000000000000;
  *((_QWORD *)v0 + 4) = v1;
  *((_QWORD *)v0 + 5) = v1;
  v2 = &v0[OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version];
  v3 = type metadata accessor for Proto_Version(0);
  v4 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  v4(&v0[OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion], 1, 1, v3);
  *(_QWORD *)&v0[OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__attributeRuns] = v1;
  v4(&v0[OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromVersion], 1, 1, v3);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v4)(&v0[OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromAddedByVersion], 1, 1, v3);
  qword_1ED6EF5B0 = (uint64_t)v0;
  return result;
}

_QWORD *sub_1BE13BE10(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  char *v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  MEMORY[0x1E0C80A78](v4);
  v28 = (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v6 = MEMORY[0x1E0DEE9D8];
  v1[4] = MEMORY[0x1E0DEE9D8];
  v1[5] = v6;
  v7 = (char *)v1
     + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  v27 = (char *)v1
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  v8 = type metadata accessor for Proto_Version(0);
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  v29 = (char *)v1
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion;
  v9();
  v30 = (_QWORD *)((char *)v1
                 + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__attributeRuns);
  *v30 = v6;
  v31 = (char *)v1
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromVersion;
  v9();
  v32 = (char *)v1
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromAddedByVersion;
  v9();
  swift_beginAccess();
  v10 = a1[2];
  v11 = a1[3];
  swift_beginAccess();
  v1[2] = v10;
  v1[3] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = a1[4];
  swift_beginAccess();
  v1[4] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = a1[5];
  swift_beginAccess();
  v1[5] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = (uint64_t)a1
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  v15 = v28;
  sub_1BDD86DEC(v14, v28, &qword_1ED6F37A8);
  v16 = (uint64_t)v27;
  swift_beginAccess();
  sub_1BDDA1AF4(v15, v16, &qword_1ED6F37A8);
  swift_endAccess();
  v17 = (uint64_t)a1
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion;
  swift_beginAccess();
  sub_1BDD86DEC(v17, v15, &qword_1ED6F37A8);
  v18 = (uint64_t)v29;
  swift_beginAccess();
  sub_1BDDA1AF4(v15, v18, &qword_1ED6F37A8);
  swift_endAccess();
  v19 = (_QWORD *)((char *)a1
                 + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__attributeRuns);
  swift_beginAccess();
  v20 = *v19;
  v21 = v30;
  swift_beginAccess();
  *v21 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (uint64_t)a1
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromVersion;
  swift_beginAccess();
  sub_1BDD86DEC(v22, v15, &qword_1ED6F37A8);
  v23 = (uint64_t)v31;
  swift_beginAccess();
  sub_1BDDA1AF4(v15, v23, &qword_1ED6F37A8);
  swift_endAccess();
  v24 = (uint64_t)a1
      + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromAddedByVersion;
  swift_beginAccess();
  sub_1BDD86DEC(v24, v15, &qword_1ED6F37A8);
  swift_release();
  v25 = (uint64_t)v32;
  swift_beginAccess();
  sub_1BDDA1AF4(v15, v25, &qword_1ED6F37A8);
  swift_endAccess();
  return v2;
}

uint64_t sub_1BE13C230()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version, &qword_1ED6F37A8);
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion, &qword_1ED6F37A8);
  swift_bridgeObjectRelease();
  sub_1BDD86E30(v0 + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromVersion, &qword_1ED6F37A8);
  sub_1BDD86E30(v0+ OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromAddedByVersion, &qword_1ED6F37A8);
  return swift_deallocClassInstance();
}

uint64_t sub_1BE13C2D8()
{
  return type metadata accessor for Proto_Sequence._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Sequence._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1ED6EF5D8);
}

void sub_1BE13C2F4()
{
  unint64_t v0;

  sub_1BDD92F18(319, &qword_1ED6F37B0, (void (*)(uint64_t))type metadata accessor for Proto_Version);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BE13C394()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v4 = v3;
          sub_1BE1B221C();
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          type metadata accessor for Proto_Value(0);
          sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for Proto_Subsequence(0);
          sub_1BDD8422C(&qword_1ED6EF6B8, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C43AC);
LABEL_5:
          v4 = v3;
          sub_1BE1B224C();
          goto LABEL_6;
        case 4:
        case 5:
          swift_beginAccess();
          type metadata accessor for Proto_Version(0);
          sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
          v4 = v3;
          sub_1BE1B2258();
          goto LABEL_6;
        case 6:
          swift_beginAccess();
          type metadata accessor for Proto_Sequence.AttributeRun(0);
          sub_1BDD8422C(&qword_1EF52B410, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C467C);
          v4 = v3;
          sub_1BE1B224C();
          goto LABEL_6;
        case 7:
        case 8:
          swift_beginAccess();
          type metadata accessor for Proto_Version(0);
          sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
          v4 = v3;
          sub_1BE1B2258();
LABEL_6:
          v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

uint64_t sub_1BE13C6D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v43 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v44 = (uint64_t)&v41 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v47 = (uint64_t)&v41 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v41 - v10;
  v48 = type metadata accessor for Proto_Version(0);
  v12 = *(_QWORD *)(v48 - 8);
  v13 = MEMORY[0x1E0C80A78](v48);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v42 = (uint64_t)&v41 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v45 = (uint64_t)&v41 - v19;
  MEMORY[0x1E0C80A78](v18);
  v46 = (uint64_t)&v41 - v20;
  swift_beginAccess();
  v21 = a1[3];
  v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v22 = a1[2] & 0xFFFFFFFFFFFFLL;
  v41 = v15;
  if (!v22 || (swift_bridgeObjectRetain(), sub_1BE1B2330(), result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(a1[4] + 16)
      || (type metadata accessor for Proto_Value(0),
          sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC),
          swift_bridgeObjectRetain(),
          sub_1BE1B2354(),
          result = swift_bridgeObjectRelease(),
          !v1))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(a1[5] + 16)
        || (type metadata accessor for Proto_Subsequence(0),
            sub_1BDD8422C(&qword_1ED6EF6B8, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C43AC),
            swift_bridgeObjectRetain(),
            sub_1BE1B2354(),
            result = swift_bridgeObjectRelease(),
            !v1))
      {
        v24 = (uint64_t)a1
            + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
        swift_beginAccess();
        sub_1BDD86DEC(v24, (uint64_t)v11, &qword_1ED6F37A8);
        v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
        if (v25(v11, 1, v48) == 1)
        {
          sub_1BDD86E30((uint64_t)v11, &qword_1ED6F37A8);
        }
        else
        {
          v26 = (uint64_t)v11;
          v27 = v46;
          sub_1BDDA2E8C(v26, v46, type metadata accessor for Proto_Version);
          sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
          sub_1BE1B2360();
          result = sub_1BDD9C3E0(v27, type metadata accessor for Proto_Version);
          if (v1)
            return result;
        }
        v28 = (uint64_t)a1
            + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion;
        swift_beginAccess();
        v29 = v47;
        sub_1BDD86DEC(v28, v47, &qword_1ED6F37A8);
        if (v25((char *)v29, 1, v48) == 1)
        {
          sub_1BDD86E30(v29, &qword_1ED6F37A8);
        }
        else
        {
          v30 = v29;
          v31 = v45;
          sub_1BDDA2E8C(v30, v45, type metadata accessor for Proto_Version);
          sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
          sub_1BE1B2360();
          result = sub_1BDD9C3E0(v31, type metadata accessor for Proto_Version);
          if (v1)
            return result;
        }
        v32 = (char *)a1
            + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__attributeRuns;
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)v32 + 16)
          || (type metadata accessor for Proto_Sequence.AttributeRun(0),
              sub_1BDD8422C(&qword_1EF52B410, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C467C), swift_bridgeObjectRetain(), sub_1BE1B2354(), result = swift_bridgeObjectRelease(), !v1))
        {
          v33 = (uint64_t)a1
              + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromVersion;
          swift_beginAccess();
          v34 = v44;
          sub_1BDD86DEC(v33, v44, &qword_1ED6F37A8);
          if (v25((char *)v34, 1, v48) == 1)
          {
            sub_1BDD86E30(v34, &qword_1ED6F37A8);
          }
          else
          {
            v35 = v34;
            v36 = v42;
            sub_1BDDA2E8C(v35, v42, type metadata accessor for Proto_Version);
            sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
            sub_1BE1B2360();
            result = sub_1BDD9C3E0(v36, type metadata accessor for Proto_Version);
            if (v1)
              return result;
          }
          v37 = (uint64_t)a1
              + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromAddedByVersion;
          swift_beginAccess();
          v38 = v43;
          sub_1BDD86DEC(v37, v43, &qword_1ED6F37A8);
          if (v25((char *)v38, 1, v48) == 1)
          {
            return sub_1BDD86E30(v38, &qword_1ED6F37A8);
          }
          else
          {
            v39 = v38;
            v40 = (uint64_t)v41;
            sub_1BDDA2E8C(v39, (uint64_t)v41, type metadata accessor for Proto_Version);
            sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
            sub_1BE1B2360();
            return sub_1BDD9C3E0(v40, type metadata accessor for Proto_Version);
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_1BE13CDE8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _BOOL8 result;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  _QWORD v99[2];
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v113 = type metadata accessor for Proto_Version(0);
  v4 = *(_QWORD *)(v113 - 8);
  v5 = MEMORY[0x1E0C80A78](v113);
  v101 = (uint64_t)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v103 = (uint64_t)v99 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v107 = (uint64_t)v99 - v10;
  MEMORY[0x1E0C80A78](v9);
  v109 = (uint64_t)v99 - v11;
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A10);
  v12 = MEMORY[0x1E0C80A78](v114);
  v14 = (char *)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v106 = (uint64_t)v99 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v110 = (uint64_t)v99 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v99 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F37A8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v102 = (uint64_t)v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v104 = (uint64_t)v99 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v105 = (uint64_t)v99 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v111 = (uint64_t)v99 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v108 = (uint64_t)v99 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v112 = (uint64_t)v99 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v36 = (char *)v99 - v35;
  MEMORY[0x1E0C80A78](v34);
  v38 = (char *)v99 - v37;
  swift_beginAccess();
  v39 = a1[2];
  v40 = a1[3];
  swift_beginAccess();
  if (v39 == a2[2] && v40 == a2[3] || (v41 = sub_1BE1B34AC(), result = 0, (v41 & 1) != 0))
  {
    v100 = v14;
    swift_beginAccess();
    v43 = a1[4];
    swift_beginAccess();
    v44 = a2[4];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45 = sub_1BDDFEE20(v43, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0)
      goto LABEL_39;
    swift_beginAccess();
    v46 = a1[5];
    swift_beginAccess();
    v47 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48 = sub_1BDE02DC0(v46, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
      goto LABEL_39;
    v49 = (uint64_t)a1
        + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    sub_1BDD86DEC(v49, (uint64_t)v38, &qword_1ED6F37A8);
    v50 = (uint64_t)a2
        + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    v51 = (uint64_t)&v20[*(int *)(v114 + 48)];
    sub_1BDD86DEC((uint64_t)v38, (uint64_t)v20, &qword_1ED6F37A8);
    sub_1BDD86DEC(v50, v51, &qword_1ED6F37A8);
    v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v53 = v113;
    if (v52((uint64_t)v20, 1, v113) == 1)
    {
      sub_1BDD86E30((uint64_t)v38, &qword_1ED6F37A8);
      if (v52(v51, 1, v53) == 1)
      {
        sub_1BDD86E30((uint64_t)v20, &qword_1ED6F37A8);
        goto LABEL_9;
      }
    }
    else
    {
      sub_1BDD86DEC((uint64_t)v20, (uint64_t)v36, &qword_1ED6F37A8);
      if (v52(v51, 1, v53) != 1)
      {
        v80 = v109;
        sub_1BDDA2E8C(v51, v109, type metadata accessor for Proto_Version);
        if (sub_1BDDFED94(*(_QWORD **)v36, *(_QWORD **)v80)
          && (sub_1BDE003E4(*((_QWORD *)v36 + 1), *(_QWORD *)(v80 + 8)) & 1) != 0)
        {
          v99[1] = v80 + *(int *)(v53 + 24);
          sub_1BE1B20F0();
          sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
          v81 = sub_1BE1B2798();
          sub_1BDD9C3E0(v80, type metadata accessor for Proto_Version);
          sub_1BDD86E30((uint64_t)v38, &qword_1ED6F37A8);
          v53 = v113;
          sub_1BDD9C3E0((uint64_t)v36, type metadata accessor for Proto_Version);
          sub_1BDD86E30((uint64_t)v20, &qword_1ED6F37A8);
          if ((v81 & 1) == 0)
            goto LABEL_39;
LABEL_9:
          v54 = (uint64_t)a1
              + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion;
          swift_beginAccess();
          v55 = v112;
          sub_1BDD86DEC(v54, v112, &qword_1ED6F37A8);
          v56 = (char *)a2
              + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedByVersion;
          swift_beginAccess();
          v57 = v110;
          v58 = v110 + *(int *)(v114 + 48);
          sub_1BDD86DEC(v55, v110, &qword_1ED6F37A8);
          v59 = (uint64_t)v56;
          v60 = v57;
          sub_1BDD86DEC(v59, v58, &qword_1ED6F37A8);
          if (v52(v57, 1, v53) == 1)
          {
            sub_1BDD86E30(v55, &qword_1ED6F37A8);
            v61 = v52(v58, 1, v53);
            v62 = v111;
            if (v61 != 1)
            {
LABEL_31:
              v78 = &qword_1EF530A10;
              v79 = v60;
              goto LABEL_38;
            }
            sub_1BDD86E30(v57, &qword_1ED6F37A8);
          }
          else
          {
            v82 = v57;
            v83 = v108;
            sub_1BDD86DEC(v82, v108, &qword_1ED6F37A8);
            v84 = v52(v58, 1, v53);
            v62 = v111;
            if (v84 == 1)
            {
              sub_1BDD86E30(v112, &qword_1ED6F37A8);
              v85 = v83;
LABEL_30:
              sub_1BDD9C3E0(v85, type metadata accessor for Proto_Version);
              goto LABEL_31;
            }
            v86 = v107;
            sub_1BDDA2E8C(v58, v107, type metadata accessor for Proto_Version);
            if (!sub_1BDDFED94(*(_QWORD **)v83, *(_QWORD **)v86)
              || (sub_1BDE003E4(*(_QWORD *)(v83 + 8), *(_QWORD *)(v86 + 8)) & 1) == 0)
            {
              sub_1BDD9C3E0(v86, type metadata accessor for Proto_Version);
              sub_1BDD86E30(v112, &qword_1ED6F37A8);
              v88 = v83;
              goto LABEL_37;
            }
            v113 = v86 + *(int *)(v53 + 24);
            sub_1BE1B20F0();
            sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
            v87 = sub_1BE1B2798();
            sub_1BDD9C3E0(v86, type metadata accessor for Proto_Version);
            sub_1BDD86E30(v112, &qword_1ED6F37A8);
            sub_1BDD9C3E0(v83, type metadata accessor for Proto_Version);
            sub_1BDD86E30(v110, &qword_1ED6F37A8);
            if ((v87 & 1) == 0)
              goto LABEL_39;
          }
          v63 = (_QWORD *)((char *)a1
                         + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__attributeRuns);
          swift_beginAccess();
          v64 = *v63;
          v65 = (_QWORD *)((char *)a2
                         + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__attributeRuns);
          swift_beginAccess();
          v66 = *v65;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v67 = sub_1BDE02DD4(v64, v66);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v67 & 1) == 0)
            goto LABEL_39;
          v68 = (uint64_t)a1
              + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromVersion;
          swift_beginAccess();
          sub_1BDD86DEC(v68, v62, &qword_1ED6F37A8);
          v69 = (char *)a2
              + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromVersion;
          swift_beginAccess();
          v70 = v106;
          v71 = v106 + *(int *)(v114 + 48);
          sub_1BDD86DEC(v62, v106, &qword_1ED6F37A8);
          v72 = (uint64_t)v69;
          v60 = v70;
          sub_1BDD86DEC(v72, v71, &qword_1ED6F37A8);
          if (v52(v70, 1, v53) == 1)
          {
            sub_1BDD86E30(v62, &qword_1ED6F37A8);
            if (v52(v71, 1, v53) == 1)
            {
              sub_1BDD86E30(v70, &qword_1ED6F37A8);
              goto LABEL_16;
            }
            goto LABEL_31;
          }
          v89 = v105;
          sub_1BDD86DEC(v70, v105, &qword_1ED6F37A8);
          if (v52(v71, 1, v53) == 1)
          {
            sub_1BDD86E30(v111, &qword_1ED6F37A8);
            v85 = v89;
            goto LABEL_30;
          }
          v90 = v103;
          sub_1BDDA2E8C(v71, v103, type metadata accessor for Proto_Version);
          if (sub_1BDDFED94(*(_QWORD **)v89, *(_QWORD **)v90)
            && (sub_1BDE003E4(*(_QWORD *)(v89 + 8), *(_QWORD *)(v90 + 8)) & 1) != 0)
          {
            sub_1BE1B20F0();
            sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
            v91 = sub_1BE1B2798();
            sub_1BDD9C3E0(v90, type metadata accessor for Proto_Version);
            sub_1BDD86E30(v111, &qword_1ED6F37A8);
            sub_1BDD9C3E0(v89, type metadata accessor for Proto_Version);
            sub_1BDD86E30(v106, &qword_1ED6F37A8);
            if ((v91 & 1) != 0)
            {
LABEL_16:
              v73 = (uint64_t)a1
                  + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromAddedByVersion;
              swift_beginAccess();
              v74 = v104;
              sub_1BDD86DEC(v73, v104, &qword_1ED6F37A8);
              v75 = (uint64_t)a2
                  + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromAddedByVersion;
              swift_beginAccess();
              v76 = (uint64_t)v100;
              v77 = (uint64_t)&v100[*(int *)(v114 + 48)];
              sub_1BDD86DEC(v74, (uint64_t)v100, &qword_1ED6F37A8);
              sub_1BDD86DEC(v75, v77, &qword_1ED6F37A8);
              if (v52(v76, 1, v53) == 1)
              {
                swift_release();
                swift_release();
                sub_1BDD86E30(v74, &qword_1ED6F37A8);
                if (v52(v77, 1, v53) == 1)
                {
                  sub_1BDD86E30(v76, &qword_1ED6F37A8);
                  return 1;
                }
              }
              else
              {
                v92 = v102;
                sub_1BDD86DEC(v76, v102, &qword_1ED6F37A8);
                if (v52(v77, 1, v53) != 1)
                {
                  v95 = v101;
                  sub_1BDDA2E8C(v77, v101, type metadata accessor for Proto_Version);
                  v96 = sub_1BDDFED94(*(_QWORD **)v92, *(_QWORD **)v95);
                  v97 = v104;
                  if (v96 && (sub_1BDE003E4(*(_QWORD *)(v92 + 8), *(_QWORD *)(v95 + 8)) & 1) != 0)
                  {
                    sub_1BE1B20F0();
                    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
                    v98 = sub_1BE1B2798();
                    swift_release();
                    swift_release();
                    sub_1BDD9C3E0(v95, type metadata accessor for Proto_Version);
                    sub_1BDD86E30(v97, &qword_1ED6F37A8);
                    sub_1BDD9C3E0(v92, type metadata accessor for Proto_Version);
                    sub_1BDD86E30(v76, &qword_1ED6F37A8);
                    return (v98 & 1) != 0;
                  }
                  swift_release();
                  swift_release();
                  sub_1BDD9C3E0(v95, type metadata accessor for Proto_Version);
                  sub_1BDD86E30(v97, &qword_1ED6F37A8);
                  sub_1BDD9C3E0(v92, type metadata accessor for Proto_Version);
                  v94 = v76;
                  v93 = &qword_1ED6F37A8;
                  goto LABEL_57;
                }
                swift_release();
                swift_release();
                sub_1BDD86E30(v104, &qword_1ED6F37A8);
                sub_1BDD9C3E0(v92, type metadata accessor for Proto_Version);
              }
              v93 = &qword_1EF530A10;
              v94 = v76;
LABEL_57:
              sub_1BDD86E30(v94, v93);
              return 0;
            }
LABEL_39:
            swift_release();
            swift_release();
            return 0;
          }
          sub_1BDD9C3E0(v90, type metadata accessor for Proto_Version);
          sub_1BDD86E30(v111, &qword_1ED6F37A8);
          v88 = v89;
LABEL_37:
          sub_1BDD9C3E0(v88, type metadata accessor for Proto_Version);
          v79 = v60;
          v78 = &qword_1ED6F37A8;
          goto LABEL_38;
        }
        sub_1BDD9C3E0(v80, type metadata accessor for Proto_Version);
        sub_1BDD86E30((uint64_t)v38, &qword_1ED6F37A8);
        sub_1BDD9C3E0((uint64_t)v36, type metadata accessor for Proto_Version);
        v79 = (uint64_t)v20;
        v78 = &qword_1ED6F37A8;
LABEL_38:
        sub_1BDD86E30(v79, v78);
        goto LABEL_39;
      }
      sub_1BDD86E30((uint64_t)v38, &qword_1ED6F37A8);
      sub_1BDD9C3E0((uint64_t)v36, type metadata accessor for Proto_Version);
    }
    v78 = &qword_1EF530A10;
    v79 = (uint64_t)v20;
    goto LABEL_38;
  }
  return result;
}

uint64_t sub_1BE13DBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1ED6EF5C0, &qword_1ED6EF5B0, a2);
}

uint64_t sub_1BE13DBC4()
{
  return 0x65532E6F746F7250;
}

uint64_t sub_1BE13DBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_Sequence, (void (*)(_QWORD))type metadata accessor for Proto_Sequence._StorageClass, (uint64_t (*)(uint64_t))sub_1BE13BE10, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE13C394);
}

uint64_t sub_1BE13DC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Sequence, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE13C6D4);
}

uint64_t sub_1BE13DC40()
{
  sub_1BDD8422C(&qword_1EF530B18, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C47AC);
  return sub_1BE1B212C();
}

uint64_t sub_1BE13DC90@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52C068, (uint64_t)qword_1EF5496D8, a1);
}

uint64_t sub_1BE13DCAC()
{
  sub_1BDD8422C(&qword_1ED6EF5E8, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C47E4);
  return sub_1BE1B2288();
}

uint64_t sub_1BE13DCEC()
{
  sub_1BDD8422C(&qword_1ED6EF5E8, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C47E4);
  return sub_1BE1B2294();
}

uint64_t sub_1BE13DD3C(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Sequence, (uint64_t (*)(uint64_t, uint64_t))sub_1BE13CDE8) & 1;
}

uint64_t sub_1BE13DD64()
{
  uint64_t result;
  _QWORD v1[2];

  strcpy((char *)v1, "Proto.Sequence");
  HIBYTE(v1[1]) = -18;
  result = sub_1BE1B284C();
  qword_1EF5496F0 = v1[0];
  *(_QWORD *)algn_1EF5496F8 = v1[1];
  return result;
}

uint64_t sub_1BE13DDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549700);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549700);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "length";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "attributes";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "timestamp";
  *(_QWORD *)(v12 + 8) = 9;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE13DF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for Proto_Sequence.AttributeRun._StorageClass(0);
  v0 = swift_allocObject();
  *(_DWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9D8];
  v1 = v0
     + OBJC_IVAR____TtCVV9Coherence14Proto_Sequence12AttributeRunP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  v2 = type metadata accessor for Proto_Timestamp(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_1EF52B3E8 = v0;
  return result;
}

uint64_t sub_1BE13DFEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = MEMORY[0x1E0DEE9D8];
  v6 = v1
     + OBJC_IVAR____TtCVV9Coherence14Proto_Sequence12AttributeRunP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  v7 = type metadata accessor for Proto_Timestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  v8 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v8;
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a1
      + OBJC_IVAR____TtCVV9Coherence14Proto_Sequence12AttributeRunP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1BDD86DEC(v10, (uint64_t)v5, &qword_1ED6F3850);
  swift_release();
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F3850);
  swift_endAccess();
  return v1;
}

uint64_t sub_1BE13E18C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BDD86E30(v0+ OBJC_IVAR____TtCVV9Coherence14Proto_Sequence12AttributeRunP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp, &qword_1ED6F3850);
  return swift_deallocClassInstance();
}

uint64_t sub_1BE13E1CC()
{
  return type metadata accessor for Proto_Sequence.AttributeRun._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Sequence.AttributeRun._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B400);
}

void sub_1BE13E1E8()
{
  unint64_t v0;

  sub_1BDD92F18(319, &qword_1ED6F2EB0, (void (*)(uint64_t))type metadata accessor for Proto_Timestamp);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BE13E280()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        type metadata accessor for Proto_Sequence.AttributeRun.Attribute(0);
        sub_1BDD8422C(&qword_1EF52B3C0, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C4514);
        v4 = v3;
        sub_1BE1B224C();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        v4 = v3;
        sub_1BE1B2228();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    swift_beginAccess();
    type metadata accessor for Proto_Timestamp(0);
    sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
    v4 = v3;
    sub_1BE1B2258();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1BE13E428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  _QWORD v15[12];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Timestamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *(_DWORD *)(a1 + 16);
  v15[11] = a2;
  v15[0] = v9;
  if (!v12 || (result = sub_1BE1B233C(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16)
      || (type metadata accessor for Proto_Sequence.AttributeRun.Attribute(0),
          sub_1BDD8422C(&qword_1EF52B3C0, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C4514), swift_bridgeObjectRetain(), sub_1BE1B2354(), result = swift_bridgeObjectRelease(), !v2))
    {
      v14 = a1
          + OBJC_IVAR____TtCVV9Coherence14Proto_Sequence12AttributeRunP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
      swift_beginAccess();
      sub_1BDD86DEC(v14, (uint64_t)v7, &qword_1ED6F3850);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15[0] + 48))(v7, 1, v8) == 1)
      {
        return sub_1BDD86E30((uint64_t)v7, &qword_1ED6F3850);
      }
      else
      {
        sub_1BDDA2E8C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Timestamp);
        sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
        sub_1BE1B2360();
        return sub_1BDD9C3E0((uint64_t)v11, type metadata accessor for Proto_Timestamp);
      }
    }
  }
  return result;
}

uint64_t sub_1BE13E6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  v4 = type metadata accessor for Proto_Timestamp(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A38);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v31 - v15;
  swift_beginAccess();
  v17 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  if (v17 != *(_DWORD *)(a2 + 16))
    return 0;
  v32 = v7;
  v33 = v14;
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v19 = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_1BDE02DE8(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
    v21 = a1
        + OBJC_IVAR____TtCVV9Coherence14Proto_Sequence12AttributeRunP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    sub_1BDD86DEC(v21, (uint64_t)v16, &qword_1ED6F3850);
    v22 = a2
        + OBJC_IVAR____TtCVV9Coherence14Proto_Sequence12AttributeRunP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1BDD86DEC((uint64_t)v16, (uint64_t)v10, &qword_1ED6F3850);
    sub_1BDD86DEC(v22, v23, &qword_1ED6F3850);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v24((uint64_t)v10, 1, v4) == 1)
    {
      swift_release();
      swift_release();
      sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3850);
      if (v24(v23, 1, v4) == 1)
      {
        sub_1BDD86E30((uint64_t)v10, &qword_1ED6F3850);
        return 1;
      }
      goto LABEL_10;
    }
    v26 = v33;
    sub_1BDD86DEC((uint64_t)v10, (uint64_t)v33, &qword_1ED6F3850);
    if (v24(v23, 1, v4) == 1)
    {
      swift_release();
      swift_release();
      sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3850);
      sub_1BDD9C3E0((uint64_t)v26, type metadata accessor for Proto_Timestamp);
LABEL_10:
      v27 = &qword_1EF530A38;
      v28 = (uint64_t)v10;
LABEL_16:
      sub_1BDD86E30(v28, v27);
      return 0;
    }
    v29 = v32;
    sub_1BDDA2E8C(v23, (uint64_t)v32, type metadata accessor for Proto_Timestamp);
    if (*v26 != *v29 || v26[1] != v29[1])
    {
      swift_release();
      swift_release();
      sub_1BDD9C3E0((uint64_t)v29, type metadata accessor for Proto_Timestamp);
      sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3850);
      sub_1BDD9C3E0((uint64_t)v26, type metadata accessor for Proto_Timestamp);
      v28 = (uint64_t)v10;
      v27 = &qword_1ED6F3850;
      goto LABEL_16;
    }
    sub_1BE1B20F0();
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v30 = sub_1BE1B2798();
    swift_release();
    swift_release();
    sub_1BDD9C3E0((uint64_t)v29, type metadata accessor for Proto_Timestamp);
    sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3850);
    sub_1BDD9C3E0((uint64_t)v26, type metadata accessor for Proto_Timestamp);
    sub_1BDD86E30((uint64_t)v10, &qword_1ED6F3850);
    if ((v30 & 1) != 0)
      return 1;
  }
  else
  {
    swift_release();
    swift_release();
  }
  return 0;
}

uint64_t sub_1BE13EB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52B3F8, &qword_1EF52B3E8, a2);
}

uint64_t sub_1BE13EB20(uint64_t a1, uint64_t a2)
{
  return sub_1BDE429D4(a1, a2, &qword_1EF52C078, &qword_1EF5496F0);
}

uint64_t sub_1BE13EB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_Sequence.AttributeRun, (void (*)(_QWORD))type metadata accessor for Proto_Sequence.AttributeRun._StorageClass, sub_1BE13DFEC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE13E280);
}

uint64_t sub_1BE13EB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Sequence.AttributeRun, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE13E428);
}

uint64_t sub_1BE13EB98()
{
  sub_1BDD8422C(&qword_1EF530B20, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C4644);
  return sub_1BE1B212C();
}

uint64_t sub_1BE13EBE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52C080, (uint64_t)qword_1EF549700, a1);
}

uint64_t sub_1BE13EC04()
{
  sub_1BDD8422C(&qword_1EF52B410, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C467C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE13EC44()
{
  sub_1BDD8422C(&qword_1EF52B410, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C467C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE13EC94(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Sequence.AttributeRun, sub_1BE13E6A4) & 1;
}

uint64_t sub_1BE13ECBC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_1EF52C078 != -1)
    swift_once();
  v1 = qword_1EF5496F0;
  v2 = *(_QWORD *)algn_1EF5496F8;
  swift_bridgeObjectRetain();
  result = sub_1BE1B284C();
  qword_1EF549718 = v1;
  unk_1EF549720 = v2;
  return result;
}

uint64_t sub_1BE13ED48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549728);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549728);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE13EE98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for Proto_Sequence.AttributeRun.Attribute._StorageClass(0);
  v0 = swift_allocObject();
  *(_DWORD *)(v0 + 16) = 0;
  v1 = v0
     + OBJC_IVAR____TtCVVV9Coherence14Proto_Sequence12AttributeRun9AttributeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  v2 = type metadata accessor for Proto_Value(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_1EF52B398 = v0;
  return result;
}

uint64_t sub_1BE13EF04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_DWORD *)(v1 + 16) = 0;
  v6 = v1
     + OBJC_IVAR____TtCVVV9Coherence14Proto_Sequence12AttributeRun9AttributeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  v7 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  v8 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v8;
  v9 = a1
     + OBJC_IVAR____TtCVVV9Coherence14Proto_Sequence12AttributeRun9AttributeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1BDD86DEC(v9, (uint64_t)v5, &qword_1ED6F3770);
  swift_release();
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F3770);
  swift_endAccess();
  return v1;
}

uint64_t sub_1BE13F048()
{
  return sub_1BDD96A3C(&OBJC_IVAR____TtCVVV9Coherence14Proto_Sequence12AttributeRun9AttributeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value, &qword_1ED6F3770);
}

uint64_t sub_1BE13F05C()
{
  return type metadata accessor for Proto_Sequence.AttributeRun.Attribute._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Sequence.AttributeRun.Attribute._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B3B0);
}

void sub_1BE13F078()
{
  sub_1BE13F088();
}

void sub_1BE13F088()
{
  unint64_t v0;

  sub_1BDD92F18(319, &qword_1ED6F3778, (void (*)(uint64_t))type metadata accessor for Proto_Value);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BE13F108()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        v4 = v3;
        sub_1BE1B2228();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    swift_beginAccess();
    type metadata accessor for Proto_Value(0);
    sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
    v4 = v3;
    sub_1BE1B2258();
LABEL_5:
    v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1BE13F24C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Proto_Value(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (!*(_DWORD *)(a1 + 16) || (result = sub_1BE1B233C(), !v1))
  {
    v11 = a1
        + OBJC_IVAR____TtCVVV9Coherence14Proto_Sequence12AttributeRun9AttributeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
    swift_beginAccess();
    sub_1BDD86DEC(v11, (uint64_t)v5, &qword_1ED6F3770);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      return sub_1BDD86E30((uint64_t)v5, &qword_1ED6F3770);
    }
    else
    {
      sub_1BDDA2E8C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Value);
      sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
      sub_1BE1B2360();
      return sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for Proto_Value);
    }
  }
  return result;
}

BOOL sub_1BE13F410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;

  v4 = type metadata accessor for Proto_Value(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52C350);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v25 - v15;
  swift_beginAccess();
  v17 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  if (v17 != *(_DWORD *)(a2 + 16))
    return 0;
  v26 = v7;
  v18 = a1
      + OBJC_IVAR____TtCVVV9Coherence14Proto_Sequence12AttributeRun9AttributeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1BDD86DEC(v18, (uint64_t)v16, &qword_1ED6F3770);
  v19 = a2
      + OBJC_IVAR____TtCVVV9Coherence14Proto_Sequence12AttributeRun9AttributeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1BDD86DEC((uint64_t)v16, (uint64_t)v10, &qword_1ED6F3770);
  sub_1BDD86DEC(v19, v20, &qword_1ED6F3770);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3770);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1BDD86E30((uint64_t)v10, &qword_1ED6F3770);
      return 1;
    }
    goto LABEL_7;
  }
  sub_1BDD86DEC((uint64_t)v10, (uint64_t)v14, &qword_1ED6F3770);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3770);
    sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto_Value);
LABEL_7:
    sub_1BDD86E30((uint64_t)v10, &qword_1EF52C350);
    return 0;
  }
  v23 = (uint64_t)v26;
  sub_1BDDA2E8C(v20, (uint64_t)v26, type metadata accessor for Proto_Value);
  v24 = sub_1BE147FD4((uint64_t)v14, v23, type metadata accessor for Proto_Value, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12DC44);
  sub_1BDD9C3E0(v23, type metadata accessor for Proto_Value);
  sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3770);
  sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto_Value);
  sub_1BDD86E30((uint64_t)v10, &qword_1ED6F3770);
  return (v24 & 1) != 0;
}

uint64_t sub_1BE13F70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52B3A0, &qword_1EF52B398, a2);
}

uint64_t sub_1BE13F728(uint64_t a1, uint64_t a2)
{
  return sub_1BDE429D4(a1, a2, &qword_1EF52C090, &qword_1EF549718);
}

uint64_t sub_1BE13F748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (void (*)(_QWORD))type metadata accessor for Proto_Sequence.AttributeRun.Attribute._StorageClass, sub_1BE13EF04, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE13F108);
}

uint64_t sub_1BE13F77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE13F24C);
}

uint64_t sub_1BE13F7A0()
{
  sub_1BDD8422C(&qword_1EF530B28, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C44DC);
  return sub_1BE1B212C();
}

uint64_t sub_1BE13F7F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52C098, (uint64_t)qword_1EF549728, a1);
}

uint64_t sub_1BE13F80C()
{
  sub_1BDD8422C(&qword_1EF52B3C0, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C4514);
  return sub_1BE1B2288();
}

uint64_t sub_1BE13F84C()
{
  sub_1BDD8422C(&qword_1EF52B3C0, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C4514);
  return sub_1BE1B2294();
}

uint64_t sub_1BE13F89C(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t (*)(uint64_t, uint64_t))sub_1BE13F410) & 1;
}

uint64_t sub_1BE13F8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549740);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549740);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1C0F20;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "sequenceStartID";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "length";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "addedBy";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "child";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "removedAddedBy";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "contentOptions";
  *((_QWORD *)v19 + 1) = 14;
  v19[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE13FAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Proto_Subsequence._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  v2 = type metadata accessor for Proto_Timestamp(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__length) = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__child) = v4;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removedAddedBy) = v4;
  v5 = v0
     + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__contentOptions;
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  qword_1ED6EF678 = v0;
  return result;
}

uint64_t sub_1BE13FBB8()
{
  uint64_t v0;

  sub_1BDD86E30(v0+ OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID, &qword_1ED6F3850);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BE13FC20()
{
  return type metadata accessor for Proto_Subsequence._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Subsequence._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1ED6EF6A8);
}

void sub_1BE13FC3C()
{
  unint64_t v0;

  sub_1BDD92F18(319, &qword_1ED6F2EB0, (void (*)(uint64_t))type metadata accessor for Proto_Timestamp);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BE13FCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Subsequence(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Subsequence._StorageClass(0);
    swift_allocObject();
    v3 = swift_retain();
    v4 = sub_1BE148B38(v3);
    swift_release();
    *(_QWORD *)(v1 + v2) = v4;
    swift_release();
  }
  swift_retain();
  sub_1BE13FDAC();
  return swift_release();
}

uint64_t sub_1BE13FDAC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for Proto_Timestamp(0);
          sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
          v4 = v3;
          sub_1BE1B2258();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          v4 = v3;
          sub_1BE1B2228();
          goto LABEL_5;
        case 3:
        case 5:
          swift_beginAccess();
          type metadata accessor for Proto_Timestamp(0);
          sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
          v4 = v3;
          sub_1BE1B224C();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          v4 = v3;
          sub_1BE1B21E0();
LABEL_5:
          v3 = v4;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          sub_1BE148AF4();
          sub_1BE1B2174();
          swift_endAccess();
          break;
        default:
          break;
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

uint64_t sub_1BE140048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  v28 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Timestamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  v13 = a1
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v7, &qword_1ED6F3850);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  v24[1] = v8;
  if (v14 == 1)
  {
    sub_1BDD86E30((uint64_t)v7, &qword_1ED6F3850);
    v15 = v25;
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Timestamp);
    sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
    v16 = v25;
    sub_1BE1B2360();
    v15 = v16;
    result = sub_1BDD9C3E0((uint64_t)v11, type metadata accessor for Proto_Timestamp);
    if (v16)
      return result;
  }
  v18 = (_DWORD *)(v12
                 + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__length);
  swift_beginAccess();
  if (!*v18 || (result = sub_1BE1B233C(), !v15))
  {
    v19 = v12
        + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)v19 + 16)
      || (sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4),
          swift_bridgeObjectRetain(),
          sub_1BE1B2354(),
          result = swift_bridgeObjectRelease(),
          !v15))
    {
      v20 = v12
          + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__child;
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)v20 + 16)
        || (swift_bridgeObjectRetain(), sub_1BE1B22AC(), result = swift_bridgeObjectRelease(), !v15))
      {
        v21 = v12
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removedAddedBy;
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)v21 + 16)
          || (sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4),
              swift_bridgeObjectRetain(),
              sub_1BE1B2354(),
              result = swift_bridgeObjectRelease(),
              !v15))
        {
          v22 = (uint64_t *)(v12
                          + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__contentOptions);
          result = swift_beginAccess();
          if (*v22)
          {
            v23 = *((_BYTE *)v22 + 8);
            v26 = *v22;
            v27 = v23;
            sub_1BE148AF4();
            return sub_1BE1B22D0();
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_1BE1403F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  int *v19;
  int v20;
  _DWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  _QWORD v45[2];
  char *v46;
  _QWORD *v47;
  uint64_t v48;

  v48 = a2;
  v3 = type metadata accessor for Proto_Timestamp(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v46 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A38);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v10 = MEMORY[0x1E0C80A78](v9);
  v47 = (_QWORD *)((char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v45 - v12;
  v14 = a1
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  sub_1BDD86DEC(v14, (uint64_t)v13, &qword_1ED6F3850);
  v15 = v48;
  v16 = v48
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  v17 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1BDD86DEC((uint64_t)v13, (uint64_t)v8, &qword_1ED6F3850);
  sub_1BDD86DEC(v16, v17, &qword_1ED6F3850);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v18((uint64_t)v8, 1, v3) != 1)
  {
    v40 = v46;
    v39 = v47;
    sub_1BDD86DEC((uint64_t)v8, (uint64_t)v47, &qword_1ED6F3850);
    if (v18(v17, 1, v3) != 1)
    {
      sub_1BDDA2E8C(v17, (uint64_t)v40, type metadata accessor for Proto_Timestamp);
      if (*v39 == *v40 && v39[1] == v40[1])
      {
        v45[1] = (char *)v40 + *(int *)(v3 + 24);
        sub_1BE1B20F0();
        sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        swift_retain();
        swift_retain();
        v43 = sub_1BE1B2798();
        sub_1BDD9C3E0((uint64_t)v40, type metadata accessor for Proto_Timestamp);
        sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3850);
        sub_1BDD9C3E0((uint64_t)v39, type metadata accessor for Proto_Timestamp);
        sub_1BDD86E30((uint64_t)v8, &qword_1ED6F3850);
        if ((v43 & 1) != 0)
          goto LABEL_4;
LABEL_22:
        swift_release();
        swift_release();
        return 0;
      }
      swift_retain();
      swift_retain();
      sub_1BDD9C3E0((uint64_t)v40, type metadata accessor for Proto_Timestamp);
      sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3850);
      sub_1BDD9C3E0((uint64_t)v39, type metadata accessor for Proto_Timestamp);
      v42 = (uint64_t)v8;
      v41 = &qword_1ED6F3850;
LABEL_21:
      sub_1BDD86E30(v42, v41);
      goto LABEL_22;
    }
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3850);
    sub_1BDD9C3E0((uint64_t)v39, type metadata accessor for Proto_Timestamp);
LABEL_15:
    v41 = &qword_1EF530A38;
    v42 = (uint64_t)v8;
    goto LABEL_21;
  }
  swift_retain();
  swift_retain();
  sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3850);
  if (v18(v17, 1, v3) != 1)
    goto LABEL_15;
  sub_1BDD86E30((uint64_t)v8, &qword_1ED6F3850);
LABEL_4:
  v19 = (int *)(a1
              + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__length);
  swift_beginAccess();
  v20 = *v19;
  v21 = (_DWORD *)(v15
                 + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__length);
  swift_beginAccess();
  if (v20 != *v21)
    goto LABEL_22;
  v22 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy);
  swift_beginAccess();
  v23 = *v22;
  v24 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy);
  swift_beginAccess();
  v25 = *v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1BDE02BE0(v23, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
    goto LABEL_22;
  v27 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__child);
  swift_beginAccess();
  v28 = *v27;
  v29 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__child);
  swift_beginAccess();
  if (!sub_1BDE00874(v28, *v29))
    goto LABEL_22;
  v30 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removedAddedBy);
  swift_beginAccess();
  v31 = *v30;
  v32 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removedAddedBy);
  swift_beginAccess();
  v33 = *v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = sub_1BDE02BE0(v31, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0)
    goto LABEL_22;
  v35 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__contentOptions);
  swift_beginAccess();
  v36 = *v35;
  swift_release();
  v37 = (uint64_t *)(v15
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__contentOptions);
  swift_beginAccess();
  v38 = *v37;
  LODWORD(v37) = *((unsigned __int8 *)v37 + 8);
  swift_release();
  if ((_DWORD)v37 != 1)
    return v36 == v38;
  if (!v38)
    return !v36;
  if (v38 == 1)
    return v36 == 1;
  return v36 == 2;
}

uint64_t sub_1BE1409E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1ED6EF680, &qword_1ED6EF678, a2);
}

unint64_t sub_1BE1409FC()
{
  return 0xD000000000000011;
}

uint64_t sub_1BE140A18()
{
  return sub_1BE13FCE0();
}

uint64_t sub_1BE140A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Subsequence, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE140048);
}

uint64_t sub_1BE140A50()
{
  sub_1BDD8422C(&qword_1EF530B30, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C4374);
  return sub_1BE1B212C();
}

uint64_t sub_1BE140AA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(qword_1EF52C0A8, (uint64_t)qword_1EF549740, a1);
}

uint64_t sub_1BE140ABC()
{
  sub_1BDD8422C(&qword_1ED6EF6B8, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C43AC);
  return sub_1BE1B2288();
}

uint64_t sub_1BE140AFC()
{
  sub_1BDD8422C(&qword_1ED6EF6B8, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C43AC);
  return sub_1BE1B2294();
}

uint64_t sub_1BE140B4C(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Subsequence, (uint64_t (*)(uint64_t, uint64_t))sub_1BE1403F4) & 1;
}

uint64_t sub_1BE140B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549758);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549758);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Default";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "HasContent";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "NoContent";
  *(_QWORD *)(v12 + 8) = 9;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE140D04@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52C0B8, (uint64_t)qword_1EF549758, a1);
}

uint64_t sub_1BE140D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549770);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549770);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B6B40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "replicaUUID";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "range";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "affinity";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE140EB4()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1BE1B2144();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        type metadata accessor for Proto_Selection.Range(0);
        sub_1BDD8422C(&qword_1EF5307E0, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C408C);
        v4 = v3;
        sub_1BE1B224C();
        goto LABEL_5;
      }
      if (result == 1)
      {
        v4 = v3;
        sub_1BE1B2180();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_1BE1B2144();
    }
    sub_1BE148E24();
    v4 = v3;
    sub_1BE1B2174();
LABEL_5:
    v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1BE140FE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*v0 + 16) || (result = sub_1BE1B22DC(), !v1))
  {
    if (!*(_QWORD *)(v0[1] + 16)
      || (type metadata accessor for Proto_Selection.Range(0),
          sub_1BDD8422C(&qword_1EF5307E0, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C408C),
          result = sub_1BE1B2354(),
          !v1))
    {
      if (!v0[2] || (sub_1BE148E24(), result = sub_1BE1B22D0(), !v1))
      {
        type metadata accessor for Proto_Selection(0);
        return sub_1BE1B20D8();
      }
    }
  }
  return result;
}

uint64_t sub_1BE141130()
{
  return 0x65532E6F746F7250;
}

uint64_t sub_1BE141154()
{
  return sub_1BE140EB4();
}

uint64_t sub_1BE141168()
{
  return sub_1BE140FE4();
}

uint64_t sub_1BE14117C()
{
  sub_1BDD8422C(&qword_1EF530B40, type metadata accessor for Proto_Selection, (uint64_t)&unk_1BE1C41E4);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1411CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52C0C0, (uint64_t)qword_1EF549770, a1);
}

uint64_t sub_1BE1411E8()
{
  sub_1BDD8422C(&qword_1EF530800, type metadata accessor for Proto_Selection, (uint64_t)&unk_1BE1C421C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE141228()
{
  sub_1BDD8422C(&qword_1EF530800, type metadata accessor for Proto_Selection, (uint64_t)&unk_1BE1C421C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE14127C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF549788);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF549788);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Backward";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Forward";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE1413CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52C0C8, (uint64_t)qword_1EF549788, a1);
}

uint64_t sub_1BE1413E8()
{
  uint64_t result;

  result = sub_1BE1B284C();
  qword_1EF5497A0 = 0x65532E6F746F7250;
  *(_QWORD *)algn_1EF5497A8 = 0xEF6E6F697463656CLL;
  return result;
}

uint64_t sub_1BE141454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BE1B2390();
  __swift_allocate_value_buffer(v0, qword_1EF5497B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5497B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52CCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BE1B61C0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "fromChar";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BE1B236C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "toChar";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_1BE1B2378();
}

uint64_t sub_1BE1415A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  type metadata accessor for Proto_Selection.Range._StorageClass(0);
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromChar;
  v2 = type metadata accessor for Proto_Timestamp(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__toChar, 1, 1, v2);
  qword_1EF530760 = v0;
  return result;
}

uint64_t sub_1BE141634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1
     + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromChar;
  v7 = type metadata accessor for Proto_Timestamp(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = v1
     + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__toChar;
  v8(v1 + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__toChar, 1, 1, v7);
  v10 = a1
      + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromChar;
  swift_beginAccess();
  sub_1BDD86DEC(v10, (uint64_t)v5, &qword_1ED6F3850);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F3850);
  swift_endAccess();
  v11 = a1
      + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__toChar;
  swift_beginAccess();
  sub_1BDD86DEC(v11, (uint64_t)v5, &qword_1ED6F3850);
  swift_release();
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v9, &qword_1ED6F3850);
  swift_endAccess();
  return v1;
}

uint64_t sub_1BE1417C4()
{
  return sub_1BE1417E0(&OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromChar, &qword_1ED6F3850, &OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__toChar);
}

uint64_t sub_1BE1417E0(_QWORD *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;

  sub_1BDD86E30(v3 + *a1, a2);
  sub_1BDD86E30(v3 + *a3, a2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BE141834()
{
  return type metadata accessor for Proto_Selection.Range._StorageClass(0);
}

uint64_t type metadata accessor for Proto_Selection.Range._StorageClass(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530798);
}

void sub_1BE141850()
{
  unint64_t v0;

  sub_1BDD92F18(319, &qword_1ED6F2EB0, (void (*)(uint64_t))type metadata accessor for Proto_Timestamp);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for Proto_Subsequence.ContentOptions()
{
  return &type metadata for Proto_Subsequence.ContentOptions;
}

uint64_t sub_1BE1418DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1418EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Proto_Sequence.AttributeRun.Attribute(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B3D0);
}

uint64_t sub_1BE141910()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141920()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Proto_Sequence.AttributeRun(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B420);
}

ValueMetadata *type metadata accessor for Proto_Reference.TypeEnum()
{
  return &type metadata for Proto_Reference.TypeEnum;
}

uint64_t *sub_1BE141954(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_1BE1B20F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = type metadata accessor for Proto_Reference(0);
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
      swift_retain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v7 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = type metadata accessor for Proto_Value(0);
      }
      else
      {
        v12 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v8 = type metadata accessor for Proto_CRDT(0);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BE141AA4(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1BDD9C3E0(a1, type metadata accessor for Proto_Document.OneOf_Root);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v6 = type metadata accessor for Proto_Reference(0);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = type metadata accessor for Proto_Value(0);
    }
    else
    {
      v8 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v6 = type metadata accessor for Proto_CRDT(0);
    }
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BE141BAC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_1BE1B20F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v6 = type metadata accessor for Proto_Reference(0);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1BE1B20F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = type metadata accessor for Proto_Value(0);
  }
  else
  {
    v8 = sub_1BE1B20F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v6 = type metadata accessor for Proto_CRDT(0);
  }
  *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BE141C98(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1BDD9C3E0(a1, type metadata accessor for Proto_Document.OneOf_Root);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v6 = type metadata accessor for Proto_Reference(0);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = type metadata accessor for Proto_Value(0);
    }
    else
    {
      v8 = sub_1BE1B20F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v6 = type metadata accessor for Proto_CRDT(0);
    }
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BE141D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BE1B20F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BE141E18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BE1B20F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BE141E8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141E9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141EAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141EBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141ECC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141EDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Proto_CustomCRDT.Sibling(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF52B480);
}

uint64_t sub_1BE141F00()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141F10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141F20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141F30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141F40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE141F50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_1BE141F60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    v8 = a2[2];
    sub_1BDDB6CA4(v7, v8);
    v4[1] = v7;
    v4[2] = v8;
    v9 = a2[3];
    v10 = a2[4];
    sub_1BDDB6CA4(v9, v10);
    v4[3] = v9;
    v4[4] = v10;
    v11 = *(int *)(a3 + 28);
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1BE1B20F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return v4;
}

uint64_t sub_1BE142020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1BDDB796C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  sub_1BDDB796C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1BE1B20F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1BE142074(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  v7 = a2[2];
  sub_1BDDB6CA4(v6, v7);
  a1[1] = v6;
  a1[2] = v7;
  v8 = a2[3];
  v9 = a2[4];
  sub_1BDDB6CA4(v8, v9);
  a1[3] = v8;
  a1[4] = v9;
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

_QWORD *sub_1BE142108(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  sub_1BDDB6CA4(v6, v7);
  v8 = a1[1];
  v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_1BDDB796C(v8, v9);
  v10 = a2[3];
  v11 = a2[4];
  sub_1BDDB6CA4(v10, v11);
  v12 = a1[3];
  v13 = a1[4];
  a1[3] = v10;
  a1[4] = v11;
  sub_1BDDB796C(v12, v13);
  v14 = *(int *)(a3 + 28);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_1BE1421AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1BE142218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  sub_1BDDB796C(v7, v8);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1BDDB796C(v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1BE1422A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1422AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 16) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_1BE1B20F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1BE142334()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE142340(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_1BE1B20F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BE1423D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1423E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1423F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE142404()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_1BE14241C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    v9 = a2[2];
    swift_bridgeObjectRetain();
    sub_1BDDB6CA4(v8, v9);
    a1[1] = v8;
    a1[2] = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1BE1B20F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

_QWORD *sub_1BE1424C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[1];
  v7 = a2[2];
  sub_1BDDB6CA4(v6, v7);
  v8 = a1[1];
  v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_1BDDB796C(v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1BE14255C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1BE1425C0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = a1[1];
  v7 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1BDDB796C(v6, v7);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BE1B20F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1BE142644()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE142654()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Proto_Subsequence(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1ED6EF6C8);
}

uint64_t *sub_1BE142678(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    a1[1] = a2[1];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BE1B20F0();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

_QWORD *sub_1BE142728(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_1BE1427B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t __swift_get_extra_inhabitant_index_19Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BE1B20F0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

char *__swift_store_extra_inhabitant_index_20Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BE1B20F0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t *sub_1BE142930(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        v8 = *a2;
        v7 = a2[1];
        sub_1BDDB6CA4(v8, v7);
        *a1 = v8;
        a1[1] = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        v12 = *(int *)(type metadata accessor for Proto_Version(0) + 24);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_1BE1B20F0();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v17 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v18 = type metadata accessor for Proto_Reference(0);
        *(uint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v19 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v20 = type metadata accessor for Proto_Optional(0);
        *(uint64_t *)((char *)a1 + *(int *)(v20 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v21 = *(int *)(type metadata accessor for Proto_Timestamp(0) + 24);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        *a1 = *a2;
        v25 = *(int *)(type metadata accessor for Proto_RepeatedValue(0) + 20);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = sub_1BE1B20F0();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v26, v27, v28);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v30 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, a2, v30);
        v31 = type metadata accessor for Proto_TaggedValue(0);
        *(uint64_t *)((char *)a1 + *(int *)(v31 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v31 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        v32 = a2[1];
        *a1 = *a2;
        v33 = a2[2];
        sub_1BDDB6CA4(v32, v33);
        a1[1] = v32;
        a1[2] = v33;
        v34 = a2[3];
        v35 = a2[4];
        sub_1BDDB6CA4(v34, v35);
        a1[3] = v34;
        a1[4] = v35;
        v36 = *(int *)(type metadata accessor for Proto_Asset(0) + 28);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v40 = a2[1];
        *a1 = *a2;
        a1[1] = v40;
        v41 = *(int *)(type metadata accessor for Proto_CustomCRValue(0) + 24);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = sub_1BE1B20F0();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45(v42, v43, v44);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t *sub_1BE142CD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BDD9C3E0((uint64_t)a1, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        v7 = *a2;
        v6 = a2[1];
        sub_1BDDB6CA4(v7, v6);
        *a1 = v7;
        a1[1] = v6;
        goto LABEL_13;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        v8 = *(int *)(type metadata accessor for Proto_Version(0) + 24);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1BE1B20F0();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        goto LABEL_13;
      case 7u:
        v13 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = type metadata accessor for Proto_Reference(0);
        *(uint64_t *)((char *)a1 + *(int *)(v14 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 20));
        swift_retain();
        goto LABEL_13;
      case 8u:
        v15 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = type metadata accessor for Proto_Optional(0);
        *(uint64_t *)((char *)a1 + *(int *)(v16 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v16 + 20));
        swift_retain();
        goto LABEL_13;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        v17 = *(int *)(type metadata accessor for Proto_Timestamp(0) + 24);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        goto LABEL_13;
      case 0xAu:
        *a1 = *a2;
        v21 = *(int *)(type metadata accessor for Proto_RepeatedValue(0) + 20);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_1BE1B20F0();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        goto LABEL_13;
      case 0xBu:
        v26 = sub_1BE1B20F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        v27 = type metadata accessor for Proto_TaggedValue(0);
        *(uint64_t *)((char *)a1 + *(int *)(v27 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v27 + 20));
        swift_retain();
        goto LABEL_13;
      case 0xCu:
        *a1 = *a2;
        v28 = a2[1];
        v29 = a2[2];
        sub_1BDDB6CA4(v28, v29);
        a1[1] = v28;
        a1[2] = v29;
        v30 = a2[3];
        v31 = a2[4];
        sub_1BDDB6CA4(v30, v31);
        a1[3] = v30;
        a1[4] = v31;
        v32 = *(int *)(type metadata accessor for Proto_Asset(0) + 28);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_13;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        v36 = *(int *)(type metadata accessor for Proto_CustomCRValue(0) + 24);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_1BE1B20F0();
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v37, v38, v39);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1BE143060(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 6u:
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for Proto_Version(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      goto LABEL_11;
    case 7u:
      v10 = sub_1BE1B20F0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = type metadata accessor for Proto_Reference(0);
      *(_QWORD *)((char *)a1 + *(int *)(v11 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 20));
      goto LABEL_11;
    case 8u:
      v12 = sub_1BE1B20F0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = type metadata accessor for Proto_Optional(0);
      *(_QWORD *)((char *)a1 + *(int *)(v13 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 20));
      goto LABEL_11;
    case 9u:
      *a1 = *a2;
      v14 = *(int *)(type metadata accessor for Proto_Timestamp(0) + 24);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_11;
    case 0xAu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v18 = *(int *)(type metadata accessor for Proto_RepeatedValue(0) + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_11;
    case 0xBu:
      v22 = sub_1BE1B20F0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      v23 = type metadata accessor for Proto_TaggedValue(0);
      *(_QWORD *)((char *)a1 + *(int *)(v23 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v23 + 20));
      goto LABEL_11;
    case 0xCu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      v24 = *(int *)(type metadata accessor for Proto_Asset(0) + 28);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      goto LABEL_11;
    case 0xDu:
      *a1 = *a2;
      v28 = *(int *)(type metadata accessor for Proto_CustomCRValue(0) + 24);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_1BE1B20F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1BE143330(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_1BDD9C3E0((uint64_t)a1, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 6u:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for Proto_Version(0) + 24);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_12;
      case 7u:
        v10 = sub_1BE1B20F0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = type metadata accessor for Proto_Reference(0);
        *(_QWORD *)((char *)a1 + *(int *)(v11 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 20));
        goto LABEL_12;
      case 8u:
        v12 = sub_1BE1B20F0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v13 = type metadata accessor for Proto_Optional(0);
        *(_QWORD *)((char *)a1 + *(int *)(v13 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 20));
        goto LABEL_12;
      case 9u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for Proto_Timestamp(0) + 24);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_12;
      case 0xAu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v18 = *(int *)(type metadata accessor for Proto_RepeatedValue(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_12;
      case 0xBu:
        v22 = sub_1BE1B20F0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        v23 = type metadata accessor for Proto_TaggedValue(0);
        *(_QWORD *)((char *)a1 + *(int *)(v23 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v23 + 20));
        goto LABEL_12;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        v24 = *(int *)(type metadata accessor for Proto_Asset(0) + 28);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        goto LABEL_12;
      case 0xDu:
        *a1 = *a2;
        v28 = *(int *)(type metadata accessor for Proto_CustomCRValue(0) + 24);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_1BE1B20F0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BE143618()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE143628()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE143640(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BE14369C + 4 * byte_1BE1C3A36[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1BE1439E4(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BDD9C3E0(result, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    v2 = (char *)&loc_1BE143A4C + 4 * byte_1BE1C3A54[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1BE143D7C()
{
  char *v0;

  v0 = (char *)sub_1BE143DC0 + 4 * byte_1BE1C3A5E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE143DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = type metadata accessor for Proto_Register(0);
  *(_QWORD *)(v0 + *(int *)(v3 + 20)) = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1BE144094()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1440A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE1440B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_1BE1B20F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1BE1440F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = sub_1BE1B20F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t *sub_1BE144140(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BE1B20F0();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

_QWORD *sub_1BE1441F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BE1B20F0();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_1BE144288(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1BE14432C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1BE1B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1BE144390(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BE1B20F0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1BE144424()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE144434()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t sub_1BE144448()
{
  unint64_t result;

  result = qword_1EF5307A8;
  if (!qword_1EF5307A8)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3DCC, &type metadata for Proto_Reference.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1EF5307A8);
  }
  return result;
}

unint64_t sub_1BE144490()
{
  unint64_t result;

  result = qword_1EF5307B0;
  if (!qword_1EF5307B0)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3DF4, &type metadata for Proto_Reference.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1EF5307B0);
  }
  return result;
}

unint64_t sub_1BE1444D8()
{
  unint64_t result;

  result = qword_1EF5307B8;
  if (!qword_1EF5307B8)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3E34, &type metadata for Proto_Reference.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1EF5307B8);
  }
  return result;
}

unint64_t sub_1BE144520()
{
  unint64_t result;

  result = qword_1EF5307C0;
  if (!qword_1EF5307C0)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3EB4, &type metadata for Proto_Subsequence.ContentOptions);
    atomic_store(result, (unint64_t *)&qword_1EF5307C0);
  }
  return result;
}

unint64_t sub_1BE144568()
{
  unint64_t result;

  result = qword_1EF5307C8;
  if (!qword_1EF5307C8)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3EDC, &type metadata for Proto_Subsequence.ContentOptions);
    atomic_store(result, (unint64_t *)&qword_1EF5307C8);
  }
  return result;
}

unint64_t sub_1BE1445B0()
{
  unint64_t result;

  result = qword_1EF5307D0;
  if (!qword_1EF5307D0)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3F1C, &type metadata for Proto_Subsequence.ContentOptions);
    atomic_store(result, (unint64_t *)&qword_1EF5307D0);
  }
  return result;
}

uint64_t sub_1BE1445F4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1BE1B2144();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto_Timestamp(0);
        sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
        sub_1BE1B2258();
        swift_endAccess();
      }
      result = sub_1BE1B2144();
    }
  }
  return result;
}

uint64_t sub_1BE144754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v28 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v26 - v11;
  v13 = type metadata accessor for Proto_Timestamp(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v26[0] = (uint64_t)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v26 - v17;
  v27 = a1;
  v19 = a1
      + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromChar;
  swift_beginAccess();
  sub_1BDD86DEC(v19, (uint64_t)v12, &qword_1ED6F3850);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v21 = v20(v12, 1, v13);
  v26[1] = a2;
  if (v21 == 1)
  {
    sub_1BDD86E30((uint64_t)v12, &qword_1ED6F3850);
  }
  else
  {
    sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_Timestamp);
    sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
    sub_1BE1B2360();
    result = sub_1BDD9C3E0((uint64_t)v18, type metadata accessor for Proto_Timestamp);
    if (v4)
      return result;
  }
  v23 = v27
      + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__toChar;
  swift_beginAccess();
  sub_1BDD86DEC(v23, (uint64_t)v10, &qword_1ED6F3850);
  if (v20(v10, 1, v13) == 1)
    return sub_1BDD86E30((uint64_t)v10, &qword_1ED6F3850);
  v24 = (uint64_t)v10;
  v25 = v26[0];
  sub_1BDDA2E8C(v24, v26[0], type metadata accessor for Proto_Timestamp);
  sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
  sub_1BE1B2360();
  return sub_1BDD9C3E0(v25, type metadata accessor for Proto_Timestamp);
}

BOOL sub_1BE144A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  _QWORD v44[2];
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v4 = type metadata accessor for Proto_Timestamp(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v45 = (_QWORD *)((char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v47 = (_QWORD *)((char *)v44 - v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A38);
  v10 = MEMORY[0x1E0C80A78](v9);
  v50 = (uint64_t)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v44 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  v15 = MEMORY[0x1E0C80A78](v14);
  v46 = (_QWORD *)((char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x1E0C80A78](v15);
  v49 = (uint64_t)v44 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v51 = (_QWORD *)((char *)v44 - v20);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v44 - v21;
  v23 = a1
      + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromChar;
  swift_beginAccess();
  sub_1BDD86DEC(v23, (uint64_t)v22, &qword_1ED6F3850);
  v24 = a2
      + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__fromChar;
  swift_beginAccess();
  v48 = v9;
  v25 = (uint64_t)&v13[*(int *)(v9 + 48)];
  sub_1BDD86DEC((uint64_t)v22, (uint64_t)v13, &qword_1ED6F3850);
  sub_1BDD86DEC(v24, v25, &qword_1ED6F3850);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v13, 1, v4) != 1)
  {
    v34 = v51;
    sub_1BDD86DEC((uint64_t)v13, (uint64_t)v51, &qword_1ED6F3850);
    if (v26(v25, 1, v4) != 1)
    {
      v37 = v47;
      sub_1BDDA2E8C(v25, (uint64_t)v47, type metadata accessor for Proto_Timestamp);
      if (*v34 == *v37 && v34[1] == v37[1])
      {
        v27 = v4;
        v44[1] = (char *)v34 + *(int *)(v4 + 24);
        sub_1BE1B20F0();
        sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        swift_retain();
        swift_retain();
        v38 = sub_1BE1B2798();
        sub_1BDD9C3E0((uint64_t)v37, type metadata accessor for Proto_Timestamp);
        sub_1BDD86E30((uint64_t)v22, &qword_1ED6F3850);
        sub_1BDD9C3E0((uint64_t)v51, type metadata accessor for Proto_Timestamp);
        sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3850);
        if ((v38 & 1) != 0)
          goto LABEL_4;
LABEL_17:
        swift_release();
        swift_release();
        return 0;
      }
      swift_retain();
      swift_retain();
      sub_1BDD9C3E0((uint64_t)v37, type metadata accessor for Proto_Timestamp);
      sub_1BDD86E30((uint64_t)v22, &qword_1ED6F3850);
      sub_1BDD9C3E0((uint64_t)v34, type metadata accessor for Proto_Timestamp);
      v36 = (uint64_t)v13;
      v35 = &qword_1ED6F3850;
LABEL_16:
      sub_1BDD86E30(v36, v35);
      goto LABEL_17;
    }
    swift_retain();
    swift_retain();
    sub_1BDD86E30((uint64_t)v22, &qword_1ED6F3850);
    sub_1BDD9C3E0((uint64_t)v34, type metadata accessor for Proto_Timestamp);
LABEL_10:
    v35 = &qword_1EF530A38;
    v36 = (uint64_t)v13;
    goto LABEL_16;
  }
  swift_retain();
  swift_retain();
  sub_1BDD86E30((uint64_t)v22, &qword_1ED6F3850);
  if (v26(v25, 1, v4) != 1)
    goto LABEL_10;
  v27 = v4;
  sub_1BDD86E30((uint64_t)v13, &qword_1ED6F3850);
LABEL_4:
  v28 = a1
      + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__toChar;
  swift_beginAccess();
  v29 = v49;
  sub_1BDD86DEC(v28, v49, &qword_1ED6F3850);
  v30 = a2
      + OBJC_IVAR____TtCVV9Coherence15Proto_Selection5RangeP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__toChar;
  swift_beginAccess();
  v31 = v50;
  v32 = v50 + *(int *)(v48 + 48);
  sub_1BDD86DEC(v29, v50, &qword_1ED6F3850);
  sub_1BDD86DEC(v30, v32, &qword_1ED6F3850);
  if (v26(v31, 1, v27) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v29, &qword_1ED6F3850);
    if (v26(v32, 1, v27) == 1)
    {
      sub_1BDD86E30(v31, &qword_1ED6F3850);
      return 1;
    }
    goto LABEL_20;
  }
  v39 = v46;
  sub_1BDD86DEC(v31, (uint64_t)v46, &qword_1ED6F3850);
  if (v26(v32, 1, v27) == 1)
  {
    swift_release();
    swift_release();
    sub_1BDD86E30(v29, &qword_1ED6F3850);
    sub_1BDD9C3E0((uint64_t)v39, type metadata accessor for Proto_Timestamp);
LABEL_20:
    v40 = &qword_1EF530A38;
    v41 = v31;
LABEL_26:
    sub_1BDD86E30(v41, v40);
    return 0;
  }
  v42 = v45;
  sub_1BDDA2E8C(v32, (uint64_t)v45, type metadata accessor for Proto_Timestamp);
  if (*v39 != *v42 || v39[1] != v42[1])
  {
    swift_release();
    swift_release();
    sub_1BDD9C3E0((uint64_t)v42, type metadata accessor for Proto_Timestamp);
    sub_1BDD86E30(v29, &qword_1ED6F3850);
    sub_1BDD9C3E0((uint64_t)v39, type metadata accessor for Proto_Timestamp);
    v41 = v31;
    v40 = &qword_1ED6F3850;
    goto LABEL_26;
  }
  sub_1BE1B20F0();
  sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v43 = sub_1BE1B2798();
  swift_release();
  swift_release();
  sub_1BDD9C3E0((uint64_t)v42, type metadata accessor for Proto_Timestamp);
  sub_1BDD86E30(v29, &qword_1ED6F3850);
  sub_1BDD9C3E0((uint64_t)v39, type metadata accessor for Proto_Timestamp);
  sub_1BDD86E30(v31, &qword_1ED6F3850);
  return (v43 & 1) != 0;
}

uint64_t sub_1BE1450D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD85DD0(a1, &qword_1EF52C0E0, &qword_1EF530760, a2);
}

uint64_t sub_1BE1450F4(uint64_t a1, uint64_t a2)
{
  return sub_1BDE429D4(a1, a2, &qword_1EF52C0D0, &qword_1EF5497A0);
}

uint64_t sub_1BE145114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDD9F8B0(a1, a2, a3, type metadata accessor for Proto_Selection.Range, (void (*)(_QWORD))type metadata accessor for Proto_Selection.Range._StorageClass, sub_1BE141634, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE1445F4);
}

uint64_t sub_1BE145148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDDA65F8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Selection.Range, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BE144754);
}

uint64_t sub_1BE14516C()
{
  sub_1BDD8422C(&qword_1EF530B50, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C4054);
  return sub_1BE1B212C();
}

uint64_t sub_1BE1451BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDE39114(&qword_1EF52C0D8, (uint64_t)qword_1EF5497B0, a1);
}

uint64_t sub_1BE1451D8()
{
  sub_1BDD8422C(&qword_1EF5307E0, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C408C);
  return sub_1BE1B2288();
}

uint64_t sub_1BE145218()
{
  sub_1BDD8422C(&qword_1EF5307E0, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C408C);
  return sub_1BE1B2294();
}

uint64_t sub_1BE145268(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Selection.Range, (uint64_t (*)(uint64_t, uint64_t))sub_1BE144A0C) & 1;
}

uint64_t sub_1BE145290()
{
  return sub_1BDD8422C(&qword_1EF5307D8, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C3F9C);
}

uint64_t type metadata accessor for Proto_Selection.Range(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530B68);
}

uint64_t sub_1BE1452D0()
{
  return sub_1BDD8422C(&qword_1EF5307E0, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C408C);
}

uint64_t sub_1BE1452FC()
{
  return sub_1BDD8422C(&qword_1EF5307E8, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C3FC4);
}

uint64_t sub_1BE145328()
{
  return sub_1BDD8422C(&qword_1EF5307F0, type metadata accessor for Proto_Selection.Range, (uint64_t)&unk_1BE1C4004);
}

uint64_t sub_1BE145354()
{
  return sub_1BDD8422C(&qword_1EF5307F8, type metadata accessor for Proto_Selection, (uint64_t)&unk_1BE1C412C);
}

uint64_t type metadata accessor for Proto_Selection(uint64_t a1)
{
  return sub_1BDD88618(a1, (uint64_t *)&unk_1EF530B58);
}

uint64_t sub_1BE145394()
{
  return sub_1BDD8422C(&qword_1EF530800, type metadata accessor for Proto_Selection, (uint64_t)&unk_1BE1C421C);
}

uint64_t sub_1BE1453C0()
{
  return sub_1BDD8422C(&qword_1EF530808, type metadata accessor for Proto_Selection, (uint64_t)&unk_1BE1C4154);
}

uint64_t sub_1BE1453EC()
{
  return sub_1BDD8422C(&qword_1EF530810, type metadata accessor for Proto_Selection, (uint64_t)&unk_1BE1C4194);
}

uint64_t sub_1BE145418()
{
  return sub_1BDD8422C(&qword_1EF530818, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C42BC);
}

uint64_t sub_1BE145444()
{
  return sub_1BDD8422C(&qword_1ED6EF6B8, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C43AC);
}

uint64_t sub_1BE145470()
{
  return sub_1BDD8422C(&qword_1EF530820, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C42E4);
}

uint64_t sub_1BE14549C()
{
  return sub_1BDD8422C(&qword_1ED6EF6C0, type metadata accessor for Proto_Subsequence, (uint64_t)&unk_1BE1C4324);
}

uint64_t sub_1BE1454C8()
{
  return sub_1BDD8422C(&qword_1EF530828, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C4424);
}

uint64_t sub_1BE1454F4()
{
  return sub_1BDD8422C(&qword_1EF52B3C0, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C4514);
}

uint64_t sub_1BE145520()
{
  return sub_1BDD8422C(&qword_1EF530830, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C444C);
}

uint64_t sub_1BE14554C()
{
  return sub_1BDD8422C(&qword_1EF52B3C8, type metadata accessor for Proto_Sequence.AttributeRun.Attribute, (uint64_t)&unk_1BE1C448C);
}

uint64_t sub_1BE145578()
{
  return sub_1BDD8422C(&qword_1EF530838, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C458C);
}

uint64_t sub_1BE1455A4()
{
  return sub_1BDD8422C(&qword_1EF52B410, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C467C);
}

uint64_t sub_1BE1455D0()
{
  return sub_1BDD8422C(&qword_1EF530840, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C45B4);
}

uint64_t sub_1BE1455FC()
{
  return sub_1BDD8422C(&qword_1EF52B418, type metadata accessor for Proto_Sequence.AttributeRun, (uint64_t)&unk_1BE1C45F4);
}

uint64_t sub_1BE145628()
{
  return sub_1BDD8422C(&qword_1EF530848, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C46F4);
}

uint64_t sub_1BE145654()
{
  return sub_1BDD8422C(&qword_1ED6EF5E8, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C47E4);
}

uint64_t sub_1BE145680()
{
  return sub_1BDD8422C(&qword_1EF530850, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C471C);
}

uint64_t sub_1BE1456AC()
{
  return sub_1BDD8422C(&qword_1ED6EF5F0, type metadata accessor for Proto_Sequence, (uint64_t)&unk_1BE1C475C);
}

uint64_t sub_1BE1456D8()
{
  return sub_1BDD8422C(&qword_1EF530858, type metadata accessor for Proto_OrderedSet, (uint64_t)&unk_1BE1C485C);
}

uint64_t sub_1BE145704()
{
  return sub_1BDD8422C(&qword_1ED6EF648, type metadata accessor for Proto_OrderedSet, (uint64_t)&unk_1BE1C494C);
}

uint64_t sub_1BE145730()
{
  return sub_1BDD8422C(&qword_1EF530860, type metadata accessor for Proto_OrderedSet, (uint64_t)&unk_1BE1C4884);
}

uint64_t sub_1BE14575C()
{
  return sub_1BDD8422C(&qword_1ED6EF650, type metadata accessor for Proto_OrderedSet, (uint64_t)&unk_1BE1C48C4);
}

uint64_t sub_1BE145788()
{
  return sub_1BDD8422C(&qword_1EF530868, type metadata accessor for Proto_RepeatedValue, (uint64_t)&unk_1BE1C49C4);
}

uint64_t sub_1BE1457B4()
{
  return sub_1BDD8422C(&qword_1EF52B560, type metadata accessor for Proto_RepeatedValue, (uint64_t)&unk_1BE1C4AB4);
}

uint64_t sub_1BE1457E0()
{
  return sub_1BDD8422C(&qword_1EF530870, type metadata accessor for Proto_RepeatedValue, (uint64_t)&unk_1BE1C49EC);
}

uint64_t sub_1BE14580C()
{
  return sub_1BDD8422C((unint64_t *)&unk_1EF52B568, type metadata accessor for Proto_RepeatedValue, (uint64_t)&unk_1BE1C4A2C);
}

uint64_t sub_1BE145838()
{
  return sub_1BDD8422C(&qword_1EF530878, type metadata accessor for Proto_CustomCRDT.Sibling, (uint64_t)&unk_1BE1C4B2C);
}

uint64_t sub_1BE145864()
{
  return sub_1BDD8422C(&qword_1EF52B470, type metadata accessor for Proto_CustomCRDT.Sibling, (uint64_t)&unk_1BE1C4C1C);
}

uint64_t sub_1BE145890()
{
  return sub_1BDD8422C(&qword_1EF530880, type metadata accessor for Proto_CustomCRDT.Sibling, (uint64_t)&unk_1BE1C4B54);
}

uint64_t sub_1BE1458BC()
{
  return sub_1BDD8422C(&qword_1EF52B478, type metadata accessor for Proto_CustomCRDT.Sibling, (uint64_t)&unk_1BE1C4B94);
}

uint64_t sub_1BE1458E8()
{
  return sub_1BDD8422C(&qword_1EF530888, type metadata accessor for Proto_CustomCRDT, (uint64_t)&unk_1BE1C4C94);
}

uint64_t sub_1BE145914()
{
  return sub_1BDD8422C(qword_1EF52B490, type metadata accessor for Proto_CustomCRDT, (uint64_t)&unk_1BE1C4D84);
}

uint64_t sub_1BE145940()
{
  return sub_1BDD8422C(&qword_1EF530890, type metadata accessor for Proto_CustomCRDT, (uint64_t)&unk_1BE1C4CBC);
}

uint64_t sub_1BE14596C()
{
  return sub_1BDD8422C(&qword_1EF5256F8, type metadata accessor for Proto_CustomCRDT, (uint64_t)&unk_1BE1C4CFC);
}

uint64_t sub_1BE145998()
{
  return sub_1BDD8422C(&qword_1EF530898, type metadata accessor for Proto_CustomCRValue, (uint64_t)&unk_1BE1C4DFC);
}

uint64_t sub_1BE1459C4()
{
  return sub_1BDD8422C(&qword_1ED6F2778, type metadata accessor for Proto_CustomCRValue, (uint64_t)&unk_1BE1C4EEC);
}

uint64_t sub_1BE1459F0()
{
  return sub_1BDD8422C(&qword_1EF5308A0, type metadata accessor for Proto_CustomCRValue, (uint64_t)&unk_1BE1C4E24);
}

uint64_t sub_1BE145A1C()
{
  return sub_1BDD8422C(&qword_1EF5308A8, type metadata accessor for Proto_TaggedValue, (uint64_t)&unk_1BE1C4F64);
}

uint64_t sub_1BE145A48()
{
  return sub_1BDD8422C(&qword_1EF52B540, type metadata accessor for Proto_TaggedValue, (uint64_t)&unk_1BE1C5054);
}

uint64_t sub_1BE145A74()
{
  return sub_1BDD8422C(&qword_1EF5308B0, type metadata accessor for Proto_TaggedValue, (uint64_t)&unk_1BE1C4F8C);
}

uint64_t sub_1BE145AA0()
{
  return sub_1BDD8422C(&qword_1EF52B548, type metadata accessor for Proto_TaggedValue, (uint64_t)&unk_1BE1C4FCC);
}

uint64_t sub_1BE145ACC()
{
  return sub_1BDD8422C(&qword_1EF5308B8, type metadata accessor for Proto_Optional, (uint64_t)&unk_1BE1C50CC);
}

uint64_t sub_1BE145AF8()
{
  return sub_1BDD8422C(&qword_1ED6EEA60, type metadata accessor for Proto_Optional, (uint64_t)&unk_1BE1C51BC);
}

uint64_t sub_1BE145B24()
{
  return sub_1BDD8422C(&qword_1EF5308C0, type metadata accessor for Proto_Optional, (uint64_t)&unk_1BE1C50F4);
}

uint64_t sub_1BE145B50()
{
  return sub_1BDD8422C(qword_1ED6EEA68, type metadata accessor for Proto_Optional, (uint64_t)&unk_1BE1C5134);
}

uint64_t sub_1BE145B7C()
{
  return sub_1BDD8422C(&qword_1EF5308C8, type metadata accessor for Proto_Reference, (uint64_t)&unk_1BE1C525C);
}

uint64_t sub_1BE145BA8()
{
  return sub_1BDD8422C(&qword_1ED6EFDA8, type metadata accessor for Proto_Reference, (uint64_t)&unk_1BE1C534C);
}

uint64_t sub_1BE145BD4()
{
  return sub_1BDD8422C(&qword_1EF5308D0, type metadata accessor for Proto_Reference, (uint64_t)&unk_1BE1C5284);
}

uint64_t sub_1BE145C00()
{
  return sub_1BDD8422C(&qword_1EF5308D8, type metadata accessor for Proto_Struct, (uint64_t)&unk_1BE1C53C4);
}

uint64_t sub_1BE145C2C()
{
  return sub_1BDD8422C(&qword_1ED6F2860, type metadata accessor for Proto_Struct, (uint64_t)&unk_1BE1C54B4);
}

uint64_t sub_1BE145C58()
{
  return sub_1BDD8422C(&qword_1EF5308E0, type metadata accessor for Proto_Struct, (uint64_t)&unk_1BE1C53EC);
}

uint64_t sub_1BE145C84()
{
  return sub_1BDD8422C(&qword_1EF5308E8, type metadata accessor for Proto_Set.Element, (uint64_t)&unk_1BE1C552C);
}

uint64_t sub_1BE145CB0()
{
  return sub_1BDD8422C(&qword_1ED6EF720, type metadata accessor for Proto_Set.Element, (uint64_t)&unk_1BE1C561C);
}

uint64_t sub_1BE145CDC()
{
  return sub_1BDD8422C(&qword_1EF5308F0, type metadata accessor for Proto_Set.Element, (uint64_t)&unk_1BE1C5554);
}

uint64_t sub_1BE145D08()
{
  return sub_1BDD8422C(&qword_1ED6EF728, type metadata accessor for Proto_Set.Element, (uint64_t)&unk_1BE1C5594);
}

uint64_t sub_1BE145D34()
{
  return sub_1BDD8422C(&qword_1EF5308F8, type metadata accessor for Proto_Set, (uint64_t)&unk_1BE1C5694);
}

uint64_t sub_1BE145D60()
{
  return sub_1BDD8422C(&qword_1ED6F2840, type metadata accessor for Proto_Set, (uint64_t)&unk_1BE1C5784);
}

uint64_t sub_1BE145D8C()
{
  return sub_1BDD8422C(&qword_1EF530900, type metadata accessor for Proto_Set, (uint64_t)&unk_1BE1C56BC);
}

uint64_t sub_1BE145DB8()
{
  return sub_1BDD8422C(&qword_1EF530908, type metadata accessor for Proto_Counter, (uint64_t)&unk_1BE1C57FC);
}

uint64_t sub_1BE145DE4()
{
  return sub_1BDD8422C(&qword_1EF530910, type metadata accessor for Proto_Counter, (uint64_t)&unk_1BE1C58EC);
}

uint64_t sub_1BE145E10()
{
  return sub_1BDD8422C(&qword_1EF530918, type metadata accessor for Proto_Counter, (uint64_t)&unk_1BE1C5824);
}

uint64_t sub_1BE145E3C()
{
  return sub_1BDD8422C(&qword_1EF530920, type metadata accessor for Proto_Counter, (uint64_t)&unk_1BE1C5864);
}

uint64_t sub_1BE145E68()
{
  return sub_1BDD8422C(&qword_1EF530928, type metadata accessor for Proto_Register, (uint64_t)&unk_1BE1C5964);
}

uint64_t sub_1BE145E94()
{
  return sub_1BDD8422C(&qword_1ED6EF7B0, type metadata accessor for Proto_Register, (uint64_t)&unk_1BE1C5A54);
}

uint64_t sub_1BE145EC0()
{
  return sub_1BDD8422C(&qword_1EF530930, type metadata accessor for Proto_Register, (uint64_t)&unk_1BE1C598C);
}

uint64_t sub_1BE145EEC()
{
  return sub_1BDD8422C(qword_1ED6EF7B8, type metadata accessor for Proto_Register, (uint64_t)&unk_1BE1C59CC);
}

uint64_t sub_1BE145F18()
{
  return sub_1BDD8422C(&qword_1EF530938, type metadata accessor for Proto_Asset, (uint64_t)&unk_1BE1C5ACC);
}

uint64_t sub_1BE145F44()
{
  return sub_1BDD8422C(&qword_1EF52B378, type metadata accessor for Proto_Asset, (uint64_t)&unk_1BE1C5BBC);
}

uint64_t sub_1BE145F70()
{
  return sub_1BDD8422C(&qword_1EF530940, type metadata accessor for Proto_Asset, (uint64_t)&unk_1BE1C5AF4);
}

uint64_t sub_1BE145F9C()
{
  return sub_1BDD8422C((unint64_t *)&unk_1EF52B380, type metadata accessor for Proto_Asset, (uint64_t)&unk_1BE1C5B34);
}

uint64_t sub_1BE145FC8()
{
  return sub_1BDD8422C(&qword_1EF530948, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5C34);
}

uint64_t sub_1BE145FF4()
{
  return sub_1BDD8422C(&qword_1ED6F27B8, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5D24);
}

uint64_t sub_1BE146020()
{
  return sub_1BDD8422C(&qword_1EF530950, type metadata accessor for Proto_Version, (uint64_t)&unk_1BE1C5C5C);
}

uint64_t sub_1BE14604C()
{
  return sub_1BDD8422C(&qword_1EF530958, type metadata accessor for Proto_RLE, (uint64_t)&unk_1BE1C5D9C);
}

uint64_t sub_1BE146078()
{
  return sub_1BDD8422C(&qword_1ED6F27C8, type metadata accessor for Proto_RLE, (uint64_t)&unk_1BE1C5E8C);
}

uint64_t sub_1BE1460A4()
{
  return sub_1BDD8422C(&qword_1EF530960, type metadata accessor for Proto_RLE, (uint64_t)&unk_1BE1C5DC4);
}

uint64_t sub_1BE1460D0()
{
  return sub_1BDD8422C(&qword_1EF530968, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5F04);
}

uint64_t sub_1BE1460FC()
{
  return sub_1BDD8422C(&qword_1ED6F2EA0, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5FF4);
}

uint64_t sub_1BE146128()
{
  return sub_1BDD8422C(&qword_1EF530970, type metadata accessor for Proto_Timestamp, (uint64_t)&unk_1BE1C5F2C);
}

uint64_t sub_1BE146154()
{
  return sub_1BDD8422C(&qword_1EF530978, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C606C);
}

uint64_t sub_1BE146180()
{
  return sub_1BDD8422C(&qword_1ED6EFCD0, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C615C);
}

uint64_t sub_1BE1461AC()
{
  return sub_1BDD8422C(&qword_1EF530980, type metadata accessor for Proto_KeyPath, (uint64_t)&unk_1BE1C6094);
}

uint64_t sub_1BE1461D8()
{
  return sub_1BDD8422C(&qword_1EF530988, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C61D4);
}

uint64_t sub_1BE146204()
{
  return sub_1BDD8422C(&qword_1ED6F3830, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C62C4);
}

uint64_t sub_1BE146230()
{
  return sub_1BDD8422C(&qword_1EF530990, type metadata accessor for Proto_Constants, (uint64_t)&unk_1BE1C61FC);
}

uint64_t sub_1BE14625C()
{
  return sub_1BDD8422C(&qword_1EF530998, type metadata accessor for Proto_RetainCounts, (uint64_t)&unk_1BE1C633C);
}

uint64_t type metadata accessor for Proto_RetainCounts(uint64_t a1)
{
  return sub_1BDD88618(a1, qword_1EF52BB60);
}

uint64_t sub_1BE14629C()
{
  return sub_1BDD8422C(&qword_1EF52BB50, type metadata accessor for Proto_RetainCounts, (uint64_t)&unk_1BE1C642C);
}

uint64_t sub_1BE1462C8()
{
  return sub_1BDD8422C(&qword_1EF5309A0, type metadata accessor for Proto_RetainCounts, (uint64_t)&unk_1BE1C6364);
}

uint64_t sub_1BE1462F4()
{
  return sub_1BDD8422C(&qword_1EF52BB58, type metadata accessor for Proto_RetainCounts, (uint64_t)&unk_1BE1C63A4);
}

uint64_t sub_1BE146320()
{
  return sub_1BDD8422C(&qword_1EF5309A8, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C64A4);
}

uint64_t sub_1BE14634C()
{
  return sub_1BDD8422C(&qword_1ED6F2E30, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C6594);
}

uint64_t sub_1BE146378()
{
  return sub_1BDD8422C(&qword_1EF5309B0, type metadata accessor for Proto_CRDT, (uint64_t)&unk_1BE1C64CC);
}

uint64_t sub_1BE1463A4()
{
  return sub_1BDD8422C(&qword_1EF5309B8, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C660C);
}

uint64_t sub_1BE1463D0()
{
  return sub_1BDD8422C(&qword_1ED6F2730, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C66FC);
}

uint64_t sub_1BE1463FC()
{
  return sub_1BDD8422C(&qword_1EF5309C0, type metadata accessor for Proto_Value, (uint64_t)&unk_1BE1C6634);
}

uint64_t sub_1BE146428()
{
  return sub_1BDD8422C(&qword_1EF5309C8, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C6774);
}

uint64_t sub_1BE146454()
{
  return sub_1BDD8422C((unint64_t *)&qword_1ED6F3820, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C690C);
}

uint64_t sub_1BE146480()
{
  return sub_1BDD8422C(&qword_1EF5309D0, type metadata accessor for Proto_Document, (uint64_t)&unk_1BE1C679C);
}

uint64_t sub_1BE1464AC()
{
  return sub_1BE146518(&qword_1EF5309D8, &qword_1EF5309E0);
}

uint64_t sub_1BE1464D0()
{
  return sub_1BE146518(&qword_1EF5309E8, &qword_1EF5309F0);
}

uint64_t sub_1BE1464F4()
{
  return sub_1BE146518(&qword_1EF5309F8, &qword_1EF530A00);
}

uint64_t sub_1BE146518(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE146558(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = sub_1BE1B20F0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  if ((a3(*a1, *(_QWORD *)a2) & 1) != 0)
  {
    v15 = a4(0);
    v16 = (char *)a1 + *(int *)(v15 + 20);
    v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v14, v16, v8);
    v17(v12, &a2[*(int *)(v15 + 20)], v8);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v18 = sub_1BE1B2798();
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    v19(v14, v8);
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1BE146694(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1BE1B20F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1))
  {
    v11 = type metadata accessor for Proto_Timestamp(0);
    v12 = (char *)a1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 24)], v4);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v14 = sub_1BE1B2798();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1BE1467D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1BE1B20F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  if ((sub_1BDDFF364(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || (sub_1BDDFFC78(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) == 0)
  {
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a2 + 16);
  if (*(_BYTE *)(a1 + 24))
    v11 = v11 != 0;
  if (*(_BYTE *)(a2 + 24) != 1)
  {
    if (v11 != v12)
      goto LABEL_8;
LABEL_11:
    v15 = type metadata accessor for Proto_Selection(0);
    v16 = a1 + *(int *)(v15 + 28);
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, v16, v4);
    v17(v8, a2 + *(int *)(v15 + 28), v4);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v13 = sub_1BE1B2798();
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v10, v4);
    return v13 & 1;
  }
  if (!v12)
  {
    if (v11)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v11 == 1)
    goto LABEL_11;
LABEL_8:
  v13 = 0;
  return v13 & 1;
}

uint64_t sub_1BE146960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_1BE1B20F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  sub_1BDDD6F30(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  if ((v11 & 1) != 0 && (sub_1BDDFFE5C(*(_QWORD **)(a1 + 16), *(_QWORD **)(a2 + 16)) & 1) != 0)
  {
    v12 = type metadata accessor for Proto_Constants(0);
    v13 = a1 + *(int *)(v12 + 24);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, a2 + *(int *)(v12 + 24), v4);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v15 = sub_1BE1B2798();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BE146AA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = sub_1BE1B20F0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  if (sub_1BDDFED94(*(_QWORD **)a1, *(_QWORD **)a2) && (a3(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) != 0)
  {
    v15 = a4(0);
    v16 = a1 + *(int *)(v15 + 24);
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17(v14, v16, v8);
    v17(v12, a2 + *(int *)(v15 + 24), v8);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v18 = sub_1BE1B2798();
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    v19(v14, v8);
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1BE146BF0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_1BE1B20F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  if ((sub_1BDDFEE20(*a1, *a2) & 1) != 0 && (sub_1BDDD6F30(a1[1], a1[2]), (v11 & 1) != 0))
  {
    v12 = type metadata accessor for Proto_KeyPath(0);
    v13 = (char *)a1 + *(int *)(v12 + 24);
    v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, (char *)a2 + *(int *)(v12 + 24), v4);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v15 = sub_1BE1B2798();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BE146D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1BE1B20F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if (sub_1BDDFED94(*(_QWORD **)a1, *(_QWORD **)a2)
    && (sub_1BDDFFF20(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) != 0
    && sub_1BDDFED94(*(_QWORD **)(a1 + 16), *(_QWORD **)(a2 + 16)))
  {
    v11 = type metadata accessor for Proto_Struct(0);
    v12 = a1 + *(int *)(v11 + 28);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, a2 + *(int *)(v11 + 28), v4);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v14 = sub_1BE1B2798();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1BE146E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t (*v26)(uint64_t);
  char v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v3 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1E0C80A78](v3);
  v34 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Proto_Document.OneOf_Root(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v34 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v34 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A20);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_1BDD9C318(a1, (uint64_t)v23, type metadata accessor for Proto_Document.OneOf_Root);
  sub_1BDD9C318(v35, v24, type metadata accessor for Proto_Document.OneOf_Root);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BDD9C318((uint64_t)v23, (uint64_t)v17, type metadata accessor for Proto_Document.OneOf_Root);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v26 = type metadata accessor for Proto_Value;
        sub_1BDDA2E8C(v24, (uint64_t)v7, type metadata accessor for Proto_Value);
        v27 = sub_1BE147FD4((uint64_t)v17, (uint64_t)v7, type metadata accessor for Proto_Value, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12DC44);
        sub_1BDD9C3E0((uint64_t)v7, type metadata accessor for Proto_Value);
        v28 = (uint64_t)v17;
LABEL_9:
        v32 = v26;
LABEL_14:
        sub_1BDD9C3E0(v28, v32);
        sub_1BDD9C3E0((uint64_t)v23, type metadata accessor for Proto_Document.OneOf_Root);
        return v27 & 1;
      }
      v29 = type metadata accessor for Proto_Value;
      v30 = (uint64_t)v17;
    }
    else
    {
      sub_1BDD9C318((uint64_t)v23, (uint64_t)v14, type metadata accessor for Proto_Document.OneOf_Root);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v26 = type metadata accessor for Proto_Reference;
        v31 = v34;
        sub_1BDDA2E8C(v24, v34, type metadata accessor for Proto_Reference);
        v27 = sub_1BE147FD4((uint64_t)v14, v31, type metadata accessor for Proto_Reference, (uint64_t (*)(uint64_t, uint64_t))sub_1BE136F08);
        sub_1BDD9C3E0(v31, type metadata accessor for Proto_Reference);
        v28 = (uint64_t)v14;
        goto LABEL_9;
      }
      v29 = type metadata accessor for Proto_Reference;
      v30 = (uint64_t)v14;
    }
  }
  else
  {
    sub_1BDD9C318((uint64_t)v23, (uint64_t)v19, type metadata accessor for Proto_Document.OneOf_Root);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1BDDA2E8C(v24, (uint64_t)v10, type metadata accessor for Proto_CRDT);
      v27 = sub_1BE147FD4((uint64_t)v19, (uint64_t)v10, type metadata accessor for Proto_CRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12E368);
      sub_1BDD9C3E0((uint64_t)v10, type metadata accessor for Proto_CRDT);
      v28 = (uint64_t)v19;
      v32 = type metadata accessor for Proto_CRDT;
      goto LABEL_14;
    }
    v29 = type metadata accessor for Proto_CRDT;
    v30 = (uint64_t)v19;
  }
  sub_1BDD9C3E0(v30, v29);
  sub_1BDD86E30((uint64_t)v23, &qword_1EF530A20);
  v27 = 0;
  return v27 & 1;
}

uint64_t sub_1BE147204(uint64_t a1, uint64_t a2)
{
  return sub_1BE147FD4(a1, a2, type metadata accessor for Proto_Document, (uint64_t (*)(uint64_t, uint64_t))sub_1BE12C1E8);
}

void sub_1BE147218(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;

  v65 = a1;
  v66 = a2;
  v46 = type metadata accessor for Proto_CustomCRValue(0);
  MEMORY[0x1E0C80A78](v46);
  v55 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Proto_Asset(0);
  MEMORY[0x1E0C80A78](v3);
  v54 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_TaggedValue(0);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Proto_RepeatedValue(0);
  MEMORY[0x1E0C80A78](v47);
  v50 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for Proto_Timestamp(0);
  MEMORY[0x1E0C80A78](v45);
  v53 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Proto_Optional(0);
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1E0C80A78](v11);
  v51 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Proto_Version(0);
  MEMORY[0x1E0C80A78](v44);
  v49 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v60 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v64 = (char *)&v44 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v62 = (char *)&v44 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v61 = (char *)&v44 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v58 = (char *)&v44 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v63 = (char *)&v44 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v56 = (char *)&v44 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v59 = (char *)&v44 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v57 = (char *)&v44 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v34 = MEMORY[0x1E0C80A78](v33);
  v35 = MEMORY[0x1E0C80A78](v34);
  v36 = MEMORY[0x1E0C80A78](v35);
  v37 = MEMORY[0x1E0C80A78](v36);
  MEMORY[0x1E0C80A78](v37);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A40);
  v39 = MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v44 + *(int *)(v39 + 48) - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD9C318(v65, (uint64_t)&v44 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  v42 = (uint64_t)v66;
  v66 = v41;
  sub_1BDD9C318(v42, (uint64_t)v41, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  v43 = (char *)sub_1BE147694 + 4 * word_1BE1C3A72[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1BE147694()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  BOOL v4;

  sub_1BDD9C318(v1, (uint64_t)v0, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  v3 = *(_QWORD **)(v2 - 96);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BDD86E30(v1, &qword_1EF530A40);
    return 0;
  }
  else
  {
    v4 = *v0 == *v3;
    sub_1BDD9C3E0(v1, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  return v4;
}

uint64_t sub_1BE147E80(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1BE1B20F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  if (*a1 == *(_QWORD *)a2
    && (sub_1BDDD6F30(a1[1], a1[2]), (v11 & 1) != 0)
    && (sub_1BDDD6F30(a1[3], a1[4]), (v12 & 1) != 0))
  {
    v13 = type metadata accessor for Proto_Asset(0);
    v14 = (char *)a1 + *(int *)(v13 + 28);
    v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v15(v10, v14, v4);
    v15(v8, &a2[*(int *)(v13 + 28)], v4);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v16 = sub_1BE1B2798();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1BE147FD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v8 = sub_1BE1B20F0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v23 - v13;
  v15 = *(int *)(a3(0) + 20);
  v16 = *(_QWORD *)(a1 + v15);
  v17 = *(_QWORD *)(a2 + v15);
  if (v16 == v17
    || (swift_retain(), swift_retain(), v18 = a4(v16, v17), swift_release(), swift_release(), (v18 & 1) != 0))
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v19(v14, a1, v8);
    v19(v12, a2, v8);
    sub_1BDD8422C(&qword_1EF52C340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v20 = sub_1BE1B2798();
    v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    v21(v14, v8);
  }
  else
  {
    v20 = 0;
  }
  return v20 & 1;
}

void sub_1BE148144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a2;
  v57 = a1;
  v41 = type metadata accessor for Proto_CustomCRDT(0);
  MEMORY[0x1E0C80A78](v41);
  v50 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Proto_Counter(0);
  MEMORY[0x1E0C80A78](v3);
  v49 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_OrderedSet(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v47 = (char *)&v40 - v8;
  v9 = type metadata accessor for Proto_Sequence(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)&v40 - v12;
  v13 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1E0C80A78](v13);
  v45 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Proto_Set(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v44 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v43 = (char *)&v40 - v18;
  v19 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1E0C80A78](v19);
  v42 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v55 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v54 = (char *)&v40 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v53 = (char *)&v40 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v52 = (char *)&v40 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v31 = MEMORY[0x1E0C80A78](v30);
  v32 = MEMORY[0x1E0C80A78](v31);
  v33 = MEMORY[0x1E0C80A78](v32);
  v34 = MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530A28);
  v36 = MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v40 + *(int *)(v36 + 48) - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD9C318(v57, (uint64_t)&v40 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  sub_1BDD9C318(v56, (uint64_t)v38, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  v39 = (char *)sub_1BE14852C + 4 * byte_1BE1C3A90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BE14852C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  sub_1BDD9C318(v1, v2, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BDD9C3E0(v2, type metadata accessor for Proto_Register);
    sub_1BDD86E30(v1, &qword_1EF530A28);
    v4 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 208);
    sub_1BDDA2E8C(v0, v6, type metadata accessor for Proto_Register);
    v4 = sub_1BE147FD4(v2, v6, type metadata accessor for Proto_Register, (uint64_t (*)(uint64_t, uint64_t))sub_1BE131EA4);
    sub_1BDD9C3E0(v6, type metadata accessor for Proto_Register);
    sub_1BDD9C3E0(v2, type metadata accessor for Proto_Register);
    sub_1BDD9C3E0(v1, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  return v4 & 1;
}

unint64_t sub_1BE148AB0()
{
  unint64_t result;

  result = qword_1EF530AD8;
  if (!qword_1EF530AD8)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3E6C, &type metadata for Proto_Reference.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1EF530AD8);
  }
  return result;
}

unint64_t sub_1BE148AF4()
{
  unint64_t result;

  result = qword_1EF530B38;
  if (!qword_1EF530B38)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C3F54, &type metadata for Proto_Subsequence.ContentOptions);
    atomic_store(result, (unint64_t *)&qword_1EF530B38);
  }
  return result;
}

uint64_t sub_1BE148B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3850);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1
     + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  v7 = type metadata accessor for Proto_Timestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_DWORD *)(v1
                + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__length);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__length) = 0;
  v9 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy);
  v10 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy) = MEMORY[0x1E0DEE9D8];
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__child);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__child) = v10;
  v26 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removedAddedBy);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removedAddedBy) = v10;
  v12 = v1
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__contentOptions;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a1
      + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  sub_1BDD86DEC(v13, (uint64_t)v5, &qword_1ED6F3850);
  swift_beginAccess();
  sub_1BDDA1AF4((uint64_t)v5, v6, &qword_1ED6F3850);
  swift_endAccess();
  v14 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__length);
  swift_beginAccess();
  LODWORD(v14) = *v14;
  swift_beginAccess();
  *v8 = (_DWORD)v14;
  v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy);
  swift_beginAccess();
  v16 = *v15;
  swift_beginAccess();
  *v9 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__child);
  swift_beginAccess();
  v18 = *v17;
  swift_beginAccess();
  *v11 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__removedAddedBy);
  swift_beginAccess();
  v20 = *v19;
  v21 = v26;
  swift_beginAccess();
  *v21 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence17Proto_SubsequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__contentOptions);
  swift_beginAccess();
  v23 = *v22;
  LOBYTE(v22) = *((_BYTE *)v22 + 8);
  swift_beginAccess();
  *(_QWORD *)v12 = v23;
  *(_BYTE *)(v12 + 8) = (_BYTE)v22;
  return v1;
}

unint64_t sub_1BE148E24()
{
  unint64_t result;

  result = qword_1EF530B48;
  if (!qword_1EF530B48)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C6A38, &type metadata for Proto_Selection.Affinity);
    atomic_store(result, (unint64_t *)&qword_1EF530B48);
  }
  return result;
}

uint64_t sub_1BE148E68()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE148E78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for Proto_Selection.Affinity()
{
  return &type metadata for Proto_Selection.Affinity;
}

uint64_t sub_1BE148E98()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_45Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BE1B20F0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1BE148F24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_46Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BE1B20F0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BE148FA8()
{
  return sub_1BDDC1190();
}

uint64_t sub_1BE148FC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BE148FD4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t sub_1BE148FF0()
{
  unint64_t result;

  result = qword_1EF530B78;
  if (!qword_1EF530B78)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C6998, &type metadata for Proto_Selection.Affinity);
    atomic_store(result, (unint64_t *)&qword_1EF530B78);
  }
  return result;
}

unint64_t sub_1BE149038()
{
  unint64_t result;

  result = qword_1EF530B80;
  if (!qword_1EF530B80)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C69C0, &type metadata for Proto_Selection.Affinity);
    atomic_store(result, (unint64_t *)&qword_1EF530B80);
  }
  return result;
}

unint64_t sub_1BE149080()
{
  unint64_t result;

  result = qword_1EF530B88;
  if (!qword_1EF530B88)
  {
    result = MEMORY[0x1C3B7DF54](&unk_1BE1C6A00, &type metadata for Proto_Selection.Affinity);
    atomic_store(result, (unint64_t *)&qword_1EF530B88);
  }
  return result;
}

uint64_t sub_1BE1490E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[16];

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_1BDD86E30(a1, &qword_1ED6EE508);
    sub_1BDEF068C(a2, (uint64_t)v9);
    v4 = sub_1BE1B1DF0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a2, v4);
    return sub_1BDD86E30((uint64_t)v9, &qword_1ED6EE508);
  }
  else
  {
    sub_1BDDF32F4();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BE153D68((uint64_t)v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v7 = sub_1BE1B1DF0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
  }
}

uint64_t sub_1BE1491CC(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _OWORD v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BDE77688((_OWORD *)a1, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BE1541C0(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BDD86E30(a1, qword_1EF52B750);
    sub_1BDEF0780((uint64_t)a2, v7);

    return sub_1BDD86E30((uint64_t)v7, qword_1EF52B750);
  }
}

uint64_t sub_1BE149284(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BE15443C(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return sub_1BDDB796C(a3, a4);
  }
  else
  {
    sub_1BDEF0864(a3, a4, &v11);
    sub_1BDDB796C(a3, a4);
    return swift_release();
  }
}

uint64_t sub_1BE149348(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BDE77688((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BE154BAC(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return sub_1BDDB796C(a2, a3);
  }
  else
  {
    sub_1BDD86E30(a1, qword_1EF52B750);
    sub_1BDEF0A54(a2, a3, v9);
    sub_1BDDB796C(a2, a3);
    return sub_1BDD86E30((uint64_t)v9, qword_1EF52B750);
  }
}

uint64_t sub_1BE149420(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v21 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(v3 + 63) >> 6;
  v29 = (uint64_t)v27 + 8;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v7 >= v22)
      goto LABEL_31;
    v12 = *(_QWORD *)(v21 + 8 * v7);
    if (!v12)
      break;
LABEL_18:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_19:
    v14 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v10);
    sub_1BDDC1538(*(_QWORD *)(a1 + 56) + 32 * v10, v29);
    *(_QWORD *)&v27[0] = v14;
    v25[0] = v27[0];
    v25[1] = v27[1];
    v26 = v28;
    v15 = v14;
    sub_1BE14AFAC((void **)v25, &v23);
    if (v1)
    {
      sub_1BDD86E30((uint64_t)v25, &qword_1EF530E98);
      swift_bridgeObjectRelease();
LABEL_31:
      swift_release();
      return (uint64_t)v8;
    }
    result = sub_1BDD86E30((uint64_t)v25, &qword_1EF530E98);
    v16 = v24;
    if (v24)
    {
      v17 = v23;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1BDDA8B2C(0, v8[2] + 1, 1, v8);
        v8 = (_QWORD *)result;
      }
      v19 = v8[2];
      v18 = v8[3];
      if (v19 >= v18 >> 1)
      {
        result = (uint64_t)sub_1BDDA8B2C((_QWORD *)(v18 > 1), v19 + 1, 1, v8);
        v8 = (_QWORD *)result;
      }
      v8[2] = v19 + 1;
      v20 = &v8[2 * v19];
      v20[4] = v17;
      v20[5] = v16;
    }
  }
  v13 = v7 + 1;
  if (v7 + 1 >= v22)
    goto LABEL_31;
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v7 + 2;
  if (v7 + 2 >= v22)
    goto LABEL_31;
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v7 + 3;
  if (v7 + 3 >= v22)
    goto LABEL_31;
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v7 + 4;
  if (v7 + 4 >= v22)
    goto LABEL_31;
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
  {
LABEL_17:
    v7 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v22)
      goto LABEL_31;
    v12 = *(_QWORD *)(v21 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1BE1496A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t result;
  id v23;
  uint64_t *v24;
  id v25[2];

  v24 = a5;
  v25[1] = *(id *)MEMORY[0x1E0C80C00];
  v9 = type metadata accessor for Proto_Sequence(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v25 - v13;
  sub_1BDD9C318(a1, (uint64_t)v25 - v13, type metadata accessor for Proto_Sequence);
  type metadata accessor for CRAttributedStringRef();
  v15 = swift_allocObject();
  sub_1BDD9C318((uint64_t)v14, (uint64_t)v12, type metadata accessor for Proto_Sequence);
  v16 = objc_allocWithZone((Class)type metadata accessor for CRAttributedStringDecoder(0));
  v17 = sub_1BDF0D828((uint64_t)v12, a2, a3, a4);
  v18 = objc_allocWithZone((Class)CRTTMergeableString);
  v25[0] = 0;
  v19 = objc_msgSend(v18, sel_initWithDecoder_error_, v17, v25);
  if (v19)
  {
    v20 = v19;
    v21 = v25[0];
    swift_release();

    sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto_Sequence);
    *(_QWORD *)(v15 + 16) = v20;
    result = sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
    *v24 = v15;
  }
  else
  {
    v23 = v25[0];
    sub_1BE1B1D3C();

    swift_willThrow();
    swift_release();

    sub_1BDD9C3E0((uint64_t)v14, type metadata accessor for Proto_Sequence);
    swift_deallocPartialClassInstance();
    return sub_1BDD9C3E0(a1, type metadata accessor for Proto_Sequence);
  }
  return result;
}

void sub_1BE1498B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  objc_class *v15;
  id v16;
  id v17;
  unsigned int v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  objc_super v23;
  id v24[4];

  v24[3] = *(id *)MEMORY[0x1E0C80C00];
  v5 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v9 = (char *)objc_allocWithZone((Class)type metadata accessor for CRAttributedStringEncoder(0));
  v10 = &v9[OBJC_IVAR____TtC9Coherence15CRStringEncoder_sequence];
  swift_retain();
  v11 = v9;
  sub_1BE1B20E4();
  v12 = *(int *)(v5 + 20);
  if (qword_1ED6EF5C0 != -1)
    swift_once();
  *(_QWORD *)&v10[v12] = qword_1ED6EF5B0;
  v13 = &v11[OBJC_IVAR____TtC9Coherence15CRStringEncoder_subsequence];
  swift_retain();
  sub_1BE1B20E4();
  v14 = *(int *)(type metadata accessor for Proto_Subsequence(0) + 20);
  if (qword_1ED6EF680 != -1)
    swift_once();
  *(_QWORD *)&v13[v14] = qword_1ED6EF678;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Coherence15CRStringEncoder_encoder] = a1;
  swift_retain();
  swift_retain();

  v15 = (objc_class *)type metadata accessor for CRStringEncoder(0);
  v23.receiver = v11;
  v23.super_class = v15;
  v16 = objc_msgSendSuper2(&v23, sel_init);
  swift_release();
  if (!v8)
    __break(1u);
  v17 = objc_msgSend(*(id *)(v8 + 16), sel_fullyRenamed_, *(_QWORD *)(a1 + 16));
  v24[0] = 0;
  v18 = objc_msgSend(v17, sel_saveToEncoder_error_, v16, v24);

  if (v18)
  {
    v19 = v24[0];
    sub_1BE1B20E4();
    v20 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
    if (qword_1ED6F2E18 != -1)
      swift_once();
    *(_QWORD *)(a2 + v20) = qword_1ED6F2E08;
    v21 = (uint64_t)v16 + OBJC_IVAR____TtC9Coherence15CRStringEncoder_sequence;
    swift_beginAccess();
    sub_1BDD9C318(v21, (uint64_t)v7, type metadata accessor for Proto_Sequence);
    swift_retain();
    sub_1BE12894C((uint64_t)v7);
  }
  else
  {
    v22 = v24[0];
    sub_1BE1B1D3C();

    swift_willThrow();
  }

}

uint64_t sub_1BE149B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1BE149BB0(uint64_t a1)
{
  void (*v1)(void);

  v1 = *(void (**)(void))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1BDF0DB98();
  sub_1BE1B25AC();
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE149C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  _QWORD v17[4];

  v1 = v0;
  v2 = sub_1BE1B1F58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
  v7 = sub_1BDDC6C38(0, &qword_1EF52B6F0);
  v17[3] = v7;
  v17[0] = v6;
  sub_1BE1B1F4C();
  if (v7)
  {
    v8 = __swift_project_boxed_opaque_existential_1(v17, v7);
    v9 = *(_QWORD *)(v7 - 8);
    MEMORY[0x1E0C80A78](v8);
    v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = sub_1BE1B34A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_allocWithZone((Class)CRTTMergeableString);
  v14 = (void *)sub_1BE1B1F04();
  v15 = objc_msgSend(v13, sel_initWithStorage_uuid_, v12, v14);
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)(v1 + 16) = v15;
  return v1;
}

uint64_t sub_1BE149DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _BYTE v17[24];
  uint64_t v18;

  v7 = type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDD86DEC(a1, (uint64_t)v17, qword_1EF52B750);
  if (!v18)
    return sub_1BDD86E30((uint64_t)v17, qword_1EF52B750);
  type metadata accessor for ObjCFinalizedTimestamp(0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v11 = v16;
    v12 = *a5;
    sub_1BDD9C318((uint64_t)v16 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)v9, type metadata accessor for FinalizedTimestamp);

    v13 = *(_QWORD *)&v9[*(int *)(v7 + 20)];
    result = sub_1BDD9C3E0((uint64_t)v9, type metadata accessor for FinalizedTimestamp);
    if (v13 <= v12)
      v14 = v12;
    else
      v14 = v13;
    *a5 = v14;
  }
  return result;
}

uint64_t sub_1BE149EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_1BDD86E30((uint64_t)&v11, qword_1EF52B750);
}

uint64_t static CRAttributeStringKey.loadAttribute(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  char *v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v12 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v3 = (char *)&v11 - v2;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = *(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 8) + 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  v7 = swift_retain();
  v8 = v13;
  result = v6(v7, AssociatedTypeWitness, v5);
  if (!v8)
  {
    v10 = swift_getAssociatedConformanceWitness();
    return AnyCRValue.init<A>(_:)((uint64_t)v3, AssociatedTypeWitness, AssociatedConformanceWitness, v10, v12);
  }
  return result;
}

unint64_t sub_1BE14A0A8()
{
  unint64_t result;

  result = sub_1BE126560(MEMORY[0x1E0DEE9D8]);
  qword_1EF5497C8 = result;
  return result;
}

uint64_t sub_1BE14A0CC()
{
  if (qword_1EF52C0E8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE14A10C()
{
  uint64_t result;

  result = sub_1BE1B27A4();
  qword_1EF52B6B8 = result;
  return result;
}

id static NSAttributedStringKey.timestamp.getter()
{
  if (qword_1EF52B6C0 != -1)
    swift_once();
  return (id)qword_1EF52B6B8;
}

unint64_t CRAttributedString.Attributes.init()@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_1BE126A08(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

uint64_t CRAttributedString.Attributes.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t AssociatedTypeWitness;
  int v10;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v5 = *v3;
  (*(void (**)(_QWORD, uint64_t))(a2 + 40))(*(_QWORD *)(*MEMORY[0x1E0DEC880] + *a1 + 8), a2);
  v6 = (void *)sub_1BE1B27A4();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v5 + 16) || (v7 = sub_1BDDC4B9C((uint64_t)v6), (v8 & 1) == 0))
  {
    v13 = 0u;
    v14 = 0u;

    goto LABEL_7;
  }
  sub_1BDDC1538(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v13);

  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_7:
    sub_1BDD86E30((uint64_t)&v13, qword_1EF52B750);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v13 = 0u;
    v14 = 0u;
    goto LABEL_9;
  }
  (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)v12 + 80))(&v13);
  swift_release();
LABEL_9:
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF52B750);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, v10 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_1BE14A320@<X0>(_QWORD **a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = *(uint64_t *)((char *)a1 + a2 - 8);
  v5 = *a1;
  swift_bridgeObjectRetain();
  CRAttributedString.Attributes.subscript.getter(v5, v4, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE14A388(uint64_t a1, uint64_t a2, _QWORD **a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(uint64_t *)((char *)a3 + a4 - 8);
  swift_getAssociatedTypeWitness();
  v7 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  v10 = *a3;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v14 - v8, a1);
  swift_retain();
  return CRAttributedString.Attributes.subscript.setter((uint64_t)v9, v10, v12, v6);
}

uint64_t CRAttributedString.Attributes.subscript.setter(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  void *v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;
  void *v25[3];
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v25[2] = a2;
  v6 = *(_QWORD *)(*MEMORY[0x1E0DEC880] + *a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_1BE1B2EE8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v25 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x1E0C80A78](v10);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v25 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v26 = a1;
  v19(v12, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v12, v8);
    (*(void (**)(uint64_t, uint64_t))(a4 + 40))(v6, a4);
    v21 = (void *)sub_1BE1B27A4();
    swift_bridgeObjectRelease();
    v27 = 0u;
    v28 = 0u;
    sub_1BE1491CC((uint64_t)&v27, v21);
    swift_release();
    return ((uint64_t (*)(uint64_t, uint64_t))v20)(v26, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v12, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(a4 + 40))(v6, a4);
    v25[0] = (void *)sub_1BE1B27A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, AssociatedTypeWitness);
    *((_QWORD *)&v28 + 1) = &type metadata for AnyCRValue;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v24 = swift_getAssociatedConformanceWitness();
    AnyCRValue.init<A>(_:)((uint64_t)v16, AssociatedTypeWitness, AssociatedConformanceWitness, v24, (uint64_t *)&v27);
    sub_1BE1491CC((uint64_t)&v27, v25[0]);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, AssociatedTypeWitness);
  }
}

void (*CRAttributedString.Attributes.subscript.modify(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  swift_getAssociatedTypeWitness();
  v10 = sub_1BE1B2EE8();
  v9[4] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  CRAttributedString.Attributes.subscript.getter(a2, a4, (uint64_t)v13);
  return sub_1BE14A7B0;
}

void sub_1BE14A7B0(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    v7 = v2[2];
    v8 = (_QWORD *)*v2;
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    swift_retain();
    CRAttributedString.Attributes.subscript.setter((uint64_t)v3, v8, v9, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v10 = v2[2];
    v11 = (_QWORD *)*v2;
    swift_retain();
    CRAttributedString.Attributes.subscript.setter((uint64_t)v4, v11, v12, v10);
  }
  free(v4);
  free(v3);
  free(v2);
}

void static CRAttributedString.Attributes.== infix(_:_:)(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  ValueMetadata *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  ValueMetadata *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  char v28;
  uint64_t (*v29)();
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];
  _OWORD v39[2];
  uint64_t v40;
  void *v41;
  __int128 v42;

  v2 = *a1;
  v3 = *a2;
  v4 = CRAttributedString.Attributes.count.getter();
  v41 = v3;
  if (v4 == CRAttributedString.Attributes.count.getter())
  {
    v32 = v2 + 64;
    v33 = v3;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = -1;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    v7 = v6 & *(_QWORD *)(v2 + 64);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v30 = v8 - 1;
    swift_bridgeObjectRetain();
    v9 = 0;
    v34 = v8;
    v31 = v8 - 5;
    v10 = &type metadata for AnyCRValue;
    while (!v7)
    {
      v16 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        return;
      }
      if (v16 >= v34)
      {
        v18 = v9;
      }
      else
      {
        v17 = *(_QWORD *)(v32 + 8 * v16);
        if (v17)
          goto LABEL_13;
        v18 = v9 + 1;
        if ((uint64_t)(v9 + 2) < v34)
        {
          v17 = *(_QWORD *)(v32 + 8 * (v9 + 2));
          if (v17)
          {
            v16 = v9 + 2;
            goto LABEL_13;
          }
          v18 = v9 + 2;
          if ((uint64_t)(v9 + 3) < v34)
          {
            v17 = *(_QWORD *)(v32 + 8 * (v9 + 3));
            if (v17)
            {
              v16 = v9 + 3;
LABEL_13:
              v7 = (v17 - 1) & v17;
              v12 = __clz(__rbit64(v17)) + (v16 << 6);
              v9 = v16;
LABEL_9:
              v13 = *(_QWORD *)(v2 + 56);
              *(_QWORD *)&v39[0] = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v12);
              v14 = *(void **)&v39[0];
              sub_1BDDC1538(v13 + 32 * v12, (uint64_t)v39 + 8);
              v15 = v14;
              goto LABEL_16;
            }
            v16 = v9 + 4;
            v18 = v9 + 3;
            if ((uint64_t)(v9 + 4) < v34)
            {
              v17 = *(_QWORD *)(v32 + 8 * v16);
              if (v17)
                goto LABEL_13;
              while (v31 != v9)
              {
                v17 = *(_QWORD *)(v2 + 104 + 8 * v9++);
                if (v17)
                {
                  v16 = v9 + 4;
                  goto LABEL_13;
                }
              }
              v18 = v30;
            }
          }
        }
      }
      v7 = 0;
      v40 = 0;
      v9 = v18;
      memset(v39, 0, sizeof(v39));
LABEL_16:
      sub_1BDDA2EF0((uint64_t)v39, (uint64_t)&v41, &qword_1EF52B6B0);
      v19 = v41;
      if (!v41)
        goto LABEL_31;
      v20 = v10;
      sub_1BDE77688(&v42, v39);
      if (qword_1EF52B6C0 != -1)
        swift_once();
      v21 = sub_1BE1B27C8();
      v23 = v22;
      if (v21 == sub_1BE1B27C8() && v23 == v24)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_6;
      }
      v25 = sub_1BE1B34AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
LABEL_6:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);

        v10 = v20;
      }
      else
      {
        if (!v33[2])
        {
          v36 = 0u;
          v37 = 0u;
LABEL_47:

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
          swift_release();
          sub_1BDD86E30((uint64_t)&v36, qword_1EF52B750);
          return;
        }
        v26 = v19;
        v27 = sub_1BDDC4B9C((uint64_t)v26);
        if ((v28 & 1) != 0)
        {
          sub_1BDDC1538(v33[7] + 32 * v27, (uint64_t)&v36);
        }
        else
        {
          v36 = 0u;
          v37 = 0u;
        }
        v10 = v20;

        if (!*((_QWORD *)&v37 + 1))
          goto LABEL_47;
        sub_1BDE77688(&v36, v38);
        sub_1BDDC1538((uint64_t)v39, (uint64_t)&v36);
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_1BDDC1538((uint64_t)v38, (uint64_t)&v36);
          if (!swift_dynamicCast() || !v35)
          {
            swift_retain();

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
            swift_release();
            swift_release_n();
            return;
          }
          v29 = *(uint64_t (**)())(*(_QWORD *)v35 + 96);
          swift_retain_n();
          LOBYTE(v29) = v29();
          swift_release();

          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
          swift_release_n();
          v10 = v20;
          if ((v29 & 1) == 0)
          {
LABEL_31:
            swift_release();
            return;
          }
        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
        }
      }
    }
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v9 << 6);
    goto LABEL_9;
  }
}

uint64_t CRAttributedString.Attributes.count.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  char v5;
  _BOOL8 v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 16);
  if (qword_1EF52B6C0 == -1)
  {
    if (v2)
      goto LABEL_3;
  }
  else
  {
    swift_once();
    if (*(_QWORD *)(v1 + 16))
    {
LABEL_3:
      v3 = (id)qword_1EF52B6B8;
      v4 = sub_1BDDC4B9C((uint64_t)v3);
      if ((v5 & 1) != 0)
      {
        sub_1BDDC1538(*(_QWORD *)(v1 + 56) + 32 * v4, (uint64_t)&v8);

        v6 = *((_QWORD *)&v9 + 1) != 0;
      }
      else
      {
        v8 = 0u;
        v9 = 0u;

        v6 = 0;
      }
      goto LABEL_8;
    }
  }
  v6 = 0;
  v8 = 0u;
  v9 = 0u;
LABEL_8:
  sub_1BDD86E30((uint64_t)&v8, qword_1EF52B750);
  result = v2 - v6;
  if (__OFSUB__(v2, v6))
    __break(1u);
  return result;
}

uint64_t sub_1BE14ADDC(uint64_t a1)
{
  void *v2;
  __int128 v4;
  __int128 v5;

  if (qword_1EF52B6C0 != -1)
    swift_once();
  v2 = (void *)qword_1EF52B6B8;
  if (a1)
  {
    *((_QWORD *)&v5 + 1) = type metadata accessor for ObjCFinalizedTimestamp(0);
    *(_QWORD *)&v4 = a1;
  }
  else
  {
    v4 = 0u;
    v5 = 0u;
  }
  return sub_1BE1491CC((uint64_t)&v4, v2);
}

uint64_t CRAttributedString.Attributes.debugDescription.getter()
{
  return CRAttributedString.Attributes.description.getter();
}

uint64_t CRAttributedString.Attributes.description.getter()
{
  uint64_t v0;

  if (CRAttributedString.Attributes.count.getter() < 1)
    return 6109787;
  v0 = swift_bridgeObjectRetain();
  sub_1BE149420(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF525500);
  sub_1BDDA9D60((unint64_t *)&qword_1EF525508, &qword_1EF525500, MEMORY[0x1E0DEAF20]);
  sub_1BE1B2708();
  swift_bridgeObjectRelease();
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BE1B284C();
  swift_bridgeObjectRelease();
  return 91;
}

uint64_t sub_1BE14AFAC@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21[4];
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v4 = *a1;
  if (qword_1EF52B6C0 != -1)
    swift_once();
  v5 = sub_1BE1B27C8();
  v7 = v6;
  if (v5 == sub_1BE1B27C8() && v7 == v8)
  {
    result = swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v10 = sub_1BE1B34AC();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_11:
    *a2 = 0;
    a2[1] = 0;
    return result;
  }
  *(_QWORD *)&v22 = v4;
  sub_1BDDC1538((uint64_t)(a1 + 1), (uint64_t)&v22 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF52E2C8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
    sub_1BE1B32E4();
    v13 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    sub_1BDD86E30((uint64_t)&v25, qword_1EF52E2D0);
    v13 = 0;
  }
  v14 = *a1;
  *(_QWORD *)&v25 = *a1;
  sub_1BDDC1538((uint64_t)(a1 + 1), (uint64_t)&v25 + 8);
  if (!v13)
  {
    sub_1BDDC1538((uint64_t)&v25 + 8, (uint64_t)v21);
    v16 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EF500);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
      sub_1BE1B32E4();
      v18 = v17;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
      *(_QWORD *)&v22 = v16;
      sub_1BDDC1538((uint64_t)&v25 + 8, (uint64_t)&v22 + 8);
      if (v18)
      {
LABEL_20:
        sub_1BDD86E30((uint64_t)&v22, &qword_1EF530E98);
        goto LABEL_21;
      }
    }
    else
    {
      v24 = 0;
      v22 = 0u;
      v23 = 0u;
      sub_1BDD86E30((uint64_t)&v22, (uint64_t *)&unk_1EF52D8C8);
      *(_QWORD *)&v22 = v16;
      sub_1BDDC1538((uint64_t)&v25 + 8, (uint64_t)&v22 + 8);
    }
    v21[0] = 0xE000000000000000;
    sub_1BE1B3164();
    goto LABEL_20;
  }
  v15 = v14;
LABEL_21:
  sub_1BDD86E30((uint64_t)&v25, &qword_1EF530E98);
  *(_QWORD *)&v25 = *a1;
  sub_1BDDC1538((uint64_t)(a1 + 1), (uint64_t)&v25 + 8);
  *(_QWORD *)&v22 = sub_1BE1B27C8();
  *((_QWORD *)&v22 + 1) = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25 + 8);
  sub_1BE1B284C();
  sub_1BE1B284C();
  result = swift_bridgeObjectRelease();
  v20 = *((_QWORD *)&v22 + 1);
  *a2 = v22;
  a2[1] = v20;
  return result;
}

NSAttributedStringKey_optional __swiftcall CRAttributedString.Attributes.Keys.Iterator.next()()
{
  NSString *v0;
  NSAttributedStringKey_optional v1;
  uint64_t v2;
  NSString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  NSString *v11;
  NSAttributedStringKey_optional v12;

  sub_1BE14B3F4();
  v1.value = v0;
  v2 = qword_1EF52B6C0;
  v3 = v0;
  if (v2 == -1)
  {
    if (!v1.value)
      return v1;
  }
  else
  {
    swift_once();
    if (!v1.value)
      return v1;
  }
  v4 = sub_1BE1B27C8();
  v6 = v5;
  if (v4 == sub_1BE1B27C8() && v6 == v7)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v9 = sub_1BE1B34AC();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      return v1;
  }
  sub_1BE14B3F4();
  v12.value = v11;

  return v12;
}

void sub_1BE14B3F4()
{
  _QWORD *v0;
  int64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  void *v11;
  uint64_t (*v12)(void **);
  id v13;
  int64_t v14;
  void *v15;

  while (1)
  {
    v1 = v0[3];
    v2 = v0[4];
    if (v2)
    {
      v3 = (v2 - 1) & v2;
      v4 = __clz(__rbit64(v2)) | (v1 << 6);
      goto LABEL_13;
    }
    v5 = v1 + 1;
    if (__OFADD__(v1, 1))
      break;
    v6 = (unint64_t)(v0[2] + 64) >> 6;
    v7 = v0[3];
    if (v5 >= v6)
      goto LABEL_23;
    v8 = v0[1];
    v9 = *(_QWORD *)(v8 + 8 * v5);
    if (v9)
      goto LABEL_12;
    v10 = v1 + 2;
    v7 = v1 + 1;
    if (v1 + 2 >= v6)
      goto LABEL_23;
    v9 = *(_QWORD *)(v8 + 8 * v10);
    if (!v9)
    {
      v7 = v1 + 2;
      if (v1 + 3 >= v6)
        goto LABEL_23;
      v9 = *(_QWORD *)(v8 + 8 * (v1 + 3));
      if (v9)
      {
        v5 = v1 + 3;
        goto LABEL_12;
      }
      v10 = v1 + 4;
      v7 = v1 + 3;
      if (v1 + 4 >= v6)
        goto LABEL_23;
      v9 = *(_QWORD *)(v8 + 8 * v10);
      if (!v9)
      {
        v5 = v1 + 5;
        v7 = v1 + 4;
        if (v1 + 5 >= v6)
          goto LABEL_23;
        v9 = *(_QWORD *)(v8 + 8 * v5);
        if (!v9)
        {
          v7 = v6 - 1;
          v14 = v1 + 6;
          while (v6 != v14)
          {
            v9 = *(_QWORD *)(v8 + 8 * v14++);
            if (v9)
            {
              v5 = v14 - 1;
              goto LABEL_12;
            }
          }
LABEL_23:
          v0[3] = v7;
          v0[4] = 0;
          return;
        }
        goto LABEL_12;
      }
    }
    v5 = v10;
LABEL_12:
    v3 = (v9 - 1) & v9;
    v4 = __clz(__rbit64(v9)) + (v5 << 6);
    v1 = v5;
LABEL_13:
    v11 = *(void **)(*(_QWORD *)(*v0 + 48) + 8 * v4);
    v0[3] = v1;
    v0[4] = v3;
    v15 = v11;
    v12 = (uint64_t (*)(void **))v0[5];
    v13 = v11;
    if ((v12(&v15) & 1) != 0)
      return;

  }
  __break(1u);
}

NSAttributedStringKey_optional sub_1BE14B558@<X0>(NSAttributedStringKey_optional *a1@<X8>)
{
  NSAttributedStringKey_optional result;

  result.value = CRAttributedString.Attributes.Keys.Iterator.next()().value;
  a1->value = result.value;
  return result;
}

uint64_t CRAttributedString.Attributes.Keys.makeIterator()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[1];
  v3 = v1[2];
  v4 = -1;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = *v1 + 64;
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v7 = v4 & *(_QWORD *)(*v1 + 64);
  *a1 = *v1;
  a1[1] = v6;
  a1[2] = ~v5;
  a1[3] = 0;
  a1[4] = v7;
  a1[5] = v2;
  a1[6] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

BOOL static CRAttributedString.Attributes.Keys.Index.< infix(_:_:)(_BOOL8 result, uint64_t a2)
{
  if ((*(_BYTE *)(result + 16) & 1) == 0 && (*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    if (*(_DWORD *)(result + 8) == *(_QWORD *)(a2 + 8))
      return *(_QWORD *)result < *(_QWORD *)a2;
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL static CRAttributedString.Attributes.Keys.Index.== infix(_:_:)(_BOOL8 result, uint64_t a2)
{
  if ((*(_BYTE *)(result + 16) & 1) == 0 && (*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    if (*(_DWORD *)(result + 8) == *(_QWORD *)(a2 + 8))
      return *(_QWORD *)result == *(_QWORD *)a2;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t CRAttributedString.Attributes.Keys.startIndex.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t (*v4)(void **);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t result;

  v3 = *v1;
  v4 = (uint64_t (*)(void **))v1[1];
  swift_bridgeObjectRetain();
  swift_retain();
  v5 = sub_1BE14B6E8(v3, v4);
  v7 = v6;
  v9 = v8;
  swift_release();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  return result;
}

uint64_t sub_1BE14B6E8(uint64_t a1, uint64_t (*a2)(void **))
{
  uint64_t result;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v23;

  result = sub_1BDE248E0();
  if ((v5 & 1) == 0)
  {
    v6 = v4;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v4)
    {
      v7 = result;
      v8 = a1 + 64;
      v21 = v4;
      v9 = v4;
      do
      {
        v11 = 1 << *(_BYTE *)(a1 + 32);
        if (v7 == v11)
          return v7;
        if (v7 < 0 || v7 >= v11)
          goto LABEL_29;
        if (v6 != (_DWORD)v9)
          goto LABEL_30;
        v12 = (unint64_t)v7 >> 6;
        if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0)
          goto LABEL_30;
        v23 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v7);
        v13 = v23;
        swift_retain();
        v14 = v13;
        v15 = a2(&v23);

        result = swift_release();
        if ((v15 & 1) != 0)
          return v7;
        v10 = 1 << *(_BYTE *)(a1 + 32);
        if (v7 >= v10)
          goto LABEL_31;
        v16 = *(_QWORD *)(v8 + 8 * v12);
        if ((v16 & (1 << v7)) == 0)
          goto LABEL_32;
        if (*(_DWORD *)(a1 + 36) != v6)
          goto LABEL_33;
        v17 = v16 & (-2 << (v7 & 0x3F));
        if (v17)
        {
          v10 = __clz(__rbit64(v17)) | v7 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = v12 + 1;
          v19 = (unint64_t)(v10 + 63) >> 6;
          if (v12 + 1 < v19)
          {
            v20 = *(_QWORD *)(v8 + 8 * v18);
            if (!v20)
            {
              v18 = v12 + 2;
              if (v12 + 2 >= v19)
                goto LABEL_5;
              v20 = *(_QWORD *)(v8 + 8 * v18);
              if (!v20)
              {
                v18 = v12 + 3;
                if (v12 + 3 >= v19)
                  goto LABEL_5;
                v20 = *(_QWORD *)(v8 + 8 * v18);
                if (!v20)
                {
                  while (v19 - 4 != v12)
                  {
                    v20 = *(_QWORD *)(a1 + 96 + 8 * v12++);
                    if (v20)
                    {
                      result = sub_1BDE27EC8(v7, v9, 0);
                      v18 = v12 + 3;
                      goto LABEL_18;
                    }
                  }
                  result = sub_1BDE27EC8(v7, v9, 0);
                  goto LABEL_5;
                }
              }
            }
LABEL_18:
            v10 = __clz(__rbit64(v20)) + (v18 << 6);
          }
        }
LABEL_5:
        v9 = v21;
        v7 = v10;
      }
      while (*(_DWORD *)(a1 + 36) == v6);
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

void CRAttributedString.Attributes.Keys.endIndex.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)v1 + 36);
  *(_QWORD *)a1 = 1 << *(_BYTE *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = 0;
}

double CRAttributedString.Attributes.Keys.index(after:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(void **);
  char v9;
  double result;
  __int128 v11;
  char v12;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  v7 = *v2;
  v8 = (uint64_t (*)(void **))v2[1];
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v5;
  v12 = v6;
  sub_1BDF2BCF8(v4, v5, v6);
  sub_1BDF2BCF8(v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BE1552EC((uint64_t)&v11, v7, v8);
  sub_1BDE27EC8(v4, v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  v9 = v12;
  result = *(double *)&v11;
  *(_OWORD *)a2 = v11;
  *(_BYTE *)(a2 + 16) = v9;
  return result;
}

id CRAttributedString.Attributes.Keys.subscript.getter(uint64_t a1)
{
  return (id)sub_1BE1555D8(a1);
}

uint64_t static CRAttributedString.Attributes.Keys.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (*v3)(id *);
  uint64_t v4;
  uint64_t (*v5)(id *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = (uint64_t (*)(id *))a1[1];
  v4 = *a2;
  v5 = (uint64_t (*)(id *))a2[1];
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BDEF6074(v2, v3);
  v7 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BDEF6074(v4, v5);
  v9 = sub_1BE14BAB4(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1BE14BAB4(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v32 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v33 = (unint64_t)(v4 + 63) >> 6;
  v35 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v34 = v3;
      v8 = v7 | (v3 << 6);
      goto LABEL_27;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v9 >= v33)
      return 1;
    v10 = *(_QWORD *)(v32 + 8 * v9);
    v11 = v3 + 1;
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v33)
        return 1;
      v10 = *(_QWORD *)(v32 + 8 * v11);
      if (!v10)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v33)
          return 1;
        v10 = *(_QWORD *)(v32 + 8 * v11);
        if (!v10)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v33)
            return 1;
          v10 = *(_QWORD *)(v32 + 8 * v11);
          if (!v10)
            break;
        }
      }
    }
LABEL_26:
    v6 = (v10 - 1) & v10;
    v34 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_27:
    v13 = result;
    v14 = *(void **)(*(_QWORD *)(result + 48) + 8 * v8);
    sub_1BE1B27C8();
    sub_1BE1B36F8();
    v15 = v14;
    sub_1BE1B2834();
    v16 = sub_1BE1B371C();
    swift_bridgeObjectRelease();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_42;
    v19 = sub_1BE1B27C8();
    v21 = v20;
    if (v19 == sub_1BE1B27C8() && v21 == v22)
    {
LABEL_7:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v24 = sub_1BE1B34AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        v25 = ~v17;
        while (1)
        {
          v18 = (v18 + 1) & v25;
          if (((*(_QWORD *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
            break;
          v26 = sub_1BE1B27C8();
          v28 = v27;
          if (v26 == sub_1BE1B27C8() && v28 == v29)
            goto LABEL_7;
          v31 = sub_1BE1B34AC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
            goto LABEL_8;
        }
LABEL_42:

        return 0;
      }
    }
LABEL_8:

    result = v13;
    v3 = v34;
  }
  v12 = v3 + 5;
  if (v3 + 5 >= v33)
    return 1;
  v10 = *(_QWORD *)(v32 + 8 * v12);
  if (v10)
  {
    v11 = v3 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v33)
      return 1;
    v10 = *(_QWORD *)(v32 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_26;
  }
LABEL_46:
  __break(1u);
  return result;
}

void (*sub_1BE14BDE8(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t (*v5)();
  uint64_t v6;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v5 = sub_1BE14BE74((uint64_t)v4, a2);
  v4[4] = v6;
  v4[5] = v5;
  return sub_1BE14BE48;
}

void sub_1BE14BE48(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 40))(*a1);
  free(v1);
}

uint64_t (*sub_1BE14BE74(uint64_t a1, uint64_t a2))()
{
  uint64_t *v2;

  sub_1BE155584(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *v2);
  return nullsub_1;
}

double sub_1BE14BEAC(uint64_t a1)
{
  char v2;
  double result;
  __int128 v4;
  char v5;

  CRAttributedString.Attributes.Keys.index(after:)(a1, (uint64_t)&v4);
  sub_1BDE27EC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v2;
  return result;
}

uint64_t sub_1BE14BEF8@<X0>(_QWORD *a1@<X8>)
{
  CRAttributedString.Attributes.Keys.makeIterator()(a1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE14BF24(uint64_t a1)
{
  MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRAttributedString<A>.Attributes.Keys, a1);
  return sub_1BE1B2CA8();
}

uint64_t sub_1BE14BF58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRAttributedString<A>.Attributes.Keys, a1);
  v4 = sub_1BE1AE084(v1, a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t CRAttributedString.Attributes.keys.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = sub_1BE14BFD0;
  a1[2] = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE14BFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  if (qword_1EF52B6C0 != -1)
    swift_once();
  v0 = sub_1BE1B27C8();
  v2 = v1;
  if (v0 == sub_1BE1B27C8() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_1BE1B34AC() ^ 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1BE14C084(uint64_t *a1, void **a2)
{
  static CRAttributedString.Attributes.== infix(_:_:)(a1, a2);
}

uint64_t sub_1BE14C098()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  result = swift_isUniquelyReferenced_native();
  v2 = *v0;
  if ((result & 1) != 0)
  {
    if (v2)
      return (uint64_t)objc_msgSend(*(id *)(v2 + 16), sel_useRenameIfAvailable);
    __break(1u);
  }
  else if (v2)
  {
    type metadata accessor for CRAttributedStringRef();
    v3 = swift_allocObject();
    v4 = *(void **)(v2 + 16);
    swift_retain();
    objc_msgSend(v4, sel_copy);
    sub_1BE1B2F3C();
    swift_unknownObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3900);
    swift_dynamicCast();
    *(_QWORD *)(v3 + 16) = v5;
    *v0 = v3;
    return swift_release();
  }
  __break(1u);
  return result;
}

void CRAttributedString.copy(renamingReferences:)(uint64_t *a1@<X8>)
{
  void *v2;

  CRAttributedString.attributedString.getter();
  CRAttributedString.init(_:)(v2, a1);
}

void CRAttributedString.attributedString.getter()
{
  uint64_t v0;
  id v1;

  if (*(_QWORD *)v0)
  {
    v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_attributedString);
    objc_opt_self();
    swift_dynamicCastObjCClassUnconditional();
  }
  else
  {
    __break(1u);
  }
}

void CRAttributedString.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for CRAttributedStringRef();
  v4 = swift_allocObject();
  sub_1BE149C38();
  CRAttributedString.insert(contentsOf:at:)((NSAttributedString)a1, 0);
  if (v4)
  {
    v5 = objc_msgSend(*(id *)(v4 + 16), sel_attributedString);
    objc_opt_self();
    v6 = (void *)swift_dynamicCastObjCClassUnconditional();
    if (qword_1EF52B6C0 != -1)
      swift_once();
    v7 = qword_1EF52B6B8;
    CRAttributedString.count.getter();
    objc_msgSend(v6, sel_removeAttribute_range_, v7, 0, v8, v4);
    swift_unknownObjectRelease();

    *a2 = v4;
  }
  else
  {
    __break(1u);
  }
}

{
  uint64_t v4;

  type metadata accessor for CRAttributedStringRef();
  v4 = swift_allocObject();
  sub_1BE149C38();

  *a2 = v4;
}

uint64_t CRAttributedString.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  type metadata accessor for CRAttributedStringRef();
  v2 = swift_allocObject();
  result = sub_1BE149C38();
  *a1 = v2;
  return result;
}

void CRAttributedString.init(_:string:)(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  CRAttributedString.init(_:)(a2, a3, &v7);
  v6 = v7;

  *a4 = v6;
}

uint64_t CRAttributedString.init(string:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = CRAttributedString.init(_:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

void CRAttributedString.init(_:string:)(void *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;

  CRAttributedString.init(_:)(a2, &v5);

  *a3 = v5;
}

uint64_t CRAttributedString.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  Swift::String v7;

  type metadata accessor for CRAttributedStringRef();
  v6 = swift_allocObject();
  sub_1BE149C38();
  *a3 = v6;
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  CRAttributedString.insert(contentsOf:at:)(v7, 0);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall CRAttributedString.insert(contentsOf:at:)(Swift::String contentsOf, Swift::Int at)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  _QWORD v14[6];

  sub_1BE14C098();
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1BE1B27A4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithString_, v5);

  if (*(_QWORD *)v2)
  {
    v7 = *(id *)(*(_QWORD *)v2 + 16);
    v8 = objc_msgSend(v6, sel_length);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v6;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_1BE15563C;
    *(_QWORD *)(v10 + 24) = v9;
    v14[4] = sub_1BE0CD098;
    v14[5] = v10;
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 1107296256;
    v14[2] = sub_1BDDFD740;
    v14[3] = &block_descriptor_13;
    v11 = _Block_copy(v14);
    v12 = v6;
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_insertAtIndex_length_getStorage_, at, v8, v11);

    _Block_release(v11);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  __break(1u);
}

void CRAttributedString.init(string:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  CRAttributedString.init(_:)(a1, &v3);
  *a2 = v3;
}

Swift::Void __swiftcall CRAttributedString.insert(contentsOf:at:)(NSAttributedString contentsOf, Swift::Int at)
{
  uint64_t v2;
  id v5;
  id v6;
  NSAttributedString *v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  char isEscapingClosureAtFileLocation;
  _QWORD v12[6];

  sub_1BE14C098();
  if (*(_QWORD *)v2)
  {
    v5 = *(id *)(*(_QWORD *)v2 + 16);
    v6 = -[objc_class length](contentsOf.super.isa, sel_length);
    v7 = (NSAttributedString *)swift_allocObject();
    v7[2].super.isa = contentsOf.super.isa;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = sub_1BE15563C;
    *(_QWORD *)(v8 + 24) = v7;
    v12[4] = sub_1BE0CD270;
    v12[5] = v8;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 1107296256;
    v12[2] = sub_1BDDFD740;
    v12[3] = &block_descriptor_13_1;
    v9 = _Block_copy(v12);
    v10 = contentsOf.super.isa;
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_insertAtIndex_length_getStorage_, at, v6, v9);

    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  __break(1u);
}

void CRAttributedString.count.getter()
{
  uint64_t v0;

  if (*(_QWORD *)v0)
  {
    objc_msgSend(objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_attributedString), sel_length);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void CRAttributedString.init(_:)(__int128 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  id v4;
  __int128 v5;
  uint64_t v6;

  v3 = *((_QWORD *)a1 + 2);
  v5 = *a1;
  v6 = v3;
  v4 = CRAttributedString.Substring.attributedString.getter();
  swift_release();
  CRAttributedString.init(_:)(v4, (uint64_t *)&v5);
  *a2 = v5;
}

id CRAttributedString.Substring.attributedString.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id result;
  id v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = objc_msgSend(*(id *)(v0[2] + 16), sel_attributedString);
  objc_opt_self();
  result = (id)swift_dynamicCastObjCClassUnconditional();
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
  }
  else
  {
    v5 = objc_msgSend(result, sel_attributedSubstringFromRange_, v1, v2 - v1);
    swift_unknownObjectRelease();
    return v5;
  }
  return result;
}

Swift::Void __swiftcall CRAttributedString.append(_:)(Swift::String a1)
{
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD v21[6];

  sub_1BE14C098();
  v2 = *v1;
  v21[0] = *v1;
  CRAttributedString.attributedString.getter();
  v4 = v3;
  v5 = (uint64_t)objc_msgSend(v3, sel_length, v21[0]);

  if (v5 < 1)
  {
    sub_1BE126A08(MEMORY[0x1E0DEE9D8]);
    goto LABEL_6;
  }
  v21[0] = v2;
  CRAttributedString.attributedString.getter();
  if (v2)
  {
    v7 = v6;
    v8 = (char *)objc_msgSend(objc_msgSend(*(id *)(v2 + 16), sel_attributedString, v21[0]), sel_length);
    swift_unknownObjectRelease();
    if (__OFSUB__(v8, 1))
      goto LABEL_9;
    v9 = objc_msgSend(v7, sel_attributesAtIndex_effectiveRange_, v8 - 1, 0);

    type metadata accessor for Key(0);
    sub_1BDF0DB98();
    sub_1BE1B25AC();

LABEL_6:
    v10 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BE1B27A4();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BDF0DB98();
    v12 = (void *)sub_1BE1B25A0();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v10, sel_initWithString_attributes_, v11, v12);

    if (!v2)
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
    v14 = *(id *)(v2 + 16);
    v15 = objc_msgSend(v14, sel_length);
    v16 = objc_msgSend(v13, sel_length);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v13;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1BE15563C;
    *(_QWORD *)(v18 + 24) = v17;
    v21[4] = sub_1BE0CD270;
    v21[5] = v18;
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 1107296256;
    v21[2] = sub_1BDDFD740;
    v21[3] = &block_descriptor_23_0;
    v19 = _Block_copy(v21);
    v20 = v13;
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_insertAtIndex_length_getStorage_, v15, v16, v19);

    _Block_release(v19);
    LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v14 & 1) == 0)
      return;
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

void CRAttributedString.removeSubrange(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  sub_1BE14C098();
  v5 = *v2;
  if (*v2)
  {
    v6 = a2 - a1;
    if (__OFSUB__(a2, a1))
    {
      __break(1u);
    }
    else
    {
      v7 = v6 + 1;
      if (!__OFADD__(v6, 1))
      {
        v8 = *(id *)(v5 + 16);
        objc_msgSend(v8, sel_removeObjectsInRange_, a1, v7);

        return;
      }
    }
    __break(1u);
  }
  __break(1u);
}

{
  uint64_t v2;
  uint64_t v3;
  id v5;

  v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  if (v3 >= 1)
  {
    sub_1BE14C098();
    if (*(_QWORD *)v2)
    {
      v5 = *(id *)(*(_QWORD *)v2 + 16);
      objc_msgSend(v5, sel_removeObjectsInRange_, a1, v3);

      return;
    }
    goto LABEL_7;
  }
}

void CRAttributedString.replaceSubrange(_:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  sub_1BE14C098();
  v5 = *v2;
  if (*v2)
  {
    v6 = a2 - a1;
    if (!__OFSUB__(a2, a1))
    {
      v7 = (objc_class *)MEMORY[0x1E0CB3498];
      v8 = *(id *)(v5 + 16);
      v9 = objc_allocWithZone(v7);
      swift_bridgeObjectRetain();
      v10 = (void *)sub_1BE1B27A4();
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(v9, sel_initWithString_, v10);

      objc_msgSend(v8, sel_replaceStorageInRange_withStorage_, a1, v6, v11);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t CRAttributedString.Runs.Run.range.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CRAttributedString.Runs.Run.range.setter(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*CRAttributedString.Runs.Run.range.modify())()
{
  return nullsub_1;
}

uint64_t CRAttributedString.Runs.Run.attributes.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t CRAttributedString.Runs.Run.attributes.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*CRAttributedString.Runs.Run.attributes.modify())()
{
  return nullsub_1;
}

uint64_t CRAttributedString.Runs.Run.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  CRAttributedString.Attributes.subscript.getter(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t static CRAttributedString.Runs.Run.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  char v3;
  uint64_t v4;
  void *v6;
  uint64_t v7;

  if (*a1 == *a2 && a1[1] == a2[1])
  {
    v4 = a1[2];
    v6 = (void *)a2[2];
    v7 = v4;
    static CRAttributedString.Attributes.== infix(_:_:)(&v7, &v6);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1BE14CFD8(_QWORD *a1, _QWORD *a2)
{
  return static CRAttributedString.Runs.Run.== infix(_:_:)(a1, a2);
}

void CRAttributedString.Runs.next()(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = *v1;
  v4 = v1[1];
  if (*v1 == v4)
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    return;
  }
  v12 = 0;
  v13 = 0;
  v5 = objc_msgSend(*(id *)(v1[2] + 16), sel_attributedString);
  objc_opt_self();
  v6 = (void *)swift_dynamicCastObjCClassUnconditional();
  if (__OFSUB__(v4, v3))
  {
    __break(1u);
    goto LABEL_20;
  }
  v7 = objc_msgSend(v6, sel_attributesAtIndex_longestEffectiveRange_inRange_, v3, &v12, v3, v4 - v3);
  swift_unknownObjectRelease();
  type metadata accessor for Key(0);
  sub_1BDF0DB98();
  v8 = sub_1BE1B25AC();

  v9 = v12;
  v10 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  if (v10 < v12)
    goto LABEL_21;
  if (v10 >= v3)
    v11 = v3;
  else
    v11 = v12 + v13;
  if (v3 < v12)
    v11 = v12;
  if (v4 > v12)
    v9 = v4;
  if (v10 < v4)
    v9 = v12 + v13;
  *a1 = v11;
  a1[1] = v9;
  a1[2] = v8;
  if (v10 >= v1[1])
    v10 = v1[1];
  *v1 = v10;
}

uint64_t sub_1BE14D168()
{
  uint64_t v0;

  v0 = sub_1BE155AA4();
  swift_release();
  return v0;
}

void CRAttributedString.runs.getter(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  CRAttributedString.count.getter();
  if (v4 < 0)
  {
    __break(1u);
  }
  else if (v3)
  {
    *a1 = 0;
    a1[1] = v4;
    a1[2] = v3;
    swift_retain();
    return;
  }
  __break(1u);
}

uint64_t CRAttributedString.Substring.startIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CRAttributedString.Substring.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t CRAttributedString.Substring.runs.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_QWORD *)(a1 + 16) = v2;
  return swift_retain();
}

id sub_1BE14D220()
{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *(_QWORD *)(v0 + 16);
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    return objc_msgSend(*(id *)(v2 + 16), sel_useRenameIfAvailable);
  type metadata accessor for CRAttributedStringRef();
  v4 = swift_allocObject();
  v5 = *(void **)(v2 + 16);
  swift_retain();
  objc_msgSend(v5, sel_copy);
  sub_1BE1B2F3C();
  swift_unknownObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3900);
  swift_dynamicCast();
  *(_QWORD *)(v4 + 16) = v6;
  *(_QWORD *)(v0 + 16) = v4;
  return (id)swift_release();
}

void CRAttributedString.Substring.attributes.getter(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;

  v3 = *v1;
  v4 = objc_msgSend(*(id *)(v1[2] + 16), sel_attributedString);
  objc_opt_self();
  v5 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_attributesAtIndex_effectiveRange_, v3, 0);
  swift_unknownObjectRelease();
  type metadata accessor for Key(0);
  sub_1BDF0DB98();
  v6 = sub_1BE1B25AC();

  *a1 = v6;
}

void sub_1BE14D3D0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CRAttributedString.Substring.attributes.getter(&v2);
  *a1 = v2;
}

uint64_t sub_1BE14D418(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(_QWORD *)(a4 + a3 - 16);
  v5 = *(_QWORD *)(a4 + a3 - 8);
  v7 = *a1;
  type metadata accessor for CRAttributedString.Substring(0, v4, v5, a4);
  swift_bridgeObjectRetain();
  return CRAttributedString.Substring.attributes.setter(&v7);
}

uint64_t CRAttributedString.Substring.attributes.setter(uint64_t *a1)
{
  uint64_t *v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  objc_class *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  int *v25;
  id v26;
  id v27;
  uint64_t v28;
  objc_super v29;
  _QWORD aBlock[6];
  uint64_t v31;

  v3 = (int *)type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  sub_1BE14D220();
  v7 = v1[2];
  v8 = objc_msgSend(*(id *)(v7 + 16), sel_attributedString);
  objc_opt_self();
  v9 = (void *)swift_dynamicCastObjCClassUnconditional();
  v11 = *v1;
  v10 = v1[1];
  v12 = v10 - *v1;
  if (__OFSUB__(v10, *v1))
  {
    __break(1u);
  }
  else
  {
    v27 = v8;
    v28 = v6;
    v25 = v3;
    v26 = v9;
    v13 = objc_msgSend(*(id *)(v7 + 16), sel_attributedString);
    objc_opt_self();
    v3 = (int *)swift_dynamicCastObjCClassUnconditional();
    v31 = 0;
    if (qword_1EF52B6C0 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v14 = qword_1EF52B6B8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = &v31;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BE1556DC;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1BDD843C8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BE149EF8;
  aBlock[3] = &block_descriptor_32_0;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_enumerateAttribute_inRange_options_usingBlock_, v14, v11, v12, 0x100000, v17);
  swift_unknownObjectRelease();
  _Block_release(v17);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v17 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v19 = v31;
    swift_release();
    aBlock[0] = v28;
    result = sub_1BE1B1F4C();
    if (!__OFADD__(v19, 1))
    {
      *(_QWORD *)&v5[v25[5]] = v19 + 1;
      v20 = (objc_class *)type metadata accessor for ObjCFinalizedTimestamp(0);
      v21 = objc_allocWithZone(v20);
      sub_1BDD9C318((uint64_t)v5, (uint64_t)v21 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, type metadata accessor for FinalizedTimestamp);
      v29.receiver = v21;
      v29.super_class = v20;
      v22 = objc_msgSendSuper2(&v29, sel_init);
      sub_1BDD9C3E0((uint64_t)v5, type metadata accessor for FinalizedTimestamp);
      sub_1BE14ADDC((uint64_t)v22);
      type metadata accessor for Key(0);
      sub_1BDF0DB98();
      v23 = (void *)sub_1BE1B25A0();
      swift_bridgeObjectRelease();
      objc_msgSend(v26, sel_setAttributes_range_, v23, v11, v12);

      return swift_unknownObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t (*CRAttributedString.Substring.attributes.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;

  a1[1] = a2;
  a1[2] = v2;
  CRAttributedString.Substring.attributes.getter(a1);
  return sub_1BE14D818;
}

uint64_t sub_1BE14D818(uint64_t *a1, char a2)
{
  uint64_t v3;

  v3 = *a1;
  if ((a2 & 1) == 0)
    return CRAttributedString.Substring.attributes.setter(&v3);
  swift_bridgeObjectRetain();
  CRAttributedString.Substring.attributes.setter(&v3);
  return swift_bridgeObjectRelease();
}

uint64_t CRAttributedString.Substring.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t AssociatedTypeWitness;
  int v13;
  uint64_t v15;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;

  v6 = *a1;
  v7 = *v3;
  v8 = objc_msgSend(*(id *)(v3[2] + 16), sel_attributedString);
  objc_opt_self();
  v9 = (void *)swift_dynamicCastObjCClassUnconditional();
  (*(void (**)(_QWORD, uint64_t))(a2 + 40))(*(_QWORD *)(*MEMORY[0x1E0DEC880] + v6 + 8), a2);
  v10 = (void *)sub_1BE1B27A4();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_attribute_atIndex_effectiveRange_, v10, v7, 0);

  if (v11)
  {
    sub_1BE1B2F3C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_1BDDA2EF0((uint64_t)v16, (uint64_t)&v17, qword_1EF52B750);
  if (!*((_QWORD *)&v18 + 1))
  {
    swift_unknownObjectRelease();
    sub_1BDD86E30((uint64_t)&v17, qword_1EF52B750);
LABEL_9:
    v17 = 0u;
    v18 = 0u;
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)v15 + 80))(&v17);
  swift_release();
  swift_unknownObjectRelease();
LABEL_10:
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF52B750);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, v13 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_1BE14DAA4@<X0>(uint64_t **a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t *v5;

  v4 = *(uint64_t *)((char *)a1 + a2 - 8);
  v5 = *a1;
  swift_retain();
  CRAttributedString.Substring.subscript.getter(v5, v4, a3);
  return swift_release();
}

uint64_t sub_1BE14DB14(uint64_t a1, uint64_t a2, _QWORD **a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(uint64_t *)((char *)a3 + a4 - 8);
  swift_getAssociatedTypeWitness();
  v7 = sub_1BE1B2EE8();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  v10 = *a3;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v14 - v8, a1);
  swift_retain();
  return CRAttributedString.Substring.subscript.setter((uint64_t)v9, v10, v12, v6);
}

uint64_t CRAttributedString.Substring.subscript.setter(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  objc_class *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t inited;
  void *v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t AssociatedConformanceWitness;
  uint64_t v55;
  void *v56;
  uint64_t *v57;
  char *v58;
  char *v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  objc_super v73;
  _QWORD aBlock[6];
  uint64_t v75;

  v7 = *(_QWORD *)(*MEMORY[0x1E0DEC880] + *a2 + 8);
  v65 = a4;
  v64 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_1BE1B2EE8();
  v67 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v57 - v11;
  v68 = AssociatedTypeWitness;
  v71 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v59 = (char *)&v57 - v15;
  v63 = (int *)type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1E0C80A78](v63);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE14D220();
  v18 = v4[2];
  v19 = objc_msgSend(*(id *)(v18 + 16), sel_attributedString);
  v20 = (void *)0x1E0CB3000;
  objc_opt_self();
  v66 = v19;
  v21 = (void *)swift_dynamicCastObjCClassUnconditional();
  v23 = *v4;
  v22 = v4[1];
  v24 = __OFSUB__(v22, *v4);
  v72 = v22 - *v4;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    v60 = v21;
    v62 = a2;
    v69 = v9;
    v70 = a1;
    v25 = objc_msgSend(*(id *)(v18 + 16), sel_attributedString);
    objc_opt_self();
    v20 = (void *)swift_dynamicCastObjCClassUnconditional();
    v75 = 0;
    if (qword_1EF52B6C0 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v26 = qword_1EF52B6B8;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = &v75;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_1BE1565F0;
  *(_QWORD *)(v28 + 24) = v27;
  aBlock[4] = sub_1BDE3494C;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BE149EF8;
  aBlock[3] = &block_descriptor_43_0;
  v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v61 = v23;
  objc_msgSend(v20, sel_enumerateAttribute_inRange_options_usingBlock_, v26, v23, v72, 0x100000, v29);
  swift_unknownObjectRelease();
  _Block_release(v29);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  v32 = v68;
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v33 = v75;
  swift_release();
  result = sub_1BE1B1F4C();
  if (__OFADD__(v33, 1))
  {
LABEL_11:
    __break(1u);
    return result;
  }
  *(_QWORD *)&v17[v63[5]] = v33 + 1;
  v34 = (objc_class *)type metadata accessor for ObjCFinalizedTimestamp(0);
  v35 = objc_allocWithZone(v34);
  sub_1BDD9C318((uint64_t)v17, (uint64_t)v35 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, type metadata accessor for FinalizedTimestamp);
  v73.receiver = v35;
  v73.super_class = v34;
  v36 = objc_msgSendSuper2(&v73, sel_init);
  sub_1BDD9C3E0((uint64_t)v17, type metadata accessor for FinalizedTimestamp);
  v37 = v67;
  v38 = v70;
  v39 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v12, v70, v69);
  v40 = v71;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v12, 1, v32) == 1)
  {
    v41 = *(void (**)(char *, uint64_t))(v37 + 8);
    v41(v12, v39);
    v42 = v60;
    v43 = v61;
    v44 = v72;
    objc_msgSend(v60, sel_addAttribute_value_range_, qword_1EF52B6B8, v36, v61, v72);
    (*(void (**)(void))(v65 + 40))();
    v45 = (void *)sub_1BE1B27A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v42, sel_removeAttribute_range_, v45, v43, v44);

    swift_release();
    swift_unknownObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v41)(v38, v39);
  }
  else
  {
    v46 = v59;
    (*(void (**)(void))(v40 + 32))();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EF530B90);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BE1B61C0;
    v48 = (void *)qword_1EF52B6B8;
    *(_QWORD *)(inited + 64) = v34;
    *(_QWORD *)(inited + 32) = v48;
    *(_QWORD *)(inited + 40) = v36;
    v57 = (uint64_t *)(inited + 80);
    v49 = v65;
    v50 = *(void (**)(uint64_t, uint64_t))(v65 + 40);
    v51 = v48;
    v63 = (int *)v36;
    v50(v64, v49);
    v52 = sub_1BE1B27A4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 72) = v52;
    v53 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v58, v46, v32);
    *(_QWORD *)(inited + 104) = &type metadata for AnyCRValue;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v55 = swift_getAssociatedConformanceWitness();
    AnyCRValue.init<A>(_:)(v53, v32, AssociatedConformanceWitness, v55, v57);
    sub_1BE126A08(inited);
    type metadata accessor for Key(0);
    sub_1BDF0DB98();
    v56 = (void *)sub_1BE1B25A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v60, sel_addAttributes_range_, v56, v61, v72);

    swift_release();
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v70, v69);
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v46, v32);
  }
}

void (*CRAttributedString.Substring.subscript.modify(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  swift_getAssociatedTypeWitness();
  v10 = sub_1BE1B2EE8();
  v9[4] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  CRAttributedString.Substring.subscript.getter(a2, a4, (uint64_t)v13);
  return sub_1BE14E3DC;
}

void sub_1BE14E3DC(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    v7 = v2[2];
    v8 = (_QWORD *)*v2;
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    swift_retain();
    CRAttributedString.Substring.subscript.setter((uint64_t)v3, v8, v9, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v10 = v2[2];
    v11 = (_QWORD *)*v2;
    swift_retain();
    CRAttributedString.Substring.subscript.setter((uint64_t)v4, v11, v12, v10);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t CRAttributedString.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t result;

  result = *v3;
  if (*v3)
  {
    *a3 = a1;
    a3[1] = a2;
    a3[2] = result;
    return swift_retain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1BE14E4B4@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  uint64_t v6;

  CRAttributedString.subscript.getter(*a1, a1[1], &v5);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1BE14E500(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, char);
  _QWORD *v9;
  _BYTE v11[32];

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  swift_retain();
  v8 = CRAttributedString.subscript.modify((uint64_t (*)(uint64_t, char))v11, v3, v4);
  *v9 = v5;
  v9[1] = v6;
  v9[2] = v7;
  swift_release();
  return v8((uint64_t)v11, 0);
}

uint64_t (*CRAttributedString.subscript.modify(uint64_t (*result)(uint64_t a1, char a2), uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;

  *((_QWORD *)result + 3) = v3;
  v4 = *v3;
  if (*v3)
  {
    *(_QWORD *)result = a2;
    *((_QWORD *)result + 1) = a3;
    *((_QWORD *)result + 2) = v4;
    *v3 = 0;
    return sub_1BE14E5A8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BE14E5A8(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(a1 + 16);
  if ((a2 & 1) == 0)
  {
    v3 = *(_QWORD **)(a1 + 24);
    swift_retain();
    swift_release();
    *v3 = v2;
  }
  return swift_release();
}

uint64_t CRAttributedString.subscript.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;

  result = *v1;
  if (*v1)
  {
    v4 = *(_QWORD *)(a1 + 16);
    result = swift_release();
    *v1 = v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CRAttributedString.attributes(at:effectiveRange:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  id v7;
  id v8;
  uint64_t v9;

  if (*(_QWORD *)v3)
  {
    v7 = objc_msgSend(*(id *)(*(_QWORD *)v3 + 16), sel_attributedString);
    objc_opt_self();
    v8 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_attributesAtIndex_effectiveRange_, a1, a2);
    swift_unknownObjectRelease();
    type metadata accessor for Key(0);
    sub_1BDF0DB98();
    v9 = sub_1BE1B25AC();

    *a3 = v9;
  }
  else
  {
    __break(1u);
  }
}

uint64_t CRAttributedString.setAttributes(_:range:)(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;

  v5 = *a1;
  if (v5)
    v6 = v5;
  else
    v6 = sub_1BE126A08(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  sub_1BE14E770(v6, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE14E770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char *receiver;
  void *v21;
  id v22;
  objc_class *v23;
  id v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  objc_super v34[2];
  objc_super v35;
  __int128 aBlock;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  objc_class *v38;
  uint64_t (*v39)();
  uint64_t v40;

  v32 = a2;
  v6 = type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BE14C098();
  v10 = *v3;
  if (*v3)
  {
    v29 = v6;
    v11 = objc_msgSend(*(id *)(v10 + 16), sel_attributedString);
    objc_opt_self();
    v31 = v11;
    v30 = (id)swift_dynamicCastObjCClassUnconditional();
    v12 = objc_msgSend(*(id *)(v10 + 16), sel_attributedString);
    objc_opt_self();
    v13 = swift_dynamicCastObjCClassUnconditional();
    v34[0].receiver = 0;
    if (qword_1EF52B6C0 != -1)
      swift_once();
    v14 = qword_1EF52B6B8;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v34;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1BE1565F0;
    *(_QWORD *)(v16 + 24) = v15;
    v39 = sub_1BDE3494C;
    v40 = v16;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v37 = sub_1BE149EF8;
    v38 = (objc_class *)&block_descriptor_173;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v18 = (void *)v13;
    v19 = v32;
    objc_msgSend(v18, sel_enumerateAttribute_inRange_options_usingBlock_, v14, v32, a3, 0x100000, v17);
    swift_unknownObjectRelease();
    _Block_release(v17);
    LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v14 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      receiver = (char *)v34[0].receiver;
      swift_release();
      v21 = (void *)qword_1EF52B6B8;
      swift_bridgeObjectRetain();
      v22 = v21;
      result = sub_1BE1B1F4C();
      if (!__OFADD__(receiver, 1))
      {
        *(_QWORD *)&v8[*(int *)(v29 + 20)] = receiver + 1;
        v23 = (objc_class *)type metadata accessor for ObjCFinalizedTimestamp(0);
        v24 = objc_allocWithZone(v23);
        sub_1BDD9C318((uint64_t)v8, (uint64_t)v24 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, type metadata accessor for FinalizedTimestamp);
        v35.receiver = v24;
        v35.super_class = v23;
        v25 = objc_msgSendSuper2(&v35, sel_init);
        sub_1BDD9C3E0((uint64_t)v8, type metadata accessor for FinalizedTimestamp);
        v38 = v23;
        *(_QWORD *)&aBlock = v25;
        sub_1BDE77688(&aBlock, v34);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v33 = a1;
        sub_1BE1541C0(v34, v22, isUniquelyReferenced_nonNull_native);

        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1BDF0DB98();
        v27 = (void *)sub_1BE1B25A0();
        swift_bridgeObjectRelease();
        objc_msgSend(v30, sel_setAttributes_range_, v27, v19, a3);

        return swift_unknownObjectRelease();
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE14EB0C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _BYTE v12[32];

  if (*(_QWORD *)v2)
  {
    v3 = result;
    v4 = objc_msgSend(*(id *)(*(_QWORD *)v2 + 16), sel_characterRangesForMergeableRange_, a2);
    v5 = sub_1BE1B2978();

    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = v5 + 32;
      do
      {
        sub_1BDDC1538(v7, (uint64_t)v12);
        sub_1BDDC6C38(0, &qword_1EF530EB0);
        if (swift_dynamicCast())
        {
          v8 = objc_msgSend(v11, sel_rangeValue);
          v10 = v9;

          sub_1BE14E770(v3, (uint64_t)v8, v10);
        }
        v7 += 32;
        --v6;
      }
      while (v6);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CRAttributedString.addAttributes(_:range:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char *receiver;
  void *v22;
  id v23;
  objc_class *v24;
  id v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35[2];
  objc_super v36;
  __int128 aBlock;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  objc_class *v39;
  uint64_t (*v40)();
  uint64_t v41;

  v33 = a2;
  v6 = type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  result = sub_1BE14C098();
  v11 = *v3;
  if (*v3)
  {
    v30 = v6;
    v12 = objc_msgSend(*(id *)(v11 + 16), sel_attributedString);
    objc_opt_self();
    v32 = v12;
    v31 = (id)swift_dynamicCastObjCClassUnconditional();
    v13 = objc_msgSend(*(id *)(v11 + 16), sel_attributedString);
    objc_opt_self();
    v14 = swift_dynamicCastObjCClassUnconditional();
    v35[0].receiver = 0;
    if (qword_1EF52B6C0 != -1)
      swift_once();
    v15 = qword_1EF52B6B8;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v35;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_1BE1565F0;
    *(_QWORD *)(v17 + 24) = v16;
    v40 = sub_1BDE3494C;
    v41 = v17;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v38 = sub_1BE149EF8;
    v39 = (objc_class *)&block_descriptor_54;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v19 = (void *)v14;
    v20 = v33;
    objc_msgSend(v19, sel_enumerateAttribute_inRange_options_usingBlock_, v15, v33, a3, 0x100000, v18);
    swift_unknownObjectRelease();
    _Block_release(v18);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v15 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      receiver = (char *)v35[0].receiver;
      swift_release();
      v22 = (void *)qword_1EF52B6B8;
      swift_bridgeObjectRetain();
      v23 = v22;
      result = sub_1BE1B1F4C();
      if (!__OFADD__(receiver, 1))
      {
        *(_QWORD *)&v8[*(int *)(v30 + 20)] = receiver + 1;
        v24 = (objc_class *)type metadata accessor for ObjCFinalizedTimestamp(0);
        v25 = objc_allocWithZone(v24);
        sub_1BDD9C318((uint64_t)v8, (uint64_t)v25 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, type metadata accessor for FinalizedTimestamp);
        v36.receiver = v25;
        v36.super_class = v24;
        v26 = objc_msgSendSuper2(&v36, sel_init);
        sub_1BDD9C3E0((uint64_t)v8, type metadata accessor for FinalizedTimestamp);
        v39 = v24;
        *(_QWORD *)&aBlock = v26;
        sub_1BDE77688(&aBlock, v35);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v34 = v9;
        sub_1BE1541C0(v35, v23, isUniquelyReferenced_nonNull_native);

        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1BDF0DB98();
        v28 = (void *)sub_1BE1B25A0();
        swift_bridgeObjectRelease();
        objc_msgSend(v31, sel_addAttributes_range_, v28, v20, a3);

        return swift_unknownObjectRelease();
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *CRAttributedString.merge(_:)(uint64_t *result)
{
  uint64_t *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v2 = *result;
  if (*v1)
  {
    if (v2)
      v3 = *v1 == v2;
    else
      v3 = 0;
    if (v3)
      return result;
    result = (uint64_t *)sub_1BE14C098();
    v4 = *v1;
    if (!*v1)
    {
LABEL_13:
      __break(1u);
      return result;
    }
    if (v2)
      return (uint64_t *)objc_msgSend(*(id *)(v4 + 16), sel_mergeWithString_optimized_, *(_QWORD *)(v2 + 16), 0);
    __break(1u);
  }
  if (v2)
  {
    result = (uint64_t *)sub_1BE14C098();
    v4 = *v1;
    if (*v1)
      return (uint64_t *)objc_msgSend(*(id *)(v4 + 16), sel_mergeWithString_optimized_, *(_QWORD *)(v2 + 16), 0);
    goto LABEL_13;
  }
  return result;
}

void sub_1BE14F080(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;

  v2 = *a1;
  v3 = *v1;
  sub_1BDDC6C38(0, (unint64_t *)&qword_1ED6EF860);
  CRAttributedString.attributedString.getter();
  v5 = v4;
  CRAttributedString.attributedString.getter();
  v7 = v6;
  v8 = sub_1BE1B2EC4();

  if ((v8 & 1) != 0)
  {
    if (v3)
    {
      if (v2)
      {
        objc_msgSend(*(id *)(v3 + 16), sel_graphIsEqual_, *(_QWORD *)(v2 + 16));
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t static CRAttributedString.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v5[2];

  v2 = *a1;
  v5[0] = *a2;
  v5[1] = v2;
  sub_1BE14F080(v5);
  return v3 & 1;
}

uint64_t CRAttributedString.visitReferences(_:)(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD aBlock[6];
  __int128 v12[2];

  CRAttributedString.attributedString.getter();
  v3 = v2;
  CRAttributedString.attributedString.getter();
  v5 = v4;
  v6 = objc_msgSend(v4, sel_length);

  sub_1BDED9AB0(a1, (uint64_t)v12);
  v7 = swift_allocObject();
  sub_1BDD85B8C(v12, v7 + 16);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BE155758;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_1BDD843C8;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BE149BB0;
  aBlock[3] = &block_descriptor_63;
  v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_enumerateAttributesInRange_options_usingBlock_, 0, v6, 0, v9);

  _Block_release(v9);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1BE14F2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29[32];
  _OWORD v30[2];
  uint64_t v31;
  void *v32;
  __int128 v33;

  v26 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = 0;
  v25 = swift_bridgeObjectRetain() + 104;
  if (v8)
    goto LABEL_24;
LABEL_6:
  v11 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v11 >= v9)
    {
      v14 = v10;
    }
    else
    {
      v12 = *(_QWORD *)(v26 + 8 * v11);
      if (v12)
      {
LABEL_9:
        v8 = (v12 - 1) & v12;
        v13 = __clz(__rbit64(v12)) + (v11 << 6);
        v10 = v11;
        goto LABEL_25;
      }
      v14 = v10 + 1;
      if (v10 + 2 < v9)
      {
        v12 = *(_QWORD *)(v26 + 8 * (v10 + 2));
        if (v12)
        {
          v11 = v10 + 2;
          goto LABEL_9;
        }
        v14 = v10 + 2;
        if (v10 + 3 < v9)
        {
          v12 = *(_QWORD *)(v26 + 8 * (v10 + 3));
          if (v12)
          {
            v11 = v10 + 3;
            goto LABEL_9;
          }
          v11 = v10 + 4;
          v14 = v10 + 3;
          if (v10 + 4 < v9)
          {
            v12 = *(_QWORD *)(v26 + 8 * v11);
            if (v12)
              goto LABEL_9;
            while (v9 - 5 != v10)
            {
              v12 = *(_QWORD *)(v25 + 8 * v10++);
              if (v12)
              {
                v11 = v10 + 4;
                goto LABEL_9;
              }
            }
            v14 = v9 - 1;
          }
        }
      }
    }
    v8 = 0;
    v31 = 0;
    v10 = v14;
    memset(v30, 0, sizeof(v30));
    while (1)
    {
      sub_1BDDA2EF0((uint64_t)v30, (uint64_t)&v32, &qword_1EF52B6B0);
      v19 = v32;
      if (!v32)
      {
        swift_release();
        return;
      }
      sub_1BDE77688(&v33, v30);
      if (qword_1EF52B6C0 != -1)
        swift_once();
      v20 = sub_1BE1B27C8();
      v22 = v21;
      if (v20 == sub_1BE1B27C8() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v24 = sub_1BE1B34AC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          sub_1BDDC1538((uint64_t)v30, (uint64_t)v29);
          swift_dynamicCast();
          (*(void (**)(uint64_t))(*(_QWORD *)v28 + 120))(a5);
          swift_release();

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
          if (!v8)
            goto LABEL_6;
          goto LABEL_24;
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);

      if (!v8)
        goto LABEL_6;
LABEL_24:
      v15 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v15 | (v10 << 6);
LABEL_25:
      v16 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)&v30[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
      v17 = *(void **)&v30[0];
      sub_1BDDC1538(v16 + 32 * v13, (uint64_t)v30 + 8);
      v18 = v17;
    }
  }
  __break(1u);
}

Swift::Bool __swiftcall CRAttributedString.needToFinalizeTimestamps()()
{
  uint64_t v0;
  Swift::Bool result;

  if (*(_QWORD *)v0)
    return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_needToFinalizeTimestamps);
  __break(1u);
  return result;
}

id CRAttributedString.finalizeTimestamps(_:)(id result)
{
  uint64_t v1;
  id v2;

  if (!*(_QWORD *)v1)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v2 = result;
  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_needToFinalizeTimestamps);
  if ((_DWORD)result)
  {
    result = (id)sub_1BE14C098();
    if (*(_QWORD *)v1)
      return objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_finalizeTimestamps_, v2);
    goto LABEL_7;
  }
  return result;
}

_QWORD *CRAttributedString.actionUndoingDifference(from:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  void *v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, int);
  uint64_t v40;
  id v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD v44[3];
  uint64_t aBlock;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;

  v6 = *result;
  v7 = *v3;
  if (*v3)
  {
    if (v6)
    {
      if (v7 == v6)
        goto LABEL_7;
    }
    else
    {
      swift_retain();
    }
  }
  else
  {
    swift_retain();
    if (!v6)
    {
      result = (_QWORD *)swift_retain();
LABEL_7:
      *a3 = 0;
      a3[1] = 0;
      return result;
    }
  }
  aBlock = v6;
  v44[0] = v7;
  if ((CRAttributedString.hasDelta(from:)(v44) & 1) != 0)
  {
    v44[0] = v7;
    v51 = v6;
    v8 = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRAttributedString<A>, a2);
    CRDT.merging(_:)((uint64_t)&v51, a2, v8, (uint64_t)&aBlock);
    v44[0] = aBlock;
    v51 = v6;
    CRAttributedString.actionUndoingDifference(from:)(&v51, a2);
    return (_QWORD *)swift_release();
  }
  v9 = MEMORY[0x1E0DEE9D8];
  v51 = MEMORY[0x1E0DEE9D8];
  result = (_QWORD *)swift_allocObject();
  result[2] = v9;
  if (!v7)
    goto LABEL_27;
  if (v6)
  {
    v10 = result;
    v11 = *(void **)(v7 + 16);
    v12 = *(void **)(v6 + 16);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(v13 + 32) = v10;
    *(_QWORD *)(v13 + 40) = v7;
    *(_QWORD *)(v13 + 48) = v6;
    v49 = sub_1BE155798;
    v50 = v13;
    aBlock = MEMORY[0x1E0C809B0];
    v46 = 1107296256;
    v47 = sub_1BE151CAC;
    v48 = &block_descriptor_72;
    v14 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v15 = v11;
    v16 = v12;
    swift_retain();
    swift_release();
    v17 = objc_msgSend(v15, sel_undoCommandToChangeFrom_unedited_, v16, v14);
    _Block_release(v14);

    objc_msgSend(*(id *)(v6 + 16), sel_attributedString);
    objc_opt_self();
    v18 = swift_dynamicCastObjCClassUnconditional();
    swift_beginAccess();
    v19 = (_QWORD *)v10[2];
    v20 = v19[2];
    if (v20)
    {
      v41 = v17;
      v42 = a3;
      v21 = v19[4];
      v22 = v19[5];
      v23 = (void *)v18;
      v24 = (void *)v19[6];
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = v21;
      v25[3] = v22;
      v25[4] = v24;
      v25[5] = &v51;
      v26 = v24;
      v43 = v19;
      swift_bridgeObjectRetain();
      sub_1BDE0D5B8(0);
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = sub_1BE1557E8;
      *(_QWORD *)(v27 + 24) = v25;
      v49 = sub_1BDE3494C;
      v50 = v27;
      aBlock = MEMORY[0x1E0C809B0];
      v46 = 1107296256;
      v47 = sub_1BE149BB0;
      v48 = &block_descriptor_82;
      v28 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v29 = v23;
      objc_msgSend(v23, sel_enumerateAttributesInRange_options_usingBlock_, v21, v22, 0, v28);

      _Block_release(v28);
      LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
      result = (_QWORD *)swift_release();
      if ((v26 & 1) != 0)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v30 = v20 - 1;
      if (v20 != 1)
      {
        v31 = (void **)(v43 + 9);
        do
        {
          v33 = (uint64_t)*(v31 - 2);
          v32 = (uint64_t)*(v31 - 1);
          v34 = *v31;
          v35 = (_QWORD *)swift_allocObject();
          v35[2] = v33;
          v35[3] = v32;
          v35[4] = v34;
          v35[5] = &v51;
          v36 = v34;
          sub_1BDE0D5B8((uint64_t)sub_1BE1557E8);
          v37 = swift_allocObject();
          *(_QWORD *)(v37 + 16) = sub_1BE1557E8;
          *(_QWORD *)(v37 + 24) = v35;
          v49 = sub_1BDE3494C;
          v50 = v37;
          aBlock = MEMORY[0x1E0C809B0];
          v46 = 1107296256;
          v47 = sub_1BE149BB0;
          v48 = &block_descriptor_82;
          v38 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v29, sel_enumerateAttributesInRange_options_usingBlock_, v33, v32, 0, v38);

          _Block_release(v38);
          LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
          result = (_QWORD *)swift_release();
          if ((v32 & 1) != 0)
            goto LABEL_26;
          v31 += 3;
        }
        while (--v30);
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      v39 = sub_1BE1557E8;
      v40 = v51;
      a3 = v42;
      v17 = v41;
      if (v41)
        goto LABEL_23;
    }
    else
    {
      swift_unknownObjectRelease();
      v39 = 0;
      v40 = MEMORY[0x1E0DEE9D8];
      if (v17)
        goto LABEL_23;
    }
    if (!*(_QWORD *)(v40 + 16))
    {
      swift_release();
      *a3 = 0;
      a3[1] = 0;
      goto LABEL_24;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    swift_release();
    *a3 = v17;
    a3[1] = v40;
LABEL_24:
    swift_bridgeObjectRelease();
    return (_QWORD *)sub_1BDE0D5B8((uint64_t)v39);
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t *CRAttributedString.apply(_:)(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v2 = result[1];
  if (v2)
  {
    v3 = *result;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BE14C098();
    if (!v3)
      goto LABEL_6;
    swift_unknownObjectRetain();
    objc_opt_self();
    result = (uint64_t *)swift_dynamicCastObjCClass();
    if (!result)
    {
      swift_unknownObjectRelease();
      v6 = *(_QWORD *)(v2 + 16);
      if (v6)
        goto LABEL_10;
      return (uint64_t *)sub_1BE155804(v3, v2);
    }
    if (*(_QWORD *)v1)
    {
      v4 = result;
      v5 = *(id *)(*(_QWORD *)v1 + 16);
      LODWORD(v4) = objc_msgSend(v4, sel_applyToString_, v5);

      swift_unknownObjectRelease();
      if ((_DWORD)v4)
      {
LABEL_6:
        v6 = *(_QWORD *)(v2 + 16);
        if (!v6)
          return (uint64_t *)sub_1BE155804(v3, v2);
LABEL_10:
        swift_bridgeObjectRetain();
        v7 = v2 + 40;
        do
        {
          v8 = *(id *)(v7 - 8);
          v9 = swift_bridgeObjectRetain();
          sub_1BE14EB0C(v9, (uint64_t)v8);

          swift_bridgeObjectRelease();
          v7 += 16;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease();
      }
      return (uint64_t *)sub_1BE155804(v3, v2);
    }
    __break(1u);
  }
  return result;
}

_QWORD *CRAttributedString.hasDelta(from:)(_QWORD *result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  id v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[6];

  v2 = *result;
  v3 = *v1;
  if (!*v1)
  {
    if (v2)
    {
      __break(1u);
      goto LABEL_12;
    }
    return 0;
  }
  if (v2)
    v4 = v3 == v2;
  else
    v4 = 0;
  if (v4)
    return 0;
  v5 = objc_msgSend(*(id *)(v3 + 16), sel_attributedString);
  objc_opt_self();
  result = (_QWORD *)swift_dynamicCastObjCClassUnconditional();
  if (v2)
  {
    v6 = result;
    v7 = objc_msgSend(*(id *)(v2 + 16), sel_attributedString);
    objc_opt_self();
    v8 = swift_dynamicCastObjCClassUnconditional();
    v9 = *(void **)(v2 + 16);
    v10 = *(void **)(v3 + 16);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v6;
    *(_QWORD *)(v11 + 24) = v8;
    v16[4] = sub_1BE155860;
    v16[5] = v11;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1BE1514C4;
    v16[3] = &block_descriptor_88;
    v12 = _Block_copy(v16);
    v13 = v9;
    v14 = v10;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_release();
    v15 = objc_msgSend(v13, sel_hasDeltaTo_compareElements_, v14, v12);
    _Block_release(v12);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    return v15;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t CRAttributedString.delta(_:from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  _QWORD v19[6];
  uint64_t v20;
  uint64_t v21;

  v8 = *a2;
  v9 = *v4;
  v20 = *a2;
  v21 = v9;
  swift_retain();
  swift_retain();
  CRAttributedString.finalizeTimestamps(_:)(a1);
  result = (uint64_t)CRAttributedString.finalizeTimestamps(_:)(a1);
  if (v9)
  {
    if (v20)
    {
      v11 = *(void **)(v21 + 16);
      v12 = *(void **)(v20 + 16);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = *(_OWORD *)(a3 + 16);
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v8;
      v14 = objc_allocWithZone((Class)CRTTMergeableStringDelta);
      v19[4] = sub_1BE155AD4;
      v19[5] = v13;
      v19[0] = MEMORY[0x1E0C809B0];
      v19[1] = 1107296256;
      v19[2] = sub_1BE153CC0;
      v19[3] = &block_descriptor_94;
      v15 = _Block_copy(v19);
      swift_retain();
      swift_retain();
      v16 = v11;
      v17 = v12;
      swift_release();
      v18 = objc_msgSend(v14, sel_initWithDeltasTo_from_compareElements_, v16, v17, v15);

      _Block_release(v15);
      swift_release();
      result = swift_release();
      *a4 = v18;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *CRAttributedString.canMerge(delta:)(_QWORD *result)
{
  uint64_t v1;

  if (*(_QWORD *)v1)
    return objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_canDeltaMerge_, *result);
  __break(1u);
  return result;
}

id CRAttributedString.merge(delta:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;

  v2 = *a1;
  result = (id)sub_1BE14C098();
  if (*(_QWORD *)v1)
    return objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_deltaMerge_, v2);
  __break(1u);
  return result;
}

uint64_t sub_1BE15010C(uint64_t *a1, uint64_t *a2)
{
  return static CRAttributedString.== infix(_:_:)(a1, a2);
}

uint64_t *CRAttributedString.observableDifference(from:with:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t aBlock;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;

  v8 = *result;
  v9 = *v4;
  if (*v4)
  {
    if (v8)
    {
      if (v9 == v8)
        goto LABEL_7;
    }
    else
    {
      swift_retain();
    }
  }
  else
  {
    swift_retain();
    if (!v8)
    {
      result = (uint64_t *)swift_retain();
LABEL_7:
      *a4 = 0;
      return result;
    }
  }
  aBlock = v8;
  v36 = v9;
  if ((CRAttributedString.hasDelta(from:)(&v36) & 1) != 0)
  {
    v36 = v9;
    v29 = v8;
    v10 = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRAttributedString<A>, a3);
    CRDT.merging(_:)((uint64_t)&v29, a3, v10, (uint64_t)&aBlock);
    v36 = aBlock;
    v29 = v8;
    CRAttributedString.observableDifference(from:with:)(&v29, a2, a3);
    return (uint64_t *)swift_release();
  }
  v11 = swift_allocObject();
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(a3 + 24);
  v15 = type metadata accessor for CRAttributedString.ObservableDifference.Edit(0, v12, v13, v14);
  result = (uint64_t *)sub_1BE1B2588();
  *(_QWORD *)(v11 + 16) = result;
  if (!v8)
  {
    __break(1u);
    goto LABEL_17;
  }
  v28 = v15;
  v27 = a4;
  if (!v9)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v16 = *(void **)(v8 + 16);
  v17 = *(void **)(v9 + 16);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v12;
  v18[3] = v13;
  v18[4] = v11;
  v34 = sub_1BE155B10;
  v35 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v31 = 1107296256;
  v32 = sub_1BDE038E8;
  v33 = &block_descriptor_103;
  v19 = _Block_copy(&aBlock);
  v20 = v16;
  v21 = v17;
  swift_retain();
  swift_release();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v12;
  v22[3] = v13;
  v22[4] = v11;
  v22[5] = v9;
  v22[6] = v8;
  v34 = sub_1BE155B54;
  v35 = v22;
  aBlock = MEMORY[0x1E0C809B0];
  v31 = 1107296256;
  v32 = sub_1BE150EB0;
  v33 = &block_descriptor_109;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_deltaTo_edited_unedited_, v21, v19, v23);
  _Block_release(v23);
  _Block_release(v19);

  swift_beginAccess();
  v24 = swift_bridgeObjectRetain();
  v25 = MEMORY[0x1C3B7C8EC](v24, v28);
  swift_bridgeObjectRelease();
  if (v25 < 1)
  {
    result = (uint64_t *)swift_release();
    *v27 = 0;
  }
  else
  {
    v26 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRetain();
    result = (uint64_t *)swift_release();
    *v27 = v26;
  }
  return result;
}

uint64_t sub_1BE15043C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return CRAttributedString.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t CRAttributedString.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t inited;
  _BYTE v17[40];
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v12, (uint64_t)v11, &qword_1ED6F3728);
  v13 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v12) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13);
  sub_1BDD86E30((uint64_t)v11, &qword_1ED6F3728);
  if ((_DWORD)v12 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v14 = 0xD000000000000014;
    *(_QWORD *)(v14 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v14 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = a1;
    *(_QWORD *)(inited + 24) = 0;
    *(_BYTE *)(inited + 32) = 1;
    sub_1BDE12D84(a2, a3, &v18);
    result = swift_release();
    if (!v4)
      *a4 = v18;
  }
  return result;
}

uint64_t sub_1BE1505FC(uint64_t a1, uint64_t a2)
{
  return CRAttributedString.encode(to:)(a1, a2);
}

uint64_t CRAttributedString.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = sub_1BDDA8D6C();
  if (!v3)
  {
    v9 = v5;
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_QWORD *)(a2 + 24);
    swift_retain();
    sub_1BDE1DBEC(&v9, v7, v8);
    return swift_release();
  }
  return result;
}

void CRAttributedString.hasEncodedData.getter()
{
  uint64_t v0;

  if (*(_QWORD *)v0)
    objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_isEmptyCRDT);
  else
    __break(1u);
}

void sub_1BE1506B8(_BYTE *a1@<X8>)
{
  CRAttributedString.minEncodingVersion.getter(a1);
}

void CRAttributedString.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t CRAttributedString.ObservableDifference.Edit.description.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;
  uint64_t v7;

  if ((a4 & 1) != 0)
  {
    sub_1BE1B305C();
    swift_bridgeObjectRelease();
    v7 = 0x7475626972747461;
    sub_1BE1B32E4();
    sub_1BE1B284C();
    swift_bridgeObjectRelease();
    result = sub_1BE1B284C();
    if (!__OFADD__(a1, a2))
      goto LABEL_5;
  }
  else
  {
    sub_1BE1B305C();
    swift_bridgeObjectRelease();
    v7 = 0x6574636172616863;
    sub_1BE1B32E4();
    sub_1BE1B284C();
    swift_bridgeObjectRelease();
    result = sub_1BE1B284C();
    if (!__OFADD__(a1, a2))
    {
      sub_1BE1B32E4();
      sub_1BE1B284C();
      swift_bridgeObjectRelease();
      sub_1BE1B284C();
LABEL_5:
      sub_1BE1B32E4();
      sub_1BE1B284C();
      swift_bridgeObjectRelease();
      sub_1BE1B284C();
      return v7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL static CRAttributedString.ObservableDifference.Edit.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  _BOOL4 v9;
  _BOOL4 v12;

  v9 = a1 == a5 && a2 == a6;
  if ((a8 & 1) == 0)
    v9 = 0;
  v12 = a1 == a5 && a2 == a6 && a3 == a7;
  if ((a8 & 1) != 0)
    v12 = 0;
  if ((a4 & 1) != 0)
    return v9;
  else
    return v12;
}

BOOL sub_1BE150910(uint64_t a1, uint64_t a2)
{
  return static CRAttributedString.ObservableDifference.Edit.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t sub_1BE150950()
{
  uint64_t v0;

  return CRAttributedString.ObservableDifference.Edit.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t CRAttributedString.ObservableDifference.edits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static CRAttributedString.ObservableDifference.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for CRAttributedString.ObservableDifference.Edit(0, a3, a4, a4);
  MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRAttributedString<A>.ObservableDifference.Edit, v4);
  return sub_1BE1B2A68();
}

uint64_t sub_1BE1509C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CRAttributedString.ObservableDifference.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BE1509D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;

  swift_beginAccess();
  type metadata accessor for CRAttributedString.ObservableDifference.Edit(255, a6, a7, v9);
  sub_1BE1B2A5C();
  sub_1BE1B2A20();
  return swift_endAccess();
}

uint64_t sub_1BE150A58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t *v20;
  uint64_t v21[11];

  if (__OFSUB__(a3, result))
  {
    __break(1u);
  }
  else
  {
    v21[9] = v9;
    v21[10] = v10;
    v21[0] = a7;
    v20 = sub_1BE150BCC(v21, result, a2, a3 - result);
    MEMORY[0x1E0C80A78](v20);
    v19[2] = a8;
    v19[3] = a9;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF530EA0);
    v14 = (char *)type metadata accessor for CRAttributedString.ObservableDifference.Edit(0, a8, a9, v13);
    v15 = sub_1BDDA9D60(&qword_1EF530EA8, &qword_1EF530EA0, MEMORY[0x1E0DEAF50]);
    v17 = sub_1BDF016D0((void (*)(char *, char *))sub_1BE156454, (uint64_t)v19, v12, v14, MEMORY[0x1E0DEDCE8], v15, MEMORY[0x1E0DEDD18], v16);
    swift_bridgeObjectRelease();
    v21[0] = v17;
    swift_beginAccess();
    v18 = sub_1BE1B2A5C();
    MEMORY[0x1C3B7DF54](MEMORY[0x1E0DEAF38], v18);
    sub_1BE1B2A14();
    return swift_endAccess();
  }
  return result;
}

uint64_t *sub_1BE150BCC(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v10;
  uint64_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t isEscapingClosureAtFileLocation;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  _QWORD aBlock[6];
  __int128 v25;
  char v26;
  uint64_t v27;

  v5 = *result;
  v6 = *v4;
  v27 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v10 = objc_msgSend(*(id *)(v6 + 16), sel_attributedString);
    objc_opt_self();
    result = (uint64_t *)swift_dynamicCastObjCClassUnconditional();
    if (v5)
    {
      v11 = result;
      v12 = objc_msgSend(*(id *)(v5 + 16), sel_attributedString);
      objc_opt_self();
      v13 = swift_dynamicCastObjCClassUnconditional();
      v25 = 0uLL;
      v26 = 1;
      if (qword_1EF52B6C0 != -1)
        swift_once();
      v14 = qword_1EF52B6B8;
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = v13;
      v15[3] = a4;
      v15[4] = &v25;
      v15[5] = &v27;
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = sub_1BE156490;
      *(_QWORD *)(v16 + 24) = v15;
      aBlock[4] = sub_1BDE3494C;
      aBlock[5] = v16;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BE149EF8;
      aBlock[3] = &block_descriptor_132;
      v17 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v11, sel_enumerateAttribute_inRange_options_usingBlock_, v14, a2, a3, 0, v17);
      _Block_release(v17);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        if ((v26 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v22 = v27;
          swift_release();
          return (uint64_t *)v22;
        }
        v23 = v25;
        isEscapingClosureAtFileLocation = v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v27 = isEscapingClosureAtFileLocation;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
LABEL_8:
          v21 = *(_QWORD *)(isEscapingClosureAtFileLocation + 16);
          v20 = *(_QWORD *)(isEscapingClosureAtFileLocation + 24);
          if (v21 >= v20 >> 1)
            isEscapingClosureAtFileLocation = (uint64_t)sub_1BDE072EC((_QWORD *)(v20 > 1), v21 + 1, 1, (_QWORD *)isEscapingClosureAtFileLocation);
          *(_QWORD *)(isEscapingClosureAtFileLocation + 16) = v21 + 1;
          *(_OWORD *)(isEscapingClosureAtFileLocation + 16 * v21 + 32) = v23;
          v27 = isEscapingClosureAtFileLocation;
          goto LABEL_11;
        }
      }
      isEscapingClosureAtFileLocation = (uint64_t)sub_1BDE072EC(0, *(_QWORD *)(isEscapingClosureAtFileLocation + 16) + 1, 1, (_QWORD *)isEscapingClosureAtFileLocation);
      v27 = isEscapingClosureAtFileLocation;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE150EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v9(a2, a3, a4, a5);
  return swift_release();
}

uint64_t sub_1BE150F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v19;
  _QWORD aBlock[6];
  unsigned __int8 v21;

  v21 = 0;
  if (qword_1EF52B6C0 != -1)
    swift_once();
  v12 = qword_1EF52B6B8;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a6;
  v13[7] = &v21;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BE1564F8;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1BDE3494C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BE149EF8;
  aBlock[3] = &block_descriptor_152;
  v15 = _Block_copy(aBlock);
  v16 = a6;
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_enumerateAttribute_inRange_options_usingBlock_, v12, a3, a4, 0, v15);
  _Block_release(v15);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v19 = v21;
    swift_release();
    return v19;
  }
  return result;
}

uint64_t sub_1BE1510B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v23[6];
  _BYTE v24[32];

  v16 = a2 - a5;
  if (__OFSUB__(a2, a5))
  {
    __break(1u);
  }
  else
  {
    v11 = v16 + a7;
    if (!__OFADD__(v16, a7))
    {
      v14 = a4;
      v10 = a3;
      v13 = a1;
      v12 = a9;
      v15 = a10;
      if (qword_1EF52B6C0 == -1)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_8:
  swift_once();
LABEL_4:
  v17 = qword_1EF52B6B8;
  sub_1BDD86DEC(v13, (uint64_t)v24, qword_1EF52B750);
  v18 = swift_allocObject();
  sub_1BDDA2EF0((uint64_t)v24, v18 + 16, qword_1EF52B750);
  *(_QWORD *)(v18 + 48) = v15;
  *(_QWORD *)(v18 + 56) = v14;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BE156574;
  *(_QWORD *)(v19 + 24) = v18;
  v23[4] = sub_1BDE3494C;
  v23[5] = v19;
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 1107296256;
  v23[2] = sub_1BE149EF8;
  v23[3] = &block_descriptor_162;
  v20 = _Block_copy(v23);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_enumerateAttribute_inRange_options_usingBlock_, v17, v11, v10, 0, v20);
  _Block_release(v20);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_1BE15126C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, _BYTE *a6, _BYTE *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  int v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  char v27;
  id v28;
  id v29;
  _BYTE *v30;
  void *v31;
  _BYTE v32[24];
  uint64_t v33;

  v12 = type metadata accessor for FinalizedTimestamp(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v30 - v16;
  sub_1BDD86DEC(a5, (uint64_t)v32, qword_1EF52B750);
  if (v33)
  {
    type metadata accessor for ObjCFinalizedTimestamp(0);
    if (swift_dynamicCast())
      v18 = v31;
    else
      v18 = 0;
  }
  else
  {
    sub_1BDD86E30((uint64_t)v32, qword_1EF52B750);
    v18 = 0;
  }
  sub_1BDD86DEC(a1, (uint64_t)v32, qword_1EF52B750);
  if (v33)
  {
    type metadata accessor for ObjCFinalizedTimestamp(0);
    v19 = swift_dynamicCast();
    v20 = v31;
    if (v19)
      v21 = v31;
    else
      v21 = 0;
    if (v18)
    {
      if (v21)
      {
        v30 = a7;
        sub_1BDD9C318((uint64_t)v18 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)v17, type metadata accessor for FinalizedTimestamp);
        sub_1BDD9C318((uint64_t)v21 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)v15, type metadata accessor for FinalizedTimestamp);
        v22 = *(int *)(v12 + 20);
        v23 = *(_QWORD *)&v15[v22];
        v24 = *(_QWORD *)&v17[v22];
        if (v23 == v24)
        {
          v25 = v18;
          v26 = v21;
          v27 = sub_1BDDB2BF8();
        }
        else
        {
          v27 = v23 < v24;
          v28 = v18;
          v29 = v21;
        }
        a7 = v30;
        sub_1BDD9C3E0((uint64_t)v15, type metadata accessor for FinalizedTimestamp);
        sub_1BDD9C3E0((uint64_t)v17, type metadata accessor for FinalizedTimestamp);

        if ((v27 & 1) == 0)
        {

          v21 = v18;
          goto LABEL_21;
        }
        v21 = v20;
        goto LABEL_20;
      }
LABEL_15:
      v18 = v18;
      v21 = 0;
LABEL_20:
      *a6 = 1;
      *a7 = 1;
      *a4 = 1;

    }
  }
  else
  {
    sub_1BDD86E30((uint64_t)v32, qword_1EF52B750);
    if (v18)
      goto LABEL_15;
    v21 = 0;
  }
LABEL_21:

}

uint64_t sub_1BE1514C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  LOBYTE(a5) = v9(a2, a3, a4, a5);
  swift_release();
  return a5 & 1;
}

uint64_t sub_1BE151530(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  char isEscapingClosureAtFileLocation;
  BOOL v21;
  _QWORD v22[6];
  _BYTE v23[32];

  v14 = result;
  if (qword_1EF52B6C0 == -1)
  {
    v15 = a2 + a6;
    if (!__OFADD__(a2, a6))
      goto LABEL_3;
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  result = swift_once();
  v21 = __OFADD__(a2, a6);
  v15 = a2 + a6;
  if (v21)
    goto LABEL_7;
LABEL_3:
  v16 = qword_1EF52B6B8;
  sub_1BDD86DEC(v14, (uint64_t)v23, qword_1EF52B750);
  v17 = (_QWORD *)swift_allocObject();
  sub_1BDDA2EF0((uint64_t)v23, (uint64_t)(v17 + 2), qword_1EF52B750);
  v17[6] = a7;
  v17[7] = a6;
  v17[8] = a8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1BE1564B4;
  *(_QWORD *)(v18 + 24) = v17;
  v22[4] = sub_1BDE3494C;
  v22[5] = v18;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 1107296256;
  v22[2] = sub_1BE149EF8;
  v22[3] = &block_descriptor_142;
  v19 = _Block_copy(v22);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_enumerateAttribute_inRange_options_usingBlock_, v16, v15, a3, 0, v19);
  _Block_release(v19);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_8:
    __break(1u);
  return result;
}

void sub_1BE1516F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  __int128 v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  void *v48;
  _BYTE v49[24];
  uint64_t v50;

  *(_QWORD *)&v47 = a2;
  v14 = type metadata accessor for FinalizedTimestamp(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (uint64_t *)((char *)&v45 - v18);
  sub_1BDD86DEC(a5, (uint64_t)v49, qword_1EF52B750);
  v20 = (void *)MEMORY[0x1E0DEE9B8];
  if (v50)
  {
    type metadata accessor for ObjCFinalizedTimestamp(0);
    if (swift_dynamicCast())
      v21 = v48;
    else
      v21 = 0;
  }
  else
  {
    sub_1BDD86E30((uint64_t)v49, qword_1EF52B750);
    v21 = 0;
  }
  sub_1BDD86DEC(a1, (uint64_t)v49, qword_1EF52B750);
  if (!v50)
  {
    sub_1BDD86E30((uint64_t)v49, qword_1EF52B750);
    if (!v21)
    {
      v20 = 0;
      goto LABEL_35;
    }
    v46 = a7;
    goto LABEL_16;
  }
  v46 = a7;
  type metadata accessor for ObjCFinalizedTimestamp(0);
  v22 = swift_dynamicCast();
  v23 = v48;
  if (v22)
    v20 = v48;
  else
    v20 = 0;
  if (!v21)
    goto LABEL_35;
  if (!v20)
  {
LABEL_16:
    v21 = v21;
    v23 = 0;
LABEL_20:
    if ((a6[1] & 1) != 0)
    {

      v20 = (void *)(v47 - v46);
      if (!__OFSUB__((_QWORD)v47, v46))
      {
LABEL_33:
        *(_QWORD *)a6 = v20;
        *((_QWORD *)a6 + 1) = a3;
        *((_BYTE *)a6 + 16) = 0;
        return;
      }
      __break(1u);
    }
    v31 = *a6;
    if (__OFADD__((_QWORD)v31, *((_QWORD *)&v31 + 1)))
    {
      __break(1u);
    }
    else
    {
      v20 = (void *)(v47 - v46);
      if (!__OFSUB__((_QWORD)v47, v46))
      {
        if ((void *)(v31 + *((_QWORD *)&v31 + 1)) == v20)
        {

          v32 = *((_QWORD *)a6 + 1);
          v33 = __OFADD__(v32, a3);
          v34 = v32 + a3;
          if (!v33)
          {
            *((_QWORD *)a6 + 1) = v34;
            return;
          }
          __break(1u);
        }
        else
        {
          v47 = *a6;
          v14 = a3;
          v35 = a8;
          a8 = (_QWORD *)*a8;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v19 = v35;
          *v35 = a8;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
LABEL_30:
            v37 = v47;
            v39 = a8[2];
            v38 = a8[3];
            if (v39 >= v38 >> 1)
            {
              v44 = sub_1BDE072EC((_QWORD *)(v38 > 1), v39 + 1, 1, a8);
              v37 = v47;
              a8 = v44;
            }
            a8[2] = v39 + 1;
            *(_OWORD *)&a8[2 * v39 + 4] = v37;
            *v19 = a8;

            a3 = v14;
            goto LABEL_33;
          }
        }
        a8 = sub_1BDE072EC(0, a8[2] + 1, 1, a8);
        *v19 = a8;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_44:
    v23 = sub_1BDE072EC(0, v23[2] + 1, 1, v23);
    v41 = a8;
    *a8 = v23;
    goto LABEL_39;
  }
  v45 = a3;
  sub_1BDD9C318((uint64_t)v21 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)v19, type metadata accessor for FinalizedTimestamp);
  sub_1BDD9C318((uint64_t)v20 + OBJC_IVAR___ObjCFinalizedTimestamp_timestamp, (uint64_t)v17, type metadata accessor for FinalizedTimestamp);
  v24 = *(int *)(v14 + 20);
  v25 = *(_QWORD *)&v17[v24];
  v26 = *(_QWORD *)((char *)v19 + v24);
  if (v25 == v26)
  {
    v27 = v21;
    v28 = v20;
    v14 = sub_1BDDB2BF8();
  }
  else
  {
    v14 = v25 < v26;
    v29 = v21;
    v30 = v20;
  }
  sub_1BDD9C3E0((uint64_t)v17, type metadata accessor for FinalizedTimestamp);
  sub_1BDD9C3E0((uint64_t)v19, type metadata accessor for FinalizedTimestamp);

  a3 = v45;
  if ((v14 & 1) != 0)
    goto LABEL_20;

  v20 = v23;
LABEL_35:
  if (*((_BYTE *)a6 + 16) == 1)
  {

    return;
  }
  v47 = *a6;
  v23 = (_QWORD *)*a8;
  v40 = swift_isUniquelyReferenced_nonNull_native();
  *a8 = v23;
  if ((v40 & 1) == 0)
    goto LABEL_44;
  v41 = a8;
LABEL_39:
  v43 = v23[2];
  v42 = v23[3];
  if (v43 >= v42 >> 1)
    v23 = sub_1BDE072EC((_QWORD *)(v42 > 1), v43 + 1, 1, v23);
  v23[2] = v43 + 1;
  *(_OWORD *)&v23[2 * v43 + 4] = v47;
  *v41 = v23;

  *(_QWORD *)a6 = 0;
  *((_QWORD *)a6 + 1) = 0;
  *((_BYTE *)a6 + 16) = 1;
}

id sub_1BE151B1C(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v21 = result;
  v8 = a4 - a2;
  if (__OFSUB__(a4, a2))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v23 = a8;
  v10 = sub_1BE150BCC(&v23, a2, a3, a4 - a2);
  v11 = v10[2];
  if (v11)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    result = (id)sub_1BDE229E0(0, v11, 0);
    v12 = v22;
    v13 = v10 + 5;
    while (1)
    {
      v14 = *(v13 - 1);
      v15 = v14 + v8;
      if (__OFADD__(v14, v8))
        break;
      if (__OFSUB__(v15, a4))
        goto LABEL_13;
      v16 = *v13;
      result = objc_msgSend(v21, sel_subrangeFrom_, v15 - a4, *v13);
      v17 = result;
      v19 = *(_QWORD *)(v22 + 16);
      v18 = *(_QWORD *)(v22 + 24);
      if (v19 >= v18 >> 1)
        result = (id)sub_1BDE229E0(v18 > 1, v19 + 1, 1);
      v13 += 2;
      *(_QWORD *)(v22 + 16) = v19 + 1;
      v20 = (_QWORD *)(v22 + 24 * v19);
      v20[4] = v15;
      v20[5] = v16;
      v20[6] = v17;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_11:
  swift_beginAccess();
  sub_1BDF30CDC(v12);
  return (id)swift_endAccess();
}

void sub_1BE151CAC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1BE151D30(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, id a7, _QWORD **a8)
{
  uint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  id v16;

  if (__OFSUB__(a2, a5))
  {
    __break(1u);
  }
  else
  {
    v9 = a8;
    v8 = a1;
    v11 = objc_msgSend(a7, sel_subrangeFrom_, a2 - a5, a3);
    v10 = *v9;
    v16 = v11;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v9 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  v10 = sub_1BDE07524(0, v10[2] + 1, 1, v10);
  *v9 = v10;
LABEL_3:
  v14 = v10[2];
  v13 = v10[3];
  if (v14 >= v13 >> 1)
  {
    v10 = sub_1BDE07524((_QWORD *)(v13 > 1), v14 + 1, 1, v10);
    *v9 = v10;
  }
  v10[2] = v14 + 1;
  v15 = &v10[2 * v14];
  v15[4] = v16;
  v15[5] = v8;

}

uint64_t CRAttributedString.Cursor.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = CRString.Cursor.init(from:)(a1, (uint64_t)&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

void CRAttributedString.Cursor.encode(to:)(uint64_t a1)
{
  id *v1;
  id v3;

  v3 = *v1;
  CRString.Cursor.encode(to:)(a1);

}

void CRAttributedString.Cursor.minEncodingVersion.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

Swift::Bool __swiftcall CRAttributedString.Cursor.needToFinalizeTimestamps()()
{
  objc_opt_self();
  return objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_needToFinalizeTimestamps);
}

void CRAttributedString.Cursor.finalizeTimestamps(_:)(uint64_t a1)
{
  void **v1;
  void *v3;
  id v4;

  v3 = *v1;
  objc_opt_self();
  v4 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_finalizedInContext_, a1);

  *v1 = v4;
}

uint64_t static CRAttributedString.Cursor.== infix(_:_:)(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  sub_1BDDC6C38(0, (unint64_t *)&qword_1ED6EF860);
  v4 = v2;
  v5 = v3;
  v6 = sub_1BE1B2EC4();

  return v6 & 1;
}

id sub_1BE151FE4()
{
  return (id)sub_1BDDAF70C();
}

uint64_t sub_1BE152008@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return CRAttributedString.Cursor.init(from:)(a1, a2);
}

void sub_1BE15201C(uint64_t a1)
{
  CRAttributedString.Cursor.encode(to:)(a1);
}

void CRAttributedString.cursor(at:affinity:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v5 = *v4;
  if (*v4)
  {
    v8 = type metadata accessor for CRAttributedString.Cursor(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
    v10 = *(id *)(v5 + 16);
    v9 = MEMORY[0x1C3B7DF54](&unk_1BE1C6EE8, v8);
    sub_1BDE795A0(v10, a1, a2, v8, v9);

  }
  else
  {
    __break(1u);
  }
}

void CRAttributedString.cursor(range:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  id v12;

  v6 = *v5;
  if (*v5)
  {
    v10 = type metadata accessor for CRAttributedString.Cursor(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
    v12 = *(id *)(v6 + 16);
    v11 = (_QWORD *)MEMORY[0x1C3B7DF54](&unk_1BE1C6EE8, v10);
    sub_1BDE796B0(v12, a1, a2, v10, v11, a5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t *CRAttributedString.index(of:)(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v5 = *v4;
  if (*v4)
  {
    v6 = result;
    v7 = type metadata accessor for CRAttributedString.Cursor(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
    v8 = *(void **)(v5 + 16);
    v12 = *v6;
    v9 = v8;
    v10 = MEMORY[0x1C3B7DF54](&unk_1BE1C6EE8, v7);
    v11 = sub_1BDE798CC(v9, (uint64_t)&v12, v7, v10);

    return (uint64_t *)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

__int128 *CRAttributedString.range(of:)(__int128 *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t *v10;
  uint64_t v11;
  __int128 v12;

  v5 = *v4;
  if (*v4)
  {
    v6 = result;
    v7 = type metadata accessor for CRAttributedString.Cursor(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
    v8 = *(void **)(v5 + 16);
    v12 = *v6;
    v9 = v8;
    v10 = (uint64_t *)MEMORY[0x1C3B7DF54](&unk_1BE1C6EE8, v7);
    v11 = sub_1BDE79950(v9, (uint64_t)&v12, v7, v10);

    return (__int128 *)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CRAttributedString.cursor(range:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  _QWORD v8[2];

  CRAttributedString.cursor(range:)(a3, a4, a5, a4, (char *)v8);
  v7 = v8[1];
  *a1 = v8[0];
  *a2 = v7;
}

__int128 *CRAttributedString.range(of:)(void **a1, void **a2, uint64_t a3)
{
  uint64_t *v3;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v15;
  id v16;
  __int128 v17;
  uint64_t v18;

  v5 = *a1;
  v6 = *a2;
  v18 = *v3;
  *(_QWORD *)&v15 = v5;
  v16 = v6;
  v8 = type metadata accessor for CRAttributedString.Cursor(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v7);
  v9 = MEMORY[0x1C3B7DF54](&protocol conformance descriptor for CRAttributedString<A>.Cursor, v8);
  CursorRange.init(lowerBound:upperBound:)((uint64_t)&v15, (uint64_t)&v16, v8, (uint64_t)&protocol witness table for CRAttributedString<A>.Cursor, v9, (uint64_t)&v17);
  v10 = v17;
  v15 = v17;
  v13 = CRAttributedString.range(of:)(&v15, a3, v11, v12);

  return v13;
}

uint64_t *sub_1BE1523C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CRAttributedString.index(of:)(a1, a2, a3, a4);
}

__int128 *sub_1BE1523DC(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CRAttributedString.range(of:)(a1, a2, a3, a4);
}

__int128 *sub_1BE1523F4(void **a1, void **a2, uint64_t a3)
{
  return CRAttributedString.range(of:)(a1, a2, a3);
}

uint64_t CRAttributedString.encode(to:)()
{
  void *v0;
  void *v1;
  id v2;

  CRAttributedString.attributedString.getter();
  v1 = v0;
  v2 = objc_msgSend(v0, sel_string);

  sub_1BE1B27C8();
  sub_1BE1B2858();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE1524A4()
{
  return CRAttributedString.encode(to:)();
}

uint64_t sub_1BE1524B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t);
  id v53;
  _QWORD *v54;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  _BOOL8 v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t result;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _OWORD v99[2];
  __int128 v100;
  ValueMetadata *v101;
  _QWORD *v102;

  v94 = a4;
  v93 = a3;
  v95 = a2;
  v87 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  MEMORY[0x1E0C80A78](v6);
  v91 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Value(0);
  v92 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v97 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F26F0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v86 - v14;
  v16 = type metadata accessor for Proto_RepeatedValue(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v21 = (uint64_t *)((char *)&v86 - v20);
  v90 = v8;
  v22 = *(int *)(v8 + 20);
  v89 = a1;
  v23 = *(_QWORD *)(a1 + v22)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v23, (uint64_t)v15, &qword_1ED6F26F0);
  v24 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48);
  v26 = v25(v15, 1, v24);
  v27 = MEMORY[0x1E0DEE9D8];
  if (v26 == 1)
  {
    sub_1BDD86E30((uint64_t)v15, &qword_1ED6F26F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_1BDDA2E8C((uint64_t)v15, (uint64_t)v21, type metadata accessor for Proto_RepeatedValue);
      goto LABEL_7;
    }
    sub_1BDD9C3E0((uint64_t)v15, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  *v21 = v27;
  sub_1BE1B20E4();
LABEL_7:
  swift_bridgeObjectRetain();
  sub_1BDD9C3E0((uint64_t)v21, type metadata accessor for Proto_RepeatedValue);
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  v29 = v28;
  sub_1BDF0DB98();
  v86 = v29;
  v98 = (_QWORD *)sub_1BE1B25C4();
  v30 = *(_QWORD *)(v89 + v22)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v30, (uint64_t)v13, &qword_1ED6F26F0);
  if (v25(v13, 1, v24) == 1)
  {
    sub_1BDD86E30((uint64_t)v13, &qword_1ED6F26F0);
    v31 = v96;
    v32 = v95;
LABEL_12:
    *v19 = MEMORY[0x1E0DEE9D8];
    sub_1BE1B20E4();
    goto LABEL_13;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v31 = v96;
  v32 = v95;
  if (EnumCaseMultiPayload != 10)
  {
    sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_12;
  }
  sub_1BDDA2E8C((uint64_t)v13, (uint64_t)v19, type metadata accessor for Proto_RepeatedValue);
LABEL_13:
  v34 = *v19;
  swift_bridgeObjectRetain();
  sub_1BDD9C3E0((uint64_t)v19, type metadata accessor for Proto_RepeatedValue);
  v35 = *(_QWORD *)(v34 + 16);
  v88 = v34;
  v36 = 0;
  if (!v35)
  {
LABEL_45:
    swift_release();

    sub_1BDD9C3E0(v89, type metadata accessor for Proto_Value);
    result = swift_bridgeObjectRelease();
    *v87 = v98;
    return result;
  }
  v37 = v34 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
  v96 = *(_QWORD *)(v92 + 72);
  while (1)
  {
    v39 = v97;
    sub_1BDD9C318(v37, v97, type metadata accessor for Proto_Value);
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    swift_retain();
    v40 = sub_1BDDB4FC0(v39, v32);
    swift_release();
    if (!v36)
    {
      v74 = v40 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
      swift_beginAccess();
      v75 = v91;
      sub_1BDD86DEC(v74, v91, &qword_1ED6F3770);
      LODWORD(v74) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v75, 1, v90);
      swift_retain();
      sub_1BDD86E30(v75, &qword_1ED6F3770);
      if ((_DWORD)v74 == 1)
      {
        sub_1BDDFCAFC();
        swift_allocError();
        *(_QWORD *)v85 = 0xD000000000000017;
        *(_QWORD *)(v85 + 8) = 0x80000001BE1CD110;
        *(_BYTE *)(v85 + 16) = 0;
        swift_willThrow();
        swift_release();
      }
      else
      {
        type metadata accessor for CRDecoder.CRValueContainer();
        *(_QWORD *)(swift_initStackObject() + 16) = v40;
        sub_1BDE25D14();
        if (!v31)
        {
          swift_bridgeObjectRetain();
          swift_release();
          v36 = (void *)sub_1BE1B27A4();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_17;
        }
        swift_release();
      }
      swift_release();
      swift_release();
      sub_1BDD9C3E0(v89, type metadata accessor for Proto_Value);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v41 = *(uint64_t (**)(void))(v94 + 8);
    v42 = v36;
    v43 = v41();
    v44 = sub_1BE1B27C8();
    if (*(_QWORD *)(v43 + 16))
    {
      v46 = sub_1BDDB271C(v44, v45);
      if ((v47 & 1) != 0)
      {
        v48 = (uint64_t *)(*(_QWORD *)(v43 + 56) + 16 * v46);
        v49 = v31;
        v50 = *v48;
        v51 = v48[1];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v52 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v51 + 8);
        v101 = &type metadata for AnyCRValue;
        v52(&v100, v40, v50, v51);
        if (v49)
          goto LABEL_46;
        sub_1BDE77688(&v100, v99);
        v53 = v42;
        v54 = v98;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v102 = v54;
        v57 = sub_1BDDC4B9C((uint64_t)v53);
        v58 = v54[2];
        v59 = (v56 & 1) == 0;
        v60 = v58 + v59;
        if (__OFADD__(v58, v59))
          goto LABEL_52;
        v61 = v56;
        if (v54[3] >= v60)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BDE6461C();
        }
        else
        {
          sub_1BDE5FB40(v60, isUniquelyReferenced_nonNull_native);
          v62 = sub_1BDDC4B9C((uint64_t)v53);
          if ((v61 & 1) != (v63 & 1))
            goto LABEL_54;
          v57 = v62;
        }
        v31 = 0;
        v76 = v102;
        v77 = v95;
        v98 = v102;
        if ((v61 & 1) == 0)
        {
          v102[(v57 >> 6) + 8] |= 1 << v57;
          *(_QWORD *)(v98[6] + 8 * v57) = v53;
          sub_1BDE77688(v99, (_OWORD *)(v98[7] + 32 * v57));
          v78 = v98;
          v82 = v98[2];
          v80 = __OFADD__(v82, 1);
          v81 = v82 + 1;
          if (v80)
            goto LABEL_53;
          goto LABEL_44;
        }
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v101 = &type metadata for AnyCRValue;
    v64 = swift_retain();
    AnyCRValue.init(from:)(v64, (uint64_t *)&v100);
    if (v31)
    {
LABEL_46:
      swift_release();

      swift_release();
      sub_1BDD9C3E0(v89, type metadata accessor for Proto_Value);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v100);
    }
    sub_1BDE77688(&v100, v99);
    v53 = v42;
    v65 = v98;
    v66 = swift_isUniquelyReferenced_nonNull_native();
    v102 = v65;
    v57 = sub_1BDDC4B9C((uint64_t)v53);
    v68 = v65[2];
    v69 = (v67 & 1) == 0;
    v70 = v68 + v69;
    if (__OFADD__(v68, v69))
      break;
    v71 = v67;
    if (v65[3] >= v70)
    {
      if ((v66 & 1) == 0)
        sub_1BDE6461C();
    }
    else
    {
      sub_1BDE5FB40(v70, v66);
      v72 = sub_1BDDC4B9C((uint64_t)v53);
      if ((v71 & 1) != (v73 & 1))
        goto LABEL_54;
      v57 = v72;
    }
    v31 = 0;
    v76 = v102;
    v77 = v95;
    v98 = v102;
    if ((v71 & 1) == 0)
    {
      v102[(v57 >> 6) + 8] |= 1 << v57;
      *(_QWORD *)(v98[6] + 8 * v57) = v53;
      sub_1BDE77688(v99, (_OWORD *)(v98[7] + 32 * v57));
      v78 = v98;
      v79 = v98[2];
      v80 = __OFADD__(v79, 1);
      v81 = v79 + 1;
      if (v80)
        goto LABEL_51;
LABEL_44:
      v78[2] = v81;
      v83 = v53;
      goto LABEL_16;
    }
LABEL_15:
    v38 = (_OWORD *)(v76[7] + 32 * v57);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    sub_1BDE77688(v99, v38);
LABEL_16:
    swift_release();

    swift_bridgeObjectRelease();
    v36 = 0;
    v32 = v77;
LABEL_17:
    v37 += v96;
    if (!--v35)
      goto LABEL_45;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE152E98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *a1 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for Proto_RepeatedValue(0);
  sub_1BE1B20E4();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BE155868(v3, (uint64_t (*)(void *, char *))sub_1BE15643C);
  swift_bridgeObjectRelease();
  if (v1)
    return sub_1BDD9C3E0((uint64_t)a1, type metadata accessor for Proto_RepeatedValue);
  result = swift_bridgeObjectRelease();
  *a1 = v4;
  return result;
}

uint64_t sub_1BE152F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  _BYTE v24[32];

  v4 = v3;
  v7 = type metadata accessor for Proto_Value(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDDC1538(a2, (uint64_t)v24);
  if ((swift_dynamicCast() & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  v11 = v23[1];
  sub_1BE1B20E4();
  v12 = *(int *)(v7 + 20);
  if (qword_1ED6F2718 != -1)
    swift_once();
  *(_QWORD *)&v10[v12] = qword_1ED6F2708;
  v13 = sub_1BE1B27C8();
  v15 = v14;
  swift_retain();
  v16 = sub_1BDDA84A8(v13, v15);
  swift_bridgeObjectRelease();
  sub_1BE1295C4(v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6EFC70);
  v17 = *(_QWORD *)(v8 + 72);
  v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BE1B61C0;
  v20 = v19 + v18;
  sub_1BDD9C318((uint64_t)v10, v20, type metadata accessor for Proto_Value);
  swift_retain();
  v21 = swift_retain();
  sub_1BDE1C9DC(v21, v11, a3, v20 + v17);
  if (v4)
  {
    sub_1BDD9C3E0(v20, type metadata accessor for Proto_Value);
    *(_QWORD *)(v19 + 16) = 0;
    swift_release();
  }
  swift_release();
  sub_1BDD9C3E0((uint64_t)v10, type metadata accessor for Proto_Value);
  return v19;
}

uint64_t CRAttributedString.Attributes.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a3;
  v21 = a4;
  v22 = a2;
  v5 = type metadata accessor for Proto_Value(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3770);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - v13;
  v15 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1BDD86DEC(v15, (uint64_t)v14, &qword_1ED6F3770);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  LODWORD(v6) = v16(v14, 1, v5);
  sub_1BDD86E30((uint64_t)v14, &qword_1ED6F3770);
  if ((_DWORD)v6 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v17 = 0xD000000000000017;
    *(_QWORD *)(v17 + 8) = 0x80000001BE1CD110;
    *(_BYTE *)(v17 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    sub_1BDD86DEC(v15, (uint64_t)v12, &qword_1ED6F3770);
    result = v16(v12, 1, v5);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1BDDA2E8C((uint64_t)v12, (uint64_t)v8, type metadata accessor for Proto_Value);
      v19 = v24;
      result = sub_1BE1524B8((uint64_t)v8, a1, v22, v23, &v25);
      if (!v19)
        *v21 = v25;
    }
  }
  return result;
}

uint64_t CRAttributedString.Attributes.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[4];

  v2 = type metadata accessor for Proto_RepeatedValue(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *v0;
  result = sub_1BDE25870();
  if (!v1)
  {
    v7[1] = v5;
    swift_retain();
    sub_1BE152E98(v4);
    swift_beginAccess();
    sub_1BE1295CC((uint64_t)v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE153448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return CRAttributedString.Attributes.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BE153464()
{
  return CRAttributedString.Attributes.encode(to:)();
}

uint64_t CRAttributedString.Partial.merge(delta:)()
{
  return sub_1BDDCD1A4();
}

uint64_t CRAttributedString.Partial.canMerge(delta:)()
{
  return 0;
}

uint64_t CRAttributedString.Partial.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t result;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36[13];

  v32 = a4;
  v34 = a2;
  v35 = a3;
  v36[12] = *(id *)MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F2DF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1E0C80A78](v33);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Proto_CRDT(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED6F3728);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1BDD86DEC(v17, (uint64_t)v16, &qword_1ED6F3728);
  LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10);
  sub_1BDD86E30((uint64_t)v16, &qword_1ED6F3728);
  if ((_DWORD)v17 == 1)
  {
    sub_1BDDFCAFC();
    swift_allocError();
    *(_QWORD *)v18 = 0xD000000000000014;
    *(_QWORD *)(v18 + 8) = 0x80000001BE1CD0F0;
    *(_BYTE *)(v18 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = a1;
  *(_QWORD *)(inited + 24) = 0;
  *(_BYTE *)(inited + 32) = 1;
  swift_retain();
  sub_1BDDA0528((uint64_t)v13);
  v20 = *(_QWORD *)&v13[*(int *)(v10 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1BDD86DEC(v20, (uint64_t)v7, &qword_1ED6F2DF0);
  v21 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v7, 1, v21) == 1)
  {
    sub_1BDD86E30((uint64_t)v7, &qword_1ED6F2DF0);
LABEL_8:
    sub_1BE1B20E4();
    v22 = *(int *)(v33 + 20);
    if (qword_1ED6EF5C0 != -1)
      swift_once();
    *(_QWORD *)&v9[v22] = qword_1ED6EF5B0;
    swift_retain();
    goto LABEL_11;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_1BDD9C3E0((uint64_t)v7, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_8;
  }
  sub_1BDDA2E8C((uint64_t)v7, (uint64_t)v9, type metadata accessor for Proto_Sequence);
LABEL_11:
  sub_1BDD9C3E0((uint64_t)v13, type metadata accessor for Proto_CRDT);
  v23 = objc_allocWithZone((Class)type metadata accessor for CRAttributedStringDecoder(0));
  swift_retain();
  v24 = sub_1BDF0D828((uint64_t)v9, a1, v34, v35);
  swift_release();
  v25 = objc_allocWithZone((Class)CRTTMergeableStringDelta);
  v36[0] = 0;
  v26 = v24;
  v27 = objc_msgSend(v25, sel_initWithDecoder_error_, v26, v36);
  if (v27)
  {
    v28 = v27;
    v29 = v36[0];
    swift_release();

    swift_setDeallocating();
    result = swift_release();
    *v32 = v28;
    return result;
  }
  v31 = v36[0];
  sub_1BE1B1D3C();

  swift_willThrow();
  swift_release();

  swift_setDeallocating();
  return swift_release();
}

uint64_t CRAttributedString.Partial.encode(to:)(uint64_t a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t result;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  objc_class *v15;
  id v16;
  unsigned __int8 v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  objc_super v23;
  id v24[4];

  v24[3] = *(id *)MEMORY[0x1E0C80C00];
  v4 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  result = sub_1BDDA8D6C();
  if (!v2)
  {
    v9 = (char *)objc_allocWithZone((Class)type metadata accessor for CRAttributedStringEncoder(0));
    v10 = &v9[OBJC_IVAR____TtC9Coherence15CRStringEncoder_sequence];
    swift_retain();
    swift_retain();
    v11 = v9;
    sub_1BE1B20E4();
    v12 = *(int *)(v4 + 20);
    if (qword_1ED6EF5C0 != -1)
      swift_once();
    *(_QWORD *)&v10[v12] = qword_1ED6EF5B0;
    v13 = &v11[OBJC_IVAR____TtC9Coherence15CRStringEncoder_subsequence];
    swift_retain();
    sub_1BE1B20E4();
    v14 = *(int *)(type metadata accessor for Proto_Subsequence(0) + 20);
    if (qword_1ED6EF680 != -1)
      swift_once();
    *(_QWORD *)&v13[v14] = qword_1ED6EF678;
    *(_QWORD *)&v11[OBJC_IVAR____TtC9Coherence15CRStringEncoder_encoder] = a1;
    swift_retain();
    swift_retain();

    v15 = (objc_class *)type metadata accessor for CRStringEncoder(0);
    v23.receiver = v11;
    v23.super_class = v15;
    v16 = objc_msgSendSuper2(&v23, sel_init);
    swift_release();
    v24[0] = 0;
    v17 = objc_msgSend(v7, sel_saveToEncoder_error_, v16, v24);
    v18 = v24[0];
    if ((v17 & 1) != 0)
    {
      v19 = (uint64_t)v16 + OBJC_IVAR____TtC9Coherence15CRStringEncoder_sequence;
      swift_beginAccess();
      sub_1BDD9C318(v19, (uint64_t)v6, type metadata accessor for Proto_Sequence);
      swift_beginAccess();
      v20 = v18;
      sub_1BE12894C((uint64_t)v6);
    }
    else
    {
      v21 = v24[0];
      sub_1BE1B1D3C();

      swift_willThrow();
    }

    return swift_release();
  }
  return result;
}

uint64_t sub_1BE153B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return CRAttributedString.Partial.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BE153B90(uint64_t a1)
{
  return CRAttributedString.Partial.encode(to:)(a1);
}

uint64_t sub_1BE153BA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a6;
  v13 = a5;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
  }
  else
  {
    v6 = sub_1BE150BCC(&v12, result, a2, a3 - result);
    v7 = v6[2];
    if (v7)
    {
      v13 = MEMORY[0x1E0DEE9D8];
      sub_1BE1B3104();
      v8 = (void *)objc_opt_self();
      v9 = v6 + 5;
      do
      {
        v10 = objc_msgSend(v8, sel_valueWithRange_, *(v9 - 1), *v9, v12);
        sub_1BE1B30E0();
        sub_1BE1B3110();
        sub_1BE1B311C();
        sub_1BE1B30EC();
        v9 += 2;
        --v7;
      }
      while (v7);
      v11 = v13;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    return v11;
  }
  return result;
}

id sub_1BE153CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v10;

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v9(a2, a3, a4, a5);
  swift_release();
  sub_1BDDC6C38(0, &qword_1EF530EB0);
  v10 = (void *)sub_1BE1B296C();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for CRAttributedString.Attributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRAttributedString.Attributes);
}

uint64_t sub_1BE153D68(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = v3;
  v8 = sub_1BE1B1DF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v3;
  v14 = sub_1BDD901B8(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = *(_QWORD *)(v12 + 24);
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_1BE1565B0(a1, *(_QWORD *)(v20 + 56) + 8 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1BDE63B68();
      goto LABEL_7;
    }
    sub_1BDE5EE9C(v17, a3 & 1);
    v22 = sub_1BDD901B8(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_1BE1565B0(a1, *(_QWORD *)(v20 + 56) + 8 * v14);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1BE155034(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE153ED8(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BDE5E12C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BDE63F5C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return sub_1BDDB6CA4(a2, a3);
    }
    goto LABEL_14;
  }
  sub_1BDE5F238(v15, a4 & 1);
  v21 = sub_1BDE5E12C(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE154038(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for Replica();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1BDDB3EC0(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v19 = *v4;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v20 = v19[7];
        v21 = sub_1BE1B206C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v13, a1, v21);
      }
      goto LABEL_11;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1BDDB4348();
      goto LABEL_7;
    }
    sub_1BDDB46CC(v16, a3 & 1);
    v23 = sub_1BDDB3EC0(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v19 = *v4;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BDD9C318(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Replica);
      return sub_1BDDB4614(v13, (uint64_t)v10, a1, v19);
    }
  }
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

_OWORD *sub_1BE1541C0(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  uint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BDDC4B9C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_1BDE77688(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BDE6461C();
      goto LABEL_7;
    }
    sub_1BDE5FB40(v12, a3 & 1);
    v18 = sub_1BDDC4B9C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BE15511C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE1542E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BDDB271C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BDE647E0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BDE5FE78(v15, a4 & 1);
  v21 = sub_1BDDB271C(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE15443C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1BDE5E12C(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1BDE65630();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_release();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return sub_1BDDB6CA4(a3, a4);
    }
    goto LABEL_14;
  }
  sub_1BDE612E8(v17, a5 & 1);
  v23 = sub_1BDE5E12C(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE1545B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;

  v8 = v7;
  v15 = *v7;
  v17 = sub_1BDDB7F0C(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1BDE657E8();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (uint64_t *)(v23[7] + 32 * v17);
      v25 = v24[2];
      v26 = v24[3];
      sub_1BDDB796C(*v24, v24[1]);
      result = sub_1BDDB796C(v25, v26);
      *v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v30 = (uint64_t *)(v23[6] + 16 * v17);
    *v30 = a5;
    v30[1] = a6;
    v31 = (uint64_t *)(v23[7] + 32 * v17);
    *v31 = a1;
    v31[1] = a2;
    v31[2] = a3;
    v31[3] = a4;
    v32 = v23[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (!v33)
    {
      v23[2] = v34;
      return sub_1BDDB6CA4(a5, a6);
    }
    goto LABEL_14;
  }
  sub_1BDE61610(v20, a7 & 1);
  v28 = sub_1BDDB7F0C(a5, a6);
  if ((v21 & 1) == (v29 & 1))
  {
    v17 = v28;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE15475C(char a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BDDB7F0C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1BDE659D4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v18[7] + v12) = a1 & 1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_BYTE *)(v18[7] + v12) = a1 & 1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return sub_1BDDB6CA4(a2, a3);
    }
    goto LABEL_14;
  }
  sub_1BDE61944(result, a4 & 1);
  result = sub_1BDDB7F0C(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE1548B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t result;
  uint64_t v25;
  char v26;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1BDDB7F0C(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = (uint64_t *)(v22[7] + 24 * v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_release();
        *v23 = a1;
        v23[1] = a2;
        v23[2] = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1BDE65B90();
      goto LABEL_7;
    }
    sub_1BDE61C58(v19, a6 & 1);
    v25 = sub_1BDDB7F0C(a4, a5);
    if ((v20 & 1) == (v26 & 1))
    {
      v16 = v25;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BE15522C(v16, a4, a5, a1, a2, a3, v22);
      return sub_1BDDB6CA4(a4, a5);
    }
  }
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE154A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  return sub_1BE154CF4(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_1BDE65FD0, (void (*)(void))sub_1BDE62340);
}

uint64_t sub_1BE154A34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1BDDB7F0C(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1BDE661C0();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 16 * v14;
      result = sub_1BDDB796C(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return sub_1BDDB6CA4(a3, a4);
    }
    goto LABEL_14;
  }
  sub_1BDE6268C(v17, a5 & 1);
  v23 = sub_1BDDB7F0C(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

_OWORD *sub_1BE154BAC(_OWORD *a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BDDB7F0C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_1BDE77688(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BDE66538();
      goto LABEL_7;
    }
    sub_1BDE62CA8(v15, a4 & 1);
    v21 = sub_1BDDB7F0C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BE155284(v12, a2, a3, a1, v18);
      return (_OWORD *)sub_1BDDB6CA4(a2, a3);
    }
  }
  result = (_OWORD *)sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE154CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  return sub_1BE154CF4(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_1BDE65FC4, (void (*)(void))sub_1BDE62334);
}

uint64_t sub_1BE154CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6, void (*a7)(void), void (*a8)(void))
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;

  v11 = v8;
  v16 = *v8;
  v18 = sub_1BDDB7F0C(a4, a5);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v22 = v17;
  v23 = *(_QWORD *)(v16 + 24);
  if (v23 >= v21 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v23 >= v21 && (a6 & 1) == 0)
  {
    a7();
LABEL_7:
    v24 = (_QWORD *)*v11;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = (_QWORD *)(v24[7] + 24 * v18);
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v25 = a1;
      v25[1] = a2;
      v25[2] = a3;
      return result;
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    v29 = (uint64_t *)(v24[6] + 16 * v18);
    *v29 = a4;
    v29[1] = a5;
    v30 = (_QWORD *)(v24[7] + 24 * v18);
    *v30 = a1;
    v30[1] = a2;
    v30[2] = a3;
    v31 = v24[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (!v32)
    {
      v24[2] = v33;
      return sub_1BDDB6CA4(a4, a5);
    }
    goto LABEL_14;
  }
  a8();
  v27 = sub_1BDDB7F0C(a4, a5);
  if ((v22 & 1) == (v28 & 1))
  {
    v18 = v27;
    v24 = (_QWORD *)*v11;
    if ((v22 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BE1B3680();
  __break(1u);
  return result;
}

uint64_t sub_1BE154EB0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BDDAE814(a1, a2, a3, (uint64_t (*)(void))sub_1BDE668C0, (void (*)(void))sub_1BDE63268);
}

uint64_t sub_1BE154EC4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BDD9004C(a1, a2, a3, (void (*)(void))sub_1BDE66CBC, (void (*)(void))sub_1BDE63584);
}

uint64_t sub_1BE154ED8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1BE1B1DF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BDD901B8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1BDE66EF8();
    goto LABEL_7;
  }
  sub_1BDE63590(v17, a3 & 1);
  v23 = sub_1BDD901B8(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1BE1B3680();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1BDDC4E48(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1BE155034(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  *(_QWORD *)(a4 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  v7 = *(_QWORD *)(a4 + 48);
  v8 = sub_1BE1B1DF0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a2, v8);
  result = sub_1BDDF32F4();
  v10 = *(_QWORD *)(a4 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    *(_QWORD *)(a4 + 16) = v12;
  return result;
}

unint64_t sub_1BE1550D4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_1BE15511C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1BDE77688(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1BE155180(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_1BE1551D0(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + 48 * result);
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v6[2] = a4[2];
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_1BE15522C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = (_QWORD *)(a7[7] + 24 * result);
  *v8 = a4;
  v8[1] = a5;
  v8[2] = a6;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

_OWORD *sub_1BE155284(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BDE77688(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BE1552EC(uint64_t result, uint64_t a2, uint64_t (*a3)(void **))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v21;
  void *v22;

  if ((*(_BYTE *)(result + 16) & 1) == 0)
  {
    v4 = *(_QWORD *)(result + 8);
    v5 = *(unsigned int *)(a2 + 36);
    if ((_DWORD)v5 != (_DWORD)v4)
      goto LABEL_36;
    v6 = *(_QWORD *)result;
    if (*(_QWORD *)result != 1 << *(_BYTE *)(a2 + 32))
    {
      v8 = a2 + 64;
      v21 = result;
      while (1)
      {
        if ((v6 & 0x8000000000000000) != 0 || (v9 = 1 << *(_BYTE *)(a2 + 32), (uint64_t)v6 >= v9))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          break;
        }
        v10 = v6 >> 6;
        v11 = *(_QWORD *)(v8 + 8 * (v6 >> 6));
        if (((v11 >> v6) & 1) == 0)
          goto LABEL_31;
        if ((_DWORD)v5 != *(_DWORD *)(a2 + 36))
          goto LABEL_32;
        v12 = v11 & (-2 << (v6 & 0x3F));
        if (v12)
        {
          result = sub_1BDE27EC8(v6, v4, 0);
          v6 = __clz(__rbit64(v12)) | v6 & 0xFFFFFFFFFFFFFFC0;
          goto LABEL_23;
        }
        v13 = v10 + 1;
        v14 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v14)
        {
          v15 = *(_QWORD *)(v8 + 8 * v13);
          if (v15)
            goto LABEL_13;
          v13 = v10 + 2;
          if (v10 + 2 < v14)
          {
            v15 = *(_QWORD *)(v8 + 8 * v13);
            if (v15)
              goto LABEL_13;
            v13 = v10 + 3;
            if (v10 + 3 < v14)
            {
              v15 = *(_QWORD *)(v8 + 8 * v13);
              if (v15)
              {
LABEL_13:
                result = sub_1BDE27EC8(v6, v4, 0);
                v6 = __clz(__rbit64(v15)) | (v13 << 6);
                goto LABEL_23;
              }
              v16 = v14 - 4;
              while (v16 != v10)
              {
                v15 = *(_QWORD *)(a2 + 96 + 8 * v10++);
                if (v15)
                {
                  v13 = v10 + 3;
                  goto LABEL_13;
                }
              }
            }
          }
        }
        result = sub_1BDE27EC8(v6, v4, 0);
        v6 = v9;
LABEL_23:
        if ((_DWORD)v5 != *(_DWORD *)(a2 + 36))
          goto LABEL_33;
        v17 = 1 << *(_BYTE *)(a2 + 32);
        if (v6 != v17)
        {
          if ((v6 & 0x8000000000000000) != 0 || (uint64_t)v6 >= v17)
            goto LABEL_34;
          if (((*(_QWORD *)(v8 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
            goto LABEL_35;
          v22 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
          v18 = v22;
          swift_retain();
          v19 = v18;
          v20 = a3(&v22);

          result = swift_release();
          v4 = v5;
          if ((v20 & 1) == 0)
            continue;
        }
        *(_QWORD *)v21 = v6;
        *(_QWORD *)(v21 + 8) = v5;
        *(_BYTE *)(v21 + 16) = 0;
        return result;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BE155518(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1C3B7CFAC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return destroy for CRStructDecoder.UnkeyedContainer;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE155584(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1BE1555D8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BE155584(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *v1);
}

uint64_t type metadata accessor for CRAttributedStringRef()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CRAttributedString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRAttributedString);
}

uint64_t sub_1BE155618()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BE155640()
{
  return swift_deallocObject();
}

id sub_1BE155650@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v4;

  v4 = *(id *)(v1 + 16);
  a1[3] = sub_1BDDC6C38(0, &qword_1EF52DF30);
  *a1 = v4;
  return v4;
}

uint64_t sub_1BE1556A0()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for CRAttributedString.Substring(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRAttributedString.Substring);
}

uint64_t sub_1BE1556BC()
{
  return swift_deallocObject();
}

uint64_t sub_1BE1556CC()
{
  return swift_deallocObject();
}

uint64_t sub_1BE1556DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BE149DDC(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_1BE1556E4()
{
  return swift_deallocObject();
}

uint64_t sub_1BE1556F4()
{
  return swift_deallocObject();
}

uint64_t sub_1BE155704()
{
  return swift_deallocObject();
}

uint64_t sub_1BE155714()
{
  return swift_deallocObject();
}

uint64_t sub_1BE155724()
{
  return swift_deallocObject();
}

uint64_t sub_1BE155734()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1BE155758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BE14F2FC(a1, a2, a3, a4, v4 + 16);
}

uint64_t sub_1BE155760()
{
  return swift_deallocObject();
}

uint64_t sub_1BE155770()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BE155798(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return sub_1BE151B1C(a1, a2, a3, a4, a5, v5[4], v5[5], v5[6]);
}

uint64_t sub_1BE1557C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BE1557E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  sub_1BE151D30(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(id *)(v4 + 32), *(_QWORD ***)(v4 + 40));
}

uint64_t sub_1BE1557F4()
{
  return swift_deallocObject();
}

uint64_t sub_1BE155804(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BE155834()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BE155860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BE150F10(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1BE155868(uint64_t a1, uint64_t (*a2)(void *, char *))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v24 = MEMORY[0x1E0DEE9D8];
  v18 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v19 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * i);
    sub_1BDDC1538(*(_QWORD *)(a1 + 56) + 32 * i, (uint64_t)v22 + 8);
    *(_QWORD *)&v22[0] = v15;
    v20[0] = v22[0];
    v20[1] = v22[1];
    v21 = v23;
    v16 = v15;
    v17 = a2(v15, (char *)v20 + 8);
    sub_1BDD86E30((uint64_t)v20, &qword_1EF530E98);
    if (v2)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = sub_1BDF30604(v17);
    if (v7)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v19)
      goto LABEL_26;
    v13 = *(_QWORD *)(v18 + 8 * v9);
    if (!v13)
      break;
LABEL_17:
    v7 = (v13 - 1) & v13;
  }
  v14 = v9 + 1;
  if (v9 + 1 >= v19)
    goto LABEL_26;
  v13 = *(_QWORD *)(v18 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v9 + 2;
  if (v9 + 2 >= v19)
    goto LABEL_26;
  v13 = *(_QWORD *)(v18 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v9 + 3;
  if (v9 + 3 >= v19)
    goto LABEL_26;
  v13 = *(_QWORD *)(v18 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v9 + 4;
  if (v9 + 4 >= v19)
  {
LABEL_26:
    swift_release();
    return v24;
  }
  v13 = *(_QWORD *)(v18 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v9 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v19)
      goto LABEL_26;
    v13 = *(_QWORD *)(v18 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

