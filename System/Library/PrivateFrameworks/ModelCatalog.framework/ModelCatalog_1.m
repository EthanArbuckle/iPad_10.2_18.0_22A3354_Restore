unint64_t sub_2420DA620(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA644();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA644()
{
  unint64_t result;

  result = qword_25719FB48;
  if (!qword_25719FB48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AutonamingMessages, &type metadata for Catalog.LLM.DraftModel.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_25719FB48);
  }
  return result;
}

void sub_2420DA680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DA694, (uint64_t (*)(void))sub_2420DA6D0);
}

unint64_t sub_2420DA694()
{
  unint64_t result;

  result = qword_25719FB50;
  if (!qword_25719FB50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AutonamingMessages, &type metadata for Catalog.LLM.DraftModel.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_25719FB50);
  }
  return result;
}

unint64_t sub_2420DA6D0()
{
  unint64_t result;

  result = qword_25719FB58;
  if (!qword_25719FB58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AutonamingMessages, &type metadata for Catalog.LLM.DraftModel.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_25719FB58);
  }
  return result;
}

unint64_t sub_2420DA710()
{
  unint64_t result;

  result = qword_25719FB60;
  if (!qword_25719FB60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AutonamingMessages, &type metadata for Catalog.LLM.DraftModel.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_25719FB60);
  }
  return result;
}

unint64_t sub_2420DA74C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA770();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA770()
{
  unint64_t result;

  result = qword_25719FB68;
  if (!qword_25719FB68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.BulletsTransform, &type metadata for Catalog.LLM.DraftModel.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719FB68);
  }
  return result;
}

unint64_t sub_2420DA7AC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA7D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA7D0()
{
  unint64_t result;

  result = qword_25719FB70;
  if (!qword_25719FB70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.BulletsTransform, &type metadata for Catalog.LLM.DraftModel.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719FB70);
  }
  return result;
}

void sub_2420DA80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DA820, (uint64_t (*)(void))sub_2420DA85C);
}

unint64_t sub_2420DA820()
{
  unint64_t result;

  result = qword_25719FB78;
  if (!qword_25719FB78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.BulletsTransform, &type metadata for Catalog.LLM.DraftModel.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719FB78);
  }
  return result;
}

unint64_t sub_2420DA85C()
{
  unint64_t result;

  result = qword_25719FB80;
  if (!qword_25719FB80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.BulletsTransform, &type metadata for Catalog.LLM.DraftModel.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719FB80);
  }
  return result;
}

unint64_t sub_2420DA89C()
{
  unint64_t result;

  result = qword_25719FB88;
  if (!qword_25719FB88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.BulletsTransform, &type metadata for Catalog.LLM.DraftModel.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719FB88);
  }
  return result;
}

unint64_t sub_2420DA8D8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA8FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA8FC()
{
  unint64_t result;

  result = qword_25719FB90;
  if (!qword_25719FB90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLM, &type metadata for Catalog.LLM.DraftModel.CodeLM);
    atomic_store(result, (unint64_t *)&qword_25719FB90);
  }
  return result;
}

unint64_t sub_2420DA938(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA95C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA95C()
{
  unint64_t result;

  result = qword_25719FB98;
  if (!qword_25719FB98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLM, &type metadata for Catalog.LLM.DraftModel.CodeLM);
    atomic_store(result, (unint64_t *)&qword_25719FB98);
  }
  return result;
}

void sub_2420DA998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DA9AC, (uint64_t (*)(void))sub_2420DA9E8);
}

unint64_t sub_2420DA9AC()
{
  unint64_t result;

  result = qword_25719FBA0;
  if (!qword_25719FBA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLM, &type metadata for Catalog.LLM.DraftModel.CodeLM);
    atomic_store(result, (unint64_t *)&qword_25719FBA0);
  }
  return result;
}

unint64_t sub_2420DA9E8()
{
  unint64_t result;

  result = qword_25719FBA8;
  if (!qword_25719FBA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLM, &type metadata for Catalog.LLM.DraftModel.CodeLM);
    atomic_store(result, (unint64_t *)&qword_25719FBA8);
  }
  return result;
}

unint64_t sub_2420DAA28()
{
  unint64_t result;

  result = qword_25719FBB0;
  if (!qword_25719FBB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLM, &type metadata for Catalog.LLM.DraftModel.CodeLM);
    atomic_store(result, (unint64_t *)&qword_25719FBB0);
  }
  return result;
}

unint64_t sub_2420DAA64(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DAA88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DAA88()
{
  unint64_t result;

  result = qword_25719FBB8;
  if (!qword_25719FBB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV1, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_25719FBB8);
  }
  return result;
}

unint64_t sub_2420DAAC4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DAAE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DAAE8()
{
  unint64_t result;

  result = qword_25719FBC0;
  if (!qword_25719FBC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV1, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_25719FBC0);
  }
  return result;
}

void sub_2420DAB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DAB38, (uint64_t (*)(void))sub_2420DAB74);
}

unint64_t sub_2420DAB38()
{
  unint64_t result;

  result = qword_25719FBC8;
  if (!qword_25719FBC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV1, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_25719FBC8);
  }
  return result;
}

unint64_t sub_2420DAB74()
{
  unint64_t result;

  result = qword_25719FBD0;
  if (!qword_25719FBD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV1, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_25719FBD0);
  }
  return result;
}

unint64_t sub_2420DABB4()
{
  unint64_t result;

  result = qword_25719FBD8;
  if (!qword_25719FBD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV1, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_25719FBD8);
  }
  return result;
}

unint64_t sub_2420DABF0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DAC14();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DAC14()
{
  unint64_t result;

  result = qword_25719FBE0;
  if (!qword_25719FBE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV2, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_25719FBE0);
  }
  return result;
}

unint64_t sub_2420DAC50(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DAC74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DAC74()
{
  unint64_t result;

  result = qword_25719FBE8;
  if (!qword_25719FBE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV2, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_25719FBE8);
  }
  return result;
}

void sub_2420DACB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DACC4, (uint64_t (*)(void))sub_2420DAD00);
}

unint64_t sub_2420DACC4()
{
  unint64_t result;

  result = qword_25719FBF0;
  if (!qword_25719FBF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV2, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_25719FBF0);
  }
  return result;
}

unint64_t sub_2420DAD00()
{
  unint64_t result;

  result = qword_25719FBF8;
  if (!qword_25719FBF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV2, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_25719FBF8);
  }
  return result;
}

unint64_t sub_2420DAD40()
{
  unint64_t result;

  result = qword_25719FC00;
  if (!qword_25719FC00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV2, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_25719FC00);
  }
  return result;
}

unint64_t sub_2420DAD7C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DADA0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DADA0()
{
  unint64_t result;

  result = qword_25719FC08;
  if (!qword_25719FC08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV3, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_25719FC08);
  }
  return result;
}

unint64_t sub_2420DADDC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DAE00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DAE00()
{
  unint64_t result;

  result = qword_25719FC10;
  if (!qword_25719FC10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV3, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_25719FC10);
  }
  return result;
}

void sub_2420DAE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DAE50, (uint64_t (*)(void))sub_2420DAE8C);
}

unint64_t sub_2420DAE50()
{
  unint64_t result;

  result = qword_25719FC18;
  if (!qword_25719FC18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV3, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_25719FC18);
  }
  return result;
}

unint64_t sub_2420DAE8C()
{
  unint64_t result;

  result = qword_25719FC20;
  if (!qword_25719FC20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV3, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_25719FC20);
  }
  return result;
}

unint64_t sub_2420DAECC()
{
  unint64_t result;

  result = qword_25719FC28;
  if (!qword_25719FC28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMLargeV3, &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_25719FC28);
  }
  return result;
}

unint64_t sub_2420DAF08(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DAF2C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DAF2C()
{
  unint64_t result;

  result = qword_25719FC30;
  if (!qword_25719FC30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV1, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_25719FC30);
  }
  return result;
}

unint64_t sub_2420DAF68(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DAF8C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DAF8C()
{
  unint64_t result;

  result = qword_25719FC38;
  if (!qword_25719FC38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV1, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_25719FC38);
  }
  return result;
}

void sub_2420DAFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DAFDC, (uint64_t (*)(void))sub_2420DB018);
}

unint64_t sub_2420DAFDC()
{
  unint64_t result;

  result = qword_25719FC40;
  if (!qword_25719FC40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV1, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_25719FC40);
  }
  return result;
}

unint64_t sub_2420DB018()
{
  unint64_t result;

  result = qword_25719FC48;
  if (!qword_25719FC48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV1, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_25719FC48);
  }
  return result;
}

unint64_t sub_2420DB058()
{
  unint64_t result;

  result = qword_25719FC50;
  if (!qword_25719FC50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV1, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_25719FC50);
  }
  return result;
}

unint64_t sub_2420DB094(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB0B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB0B8()
{
  unint64_t result;

  result = qword_25719FC58;
  if (!qword_25719FC58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV2, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_25719FC58);
  }
  return result;
}

unint64_t sub_2420DB0F4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB118();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB118()
{
  unint64_t result;

  result = qword_25719FC60;
  if (!qword_25719FC60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV2, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_25719FC60);
  }
  return result;
}

void sub_2420DB154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DB168, (uint64_t (*)(void))sub_2420DB1A4);
}

unint64_t sub_2420DB168()
{
  unint64_t result;

  result = qword_25719FC68;
  if (!qword_25719FC68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV2, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_25719FC68);
  }
  return result;
}

unint64_t sub_2420DB1A4()
{
  unint64_t result;

  result = qword_25719FC70;
  if (!qword_25719FC70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV2, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_25719FC70);
  }
  return result;
}

unint64_t sub_2420DB1E4()
{
  unint64_t result;

  result = qword_25719FC78;
  if (!qword_25719FC78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV2, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_25719FC78);
  }
  return result;
}

unint64_t sub_2420DB220(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB244();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB244()
{
  unint64_t result;

  result = qword_25719FC80;
  if (!qword_25719FC80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV3, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_25719FC80);
  }
  return result;
}

unint64_t sub_2420DB280(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB2A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB2A4()
{
  unint64_t result;

  result = qword_25719FC88;
  if (!qword_25719FC88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV3, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_25719FC88);
  }
  return result;
}

void sub_2420DB2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DB2F4, (uint64_t (*)(void))sub_2420DB330);
}

unint64_t sub_2420DB2F4()
{
  unint64_t result;

  result = qword_25719FC90;
  if (!qword_25719FC90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV3, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_25719FC90);
  }
  return result;
}

unint64_t sub_2420DB330()
{
  unint64_t result;

  result = qword_25719FC98;
  if (!qword_25719FC98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV3, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_25719FC98);
  }
  return result;
}

unint64_t sub_2420DB370()
{
  unint64_t result;

  result = qword_25719FCA0;
  if (!qword_25719FCA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMSmallV3, &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_25719FCA0);
  }
  return result;
}

unint64_t sub_2420DB3AC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB3D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB3D0()
{
  unint64_t result;

  result = qword_25719FCA8;
  if (!qword_25719FCA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMV1ANE3B, &type metadata for Catalog.LLM.DraftModel.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_25719FCA8);
  }
  return result;
}

unint64_t sub_2420DB40C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB430();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB430()
{
  unint64_t result;

  result = qword_25719FCB0;
  if (!qword_25719FCB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMV1ANE3B, &type metadata for Catalog.LLM.DraftModel.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_25719FCB0);
  }
  return result;
}

void sub_2420DB46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DB480, (uint64_t (*)(void))sub_2420DB4BC);
}

unint64_t sub_2420DB480()
{
  unint64_t result;

  result = qword_25719FCB8;
  if (!qword_25719FCB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMV1ANE3B, &type metadata for Catalog.LLM.DraftModel.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_25719FCB8);
  }
  return result;
}

unint64_t sub_2420DB4BC()
{
  unint64_t result;

  result = qword_25719FCC0;
  if (!qword_25719FCC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMV1ANE3B, &type metadata for Catalog.LLM.DraftModel.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_25719FCC0);
  }
  return result;
}

unint64_t sub_2420DB4FC()
{
  unint64_t result;

  result = qword_25719FCC8;
  if (!qword_25719FCC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.CodeLMV1ANE3B, &type metadata for Catalog.LLM.DraftModel.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_25719FCC8);
  }
  return result;
}

unint64_t sub_2420DB538(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB55C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB55C()
{
  unint64_t result;

  result = qword_25719FCD0;
  if (!qword_25719FCD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ConciseTone, &type metadata for Catalog.LLM.DraftModel.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719FCD0);
  }
  return result;
}

unint64_t sub_2420DB598(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB5BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB5BC()
{
  unint64_t result;

  result = qword_25719FCD8;
  if (!qword_25719FCD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ConciseTone, &type metadata for Catalog.LLM.DraftModel.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719FCD8);
  }
  return result;
}

void sub_2420DB5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DB60C, (uint64_t (*)(void))sub_2420DB648);
}

unint64_t sub_2420DB60C()
{
  unint64_t result;

  result = qword_25719FCE0;
  if (!qword_25719FCE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ConciseTone, &type metadata for Catalog.LLM.DraftModel.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719FCE0);
  }
  return result;
}

unint64_t sub_2420DB648()
{
  unint64_t result;

  result = qword_25719FCE8;
  if (!qword_25719FCE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ConciseTone, &type metadata for Catalog.LLM.DraftModel.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719FCE8);
  }
  return result;
}

unint64_t sub_2420DB688()
{
  unint64_t result;

  result = qword_25719FCF0;
  if (!qword_25719FCF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ConciseTone, &type metadata for Catalog.LLM.DraftModel.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719FCF0);
  }
  return result;
}

unint64_t sub_2420DB6C4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB6E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB6E8()
{
  unint64_t result;

  result = qword_25719FCF8;
  if (!qword_25719FCF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FactualConsistencyClassifier, &type metadata for Catalog.LLM.DraftModel.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719FCF8);
  }
  return result;
}

unint64_t sub_2420DB724(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB748();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB748()
{
  unint64_t result;

  result = qword_25719FD00;
  if (!qword_25719FD00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FactualConsistencyClassifier, &type metadata for Catalog.LLM.DraftModel.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719FD00);
  }
  return result;
}

void sub_2420DB784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DB798, (uint64_t (*)(void))sub_2420DB7D4);
}

unint64_t sub_2420DB798()
{
  unint64_t result;

  result = qword_25719FD08;
  if (!qword_25719FD08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FactualConsistencyClassifier, &type metadata for Catalog.LLM.DraftModel.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719FD08);
  }
  return result;
}

unint64_t sub_2420DB7D4()
{
  unint64_t result;

  result = qword_25719FD10;
  if (!qword_25719FD10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FactualConsistencyClassifier, &type metadata for Catalog.LLM.DraftModel.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719FD10);
  }
  return result;
}

unint64_t sub_2420DB814()
{
  unint64_t result;

  result = qword_25719FD18;
  if (!qword_25719FD18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FactualConsistencyClassifier, &type metadata for Catalog.LLM.DraftModel.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719FD18);
  }
  return result;
}

unint64_t sub_2420DB850(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB874();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB874()
{
  unint64_t result;

  result = qword_25719FD20;
  if (!qword_25719FD20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FriendlyTone, &type metadata for Catalog.LLM.DraftModel.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719FD20);
  }
  return result;
}

unint64_t sub_2420DB8B0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DB8D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DB8D4()
{
  unint64_t result;

  result = qword_25719FD28;
  if (!qword_25719FD28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FriendlyTone, &type metadata for Catalog.LLM.DraftModel.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719FD28);
  }
  return result;
}

void sub_2420DB910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DB924, (uint64_t (*)(void))sub_2420DB960);
}

unint64_t sub_2420DB924()
{
  unint64_t result;

  result = qword_25719FD30;
  if (!qword_25719FD30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FriendlyTone, &type metadata for Catalog.LLM.DraftModel.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719FD30);
  }
  return result;
}

unint64_t sub_2420DB960()
{
  unint64_t result;

  result = qword_25719FD38;
  if (!qword_25719FD38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FriendlyTone, &type metadata for Catalog.LLM.DraftModel.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719FD38);
  }
  return result;
}

unint64_t sub_2420DB9A0()
{
  unint64_t result;

  result = qword_25719FD40;
  if (!qword_25719FD40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.FriendlyTone, &type metadata for Catalog.LLM.DraftModel.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719FD40);
  }
  return result;
}

unint64_t sub_2420DB9DC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DBA00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DBA00()
{
  unint64_t result;

  result = qword_25719FD48;
  if (!qword_25719FD48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MagicRewrite, &type metadata for Catalog.LLM.DraftModel.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719FD48);
  }
  return result;
}

unint64_t sub_2420DBA3C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DBA60();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DBA60()
{
  unint64_t result;

  result = qword_25719FD50;
  if (!qword_25719FD50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MagicRewrite, &type metadata for Catalog.LLM.DraftModel.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719FD50);
  }
  return result;
}

void sub_2420DBA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DBAB0, (uint64_t (*)(void))sub_2420DBAEC);
}

unint64_t sub_2420DBAB0()
{
  unint64_t result;

  result = qword_25719FD58;
  if (!qword_25719FD58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MagicRewrite, &type metadata for Catalog.LLM.DraftModel.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719FD58);
  }
  return result;
}

unint64_t sub_2420DBAEC()
{
  unint64_t result;

  result = qword_25719FD60;
  if (!qword_25719FD60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MagicRewrite, &type metadata for Catalog.LLM.DraftModel.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719FD60);
  }
  return result;
}

unint64_t sub_2420DBB2C()
{
  unint64_t result;

  result = qword_25719FD68;
  if (!qword_25719FD68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MagicRewrite, &type metadata for Catalog.LLM.DraftModel.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719FD68);
  }
  return result;
}

unint64_t sub_2420DBB68(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DBB8C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DBB8C()
{
  unint64_t result;

  result = qword_25719FD70;
  if (!qword_25719FD70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MailReply, &type metadata for Catalog.LLM.DraftModel.MailReply);
    atomic_store(result, (unint64_t *)&qword_25719FD70);
  }
  return result;
}

unint64_t sub_2420DBBC8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DBBEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DBBEC()
{
  unint64_t result;

  result = qword_25719FD78;
  if (!qword_25719FD78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MailReply, &type metadata for Catalog.LLM.DraftModel.MailReply);
    atomic_store(result, (unint64_t *)&qword_25719FD78);
  }
  return result;
}

void sub_2420DBC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DBC3C, (uint64_t (*)(void))sub_2420DBC78);
}

unint64_t sub_2420DBC3C()
{
  unint64_t result;

  result = qword_25719FD80;
  if (!qword_25719FD80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MailReply, &type metadata for Catalog.LLM.DraftModel.MailReply);
    atomic_store(result, (unint64_t *)&qword_25719FD80);
  }
  return result;
}

unint64_t sub_2420DBC78()
{
  unint64_t result;

  result = qword_25719FD88;
  if (!qword_25719FD88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MailReply, &type metadata for Catalog.LLM.DraftModel.MailReply);
    atomic_store(result, (unint64_t *)&qword_25719FD88);
  }
  return result;
}

unint64_t sub_2420DBCB8()
{
  unint64_t result;

  result = qword_25719FD90;
  if (!qword_25719FD90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MailReply, &type metadata for Catalog.LLM.DraftModel.MailReply);
    atomic_store(result, (unint64_t *)&qword_25719FD90);
  }
  return result;
}

unint64_t sub_2420DBCF4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DBD18();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DBD18()
{
  unint64_t result;

  result = qword_25719FD98;
  if (!qword_25719FD98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MessagesReply, &type metadata for Catalog.LLM.DraftModel.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_25719FD98);
  }
  return result;
}

unint64_t sub_2420DBD54(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DBD78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DBD78()
{
  unint64_t result;

  result = qword_25719FDA0;
  if (!qword_25719FDA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MessagesReply, &type metadata for Catalog.LLM.DraftModel.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_25719FDA0);
  }
  return result;
}

void sub_2420DBDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DBDC8, (uint64_t (*)(void))sub_2420DBE04);
}

unint64_t sub_2420DBDC8()
{
  unint64_t result;

  result = qword_25719FDA8;
  if (!qword_25719FDA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MessagesReply, &type metadata for Catalog.LLM.DraftModel.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_25719FDA8);
  }
  return result;
}

unint64_t sub_2420DBE04()
{
  unint64_t result;

  result = qword_25719FDB0;
  if (!qword_25719FDB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MessagesReply, &type metadata for Catalog.LLM.DraftModel.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_25719FDB0);
  }
  return result;
}

unint64_t sub_2420DBE44()
{
  unint64_t result;

  result = qword_25719FDB8;
  if (!qword_25719FDB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.MessagesReply, &type metadata for Catalog.LLM.DraftModel.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_25719FDB8);
  }
  return result;
}

unint64_t sub_2420DBE80(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DBEA4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DBEA4()
{
  unint64_t result;

  result = qword_25719FDC0;
  if (!qword_25719FDC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_25719FDC0);
  }
  return result;
}

unint64_t sub_2420DBEE0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DBF04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DBF04()
{
  unint64_t result;

  result = qword_25719FDC8;
  if (!qword_25719FDC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_25719FDC8);
  }
  return result;
}

void sub_2420DBF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DBF54, (uint64_t (*)(void))sub_2420DBF90);
}

unint64_t sub_2420DBF54()
{
  unint64_t result;

  result = qword_25719FDD0;
  if (!qword_25719FDD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_25719FDD0);
  }
  return result;
}

unint64_t sub_2420DBF90()
{
  unint64_t result;

  result = qword_25719FDD8;
  if (!qword_25719FDD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_25719FDD8);
  }
  return result;
}

unint64_t sub_2420DBFD0()
{
  unint64_t result;

  result = qword_25719FDE0;
  if (!qword_25719FDE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_25719FDE0);
  }
  return result;
}

unint64_t sub_2420DC00C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC030();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC030()
{
  unint64_t result;

  result = qword_25719FDE8;
  if (!qword_25719FDE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719FDE8);
  }
  return result;
}

unint64_t sub_2420DC06C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC090();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC090()
{
  unint64_t result;

  result = qword_25719FDF0;
  if (!qword_25719FDF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719FDF0);
  }
  return result;
}

void sub_2420DC0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DC0E0, (uint64_t (*)(void))sub_2420DC11C);
}

unint64_t sub_2420DC0E0()
{
  unint64_t result;

  result = qword_25719FDF8;
  if (!qword_25719FDF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719FDF8);
  }
  return result;
}

unint64_t sub_2420DC11C()
{
  unint64_t result;

  result = qword_25719FE00;
  if (!qword_25719FE00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719FE00);
  }
  return result;
}

unint64_t sub_2420DC15C()
{
  unint64_t result;

  result = qword_25719FE08;
  if (!qword_25719FE08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719FE08);
  }
  return result;
}

unint64_t sub_2420DC198(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC1BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC1BC()
{
  unint64_t result;

  result = qword_25719FE10;
  if (!qword_25719FE10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_25719FE10);
  }
  return result;
}

unint64_t sub_2420DC1F8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC21C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC21C()
{
  unint64_t result;

  result = qword_25719FE18;
  if (!qword_25719FE18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_25719FE18);
  }
  return result;
}

void sub_2420DC258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DC26C, (uint64_t (*)(void))sub_2420DC2A8);
}

unint64_t sub_2420DC26C()
{
  unint64_t result;

  result = qword_25719FE20;
  if (!qword_25719FE20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_25719FE20);
  }
  return result;
}

unint64_t sub_2420DC2A8()
{
  unint64_t result;

  result = qword_25719FE28;
  if (!qword_25719FE28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_25719FE28);
  }
  return result;
}

unint64_t sub_2420DC2E8()
{
  unint64_t result;

  result = qword_25719FE30;
  if (!qword_25719FE30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_25719FE30);
  }
  return result;
}

unint64_t sub_2420DC324(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC348();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC348()
{
  unint64_t result;

  result = qword_25719FE38;
  if (!qword_25719FE38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719FE38);
  }
  return result;
}

unint64_t sub_2420DC384(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC3A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC3A8()
{
  unint64_t result;

  result = qword_25719FE40;
  if (!qword_25719FE40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719FE40);
  }
  return result;
}

void sub_2420DC3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DC3F8, (uint64_t (*)(void))sub_2420DC434);
}

unint64_t sub_2420DC3F8()
{
  unint64_t result;

  result = qword_25719FE48;
  if (!qword_25719FE48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719FE48);
  }
  return result;
}

unint64_t sub_2420DC434()
{
  unint64_t result;

  result = qword_25719FE50;
  if (!qword_25719FE50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719FE50);
  }
  return result;
}

unint64_t sub_2420DC474()
{
  unint64_t result;

  result = qword_25719FE58;
  if (!qword_25719FE58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719FE58);
  }
  return result;
}

unint64_t sub_2420DC4B0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC4D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC4D4()
{
  unint64_t result;

  result = qword_25719FE60;
  if (!qword_25719FE60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_25719FE60);
  }
  return result;
}

unint64_t sub_2420DC510(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC534();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC534()
{
  unint64_t result;

  result = qword_25719FE68;
  if (!qword_25719FE68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_25719FE68);
  }
  return result;
}

void sub_2420DC570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DC584, (uint64_t (*)(void))sub_2420DC5C0);
}

unint64_t sub_2420DC584()
{
  unint64_t result;

  result = qword_25719FE70;
  if (!qword_25719FE70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_25719FE70);
  }
  return result;
}

unint64_t sub_2420DC5C0()
{
  unint64_t result;

  result = qword_25719FE78;
  if (!qword_25719FE78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_25719FE78);
  }
  return result;
}

unint64_t sub_2420DC600()
{
  unint64_t result;

  result = qword_25719FE80;
  if (!qword_25719FE80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_25719FE80);
  }
  return result;
}

unint64_t sub_2420DC63C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC660();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC660()
{
  unint64_t result;

  result = qword_25719FE88;
  if (!qword_25719FE88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719FE88);
  }
  return result;
}

unint64_t sub_2420DC69C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC6C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC6C0()
{
  unint64_t result;

  result = qword_25719FE90;
  if (!qword_25719FE90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719FE90);
  }
  return result;
}

void sub_2420DC6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DC710, (uint64_t (*)(void))sub_2420DC74C);
}

unint64_t sub_2420DC710()
{
  unint64_t result;

  result = qword_25719FE98;
  if (!qword_25719FE98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719FE98);
  }
  return result;
}

unint64_t sub_2420DC74C()
{
  unint64_t result;

  result = qword_25719FEA0;
  if (!qword_25719FEA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719FEA0);
  }
  return result;
}

unint64_t sub_2420DC78C()
{
  unint64_t result;

  result = qword_25719FEA8;
  if (!qword_25719FEA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719FEA8);
  }
  return result;
}

unint64_t sub_2420DC7C8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC7EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC7EC()
{
  unint64_t result;

  result = qword_25719FEB0;
  if (!qword_25719FEB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_25719FEB0);
  }
  return result;
}

unint64_t sub_2420DC828(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC84C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC84C()
{
  unint64_t result;

  result = qword_25719FEB8;
  if (!qword_25719FEB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_25719FEB8);
  }
  return result;
}

void sub_2420DC888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DC89C, (uint64_t (*)(void))sub_2420DC8D8);
}

unint64_t sub_2420DC89C()
{
  unint64_t result;

  result = qword_25719FEC0;
  if (!qword_25719FEC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_25719FEC0);
  }
  return result;
}

unint64_t sub_2420DC8D8()
{
  unint64_t result;

  result = qword_25719FEC8;
  if (!qword_25719FEC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_25719FEC8);
  }
  return result;
}

unint64_t sub_2420DC918()
{
  unint64_t result;

  result = qword_25719FED0;
  if (!qword_25719FED0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_25719FED0);
  }
  return result;
}

unint64_t sub_2420DC954(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC978();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC978()
{
  unint64_t result;

  result = qword_25719FED8;
  if (!qword_25719FED8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719FED8);
  }
  return result;
}

unint64_t sub_2420DC9B4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DC9D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DC9D8()
{
  unint64_t result;

  result = qword_25719FEE0;
  if (!qword_25719FEE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719FEE0);
  }
  return result;
}

void sub_2420DCA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DCA28, (uint64_t (*)(void))sub_2420DCA64);
}

unint64_t sub_2420DCA28()
{
  unint64_t result;

  result = qword_25719FEE8;
  if (!qword_25719FEE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719FEE8);
  }
  return result;
}

unint64_t sub_2420DCA64()
{
  unint64_t result;

  result = qword_25719FEF0;
  if (!qword_25719FEF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719FEF0);
  }
  return result;
}

unint64_t sub_2420DCAA4()
{
  unint64_t result;

  result = qword_25719FEF8;
  if (!qword_25719FEF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719FEF8);
  }
  return result;
}

unint64_t sub_2420DCAE0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DCB04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DCB04()
{
  unint64_t result;

  result = qword_25719FF00;
  if (!qword_25719FF00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Planner, &type metadata for Catalog.LLM.DraftModel.Planner);
    atomic_store(result, (unint64_t *)&qword_25719FF00);
  }
  return result;
}

unint64_t sub_2420DCB40(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DCB64();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DCB64()
{
  unint64_t result;

  result = qword_25719FF08;
  if (!qword_25719FF08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Planner, &type metadata for Catalog.LLM.DraftModel.Planner);
    atomic_store(result, (unint64_t *)&qword_25719FF08);
  }
  return result;
}

void sub_2420DCBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DCBB4, (uint64_t (*)(void))sub_2420DCBF0);
}

unint64_t sub_2420DCBB4()
{
  unint64_t result;

  result = qword_25719FF10;
  if (!qword_25719FF10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Planner, &type metadata for Catalog.LLM.DraftModel.Planner);
    atomic_store(result, (unint64_t *)&qword_25719FF10);
  }
  return result;
}

unint64_t sub_2420DCBF0()
{
  unint64_t result;

  result = qword_25719FF18;
  if (!qword_25719FF18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Planner, &type metadata for Catalog.LLM.DraftModel.Planner);
    atomic_store(result, (unint64_t *)&qword_25719FF18);
  }
  return result;
}

unint64_t sub_2420DCC30()
{
  unint64_t result;

  result = qword_25719FF20;
  if (!qword_25719FF20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Planner, &type metadata for Catalog.LLM.DraftModel.Planner);
    atomic_store(result, (unint64_t *)&qword_25719FF20);
  }
  return result;
}

unint64_t sub_2420DCC6C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DCC90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DCC90()
{
  unint64_t result;

  result = qword_25719FF28;
  if (!qword_25719FF28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV2, &type metadata for Catalog.LLM.DraftModel.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719FF28);
  }
  return result;
}

unint64_t sub_2420DCCCC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DCCF0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DCCF0()
{
  unint64_t result;

  result = qword_25719FF30;
  if (!qword_25719FF30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV2, &type metadata for Catalog.LLM.DraftModel.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719FF30);
  }
  return result;
}

void sub_2420DCD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DCD40, (uint64_t (*)(void))sub_2420DCD7C);
}

unint64_t sub_2420DCD40()
{
  unint64_t result;

  result = qword_25719FF38;
  if (!qword_25719FF38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV2, &type metadata for Catalog.LLM.DraftModel.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719FF38);
  }
  return result;
}

unint64_t sub_2420DCD7C()
{
  unint64_t result;

  result = qword_25719FF40;
  if (!qword_25719FF40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV2, &type metadata for Catalog.LLM.DraftModel.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719FF40);
  }
  return result;
}

unint64_t sub_2420DCDBC()
{
  unint64_t result;

  result = qword_25719FF48;
  if (!qword_25719FF48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV2, &type metadata for Catalog.LLM.DraftModel.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719FF48);
  }
  return result;
}

unint64_t sub_2420DCDF8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DCE1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DCE1C()
{
  unint64_t result;

  result = qword_25719FF50;
  if (!qword_25719FF50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV3, &type metadata for Catalog.LLM.DraftModel.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719FF50);
  }
  return result;
}

unint64_t sub_2420DCE58(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DCE7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DCE7C()
{
  unint64_t result;

  result = qword_25719FF58;
  if (!qword_25719FF58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV3, &type metadata for Catalog.LLM.DraftModel.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719FF58);
  }
  return result;
}

void sub_2420DCEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DCECC, (uint64_t (*)(void))sub_2420DCF08);
}

unint64_t sub_2420DCECC()
{
  unint64_t result;

  result = qword_25719FF60;
  if (!qword_25719FF60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV3, &type metadata for Catalog.LLM.DraftModel.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719FF60);
  }
  return result;
}

unint64_t sub_2420DCF08()
{
  unint64_t result;

  result = qword_25719FF68;
  if (!qword_25719FF68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV3, &type metadata for Catalog.LLM.DraftModel.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719FF68);
  }
  return result;
}

unint64_t sub_2420DCF48()
{
  unint64_t result;

  result = qword_25719FF70;
  if (!qword_25719FF70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.PlannerV3, &type metadata for Catalog.LLM.DraftModel.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719FF70);
  }
  return result;
}

unint64_t sub_2420DCF84(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DCFA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DCFA8()
{
  unint64_t result;

  result = qword_25719FF78;
  if (!qword_25719FF78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719FF78);
  }
  return result;
}

unint64_t sub_2420DCFE4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD008();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD008()
{
  unint64_t result;

  result = qword_25719FF80;
  if (!qword_25719FF80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719FF80);
  }
  return result;
}

void sub_2420DD044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DD058, (uint64_t (*)(void))sub_2420DD094);
}

unint64_t sub_2420DD058()
{
  unint64_t result;

  result = qword_25719FF88;
  if (!qword_25719FF88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719FF88);
  }
  return result;
}

unint64_t sub_2420DD094()
{
  unint64_t result;

  result = qword_25719FF90;
  if (!qword_25719FF90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719FF90);
  }
  return result;
}

unint64_t sub_2420DD0D4()
{
  unint64_t result;

  result = qword_25719FF98;
  if (!qword_25719FF98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719FF98);
  }
  return result;
}

unint64_t sub_2420DD110(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD134();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD134()
{
  unint64_t result;

  result = qword_25719FFA0;
  if (!qword_25719FFA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719FFA0);
  }
  return result;
}

unint64_t sub_2420DD170(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD194();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD194()
{
  unint64_t result;

  result = qword_25719FFA8;
  if (!qword_25719FFA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719FFA8);
  }
  return result;
}

void sub_2420DD1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DD1E4, (uint64_t (*)(void))sub_2420DD220);
}

unint64_t sub_2420DD1E4()
{
  unint64_t result;

  result = qword_25719FFB0;
  if (!qword_25719FFB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719FFB0);
  }
  return result;
}

unint64_t sub_2420DD220()
{
  unint64_t result;

  result = qword_25719FFB8;
  if (!qword_25719FFB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719FFB8);
  }
  return result;
}

unint64_t sub_2420DD260()
{
  unint64_t result;

  result = qword_25719FFC0;
  if (!qword_25719FFC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719FFC0);
  }
  return result;
}

unint64_t sub_2420DD29C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD2C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD2C0()
{
  unint64_t result;

  result = qword_25719FFC8;
  if (!qword_25719FFC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGeneration, &type metadata for Catalog.LLM.DraftModel.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719FFC8);
  }
  return result;
}

unint64_t sub_2420DD2FC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD320();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD320()
{
  unint64_t result;

  result = qword_25719FFD0;
  if (!qword_25719FFD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGeneration, &type metadata for Catalog.LLM.DraftModel.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719FFD0);
  }
  return result;
}

void sub_2420DD35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DD370, (uint64_t (*)(void))sub_2420DD3AC);
}

unint64_t sub_2420DD370()
{
  unint64_t result;

  result = qword_25719FFD8;
  if (!qword_25719FFD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGeneration, &type metadata for Catalog.LLM.DraftModel.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719FFD8);
  }
  return result;
}

unint64_t sub_2420DD3AC()
{
  unint64_t result;

  result = qword_25719FFE0;
  if (!qword_25719FFE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGeneration, &type metadata for Catalog.LLM.DraftModel.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719FFE0);
  }
  return result;
}

unint64_t sub_2420DD3EC()
{
  unint64_t result;

  result = qword_25719FFE8;
  if (!qword_25719FFE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGeneration, &type metadata for Catalog.LLM.DraftModel.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719FFE8);
  }
  return result;
}

unint64_t sub_2420DD428(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD44C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD44C()
{
  unint64_t result;

  result = qword_25719FFF0;
  if (!qword_25719FFF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV2, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_25719FFF0);
  }
  return result;
}

unint64_t sub_2420DD488(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD4AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD4AC()
{
  unint64_t result;

  result = qword_25719FFF8;
  if (!qword_25719FFF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV2, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_25719FFF8);
  }
  return result;
}

void sub_2420DD4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DD4FC, (uint64_t (*)(void))sub_2420DD538);
}

unint64_t sub_2420DD4FC()
{
  unint64_t result;

  result = qword_2571A0000;
  if (!qword_2571A0000)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV2, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0000);
  }
  return result;
}

unint64_t sub_2420DD538()
{
  unint64_t result;

  result = qword_2571A0008;
  if (!qword_2571A0008)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV2, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0008);
  }
  return result;
}

unint64_t sub_2420DD578()
{
  unint64_t result;

  result = qword_2571A0010;
  if (!qword_2571A0010)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV2, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0010);
  }
  return result;
}

unint64_t sub_2420DD5B4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD5D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD5D8()
{
  unint64_t result;

  result = qword_2571A0018;
  if (!qword_2571A0018)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV3, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A0018);
  }
  return result;
}

unint64_t sub_2420DD614(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD638();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD638()
{
  unint64_t result;

  result = qword_2571A0020;
  if (!qword_2571A0020)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV3, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A0020);
  }
  return result;
}

void sub_2420DD674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DD688, (uint64_t (*)(void))sub_2420DD6C4);
}

unint64_t sub_2420DD688()
{
  unint64_t result;

  result = qword_2571A0028;
  if (!qword_2571A0028)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV3, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A0028);
  }
  return result;
}

unint64_t sub_2420DD6C4()
{
  unint64_t result;

  result = qword_2571A0030;
  if (!qword_2571A0030)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV3, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A0030);
  }
  return result;
}

unint64_t sub_2420DD704()
{
  unint64_t result;

  result = qword_2571A0038;
  if (!qword_2571A0038)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ResponseGenerationV3, &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A0038);
  }
  return result;
}

unint64_t sub_2420DD740(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD764();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD764()
{
  unint64_t result;

  result = qword_2571A0040;
  if (!qword_2571A0040)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SafetyGuardrail, &type metadata for Catalog.LLM.DraftModel.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0040);
  }
  return result;
}

unint64_t sub_2420DD7A0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD7C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD7C4()
{
  unint64_t result;

  result = qword_2571A0048;
  if (!qword_2571A0048)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SafetyGuardrail, &type metadata for Catalog.LLM.DraftModel.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0048);
  }
  return result;
}

void sub_2420DD800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DD814, (uint64_t (*)(void))sub_2420DD850);
}

unint64_t sub_2420DD814()
{
  unint64_t result;

  result = qword_2571A0050;
  if (!qword_2571A0050)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SafetyGuardrail, &type metadata for Catalog.LLM.DraftModel.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0050);
  }
  return result;
}

unint64_t sub_2420DD850()
{
  unint64_t result;

  result = qword_2571A0058;
  if (!qword_2571A0058)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SafetyGuardrail, &type metadata for Catalog.LLM.DraftModel.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0058);
  }
  return result;
}

unint64_t sub_2420DD890()
{
  unint64_t result;

  result = qword_2571A0060;
  if (!qword_2571A0060)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SafetyGuardrail, &type metadata for Catalog.LLM.DraftModel.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0060);
  }
  return result;
}

unint64_t sub_2420DD8CC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD8F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD8F0()
{
  unint64_t result;

  result = qword_2571A0068;
  if (!qword_2571A0068)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_2571A0068);
  }
  return result;
}

unint64_t sub_2420DD92C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DD950();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DD950()
{
  unint64_t result;

  result = qword_2571A0070;
  if (!qword_2571A0070)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_2571A0070);
  }
  return result;
}

void sub_2420DD98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DD9A0, (uint64_t (*)(void))sub_2420DD9DC);
}

unint64_t sub_2420DD9A0()
{
  unint64_t result;

  result = qword_2571A0078;
  if (!qword_2571A0078)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_2571A0078);
  }
  return result;
}

unint64_t sub_2420DD9DC()
{
  unint64_t result;

  result = qword_2571A0080;
  if (!qword_2571A0080)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_2571A0080);
  }
  return result;
}

unint64_t sub_2420DDA1C()
{
  unint64_t result;

  result = qword_2571A0088;
  if (!qword_2571A0088)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_2571A0088);
  }
  return result;
}

unint64_t sub_2420DDA58(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DDA7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DDA7C()
{
  unint64_t result;

  result = qword_2571A0090;
  if (!qword_2571A0090)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A0090);
  }
  return result;
}

unint64_t sub_2420DDAB8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DDADC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DDADC()
{
  unint64_t result;

  result = qword_2571A0098;
  if (!qword_2571A0098)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A0098);
  }
  return result;
}

void sub_2420DDB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DDB2C, (uint64_t (*)(void))sub_2420DDB68);
}

unint64_t sub_2420DDB2C()
{
  unint64_t result;

  result = qword_2571A00A0;
  if (!qword_2571A00A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A00A0);
  }
  return result;
}

unint64_t sub_2420DDB68()
{
  unint64_t result;

  result = qword_2571A00A8;
  if (!qword_2571A00A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A00A8);
  }
  return result;
}

unint64_t sub_2420DDBA8()
{
  unint64_t result;

  result = qword_2571A00B0;
  if (!qword_2571A00B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A00B0);
  }
  return result;
}

unint64_t sub_2420DDBE4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DDC08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DDC08()
{
  unint64_t result;

  result = qword_2571A00B8;
  if (!qword_2571A00B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerBulletsTransform, &type metadata for Catalog.LLM.DraftModel.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A00B8);
  }
  return result;
}

unint64_t sub_2420DDC44(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DDC68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DDC68()
{
  unint64_t result;

  result = qword_2571A00C0;
  if (!qword_2571A00C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerBulletsTransform, &type metadata for Catalog.LLM.DraftModel.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A00C0);
  }
  return result;
}

void sub_2420DDCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DDCB8, (uint64_t (*)(void))sub_2420DDCF4);
}

unint64_t sub_2420DDCB8()
{
  unint64_t result;

  result = qword_2571A00C8;
  if (!qword_2571A00C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerBulletsTransform, &type metadata for Catalog.LLM.DraftModel.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A00C8);
  }
  return result;
}

unint64_t sub_2420DDCF4()
{
  unint64_t result;

  result = qword_2571A00D0;
  if (!qword_2571A00D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerBulletsTransform, &type metadata for Catalog.LLM.DraftModel.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A00D0);
  }
  return result;
}

unint64_t sub_2420DDD34()
{
  unint64_t result;

  result = qword_2571A00D8;
  if (!qword_2571A00D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerBulletsTransform, &type metadata for Catalog.LLM.DraftModel.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A00D8);
  }
  return result;
}

unint64_t sub_2420DDD70(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DDD94();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DDD94()
{
  unint64_t result;

  result = qword_2571A00E0;
  if (!qword_2571A00E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerConciseTone, &type metadata for Catalog.LLM.DraftModel.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A00E0);
  }
  return result;
}

unint64_t sub_2420DDDD0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DDDF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DDDF4()
{
  unint64_t result;

  result = qword_2571A00E8;
  if (!qword_2571A00E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerConciseTone, &type metadata for Catalog.LLM.DraftModel.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A00E8);
  }
  return result;
}

void sub_2420DDE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DDE44, (uint64_t (*)(void))sub_2420DDE80);
}

unint64_t sub_2420DDE44()
{
  unint64_t result;

  result = qword_2571A00F0;
  if (!qword_2571A00F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerConciseTone, &type metadata for Catalog.LLM.DraftModel.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A00F0);
  }
  return result;
}

unint64_t sub_2420DDE80()
{
  unint64_t result;

  result = qword_2571A00F8;
  if (!qword_2571A00F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerConciseTone, &type metadata for Catalog.LLM.DraftModel.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A00F8);
  }
  return result;
}

unint64_t sub_2420DDEC0()
{
  unint64_t result;

  result = qword_2571A0100;
  if (!qword_2571A0100)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerConciseTone, &type metadata for Catalog.LLM.DraftModel.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A0100);
  }
  return result;
}

unint64_t sub_2420DDEFC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DDF20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DDF20()
{
  unint64_t result;

  result = qword_2571A0108;
  if (!qword_2571A0108)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerFriendlyTone, &type metadata for Catalog.LLM.DraftModel.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0108);
  }
  return result;
}

unint64_t sub_2420DDF5C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DDF80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DDF80()
{
  unint64_t result;

  result = qword_2571A0110;
  if (!qword_2571A0110)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerFriendlyTone, &type metadata for Catalog.LLM.DraftModel.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0110);
  }
  return result;
}

void sub_2420DDFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DDFD0, (uint64_t (*)(void))sub_2420DE00C);
}

unint64_t sub_2420DDFD0()
{
  unint64_t result;

  result = qword_2571A0118;
  if (!qword_2571A0118)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerFriendlyTone, &type metadata for Catalog.LLM.DraftModel.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0118);
  }
  return result;
}

unint64_t sub_2420DE00C()
{
  unint64_t result;

  result = qword_2571A0120;
  if (!qword_2571A0120)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerFriendlyTone, &type metadata for Catalog.LLM.DraftModel.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0120);
  }
  return result;
}

unint64_t sub_2420DE04C()
{
  unint64_t result;

  result = qword_2571A0128;
  if (!qword_2571A0128)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerFriendlyTone, &type metadata for Catalog.LLM.DraftModel.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0128);
  }
  return result;
}

unint64_t sub_2420DE088(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE0AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE0AC()
{
  unint64_t result;

  result = qword_2571A0130;
  if (!qword_2571A0130)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMagicRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0130);
  }
  return result;
}

unint64_t sub_2420DE0E8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE10C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE10C()
{
  unint64_t result;

  result = qword_2571A0138;
  if (!qword_2571A0138)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMagicRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0138);
  }
  return result;
}

void sub_2420DE148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DE15C, (uint64_t (*)(void))sub_2420DE198);
}

unint64_t sub_2420DE15C()
{
  unint64_t result;

  result = qword_2571A0140;
  if (!qword_2571A0140)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMagicRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0140);
  }
  return result;
}

unint64_t sub_2420DE198()
{
  unint64_t result;

  result = qword_2571A0148;
  if (!qword_2571A0148)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMagicRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0148);
  }
  return result;
}

unint64_t sub_2420DE1D8()
{
  unint64_t result;

  result = qword_2571A0150;
  if (!qword_2571A0150)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMagicRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0150);
  }
  return result;
}

unint64_t sub_2420DE214(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE238();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE238()
{
  unint64_t result;

  result = qword_2571A0158;
  if (!qword_2571A0158)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0158);
  }
  return result;
}

unint64_t sub_2420DE274(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE298();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE298()
{
  unint64_t result;

  result = qword_2571A0160;
  if (!qword_2571A0160)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0160);
  }
  return result;
}

void sub_2420DE2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DE2E8, (uint64_t (*)(void))sub_2420DE324);
}

unint64_t sub_2420DE2E8()
{
  unint64_t result;

  result = qword_2571A0168;
  if (!qword_2571A0168)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0168);
  }
  return result;
}

unint64_t sub_2420DE324()
{
  unint64_t result;

  result = qword_2571A0170;
  if (!qword_2571A0170)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0170);
  }
  return result;
}

unint64_t sub_2420DE364()
{
  unint64_t result;

  result = qword_2571A0178;
  if (!qword_2571A0178)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0178);
  }
  return result;
}

unint64_t sub_2420DE3A0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE3C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE3C4()
{
  unint64_t result;

  result = qword_2571A0180;
  if (!qword_2571A0180)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0180);
  }
  return result;
}

unint64_t sub_2420DE400(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE424();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE424()
{
  unint64_t result;

  result = qword_2571A0188;
  if (!qword_2571A0188)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0188);
  }
  return result;
}

void sub_2420DE460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DE474, (uint64_t (*)(void))sub_2420DE4B0);
}

unint64_t sub_2420DE474()
{
  unint64_t result;

  result = qword_2571A0190;
  if (!qword_2571A0190)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0190);
  }
  return result;
}

unint64_t sub_2420DE4B0()
{
  unint64_t result;

  result = qword_2571A0198;
  if (!qword_2571A0198)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0198);
  }
  return result;
}

unint64_t sub_2420DE4F0()
{
  unint64_t result;

  result = qword_2571A01A0;
  if (!qword_2571A01A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A01A0);
  }
  return result;
}

unint64_t sub_2420DE52C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE550();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE550()
{
  unint64_t result;

  result = qword_2571A01A8;
  if (!qword_2571A01A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyQA, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A01A8);
  }
  return result;
}

unint64_t sub_2420DE58C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE5B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE5B0()
{
  unint64_t result;

  result = qword_2571A01B0;
  if (!qword_2571A01B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyQA, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A01B0);
  }
  return result;
}

void sub_2420DE5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DE600, (uint64_t (*)(void))sub_2420DE63C);
}

unint64_t sub_2420DE600()
{
  unint64_t result;

  result = qword_2571A01B8;
  if (!qword_2571A01B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyQA, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A01B8);
  }
  return result;
}

unint64_t sub_2420DE63C()
{
  unint64_t result;

  result = qword_2571A01C0;
  if (!qword_2571A01C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyQA, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A01C0);
  }
  return result;
}

unint64_t sub_2420DE67C()
{
  unint64_t result;

  result = qword_2571A01C8;
  if (!qword_2571A01C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerMailReplyQA, &type metadata for Catalog.LLM.DraftModel.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A01C8);
  }
  return result;
}

unint64_t sub_2420DE6B8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE6DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE6DC()
{
  unint64_t result;

  result = qword_2571A01D0;
  if (!qword_2571A01D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A01D0);
  }
  return result;
}

unint64_t sub_2420DE718(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE73C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE73C()
{
  unint64_t result;

  result = qword_2571A01D8;
  if (!qword_2571A01D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A01D8);
  }
  return result;
}

void sub_2420DE778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DE78C, (uint64_t (*)(void))sub_2420DE7C8);
}

unint64_t sub_2420DE78C()
{
  unint64_t result;

  result = qword_2571A01E0;
  if (!qword_2571A01E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A01E0);
  }
  return result;
}

unint64_t sub_2420DE7C8()
{
  unint64_t result;

  result = qword_2571A01E8;
  if (!qword_2571A01E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A01E8);
  }
  return result;
}

unint64_t sub_2420DE808()
{
  unint64_t result;

  result = qword_2571A01F0;
  if (!qword_2571A01F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProfessionalTone, &type metadata for Catalog.LLM.DraftModel.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A01F0);
  }
  return result;
}

unint64_t sub_2420DE844(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE868();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE868()
{
  unint64_t result;

  result = qword_2571A01F8;
  if (!qword_2571A01F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A01F8);
  }
  return result;
}

unint64_t sub_2420DE8A4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE8C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE8C8()
{
  unint64_t result;

  result = qword_2571A0200;
  if (!qword_2571A0200)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A0200);
  }
  return result;
}

void sub_2420DE904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DE918, (uint64_t (*)(void))sub_2420DE954);
}

unint64_t sub_2420DE918()
{
  unint64_t result;

  result = qword_2571A0208;
  if (!qword_2571A0208)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A0208);
  }
  return result;
}

unint64_t sub_2420DE954()
{
  unint64_t result;

  result = qword_2571A0210;
  if (!qword_2571A0210)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A0210);
  }
  return result;
}

unint64_t sub_2420DE994()
{
  unint64_t result;

  result = qword_2571A0218;
  if (!qword_2571A0218)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerProofreadingReview, &type metadata for Catalog.LLM.DraftModel.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A0218);
  }
  return result;
}

unint64_t sub_2420DE9D0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DE9F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DE9F4()
{
  unint64_t result;

  result = qword_2571A0220;
  if (!qword_2571A0220)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTablesTransform, &type metadata for Catalog.LLM.DraftModel.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0220);
  }
  return result;
}

unint64_t sub_2420DEA30(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DEA54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DEA54()
{
  unint64_t result;

  result = qword_2571A0228;
  if (!qword_2571A0228)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTablesTransform, &type metadata for Catalog.LLM.DraftModel.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0228);
  }
  return result;
}

void sub_2420DEA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DEAA4, (uint64_t (*)(void))sub_2420DEAE0);
}

unint64_t sub_2420DEAA4()
{
  unint64_t result;

  result = qword_2571A0230;
  if (!qword_2571A0230)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTablesTransform, &type metadata for Catalog.LLM.DraftModel.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0230);
  }
  return result;
}

unint64_t sub_2420DEAE0()
{
  unint64_t result;

  result = qword_2571A0238;
  if (!qword_2571A0238)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTablesTransform, &type metadata for Catalog.LLM.DraftModel.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0238);
  }
  return result;
}

unint64_t sub_2420DEB20()
{
  unint64_t result;

  result = qword_2571A0240;
  if (!qword_2571A0240)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTablesTransform, &type metadata for Catalog.LLM.DraftModel.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0240);
  }
  return result;
}

unint64_t sub_2420DEB5C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DEB80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DEB80()
{
  unint64_t result;

  result = qword_2571A0248;
  if (!qword_2571A0248)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0248);
  }
  return result;
}

unint64_t sub_2420DEBBC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DEBE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DEBE0()
{
  unint64_t result;

  result = qword_2571A0250;
  if (!qword_2571A0250)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0250);
  }
  return result;
}

void sub_2420DEC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DEC30, (uint64_t (*)(void))sub_2420DEC6C);
}

unint64_t sub_2420DEC30()
{
  unint64_t result;

  result = qword_2571A0258;
  if (!qword_2571A0258)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0258);
  }
  return result;
}

unint64_t sub_2420DEC6C()
{
  unint64_t result;

  result = qword_2571A0260;
  if (!qword_2571A0260)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0260);
  }
  return result;
}

unint64_t sub_2420DECAC()
{
  unint64_t result;

  result = qword_2571A0268;
  if (!qword_2571A0268)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0268);
  }
  return result;
}

unint64_t sub_2420DECE8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DED0C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DED0C()
{
  unint64_t result;

  result = qword_2571A0270;
  if (!qword_2571A0270)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTextSummarizer, &type metadata for Catalog.LLM.DraftModel.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0270);
  }
  return result;
}

unint64_t sub_2420DED48(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DED6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DED6C()
{
  unint64_t result;

  result = qword_2571A0278;
  if (!qword_2571A0278)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTextSummarizer, &type metadata for Catalog.LLM.DraftModel.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0278);
  }
  return result;
}

void sub_2420DEDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DEDBC, (uint64_t (*)(void))sub_2420DEDF8);
}

unint64_t sub_2420DEDBC()
{
  unint64_t result;

  result = qword_2571A0280;
  if (!qword_2571A0280)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTextSummarizer, &type metadata for Catalog.LLM.DraftModel.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0280);
  }
  return result;
}

unint64_t sub_2420DEDF8()
{
  unint64_t result;

  result = qword_2571A0288;
  if (!qword_2571A0288)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTextSummarizer, &type metadata for Catalog.LLM.DraftModel.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0288);
  }
  return result;
}

unint64_t sub_2420DEE38()
{
  unint64_t result;

  result = qword_2571A0290;
  if (!qword_2571A0290)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.ServerTextSummarizer, &type metadata for Catalog.LLM.DraftModel.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0290);
  }
  return result;
}

unint64_t sub_2420DEE74(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DEE98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DEE98()
{
  unint64_t result;

  result = qword_2571A0298;
  if (!qword_2571A0298)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Summarization, &type metadata for Catalog.LLM.DraftModel.Summarization);
    atomic_store(result, (unint64_t *)&qword_2571A0298);
  }
  return result;
}

unint64_t sub_2420DEED4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DEEF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DEEF8()
{
  unint64_t result;

  result = qword_2571A02A0;
  if (!qword_2571A02A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Summarization, &type metadata for Catalog.LLM.DraftModel.Summarization);
    atomic_store(result, (unint64_t *)&qword_2571A02A0);
  }
  return result;
}

void sub_2420DEF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DEF48, (uint64_t (*)(void))sub_2420DEF84);
}

unint64_t sub_2420DEF48()
{
  unint64_t result;

  result = qword_2571A02A8;
  if (!qword_2571A02A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Summarization, &type metadata for Catalog.LLM.DraftModel.Summarization);
    atomic_store(result, (unint64_t *)&qword_2571A02A8);
  }
  return result;
}

unint64_t sub_2420DEF84()
{
  unint64_t result;

  result = qword_2571A02B0;
  if (!qword_2571A02B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Summarization, &type metadata for Catalog.LLM.DraftModel.Summarization);
    atomic_store(result, (unint64_t *)&qword_2571A02B0);
  }
  return result;
}

unint64_t sub_2420DEFC4()
{
  unint64_t result;

  result = qword_2571A02B8;
  if (!qword_2571A02B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.Summarization, &type metadata for Catalog.LLM.DraftModel.Summarization);
    atomic_store(result, (unint64_t *)&qword_2571A02B8);
  }
  return result;
}

unint64_t sub_2420DF000(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF024();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF024()
{
  unint64_t result;

  result = qword_2571A02C0;
  if (!qword_2571A02C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TablesTransform, &type metadata for Catalog.LLM.DraftModel.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A02C0);
  }
  return result;
}

unint64_t sub_2420DF060(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF084();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF084()
{
  unint64_t result;

  result = qword_2571A02C8;
  if (!qword_2571A02C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TablesTransform, &type metadata for Catalog.LLM.DraftModel.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A02C8);
  }
  return result;
}

void sub_2420DF0C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DF0D4, (uint64_t (*)(void))sub_2420DF110);
}

unint64_t sub_2420DF0D4()
{
  unint64_t result;

  result = qword_2571A02D0;
  if (!qword_2571A02D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TablesTransform, &type metadata for Catalog.LLM.DraftModel.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A02D0);
  }
  return result;
}

unint64_t sub_2420DF110()
{
  unint64_t result;

  result = qword_2571A02D8;
  if (!qword_2571A02D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TablesTransform, &type metadata for Catalog.LLM.DraftModel.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A02D8);
  }
  return result;
}

unint64_t sub_2420DF150()
{
  unint64_t result;

  result = qword_2571A02E0;
  if (!qword_2571A02E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TablesTransform, &type metadata for Catalog.LLM.DraftModel.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A02E0);
  }
  return result;
}

unint64_t sub_2420DF18C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF1B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF1B0()
{
  unint64_t result;

  result = qword_2571A02E8;
  if (!qword_2571A02E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A02E8);
  }
  return result;
}

unint64_t sub_2420DF1EC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF210();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF210()
{
  unint64_t result;

  result = qword_2571A02F0;
  if (!qword_2571A02F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A02F0);
  }
  return result;
}

void sub_2420DF24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DF260, (uint64_t (*)(void))sub_2420DF29C);
}

unint64_t sub_2420DF260()
{
  unint64_t result;

  result = qword_2571A02F8;
  if (!qword_2571A02F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A02F8);
  }
  return result;
}

unint64_t sub_2420DF29C()
{
  unint64_t result;

  result = qword_2571A0300;
  if (!qword_2571A0300)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0300);
  }
  return result;
}

unint64_t sub_2420DF2DC()
{
  unint64_t result;

  result = qword_2571A0308;
  if (!qword_2571A0308)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.TakeawaysTransform, &type metadata for Catalog.LLM.DraftModel.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0308);
  }
  return result;
}

unint64_t sub_2420DF318(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF33C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF33C()
{
  unint64_t result;

  result = qword_2571A0310;
  if (!qword_2571A0310)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UIPreviews, &type metadata for Catalog.LLM.DraftModel.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_2571A0310);
  }
  return result;
}

unint64_t sub_2420DF378(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF39C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF39C()
{
  unint64_t result;

  result = qword_2571A0318;
  if (!qword_2571A0318)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UIPreviews, &type metadata for Catalog.LLM.DraftModel.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_2571A0318);
  }
  return result;
}

void sub_2420DF3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DF3EC, (uint64_t (*)(void))sub_2420DF428);
}

unint64_t sub_2420DF3EC()
{
  unint64_t result;

  result = qword_2571A0320;
  if (!qword_2571A0320)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UIPreviews, &type metadata for Catalog.LLM.DraftModel.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_2571A0320);
  }
  return result;
}

unint64_t sub_2420DF428()
{
  unint64_t result;

  result = qword_2571A0328;
  if (!qword_2571A0328)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UIPreviews, &type metadata for Catalog.LLM.DraftModel.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_2571A0328);
  }
  return result;
}

unint64_t sub_2420DF468()
{
  unint64_t result;

  result = qword_2571A0330;
  if (!qword_2571A0330)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UIPreviews, &type metadata for Catalog.LLM.DraftModel.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_2571A0330);
  }
  return result;
}

unint64_t sub_2420DF4A4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF4C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF4C8()
{
  unint64_t result;

  result = qword_2571A0338;
  if (!qword_2571A0338)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UrgencyClassification, &type metadata for Catalog.LLM.DraftModel.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_2571A0338);
  }
  return result;
}

unint64_t sub_2420DF504(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF528();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF528()
{
  unint64_t result;

  result = qword_2571A0340;
  if (!qword_2571A0340)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UrgencyClassification, &type metadata for Catalog.LLM.DraftModel.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_2571A0340);
  }
  return result;
}

void sub_2420DF564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DF578, (uint64_t (*)(void))sub_2420DF5B4);
}

unint64_t sub_2420DF578()
{
  unint64_t result;

  result = qword_2571A0348;
  if (!qword_2571A0348)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UrgencyClassification, &type metadata for Catalog.LLM.DraftModel.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_2571A0348);
  }
  return result;
}

unint64_t sub_2420DF5B4()
{
  unint64_t result;

  result = qword_2571A0350;
  if (!qword_2571A0350)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UrgencyClassification, &type metadata for Catalog.LLM.DraftModel.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_2571A0350);
  }
  return result;
}

unint64_t sub_2420DF5F4()
{
  unint64_t result;

  result = qword_2571A0358;
  if (!qword_2571A0358)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.UrgencyClassification, &type metadata for Catalog.LLM.DraftModel.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_2571A0358);
  }
  return result;
}

unint64_t sub_2420DF634()
{
  unint64_t result;

  result = qword_2571A0360;
  if (!qword_2571A0360)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.AFMTextInstructEnglish49k, &type metadata for Catalog.Tokenizer.AFMTextInstructEnglish49k);
    atomic_store(result, (unint64_t *)&qword_2571A0360);
  }
  return result;
}

unint64_t sub_2420DF670(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF694();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF694()
{
  unint64_t result;

  result = qword_2571A0368;
  if (!qword_2571A0368)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.AFMTextInstruct3BBase, &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase);
    atomic_store(result, (unint64_t *)&qword_2571A0368);
  }
  return result;
}

unint64_t sub_2420DF6D0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420C02AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF6F4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF718();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF718()
{
  unint64_t result;

  result = qword_2543974E8;
  if (!qword_2543974E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.AFMTextInstruct3BBase, &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase);
    atomic_store(result, (unint64_t *)&qword_2543974E8);
  }
  return result;
}

void sub_2420DF754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DF768, (uint64_t (*)(void))sub_2420DF7A4);
}

unint64_t sub_2420DF768()
{
  unint64_t result;

  result = qword_2543974D0;
  if (!qword_2543974D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.AFMTextInstruct3BBase, &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase);
    atomic_store(result, (unint64_t *)&qword_2543974D0);
  }
  return result;
}

unint64_t sub_2420DF7A4()
{
  unint64_t result;

  result = qword_2543974E0;
  if (!qword_2543974E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.AFMTextInstruct3BBase, &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase);
    atomic_store(result, (unint64_t *)&qword_2543974E0);
  }
  return result;
}

unint64_t sub_2420DF7E4()
{
  unint64_t result;

  result = qword_2543974D8;
  if (!qword_2543974D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.AFMTextInstruct3BBase, &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase);
    atomic_store(result, (unint64_t *)&qword_2543974D8);
  }
  return result;
}

unint64_t sub_2420DF824()
{
  unint64_t result;

  result = qword_2571A0370;
  if (!qword_2571A0370)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizer, &type metadata for Catalog.Tokenizer.CodeLMTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0370);
  }
  return result;
}

unint64_t sub_2420DF860(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF884();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF884()
{
  unint64_t result;

  result = qword_2571A0378;
  if (!qword_2571A0378)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLM, &type metadata for Catalog.LLM.Model.CodeLM);
    atomic_store(result, (unint64_t *)&qword_2571A0378);
  }
  return result;
}

unint64_t sub_2420DF8C0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF8E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF8E4()
{
  unint64_t result;

  result = qword_2571A0380;
  if (!qword_2571A0380)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLM, &type metadata for Catalog.LLM.Model.CodeLM);
    atomic_store(result, (unint64_t *)&qword_2571A0380);
  }
  return result;
}

unint64_t sub_2420DF920(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DF944();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DF944()
{
  unint64_t result;

  result = qword_254397528;
  if (!qword_254397528)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLM, &type metadata for Catalog.LLM.Model.CodeLM);
    atomic_store(result, (unint64_t *)&qword_254397528);
  }
  return result;
}

void sub_2420DF980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DF994, (uint64_t (*)(void))sub_2420DF9D0);
}

unint64_t sub_2420DF994()
{
  unint64_t result;

  result = qword_254397510;
  if (!qword_254397510)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLM, &type metadata for Catalog.LLM.Model.CodeLM);
    atomic_store(result, (unint64_t *)&qword_254397510);
  }
  return result;
}

unint64_t sub_2420DF9D0()
{
  unint64_t result;

  result = qword_254397520;
  if (!qword_254397520)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLM, &type metadata for Catalog.LLM.Model.CodeLM);
    atomic_store(result, (unint64_t *)&qword_254397520);
  }
  return result;
}

unint64_t sub_2420DFA10()
{
  unint64_t result;

  result = qword_254397518;
  if (!qword_254397518)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLM, &type metadata for Catalog.LLM.Model.CodeLM);
    atomic_store(result, (unint64_t *)&qword_254397518);
  }
  return result;
}

unint64_t sub_2420DFA50()
{
  unint64_t result;

  result = qword_2571A0388;
  if (!qword_2571A0388)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerExperimental, &type metadata for Catalog.Tokenizer.CodeLMTokenizerExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A0388);
  }
  return result;
}

unint64_t sub_2420DFA8C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFAB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFAB0()
{
  unint64_t result;

  result = qword_2571A0390;
  if (!qword_2571A0390)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMExperimental, &type metadata for Catalog.LLM.Model.CodeLMExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A0390);
  }
  return result;
}

unint64_t sub_2420DFAEC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFB10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFB10()
{
  unint64_t result;

  result = qword_2571A0398;
  if (!qword_2571A0398)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMExperimental, &type metadata for Catalog.LLM.Model.CodeLMExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A0398);
  }
  return result;
}

unint64_t sub_2420DFB4C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFB70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFB70()
{
  unint64_t result;

  result = qword_2571A03A0;
  if (!qword_2571A03A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMExperimental, &type metadata for Catalog.LLM.Model.CodeLMExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A03A0);
  }
  return result;
}

void sub_2420DFBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DFBC0, (uint64_t (*)(void))sub_2420DFBFC);
}

unint64_t sub_2420DFBC0()
{
  unint64_t result;

  result = qword_2571A03A8;
  if (!qword_2571A03A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMExperimental, &type metadata for Catalog.LLM.Model.CodeLMExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A03A8);
  }
  return result;
}

unint64_t sub_2420DFBFC()
{
  unint64_t result;

  result = qword_2571A03B0;
  if (!qword_2571A03B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMExperimental, &type metadata for Catalog.LLM.Model.CodeLMExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A03B0);
  }
  return result;
}

unint64_t sub_2420DFC3C()
{
  unint64_t result;

  result = qword_2571A03B8;
  if (!qword_2571A03B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMExperimental, &type metadata for Catalog.LLM.Model.CodeLMExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A03B8);
  }
  return result;
}

unint64_t sub_2420DFC7C()
{
  unint64_t result;

  result = qword_2571A03C0;
  if (!qword_2571A03C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A03C0);
  }
  return result;
}

unint64_t sub_2420DFCB8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFCDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFCDC()
{
  unint64_t result;

  result = qword_2571A03C8;
  if (!qword_2571A03C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV1, &type metadata for Catalog.LLM.Model.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_2571A03C8);
  }
  return result;
}

unint64_t sub_2420DFD18(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFD3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFD3C()
{
  unint64_t result;

  result = qword_2571A03D0;
  if (!qword_2571A03D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV1, &type metadata for Catalog.LLM.Model.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_2571A03D0);
  }
  return result;
}

unint64_t sub_2420DFD78(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFD9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFD9C()
{
  unint64_t result;

  result = qword_2571A03D8;
  if (!qword_2571A03D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV1, &type metadata for Catalog.LLM.Model.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_2571A03D8);
  }
  return result;
}

void sub_2420DFDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DFDEC, (uint64_t (*)(void))sub_2420DFE28);
}

unint64_t sub_2420DFDEC()
{
  unint64_t result;

  result = qword_2571A03E0;
  if (!qword_2571A03E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV1, &type metadata for Catalog.LLM.Model.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_2571A03E0);
  }
  return result;
}

unint64_t sub_2420DFE28()
{
  unint64_t result;

  result = qword_2571A03E8;
  if (!qword_2571A03E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV1, &type metadata for Catalog.LLM.Model.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_2571A03E8);
  }
  return result;
}

unint64_t sub_2420DFE68()
{
  unint64_t result;

  result = qword_2571A03F0;
  if (!qword_2571A03F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV1, &type metadata for Catalog.LLM.Model.CodeLMLargeV1);
    atomic_store(result, (unint64_t *)&qword_2571A03F0);
  }
  return result;
}

unint64_t sub_2420DFEA8()
{
  unint64_t result;

  result = qword_2571A03F8;
  if (!qword_2571A03F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A03F8);
  }
  return result;
}

unint64_t sub_2420DFEE4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFF08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFF08()
{
  unint64_t result;

  result = qword_2571A0400;
  if (!qword_2571A0400)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV2, &type metadata for Catalog.LLM.Model.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_2571A0400);
  }
  return result;
}

unint64_t sub_2420DFF44(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFF68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFF68()
{
  unint64_t result;

  result = qword_2571A0408;
  if (!qword_2571A0408)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV2, &type metadata for Catalog.LLM.Model.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_2571A0408);
  }
  return result;
}

unint64_t sub_2420DFFA4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DFFC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DFFC8()
{
  unint64_t result;

  result = qword_2571A0410;
  if (!qword_2571A0410)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV2, &type metadata for Catalog.LLM.Model.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_2571A0410);
  }
  return result;
}

void sub_2420E0004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E0018, (uint64_t (*)(void))sub_2420E0054);
}

unint64_t sub_2420E0018()
{
  unint64_t result;

  result = qword_2571A0418;
  if (!qword_2571A0418)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV2, &type metadata for Catalog.LLM.Model.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_2571A0418);
  }
  return result;
}

unint64_t sub_2420E0054()
{
  unint64_t result;

  result = qword_2571A0420;
  if (!qword_2571A0420)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV2, &type metadata for Catalog.LLM.Model.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_2571A0420);
  }
  return result;
}

unint64_t sub_2420E0094()
{
  unint64_t result;

  result = qword_2571A0428;
  if (!qword_2571A0428)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV2, &type metadata for Catalog.LLM.Model.CodeLMLargeV2);
    atomic_store(result, (unint64_t *)&qword_2571A0428);
  }
  return result;
}

unint64_t sub_2420E00D4()
{
  unint64_t result;

  result = qword_2571A0430;
  if (!qword_2571A0430)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0430);
  }
  return result;
}

unint64_t sub_2420E0110(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0134();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0134()
{
  unint64_t result;

  result = qword_2571A0438;
  if (!qword_2571A0438)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV3, &type metadata for Catalog.LLM.Model.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_2571A0438);
  }
  return result;
}

unint64_t sub_2420E0170(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0194();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0194()
{
  unint64_t result;

  result = qword_2571A0440;
  if (!qword_2571A0440)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV3, &type metadata for Catalog.LLM.Model.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_2571A0440);
  }
  return result;
}

unint64_t sub_2420E01D0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E01F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E01F4()
{
  unint64_t result;

  result = qword_2571A0448;
  if (!qword_2571A0448)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV3, &type metadata for Catalog.LLM.Model.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_2571A0448);
  }
  return result;
}

void sub_2420E0230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E0244, (uint64_t (*)(void))sub_2420E0280);
}

unint64_t sub_2420E0244()
{
  unint64_t result;

  result = qword_2571A0450;
  if (!qword_2571A0450)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV3, &type metadata for Catalog.LLM.Model.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_2571A0450);
  }
  return result;
}

unint64_t sub_2420E0280()
{
  unint64_t result;

  result = qword_2571A0458;
  if (!qword_2571A0458)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV3, &type metadata for Catalog.LLM.Model.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_2571A0458);
  }
  return result;
}

unint64_t sub_2420E02C0()
{
  unint64_t result;

  result = qword_2571A0460;
  if (!qword_2571A0460)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMLargeV3, &type metadata for Catalog.LLM.Model.CodeLMLargeV3);
    atomic_store(result, (unint64_t *)&qword_2571A0460);
  }
  return result;
}

unint64_t sub_2420E0300()
{
  unint64_t result;

  result = qword_2571A0468;
  if (!qword_2571A0468)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0468);
  }
  return result;
}

unint64_t sub_2420E033C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0360();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0360()
{
  unint64_t result;

  result = qword_2571A0470;
  if (!qword_2571A0470)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeLMSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0470);
  }
  return result;
}

unint64_t sub_2420E039C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E03C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E03C0()
{
  unint64_t result;

  result = qword_2571A0478;
  if (!qword_2571A0478)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeLMSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0478);
  }
  return result;
}

unint64_t sub_2420E03FC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0420();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0420()
{
  unint64_t result;

  result = qword_2571A0480;
  if (!qword_2571A0480)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeLMSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0480);
  }
  return result;
}

void sub_2420E045C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E0470, (uint64_t (*)(void))sub_2420E04AC);
}

unint64_t sub_2420E0470()
{
  unint64_t result;

  result = qword_2571A0488;
  if (!qword_2571A0488)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeLMSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0488);
  }
  return result;
}

unint64_t sub_2420E04AC()
{
  unint64_t result;

  result = qword_2571A0490;
  if (!qword_2571A0490)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeLMSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0490);
  }
  return result;
}

unint64_t sub_2420E04EC()
{
  unint64_t result;

  result = qword_2571A0498;
  if (!qword_2571A0498)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeLMSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0498);
  }
  return result;
}

unint64_t sub_2420E052C()
{
  unint64_t result;

  result = qword_2571A04A0;
  if (!qword_2571A04A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A04A0);
  }
  return result;
}

unint64_t sub_2420E0568(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E058C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E058C()
{
  unint64_t result;

  result = qword_2571A04A8;
  if (!qword_2571A04A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV1, &type metadata for Catalog.LLM.Model.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_2571A04A8);
  }
  return result;
}

unint64_t sub_2420E05C8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E05EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E05EC()
{
  unint64_t result;

  result = qword_2571A04B0;
  if (!qword_2571A04B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV1, &type metadata for Catalog.LLM.Model.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_2571A04B0);
  }
  return result;
}

unint64_t sub_2420E0628(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E064C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E064C()
{
  unint64_t result;

  result = qword_2571A04B8;
  if (!qword_2571A04B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV1, &type metadata for Catalog.LLM.Model.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_2571A04B8);
  }
  return result;
}

void sub_2420E0688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E069C, (uint64_t (*)(void))sub_2420E06D8);
}

unint64_t sub_2420E069C()
{
  unint64_t result;

  result = qword_2571A04C0;
  if (!qword_2571A04C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV1, &type metadata for Catalog.LLM.Model.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_2571A04C0);
  }
  return result;
}

unint64_t sub_2420E06D8()
{
  unint64_t result;

  result = qword_2571A04C8;
  if (!qword_2571A04C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV1, &type metadata for Catalog.LLM.Model.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_2571A04C8);
  }
  return result;
}

unint64_t sub_2420E0718()
{
  unint64_t result;

  result = qword_2571A04D0;
  if (!qword_2571A04D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV1, &type metadata for Catalog.LLM.Model.CodeLMSmallV1);
    atomic_store(result, (unint64_t *)&qword_2571A04D0);
  }
  return result;
}

unint64_t sub_2420E0758()
{
  unint64_t result;

  result = qword_2571A04D8;
  if (!qword_2571A04D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A04D8);
  }
  return result;
}

unint64_t sub_2420E0794(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E07B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E07B8()
{
  unint64_t result;

  result = qword_2571A04E0;
  if (!qword_2571A04E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV2, &type metadata for Catalog.LLM.Model.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_2571A04E0);
  }
  return result;
}

unint64_t sub_2420E07F4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0818();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0818()
{
  unint64_t result;

  result = qword_2571A04E8;
  if (!qword_2571A04E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV2, &type metadata for Catalog.LLM.Model.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_2571A04E8);
  }
  return result;
}

unint64_t sub_2420E0854(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0878();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0878()
{
  unint64_t result;

  result = qword_2571A04F0;
  if (!qword_2571A04F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV2, &type metadata for Catalog.LLM.Model.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_2571A04F0);
  }
  return result;
}

void sub_2420E08B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E08C8, (uint64_t (*)(void))sub_2420E0904);
}

unint64_t sub_2420E08C8()
{
  unint64_t result;

  result = qword_2571A04F8;
  if (!qword_2571A04F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV2, &type metadata for Catalog.LLM.Model.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_2571A04F8);
  }
  return result;
}

unint64_t sub_2420E0904()
{
  unint64_t result;

  result = qword_2571A0500;
  if (!qword_2571A0500)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV2, &type metadata for Catalog.LLM.Model.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_2571A0500);
  }
  return result;
}

unint64_t sub_2420E0944()
{
  unint64_t result;

  result = qword_2571A0508;
  if (!qword_2571A0508)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV2, &type metadata for Catalog.LLM.Model.CodeLMSmallV2);
    atomic_store(result, (unint64_t *)&qword_2571A0508);
  }
  return result;
}

unint64_t sub_2420E0984()
{
  unint64_t result;

  result = qword_2571A0510;
  if (!qword_2571A0510)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0510);
  }
  return result;
}

unint64_t sub_2420E09C0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E09E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E09E4()
{
  unint64_t result;

  result = qword_2571A0518;
  if (!qword_2571A0518)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV3, &type metadata for Catalog.LLM.Model.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_2571A0518);
  }
  return result;
}

unint64_t sub_2420E0A20(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0A44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0A44()
{
  unint64_t result;

  result = qword_2571A0520;
  if (!qword_2571A0520)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV3, &type metadata for Catalog.LLM.Model.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_2571A0520);
  }
  return result;
}

unint64_t sub_2420E0A80(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0AA4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0AA4()
{
  unint64_t result;

  result = qword_2571A0528;
  if (!qword_2571A0528)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV3, &type metadata for Catalog.LLM.Model.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_2571A0528);
  }
  return result;
}

void sub_2420E0AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E0AF4, (uint64_t (*)(void))sub_2420E0B30);
}

unint64_t sub_2420E0AF4()
{
  unint64_t result;

  result = qword_2571A0530;
  if (!qword_2571A0530)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV3, &type metadata for Catalog.LLM.Model.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_2571A0530);
  }
  return result;
}

unint64_t sub_2420E0B30()
{
  unint64_t result;

  result = qword_2571A0538;
  if (!qword_2571A0538)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV3, &type metadata for Catalog.LLM.Model.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_2571A0538);
  }
  return result;
}

unint64_t sub_2420E0B70()
{
  unint64_t result;

  result = qword_2571A0540;
  if (!qword_2571A0540)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMSmallV3, &type metadata for Catalog.LLM.Model.CodeLMSmallV3);
    atomic_store(result, (unint64_t *)&qword_2571A0540);
  }
  return result;
}

unint64_t sub_2420E0BB0()
{
  unint64_t result;

  result = qword_2571A0548;
  if (!qword_2571A0548)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer, &type metadata for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0548);
  }
  return result;
}

unint64_t sub_2420E0BEC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0C10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0C10()
{
  unint64_t result;

  result = qword_2571A0550;
  if (!qword_2571A0550)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV1ANE3B, &type metadata for Catalog.LLM.Model.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_2571A0550);
  }
  return result;
}

unint64_t sub_2420E0C4C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0C70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0C70()
{
  unint64_t result;

  result = qword_2571A0558;
  if (!qword_2571A0558)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV1ANE3B, &type metadata for Catalog.LLM.Model.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_2571A0558);
  }
  return result;
}

unint64_t sub_2420E0CAC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0CD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0CD0()
{
  unint64_t result;

  result = qword_2571A0560;
  if (!qword_2571A0560)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV1ANE3B, &type metadata for Catalog.LLM.Model.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_2571A0560);
  }
  return result;
}

void sub_2420E0D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E0D20, (uint64_t (*)(void))sub_2420E0D5C);
}

unint64_t sub_2420E0D20()
{
  unint64_t result;

  result = qword_2571A0568;
  if (!qword_2571A0568)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV1ANE3B, &type metadata for Catalog.LLM.Model.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_2571A0568);
  }
  return result;
}

unint64_t sub_2420E0D5C()
{
  unint64_t result;

  result = qword_2571A0570;
  if (!qword_2571A0570)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV1ANE3B, &type metadata for Catalog.LLM.Model.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_2571A0570);
  }
  return result;
}

unint64_t sub_2420E0D9C()
{
  unint64_t result;

  result = qword_2571A0578;
  if (!qword_2571A0578)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV1ANE3B, &type metadata for Catalog.LLM.Model.CodeLMV1ANE3B);
    atomic_store(result, (unint64_t *)&qword_2571A0578);
  }
  return result;
}

unint64_t sub_2420E0DDC()
{
  unint64_t result;

  result = qword_2571A0580;
  if (!qword_2571A0580)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV2, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV2);
    atomic_store(result, (unint64_t *)&qword_2571A0580);
  }
  return result;
}

unint64_t sub_2420E0E18(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0E3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0E3C()
{
  unint64_t result;

  result = qword_2571A0588;
  if (!qword_2571A0588)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV2, &type metadata for Catalog.LLM.Model.CodeLMV2);
    atomic_store(result, (unint64_t *)&qword_2571A0588);
  }
  return result;
}

unint64_t sub_2420E0E78(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0E9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0E9C()
{
  unint64_t result;

  result = qword_2571A0590;
  if (!qword_2571A0590)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV2, &type metadata for Catalog.LLM.Model.CodeLMV2);
    atomic_store(result, (unint64_t *)&qword_2571A0590);
  }
  return result;
}

unint64_t sub_2420E0ED8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E0EFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E0EFC()
{
  unint64_t result;

  result = qword_2571A0598;
  if (!qword_2571A0598)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV2, &type metadata for Catalog.LLM.Model.CodeLMV2);
    atomic_store(result, (unint64_t *)&qword_2571A0598);
  }
  return result;
}

void sub_2420E0F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E0F4C, (uint64_t (*)(void))sub_2420E0F88);
}

unint64_t sub_2420E0F4C()
{
  unint64_t result;

  result = qword_2571A05A0;
  if (!qword_2571A05A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV2, &type metadata for Catalog.LLM.Model.CodeLMV2);
    atomic_store(result, (unint64_t *)&qword_2571A05A0);
  }
  return result;
}

unint64_t sub_2420E0F88()
{
  unint64_t result;

  result = qword_2571A05A8;
  if (!qword_2571A05A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV2, &type metadata for Catalog.LLM.Model.CodeLMV2);
    atomic_store(result, (unint64_t *)&qword_2571A05A8);
  }
  return result;
}

unint64_t sub_2420E0FC8()
{
  unint64_t result;

  result = qword_2571A05B0;
  if (!qword_2571A05B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV2, &type metadata for Catalog.LLM.Model.CodeLMV2);
    atomic_store(result, (unint64_t *)&qword_2571A05B0);
  }
  return result;
}

unint64_t sub_2420E1008()
{
  unint64_t result;

  result = qword_2571A05B8;
  if (!qword_2571A05B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV3, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV3);
    atomic_store(result, (unint64_t *)&qword_2571A05B8);
  }
  return result;
}

unint64_t sub_2420E1044(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1068();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1068()
{
  unint64_t result;

  result = qword_2571A05C0;
  if (!qword_2571A05C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV3, &type metadata for Catalog.LLM.Model.CodeLMV3);
    atomic_store(result, (unint64_t *)&qword_2571A05C0);
  }
  return result;
}

unint64_t sub_2420E10A4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E10C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E10C8()
{
  unint64_t result;

  result = qword_2571A05C8;
  if (!qword_2571A05C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV3, &type metadata for Catalog.LLM.Model.CodeLMV3);
    atomic_store(result, (unint64_t *)&qword_2571A05C8);
  }
  return result;
}

unint64_t sub_2420E1104(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1128();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1128()
{
  unint64_t result;

  result = qword_2571A05D0;
  if (!qword_2571A05D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV3, &type metadata for Catalog.LLM.Model.CodeLMV3);
    atomic_store(result, (unint64_t *)&qword_2571A05D0);
  }
  return result;
}

void sub_2420E1164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E1178, (uint64_t (*)(void))sub_2420E11B4);
}

unint64_t sub_2420E1178()
{
  unint64_t result;

  result = qword_2571A05D8;
  if (!qword_2571A05D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV3, &type metadata for Catalog.LLM.Model.CodeLMV3);
    atomic_store(result, (unint64_t *)&qword_2571A05D8);
  }
  return result;
}

unint64_t sub_2420E11B4()
{
  unint64_t result;

  result = qword_2571A05E0;
  if (!qword_2571A05E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV3, &type metadata for Catalog.LLM.Model.CodeLMV3);
    atomic_store(result, (unint64_t *)&qword_2571A05E0);
  }
  return result;
}

unint64_t sub_2420E11F4()
{
  unint64_t result;

  result = qword_2571A05E8;
  if (!qword_2571A05E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV3, &type metadata for Catalog.LLM.Model.CodeLMV3);
    atomic_store(result, (unint64_t *)&qword_2571A05E8);
  }
  return result;
}

unint64_t sub_2420E1234()
{
  unint64_t result;

  result = qword_2571A05F0;
  if (!qword_2571A05F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV4, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV4);
    atomic_store(result, (unint64_t *)&qword_2571A05F0);
  }
  return result;
}

unint64_t sub_2420E1270(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1294();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1294()
{
  unint64_t result;

  result = qword_2571A05F8;
  if (!qword_2571A05F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV4, &type metadata for Catalog.LLM.Model.CodeLMV4);
    atomic_store(result, (unint64_t *)&qword_2571A05F8);
  }
  return result;
}

unint64_t sub_2420E12D0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E12F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E12F4()
{
  unint64_t result;

  result = qword_2571A0600;
  if (!qword_2571A0600)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV4, &type metadata for Catalog.LLM.Model.CodeLMV4);
    atomic_store(result, (unint64_t *)&qword_2571A0600);
  }
  return result;
}

unint64_t sub_2420E1330(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1354();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1354()
{
  unint64_t result;

  result = qword_2571A0608;
  if (!qword_2571A0608)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV4, &type metadata for Catalog.LLM.Model.CodeLMV4);
    atomic_store(result, (unint64_t *)&qword_2571A0608);
  }
  return result;
}

void sub_2420E1390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E13A4, (uint64_t (*)(void))sub_2420E13E0);
}

unint64_t sub_2420E13A4()
{
  unint64_t result;

  result = qword_2571A0610;
  if (!qword_2571A0610)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV4, &type metadata for Catalog.LLM.Model.CodeLMV4);
    atomic_store(result, (unint64_t *)&qword_2571A0610);
  }
  return result;
}

unint64_t sub_2420E13E0()
{
  unint64_t result;

  result = qword_2571A0618;
  if (!qword_2571A0618)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV4, &type metadata for Catalog.LLM.Model.CodeLMV4);
    atomic_store(result, (unint64_t *)&qword_2571A0618);
  }
  return result;
}

unint64_t sub_2420E1420()
{
  unint64_t result;

  result = qword_2571A0620;
  if (!qword_2571A0620)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeLMV4, &type metadata for Catalog.LLM.Model.CodeLMV4);
    atomic_store(result, (unint64_t *)&qword_2571A0620);
  }
  return result;
}

unint64_t sub_2420E1460()
{
  unint64_t result;

  result = qword_2571A0628;
  if (!qword_2571A0628)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0628);
  }
  return result;
}

unint64_t sub_2420E149C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E14C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E14C0()
{
  unint64_t result;

  result = qword_2571A0630;
  if (!qword_2571A0630)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0630);
  }
  return result;
}

unint64_t sub_2420E14FC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1520();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1520()
{
  unint64_t result;

  result = qword_2571A0638;
  if (!qword_2571A0638)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0638);
  }
  return result;
}

unint64_t sub_2420E155C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1580();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1580()
{
  unint64_t result;

  result = qword_2571A0640;
  if (!qword_2571A0640)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0640);
  }
  return result;
}

void sub_2420E15BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E15D0, (uint64_t (*)(void))sub_2420E160C);
}

unint64_t sub_2420E15D0()
{
  unint64_t result;

  result = qword_2571A0648;
  if (!qword_2571A0648)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0648);
  }
  return result;
}

unint64_t sub_2420E160C()
{
  unint64_t result;

  result = qword_2571A0650;
  if (!qword_2571A0650)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0650);
  }
  return result;
}

unint64_t sub_2420E164C()
{
  unint64_t result;

  result = qword_2571A0658;
  if (!qword_2571A0658)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.CodeSafetyGuardrail, &type metadata for Catalog.LLM.Model.CodeSafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2571A0658);
  }
  return result;
}

unint64_t sub_2420E168C()
{
  unint64_t result;

  result = qword_2571A0660;
  if (!qword_2571A0660)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.InstructServerTokenizer, &type metadata for Catalog.Tokenizer.InstructServerTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0660);
  }
  return result;
}

unint64_t sub_2420E16C8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E16EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E16EC()
{
  unint64_t result;

  result = qword_2571A0668;
  if (!qword_2571A0668)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.InstructServerBase, &type metadata for Catalog.LLM.Model.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0668);
  }
  return result;
}

unint64_t sub_2420E1728(uint64_t a1)
{
  unint64_t result;

  result = sub_2420C02EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E174C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1770();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1770()
{
  unint64_t result;

  result = qword_2571A0670;
  if (!qword_2571A0670)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.InstructServerBase, &type metadata for Catalog.LLM.Model.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0670);
  }
  return result;
}

void sub_2420E17AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E17C0, (uint64_t (*)(void))sub_2420E17FC);
}

unint64_t sub_2420E17C0()
{
  unint64_t result;

  result = qword_2571A0678;
  if (!qword_2571A0678)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.InstructServerBase, &type metadata for Catalog.LLM.Model.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0678);
  }
  return result;
}

unint64_t sub_2420E17FC()
{
  unint64_t result;

  result = qword_2571A0680;
  if (!qword_2571A0680)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.InstructServerBase, &type metadata for Catalog.LLM.Model.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0680);
  }
  return result;
}

unint64_t sub_2420E183C()
{
  unint64_t result;

  result = qword_2571A0688;
  if (!qword_2571A0688)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.InstructServerBase, &type metadata for Catalog.LLM.Model.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0688);
  }
  return result;
}

unint64_t sub_2420E187C()
{
  unint64_t result;

  result = qword_2571A0690;
  if (!qword_2571A0690)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.NLRouterTokenizer, &type metadata for Catalog.Tokenizer.NLRouterTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0690);
  }
  return result;
}

unint64_t sub_2420E18B8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E18DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E18DC()
{
  unint64_t result;

  result = qword_2543974C8;
  if (!qword_2543974C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.NLRouterBase, &type metadata for Catalog.LLM.Model.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2543974C8);
  }
  return result;
}

unint64_t sub_2420E1918(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E193C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E193C()
{
  unint64_t result;

  result = qword_2543974C0;
  if (!qword_2543974C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.NLRouterBase, &type metadata for Catalog.LLM.Model.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2543974C0);
  }
  return result;
}

unint64_t sub_2420E1978(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E199C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E199C()
{
  unint64_t result;

  result = qword_2543974B8;
  if (!qword_2543974B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.NLRouterBase, &type metadata for Catalog.LLM.Model.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2543974B8);
  }
  return result;
}

void sub_2420E19D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E19EC, (uint64_t (*)(void))sub_2420E1A28);
}

unint64_t sub_2420E19EC()
{
  unint64_t result;

  result = qword_2543974A0;
  if (!qword_2543974A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.NLRouterBase, &type metadata for Catalog.LLM.Model.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2543974A0);
  }
  return result;
}

unint64_t sub_2420E1A28()
{
  unint64_t result;

  result = qword_2543974B0;
  if (!qword_2543974B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.NLRouterBase, &type metadata for Catalog.LLM.Model.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2543974B0);
  }
  return result;
}

unint64_t sub_2420E1A68()
{
  unint64_t result;

  result = qword_2543974A8;
  if (!qword_2543974A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.NLRouterBase, &type metadata for Catalog.LLM.Model.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2543974A8);
  }
  return result;
}

unint64_t sub_2420E1AA8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1ACC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1ACC()
{
  unint64_t result;

  result = qword_2571A0698;
  if (!qword_2571A0698)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_2571A0698);
  }
  return result;
}

unint64_t sub_2420E1B08(uint64_t a1)
{
  unint64_t result;

  result = sub_2420C032C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1B2C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1B50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1B50()
{
  unint64_t result;

  result = qword_254397508;
  if (!qword_254397508)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_254397508);
  }
  return result;
}

void sub_2420E1B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E1BA0, (uint64_t (*)(void))sub_2420E1BDC);
}

unint64_t sub_2420E1BA0()
{
  unint64_t result;

  result = qword_2543974F0;
  if (!qword_2543974F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_2543974F0);
  }
  return result;
}

unint64_t sub_2420E1BDC()
{
  unint64_t result;

  result = qword_254397500;
  if (!qword_254397500)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_254397500);
  }
  return result;
}

unint64_t sub_2420E1C1C()
{
  unint64_t result;

  result = qword_2543974F8;
  if (!qword_2543974F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_2543974F8);
  }
  return result;
}

unint64_t sub_2420E1C5C()
{
  unint64_t result;

  result = qword_2571A06A0;
  if (!qword_2571A06A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer, &type metadata for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A06A0);
  }
  return result;
}

unint64_t sub_2420E1C98(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1CBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1CBC()
{
  unint64_t result;

  result = qword_2571A06A8;
  if (!qword_2571A06A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SafetyGuardrailLite, &type metadata for Catalog.LLM.Model.SafetyGuardrailLite);
    atomic_store(result, (unint64_t *)&qword_2571A06A8);
  }
  return result;
}

unint64_t sub_2420E1CF8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1D1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1D1C()
{
  unint64_t result;

  result = qword_2571A06B0;
  if (!qword_2571A06B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SafetyGuardrailLite, &type metadata for Catalog.LLM.Model.SafetyGuardrailLite);
    atomic_store(result, (unint64_t *)&qword_2571A06B0);
  }
  return result;
}

unint64_t sub_2420E1D58(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1D7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1D7C()
{
  unint64_t result;

  result = qword_2571A06B8;
  if (!qword_2571A06B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SafetyGuardrailLite, &type metadata for Catalog.LLM.Model.SafetyGuardrailLite);
    atomic_store(result, (unint64_t *)&qword_2571A06B8);
  }
  return result;
}

void sub_2420E1DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E1DCC, (uint64_t (*)(void))sub_2420E1E08);
}

unint64_t sub_2420E1DCC()
{
  unint64_t result;

  result = qword_2571A06C0;
  if (!qword_2571A06C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SafetyGuardrailLite, &type metadata for Catalog.LLM.Model.SafetyGuardrailLite);
    atomic_store(result, (unint64_t *)&qword_2571A06C0);
  }
  return result;
}

unint64_t sub_2420E1E08()
{
  unint64_t result;

  result = qword_2571A06C8;
  if (!qword_2571A06C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SafetyGuardrailLite, &type metadata for Catalog.LLM.Model.SafetyGuardrailLite);
    atomic_store(result, (unint64_t *)&qword_2571A06C8);
  }
  return result;
}

unint64_t sub_2420E1E48()
{
  unint64_t result;

  result = qword_2571A06D0;
  if (!qword_2571A06D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SafetyGuardrailLite, &type metadata for Catalog.LLM.Model.SafetyGuardrailLite);
    atomic_store(result, (unint64_t *)&qword_2571A06D0);
  }
  return result;
}

unint64_t sub_2420E1E84(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1EA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1EA8()
{
  unint64_t result;

  result = qword_2571A06D8;
  if (!qword_2571A06D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A06D8);
  }
  return result;
}

unint64_t sub_2420E1EE4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1F08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1F08()
{
  unint64_t result;

  result = qword_2571A06E0;
  if (!qword_2571A06E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A06E0);
  }
  return result;
}

unint64_t sub_2420E1F44(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E1F68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E1F68()
{
  unint64_t result;

  result = qword_2571A06E8;
  if (!qword_2571A06E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A06E8);
  }
  return result;
}

void sub_2420E1FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E1FB8, (uint64_t (*)(void))sub_2420E1FF4);
}

unint64_t sub_2420E1FB8()
{
  unint64_t result;

  result = qword_2571A06F0;
  if (!qword_2571A06F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A06F0);
  }
  return result;
}

unint64_t sub_2420E1FF4()
{
  unint64_t result;

  result = qword_2571A06F8;
  if (!qword_2571A06F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A06F8);
  }
  return result;
}

unint64_t sub_2420E2034()
{
  unint64_t result;

  result = qword_2571A0700;
  if (!qword_2571A0700)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A0700);
  }
  return result;
}

unint64_t sub_2420E2070(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2094();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2094()
{
  unint64_t result;

  result = qword_2571A0708;
  if (!qword_2571A0708)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0708);
  }
  return result;
}

unint64_t sub_2420E20D0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E20F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E20F4()
{
  unint64_t result;

  result = qword_2571A0710;
  if (!qword_2571A0710)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0710);
  }
  return result;
}

unint64_t sub_2420E2130(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2154();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2154()
{
  unint64_t result;

  result = qword_2571A0718;
  if (!qword_2571A0718)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0718);
  }
  return result;
}

void sub_2420E2190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E21A4, (uint64_t (*)(void))sub_2420E21E0);
}

unint64_t sub_2420E21A4()
{
  unint64_t result;

  result = qword_2571A0720;
  if (!qword_2571A0720)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0720);
  }
  return result;
}

unint64_t sub_2420E21E0()
{
  unint64_t result;

  result = qword_2571A0728;
  if (!qword_2571A0728)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0728);
  }
  return result;
}

unint64_t sub_2420E2220()
{
  unint64_t result;

  result = qword_2571A0730;
  if (!qword_2571A0730)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.SummarizationTextSummarizerBase, &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0730);
  }
  return result;
}

unint64_t sub_2420E2260()
{
  unint64_t result;

  result = qword_2571A0738;
  if (!qword_2571A0738)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer, &type metadata for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A0738);
  }
  return result;
}

unint64_t sub_2420E229C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E22C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E22C0()
{
  unint64_t result;

  result = qword_2571A0740;
  if (!qword_2571A0740)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.VisualGenerationQueryHandlingLite, &type metadata for Catalog.LLM.Model.VisualGenerationQueryHandlingLite);
    atomic_store(result, (unint64_t *)&qword_2571A0740);
  }
  return result;
}

unint64_t sub_2420E22FC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2320();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2320()
{
  unint64_t result;

  result = qword_2571A0748;
  if (!qword_2571A0748)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.VisualGenerationQueryHandlingLite, &type metadata for Catalog.LLM.Model.VisualGenerationQueryHandlingLite);
    atomic_store(result, (unint64_t *)&qword_2571A0748);
  }
  return result;
}

unint64_t sub_2420E235C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2380();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2380()
{
  unint64_t result;

  result = qword_2571A0750;
  if (!qword_2571A0750)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.VisualGenerationQueryHandlingLite, &type metadata for Catalog.LLM.Model.VisualGenerationQueryHandlingLite);
    atomic_store(result, (unint64_t *)&qword_2571A0750);
  }
  return result;
}

void sub_2420E23BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E23D0, (uint64_t (*)(void))sub_2420E240C);
}

unint64_t sub_2420E23D0()
{
  unint64_t result;

  result = qword_2571A0758;
  if (!qword_2571A0758)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.VisualGenerationQueryHandlingLite, &type metadata for Catalog.LLM.Model.VisualGenerationQueryHandlingLite);
    atomic_store(result, (unint64_t *)&qword_2571A0758);
  }
  return result;
}

unint64_t sub_2420E240C()
{
  unint64_t result;

  result = qword_2571A0760;
  if (!qword_2571A0760)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.VisualGenerationQueryHandlingLite, &type metadata for Catalog.LLM.Model.VisualGenerationQueryHandlingLite);
    atomic_store(result, (unint64_t *)&qword_2571A0760);
  }
  return result;
}

unint64_t sub_2420E244C()
{
  unint64_t result;

  result = qword_2571A0768;
  if (!qword_2571A0768)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.VisualGenerationQueryHandlingLite, &type metadata for Catalog.LLM.Model.VisualGenerationQueryHandlingLite);
    atomic_store(result, (unint64_t *)&qword_2571A0768);
  }
  return result;
}

unint64_t sub_2420E2488(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E24AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E24AC()
{
  unint64_t result;

  result = qword_2571A0770;
  if (!qword_2571A0770)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer, &type metadata for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_2571A0770);
  }
  return result;
}

void sub_2420E24E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E24FC, (uint64_t (*)(void))sub_2420E2538);
}

unint64_t sub_2420E24FC()
{
  unint64_t result;

  result = qword_2571A0778;
  if (!qword_2571A0778)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer, &type metadata for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_2571A0778);
  }
  return result;
}

unint64_t sub_2420E2538()
{
  unint64_t result;

  result = qword_2571A0780;
  if (!qword_2571A0780)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer, &type metadata for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_2571A0780);
  }
  return result;
}

unint64_t sub_2420E2578()
{
  unint64_t result;

  result = qword_2571A0788;
  if (!qword_2571A0788)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer, &type metadata for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_2571A0788);
  }
  return result;
}

unint64_t sub_2420E25B4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E25D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E25D8()
{
  unint64_t result;

  result = qword_2571A0790;
  if (!qword_2571A0790)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.InstructServerBase, &type metadata for Catalog.LLM.ServerConfiguration.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0790);
  }
  return result;
}

void sub_2420E2614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E2628, (uint64_t (*)(void))sub_2420E2664);
}

unint64_t sub_2420E2628()
{
  unint64_t result;

  result = qword_2571A0798;
  if (!qword_2571A0798)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.InstructServerBase, &type metadata for Catalog.LLM.ServerConfiguration.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A0798);
  }
  return result;
}

unint64_t sub_2420E2664()
{
  unint64_t result;

  result = qword_2571A07A0;
  if (!qword_2571A07A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.InstructServerBase, &type metadata for Catalog.LLM.ServerConfiguration.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A07A0);
  }
  return result;
}

unint64_t sub_2420E26A4()
{
  unint64_t result;

  result = qword_2571A07A8;
  if (!qword_2571A07A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.InstructServerBase, &type metadata for Catalog.LLM.ServerConfiguration.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_2571A07A8);
  }
  return result;
}

unint64_t sub_2420E26E0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2704();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2704()
{
  unint64_t result;

  result = qword_2571A07B0;
  if (!qword_2571A07B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.NLRouterBase, &type metadata for Catalog.LLM.ServerConfiguration.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2571A07B0);
  }
  return result;
}

void sub_2420E2740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E2754, (uint64_t (*)(void))sub_2420E2790);
}

unint64_t sub_2420E2754()
{
  unint64_t result;

  result = qword_2571A07B8;
  if (!qword_2571A07B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.NLRouterBase, &type metadata for Catalog.LLM.ServerConfiguration.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2571A07B8);
  }
  return result;
}

unint64_t sub_2420E2790()
{
  unint64_t result;

  result = qword_2571A07C0;
  if (!qword_2571A07C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.NLRouterBase, &type metadata for Catalog.LLM.ServerConfiguration.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2571A07C0);
  }
  return result;
}

unint64_t sub_2420E27D0()
{
  unint64_t result;

  result = qword_2571A07C8;
  if (!qword_2571A07C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.NLRouterBase, &type metadata for Catalog.LLM.ServerConfiguration.NLRouterBase);
    atomic_store(result, (unint64_t *)&qword_2571A07C8);
  }
  return result;
}

unint64_t sub_2420E280C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2830();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2830()
{
  unint64_t result;

  result = qword_2571A07D0;
  if (!qword_2571A07D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.OpenEndedTone, &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedTone);
    atomic_store(result, (unint64_t *)&qword_2571A07D0);
  }
  return result;
}

void sub_2420E286C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E2880, (uint64_t (*)(void))sub_2420E28BC);
}

unint64_t sub_2420E2880()
{
  unint64_t result;

  result = qword_2571A07D8;
  if (!qword_2571A07D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.OpenEndedTone, &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedTone);
    atomic_store(result, (unint64_t *)&qword_2571A07D8);
  }
  return result;
}

unint64_t sub_2420E28BC()
{
  unint64_t result;

  result = qword_2571A07E0;
  if (!qword_2571A07E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.OpenEndedTone, &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedTone);
    atomic_store(result, (unint64_t *)&qword_2571A07E0);
  }
  return result;
}

unint64_t sub_2420E28FC()
{
  unint64_t result;

  result = qword_2571A07E8;
  if (!qword_2571A07E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.OpenEndedTone, &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedTone);
    atomic_store(result, (unint64_t *)&qword_2571A07E8);
  }
  return result;
}

unint64_t sub_2420E2938(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E295C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E295C()
{
  unint64_t result;

  result = qword_2571A07F0;
  if (!qword_2571A07F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_2571A07F0);
  }
  return result;
}

void sub_2420E2998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E29AC, (uint64_t (*)(void))sub_2420E29E8);
}

unint64_t sub_2420E29AC()
{
  unint64_t result;

  result = qword_2571A07F8;
  if (!qword_2571A07F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_2571A07F8);
  }
  return result;
}

unint64_t sub_2420E29E8()
{
  unint64_t result;

  result = qword_2571A0800;
  if (!qword_2571A0800)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_2571A0800);
  }
  return result;
}

unint64_t sub_2420E2A28()
{
  unint64_t result;

  result = qword_2571A0808;
  if (!qword_2571A0808)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_2571A0808);
  }
  return result;
}

unint64_t sub_2420E2A64(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2A88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2A88()
{
  unint64_t result;

  result = qword_2571A0810;
  if (!qword_2571A0810)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0810);
  }
  return result;
}

void sub_2420E2AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E2AD8, (uint64_t (*)(void))sub_2420E2B14);
}

unint64_t sub_2420E2AD8()
{
  unint64_t result;

  result = qword_2571A0818;
  if (!qword_2571A0818)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0818);
  }
  return result;
}

unint64_t sub_2420E2B14()
{
  unint64_t result;

  result = qword_2571A0820;
  if (!qword_2571A0820)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0820);
  }
  return result;
}

unint64_t sub_2420E2B54()
{
  unint64_t result;

  result = qword_2571A0828;
  if (!qword_2571A0828)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0828);
  }
  return result;
}

unint64_t sub_2420E2B90(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2BB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2BB4()
{
  unint64_t result;

  result = qword_2571A0830;
  if (!qword_2571A0830)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_2571A0830);
  }
  return result;
}

void sub_2420E2BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E2C04, (uint64_t (*)(void))sub_2420E2C40);
}

unint64_t sub_2420E2C04()
{
  unint64_t result;

  result = qword_2571A0838;
  if (!qword_2571A0838)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_2571A0838);
  }
  return result;
}

unint64_t sub_2420E2C40()
{
  unint64_t result;

  result = qword_2571A0840;
  if (!qword_2571A0840)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_2571A0840);
  }
  return result;
}

unint64_t sub_2420E2C80()
{
  unint64_t result;

  result = qword_2571A0848;
  if (!qword_2571A0848)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_2571A0848);
  }
  return result;
}

unint64_t sub_2420E2CBC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2CE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2CE0()
{
  unint64_t result;

  result = qword_2571A0850;
  if (!qword_2571A0850)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_2571A0850);
  }
  return result;
}

void sub_2420E2D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E2D30, (uint64_t (*)(void))sub_2420E2D6C);
}

unint64_t sub_2420E2D30()
{
  unint64_t result;

  result = qword_2571A0858;
  if (!qword_2571A0858)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_2571A0858);
  }
  return result;
}

unint64_t sub_2420E2D6C()
{
  unint64_t result;

  result = qword_2571A0860;
  if (!qword_2571A0860)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_2571A0860);
  }
  return result;
}

unint64_t sub_2420E2DAC()
{
  unint64_t result;

  result = qword_2571A0868;
  if (!qword_2571A0868)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_2571A0868);
  }
  return result;
}

unint64_t sub_2420E2DE8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2E0C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2E0C()
{
  unint64_t result;

  result = qword_2571A0870;
  if (!qword_2571A0870)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_2571A0870);
  }
  return result;
}

void sub_2420E2E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E2E5C, (uint64_t (*)(void))sub_2420E2E98);
}

unint64_t sub_2420E2E5C()
{
  unint64_t result;

  result = qword_2571A0878;
  if (!qword_2571A0878)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_2571A0878);
  }
  return result;
}

unint64_t sub_2420E2E98()
{
  unint64_t result;

  result = qword_2571A0880;
  if (!qword_2571A0880)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_2571A0880);
  }
  return result;
}

unint64_t sub_2420E2ED8()
{
  unint64_t result;

  result = qword_2571A0888;
  if (!qword_2571A0888)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_2571A0888);
  }
  return result;
}

unint64_t sub_2420E2F14(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E2F38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E2F38()
{
  unint64_t result;

  result = qword_2571A0890;
  if (!qword_2571A0890)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_2571A0890);
  }
  return result;
}

void sub_2420E2F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E2F88, (uint64_t (*)(void))sub_2420E2FC4);
}

unint64_t sub_2420E2F88()
{
  unint64_t result;

  result = qword_2571A0898;
  if (!qword_2571A0898)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_2571A0898);
  }
  return result;
}

unint64_t sub_2420E2FC4()
{
  unint64_t result;

  result = qword_2571A08A0;
  if (!qword_2571A08A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_2571A08A0);
  }
  return result;
}

unint64_t sub_2420E3004()
{
  unint64_t result;

  result = qword_2571A08A8;
  if (!qword_2571A08A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_2571A08A8);
  }
  return result;
}

unint64_t sub_2420E3040(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3064();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3064()
{
  unint64_t result;

  result = qword_2571A08B0;
  if (!qword_2571A08B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_2571A08B0);
  }
  return result;
}

void sub_2420E30A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E30B4, (uint64_t (*)(void))sub_2420E30F0);
}

unint64_t sub_2420E30B4()
{
  unint64_t result;

  result = qword_2571A08B8;
  if (!qword_2571A08B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_2571A08B8);
  }
  return result;
}

unint64_t sub_2420E30F0()
{
  unint64_t result;

  result = qword_2571A08C0;
  if (!qword_2571A08C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_2571A08C0);
  }
  return result;
}

unint64_t sub_2420E3130()
{
  unint64_t result;

  result = qword_2571A08C8;
  if (!qword_2571A08C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_2571A08C8);
  }
  return result;
}

unint64_t sub_2420E316C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3190();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3190()
{
  unint64_t result;

  result = qword_2571A08D0;
  if (!qword_2571A08D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_2571A08D0);
  }
  return result;
}

void sub_2420E31CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E31E0, (uint64_t (*)(void))sub_2420E321C);
}

unint64_t sub_2420E31E0()
{
  unint64_t result;

  result = qword_2571A08D8;
  if (!qword_2571A08D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_2571A08D8);
  }
  return result;
}

unint64_t sub_2420E321C()
{
  unint64_t result;

  result = qword_2571A08E0;
  if (!qword_2571A08E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_2571A08E0);
  }
  return result;
}

unint64_t sub_2420E325C()
{
  unint64_t result;

  result = qword_2571A08E8;
  if (!qword_2571A08E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_2571A08E8);
  }
  return result;
}

unint64_t sub_2420E3298(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E32BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E32BC()
{
  unint64_t result;

  result = qword_2571A08F0;
  if (!qword_2571A08F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_2571A08F0);
  }
  return result;
}

void sub_2420E32F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E330C, (uint64_t (*)(void))sub_2420E3348);
}

unint64_t sub_2420E330C()
{
  unint64_t result;

  result = qword_2571A08F8;
  if (!qword_2571A08F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_2571A08F8);
  }
  return result;
}

unint64_t sub_2420E3348()
{
  unint64_t result;

  result = qword_2571A0900;
  if (!qword_2571A0900)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_2571A0900);
  }
  return result;
}

unint64_t sub_2420E3388()
{
  unint64_t result;

  result = qword_2571A0908;
  if (!qword_2571A0908)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_2571A0908);
  }
  return result;
}

unint64_t sub_2420E33C4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E33E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E33E8()
{
  unint64_t result;

  result = qword_2571A0910;
  if (!qword_2571A0910)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.Planner, &type metadata for Catalog.LLM.ServerConfiguration.Planner);
    atomic_store(result, (unint64_t *)&qword_2571A0910);
  }
  return result;
}

void sub_2420E3424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3438, (uint64_t (*)(void))sub_2420E3474);
}

unint64_t sub_2420E3438()
{
  unint64_t result;

  result = qword_2571A0918;
  if (!qword_2571A0918)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.Planner, &type metadata for Catalog.LLM.ServerConfiguration.Planner);
    atomic_store(result, (unint64_t *)&qword_2571A0918);
  }
  return result;
}

unint64_t sub_2420E3474()
{
  unint64_t result;

  result = qword_2571A0920;
  if (!qword_2571A0920)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.Planner, &type metadata for Catalog.LLM.ServerConfiguration.Planner);
    atomic_store(result, (unint64_t *)&qword_2571A0920);
  }
  return result;
}

unint64_t sub_2420E34B4()
{
  unint64_t result;

  result = qword_2571A0928;
  if (!qword_2571A0928)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.Planner, &type metadata for Catalog.LLM.ServerConfiguration.Planner);
    atomic_store(result, (unint64_t *)&qword_2571A0928);
  }
  return result;
}

unint64_t sub_2420E34F0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3514();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3514()
{
  unint64_t result;

  result = qword_2571A0930;
  if (!qword_2571A0930)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PlannerV2, &type metadata for Catalog.LLM.ServerConfiguration.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_2571A0930);
  }
  return result;
}

void sub_2420E3550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3564, (uint64_t (*)(void))sub_2420E35A0);
}

unint64_t sub_2420E3564()
{
  unint64_t result;

  result = qword_2571A0938;
  if (!qword_2571A0938)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PlannerV2, &type metadata for Catalog.LLM.ServerConfiguration.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_2571A0938);
  }
  return result;
}

unint64_t sub_2420E35A0()
{
  unint64_t result;

  result = qword_2571A0940;
  if (!qword_2571A0940)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PlannerV2, &type metadata for Catalog.LLM.ServerConfiguration.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_2571A0940);
  }
  return result;
}

unint64_t sub_2420E35E0()
{
  unint64_t result;

  result = qword_2571A0948;
  if (!qword_2571A0948)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PlannerV2, &type metadata for Catalog.LLM.ServerConfiguration.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_2571A0948);
  }
  return result;
}

unint64_t sub_2420E361C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3640();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3640()
{
  unint64_t result;

  result = qword_2571A0950;
  if (!qword_2571A0950)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PlannerV3, &type metadata for Catalog.LLM.ServerConfiguration.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_2571A0950);
  }
  return result;
}

void sub_2420E367C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3690, (uint64_t (*)(void))sub_2420E36CC);
}

unint64_t sub_2420E3690()
{
  unint64_t result;

  result = qword_2571A0958;
  if (!qword_2571A0958)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PlannerV3, &type metadata for Catalog.LLM.ServerConfiguration.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_2571A0958);
  }
  return result;
}

unint64_t sub_2420E36CC()
{
  unint64_t result;

  result = qword_2571A0960;
  if (!qword_2571A0960)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PlannerV3, &type metadata for Catalog.LLM.ServerConfiguration.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_2571A0960);
  }
  return result;
}

unint64_t sub_2420E370C()
{
  unint64_t result;

  result = qword_2571A0968;
  if (!qword_2571A0968)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.PlannerV3, &type metadata for Catalog.LLM.ServerConfiguration.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_2571A0968);
  }
  return result;
}

unint64_t sub_2420E3748(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E376C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E376C()
{
  unint64_t result;

  result = qword_2571A0970;
  if (!qword_2571A0970)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGeneration, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_2571A0970);
  }
  return result;
}

void sub_2420E37A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E37BC, (uint64_t (*)(void))sub_2420E37F8);
}

unint64_t sub_2420E37BC()
{
  unint64_t result;

  result = qword_2571A0978;
  if (!qword_2571A0978)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGeneration, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_2571A0978);
  }
  return result;
}

unint64_t sub_2420E37F8()
{
  unint64_t result;

  result = qword_2571A0980;
  if (!qword_2571A0980)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGeneration, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_2571A0980);
  }
  return result;
}

unint64_t sub_2420E3838()
{
  unint64_t result;

  result = qword_2571A0988;
  if (!qword_2571A0988)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGeneration, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_2571A0988);
  }
  return result;
}

unint64_t sub_2420E3874(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3898();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3898()
{
  unint64_t result;

  result = qword_2571A0990;
  if (!qword_2571A0990)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGenerationV2, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0990);
  }
  return result;
}

void sub_2420E38D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E38E8, (uint64_t (*)(void))sub_2420E3924);
}

unint64_t sub_2420E38E8()
{
  unint64_t result;

  result = qword_2571A0998;
  if (!qword_2571A0998)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGenerationV2, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_2571A0998);
  }
  return result;
}

unint64_t sub_2420E3924()
{
  unint64_t result;

  result = qword_2571A09A0;
  if (!qword_2571A09A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGenerationV2, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_2571A09A0);
  }
  return result;
}

unint64_t sub_2420E3964()
{
  unint64_t result;

  result = qword_2571A09A8;
  if (!qword_2571A09A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGenerationV2, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_2571A09A8);
  }
  return result;
}

unint64_t sub_2420E39A0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E39C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E39C4()
{
  unint64_t result;

  result = qword_2571A09B0;
  if (!qword_2571A09B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGenerationV3, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A09B0);
  }
  return result;
}

void sub_2420E3A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3A14, (uint64_t (*)(void))sub_2420E3A50);
}

unint64_t sub_2420E3A14()
{
  unint64_t result;

  result = qword_2571A09B8;
  if (!qword_2571A09B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGenerationV3, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A09B8);
  }
  return result;
}

unint64_t sub_2420E3A50()
{
  unint64_t result;

  result = qword_2571A09C0;
  if (!qword_2571A09C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGenerationV3, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A09C0);
  }
  return result;
}

unint64_t sub_2420E3A90()
{
  unint64_t result;

  result = qword_2571A09C8;
  if (!qword_2571A09C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ResponseGenerationV3, &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_2571A09C8);
  }
  return result;
}

unint64_t sub_2420E3ACC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3AF0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3AF0()
{
  unint64_t result;

  result = qword_2571A09D0;
  if (!qword_2571A09D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A09D0);
  }
  return result;
}

void sub_2420E3B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3B40, (uint64_t (*)(void))sub_2420E3B7C);
}

unint64_t sub_2420E3B40()
{
  unint64_t result;

  result = qword_2571A09D8;
  if (!qword_2571A09D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A09D8);
  }
  return result;
}

unint64_t sub_2420E3B7C()
{
  unint64_t result;

  result = qword_2571A09E0;
  if (!qword_2571A09E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A09E0);
  }
  return result;
}

unint64_t sub_2420E3BBC()
{
  unint64_t result;

  result = qword_2571A09E8;
  if (!qword_2571A09E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_2571A09E8);
  }
  return result;
}

unint64_t sub_2420E3BF8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3C1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3C1C()
{
  unint64_t result;

  result = qword_2571A09F0;
  if (!qword_2571A09F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerBulletsTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A09F0);
  }
  return result;
}

void sub_2420E3C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3C6C, (uint64_t (*)(void))sub_2420E3CA8);
}

unint64_t sub_2420E3C6C()
{
  unint64_t result;

  result = qword_2571A09F8;
  if (!qword_2571A09F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerBulletsTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A09F8);
  }
  return result;
}

unint64_t sub_2420E3CA8()
{
  unint64_t result;

  result = qword_2571A0A00;
  if (!qword_2571A0A00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerBulletsTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0A00);
  }
  return result;
}

unint64_t sub_2420E3CE8()
{
  unint64_t result;

  result = qword_2571A0A08;
  if (!qword_2571A0A08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerBulletsTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0A08);
  }
  return result;
}

unint64_t sub_2420E3D24(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3D48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3D48()
{
  unint64_t result;

  result = qword_2571A0A10;
  if (!qword_2571A0A10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerConciseTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A0A10);
  }
  return result;
}

void sub_2420E3D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3D98, (uint64_t (*)(void))sub_2420E3DD4);
}

unint64_t sub_2420E3D98()
{
  unint64_t result;

  result = qword_2571A0A18;
  if (!qword_2571A0A18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerConciseTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A0A18);
  }
  return result;
}

unint64_t sub_2420E3DD4()
{
  unint64_t result;

  result = qword_2571A0A20;
  if (!qword_2571A0A20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerConciseTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A0A20);
  }
  return result;
}

unint64_t sub_2420E3E14()
{
  unint64_t result;

  result = qword_2571A0A28;
  if (!qword_2571A0A28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerConciseTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_2571A0A28);
  }
  return result;
}

unint64_t sub_2420E3E50(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3E74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3E74()
{
  unint64_t result;

  result = qword_2571A0A30;
  if (!qword_2571A0A30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerFriendlyTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0A30);
  }
  return result;
}

void sub_2420E3EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3EC4, (uint64_t (*)(void))sub_2420E3F00);
}

unint64_t sub_2420E3EC4()
{
  unint64_t result;

  result = qword_2571A0A38;
  if (!qword_2571A0A38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerFriendlyTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0A38);
  }
  return result;
}

unint64_t sub_2420E3F00()
{
  unint64_t result;

  result = qword_2571A0A40;
  if (!qword_2571A0A40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerFriendlyTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0A40);
  }
  return result;
}

unint64_t sub_2420E3F40()
{
  unint64_t result;

  result = qword_2571A0A48;
  if (!qword_2571A0A48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerFriendlyTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_2571A0A48);
  }
  return result;
}

unint64_t sub_2420E3F7C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E3FA0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E3FA0()
{
  unint64_t result;

  result = qword_2571A0A50;
  if (!qword_2571A0A50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMagicRewrite, &type metadata for Catalog.LLM.ServerConfiguration.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0A50);
  }
  return result;
}

void sub_2420E3FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E3FF0, (uint64_t (*)(void))sub_2420E402C);
}

unint64_t sub_2420E3FF0()
{
  unint64_t result;

  result = qword_2571A0A58;
  if (!qword_2571A0A58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMagicRewrite, &type metadata for Catalog.LLM.ServerConfiguration.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0A58);
  }
  return result;
}

unint64_t sub_2420E402C()
{
  unint64_t result;

  result = qword_2571A0A60;
  if (!qword_2571A0A60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMagicRewrite, &type metadata for Catalog.LLM.ServerConfiguration.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0A60);
  }
  return result;
}

unint64_t sub_2420E406C()
{
  unint64_t result;

  result = qword_2571A0A68;
  if (!qword_2571A0A68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMagicRewrite, &type metadata for Catalog.LLM.ServerConfiguration.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0A68);
  }
  return result;
}

unint64_t sub_2420E40A8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E40CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E40CC()
{
  unint64_t result;

  result = qword_2571A0A70;
  if (!qword_2571A0A70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0A70);
  }
  return result;
}

void sub_2420E4108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E411C, (uint64_t (*)(void))sub_2420E4158);
}

unint64_t sub_2420E411C()
{
  unint64_t result;

  result = qword_2571A0A78;
  if (!qword_2571A0A78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0A78);
  }
  return result;
}

unint64_t sub_2420E4158()
{
  unint64_t result;

  result = qword_2571A0A80;
  if (!qword_2571A0A80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0A80);
  }
  return result;
}

unint64_t sub_2420E4198()
{
  unint64_t result;

  result = qword_2571A0A88;
  if (!qword_2571A0A88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_2571A0A88);
  }
  return result;
}

unint64_t sub_2420E41D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E41F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E41F8()
{
  unint64_t result;

  result = qword_2571A0A90;
  if (!qword_2571A0A90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0A90);
  }
  return result;
}

void sub_2420E4234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4248, (uint64_t (*)(void))sub_2420E4284);
}

unint64_t sub_2420E4248()
{
  unint64_t result;

  result = qword_2571A0A98;
  if (!qword_2571A0A98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0A98);
  }
  return result;
}

unint64_t sub_2420E4284()
{
  unint64_t result;

  result = qword_2571A0AA0;
  if (!qword_2571A0AA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0AA0);
  }
  return result;
}

unint64_t sub_2420E42C4()
{
  unint64_t result;

  result = qword_2571A0AA8;
  if (!qword_2571A0AA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_2571A0AA8);
  }
  return result;
}

unint64_t sub_2420E4300(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4324();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4324()
{
  unint64_t result;

  result = qword_2571A0AB0;
  if (!qword_2571A0AB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyQA, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A0AB0);
  }
  return result;
}

void sub_2420E4360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4374, (uint64_t (*)(void))sub_2420E43B0);
}

unint64_t sub_2420E4374()
{
  unint64_t result;

  result = qword_2571A0AB8;
  if (!qword_2571A0AB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyQA, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A0AB8);
  }
  return result;
}

unint64_t sub_2420E43B0()
{
  unint64_t result;

  result = qword_2571A0AC0;
  if (!qword_2571A0AC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyQA, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A0AC0);
  }
  return result;
}

unint64_t sub_2420E43F0()
{
  unint64_t result;

  result = qword_2571A0AC8;
  if (!qword_2571A0AC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerMailReplyQA, &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_2571A0AC8);
  }
  return result;
}

unint64_t sub_2420E442C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4450();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4450()
{
  unint64_t result;

  result = qword_2571A0AD0;
  if (!qword_2571A0AD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerProfessionalTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A0AD0);
  }
  return result;
}

void sub_2420E448C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E44A0, (uint64_t (*)(void))sub_2420E44DC);
}

unint64_t sub_2420E44A0()
{
  unint64_t result;

  result = qword_2571A0AD8;
  if (!qword_2571A0AD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerProfessionalTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A0AD8);
  }
  return result;
}

unint64_t sub_2420E44DC()
{
  unint64_t result;

  result = qword_2571A0AE0;
  if (!qword_2571A0AE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerProfessionalTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A0AE0);
  }
  return result;
}

unint64_t sub_2420E451C()
{
  unint64_t result;

  result = qword_2571A0AE8;
  if (!qword_2571A0AE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerProfessionalTone, &type metadata for Catalog.LLM.ServerConfiguration.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_2571A0AE8);
  }
  return result;
}

unint64_t sub_2420E4558(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E457C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E457C()
{
  unint64_t result;

  result = qword_2571A0AF0;
  if (!qword_2571A0AF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerProofreadingReview, &type metadata for Catalog.LLM.ServerConfiguration.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A0AF0);
  }
  return result;
}

void sub_2420E45B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E45CC, (uint64_t (*)(void))sub_2420E4608);
}

unint64_t sub_2420E45CC()
{
  unint64_t result;

  result = qword_2571A0AF8;
  if (!qword_2571A0AF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerProofreadingReview, &type metadata for Catalog.LLM.ServerConfiguration.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A0AF8);
  }
  return result;
}

unint64_t sub_2420E4608()
{
  unint64_t result;

  result = qword_2571A0B00;
  if (!qword_2571A0B00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerProofreadingReview, &type metadata for Catalog.LLM.ServerConfiguration.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A0B00);
  }
  return result;
}

unint64_t sub_2420E4648()
{
  unint64_t result;

  result = qword_2571A0B08;
  if (!qword_2571A0B08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerProofreadingReview, &type metadata for Catalog.LLM.ServerConfiguration.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_2571A0B08);
  }
  return result;
}

unint64_t sub_2420E4684(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E46A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E46A8()
{
  unint64_t result;

  result = qword_2571A0B10;
  if (!qword_2571A0B10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTablesTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0B10);
  }
  return result;
}

void sub_2420E46E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E46F8, (uint64_t (*)(void))sub_2420E4734);
}

unint64_t sub_2420E46F8()
{
  unint64_t result;

  result = qword_2571A0B18;
  if (!qword_2571A0B18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTablesTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0B18);
  }
  return result;
}

unint64_t sub_2420E4734()
{
  unint64_t result;

  result = qword_2571A0B20;
  if (!qword_2571A0B20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTablesTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0B20);
  }
  return result;
}

unint64_t sub_2420E4774()
{
  unint64_t result;

  result = qword_2571A0B28;
  if (!qword_2571A0B28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTablesTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0B28);
  }
  return result;
}

unint64_t sub_2420E47B0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E47D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E47D4()
{
  unint64_t result;

  result = qword_2571A0B30;
  if (!qword_2571A0B30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0B30);
  }
  return result;
}

void sub_2420E4810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4824, (uint64_t (*)(void))sub_2420E4860);
}

unint64_t sub_2420E4824()
{
  unint64_t result;

  result = qword_2571A0B38;
  if (!qword_2571A0B38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0B38);
  }
  return result;
}

unint64_t sub_2420E4860()
{
  unint64_t result;

  result = qword_2571A0B40;
  if (!qword_2571A0B40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0B40);
  }
  return result;
}

unint64_t sub_2420E48A0()
{
  unint64_t result;

  result = qword_2571A0B48;
  if (!qword_2571A0B48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform, &type metadata for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_2571A0B48);
  }
  return result;
}

unint64_t sub_2420E48DC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4900();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4900()
{
  unint64_t result;

  result = qword_2571A0B50;
  if (!qword_2571A0B50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTextSummarizer, &type metadata for Catalog.LLM.ServerConfiguration.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0B50);
  }
  return result;
}

void sub_2420E493C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4950, (uint64_t (*)(void))sub_2420E498C);
}

unint64_t sub_2420E4950()
{
  unint64_t result;

  result = qword_2571A0B58;
  if (!qword_2571A0B58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTextSummarizer, &type metadata for Catalog.LLM.ServerConfiguration.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0B58);
  }
  return result;
}

unint64_t sub_2420E498C()
{
  unint64_t result;

  result = qword_2571A0B60;
  if (!qword_2571A0B60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTextSummarizer, &type metadata for Catalog.LLM.ServerConfiguration.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0B60);
  }
  return result;
}

unint64_t sub_2420E49CC()
{
  unint64_t result;

  result = qword_2571A0B68;
  if (!qword_2571A0B68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.ServerTextSummarizer, &type metadata for Catalog.LLM.ServerConfiguration.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_2571A0B68);
  }
  return result;
}

unint64_t sub_2420E4A08(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4A2C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4A2C()
{
  unint64_t result;

  result = qword_2571A0B70;
  if (!qword_2571A0B70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A0B70);
  }
  return result;
}

void sub_2420E4A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4A7C, (uint64_t (*)(void))sub_2420E4AB8);
}

unint64_t sub_2420E4A7C()
{
  unint64_t result;

  result = qword_2571A0B78;
  if (!qword_2571A0B78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A0B78);
  }
  return result;
}

unint64_t sub_2420E4AB8()
{
  unint64_t result;

  result = qword_2571A0B80;
  if (!qword_2571A0B80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A0B80);
  }
  return result;
}

unint64_t sub_2420E4AF8()
{
  unint64_t result;

  result = qword_2571A0B88;
  if (!qword_2571A0B88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase, &type metadata for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase);
    atomic_store(result, (unint64_t *)&qword_2571A0B88);
  }
  return result;
}

unint64_t sub_2420E4B34(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4B58();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4B58()
{
  unint64_t result;

  result = qword_2571A0B90;
  if (!qword_2571A0B90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ModelConfigurationReplacement.All, &type metadata for Catalog.ModelConfigurationReplacement.All);
    atomic_store(result, (unint64_t *)&qword_2571A0B90);
  }
  return result;
}

void sub_2420E4B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4BA8, (uint64_t (*)(void))sub_2420E4BE4);
}

unint64_t sub_2420E4BA8()
{
  unint64_t result;

  result = qword_2571A0B98;
  if (!qword_2571A0B98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ModelConfigurationReplacement.All, &type metadata for Catalog.ModelConfigurationReplacement.All);
    atomic_store(result, (unint64_t *)&qword_2571A0B98);
  }
  return result;
}

unint64_t sub_2420E4BE4()
{
  unint64_t result;

  result = qword_2571A0BA0;
  if (!qword_2571A0BA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ModelConfigurationReplacement.All, &type metadata for Catalog.ModelConfigurationReplacement.All);
    atomic_store(result, (unint64_t *)&qword_2571A0BA0);
  }
  return result;
}

unint64_t sub_2420E4C24()
{
  unint64_t result;

  result = qword_2571A0BA8;
  if (!qword_2571A0BA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ModelConfigurationReplacement.All, &type metadata for Catalog.ModelConfigurationReplacement.All);
    atomic_store(result, (unint64_t *)&qword_2571A0BA8);
  }
  return result;
}

unint64_t sub_2420E4C60(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4C84();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4C84()
{
  unint64_t result;

  result = qword_2571A0BB0;
  if (!qword_2571A0BB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Sanitizer.TextModerationLM, &type metadata for Catalog.Sanitizer.TextModerationLM);
    atomic_store(result, (unint64_t *)&qword_2571A0BB0);
  }
  return result;
}

unint64_t sub_2420E4CC0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4CE4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4CE4()
{
  unint64_t result;

  result = qword_2571A0BB8;
  if (!qword_2571A0BB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Sanitizer.TextModerationLM, &type metadata for Catalog.Sanitizer.TextModerationLM);
    atomic_store(result, (unint64_t *)&qword_2571A0BB8);
  }
  return result;
}

void sub_2420E4D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4D34, (uint64_t (*)(void))sub_2420E4D70);
}

unint64_t sub_2420E4D34()
{
  unint64_t result;

  result = qword_2571A0BC0;
  if (!qword_2571A0BC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Sanitizer.TextModerationLM, &type metadata for Catalog.Sanitizer.TextModerationLM);
    atomic_store(result, (unint64_t *)&qword_2571A0BC0);
  }
  return result;
}

unint64_t sub_2420E4D70()
{
  unint64_t result;

  result = qword_2571A0BC8;
  if (!qword_2571A0BC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Sanitizer.TextModerationLM, &type metadata for Catalog.Sanitizer.TextModerationLM);
    atomic_store(result, (unint64_t *)&qword_2571A0BC8);
  }
  return result;
}

unint64_t sub_2420E4DB0()
{
  unint64_t result;

  result = qword_2571A0BD0;
  if (!qword_2571A0BD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Sanitizer.TextModerationLM, &type metadata for Catalog.Sanitizer.TextModerationLM);
    atomic_store(result, (unint64_t *)&qword_2571A0BD0);
  }
  return result;
}

unint64_t sub_2420E4DEC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4E10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4E10()
{
  unint64_t result;

  result = qword_2571A0BD8;
  if (!qword_2571A0BD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0BD8);
  }
  return result;
}

void sub_2420E4E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4E60, (uint64_t (*)(void))sub_2420E4E9C);
}

unint64_t sub_2420E4E60()
{
  unint64_t result;

  result = qword_2571A0BE0;
  if (!qword_2571A0BE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0BE0);
  }
  return result;
}

unint64_t sub_2420E4E9C()
{
  unint64_t result;

  result = qword_2571A0BE8;
  if (!qword_2571A0BE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0BE8);
  }
  return result;
}

unint64_t sub_2420E4EDC()
{
  unint64_t result;

  result = qword_2571A0BF0;
  if (!qword_2571A0BF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0BF0);
  }
  return result;
}

unint64_t sub_2420E4F18(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E4F3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E4F3C()
{
  unint64_t result;

  result = qword_2571A0BF8;
  if (!qword_2571A0BF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0BF8);
  }
  return result;
}

void sub_2420E4F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E4F8C, (uint64_t (*)(void))sub_2420E4FC8);
}

unint64_t sub_2420E4F8C()
{
  unint64_t result;

  result = qword_2571A0C00;
  if (!qword_2571A0C00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C00);
  }
  return result;
}

unint64_t sub_2420E4FC8()
{
  unint64_t result;

  result = qword_2571A0C08;
  if (!qword_2571A0C08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C08);
  }
  return result;
}

unint64_t sub_2420E5008()
{
  unint64_t result;

  result = qword_2571A0C10;
  if (!qword_2571A0C10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C10);
  }
  return result;
}

unint64_t sub_2420E5044(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5068();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5068()
{
  unint64_t result;

  result = qword_2571A0C18;
  if (!qword_2571A0C18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C18);
  }
  return result;
}

void sub_2420E50A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E50B8, (uint64_t (*)(void))sub_2420E50F4);
}

unint64_t sub_2420E50B8()
{
  unint64_t result;

  result = qword_2571A0C20;
  if (!qword_2571A0C20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C20);
  }
  return result;
}

unint64_t sub_2420E50F4()
{
  unint64_t result;

  result = qword_2571A0C28;
  if (!qword_2571A0C28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C28);
  }
  return result;
}

unint64_t sub_2420E5134()
{
  unint64_t result;

  result = qword_2571A0C30;
  if (!qword_2571A0C30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C30);
  }
  return result;
}

unint64_t sub_2420E5170(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5194();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5194()
{
  unint64_t result;

  result = qword_2571A0C38;
  if (!qword_2571A0C38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C38);
  }
  return result;
}

void sub_2420E51D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E51E4, (uint64_t (*)(void))sub_2420E5220);
}

unint64_t sub_2420E51E4()
{
  unint64_t result;

  result = qword_2571A0C40;
  if (!qword_2571A0C40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C40);
  }
  return result;
}

unint64_t sub_2420E5220()
{
  unint64_t result;

  result = qword_2571A0C48;
  if (!qword_2571A0C48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C48);
  }
  return result;
}

unint64_t sub_2420E5260()
{
  unint64_t result;

  result = qword_2571A0C50;
  if (!qword_2571A0C50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C50);
  }
  return result;
}

unint64_t sub_2420E529C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E52C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E52C0()
{
  unint64_t result;

  result = qword_2571A0C58;
  if (!qword_2571A0C58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C58);
  }
  return result;
}

void sub_2420E52FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5310, (uint64_t (*)(void))sub_2420E534C);
}

unint64_t sub_2420E5310()
{
  unint64_t result;

  result = qword_2571A0C60;
  if (!qword_2571A0C60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C60);
  }
  return result;
}

unint64_t sub_2420E534C()
{
  unint64_t result;

  result = qword_2571A0C68;
  if (!qword_2571A0C68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C68);
  }
  return result;
}

unint64_t sub_2420E538C()
{
  unint64_t result;

  result = qword_2571A0C70;
  if (!qword_2571A0C70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList, &type metadata for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C70);
  }
  return result;
}

unint64_t sub_2420E53C8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E53EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E53EC()
{
  unint64_t result;

  result = qword_2571A0C78;
  if (!qword_2571A0C78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C78);
  }
  return result;
}

void sub_2420E5428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E543C, (uint64_t (*)(void))sub_2420E5478);
}

unint64_t sub_2420E543C()
{
  unint64_t result;

  result = qword_2571A0C80;
  if (!qword_2571A0C80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C80);
  }
  return result;
}

unint64_t sub_2420E5478()
{
  unint64_t result;

  result = qword_2571A0C88;
  if (!qword_2571A0C88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C88);
  }
  return result;
}

unint64_t sub_2420E54B8()
{
  unint64_t result;

  result = qword_2571A0C90;
  if (!qword_2571A0C90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C90);
  }
  return result;
}

unint64_t sub_2420E54F4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5518();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5518()
{
  unint64_t result;

  result = qword_2571A0C98;
  if (!qword_2571A0C98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0C98);
  }
  return result;
}

void sub_2420E5554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5568, (uint64_t (*)(void))sub_2420E55A4);
}

unint64_t sub_2420E5568()
{
  unint64_t result;

  result = qword_2571A0CA0;
  if (!qword_2571A0CA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CA0);
  }
  return result;
}

unint64_t sub_2420E55A4()
{
  unint64_t result;

  result = qword_2571A0CA8;
  if (!qword_2571A0CA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CA8);
  }
  return result;
}

unint64_t sub_2420E55E4()
{
  unint64_t result;

  result = qword_2571A0CB0;
  if (!qword_2571A0CB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CB0);
  }
  return result;
}

unint64_t sub_2420E5620(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5644();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5644()
{
  unint64_t result;

  result = qword_2571A0CB8;
  if (!qword_2571A0CB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CB8);
  }
  return result;
}

void sub_2420E5680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5694, (uint64_t (*)(void))sub_2420E56D0);
}

unint64_t sub_2420E5694()
{
  unint64_t result;

  result = qword_2571A0CC0;
  if (!qword_2571A0CC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CC0);
  }
  return result;
}

unint64_t sub_2420E56D0()
{
  unint64_t result;

  result = qword_2571A0CC8;
  if (!qword_2571A0CC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CC8);
  }
  return result;
}

unint64_t sub_2420E5710()
{
  unint64_t result;

  result = qword_2571A0CD0;
  if (!qword_2571A0CD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CD0);
  }
  return result;
}

unint64_t sub_2420E574C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5770();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5770()
{
  unint64_t result;

  result = qword_2571A0CD8;
  if (!qword_2571A0CD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CD8);
  }
  return result;
}

void sub_2420E57AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E57C0, (uint64_t (*)(void))sub_2420E57FC);
}

unint64_t sub_2420E57C0()
{
  unint64_t result;

  result = qword_2571A0CE0;
  if (!qword_2571A0CE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CE0);
  }
  return result;
}

unint64_t sub_2420E57FC()
{
  unint64_t result;

  result = qword_2571A0CE8;
  if (!qword_2571A0CE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CE8);
  }
  return result;
}

unint64_t sub_2420E583C()
{
  unint64_t result;

  result = qword_2571A0CF0;
  if (!qword_2571A0CF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CF0);
  }
  return result;
}

unint64_t sub_2420E5878(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E589C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E589C()
{
  unint64_t result;

  result = qword_2571A0CF8;
  if (!qword_2571A0CF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0CF8);
  }
  return result;
}

void sub_2420E58D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E58EC, (uint64_t (*)(void))sub_2420E5928);
}

unint64_t sub_2420E58EC()
{
  unint64_t result;

  result = qword_2571A0D00;
  if (!qword_2571A0D00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D00);
  }
  return result;
}

unint64_t sub_2420E5928()
{
  unint64_t result;

  result = qword_2571A0D08;
  if (!qword_2571A0D08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D08);
  }
  return result;
}

unint64_t sub_2420E5968()
{
  unint64_t result;

  result = qword_2571A0D10;
  if (!qword_2571A0D10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList, &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D10);
  }
  return result;
}

unint64_t sub_2420E59A4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E59C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E59C8()
{
  unint64_t result;

  result = qword_2571A0D18;
  if (!qword_2571A0D18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D18);
  }
  return result;
}

void sub_2420E5A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5A18, (uint64_t (*)(void))sub_2420E5A54);
}

unint64_t sub_2420E5A18()
{
  unint64_t result;

  result = qword_2571A0D20;
  if (!qword_2571A0D20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D20);
  }
  return result;
}

unint64_t sub_2420E5A54()
{
  unint64_t result;

  result = qword_2571A0D28;
  if (!qword_2571A0D28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D28);
  }
  return result;
}

unint64_t sub_2420E5A94()
{
  unint64_t result;

  result = qword_2571A0D30;
  if (!qword_2571A0D30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D30);
  }
  return result;
}

unint64_t sub_2420E5AD0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5AF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5AF4()
{
  unint64_t result;

  result = qword_2571A0D38;
  if (!qword_2571A0D38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D38);
  }
  return result;
}

void sub_2420E5B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5B44, (uint64_t (*)(void))sub_2420E5B80);
}

unint64_t sub_2420E5B44()
{
  unint64_t result;

  result = qword_2571A0D40;
  if (!qword_2571A0D40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D40);
  }
  return result;
}

unint64_t sub_2420E5B80()
{
  unint64_t result;

  result = qword_2571A0D48;
  if (!qword_2571A0D48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D48);
  }
  return result;
}

unint64_t sub_2420E5BC0()
{
  unint64_t result;

  result = qword_2571A0D50;
  if (!qword_2571A0D50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D50);
  }
  return result;
}

unint64_t sub_2420E5BFC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5C20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5C20()
{
  unint64_t result;

  result = qword_2571A0D58;
  if (!qword_2571A0D58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D58);
  }
  return result;
}

void sub_2420E5C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5C70, (uint64_t (*)(void))sub_2420E5CAC);
}

unint64_t sub_2420E5C70()
{
  unint64_t result;

  result = qword_2571A0D60;
  if (!qword_2571A0D60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D60);
  }
  return result;
}

unint64_t sub_2420E5CAC()
{
  unint64_t result;

  result = qword_2571A0D68;
  if (!qword_2571A0D68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D68);
  }
  return result;
}

unint64_t sub_2420E5CEC()
{
  unint64_t result;

  result = qword_2571A0D70;
  if (!qword_2571A0D70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D70);
  }
  return result;
}

unint64_t sub_2420E5D28(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5D4C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5D4C()
{
  unint64_t result;

  result = qword_2571A0D78;
  if (!qword_2571A0D78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D78);
  }
  return result;
}

void sub_2420E5D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5D9C, (uint64_t (*)(void))sub_2420E5DD8);
}

unint64_t sub_2420E5D9C()
{
  unint64_t result;

  result = qword_2571A0D80;
  if (!qword_2571A0D80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D80);
  }
  return result;
}

unint64_t sub_2420E5DD8()
{
  unint64_t result;

  result = qword_2571A0D88;
  if (!qword_2571A0D88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D88);
  }
  return result;
}

unint64_t sub_2420E5E18()
{
  unint64_t result;

  result = qword_2571A0D90;
  if (!qword_2571A0D90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D90);
  }
  return result;
}

unint64_t sub_2420E5E54(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5E78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5E78()
{
  unint64_t result;

  result = qword_2571A0D98;
  if (!qword_2571A0D98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0D98);
  }
  return result;
}

void sub_2420E5EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5EC8, (uint64_t (*)(void))sub_2420E5F04);
}

unint64_t sub_2420E5EC8()
{
  unint64_t result;

  result = qword_2571A0DA0;
  if (!qword_2571A0DA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DA0);
  }
  return result;
}

unint64_t sub_2420E5F04()
{
  unint64_t result;

  result = qword_2571A0DA8;
  if (!qword_2571A0DA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DA8);
  }
  return result;
}

unint64_t sub_2420E5F44()
{
  unint64_t result;

  result = qword_2571A0DB0;
  if (!qword_2571A0DB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList, &type metadata for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DB0);
  }
  return result;
}

unint64_t sub_2420E5F80(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E5FA4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E5FA4()
{
  unint64_t result;

  result = qword_2571A0DB8;
  if (!qword_2571A0DB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DB8);
  }
  return result;
}

void sub_2420E5FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E5FF4, (uint64_t (*)(void))sub_2420E6030);
}

unint64_t sub_2420E5FF4()
{
  unint64_t result;

  result = qword_2571A0DC0;
  if (!qword_2571A0DC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DC0);
  }
  return result;
}

unint64_t sub_2420E6030()
{
  unint64_t result;

  result = qword_2571A0DC8;
  if (!qword_2571A0DC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DC8);
  }
  return result;
}

unint64_t sub_2420E6070()
{
  unint64_t result;

  result = qword_2571A0DD0;
  if (!qword_2571A0DD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList, &type metadata for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DD0);
  }
  return result;
}

unint64_t sub_2420E60AC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E60D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E60D0()
{
  unint64_t result;

  result = qword_2571A0DD8;
  if (!qword_2571A0DD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DD8);
  }
  return result;
}

void sub_2420E610C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6120, (uint64_t (*)(void))sub_2420E615C);
}

unint64_t sub_2420E6120()
{
  unint64_t result;

  result = qword_2571A0DE0;
  if (!qword_2571A0DE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DE0);
  }
  return result;
}

unint64_t sub_2420E615C()
{
  unint64_t result;

  result = qword_2571A0DE8;
  if (!qword_2571A0DE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DE8);
  }
  return result;
}

unint64_t sub_2420E619C()
{
  unint64_t result;

  result = qword_2571A0DF0;
  if (!qword_2571A0DF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DF0);
  }
  return result;
}

unint64_t sub_2420E61D8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E61FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E61FC()
{
  unint64_t result;

  result = qword_2571A0DF8;
  if (!qword_2571A0DF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0DF8);
  }
  return result;
}

void sub_2420E6238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E624C, (uint64_t (*)(void))sub_2420E6288);
}

unint64_t sub_2420E624C()
{
  unint64_t result;

  result = qword_2571A0E00;
  if (!qword_2571A0E00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E00);
  }
  return result;
}

unint64_t sub_2420E6288()
{
  unint64_t result;

  result = qword_2571A0E08;
  if (!qword_2571A0E08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E08);
  }
  return result;
}

unint64_t sub_2420E62C8()
{
  unint64_t result;

  result = qword_2571A0E10;
  if (!qword_2571A0E10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E10);
  }
  return result;
}

unint64_t sub_2420E6304(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6328();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6328()
{
  unint64_t result;

  result = qword_2571A0E18;
  if (!qword_2571A0E18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E18);
  }
  return result;
}

void sub_2420E6364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6378, (uint64_t (*)(void))sub_2420E63B4);
}

unint64_t sub_2420E6378()
{
  unint64_t result;

  result = qword_2571A0E20;
  if (!qword_2571A0E20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E20);
  }
  return result;
}

unint64_t sub_2420E63B4()
{
  unint64_t result;

  result = qword_2571A0E28;
  if (!qword_2571A0E28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E28);
  }
  return result;
}

unint64_t sub_2420E63F4()
{
  unint64_t result;

  result = qword_2571A0E30;
  if (!qword_2571A0E30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E30);
  }
  return result;
}

unint64_t sub_2420E6430(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6454();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6454()
{
  unint64_t result;

  result = qword_2571A0E38;
  if (!qword_2571A0E38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E38);
  }
  return result;
}

void sub_2420E6490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E64A4, (uint64_t (*)(void))sub_2420E64E0);
}

unint64_t sub_2420E64A4()
{
  unint64_t result;

  result = qword_2571A0E40;
  if (!qword_2571A0E40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E40);
  }
  return result;
}

unint64_t sub_2420E64E0()
{
  unint64_t result;

  result = qword_2571A0E48;
  if (!qword_2571A0E48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E48);
  }
  return result;
}

unint64_t sub_2420E6520()
{
  unint64_t result;

  result = qword_2571A0E50;
  if (!qword_2571A0E50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E50);
  }
  return result;
}

unint64_t sub_2420E655C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6580();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6580()
{
  unint64_t result;

  result = qword_2571A0E58;
  if (!qword_2571A0E58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E58);
  }
  return result;
}

void sub_2420E65BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E65D0, (uint64_t (*)(void))sub_2420E660C);
}

unint64_t sub_2420E65D0()
{
  unint64_t result;

  result = qword_2571A0E60;
  if (!qword_2571A0E60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E60);
  }
  return result;
}

unint64_t sub_2420E660C()
{
  unint64_t result;

  result = qword_2571A0E68;
  if (!qword_2571A0E68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E68);
  }
  return result;
}

unint64_t sub_2420E664C()
{
  unint64_t result;

  result = qword_2571A0E70;
  if (!qword_2571A0E70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E70);
  }
  return result;
}

unint64_t sub_2420E6688(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E66AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E66AC()
{
  unint64_t result;

  result = qword_2571A0E78;
  if (!qword_2571A0E78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E78);
  }
  return result;
}

void sub_2420E66E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E66FC, (uint64_t (*)(void))sub_2420E6738);
}

unint64_t sub_2420E66FC()
{
  unint64_t result;

  result = qword_2571A0E80;
  if (!qword_2571A0E80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E80);
  }
  return result;
}

unint64_t sub_2420E6738()
{
  unint64_t result;

  result = qword_2571A0E88;
  if (!qword_2571A0E88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E88);
  }
  return result;
}

unint64_t sub_2420E6778()
{
  unint64_t result;

  result = qword_2571A0E90;
  if (!qword_2571A0E90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E90);
  }
  return result;
}

unint64_t sub_2420E67B4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E67D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E67D8()
{
  unint64_t result;

  result = qword_2571A0E98;
  if (!qword_2571A0E98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0E98);
  }
  return result;
}

void sub_2420E6814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6828, (uint64_t (*)(void))sub_2420E6864);
}

unint64_t sub_2420E6828()
{
  unint64_t result;

  result = qword_2571A0EA0;
  if (!qword_2571A0EA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EA0);
  }
  return result;
}

unint64_t sub_2420E6864()
{
  unint64_t result;

  result = qword_2571A0EA8;
  if (!qword_2571A0EA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EA8);
  }
  return result;
}

unint64_t sub_2420E68A4()
{
  unint64_t result;

  result = qword_2571A0EB0;
  if (!qword_2571A0EB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EB0);
  }
  return result;
}

unint64_t sub_2420E68E0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6904();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6904()
{
  unint64_t result;

  result = qword_2571A0EB8;
  if (!qword_2571A0EB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EB8);
  }
  return result;
}

void sub_2420E6940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6954, (uint64_t (*)(void))sub_2420E6990);
}

unint64_t sub_2420E6954()
{
  unint64_t result;

  result = qword_2571A0EC0;
  if (!qword_2571A0EC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EC0);
  }
  return result;
}

unint64_t sub_2420E6990()
{
  unint64_t result;

  result = qword_2571A0EC8;
  if (!qword_2571A0EC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EC8);
  }
  return result;
}

unint64_t sub_2420E69D0()
{
  unint64_t result;

  result = qword_2571A0ED0;
  if (!qword_2571A0ED0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0ED0);
  }
  return result;
}

unint64_t sub_2420E6A0C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6A30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6A30()
{
  unint64_t result;

  result = qword_2571A0ED8;
  if (!qword_2571A0ED8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0ED8);
  }
  return result;
}

void sub_2420E6A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6A80, (uint64_t (*)(void))sub_2420E6ABC);
}

unint64_t sub_2420E6A80()
{
  unint64_t result;

  result = qword_2571A0EE0;
  if (!qword_2571A0EE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EE0);
  }
  return result;
}

unint64_t sub_2420E6ABC()
{
  unint64_t result;

  result = qword_2571A0EE8;
  if (!qword_2571A0EE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EE8);
  }
  return result;
}

unint64_t sub_2420E6AFC()
{
  unint64_t result;

  result = qword_2571A0EF0;
  if (!qword_2571A0EF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList, &type metadata for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EF0);
  }
  return result;
}

unint64_t sub_2420E6B38(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6B5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6B5C()
{
  unint64_t result;

  result = qword_2571A0EF8;
  if (!qword_2571A0EF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0EF8);
  }
  return result;
}

void sub_2420E6B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6BAC, (uint64_t (*)(void))sub_2420E6BE8);
}

unint64_t sub_2420E6BAC()
{
  unint64_t result;

  result = qword_2571A0F00;
  if (!qword_2571A0F00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F00);
  }
  return result;
}

unint64_t sub_2420E6BE8()
{
  unint64_t result;

  result = qword_2571A0F08;
  if (!qword_2571A0F08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F08);
  }
  return result;
}

unint64_t sub_2420E6C28()
{
  unint64_t result;

  result = qword_2571A0F10;
  if (!qword_2571A0F10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F10);
  }
  return result;
}

unint64_t sub_2420E6C64(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6C88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6C88()
{
  unint64_t result;

  result = qword_2571A0F18;
  if (!qword_2571A0F18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F18);
  }
  return result;
}

void sub_2420E6CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6CD8, (uint64_t (*)(void))sub_2420E6D14);
}

unint64_t sub_2420E6CD8()
{
  unint64_t result;

  result = qword_2571A0F20;
  if (!qword_2571A0F20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F20);
  }
  return result;
}

unint64_t sub_2420E6D14()
{
  unint64_t result;

  result = qword_2571A0F28;
  if (!qword_2571A0F28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F28);
  }
  return result;
}

unint64_t sub_2420E6D54()
{
  unint64_t result;

  result = qword_2571A0F30;
  if (!qword_2571A0F30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F30);
  }
  return result;
}

unint64_t sub_2420E6D90(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6DB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6DB4()
{
  unint64_t result;

  result = qword_2571A0F38;
  if (!qword_2571A0F38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F38);
  }
  return result;
}

void sub_2420E6DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6E04, (uint64_t (*)(void))sub_2420E6E40);
}

unint64_t sub_2420E6E04()
{
  unint64_t result;

  result = qword_2571A0F40;
  if (!qword_2571A0F40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F40);
  }
  return result;
}

unint64_t sub_2420E6E40()
{
  unint64_t result;

  result = qword_2571A0F48;
  if (!qword_2571A0F48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F48);
  }
  return result;
}

unint64_t sub_2420E6E80()
{
  unint64_t result;

  result = qword_2571A0F50;
  if (!qword_2571A0F50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F50);
  }
  return result;
}

unint64_t sub_2420E6EBC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E6EE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E6EE0()
{
  unint64_t result;

  result = qword_2571A0F58;
  if (!qword_2571A0F58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F58);
  }
  return result;
}

void sub_2420E6F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E6F30, (uint64_t (*)(void))sub_2420E6F6C);
}

unint64_t sub_2420E6F30()
{
  unint64_t result;

  result = qword_2571A0F60;
  if (!qword_2571A0F60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F60);
  }
  return result;
}

unint64_t sub_2420E6F6C()
{
  unint64_t result;

  result = qword_2571A0F68;
  if (!qword_2571A0F68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F68);
  }
  return result;
}

unint64_t sub_2420E6FAC()
{
  unint64_t result;

  result = qword_2571A0F70;
  if (!qword_2571A0F70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F70);
  }
  return result;
}

unint64_t sub_2420E6FE8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E700C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E700C()
{
  unint64_t result;

  result = qword_2571A0F78;
  if (!qword_2571A0F78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F78);
  }
  return result;
}

void sub_2420E7048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E705C, (uint64_t (*)(void))sub_2420E7098);
}

unint64_t sub_2420E705C()
{
  unint64_t result;

  result = qword_2571A0F80;
  if (!qword_2571A0F80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F80);
  }
  return result;
}

unint64_t sub_2420E7098()
{
  unint64_t result;

  result = qword_2571A0F88;
  if (!qword_2571A0F88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F88);
  }
  return result;
}

unint64_t sub_2420E70D8()
{
  unint64_t result;

  result = qword_2571A0F90;
  if (!qword_2571A0F90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F90);
  }
  return result;
}

unint64_t sub_2420E7114(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7138();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7138()
{
  unint64_t result;

  result = qword_2571A0F98;
  if (!qword_2571A0F98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0F98);
  }
  return result;
}

void sub_2420E7174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7188, (uint64_t (*)(void))sub_2420E71C4);
}

unint64_t sub_2420E7188()
{
  unint64_t result;

  result = qword_2571A0FA0;
  if (!qword_2571A0FA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FA0);
  }
  return result;
}

unint64_t sub_2420E71C4()
{
  unint64_t result;

  result = qword_2571A0FA8;
  if (!qword_2571A0FA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FA8);
  }
  return result;
}

unint64_t sub_2420E7204()
{
  unint64_t result;

  result = qword_2571A0FB0;
  if (!qword_2571A0FB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FB0);
  }
  return result;
}

unint64_t sub_2420E7240(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7264();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7264()
{
  unint64_t result;

  result = qword_2571A0FB8;
  if (!qword_2571A0FB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FB8);
  }
  return result;
}

void sub_2420E72A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E72B4, (uint64_t (*)(void))sub_2420E72F0);
}

unint64_t sub_2420E72B4()
{
  unint64_t result;

  result = qword_2571A0FC0;
  if (!qword_2571A0FC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FC0);
  }
  return result;
}

unint64_t sub_2420E72F0()
{
  unint64_t result;

  result = qword_2571A0FC8;
  if (!qword_2571A0FC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FC8);
  }
  return result;
}

unint64_t sub_2420E7330()
{
  unint64_t result;

  result = qword_2571A0FD0;
  if (!qword_2571A0FD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FD0);
  }
  return result;
}

unint64_t sub_2420E736C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7390();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7390()
{
  unint64_t result;

  result = qword_2571A0FD8;
  if (!qword_2571A0FD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FD8);
  }
  return result;
}

void sub_2420E73CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E73E0, (uint64_t (*)(void))sub_2420E741C);
}

unint64_t sub_2420E73E0()
{
  unint64_t result;

  result = qword_2571A0FE0;
  if (!qword_2571A0FE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FE0);
  }
  return result;
}

unint64_t sub_2420E741C()
{
  unint64_t result;

  result = qword_2571A0FE8;
  if (!qword_2571A0FE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FE8);
  }
  return result;
}

unint64_t sub_2420E745C()
{
  unint64_t result;

  result = qword_2571A0FF0;
  if (!qword_2571A0FF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FF0);
  }
  return result;
}

unint64_t sub_2420E7498(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E74BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E74BC()
{
  unint64_t result;

  result = qword_2571A0FF8;
  if (!qword_2571A0FF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A0FF8);
  }
  return result;
}

void sub_2420E74F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E750C, (uint64_t (*)(void))sub_2420E7548);
}

unint64_t sub_2420E750C()
{
  unint64_t result;

  result = qword_2571A1000;
  if (!qword_2571A1000)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1000);
  }
  return result;
}

unint64_t sub_2420E7548()
{
  unint64_t result;

  result = qword_2571A1008;
  if (!qword_2571A1008)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1008);
  }
  return result;
}

unint64_t sub_2420E7588()
{
  unint64_t result;

  result = qword_2571A1010;
  if (!qword_2571A1010)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1010);
  }
  return result;
}

unint64_t sub_2420E75C4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E75E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E75E8()
{
  unint64_t result;

  result = qword_2571A1018;
  if (!qword_2571A1018)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1018);
  }
  return result;
}

void sub_2420E7624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7638, (uint64_t (*)(void))sub_2420E7674);
}

unint64_t sub_2420E7638()
{
  unint64_t result;

  result = qword_2571A1020;
  if (!qword_2571A1020)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1020);
  }
  return result;
}

unint64_t sub_2420E7674()
{
  unint64_t result;

  result = qword_2571A1028;
  if (!qword_2571A1028)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1028);
  }
  return result;
}

unint64_t sub_2420E76B4()
{
  unint64_t result;

  result = qword_2571A1030;
  if (!qword_2571A1030)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1030);
  }
  return result;
}

unint64_t sub_2420E76F0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7714();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7714()
{
  unint64_t result;

  result = qword_2571A1038;
  if (!qword_2571A1038)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1038);
  }
  return result;
}

void sub_2420E7750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7764, (uint64_t (*)(void))sub_2420E77A0);
}

unint64_t sub_2420E7764()
{
  unint64_t result;

  result = qword_2571A1040;
  if (!qword_2571A1040)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1040);
  }
  return result;
}

unint64_t sub_2420E77A0()
{
  unint64_t result;

  result = qword_2571A1048;
  if (!qword_2571A1048)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1048);
  }
  return result;
}

unint64_t sub_2420E77E0()
{
  unint64_t result;

  result = qword_2571A1050;
  if (!qword_2571A1050)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1050);
  }
  return result;
}

unint64_t sub_2420E781C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7840();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7840()
{
  unint64_t result;

  result = qword_2571A1058;
  if (!qword_2571A1058)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1058);
  }
  return result;
}

void sub_2420E787C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7890, (uint64_t (*)(void))sub_2420E78CC);
}

unint64_t sub_2420E7890()
{
  unint64_t result;

  result = qword_2571A1060;
  if (!qword_2571A1060)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1060);
  }
  return result;
}

unint64_t sub_2420E78CC()
{
  unint64_t result;

  result = qword_2571A1068;
  if (!qword_2571A1068)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1068);
  }
  return result;
}

unint64_t sub_2420E790C()
{
  unint64_t result;

  result = qword_2571A1070;
  if (!qword_2571A1070)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1070);
  }
  return result;
}

unint64_t sub_2420E7948(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E796C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E796C()
{
  unint64_t result;

  result = qword_2571A1078;
  if (!qword_2571A1078)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1078);
  }
  return result;
}

void sub_2420E79A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E79BC, (uint64_t (*)(void))sub_2420E79F8);
}

unint64_t sub_2420E79BC()
{
  unint64_t result;

  result = qword_2571A1080;
  if (!qword_2571A1080)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1080);
  }
  return result;
}

unint64_t sub_2420E79F8()
{
  unint64_t result;

  result = qword_2571A1088;
  if (!qword_2571A1088)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1088);
  }
  return result;
}

unint64_t sub_2420E7A38()
{
  unint64_t result;

  result = qword_2571A1090;
  if (!qword_2571A1090)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1090);
  }
  return result;
}

unint64_t sub_2420E7A74(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7A98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7A98()
{
  unint64_t result;

  result = qword_2571A1098;
  if (!qword_2571A1098)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1098);
  }
  return result;
}

void sub_2420E7AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7AE8, (uint64_t (*)(void))sub_2420E7B24);
}

unint64_t sub_2420E7AE8()
{
  unint64_t result;

  result = qword_2571A10A0;
  if (!qword_2571A10A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10A0);
  }
  return result;
}

unint64_t sub_2420E7B24()
{
  unint64_t result;

  result = qword_2571A10A8;
  if (!qword_2571A10A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10A8);
  }
  return result;
}

unint64_t sub_2420E7B64()
{
  unint64_t result;

  result = qword_2571A10B0;
  if (!qword_2571A10B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10B0);
  }
  return result;
}

unint64_t sub_2420E7BA0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7BC4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7BC4()
{
  unint64_t result;

  result = qword_2571A10B8;
  if (!qword_2571A10B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10B8);
  }
  return result;
}

void sub_2420E7C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7C14, (uint64_t (*)(void))sub_2420E7C50);
}

unint64_t sub_2420E7C14()
{
  unint64_t result;

  result = qword_2571A10C0;
  if (!qword_2571A10C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10C0);
  }
  return result;
}

unint64_t sub_2420E7C50()
{
  unint64_t result;

  result = qword_2571A10C8;
  if (!qword_2571A10C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10C8);
  }
  return result;
}

unint64_t sub_2420E7C90()
{
  unint64_t result;

  result = qword_2571A10D0;
  if (!qword_2571A10D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10D0);
  }
  return result;
}

unint64_t sub_2420E7CCC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7CF0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7CF0()
{
  unint64_t result;

  result = qword_2571A10D8;
  if (!qword_2571A10D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10D8);
  }
  return result;
}

void sub_2420E7D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7D40, (uint64_t (*)(void))sub_2420E7D7C);
}

unint64_t sub_2420E7D40()
{
  unint64_t result;

  result = qword_2571A10E0;
  if (!qword_2571A10E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10E0);
  }
  return result;
}

unint64_t sub_2420E7D7C()
{
  unint64_t result;

  result = qword_2571A10E8;
  if (!qword_2571A10E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10E8);
  }
  return result;
}

unint64_t sub_2420E7DBC()
{
  unint64_t result;

  result = qword_2571A10F0;
  if (!qword_2571A10F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10F0);
  }
  return result;
}

unint64_t sub_2420E7DF8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7E1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7E1C()
{
  unint64_t result;

  result = qword_2571A10F8;
  if (!qword_2571A10F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A10F8);
  }
  return result;
}

void sub_2420E7E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7E6C, (uint64_t (*)(void))sub_2420E7EA8);
}

unint64_t sub_2420E7E6C()
{
  unint64_t result;

  result = qword_2571A1100;
  if (!qword_2571A1100)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1100);
  }
  return result;
}

unint64_t sub_2420E7EA8()
{
  unint64_t result;

  result = qword_2571A1108;
  if (!qword_2571A1108)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1108);
  }
  return result;
}

unint64_t sub_2420E7EE8()
{
  unint64_t result;

  result = qword_2571A1110;
  if (!qword_2571A1110)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1110);
  }
  return result;
}

unint64_t sub_2420E7F24(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E7F48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E7F48()
{
  unint64_t result;

  result = qword_2571A1118;
  if (!qword_2571A1118)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1118);
  }
  return result;
}

void sub_2420E7F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E7F98, (uint64_t (*)(void))sub_2420E7FD4);
}

unint64_t sub_2420E7F98()
{
  unint64_t result;

  result = qword_2571A1120;
  if (!qword_2571A1120)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1120);
  }
  return result;
}

unint64_t sub_2420E7FD4()
{
  unint64_t result;

  result = qword_2571A1128;
  if (!qword_2571A1128)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1128);
  }
  return result;
}

unint64_t sub_2420E8014()
{
  unint64_t result;

  result = qword_2571A1130;
  if (!qword_2571A1130)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1130);
  }
  return result;
}

unint64_t sub_2420E8050(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E8074();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8074()
{
  unint64_t result;

  result = qword_2571A1138;
  if (!qword_2571A1138)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1138);
  }
  return result;
}

void sub_2420E80B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E80C4, (uint64_t (*)(void))sub_2420E8100);
}

unint64_t sub_2420E80C4()
{
  unint64_t result;

  result = qword_2571A1140;
  if (!qword_2571A1140)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1140);
  }
  return result;
}

unint64_t sub_2420E8100()
{
  unint64_t result;

  result = qword_2571A1148;
  if (!qword_2571A1148)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1148);
  }
  return result;
}

unint64_t sub_2420E8140()
{
  unint64_t result;

  result = qword_2571A1150;
  if (!qword_2571A1150)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1150);
  }
  return result;
}

unint64_t sub_2420E817C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E81A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E81A0()
{
  unint64_t result;

  result = qword_2571A1158;
  if (!qword_2571A1158)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1158);
  }
  return result;
}

void sub_2420E81DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E81F0, (uint64_t (*)(void))sub_2420E822C);
}

unint64_t sub_2420E81F0()
{
  unint64_t result;

  result = qword_2571A1160;
  if (!qword_2571A1160)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1160);
  }
  return result;
}

unint64_t sub_2420E822C()
{
  unint64_t result;

  result = qword_2571A1168;
  if (!qword_2571A1168)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1168);
  }
  return result;
}

unint64_t sub_2420E826C()
{
  unint64_t result;

  result = qword_2571A1170;
  if (!qword_2571A1170)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1170);
  }
  return result;
}

unint64_t sub_2420E82A8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E82CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E82CC()
{
  unint64_t result;

  result = qword_2571A1178;
  if (!qword_2571A1178)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1178);
  }
  return result;
}

void sub_2420E8308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E831C, (uint64_t (*)(void))sub_2420E8358);
}

unint64_t sub_2420E831C()
{
  unint64_t result;

  result = qword_2571A1180;
  if (!qword_2571A1180)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1180);
  }
  return result;
}

unint64_t sub_2420E8358()
{
  unint64_t result;

  result = qword_2571A1188;
  if (!qword_2571A1188)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1188);
  }
  return result;
}

unint64_t sub_2420E8398()
{
  unint64_t result;

  result = qword_2571A1190;
  if (!qword_2571A1190)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1190);
  }
  return result;
}

unint64_t sub_2420E83D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E83F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E83F8()
{
  unint64_t result;

  result = qword_2571A1198;
  if (!qword_2571A1198)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1198);
  }
  return result;
}

void sub_2420E8434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E8448, (uint64_t (*)(void))sub_2420E8484);
}

unint64_t sub_2420E8448()
{
  unint64_t result;

  result = qword_2571A11A0;
  if (!qword_2571A11A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11A0);
  }
  return result;
}

unint64_t sub_2420E8484()
{
  unint64_t result;

  result = qword_2571A11A8;
  if (!qword_2571A11A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11A8);
  }
  return result;
}

unint64_t sub_2420E84C4()
{
  unint64_t result;

  result = qword_2571A11B0;
  if (!qword_2571A11B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11B0);
  }
  return result;
}

unint64_t sub_2420E8500(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E8524();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8524()
{
  unint64_t result;

  result = qword_2571A11B8;
  if (!qword_2571A11B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11B8);
  }
  return result;
}

void sub_2420E8560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E8574, (uint64_t (*)(void))sub_2420E85B0);
}

unint64_t sub_2420E8574()
{
  unint64_t result;

  result = qword_2571A11C0;
  if (!qword_2571A11C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11C0);
  }
  return result;
}

unint64_t sub_2420E85B0()
{
  unint64_t result;

  result = qword_2571A11C8;
  if (!qword_2571A11C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11C8);
  }
  return result;
}

unint64_t sub_2420E85F0()
{
  unint64_t result;

  result = qword_2571A11D0;
  if (!qword_2571A11D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11D0);
  }
  return result;
}

unint64_t sub_2420E862C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E8650();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8650()
{
  unint64_t result;

  result = qword_2571A11D8;
  if (!qword_2571A11D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11D8);
  }
  return result;
}

void sub_2420E868C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E86A0, (uint64_t (*)(void))sub_2420E86DC);
}

unint64_t sub_2420E86A0()
{
  unint64_t result;

  result = qword_2571A11E0;
  if (!qword_2571A11E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11E0);
  }
  return result;
}

unint64_t sub_2420E86DC()
{
  unint64_t result;

  result = qword_2571A11E8;
  if (!qword_2571A11E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11E8);
  }
  return result;
}

unint64_t sub_2420E871C()
{
  unint64_t result;

  result = qword_2571A11F0;
  if (!qword_2571A11F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11F0);
  }
  return result;
}

unint64_t sub_2420E8758(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E877C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E877C()
{
  unint64_t result;

  result = qword_2571A11F8;
  if (!qword_2571A11F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A11F8);
  }
  return result;
}

void sub_2420E87B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E87CC, (uint64_t (*)(void))sub_2420E8808);
}

unint64_t sub_2420E87CC()
{
  unint64_t result;

  result = qword_2571A1200;
  if (!qword_2571A1200)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1200);
  }
  return result;
}

unint64_t sub_2420E8808()
{
  unint64_t result;

  result = qword_2571A1208;
  if (!qword_2571A1208)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1208);
  }
  return result;
}

unint64_t sub_2420E8848()
{
  unint64_t result;

  result = qword_2571A1210;
  if (!qword_2571A1210)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList, &type metadata for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList);
    atomic_store(result, (unint64_t *)&qword_2571A1210);
  }
  return result;
}

unint64_t sub_2420E8884(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFD6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E88A8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E88CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E88CC()
{
  unint64_t result;

  result = qword_2543977B8;
  if (!qword_2543977B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.AFMTextInstructEnglish49k, &type metadata for Catalog.Tokenizer.AFMTextInstructEnglish49k);
    atomic_store(result, (unint64_t *)&qword_2543977B8);
  }
  return result;
}

void sub_2420E8908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E891C, (uint64_t (*)(void))sub_2420E8958);
}

unint64_t sub_2420E891C()
{
  unint64_t result;

  result = qword_2543977A0;
  if (!qword_2543977A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.AFMTextInstructEnglish49k, &type metadata for Catalog.Tokenizer.AFMTextInstructEnglish49k);
    atomic_store(result, (unint64_t *)&qword_2543977A0);
  }
  return result;
}

unint64_t sub_2420E8958()
{
  unint64_t result;

  result = qword_2543977B0;
  if (!qword_2543977B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.AFMTextInstructEnglish49k, &type metadata for Catalog.Tokenizer.AFMTextInstructEnglish49k);
    atomic_store(result, (unint64_t *)&qword_2543977B0);
  }
  return result;
}

unint64_t sub_2420E8998()
{
  unint64_t result;

  result = qword_2543977A8;
  if (!qword_2543977A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.AFMTextInstructEnglish49k, &type metadata for Catalog.Tokenizer.AFMTextInstructEnglish49k);
    atomic_store(result, (unint64_t *)&qword_2543977A8);
  }
  return result;
}

unint64_t sub_2420E89D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420C00AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E89F8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E8A1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8A1C()
{
  unint64_t result;

  result = qword_2571A1218;
  if (!qword_2571A1218)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1218);
  }
  return result;
}

void sub_2420E8A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E8A6C, (uint64_t (*)(void))sub_2420E8AA8);
}

unint64_t sub_2420E8A6C()
{
  unint64_t result;

  result = qword_2571A1220;
  if (!qword_2571A1220)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1220);
  }
  return result;
}

unint64_t sub_2420E8AA8()
{
  unint64_t result;

  result = qword_2571A1228;
  if (!qword_2571A1228)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1228);
  }
  return result;
}

unint64_t sub_2420E8AE8()
{
  unint64_t result;

  result = qword_2571A1230;
  if (!qword_2571A1230)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1230);
  }
  return result;
}

unint64_t sub_2420E8B24(uint64_t a1)
{
  unint64_t result;

  result = sub_2420C006C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8B48(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E8B6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8B6C()
{
  unint64_t result;

  result = qword_2571A1238;
  if (!qword_2571A1238)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1238);
  }
  return result;
}

void sub_2420E8BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E8BBC, (uint64_t (*)(void))sub_2420E8BF8);
}

unint64_t sub_2420E8BBC()
{
  unint64_t result;

  result = qword_2571A1240;
  if (!qword_2571A1240)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1240);
  }
  return result;
}

unint64_t sub_2420E8BF8()
{
  unint64_t result;

  result = qword_2571A1248;
  if (!qword_2571A1248)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1248);
  }
  return result;
}

unint64_t sub_2420E8C38()
{
  unint64_t result;

  result = qword_2571A1250;
  if (!qword_2571A1250)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1250);
  }
  return result;
}

unint64_t sub_2420E8C74(uint64_t a1)
{
  unint64_t result;

  result = sub_2420C002C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8C98(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E8CBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8CBC()
{
  unint64_t result;

  result = qword_2571A1258;
  if (!qword_2571A1258)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1258);
  }
  return result;
}

void sub_2420E8CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E8D0C, (uint64_t (*)(void))sub_2420E8D48);
}

unint64_t sub_2420E8D0C()
{
  unint64_t result;

  result = qword_2571A1260;
  if (!qword_2571A1260)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1260);
  }
  return result;
}

unint64_t sub_2420E8D48()
{
  unint64_t result;

  result = qword_2571A1268;
  if (!qword_2571A1268)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1268);
  }
  return result;
}

unint64_t sub_2420E8D88()
{
  unint64_t result;

  result = qword_2571A1270;
  if (!qword_2571A1270)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1270);
  }
  return result;
}

unint64_t sub_2420E8DC4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFFEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8DE8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E8E0C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8E0C()
{
  unint64_t result;

  result = qword_2571A1278;
  if (!qword_2571A1278)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1278);
  }
  return result;
}

void sub_2420E8E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E8E5C, (uint64_t (*)(void))sub_2420E8E98);
}

unint64_t sub_2420E8E5C()
{
  unint64_t result;

  result = qword_2571A1280;
  if (!qword_2571A1280)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1280);
  }
  return result;
}

unint64_t sub_2420E8E98()
{
  unint64_t result;

  result = qword_2571A1288;
  if (!qword_2571A1288)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1288);
  }
  return result;
}

unint64_t sub_2420E8ED8()
{
  unint64_t result;

  result = qword_2571A1290;
  if (!qword_2571A1290)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1290);
  }
  return result;
}

unint64_t sub_2420E8F14(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFFAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8F38(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E8F5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E8F5C()
{
  unint64_t result;

  result = qword_2571A1298;
  if (!qword_2571A1298)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1298);
  }
  return result;
}

void sub_2420E8F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E8FAC, (uint64_t (*)(void))sub_2420E8FE8);
}

unint64_t sub_2420E8FAC()
{
  unint64_t result;

  result = qword_2571A12A0;
  if (!qword_2571A12A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12A0);
  }
  return result;
}

unint64_t sub_2420E8FE8()
{
  unint64_t result;

  result = qword_2571A12A8;
  if (!qword_2571A12A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12A8);
  }
  return result;
}

unint64_t sub_2420E9028()
{
  unint64_t result;

  result = qword_2571A12B0;
  if (!qword_2571A12B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12B0);
  }
  return result;
}

unint64_t sub_2420E9064(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFF6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9088(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E90AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E90AC()
{
  unint64_t result;

  result = qword_2571A12B8;
  if (!qword_2571A12B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12B8);
  }
  return result;
}

void sub_2420E90E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E90FC, (uint64_t (*)(void))sub_2420E9138);
}

unint64_t sub_2420E90FC()
{
  unint64_t result;

  result = qword_2571A12C0;
  if (!qword_2571A12C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12C0);
  }
  return result;
}

unint64_t sub_2420E9138()
{
  unint64_t result;

  result = qword_2571A12C8;
  if (!qword_2571A12C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12C8);
  }
  return result;
}

unint64_t sub_2420E9178()
{
  unint64_t result;

  result = qword_2571A12D0;
  if (!qword_2571A12D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12D0);
  }
  return result;
}

unint64_t sub_2420E91B4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFF2C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E91D8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E91FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E91FC()
{
  unint64_t result;

  result = qword_2571A12D8;
  if (!qword_2571A12D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12D8);
  }
  return result;
}

void sub_2420E9238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E924C, (uint64_t (*)(void))sub_2420E9288);
}

unint64_t sub_2420E924C()
{
  unint64_t result;

  result = qword_2571A12E0;
  if (!qword_2571A12E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12E0);
  }
  return result;
}

unint64_t sub_2420E9288()
{
  unint64_t result;

  result = qword_2571A12E8;
  if (!qword_2571A12E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12E8);
  }
  return result;
}

unint64_t sub_2420E92C8()
{
  unint64_t result;

  result = qword_2571A12F0;
  if (!qword_2571A12F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A12F0);
  }
  return result;
}

unint64_t sub_2420E9304(uint64_t a1)
{
  unint64_t result;

  result = sub_2420C01C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9328(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E934C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E934C()
{
  unint64_t result;

  result = qword_254397798;
  if (!qword_254397798)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizer, &type metadata for Catalog.Tokenizer.CodeLMTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397798);
  }
  return result;
}

void sub_2420E9388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E939C, (uint64_t (*)(void))sub_2420E93D8);
}

unint64_t sub_2420E939C()
{
  unint64_t result;

  result = qword_254397780;
  if (!qword_254397780)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizer, &type metadata for Catalog.Tokenizer.CodeLMTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397780);
  }
  return result;
}

unint64_t sub_2420E93D8()
{
  unint64_t result;

  result = qword_254397790;
  if (!qword_254397790)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizer, &type metadata for Catalog.Tokenizer.CodeLMTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397790);
  }
  return result;
}

unint64_t sub_2420E9418()
{
  unint64_t result;

  result = qword_254397788;
  if (!qword_254397788)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizer, &type metadata for Catalog.Tokenizer.CodeLMTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397788);
  }
  return result;
}

unint64_t sub_2420E9454(uint64_t a1)
{
  unint64_t result;

  result = sub_2420C0184();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9478(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E949C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E949C()
{
  unint64_t result;

  result = qword_2571A12F8;
  if (!qword_2571A12F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerExperimental, &type metadata for Catalog.Tokenizer.CodeLMTokenizerExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A12F8);
  }
  return result;
}

void sub_2420E94D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E94EC, (uint64_t (*)(void))sub_2420E9528);
}

unint64_t sub_2420E94EC()
{
  unint64_t result;

  result = qword_2571A1300;
  if (!qword_2571A1300)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerExperimental, &type metadata for Catalog.Tokenizer.CodeLMTokenizerExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A1300);
  }
  return result;
}

unint64_t sub_2420E9528()
{
  unint64_t result;

  result = qword_2571A1308;
  if (!qword_2571A1308)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerExperimental, &type metadata for Catalog.Tokenizer.CodeLMTokenizerExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A1308);
  }
  return result;
}

unint64_t sub_2420E9568()
{
  unint64_t result;

  result = qword_2571A1310;
  if (!qword_2571A1310)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerExperimental, &type metadata for Catalog.Tokenizer.CodeLMTokenizerExperimental);
    atomic_store(result, (unint64_t *)&qword_2571A1310);
  }
  return result;
}

unint64_t sub_2420E95A4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFEAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E95C8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E95EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E95EC()
{
  unint64_t result;

  result = qword_2571A1318;
  if (!qword_2571A1318)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV2, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV2);
    atomic_store(result, (unint64_t *)&qword_2571A1318);
  }
  return result;
}

void sub_2420E9628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E963C, (uint64_t (*)(void))sub_2420E9678);
}

unint64_t sub_2420E963C()
{
  unint64_t result;

  result = qword_2571A1320;
  if (!qword_2571A1320)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV2, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV2);
    atomic_store(result, (unint64_t *)&qword_2571A1320);
  }
  return result;
}

unint64_t sub_2420E9678()
{
  unint64_t result;

  result = qword_2571A1328;
  if (!qword_2571A1328)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV2, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV2);
    atomic_store(result, (unint64_t *)&qword_2571A1328);
  }
  return result;
}

unint64_t sub_2420E96B8()
{
  unint64_t result;

  result = qword_2571A1330;
  if (!qword_2571A1330)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV2, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV2);
    atomic_store(result, (unint64_t *)&qword_2571A1330);
  }
  return result;
}

unint64_t sub_2420E96F4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFE6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9718(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E973C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E973C()
{
  unint64_t result;

  result = qword_2571A1338;
  if (!qword_2571A1338)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV3, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV3);
    atomic_store(result, (unint64_t *)&qword_2571A1338);
  }
  return result;
}

void sub_2420E9778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E978C, (uint64_t (*)(void))sub_2420E97C8);
}

unint64_t sub_2420E978C()
{
  unint64_t result;

  result = qword_2571A1340;
  if (!qword_2571A1340)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV3, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV3);
    atomic_store(result, (unint64_t *)&qword_2571A1340);
  }
  return result;
}

unint64_t sub_2420E97C8()
{
  unint64_t result;

  result = qword_2571A1348;
  if (!qword_2571A1348)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV3, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV3);
    atomic_store(result, (unint64_t *)&qword_2571A1348);
  }
  return result;
}

unint64_t sub_2420E9808()
{
  unint64_t result;

  result = qword_2571A1350;
  if (!qword_2571A1350)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV3, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV3);
    atomic_store(result, (unint64_t *)&qword_2571A1350);
  }
  return result;
}

unint64_t sub_2420E9844(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFE2C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9868(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E988C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E988C()
{
  unint64_t result;

  result = qword_2571A1358;
  if (!qword_2571A1358)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV4, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV4);
    atomic_store(result, (unint64_t *)&qword_2571A1358);
  }
  return result;
}

void sub_2420E98C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E98DC, (uint64_t (*)(void))sub_2420E9918);
}

unint64_t sub_2420E98DC()
{
  unint64_t result;

  result = qword_2571A1360;
  if (!qword_2571A1360)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV4, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV4);
    atomic_store(result, (unint64_t *)&qword_2571A1360);
  }
  return result;
}

unint64_t sub_2420E9918()
{
  unint64_t result;

  result = qword_2571A1368;
  if (!qword_2571A1368)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV4, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV4);
    atomic_store(result, (unint64_t *)&qword_2571A1368);
  }
  return result;
}

unint64_t sub_2420E9958()
{
  unint64_t result;

  result = qword_2571A1370;
  if (!qword_2571A1370)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV4, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV4);
    atomic_store(result, (unint64_t *)&qword_2571A1370);
  }
  return result;
}

unint64_t sub_2420E9994(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFEEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E99B8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E99DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E99DC()
{
  unint64_t result;

  result = qword_2571A1378;
  if (!qword_2571A1378)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer, &type metadata for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1378);
  }
  return result;
}

void sub_2420E9A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E9A2C, (uint64_t (*)(void))sub_2420E9A68);
}

unint64_t sub_2420E9A2C()
{
  unint64_t result;

  result = qword_2571A1380;
  if (!qword_2571A1380)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer, &type metadata for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1380);
  }
  return result;
}

unint64_t sub_2420E9A68()
{
  unint64_t result;

  result = qword_2571A1388;
  if (!qword_2571A1388)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer, &type metadata for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1388);
  }
  return result;
}

unint64_t sub_2420E9AA8()
{
  unint64_t result;

  result = qword_2571A1390;
  if (!qword_2571A1390)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer, &type metadata for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1390);
  }
  return result;
}

unint64_t sub_2420E9AE4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFDEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9B08(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E9B2C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9B2C()
{
  unint64_t result;

  result = qword_2571A1398;
  if (!qword_2571A1398)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1398);
  }
  return result;
}

void sub_2420E9B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E9B7C, (uint64_t (*)(void))sub_2420E9BB8);
}

unint64_t sub_2420E9B7C()
{
  unint64_t result;

  result = qword_2571A13A0;
  if (!qword_2571A13A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13A0);
  }
  return result;
}

unint64_t sub_2420E9BB8()
{
  unint64_t result;

  result = qword_2571A13A8;
  if (!qword_2571A13A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13A8);
  }
  return result;
}

unint64_t sub_2420E9BF8()
{
  unint64_t result;

  result = qword_2571A13B0;
  if (!qword_2571A13B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13B0);
  }
  return result;
}

unint64_t sub_2420E9C34(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFCEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9C58(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E9C7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9C7C()
{
  unint64_t result;

  result = qword_2571A13B8;
  if (!qword_2571A13B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.InstructServerTokenizer, &type metadata for Catalog.Tokenizer.InstructServerTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13B8);
  }
  return result;
}

void sub_2420E9CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E9CCC, (uint64_t (*)(void))sub_2420E9D08);
}

unint64_t sub_2420E9CCC()
{
  unint64_t result;

  result = qword_2571A13C0;
  if (!qword_2571A13C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.InstructServerTokenizer, &type metadata for Catalog.Tokenizer.InstructServerTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13C0);
  }
  return result;
}

unint64_t sub_2420E9D08()
{
  unint64_t result;

  result = qword_2571A13C8;
  if (!qword_2571A13C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.InstructServerTokenizer, &type metadata for Catalog.Tokenizer.InstructServerTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13C8);
  }
  return result;
}

unint64_t sub_2420E9D48()
{
  unint64_t result;

  result = qword_2571A13D0;
  if (!qword_2571A13D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.InstructServerTokenizer, &type metadata for Catalog.Tokenizer.InstructServerTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13D0);
  }
  return result;
}

unint64_t sub_2420E9D84(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFDAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9DA8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E9DCC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9DCC()
{
  unint64_t result;

  result = qword_254397768;
  if (!qword_254397768)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.NLRouterTokenizer, &type metadata for Catalog.Tokenizer.NLRouterTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397768);
  }
  return result;
}

void sub_2420E9E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E9E1C, (uint64_t (*)(void))sub_2420E9E58);
}

unint64_t sub_2420E9E1C()
{
  unint64_t result;

  result = qword_254397750;
  if (!qword_254397750)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.NLRouterTokenizer, &type metadata for Catalog.Tokenizer.NLRouterTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397750);
  }
  return result;
}

unint64_t sub_2420E9E58()
{
  unint64_t result;

  result = qword_254397760;
  if (!qword_254397760)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.NLRouterTokenizer, &type metadata for Catalog.Tokenizer.NLRouterTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397760);
  }
  return result;
}

unint64_t sub_2420E9E98()
{
  unint64_t result;

  result = qword_254397758;
  if (!qword_254397758)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.NLRouterTokenizer, &type metadata for Catalog.Tokenizer.NLRouterTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397758);
  }
  return result;
}

unint64_t sub_2420E9ED4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFD2C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9EF8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420E9F1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420E9F1C()
{
  unint64_t result;

  result = qword_2571A13D8;
  if (!qword_2571A13D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer, &type metadata for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13D8);
  }
  return result;
}

void sub_2420E9F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420E9F6C, (uint64_t (*)(void))sub_2420E9FA8);
}

unint64_t sub_2420E9F6C()
{
  unint64_t result;

  result = qword_2571A13E0;
  if (!qword_2571A13E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer, &type metadata for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13E0);
  }
  return result;
}

unint64_t sub_2420E9FA8()
{
  unint64_t result;

  result = qword_2571A13E8;
  if (!qword_2571A13E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer, &type metadata for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13E8);
  }
  return result;
}

unint64_t sub_2420E9FE8()
{
  unint64_t result;

  result = qword_2571A13F0;
  if (!qword_2571A13F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer, &type metadata for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13F0);
  }
  return result;
}

unint64_t sub_2420EA024(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BFCAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420EA048(uint64_t a1)
{
  unint64_t result;

  result = sub_2420EA06C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420EA06C()
{
  unint64_t result;

  result = qword_2571A13F8;
  if (!qword_2571A13F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer, &type metadata for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A13F8);
  }
  return result;
}

void sub_2420EA0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420EA0BC, (uint64_t (*)(void))sub_2420EA0F8);
}

unint64_t sub_2420EA0BC()
{
  unint64_t result;

  result = qword_2571A1400;
  if (!qword_2571A1400)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer, &type metadata for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1400);
  }
  return result;
}

unint64_t sub_2420EA0F8()
{
  unint64_t result;

  result = qword_2571A1408;
  if (!qword_2571A1408)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer, &type metadata for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1408);
  }
  return result;
}

unint64_t sub_2420EA138()
{
  unint64_t result;

  result = qword_2571A1410;
  if (!qword_2571A1410)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer, &type metadata for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_2571A1410);
  }
  return result;
}

void *_s9AnimationVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

void type metadata accessor for Catalog.Diffusion.Adapter.Animation()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.Emoji()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.Illustration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedAnimation()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedEmoji()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedIllustration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedScribble()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedSketch()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.Refiner()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.Scribble()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.Sketch()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter.SkinToneEmoji()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Model.VisualGenerationBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.DisabledUseCaseList.All()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.GenerativeFunctionOverrides.All()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.HandwritingSynthesizer.HandwritingSynthesis()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageFilter.Conditioning()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageFilter.Face2Word()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageFilter.HolisticallyNestedEdgeDetector()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageInpainter.PhotosMagicClean()
{
  sub_242082F08();
}

void *_s27GenerativeEditsMagicCleanUpVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

void type metadata accessor for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageScaler.GenerativePlaygroundsUpscaler()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter()
{
  sub_242082F08();
}

void *_s15AnswerSynthesisVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x108uLL);
}

void type metadata accessor for Catalog.LLM.Adapter.AnswerSynthesis()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.AnswerSynthesisServer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.AutonamingMessages()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.BaseAdapter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.BulletsTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ConciseTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.FactualConsistencyClassifier()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.FriendlyTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.MagicRewrite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.MailReply()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.MessagesReply()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.Planner()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PlannerV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.PlannerV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ProfessionalTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ProofreadingReview()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ResponseGeneration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ResponseGenerationV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ResponseGenerationV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.SafetyGuardrail()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.SearchQueryUnderstandingServer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerBulletsTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerConciseTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerFriendlyTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerMagicRewrite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerMailReplyQA()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerProfessionalTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerProofreadingReview()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerTablesTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerTakeawaysTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.ServerTextSummarizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.Summarization()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.TablesTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter.TakeawaysTransform()
{
  sub_242082F08();
}

uint64_t _s10UIPreviewsVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s10UIPreviewsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 55) = *(_DWORD *)(a2 + 55);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 103) = *(_DWORD *)(a2 + 103);
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  v10 = *(_QWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
  *(_QWORD *)(a1 + 144) = v10;
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v12 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v12;
  v15 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v15;
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
  v14 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v14;
  v17 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v17;
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_BYTE *)(a1 + 257) = *(_BYTE *)(a2 + 257);
  v16 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10UIPreviewsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = a2 + 256;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_BYTE *)(a1 + 257) = *(_BYTE *)(v4 + 1);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s10UIPreviewsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t _s10UIPreviewsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2 + 256;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_BYTE *)(a1 + 257) = *(_BYTE *)(v4 + 1);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10UIPreviewsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 280))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10UIPreviewsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 280) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Catalog.LLM.Adapter.UIPreviews()
{
  sub_242082F08();
}

uint64_t _s15AnswerSynthesisVwxx_0()
{
  sub_2420A25E0();
  sub_2420C0CEC();
  sub_2420EF8DC();
  sub_2420EFAD8();
  sub_2420EFAD0();
  sub_2420EFA1C();
  sub_2420EFD14();
  swift_bridgeObjectRelease();
  sub_242097964();
  swift_bridgeObjectRelease();
  sub_242097B84();
  sub_2420EFD0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2420EFD04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24209773C();
}

void _s15AnswerSynthesisVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_2420C1670(a1, a2);
  v5 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v2 + 24) = v5;
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v4 + 32);
  *(_DWORD *)(v2 + 39) = *(_DWORD *)(v4 + 39);
  v6 = *(_QWORD *)(v4 + 56);
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v4 + 48);
  *(_QWORD *)(v2 + 56) = v6;
  v7 = *(_QWORD *)(v4 + 72);
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v4 + 64);
  *(_QWORD *)(v2 + 72) = v7;
  sub_2420EFCF0(v3, v4);
  v9 = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v2 + 104) = v9;
  v10 = *(_QWORD *)(v8 + 120);
  *(_QWORD *)(v2 + 112) = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v2 + 120) = v10;
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v8 + 128);
  *(_DWORD *)(v2 + 135) = *(_DWORD *)(v8 + 135);
  v11 = *(_QWORD *)(v8 + 152);
  *(_QWORD *)(v2 + 144) = *(_QWORD *)(v8 + 144);
  *(_QWORD *)(v2 + 152) = v11;
  *(_WORD *)(v2 + 160) = *(_WORD *)(v8 + 160);
  v12 = *(_QWORD *)(v8 + 176);
  *(_QWORD *)(v2 + 168) = *(_QWORD *)(v8 + 168);
  *(_QWORD *)(v2 + 176) = v12;
  v13 = *(_QWORD *)(v8 + 192);
  *(_QWORD *)(v2 + 184) = *(_QWORD *)(v8 + 184);
  *(_QWORD *)(v2 + 192) = v13;
  *(_WORD *)(v2 + 200) = *(_WORD *)(v8 + 200);
  v14 = *(_QWORD *)(v8 + 216);
  *(_QWORD *)(v2 + 208) = *(_QWORD *)(v8 + 208);
  *(_QWORD *)(v2 + 216) = v14;
  v16 = *(_QWORD *)(v8 + 232);
  *(_QWORD *)(v2 + 224) = *(_QWORD *)(v8 + 224);
  *(_QWORD *)(v2 + 232) = v16;
  *(_BYTE *)(v2 + 240) = *(_BYTE *)(v8 + 240);
  *(_BYTE *)(v2 + 241) = *(_BYTE *)(v8 + 241);
  v15 = *(_QWORD *)(v8 + 256);
  *(_QWORD *)(v2 + 248) = *(_QWORD *)(v8 + 248);
  *(_QWORD *)(v2 + 256) = v15;
  swift_bridgeObjectRetain();
  sub_242079F18();
  sub_2420EFAC8();
  sub_242097198();
  sub_2420C0B64();
  sub_2420EFC58();
  sub_242097744();
  sub_2420C13B0();
  sub_24207F5FC();
  sub_2420C180C();
  sub_242079ED8();
  sub_2420977E0();
  sub_2420EFAE0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2420EFBFC();
}

void _s15AnswerSynthesisVwca_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_2420EF444(a1, a2);
  sub_24207F78C();
  sub_2420EF8CC();
  sub_24207F78C();
  sub_2420EF67C();
  sub_24207F78C();
  sub_2420EF620();
  sub_24207F78C();
  sub_2420EF8F4();
  sub_24207F78C();
  sub_2420EF68C();
  sub_24207F78C();
  sub_2420EF504();
  v2[12] = v3[12];
  sub_2420EF8A0();
  sub_24207F78C();
  v2[14] = v3[14];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  sub_2420EFAA8();
  sub_24207F78C();
  sub_2420EF87C();
  sub_2420EFB1C();
  sub_24207F78C();
  sub_2420EFA98();
  sub_24207F78C();
  sub_2420EFC90();
  sub_2420EFBDC();
  sub_24207F78C();
  sub_2420EFBCC();
  sub_24207F78C();
  v2[23] = v3[23];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  sub_2420EFBAC();
  sub_24207F78C();
  sub_2420EFC7C();
  v2[26] = v3[26];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  v2[27] = v3[27];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  v2[28] = v3[28];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  v2[29] = v3[29];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  sub_2420EFC60();
  v2[31] = v3[31];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  v2[32] = v3[32];
  swift_bridgeObjectRetain();
  sub_242097830();
  sub_242097A00();
}

void _s15AnswerSynthesisVwta_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420A200C(a1, a2);
  v2[2] = v3[2];
  swift_bridgeObjectRelease();
  sub_2420EFA80();
  sub_2420EF904();
  v4 = v3[7];
  v2[6] = v3[6];
  v2[7] = v4;
  swift_bridgeObjectRelease();
  v2[8] = v3[8];
  swift_bridgeObjectRelease();
  sub_2420EFA58();
  sub_2420EF504();
  v5 = v3[13];
  v2[12] = v3[12];
  v2[13] = v5;
  swift_bridgeObjectRelease();
  v2[14] = v3[14];
  swift_bridgeObjectRelease();
  v2[15] = v3[15];
  swift_bridgeObjectRelease();
  sub_2420EF87C();
  v2[18] = v3[18];
  swift_bridgeObjectRelease();
  v2[19] = v3[19];
  swift_bridgeObjectRelease();
  sub_2420EFC90();
  v2[21] = v3[21];
  swift_bridgeObjectRelease();
  v2[22] = v3[22];
  swift_bridgeObjectRelease();
  v2[23] = v3[23];
  swift_bridgeObjectRelease();
  v2[24] = v3[24];
  swift_bridgeObjectRelease();
  sub_2420EFC7C();
  v2[26] = v3[26];
  swift_bridgeObjectRelease();
  v2[27] = v3[27];
  swift_bridgeObjectRelease();
  v2[28] = v3[28];
  swift_bridgeObjectRelease();
  v2[29] = v3[29];
  swift_bridgeObjectRelease();
  sub_2420EFC60();
  v2[31] = v3[31];
  swift_bridgeObjectRelease();
  v2[32] = v3[32];
  swift_bridgeObjectRelease();
  sub_24207F428();
}

uint64_t _s15AnswerSynthesisVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 264))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2420977CC(v2);
}

uint64_t sub_2420EB278(uint64_t result, int a2, int a3)
{
  __int128 v3;
  uint64_t v4;
  int v5;

  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    result = sub_2420EF94C(result, (__n128)0);
    *(_OWORD *)(result + 248) = v3;
    *(_QWORD *)result = v4;
    if (v5 < 0)
      *(_BYTE *)(result + 264) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 264) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for Catalog.LLM.Adapter.UrgencyClassification()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.AnswerSynthesis()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.AnswerSynthesisServer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.AutonamingMessages()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.BulletsTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLM()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMLargeV1()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMLargeV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMLargeV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMSmallV1()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMSmallV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMSmallV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMV1ANE3B()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ConciseTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.FactualConsistencyClassifier()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.FriendlyTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.MagicRewrite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.MailReply()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.MessagesReply()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.Planner()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PlannerV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.PlannerV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ProfessionalTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ProofreadingReview()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ResponseGeneration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ResponseGenerationV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ResponseGenerationV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.SafetyGuardrail()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerBulletsTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerConciseTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerFriendlyTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerMagicRewrite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerMailReplyQA()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerProfessionalTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerProofreadingReview()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerTablesTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerTakeawaysTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerTextSummarizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.Summarization()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.TablesTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.TakeawaysTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.UIPreviews()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel.UrgencyClassification()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.AFMTextInstruct3BBase()
{
  sub_242082F08();
}

void *_s6CodeLMVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD0uLL);
}

void type metadata accessor for Catalog.LLM.Model.CodeLM()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMExperimental()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMLargeV1()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMLargeV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMLargeV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMSafetyGuardrail()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMSmallV1()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMSmallV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMSmallV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMV1ANE3B()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.CodeLMV4()
{
  sub_242082F08();
}

uint64_t _s6CodeLMVwxx_0()
{
  sub_2420A25E0();
  sub_2420EF8DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2420EFA1C();
  sub_2420EFC30();
  sub_2420EFE70();
  sub_2420EFD14();
  sub_24209779C();
  sub_242097718();
  sub_242097B84();
  sub_2420C11D8();
  sub_2420EFD0C();
  swift_bridgeObjectRelease();
  sub_2420EFD04();
  return sub_24209773C();
}

uint64_t _s6CodeLMVwcp_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  sub_2420A1A28();
  v3 = sub_2420C1670(v1, v2);
  v5 = v4[3];
  *(_QWORD *)(v0 + 16) = v4[2];
  *(_QWORD *)(v0 + 24) = v5;
  v6 = v4[5];
  *(_QWORD *)(v0 + 32) = v4[4];
  *(_QWORD *)(v0 + 40) = v6;
  sub_2420EFE5C(v3, (uint64_t)v4);
  v8 = *(_QWORD *)(v7 + 72);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v0 + 72) = v8;
  v9 = *(_QWORD *)(v7 + 88);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(v0 + 88) = v9;
  v10 = *(_QWORD *)(v7 + 104);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v7 + 96);
  *(_QWORD *)(v0 + 104) = v10;
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v7 + 112);
  *(_DWORD *)(v0 + 119) = *(_DWORD *)(v7 + 119);
  v11 = *(_QWORD *)(v7 + 136);
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v7 + 128);
  *(_QWORD *)(v0 + 136) = v11;
  *(_BYTE *)(v0 + 144) = *(_BYTE *)(v7 + 144);
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v7 + 145);
  v12 = *(_QWORD *)(v7 + 160);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v7 + 152);
  *(_QWORD *)(v0 + 160) = v12;
  v14 = *(_QWORD *)(v7 + 176);
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v7 + 168);
  *(_QWORD *)(v0 + 176) = v14;
  *(_WORD *)(v0 + 184) = *(_WORD *)(v7 + 184);
  v15 = *(_QWORD *)(v7 + 200);
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v7 + 192);
  *(_QWORD *)(v0 + 200) = v15;
  swift_bridgeObjectRetain();
  sub_2420977E0();
  sub_242079F18();
  sub_2420C0B64();
  sub_2420C13B0();
  sub_2420C180C();
  sub_242097198();
  sub_2420EFC58();
  sub_24207F5FC();
  sub_242079ED8();
  sub_242097744();
  sub_2420EFD9C();
  sub_2420EFAC8();
  swift_bridgeObjectRetain();
  sub_2420EFAE0();
  swift_bridgeObjectRetain();
  return v0;
}

void _s6CodeLMVwca_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_2420EF444(a1, a2);
  sub_24207F78C();
  v2[2] = v3[2];
  sub_2420EF67C();
  sub_24207F78C();
  sub_2420EFB8C();
  sub_24207F78C();
  sub_2420EFB7C();
  sub_24207F78C();
  sub_2420EF528();
  v2[8] = v3[8];
  sub_2420EF68C();
  sub_24207F78C();
  v2[10] = v3[10];
  sub_2420EFB4C();
  sub_24207F78C();
  sub_2420EFB3C();
  sub_24207F78C();
  sub_2420EF8A0();
  sub_24207F78C();
  sub_2420EF858();
  sub_2420EFBEC();
  sub_24207F78C();
  sub_2420EFB2C();
  sub_24207F78C();
  sub_2420EFE28();
  sub_2420EFA98();
  sub_24207F78C();
  sub_2420EFB0C();
  sub_24207F78C();
  sub_2420EFBDC();
  sub_24207F78C();
  sub_2420EFBCC();
  sub_24207F78C();
  sub_2420EFE14();
  sub_2420EFBAC();
  sub_24207F78C();
  v2[25] = v3[25];
  swift_bridgeObjectRetain();
  sub_242097830();
  sub_242097A00();
}

void _s6CodeLMVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420A200C(a1, a2);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  sub_2420EF8DC();
  sub_2420EFC38();
  sub_2420EFBBC();
  sub_2420EF528();
  v4 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v2 + 72) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v3 + 80);
  sub_2420EFC30();
  sub_2420EFC20();
  *(_QWORD *)(v2 + 104) = *(_QWORD *)(v3 + 104);
  swift_bridgeObjectRelease();
  sub_2420EF858();
  sub_24209779C();
  *(_OWORD *)(v2 + 128) = *(_OWORD *)(v3 + 128);
  swift_bridgeObjectRelease();
  sub_2420EFE28();
  sub_242097B84();
  *(_OWORD *)(v2 + 152) = *(_OWORD *)(v3 + 152);
  swift_bridgeObjectRelease();
  sub_2420EFD0C();
  *(_OWORD *)(v2 + 168) = *(_OWORD *)(v3 + 168);
  swift_bridgeObjectRelease();
  sub_2420EFE14();
  sub_2420EFD04();
  *(_OWORD *)(v2 + 192) = *(_OWORD *)(v3 + 192);
  swift_bridgeObjectRelease();
  sub_24207F428();
}

uint64_t _s6CodeLMVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 208))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2420977CC(v2);
}

uint64_t sub_2420EB974(uint64_t result, int a2, int a3)
{
  uint64_t v3;
  int v4;

  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    result = sub_2420EF94C(result, (__n128)0);
    *(_QWORD *)result = v3;
    if (v4 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for Catalog.LLM.Model.CodeSafetyGuardrail()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.InstructServerBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.NLRouterBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.PhotosMemoriesCreationBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.SafetyGuardrailLite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model.SummarizationTextSummarizerBase()
{
  sub_242082F08();
}

uint64_t _s21AFMTextInstruct3BBaseVwxx_0()
{
  sub_2420A25E0();
  sub_2420C0CEC();
  sub_2420EF8DC();
  sub_2420EFAD8();
  sub_2420EFAD0();
  sub_2420EFA1C();
  sub_2420EFE70();
  sub_2420EFD14();
  sub_242097964();
  sub_24209779C();
  sub_242097718();
  swift_bridgeObjectRelease();
  sub_2420C11D8();
  return sub_24209773C();
}

void _s21AFMTextInstruct3BBaseVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2420C0C7C();
  v3 = sub_2420EF830(v1, v2);
  v5 = v4[7];
  *(_QWORD *)(v0 + 48) = v4[6];
  *(_QWORD *)(v0 + 56) = v5;
  v6 = v4[9];
  *(_QWORD *)(v0 + 64) = v4[8];
  *(_QWORD *)(v0 + 72) = v6;
  sub_2420EFCF0(v3, (uint64_t)v4);
  v8 = *(_QWORD *)(v7 + 104);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v7 + 96);
  *(_QWORD *)(v0 + 104) = v8;
  *(_WORD *)(v0 + 112) = *(_WORD *)(v7 + 112);
  v9 = *(_QWORD *)(v7 + 128);
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v7 + 120);
  *(_QWORD *)(v0 + 128) = v9;
  v10 = *(_QWORD *)(v7 + 144);
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v7 + 136);
  *(_QWORD *)(v0 + 144) = v10;
  *(_WORD *)(v0 + 152) = *(_WORD *)(v7 + 152);
  v11 = *(_QWORD *)(v7 + 168);
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v7 + 160);
  *(_QWORD *)(v0 + 168) = v11;
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420C0B64();
  sub_2420C13B0();
  sub_2420C180C();
  sub_2420EFD9C();
  sub_2420EFAC8();
  sub_2420EFC58();
  sub_2420EFAE0();
  sub_2420C10AC();
}

void _s21AFMTextInstruct3BBaseVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_2420EF444(a1, a2);
  sub_24207F78C();
  sub_2420EF8CC();
  sub_24207F78C();
  sub_2420EF67C();
  sub_24207F78C();
  sub_2420EF620();
  sub_24207F78C();
  sub_2420EF8F4();
  sub_24207F78C();
  sub_2420EF68C();
  sub_24207F78C();
  sub_2420EF504();
  sub_2420EFB3C();
  sub_24207F78C();
  sub_2420EF8A0();
  sub_24207F78C();
  sub_2420EFD70();
  sub_2420EFAA8();
  sub_24207F78C();
  sub_2420EFBEC();
  sub_24207F78C();
  sub_2420EFB2C();
  sub_24207F78C();
  sub_2420EFB1C();
  sub_24207F78C();
  sub_2420EFD5C();
  sub_2420EFB0C();
  sub_24207F78C();
  *(_QWORD *)(v2 + 168) = *(_QWORD *)(v3 + 168);
  swift_bridgeObjectRetain();
  sub_242097830();
  sub_242097A00();
}

void _s21AFMTextInstruct3BBaseVwta_0(uint64_t a1, uint64_t a2)
{
  sub_2420EFAB8((_QWORD *)a1, (_QWORD *)a2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  sub_2420EFA80();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_2420EFAD8();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  sub_2420EFA58();
  sub_2420EF504();
  sub_2420EFE70();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  sub_2420EFD70();
  sub_242097964();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  sub_242097718();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  sub_2420EFD5C();
  sub_2420C11D8();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  sub_24207F428();
}

void type metadata accessor for Catalog.LLM.Model.VisualGenerationQueryHandlingLite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.InstructServerBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.NLRouterBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.OpenEndedTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.Planner()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PlannerV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PlannerV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ResponseGeneration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ResponseGenerationV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ResponseGenerationV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerBulletsTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerConciseTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerFriendlyTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerMagicRewrite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerMailReplyQA()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerProfessionalTone()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerProofreadingReview()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerTablesTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerTextSummarizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ModelConfigurationReplacement.All()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Sanitizer.TextModerationLM()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.AFMTextInstructEnglish49k()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMLargeV1Tokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMLargeV2Tokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMLargeV3Tokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMSmallV1Tokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMSmallV2Tokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMSmallV3Tokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizerExperimental()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizerV2()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizerV3()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizerV4()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer()
{
  sub_242082F08();
}

uint64_t _s27GenerativeEditsMagicCleanUpVwxx_0()
{
  sub_2420A25E0();
  sub_2420EF8DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2420EFAD0();
  sub_2420EFA1C();
  sub_2420EFC30();
  return sub_24209773C();
}

void _s27GenerativeEditsMagicCleanUpVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_2420C1670(a1, a2);
  v5 = v4[3];
  *(_QWORD *)(v2 + 16) = v4[2];
  *(_QWORD *)(v2 + 24) = v5;
  v6 = v4[5];
  *(_QWORD *)(v2 + 32) = v4[4];
  *(_QWORD *)(v2 + 40) = v6;
  sub_2420EFE5C(v3, (uint64_t)v4);
  v8 = *(_QWORD *)(v7 + 72);
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v2 + 72) = v8;
  *(_WORD *)(v2 + 80) = *(_WORD *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 96);
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(v7 + 88);
  *(_QWORD *)(v2 + 96) = v9;
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420C0B64();
  sub_2420973B4();
}

void _s27GenerativeEditsMagicCleanUpVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_2420EF444(a1, a2);
  sub_24207F78C();
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  sub_2420EF67C();
  sub_24207F78C();
  sub_2420EFB8C();
  sub_24207F78C();
  sub_2420EFB7C();
  sub_24207F78C();
  sub_2420EF528();
  sub_2420EF8F4();
  sub_24207F78C();
  sub_2420EF68C();
  sub_24207F78C();
  sub_2420EFCDC();
  sub_2420EFB4C();
  sub_24207F78C();
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(v3 + 96);
  swift_bridgeObjectRetain();
  sub_242097830();
  sub_242097A00();
}

void _s27GenerativeEditsMagicCleanUpVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_2420A200C(a1, a2);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  sub_2420EF8DC();
  sub_2420EFC38();
  sub_2420EFBBC();
  sub_2420EF528();
  sub_2420EFAD0();
  *(_OWORD *)(v2 + 64) = *(_OWORD *)(v3 + 64);
  swift_bridgeObjectRelease();
  sub_2420EFCDC();
  sub_2420EFC30();
  sub_2420EFC20();
  sub_24207F428();
}

uint64_t _s27GenerativeEditsMagicCleanUpVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2420977CC(v2);
}

uint64_t sub_2420EC2F0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.InstructServerTokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.NLRouterTokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer()
{
  sub_242082F08();
}

uint64_t _s9AnimationVwxx_0()
{
  sub_2420A25E0();
  sub_2420C0CEC();
  sub_2420EF8DC();
  swift_bridgeObjectRelease();
  sub_2420EFAD8();
  sub_2420EFA1C();
  return sub_24209773C();
}

void _s9AnimationVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF830(a1, a2);
  v4 = *(_QWORD *)(v3 + 56);
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v2 + 56) = v4;
  *(_BYTE *)(v2 + 64) = *(_BYTE *)(v3 + 64);
  *(_BYTE *)(v2 + 65) = *(_BYTE *)(v3 + 65);
  v5 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v2 + 72) = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v2 + 80) = v5;
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420973B4();
}

void _s9AnimationVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_2420EF444(a1, a2);
  sub_24207F78C();
  sub_2420EF8CC();
  sub_24207F78C();
  sub_2420EF67C();
  sub_24207F78C();
  sub_2420EF904();
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 + 48);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 + 56);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_BYTE *)(v2 + 64) = *(_BYTE *)(v3 + 64);
  *(_BYTE *)(v2 + 65) = *(_BYTE *)(v3 + 65);
  sub_2420EF68C();
  sub_24207F78C();
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v3 + 80);
  swift_bridgeObjectRetain();
  sub_242097830();
  sub_242097A00();
}

void _s9AnimationVwta_0(uint64_t a1, uint64_t a2)
{
  sub_2420EFAB8((_QWORD *)a1, (_QWORD *)a2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  sub_2420EFAF8();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  sub_2420EFB5C();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  sub_24207F428();
}

uint64_t _s9AnimationVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2420977CC(v2);
}

uint64_t sub_2420EC56C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer()
{
  sub_242082F08();
}

uint64_t sub_2420EC6D4()
{
  sub_242082FE4();
  sub_2420C1784();
  sub_2420EFAF8();
  sub_2420EFD38();
  sub_2420C193C();
  swift_bridgeObjectRelease();
  sub_2420EFCBC();
  sub_2420EFD54();
  sub_2420EFD4C();
  sub_2420EFCA4();
  sub_2420EFE04();
  sub_2420EFA90();
  swift_bridgeObjectRelease();
  sub_2420EFC74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2420EC774()
{
  sub_242082FE4();
  sub_2420EFDA4();
  sub_2420C1784();
  sub_2420EFB5C();
  sub_2420EFD30();
  sub_2420C193C();
  sub_2420EFCAC();
  swift_bridgeObjectRelease();
  sub_2420EFD54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2420EFA90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2420EFC74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2420EC924()
{
  sub_242082FE4();
  sub_2420C1784();
  sub_2420EFAF8();
  sub_2420EFD38();
  sub_2420C193C();
  sub_2420EFCBC();
  sub_2420EFCB4();
  sub_2420EFCAC();
  sub_2420EFD4C();
  sub_2420EFCA4();
  swift_bridgeObjectRelease();
  sub_2420EFE04();
  sub_2420EFA90();
  swift_bridgeObjectRelease();
  sub_2420EFC74();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2420EC9A8()
{
  sub_242082FE4();
  sub_2420EFDA4();
  sub_2420C1784();
  sub_2420EFB5C();
  sub_2420EFD30();
  sub_2420C193C();
  sub_2420EFCB4();
  sub_2420EFCAC();
  sub_2420EFD54();
  sub_2420EFD4C();
  sub_2420EFCA4();
  swift_bridgeObjectRelease();
  sub_2420EFE04();
  sub_2420EFA90();
  return swift_deallocObject();
}

uint64_t sub_2420ECB90()
{
  sub_242082FE4();
  sub_2420C1784();
  sub_2420EFAF8();
  sub_2420EFD38();
  sub_2420EFD30();
  sub_2420C193C();
  sub_2420EFCBC();
  sub_2420EFCB4();
  return swift_deallocObject();
}

uint64_t sub_2420ECBDC()
{
  sub_242082FE4();
  sub_2420EFDA4();
  sub_2420C1784();
  swift_bridgeObjectRelease();
  sub_2420EFB5C();
  sub_2420C193C();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2420EF34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = (a2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 48) = 2;
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 2;
  return sub_2420D1D58(a1);
}

uint64_t sub_2420EF36C(uint64_t a1)
{
  *(_BYTE *)(a1 + 48) = 2;
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 2;
  return sub_2420D1D58(a1);
}

uint64_t sub_2420EF380()
{
  return swift_allocObject();
}

uint64_t sub_2420EF38C()
{
  return swift_initStackObject();
}

void sub_2420EF394(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 100000;
  *(_WORD *)(v1 + 40) = 256;
  *(_BYTE *)(v1 + 42) = 0;
  Catalog.LLM.Model.AFMTextInstruct3BBase.init()();
}

void sub_2420EF3B4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 72) = v1;
  *(_QWORD *)(a1 + 80) = v2;
}

uint64_t sub_2420EF3BC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  *(_QWORD *)(v1 + 32) = 150000;
  *(_WORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 42) = 0;
  return result;
}

uint64_t sub_2420EF3D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_QWORD *)(v2 + 32) = a2;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  return result;
}

void sub_2420EF3E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 39) = 0;
  Catalog.LLM.Model.InstructServerBase.init()();
}

void sub_2420EF3F4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  *(_QWORD *)(v1 + 56) = a1;
  *(_WORD *)(v1 + 64) = 256;
}

uint64_t sub_2420EF404(uint64_t a1)
{
  *(_BYTE *)(a1 + 48) = 2;
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 2;
  *(_QWORD *)(a1 + 72) = 2019650145;
  *(_QWORD *)(a1 + 80) = 0xE400000000000000;
  *(_BYTE *)(a1 + 88) = 2;
  *(_QWORD *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 104) = 2;
  return sub_2420D1D58(a1);
}

void sub_2420EF434(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_2420CB120(0xD00000000000002DLL, v2 | 0x8000000000000000, a1, a2);
}

uint64_t sub_2420EF444(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

void sub_2420EF464(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_2420CB120(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3, a4);
}

void sub_2420EF46C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = v1;
  *(_WORD *)(v2 + 240) = 0;
}

uint64_t sub_2420EF478(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  *(_QWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 39) = 0;
  return result;
}

void sub_2420EF484(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  *(_QWORD *)(v1 + 56) = a1;
  *(_WORD *)(v1 + 64) = 0;
}

void sub_2420EF490(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  *(_QWORD *)(v1 + 56) = a1;
  *(_WORD *)(v1 + 64) = 256;
}

uint64_t sub_2420EF4A0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  *(_QWORD *)(v1 + 48) = 1590000;
  *(_WORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 58) = 0;
  return result;
}

uint64_t sub_2420EF4BC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  *(_QWORD *)(v1 + 48) = 10000;
  *(_WORD *)(v1 + 56) = 1;
  *(_BYTE *)(v1 + 58) = 0;
  return result;
}

void sub_2420EF4D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 39) = 0;
  Catalog.LLM.Model.PhotosMemoriesCreationBase.init()((_QWORD *)(v1 + 48));
}

void sub_2420EF504()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 80);
  *(_BYTE *)(v0 + 88) = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(v0 + 89) = *(_BYTE *)(v1 + 89);
  *(_BYTE *)(v0 + 90) = *(_BYTE *)(v1 + 90);
}

void sub_2420EF528()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(v0 + 56) = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(v0 + 57) = *(_BYTE *)(v1 + 57);
  *(_BYTE *)(v0 + 58) = *(_BYTE *)(v1 + 58);
}

uint64_t sub_2420EF54C@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_2420CA214(v4 | 0x8000000000000000, a1, a2, a3, a4);
}

__n128 sub_2420EF554()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 72);
}

void sub_2420EF5AC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  *(_QWORD *)(v1 + 72) = a1;
  *(_WORD *)(v1 + 80) = 256;
}

void sub_2420EF5F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = v1;
  *(_WORD *)(v2 + 240) = v3;
}

void sub_2420EF600(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = (a1 - 32) | 0x8000000000000000;
}

uint64_t sub_2420EF620()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(v0 + 40) = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(v0 + 41) = *(_BYTE *)(v1 + 41);
  *(_BYTE *)(v0 + 42) = *(_BYTE *)(v1 + 42);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

void sub_2420EF658(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = a1;
  v2[1] = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_2420EF67C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EF68C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EF69C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  *(_QWORD *)(v1 + 32) = 240000;
  *(_WORD *)(v1 + 40) = 256;
  *(_BYTE *)(v1 + 42) = 0;
  return result;
}

void sub_2420EF6F0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = (v1 - 32) | 0x8000000000000000;
  strcpy((char *)(v2 + 16), "mc.UIPreviews");
  *(_WORD *)(v2 + 30) = -4864;
}

void sub_2420EF730(uint64_t a1, uint64_t a2)
{
  sub_2420AD3F0(a1, a2);
}

void sub_2420EF74C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
  *(_QWORD *)(v1 + 176) = a1;
  *(_WORD *)(v1 + 184) = 256;
}

uint64_t sub_2420EF75C()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12ModelCatalog0B0O3LLMO7AdapterO04BaseD0V17executionContextsShyAA16ExecutionContextVGvg_0()
{
  return swift_bridgeObjectRetain();
}

void sub_2420EF780(uint64_t a1, uint64_t a2)
{
  sub_2420AD3F0(a1, a2);
}

void sub_2420EF798(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_2420C9180(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3, a4);
}

uint64_t _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V17executionContextsShyAA16ExecutionContextVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V18inferenceProvidersShyAA17InferenceProviderVGvg_0()
{
  return swift_bridgeObjectRetain();
}

void sub_2420EF7B0(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = a1;
  v2[1] = (v1 - 32) | 0x8000000000000000;
  v2[2] = 0x4C65646F432E636DLL;
  v2[3] = 0xE90000000000004DLL;
}

uint64_t sub_2420EF818(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  *(_QWORD *)(v1 + 48) = 150000;
  *(_WORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 58) = 0;
  return result;
}

uint64_t sub_2420EF830(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = result;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
  return result;
}

void sub_2420EF858()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v1 + 112);
  *(_BYTE *)(v0 + 120) = *(_BYTE *)(v1 + 120);
  *(_BYTE *)(v0 + 121) = *(_BYTE *)(v1 + 121);
  *(_BYTE *)(v0 + 122) = *(_BYTE *)(v1 + 122);
}

void sub_2420EF87C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v1 + 128);
  *(_BYTE *)(v0 + 136) = *(_BYTE *)(v1 + 136);
  *(_BYTE *)(v0 + 137) = *(_BYTE *)(v1 + 137);
  *(_BYTE *)(v0 + 138) = *(_BYTE *)(v1 + 138);
}

uint64_t sub_2420EF8A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EF8CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EF8DC()
{
  return swift_bridgeObjectRelease();
}

void sub_2420EF8E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 39) = 0;
  Catalog.Tokenizer.InstructServerTokenizer.init()();
}

uint64_t sub_2420EF8F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

void sub_2420EF904()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(v0 + 40) = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(v0 + 41) = *(_BYTE *)(v1 + 41);
  *(_BYTE *)(v0 + 42) = *(_BYTE *)(v1 + 42);
}

void *sub_2420EF928(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0xB0uLL);
}

void sub_2420EF934()
{
  sub_2420BA150();
}

uint64_t sub_2420EF940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *);

  return v9(&a9);
}

uint64_t sub_2420EF94C(uint64_t result, __n128 a2)
{
  *(__n128 *)(result + 184) = a2;
  *(__n128 *)(result + 168) = a2;
  *(__n128 *)(result + 152) = a2;
  *(__n128 *)(result + 136) = a2;
  *(__n128 *)(result + 120) = a2;
  *(__n128 *)(result + 104) = a2;
  *(__n128 *)(result + 88) = a2;
  *(__n128 *)(result + 72) = a2;
  *(__n128 *)(result + 56) = a2;
  *(__n128 *)(result + 40) = a2;
  *(__n128 *)(result + 24) = a2;
  *(__n128 *)(result + 8) = a2;
  return result;
}

uint64_t sub_2420EF9A0()
{
  return swift_initStackObject();
}

void sub_2420EF9A8()
{
  uint64_t v0;

  *(_WORD *)(v0 + 40) = 1;
  *(_BYTE *)(v0 + 42) = 0;
}

uint64_t _s12ModelCatalog0B0O3LLMO7AdapterO04BaseD0V4tagsSayAA3TagOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFA1C()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V13preconditionsSayAA12PreconditionVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s12ModelCatalog0B0O3LLMO0A0O13CodeLMV1ANE3BV20dependentResourceIDsSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_2420D20F0(a3);
}

uint64_t sub_2420EFA48()
{
  return sub_242132D8C();
}

uint64_t sub_2420EFA50()
{
  return sub_242132D8C();
}

uint64_t sub_2420EFA58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 72);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFA68@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_QWORD *)(v2 + 48) = a2;
  *(_WORD *)(v2 + 56) = 256;
  *(_BYTE *)(v2 + 58) = 0;
  return result;
}

uint64_t sub_2420EFA80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFA90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFA98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v1 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFAA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFAB8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFAC8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFAD0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFAD8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFAE0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFAF8()
{
  return swift_bridgeObjectRelease();
}

void sub_2420EFB00(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  *(_QWORD *)(v1 + 136) = a1;
  *(_QWORD *)(v1 + 144) = a1;
  *(_WORD *)(v1 + 152) = v2;
}

uint64_t sub_2420EFB0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v1 + 160);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFB1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFB2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFB3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFB4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFB5C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFB7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFB8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFB9C()
{
  return sub_2421327D4();
}

uint64_t sub_2420EFBAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v1 + 192);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFBBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFBCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v1 + 176);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFBDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v1 + 168);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFBEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v1 + 128);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFC18()
{
  return sub_242132D98();
}

uint64_t sub_2420EFC20()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v1 + 88);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFC30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFC38()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v1 + 24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFC48()
{
  return sub_242132D8C();
}

uint64_t sub_2420EFC50()
{
  return sub_242132D80();
}

uint64_t sub_2420EFC58()
{
  return swift_bridgeObjectRetain();
}

void sub_2420EFC60()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 240) = *(_BYTE *)(v1 + 240);
  *(_BYTE *)(v0 + 241) = *(_BYTE *)(v1 + 241);
}

uint64_t sub_2420EFC74()
{
  return swift_bridgeObjectRelease();
}

void sub_2420EFC7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 200) = *(_BYTE *)(v1 + 200);
  *(_BYTE *)(v0 + 201) = *(_BYTE *)(v1 + 201);
}

void sub_2420EFC90()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 160) = *(_BYTE *)(v1 + 160);
  *(_BYTE *)(v0 + 161) = *(_BYTE *)(v1 + 161);
}

uint64_t sub_2420EFCA4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFCAC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFCB4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFCBC()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_2420EFCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_2420AD3DC(a12, a11);
}

void sub_2420EFCCC()
{
  sub_2420AD224();
}

void sub_2420EFCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _QWORD *a17, _QWORD *a18)
{
  sub_2420AD16C(a18, a17);
}

void sub_2420EFCDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 80);
  *(_BYTE *)(v0 + 81) = *(_BYTE *)(v1 + 81);
}

void sub_2420EFCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(v2 + 87) = *(_DWORD *)(a2 + 87);
}

uint64_t sub_2420EFD04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFD0C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFD14()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFD1C(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_2420EFD30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFD38()
{
  return swift_bridgeObjectRelease();
}

void sub_2420EFD40(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  *(_QWORD *)(v1 + 144) = a1;
  *(_WORD *)(v1 + 152) = 0;
}

uint64_t sub_2420EFD4C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFD54()
{
  return swift_bridgeObjectRelease();
}

void sub_2420EFD5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 152) = *(_BYTE *)(v1 + 152);
  *(_BYTE *)(v0 + 153) = *(_BYTE *)(v1 + 153);
}

void sub_2420EFD70()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 112) = *(_BYTE *)(v1 + 112);
  *(_BYTE *)(v0 + 113) = *(_BYTE *)(v1 + 113);
}

void sub_2420EFD84(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 88) = v1;
  *(_QWORD *)(a1 + 96) = v2;
}

uint64_t sub_2420EFD8C()
{
  return sub_242132D8C();
}

uint64_t sub_2420EFD94()
{
  return sub_242132D8C();
}

uint64_t sub_2420EFD9C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420EFDA4()
{
  return swift_bridgeObjectRelease();
}

void sub_2420EFDAC()
{
  sub_2420B9FB8();
}

void sub_2420EFDB8()
{
  uint64_t v0;
  uint64_t v1;

  sub_2420BA1EC(v0, v1);
}

void sub_2420EFDC4()
{
  sub_2420B9EC4();
}

uint64_t sub_2420EFDD0()
{
  uint64_t v0;

  return v0;
}

void sub_2420EFDDC()
{
  sub_2420B9EC4();
}

void sub_2420EFDE8()
{
  sub_2420B9FB8();
}

BOOL sub_2420EFDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return sub_2420AD3DC(a13, a12);
}

void sub_2420EFDFC()
{
  sub_2420AD224();
}

uint64_t sub_2420EFE04()
{
  return swift_bridgeObjectRelease();
}

void sub_2420EFE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _QWORD *a18, _QWORD *a19)
{
  sub_2420AD16C(a19, a18);
}

void sub_2420EFE14()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 184) = *(_BYTE *)(v1 + 184);
  *(_BYTE *)(v0 + 185) = *(_BYTE *)(v1 + 185);
}

void sub_2420EFE28()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 144) = *(_BYTE *)(v1 + 144);
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v1 + 145);
}

uint64_t sub_2420EFE3C@<X0>(uint64_t result@<X0>, unsigned __int16 a2@<W8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_QWORD *)(v2 + 32) = a2 | 0x160000u;
  *(_WORD *)(v2 + 40) = 256;
  return result;
}

void sub_2420EFE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(v2 + 55) = *(_DWORD *)(a2 + 55);
}

uint64_t sub_2420EFE70()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420EFE78()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2420C25AC(v1, v0);
}

uint64_t RequestResourcesKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2420EFFD8 + 4 * a6[*v0]))(0x6C5F6D6C65646F63, 0xEF31765F65677261);
}

uint64_t sub_2420F0000()
{
  return 0x735F6D6C65646F63;
}

unint64_t sub_2420F0060()
{
  return 0xD000000000000016;
}

unint64_t sub_2420F0098()
{
  return 0xD000000000000014;
}

void static Catalog.Resource.Sanitizer.TextModerationLM()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242105480();
  v2 = v1;
  sub_242105D48();
  sub_242105440();
  sub_242105AF4();
  sub_2421054D8();
  sub_2421054CC();
  *(_QWORD *)(v2 + 24) = &type metadata for SanitizerBase;
  *(_QWORD *)(v2 + 32) = sub_24209EF10();
  v3 = sub_2420970C8();
  sub_242105D34(v3);
  SanitizerBase.init(configuration:)();
  if (v0)
  {
    sub_2420967B0(v2);
    sub_242105C0C();
    sub_242106028();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

#error "2420F027C: call analysis failed (funcsize=63)"

#error "2420F03A8: call analysis failed (funcsize=62)"

#error "2420F04C4: call analysis failed (funcsize=57)"

#error "2420F05E4: call analysis failed (funcsize=60)"

#error "2420F06DC: call analysis failed (funcsize=52)"

#error "2420F07CC: call analysis failed (funcsize=50)"

#error "2420F08C0: call analysis failed (funcsize=50)"

#error "2420F09AC: call analysis failed (funcsize=49)"

#error "2420F0AD4: call analysis failed (funcsize=60)"

#error "2420F0BF8: call analysis failed (funcsize=59)"

#error "2420F0D28: call analysis failed (funcsize=63)"

#error "2420F0E50: call analysis failed (funcsize=61)"

#error "2420F0F94: call analysis failed (funcsize=60)"

#error "2420F1098: call analysis failed (funcsize=55)"

#error "2420F11A4: call analysis failed (funcsize=56)"

#error "2420F12AC: call analysis failed (funcsize=57)"

#error "2420F13E0: call analysis failed (funcsize=63)"

#error "2420F14F0: call analysis failed (funcsize=57)"

#error "2420F1608: call analysis failed (funcsize=58)"

#error "2420F1714: call analysis failed (funcsize=56)"

#error "2420F182C: call analysis failed (funcsize=58)"

#error "2420F1938: call analysis failed (funcsize=56)"

#error "2420F1A68: call analysis failed (funcsize=64)"

#error "2420F1B94: call analysis failed (funcsize=64)"

#error "2420F1CB4: call analysis failed (funcsize=58)"

#error "2420F1DC0: call analysis failed (funcsize=56)"

#error "2420F1ED8: call analysis failed (funcsize=58)"

#error "2420F1FE4: call analysis failed (funcsize=56)"

#error "2420F20FC: call analysis failed (funcsize=58)"

#error "2420F2208: call analysis failed (funcsize=56)"

#error "2420F2334: call analysis failed (funcsize=64)"

#error "2420F2438: call analysis failed (funcsize=57)"

#error "2420F2544: call analysis failed (funcsize=55)"

#error "2420F264C: call analysis failed (funcsize=55)"

#error "2420F2750: call analysis failed (funcsize=55)"

#error "2420F2858: call analysis failed (funcsize=55)"

#error "2420F295C: call analysis failed (funcsize=55)"

#error "2420F2A64: call analysis failed (funcsize=55)"

#error "2420F2B68: call analysis failed (funcsize=55)"

#error "2420F2C7C: call analysis failed (funcsize=57)"

#error "2420F2D8C: call analysis failed (funcsize=56)"

#error "2420F2E9C: call analysis failed (funcsize=56)"

#error "2420F2FC4: call analysis failed (funcsize=61)"

#error "2420F30E8: call analysis failed (funcsize=60)"

#error "2420F321C: call analysis failed (funcsize=63)"

#error "2420F334C: call analysis failed (funcsize=64)"

#error "2420F347C: call analysis failed (funcsize=61)"

#error "2420F35A0: call analysis failed (funcsize=60)"

#error "2420F36CC: call analysis failed (funcsize=62)"

#error "2420F37F0: call analysis failed (funcsize=60)"

#error "2420F3914: call analysis failed (funcsize=59)"

#error "2420F3A38: call analysis failed (funcsize=60)"

#error "2420F3B60: call analysis failed (funcsize=61)"

#error "2420F3C84: call analysis failed (funcsize=60)"

#error "2420F3DA4: call analysis failed (funcsize=63)"

#error "2420F3ECC: call analysis failed (funcsize=64)"

#error "2420F3FD8: call analysis failed (funcsize=51)"

#error "2420F40CC: call analysis failed (funcsize=50)"

#error "2420F41BC: call analysis failed (funcsize=50)"

#error "2420F42B8: call analysis failed (funcsize=51)"

#error "2420F43A8: call analysis failed (funcsize=52)"

#error "2420F44A0: call analysis failed (funcsize=50)"

#error "2420F459C: call analysis failed (funcsize=51)"

#error "2420F468C: call analysis failed (funcsize=50)"

#error "2420F4788: call analysis failed (funcsize=51)"

#error "2420F4878: call analysis failed (funcsize=50)"

#error "2420F4970: call analysis failed (funcsize=51)"

#error "2420F4A60: call analysis failed (funcsize=52)"

#error "2420F4B64: call analysis failed (funcsize=51)"

#error "2420F4C54: call analysis failed (funcsize=52)"

#error "2420F4D58: call analysis failed (funcsize=51)"

#error "2420F4E4C: call analysis failed (funcsize=51)"

#error "2420F4F40: call analysis failed (funcsize=50)"

#error "2420F5030: call analysis failed (funcsize=50)"

#error "2420F512C: call analysis failed (funcsize=51)"

#error "2420F5254: call analysis failed (funcsize=55)"

#error "2420F5348: call analysis failed (funcsize=50)"

#error "2420F5434: call analysis failed (funcsize=49)"

#error "2420F5528: call analysis failed (funcsize=50)"

#error "2420F5614: call analysis failed (funcsize=49)"

#error "2420F5754: call analysis failed (funcsize=65)"

#error "2420F5884: call analysis failed (funcsize=62)"

#error "2420F59AC: call analysis failed (funcsize=60)"

#error "2420F5AD0: call analysis failed (funcsize=59)"

#error "2420F5BD0: call analysis failed (funcsize=53)"

#error "2420F5CC8: call analysis failed (funcsize=53)"

#error "2420F5DC4: call analysis failed (funcsize=50)"

#error "2420F5EB0: call analysis failed (funcsize=49)"

#error "2420F5FA4: call analysis failed (funcsize=50)"

#error "2420F6090: call analysis failed (funcsize=49)"

#error "2420F61A4: call analysis failed (funcsize=57)"

#error "2420F62C4: call analysis failed (funcsize=60)"

#error "2420F63F0: call analysis failed (funcsize=62)"

#error "2420F6518: call analysis failed (funcsize=60)"

#error "2420F6638: call analysis failed (funcsize=60)"

#error "2420F6768: call analysis failed (funcsize=62)"

#error "2420F685C: call analysis failed (funcsize=50)"

#error "2420F694C: call analysis failed (funcsize=50)"

#error "2420F6A40: call analysis failed (funcsize=50)"

#error "2420F6B30: call analysis failed (funcsize=50)"

#error "2420F6C48: call analysis failed (funcsize=54)"

#error "2420F6D38: call analysis failed (funcsize=50)"

#error "2420F6E2C: call analysis failed (funcsize=50)"

#error "2420F6F1C: call analysis failed (funcsize=50)"

#error "2420F7010: call analysis failed (funcsize=50)"

#error "2420F7100: call analysis failed (funcsize=50)"

#error "2420F71FC: call analysis failed (funcsize=51)"

#error "2420F72EC: call analysis failed (funcsize=50)"

#error "2420F73E0: call analysis failed (funcsize=50)"

#error "2420F74D0: call analysis failed (funcsize=52)"

#error "2420F75F0: call analysis failed (funcsize=54)"

#error "2420F76E0: call analysis failed (funcsize=50)"

#error "2420F77D4: call analysis failed (funcsize=50)"

#error "2420F78C4: call analysis failed (funcsize=50)"

#error "2420F79B8: call analysis failed (funcsize=50)"

#error "2420F7AA8: call analysis failed (funcsize=50)"

#error "2420F7B9C: call analysis failed (funcsize=50)"

#error "2420F7C88: call analysis failed (funcsize=49)"

#error "2420F7D7C: call analysis failed (funcsize=50)"

#error "2420F7E6C: call analysis failed (funcsize=50)"

#error "2420F7F94: call analysis failed (funcsize=61)"

#error "2420F80B8: call analysis failed (funcsize=60)"

#error "2420F81AC: call analysis failed (funcsize=50)"

#error "2420F829C: call analysis failed (funcsize=50)"

#error "2420F8394: call analysis failed (funcsize=51)"

#error "2420F84A8: call analysis failed (funcsize=57)"

#error "2420F85C8: call analysis failed (funcsize=60)"

#error "2420F86E4: call analysis failed (funcsize=58)"

#error "2420F880C: call analysis failed (funcsize=61)"

#error "2420F8914: call analysis failed (funcsize=55)"

#error "2420F8A14: call analysis failed (funcsize=54)"

#error "2420F8B3C: call analysis failed (funcsize=60)"

#error "2420F8C74: call analysis failed (funcsize=64)"

#error "2420F8DA0: call analysis failed (funcsize=62)"

#error "2420F8EC4: call analysis failed (funcsize=59)"

void static Catalog.Resource.Diffusion.Model.VisualGenerationBase()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242105480();
  v2 = v1;
  sub_24210678C();
  sub_242105D48();
  sub_242105440();
  sub_2421056DC();
  sub_242106C34();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v2 + 24) = &type metadata for AssetBackedDiffusionModelBase;
  *(_QWORD *)(v2 + 32) = sub_24209F66C();
  v3 = sub_2420970C8();
  sub_242105D34(v3);
  AssetBackedDiffusionModelBase.init(configuration:)();
  if (v0)
  {
    sub_2420967B0(v2);
    sub_242105EB4();
    sub_242106028();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Animation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106038();
  sub_242105CD4();
  sub_242082F10();
  sub_2421066A8();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A68();
    sub_242105E3C();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Emoji()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061C0();
  sub_242105740();
  sub_2421057B4();
  sub_2421056A4();
  sub_2421056DC();
  sub_242106914();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105D20();
    sub_242105760();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Illustration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_242105480();
  v2 = v1;
  sub_242105CD4();
  sub_242106500();
  sub_242106B08();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v2 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v3 = sub_2420970C8();
  sub_24210581C(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_2420967B0(v2);
    sub_242105888();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedAnimation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106038();
  sub_242105CD4();
  sub_2421056E8();
  sub_242106500();
  sub_242106B08();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421060B8();
    sub_242106AE0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedEmoji()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106038();
  sub_242105CD4();
  sub_242105BE8();
  sub_242106500();
  sub_242106B08();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A7C();
    sub_242106304();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedIllustration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106038();
  sub_242105CD4();
  sub_2421056E8();
  sub_242082F10();
  sub_2421066A8();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421060CC();
    sub_242106AD0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedScribble()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_242105480();
  v2 = v1;
  sub_242105CD4();
  sub_242106C5C();
  sub_242105440();
  sub_2421056F8();
  sub_2421064E8();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v2 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v3 = sub_2420970C8();
  sub_24210581C(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_2420967B0(v2);
    sub_242105D0C();
    sub_242106808();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedSketch()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106038();
  sub_242105CD4();
  sub_2421056E8();
  sub_242082F10();
  sub_2421066A8();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058F0();
    sub_242105B90();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Refiner()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106038();
  sub_242105CD4();
  sub_24210687C();
  sub_242082F10();
  sub_2421066A8();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105860();
    sub_242106AB0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Scribble()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106038();
  sub_242105CD4();
  sub_242106BC4();
  sub_2421065B0();
  sub_242105440();
  sub_2421056F8();
  sub_2421064E8();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421057D8();
    sub_2421058B8();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Sketch()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106038();
  sub_242106CC0();
  sub_242082F10();
  sub_2421066A8();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v2 = sub_2420970C8();
  sub_24210581C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105874();
    sub_242106314();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.Diffusion.Adapter.SkinToneEmoji()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_242105480();
  v2 = v1;
  sub_242106CC0();
  sub_242106500();
  sub_242106B08();
  sub_2421056DC();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v2 + 32) = sub_24210616C((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase);
  v3 = sub_2420970C8();
  sub_24210581C(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_2420967B0(v2);
    sub_2421057D8();
    sub_2421058B8();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.DisabledUseCaseList.All()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242105480();
  sub_242105964();
  sub_242106220();
  sub_242105440();
  sub_2421056DC();
  sub_24210696C();
  sub_24210584C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 24) = &type metadata for AssetBackedDisabledUseCaseListBase;
  *(_QWORD *)(v0 + 32) = sub_2420FA0C8();
  v2 = sub_2420970C8();
  sub_242105D34(v2);
  AssetBackedDisabledUseCaseListBase.init(configuration:)();
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105E4C();
    sub_242132AD4();
    sub_242106828();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

unint64_t sub_2420FA0C8()
{
  unint64_t result;

  result = qword_254399C18;
  if (!qword_254399C18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_254399C18);
  }
  return result;
}

void static Catalog.Resource.GenerativeFunctionOverrides.All()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242105480();
  v2 = v1;
  sub_242106220();
  sub_242105518();
  sub_242106604();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v2 + 24) = &type metadata for AssetBackedGenerativeFunctionOverridesBase;
  *(_QWORD *)(v2 + 32) = sub_2420FA230();
  v3 = sub_2420970C8();
  sub_242105D34(v3);
  AssetBackedGenerativeFunctionOverridesBase.init(configuration:)();
  if (v0)
  {
    sub_2420967B0(v2);
    sub_242105BF8();
    sub_2421063D0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

unint64_t sub_2420FA230()
{
  unint64_t result;

  result = qword_254397460;
  if (!qword_254397460)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_254397460);
  }
  return result;
}

void static Catalog.Resource.HandwritingSynthesizer.HandwritingSynthesis()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242105480();
  v2 = v1;
  sub_24210678C();
  sub_242105740();
  sub_242105BE8();
  sub_242105440();
  sub_2421056A4();
  sub_2421056F8();
  sub_242106604();
  sub_242106BF0();
  sub_2421054CC();
  *(_QWORD *)(v2 + 24) = &type metadata for AssetBackedHandwritingSynthesizerBase;
  *(_QWORD *)(v2 + 32) = sub_2420FA3B8();
  v3 = sub_2420970C8();
  sub_242105D34(v3);
  AssetBackedHandwritingSynthesizerBase.init(configuration:)();
  if (v0)
  {
    sub_2420967B0(v2);
    sub_242105CE4();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

unint64_t sub_2420FA3B8()
{
  unint64_t result;

  result = qword_254399198;
  if (!qword_254399198)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_254399198);
  }
  return result;
}

void static Catalog.Resource.ImageFilter.Conditioning()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a1 + 32) = sub_242106C18((uint64_t)&type metadata for AssetBackedImageFilterBase);
  v1 = sub_2420970C8();
  v2 = sub_242105F20(v1);
  strcpy((char *)(v2 + 32), "Conditioning");
  *(_BYTE *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  v3 = sub_242106550(v2);
  v4 = sub_24210610C(v3);
  v5 = sub_242106BE4(v4, (__n128)xmmword_2421638E0);
  v6 = sub_2421067D8(v5);
  v8 = sub_242105E74(v6, v7);
  *(_QWORD *)(v8 + 184) = &unk_2513132A8;
  *(_QWORD *)(v8 + 192) = &unk_251313258;
  sub_24207F428();
}

unint64_t sub_2420FA4AC()
{
  unint64_t result;

  result = qword_2543972D0;
  if (!qword_2543972D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_2543972D0);
  }
  return result;
}

void static Catalog.Resource.ImageFilter.Face2Word()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a1 + 32) = sub_242106C18((uint64_t)&type metadata for AssetBackedImageFilterBase);
  v1 = sub_2420970C8();
  v2 = sub_242105F20(v1);
  *(_QWORD *)(v2 + 32) = 0x726F573265636146;
  *(_QWORD *)(v2 + 40) = 0xE900000000000064;
  v3 = sub_242106550(v2);
  v4 = sub_24210610C(v3);
  v5 = sub_242106BE4(v4, (__n128)xmmword_2421638E0);
  v6 = sub_2421067D8(v5);
  v8 = sub_242105E74(v6, v7);
  *(_QWORD *)(v8 + 184) = &unk_251313398;
  *(_QWORD *)(v8 + 192) = &unk_251313348;
  sub_24207F428();
}

void static Catalog.Resource.ImageFilter.HolisticallyNestedEdgeDetector()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(a1 + 32) = sub_242106C18((uint64_t)&type metadata for AssetBackedImageFilterBase);
  v1 = sub_2420970C8();
  v2 = sub_242105F20(v1);
  v3 = sub_242106A7C(v2);
  v4 = sub_242106550(v3);
  v5 = sub_24210610C(v4);
  v6 = sub_242106BE4(v5, (__n128)xmmword_2421638E0);
  v7 = sub_2421067D8(v6);
  v9 = sub_242105E74(v7, v8);
  *(_QWORD *)(v9 + 184) = &unk_251313320;
  *(_QWORD *)(v9 + 192) = &unk_2513132D0;
  sub_24207F428();
}

void static Catalog.Resource.ImageInpainter.PhotosMagicClean()(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[3] = (uint64_t)&type metadata for AssetBackedImageInpainterBase;
  a1[4] = sub_2420FA718();
  v2 = sub_2420970C8();
  *a1 = v2;
  v3 = sub_242106BD0(v2, 0x706E496567616D49);
  *(_QWORD *)(v3 + 32) = 0xD000000000000010;
  *(_QWORD *)(v3 + 40) = 0x800000024213E350;
  v4 = sub_242106550(v3);
  *(_QWORD *)(v4 + 64) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 80) = &unk_2513134C8;
  *(_QWORD *)(v4 + 88) = 0;
  *(_BYTE *)(v4 + 96) = 1;
  *(_OWORD *)(v4 + 104) = xmmword_2421638E0;
  *(_OWORD *)(v4 + 120) = xmmword_242163900;
  v6 = sub_2421067E8(v4, v5 | 6);
  *(_QWORD *)(v6 + 184) = v7;
  *(_QWORD *)(v6 + 192) = &unk_251313478;
  sub_24207F428();
}

unint64_t sub_2420FA718()
{
  unint64_t result;

  result = qword_254397340;
  if (!qword_254397340)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_254397340);
  }
  return result;
}

void static Catalog.Resource.ImageMagicCleanUp.GenerativeEditsMagicCleanUp()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242105480();
  v2 = v1;
  sub_242106A58();
  sub_242105740();
  sub_2421056E8();
  sub_2421057B4();
  sub_242105E30();
  sub_24210589C();
  sub_242105C60();
  *(_QWORD *)(v2 + 24) = &type metadata for AssetBackedImageMagicCleanUpBase;
  *(_QWORD *)(v2 + 32) = sub_2420FA88C();
  v3 = sub_2420970C8();
  sub_242105D34(v3);
  AssetBackedImageMagicCleanUpBase.init(configuration:)();
  if (v0)
  {
    sub_2420967B0(v2);
    sub_242105A54();
    sub_242105760();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

unint64_t sub_2420FA88C()
{
  unint64_t result;

  result = qword_254397A10;
  if (!qword_254397A10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_254397A10);
  }
  return result;
}

void static Catalog.Resource.ImageScaler.GenerativePlaygroundsUpscaler()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(a1 + 24) = &type metadata for AssetBackedImageScalerBase;
  *(_QWORD *)(a1 + 32) = sub_2420FA988();
  v1 = sub_2420970C8();
  v2 = sub_242106C04(v1);
  *(_QWORD *)(v2 + 16) = v3 & 0xFFFFFFFFFFFFLL | 0x6163000000000000;
  *(_QWORD *)(v2 + 24) = 0xEB0000000072656CLL;
  v4 = sub_242106A7C(v2);
  v5 = sub_242106550(v4);
  v6 = sub_24210610C(v5);
  v7 = sub_242106BE4(v6, (__n128)xmmword_2421638E0);
  v8 = sub_2421067D8(v7);
  v10 = sub_242105E74(v8, v9);
  *(_QWORD *)(v10 + 184) = &unk_251313430;
  *(_QWORD *)(v10 + 192) = &unk_2513133E0;
  sub_24207F428();
}

unint64_t sub_2420FA988()
{
  unint64_t result;

  result = qword_254397308;
  if (!qword_254397308)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_254397308);
  }
  return result;
}

void static Catalog.Resource.ImageSegmenter.ForegroundBackgroundSegmenter()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(a1 + 24) = &type metadata for AssetBackedImageSegmenterBase;
  *(_QWORD *)(a1 + 32) = sub_2420FAA94();
  v1 = sub_2420970C8();
  v2 = sub_242106C04(v1);
  v4 = sub_242106BD0(v2, v3 & 0xFFFFFFFFFFFFLL | 0x6765000000000000);
  v5 = sub_242106A7C(v4);
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 48) = v7 + 37;
  *(_QWORD *)(v5 + 56) = 0x80000002421349F0;
  *(_QWORD *)(v5 + 64) = v6;
  *(_BYTE *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 80) = &unk_251313560;
  *(_QWORD *)(v5 + 88) = 0;
  *(_BYTE *)(v5 + 96) = 1;
  *(_OWORD *)(v5 + 104) = xmmword_2421638E0;
  *(_OWORD *)(v5 + 120) = xmmword_242163900;
  v8 = sub_2421067E8(v5, v7);
  *(_QWORD *)(v8 + 184) = v9;
  *(_QWORD *)(v8 + 192) = &unk_251313510;
  sub_24207F428();
}

unint64_t sub_2420FAA94()
{
  unint64_t result;

  result = qword_254397378;
  if (!qword_254397378)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_254397378);
  }
  return result;
}

#error "2420FAB6C: call analysis failed (funcsize=57)"

#error "2420FAC78: call analysis failed (funcsize=56)"

#error "2420FAD84: call analysis failed (funcsize=56)"

#error "2420FAE90: call analysis failed (funcsize=56)"

#error "2420FAF9C: call analysis failed (funcsize=56)"

#error "2420FB0A8: call analysis failed (funcsize=56)"

#error "2420FB198: call analysis failed (funcsize=50)"

void static Catalog.Resource.LLM.ServerConfiguration.AnswerSynthesisServer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106CAC();
  sub_242105740();
  sub_242106240();
  sub_242105440();
  sub_242105530();
  sub_24210696C();
  sub_242106454();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105CF8();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

unint64_t sub_2420FB324()
{
  unint64_t result;

  result = qword_254397950;
  if (!qword_254397950)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_254397950);
  }
  return result;
}

void static Catalog.Resource.LLM.ServerConfiguration.InstructServerBase()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061D0();
  sub_242105740();
  sub_242105BE8();
  sub_242105518();
  sub_242106510();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105EB4();
    sub_242106124();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.NLRouterBase()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_24210663C();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105E4C();
    sub_242132AD4();
    sub_242106144();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.OpenEndedTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058DC();
    sub_2421065CC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106088();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105EC8();
    sub_242106AD0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_2421056E8();
  sub_242105440();
  sub_242105530();
  sub_242106098();
  sub_242105830();
  sub_242105548();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105E4C();
    sub_242132AD4();
    sub_2421063D0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationBase()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106088();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105AA4();
    sub_242106324();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106088();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242106978();
    sub_2421063D0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106C5C();
  sub_242105440();
  sub_242105530();
  sub_242106098();
  sub_242105830();
  sub_242105548();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242106418();
    sub_242106808();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106088();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_24210642C();
    sub_2421063D0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_2421056E8();
  sub_242105440();
  sub_242105530();
  sub_242106098();
  sub_242105830();
  sub_242105548();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421063F0();
    sub_2421063D0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106088();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105D0C();
    sub_242106AE0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_2421056E8();
  sub_242105440();
  sub_242105530();
  sub_242106098();
  sub_242105830();
  sub_242105548();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105EC8();
    sub_242106AD0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.Planner()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106B6C();
  sub_24210687C();
  sub_242105440();
  sub_242105530();
  sub_242106098();
  sub_242105830();
  sub_242105548();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105860();
    sub_242106818();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PlannerV2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242106848();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105AA4();
    sub_242106324();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PlannerV3()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242106848();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105AA4();
    sub_242106324();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ResponseGeneration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061D0();
  sub_242105740();
  sub_242105BE8();
  sub_242105518();
  sub_242106510();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058F0();
    sub_242106304();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421068A0();
  sub_242105740();
  sub_242105BE8();
  sub_242105518();
  sub_242106A28();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421060B8();
    sub_242105B90();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV3()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421068A0();
  sub_242105740();
  sub_242105BE8();
  sub_242105518();
  sub_242106A28();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421060B8();
    sub_242105B90();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.SearchQueryUnderstandingServer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106DD8();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_24210698C();
    sub_242105F10();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerBulletsTransform()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106B6C();
  sub_242082F10();
  sub_242106890();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105904();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerConciseTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106C98();
  sub_242105740();
  sub_242106240();
  sub_242105440();
  sub_242105530();
  sub_2421063C4();
  sub_242105BCC();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105888();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerFriendlyTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061D0();
  sub_242105740();
  sub_242106890();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242106440();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105EA0();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerMagicRewrite()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061D0();
  sub_242105740();
  sub_242106890();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242106440();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105EA0();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormBasic()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106DD8();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_24210698C();
    sub_242105F10();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106088();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421063DC();
    sub_242106AC0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyQA()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106C98();
  sub_242105740();
  sub_242105BE8();
  sub_242105518();
  sub_2421064E8();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105EA0();
    sub_242105F00();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerProfessionalTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106B6C();
  sub_242082F10();
  sub_242106890();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105904();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerProofreadingReview()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106A40();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058F0();
    sub_2421058B8();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerTablesTransform()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106CAC();
  sub_242105740();
  sub_242106240();
  sub_242105440();
  sub_242105530();
  sub_24210696C();
  sub_242106454();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105CF8();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerTakeawaysTransform()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106A40();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058F0();
    sub_2421058B8();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerTextSummarizer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421068A0();
  sub_242105740();
  sub_242106240();
  sub_242105440();
  sub_242105530();
  sub_242106C34();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058DC();
    sub_242105C50();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421057C4();
  sub_242105740();
  sub_242106088();
  sub_242105440();
  sub_242105518();
  sub_242105C30();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105AB8((uint64_t)&type metadata for AssetBackedServerConfigurationBase);
  v2 = sub_2420970C8();
  sub_242105558(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058DC();
    sub_2421065CC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.ModelConfigurationReplacement.All()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242105480();
  v2 = v1;
  sub_242106220();
  sub_242105518();
  sub_242106604();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v2 + 24) = &type metadata for AssetBackedModelConfigurationReplacementBase;
  *(_QWORD *)(v2 + 32) = sub_2420FD7B0();
  v3 = sub_2420970C8();
  sub_242105D34(v3);
  AssetBackedModelConfigurationReplacementBase.init(configuration:)();
  if (v0)
  {
    sub_2420967B0(v2);
    sub_242105C0C();
    sub_2421063D0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

unint64_t sub_2420FD7B0()
{
  unint64_t result;

  result = qword_254397848;
  if (!qword_254397848)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_254397848);
  }
  return result;
}

void static Catalog.Resource.TokenInputDenyList.CodeIntelligenceBaseInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_242105480();
  v2 = v1;
  sub_242106C20();
  sub_2421056E8();
  sub_2421057B4();
  sub_242106A64();
  sub_242105E30();
  sub_24210589C();
  sub_242105C60();
  *(_QWORD *)(v2 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v3 = sub_2420970C8();
  sub_242105624(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_2420967B0(v2);
    sub_2421057D8();
    sub_242105760();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

unint64_t sub_2420FD900()
{
  unint64_t result;

  result = qword_2543973F0;
  if (!qword_2543973F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_2543973F0);
  }
  return result;
}

void static Catalog.Resource.TokenInputDenyList.MailReplyLongFormBasicInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106CE8();
  sub_242106868();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A7C();
    sub_2421065BC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.MailReplyLongFormQAInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106D74();
  sub_2421065B0();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058DC();
    sub_2421058B8();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242105CD4();
  sub_2421065EC();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A90();
    sub_242105B90();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.MailReplySnippetInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106D10();
  sub_242105FF4();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105AA4();
    sub_242105E3C();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.MessagesReplyBaseInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106CFC();
  sub_242105FF4();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105AA4();
    sub_242105E3C();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106D4C();
  sub_2421056E8();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105888();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_2421068C4();
  sub_2421065EC();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A90();
    sub_242105B90();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106CD4();
  sub_242106194();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058F0();
    sub_242106304();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061C0();
  sub_242105740();
  sub_242105BE8();
  sub_242105440();
  sub_242105530();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A7C();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitBaseInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_2421068EC();
  sub_242105FF4();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105AA4();
    sub_242105E3C();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106C84();
  sub_242105740();
  sub_242106BAC();
  sub_242105440();
  sub_242105530();
  sub_242105830();
  sub_242105548();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105CF8();
    sub_242106828();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242106C84();
  sub_242105740();
  sub_242106BAC();
  sub_242105440();
  sub_242105530();
  sub_242105830();
  sub_242105548();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105CF8();
    sub_242106828();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106D24();
  sub_2421065EC();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A90();
    sub_242105B90();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106008();
  sub_242106194();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058F0();
    sub_242106304();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.VisualGenerationBaseInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_2421068EC();
  sub_2421056E8();
  sub_242105440();
  sub_242105530();
  sub_242105E94();
  sub_242105AC0();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421057D8();
    sub_242105F00();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106008();
  sub_2421056E8();
  sub_242105518();
  sub_242105D78();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A68();
    sub_2421065DC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsConciseToneInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242105CD4();
  sub_2421056E8();
  sub_242105518();
  sub_242105D78();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105EB4();
    sub_242106124();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061C0();
  sub_242106900();
  sub_2421056E8();
  sub_2421057B4();
  sub_242105518();
  sub_242105EE8();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105D20();
    sub_242105760();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061C0();
  sub_242106900();
  sub_2421056E8();
  sub_2421057B4();
  sub_242105518();
  sub_242105EE8();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105D20();
    sub_242105760();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421068B4();
  sub_242082F10();
  sub_242105440();
  sub_242105518();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105860();
    sub_2421063D0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106008();
  sub_2421056E8();
  sub_242105518();
  sub_242105D78();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A68();
    sub_2421065DC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106D38();
  sub_2421056E8();
  sub_242105518();
  sub_242105D78();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058C8();
    sub_2421065CC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsTablesTransformInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106D60();
  sub_2421056E8();
  sub_242105518();
  sub_242105D78();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105BF8();
    sub_242106AB0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421059AC();
  sub_242106D38();
  sub_2421056E8();
  sub_242105518();
  sub_242105D78();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105624(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058C8();
    sub_2421065CC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_242105480();
  v2 = v1;
  sub_242106C20();
  sub_2421056E8();
  sub_2421057B4();
  sub_242106A64();
  sub_242105E30();
  sub_24210589C();
  sub_242105C60();
  *(_QWORD *)(v2 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v3 = sub_2420970C8();
  sub_242105610(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_2420967B0(v2);
    sub_2421058DC();
    sub_242105760();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

unint64_t sub_2420FF4B0()
{
  unint64_t result;

  result = qword_254397428;
  if (!qword_254397428)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254397428);
  }
  return result;
}

void static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106CE8();
  sub_242106868();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058F0();
    sub_2421065BC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106D74();
  sub_2421065B0();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105CF8();
    sub_2421058B8();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421068B4();
  sub_242105740();
  sub_242106D88();
  sub_242105440();
  sub_242105530();
  sub_242105830();
  sub_242105548();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105918();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MailReplySnippetOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106D10();
  sub_242105FF4();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058C8();
    sub_242105E3C();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MessagesReplyBaseOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106CFC();
  sub_242105FF4();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058C8();
    sub_242105E3C();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106D4C();
  sub_2421056E8();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105EA0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_2421068C4();
  sub_242106C70();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105918();
    sub_242105B90();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_2421068C4();
  sub_2421065B0();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105CF8();
    sub_2421058B8();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106CD4();
  sub_242106194();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A90();
    sub_242106304();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242105CD4();
  sub_242106868();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058F0();
    sub_2421065BC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitBaseOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_2421068EC();
  sub_242105FF4();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_2421058C8();
    sub_242105E3C();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_2421068D8();
  sub_242106C48();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105904();
    sub_242106134();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_2421068D8();
  sub_242106C48();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105904();
    sub_242106134();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106D24();
  sub_242106C70();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105918();
    sub_242105B90();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106008();
  sub_242106194();
  sub_242105440();
  sub_242105530();
  sub_24210601C();
  sub_24210584C();
  sub_242105450();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A90();
    sub_242106304();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106008();
  sub_2421056E8();
  sub_242105518();
  sub_242106154();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105AA4();
    sub_2421065DC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061C0();
  sub_242106900();
  sub_2421056E8();
  sub_2421057B4();
  sub_242105518();
  sub_242105EE8();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105D20();
    sub_242105760();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421068B4();
  sub_242082F10();
  sub_2421060F4();
  sub_242105440();
  sub_242105518();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105874();
    sub_242106838();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421068B4();
  sub_242082F10();
  sub_2421060F4();
  sub_242105440();
  sub_242105518();
  sub_242105660();
  sub_242105588();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105874();
    sub_242106838();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_2421068D8();
  sub_2421056E8();
  sub_242105518();
  sub_242106154();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105BF8();
    sub_242106314();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106008();
  sub_2421056E8();
  sub_242105518();
  sub_242106154();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105AA4();
    sub_2421065DC();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061C0();
  sub_242082F10();
  sub_2421060F4();
  sub_242105440();
  sub_242105518();
  sub_242105EE8();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105888();
    sub_242106838();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_242105964();
  sub_242106D60();
  sub_2421056E8();
  sub_242105518();
  sub_242106154();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105A68();
    sub_242106AB0();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242105480();
  sub_2421061C0();
  sub_242082F10();
  sub_2421060F4();
  sub_242105440();
  sub_242105518();
  sub_242105EE8();
  sub_24210556C();
  sub_2421054CC();
  *(_QWORD *)(v0 + 32) = sub_242105C20((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase);
  v2 = sub_2420970C8();
  sub_242105610(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_2420967B0(v0);
    sub_242105888();
    sub_242106838();
    sub_24210540C();
    sub_2420797C0((uint64_t *)&unk_254399A80);
    sub_242105434();
    sub_242105474();
    sub_2421053E4();
    __break(1u);
  }
  else
  {
    sub_2421053F8();
  }
}

uint64_t sub_242100F0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  double v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t *v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t *v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t *v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t *v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t *v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t *v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t *v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t *v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t *v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t *v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t *v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t *v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t *v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t *v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t *v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t *v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t *v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t *v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t *v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t *v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t *v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t *v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t *v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t *v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t *v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t *v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t *v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t *v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t *v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t *v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t *v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t *v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t *v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t *v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t *v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t *v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t *v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t *v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t *v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t *v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t *v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t *v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t *v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t *v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t *v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t *v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t *v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t *v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t *v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t *v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t *v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t *v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t *v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t *v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t *v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t *v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t *v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t *v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t *v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t *v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t *v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t *v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t *v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t *v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t *v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t *v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t *v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t *v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t *v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t *v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t *v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t *v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t *v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t *v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t *v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t *v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t *v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t *v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t *v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t *v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t *v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t *v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t *v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t *v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t *v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t *v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t *v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t *v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t *v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t *v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t *v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t *v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t *v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t *v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t *v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t *v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t *v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t *v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t *v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t *v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t *v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t *v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t *v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t *v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t *v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t *v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t *v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t *v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t *v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t *v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t *v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t *v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t *v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t *v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t *v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t *v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t *v892;
  uint64_t result;
  _QWORD v894[4];
  _QWORD v895[4];
  _QWORD v896[4];
  _QWORD v897[4];
  _QWORD v898[4];
  _QWORD v899[4];
  _QWORD v900[4];
  _QWORD v901[4];
  _QWORD v902[4];
  _QWORD v903[4];
  _QWORD v904[4];
  _QWORD v905[4];
  _QWORD v906[4];
  _QWORD v907[4];
  _QWORD v908[4];
  _QWORD v909[4];
  _QWORD v910[4];
  _QWORD v911[4];
  _QWORD v912[4];
  _QWORD v913[4];
  _QWORD v914[4];
  _QWORD v915[4];
  _QWORD v916[4];
  _QWORD v917[4];
  _QWORD v918[4];
  _QWORD v919[4];
  _QWORD v920[4];
  _QWORD v921[4];
  _QWORD v922[4];
  _QWORD v923[4];
  _QWORD v924[4];
  _QWORD v925[4];
  _QWORD v926[4];
  _QWORD v927[4];
  _QWORD v928[4];
  _QWORD v929[4];
  _QWORD v930[4];
  _QWORD v931[4];
  _QWORD v932[4];
  _QWORD v933[4];
  _QWORD v934[4];
  _QWORD v935[4];
  _QWORD v936[4];
  _QWORD v937[4];
  _QWORD v938[4];
  _QWORD v939[4];
  _QWORD v940[4];
  _QWORD v941[4];
  _QWORD v942[4];
  _QWORD v943[4];
  _QWORD v944[4];
  _QWORD v945[4];
  _QWORD v946[4];
  _QWORD v947[4];
  _QWORD v948[4];
  _QWORD v949[4];
  _QWORD v950[4];
  _QWORD v951[4];
  _QWORD v952[4];
  _QWORD v953[4];
  _QWORD v954[4];
  _QWORD v955[4];
  _QWORD v956[4];
  _QWORD v957[4];
  _QWORD v958[4];
  _QWORD v959[4];
  _QWORD v960[4];
  _QWORD v961[4];
  _QWORD v962[4];
  _QWORD v963[4];
  _QWORD v964[4];
  _QWORD v965[4];
  _QWORD v966[4];
  _QWORD v967[4];
  _QWORD v968[4];
  _QWORD v969[4];
  _QWORD v970[4];
  _QWORD v971[4];
  _QWORD v972[4];
  _QWORD v973[4];
  _QWORD v974[4];
  _QWORD v975[4];
  _QWORD v976[4];
  _QWORD v977[4];
  _QWORD v978[4];
  _QWORD v979[4];
  _QWORD v980[4];
  _QWORD v981[4];
  _QWORD v982[4];
  _QWORD v983[4];
  _QWORD v984[4];
  _QWORD v985[4];
  _QWORD v986[4];
  _QWORD v987[4];
  _QWORD v988[4];
  _QWORD v989[4];
  _QWORD v990[4];
  _QWORD v991[4];
  _QWORD v992[4];
  _QWORD v993[4];
  _QWORD v994[4];
  _QWORD v995[4];
  _QWORD v996[4];
  _QWORD v997[4];
  _QWORD v998[4];
  _QWORD v999[4];
  _QWORD v1000[4];
  _QWORD v1001[4];
  _QWORD v1002[4];
  _QWORD v1003[4];
  _QWORD v1004[4];
  _QWORD v1005[4];
  _QWORD v1006[4];
  _QWORD v1007[4];
  _QWORD v1008[4];
  _QWORD v1009[4];
  _QWORD v1010[4];
  _QWORD v1011[4];
  _QWORD v1012[4];
  _QWORD v1013[4];
  _QWORD v1014[4];
  _QWORD v1015[4];
  _QWORD v1016[4];
  _QWORD v1017[4];
  _QWORD v1018[4];
  _QWORD v1019[4];
  _QWORD v1020[4];
  _QWORD v1021[4];
  _QWORD v1022[4];
  _QWORD v1023[4];
  _QWORD v1024[4];
  _QWORD v1025[4];
  _QWORD v1026[4];
  _QWORD v1027[4];
  _QWORD v1028[4];
  _QWORD v1029[4];
  _QWORD v1030[4];
  _QWORD v1031[4];
  _QWORD v1032[4];
  _QWORD v1033[4];
  _QWORD v1034[4];
  _QWORD v1035[4];
  _QWORD v1036[4];
  _QWORD v1037[4];
  _QWORD v1038[4];
  _QWORD v1039[4];
  _QWORD v1040[4];
  _QWORD v1041[4];
  _QWORD v1042[4];
  _QWORD v1043[4];
  _QWORD v1044[4];
  _QWORD v1045[4];
  uint64_t v1046[4];
  _QWORD v1047[4];
  _QWORD v1048[4];
  _QWORD v1049[4];
  _QWORD v1050[4];
  _QWORD v1051[4];
  _QWORD v1052[4];
  _QWORD v1053[4];
  _QWORD v1054[4];
  _QWORD v1055[4];
  _QWORD v1056[4];
  _QWORD v1057[4];
  _QWORD v1058[4];
  _QWORD v1059[4];
  _QWORD v1060[4];
  _QWORD v1061[4];
  _QWORD v1062[4];
  _QWORD v1063[4];
  _QWORD v1064[4];
  _QWORD v1065[4];
  _QWORD v1066[4];
  _QWORD v1067[4];
  _QWORD v1068[4];
  _QWORD v1069[4];
  _QWORD v1070[4];
  _QWORD v1071[4];
  _QWORD v1072[4];
  _QWORD v1073[4];
  _QWORD v1074[4];
  _QWORD v1075[4];
  _QWORD v1076[4];
  _QWORD v1077[4];
  _QWORD v1078[4];
  _QWORD v1079[4];
  _QWORD v1080[4];
  _QWORD v1081[4];
  _QWORD v1082[4];
  _QWORD v1083[4];
  _QWORD v1084[4];
  _QWORD v1085[4];
  _QWORD v1086[4];
  _QWORD v1087[4];
  _QWORD v1088[4];
  _QWORD v1089[4];
  _QWORD v1090[4];
  _QWORD v1091[4];
  _QWORD v1092[4];
  _QWORD v1093[4];
  _QWORD v1094[4];
  _QWORD v1095[4];
  _QWORD v1096[4];
  _QWORD v1097[4];
  _QWORD v1098[4];
  _QWORD v1099[4];
  _QWORD v1100[4];
  _QWORD v1101[4];
  _QWORD v1102[4];
  _QWORD v1103[4];
  _QWORD v1104[4];
  _QWORD v1105[4];
  _QWORD v1106[4];
  _QWORD v1107[4];
  _QWORD v1108[4];
  _QWORD v1109[4];
  _QWORD v1110[4];
  _QWORD v1111[4];
  _QWORD v1112[4];
  _QWORD v1113[4];
  _QWORD v1114[4];
  _QWORD v1115[4];
  _QWORD v1116[4];
  _QWORD v1117[4];
  _QWORD v1118[4];
  _QWORD v1119[4];
  _QWORD v1120[4];
  _QWORD v1121[4];
  _QWORD v1122[4];
  _QWORD v1123[4];
  _QWORD v1124[4];
  _QWORD v1125[4];
  _QWORD v1126[4];
  _QWORD v1127[4];
  _QWORD v1128[4];
  _QWORD v1129[4];
  _QWORD v1130[4];
  _QWORD v1131[4];
  _QWORD v1132[4];
  _QWORD v1133[4];
  _QWORD v1134[4];
  _QWORD v1135[4];
  _QWORD v1136[4];
  _QWORD v1137[4];
  _QWORD v1138[4];
  _QWORD v1139[4];
  _QWORD v1140[4];
  _QWORD v1141[4];
  _QWORD v1142[4];
  _QWORD v1143[4];

  MEMORY[0x24BDAC7A8](a1);
  sub_2420797C0(&qword_254399938);
  v1 = sub_24207F538();
  *(_OWORD *)(v1 + 16) = xmmword_242150DA0;
  static Catalog.Resource.LLM.Model.AFMTextInstruct3BBase()(v1);
  v2 = v1143[3];
  sub_24210541C(v1143);
  *(_QWORD *)(v1 + 56) = v2;
  sub_2421054C0();
  *(_QWORD *)(v1 + 64) = v3;
  v4 = sub_24210546C();
  v5 = sub_2421053D0((uint64_t)v4);
  static Catalog.Resource.Tokenizer.AFMTextInstructEnglish49k()(v1142, v5);
  v6 = v1142[3];
  sub_24210541C(v1142);
  *(_QWORD *)(v1 + 96) = v6;
  sub_2421054C0();
  *(_QWORD *)(v1 + 104) = v7;
  v8 = sub_24210546C();
  sub_2421053D0((uint64_t)v8);
  static Catalog.Resource.DisabledUseCaseList.All()();
  v9 = v1141[3];
  sub_24210541C(v1141);
  *(_QWORD *)(v1 + 136) = v9;
  sub_2421054C0();
  *(_QWORD *)(v1 + 144) = v10;
  v11 = sub_24210546C();
  sub_2421053D0((uint64_t)v11);
  static Catalog.Resource.GenerativeFunctionOverrides.All()();
  v12 = v1140[3];
  sub_24210541C(v1140);
  *(_QWORD *)(v1 + 176) = v12;
  sub_2421054C0();
  *(_QWORD *)(v1 + 184) = v13;
  v14 = sub_24210546C();
  sub_2421053D0((uint64_t)v14);
  static Catalog.Resource.ModelConfigurationReplacement.All()();
  v15 = v1139[3];
  sub_24210541C(v1139);
  *(_QWORD *)(v1 + 216) = v15;
  sub_2421054C0();
  *(_QWORD *)(v1 + 224) = v16;
  v17 = sub_24210546C();
  sub_2421053D0((uint64_t)v17);
  static Catalog.Resource.Diffusion.Adapter.Animation()();
  v18 = v1138[3];
  sub_24210541C(v1138);
  *(_QWORD *)(v1 + 256) = v18;
  sub_2421054C0();
  *(_QWORD *)(v1 + 264) = v19;
  v20 = sub_24210546C();
  v21 = sub_2421053D0((uint64_t)v20);
  static Catalog.Resource.LLM.DraftModel.AnswerSynthesis()(v21);
  v22 = v1137[3];
  sub_24210541C(v1137);
  *(_QWORD *)(v1 + 296) = v22;
  sub_2421054C0();
  *(_QWORD *)(v1 + 304) = v23;
  v24 = sub_24210546C();
  v25 = sub_2421053D0((uint64_t)v24);
  static Catalog.Resource.LLM.Adapter.AnswerSynthesis()(v25);
  v26 = v1136[3];
  sub_24210541C(v1136);
  *(_QWORD *)(v1 + 336) = v26;
  sub_2421054C0();
  *(_QWORD *)(v1 + 344) = v27;
  v28 = sub_24210546C();
  v29 = sub_2421053D0((uint64_t)v28);
  static Catalog.Resource.LLM.DraftModel.AnswerSynthesisServer()(v29);
  v30 = v1135[3];
  sub_24210541C(v1135);
  *(_QWORD *)(v1 + 376) = v30;
  sub_2421054C0();
  *(_QWORD *)(v1 + 384) = v31;
  v32 = sub_24210546C();
  v33 = sub_2421053D0((uint64_t)v32);
  static Catalog.Resource.LLM.Adapter.AnswerSynthesisServer()(v33);
  v34 = v1134[3];
  sub_24210541C(v1134);
  *(_QWORD *)(v1 + 416) = v34;
  sub_242105750();
  *(_QWORD *)(v1 + 424) = v35;
  v36 = sub_24210546C();
  sub_2421053D0((uint64_t)v36);
  static Catalog.Resource.LLM.ServerConfiguration.AnswerSynthesisServer()();
  v37 = v1133[3];
  sub_24210541C(v1133);
  *(_QWORD *)(v1 + 456) = v37;
  sub_2421054C0();
  *(_QWORD *)(v1 + 464) = v38;
  v39 = sub_24210546C();
  v40 = sub_2421053D0((uint64_t)v39);
  static Catalog.Resource.LLM.DraftModel.AutonamingMessages()(v40);
  v41 = v1132[3];
  sub_24210541C(v1132);
  *(_QWORD *)(v1 + 496) = v41;
  sub_2421054C0();
  *(_QWORD *)(v1 + 504) = v42;
  v43 = sub_24210546C();
  v44 = sub_2421053D0((uint64_t)v43);
  static Catalog.Resource.LLM.Adapter.AutonamingMessages()(v44);
  v45 = v1131[3];
  sub_24210541C(v1131);
  *(_QWORD *)(v1 + 536) = v45;
  sub_2421054C0();
  *(_QWORD *)(v1 + 544) = v46;
  v47 = sub_24210546C();
  v48 = sub_2421053D0((uint64_t)v47);
  static Catalog.Resource.LLM.Adapter.BaseAdapter()(v48);
  v49 = v1130[3];
  sub_24210541C(v1130);
  *(_QWORD *)(v1 + 576) = v49;
  sub_242105750();
  *(_QWORD *)(v1 + 584) = v50;
  v51 = sub_24210546C();
  v52 = sub_2421053D0((uint64_t)v51);
  static Catalog.Resource.LLM.DraftModel.BulletsTransform()(v52);
  v53 = v1129[3];
  sub_24210541C(v1129);
  *(_QWORD *)(v1 + 616) = v53;
  sub_2421054C0();
  *(_QWORD *)(v1 + 624) = v54;
  v55 = sub_24210546C();
  v56 = sub_2421053D0((uint64_t)v55);
  static Catalog.Resource.LLM.Adapter.BulletsTransform()(v56);
  v57 = v1128[3];
  sub_24210541C(v1128);
  *(_QWORD *)(v1 + 656) = v57;
  sub_2421054C0();
  *(_QWORD *)(v1 + 664) = v58;
  v59 = sub_24210546C();
  sub_2421053D0((uint64_t)v59);
  static Catalog.Resource.TokenInputDenyList.CodeIntelligenceBaseInputDenyList()();
  v60 = v1127[3];
  sub_24210541C(v1127);
  *(_QWORD *)(v1 + 696) = v60;
  sub_2421054C0();
  *(_QWORD *)(v1 + 704) = v61;
  v62 = sub_24210546C();
  sub_2421053D0((uint64_t)v62);
  static Catalog.Resource.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList()();
  v63 = v1126[3];
  sub_24210541C(v1126);
  *(_QWORD *)(v1 + 736) = v63;
  sub_2421054C0();
  *(_QWORD *)(v1 + 744) = v64;
  v65 = sub_24210546C();
  sub_2421053D0((uint64_t)v65);
  static Catalog.Resource.LLM.DraftModel.CodeLM()(v66);
  v67 = v1125[3];
  sub_24210541C(v1125);
  *(_QWORD *)(v1 + 776) = v67;
  sub_2421054C0();
  *(_QWORD *)(v1 + 784) = v68;
  v69 = sub_24210546C();
  v70 = sub_2421053D0((uint64_t)v69);
  static Catalog.Resource.LLM.Model.CodeLM()(v70);
  v71 = v1124[3];
  sub_24210541C(v1124);
  *(_QWORD *)(v1 + 816) = v71;
  sub_2421054C0();
  *(_QWORD *)(v1 + 824) = v72;
  v73 = sub_24210546C();
  v74 = sub_2421053D0((uint64_t)v73);
  static Catalog.Resource.LLM.Model.CodeLMExperimental()(v74);
  v75 = v1123[3];
  sub_24210541C(v1123);
  *(_QWORD *)(v1 + 856) = v75;
  sub_2421054C0();
  *(_QWORD *)(v1 + 864) = v76;
  v77 = sub_24210546C();
  v78 = sub_2421053D0((uint64_t)v77);
  static Catalog.Resource.LLM.DraftModel.CodeLMLargeV1()(v1122, v78);
  v79 = v1122[3];
  sub_24210541C(v1122);
  *(_QWORD *)(v1 + 896) = v79;
  sub_2421054C0();
  *(_QWORD *)(v1 + 904) = v80;
  v81 = sub_24210546C();
  v82 = sub_2421053D0((uint64_t)v81);
  static Catalog.Resource.LLM.Model.CodeLMLargeV1()(v82);
  v83 = v1121[3];
  sub_24210541C(v1121);
  *(_QWORD *)(v1 + 936) = v83;
  sub_2421054C0();
  *(_QWORD *)(v1 + 944) = v84;
  v85 = sub_24210546C();
  v86 = sub_2421053D0((uint64_t)v85);
  static Catalog.Resource.Tokenizer.CodeLMLargeV1Tokenizer()(v1120, v86);
  v87 = v1120[3];
  sub_24210541C(v1120);
  *(_QWORD *)(v1 + 976) = v87;
  sub_2421054C0();
  *(_QWORD *)(v1 + 984) = v88;
  v89 = sub_24210546C();
  v90 = sub_2421053D0((uint64_t)v89);
  static Catalog.Resource.LLM.DraftModel.CodeLMLargeV2()(v1119, v90);
  v91 = v1119[3];
  sub_24210541C(v1119);
  *(_QWORD *)(v1 + 1016) = v91;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1024) = v92;
  v93 = sub_24210546C();
  v94 = sub_2421053D0((uint64_t)v93);
  static Catalog.Resource.LLM.Model.CodeLMLargeV2()(v94);
  v95 = v1118[3];
  sub_24210541C(v1118);
  *(_QWORD *)(v1 + 1056) = v95;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1064) = v96;
  v97 = sub_24210546C();
  v98 = sub_2421053D0((uint64_t)v97);
  static Catalog.Resource.Tokenizer.CodeLMLargeV2Tokenizer()(v1117, v98);
  v99 = v1117[3];
  sub_24210541C(v1117);
  *(_QWORD *)(v1 + 1096) = v99;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1104) = v100;
  v101 = sub_24210546C();
  v102 = sub_2421053D0((uint64_t)v101);
  static Catalog.Resource.LLM.DraftModel.CodeLMLargeV3()(v1116, v102);
  v103 = v1116[3];
  sub_24210541C(v1116);
  *(_QWORD *)(v1 + 1136) = v103;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1144) = v104;
  v105 = sub_24210546C();
  v106 = sub_2421053D0((uint64_t)v105);
  static Catalog.Resource.LLM.Model.CodeLMLargeV3()(v106);
  v107 = v1115[3];
  sub_24210541C(v1115);
  *(_QWORD *)(v1 + 1176) = v107;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1184) = v108;
  v109 = sub_24210546C();
  v110 = sub_2421053D0((uint64_t)v109);
  static Catalog.Resource.Tokenizer.CodeLMLargeV3Tokenizer()(v1114, v110);
  v111 = v1114[3];
  sub_24210541C(v1114);
  *(_QWORD *)(v1 + 1216) = v111;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1224) = v112;
  v113 = sub_24210546C();
  v114 = sub_2421053D0((uint64_t)v113);
  static Catalog.Resource.LLM.Model.CodeLMSafetyGuardrail()(v114);
  v115 = v1113[3];
  sub_24210541C(v1113);
  *(_QWORD *)(v1 + 1256) = v115;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1264) = v116;
  v117 = sub_24210546C();
  v118 = sub_2421053D0((uint64_t)v117);
  static Catalog.Resource.Tokenizer.CodeLMSafetyGuardrailTokenizer()(v1112, v118);
  v119 = v1112[3];
  sub_24210541C(v1112);
  *(_QWORD *)(v1 + 1296) = v119;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1304) = v120;
  v121 = sub_24210546C();
  v122 = sub_2421053D0((uint64_t)v121);
  static Catalog.Resource.LLM.DraftModel.CodeLMSmallV1()(v1111, v122);
  v123 = v1111[3];
  sub_24210541C(v1111);
  *(_QWORD *)(v1 + 1336) = v123;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1344) = v124;
  v125 = sub_24210546C();
  v126 = sub_2421053D0((uint64_t)v125);
  static Catalog.Resource.LLM.Model.CodeLMSmallV1()(v126);
  v127 = v1110[3];
  sub_24210541C(v1110);
  *(_QWORD *)(v1 + 1376) = v127;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1384) = v128;
  v129 = sub_24210546C();
  v130 = sub_2421053D0((uint64_t)v129);
  static Catalog.Resource.Tokenizer.CodeLMSmallV1Tokenizer()(v1109, v130);
  v131 = v1109[3];
  sub_24210541C(v1109);
  *(_QWORD *)(v1 + 1416) = v131;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1424) = v132;
  v133 = sub_24210546C();
  v134 = sub_2421053D0((uint64_t)v133);
  static Catalog.Resource.LLM.DraftModel.CodeLMSmallV2()(v1108, v134);
  v135 = v1108[3];
  sub_24210541C(v1108);
  *(_QWORD *)(v1 + 1456) = v135;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1464) = v136;
  v137 = sub_24210546C();
  v138 = sub_2421053D0((uint64_t)v137);
  static Catalog.Resource.LLM.Model.CodeLMSmallV2()(v138);
  v139 = v1107[3];
  sub_24210541C(v1107);
  *(_QWORD *)(v1 + 1496) = v139;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1504) = v140;
  v141 = sub_24210546C();
  v142 = sub_2421053D0((uint64_t)v141);
  static Catalog.Resource.Tokenizer.CodeLMSmallV2Tokenizer()(v1106, v142);
  v143 = v1106[3];
  sub_24210541C(v1106);
  *(_QWORD *)(v1 + 1536) = v143;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1544) = v144;
  v145 = sub_24210546C();
  v146 = sub_2421053D0((uint64_t)v145);
  static Catalog.Resource.LLM.DraftModel.CodeLMSmallV3()(v1105, v146);
  v147 = v1105[3];
  sub_24210541C(v1105);
  *(_QWORD *)(v1 + 1576) = v147;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1584) = v148;
  v149 = sub_24210546C();
  v150 = sub_2421053D0((uint64_t)v149);
  static Catalog.Resource.LLM.Model.CodeLMSmallV3()(v150);
  v151 = v1104[3];
  sub_24210541C(v1104);
  *(_QWORD *)(v1 + 1616) = v151;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1624) = v152;
  v153 = sub_24210546C();
  v154 = sub_2421053D0((uint64_t)v153);
  static Catalog.Resource.Tokenizer.CodeLMSmallV3Tokenizer()(v1103, v154);
  v155 = v1103[3];
  sub_24210541C(v1103);
  *(_QWORD *)(v1 + 1656) = v155;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1664) = v156;
  v157 = sub_24210546C();
  v158 = sub_2421053D0((uint64_t)v157);
  static Catalog.Resource.Tokenizer.CodeLMTokenizer()(v1102, v158);
  v159 = v1102[3];
  sub_24210541C(v1102);
  *(_QWORD *)(v1 + 1696) = v159;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1704) = v160;
  v161 = sub_24210546C();
  v162 = sub_2421053D0((uint64_t)v161);
  static Catalog.Resource.Tokenizer.CodeLMTokenizerExperimental()(v1101, v162);
  v163 = v1101[3];
  sub_24210541C(v1101);
  *(_QWORD *)(v1 + 1736) = v163;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1744) = v164;
  v165 = sub_24210546C();
  v166 = sub_2421053D0((uint64_t)v165);
  static Catalog.Resource.Tokenizer.CodeLMTokenizerV2()(v1100, v166);
  v167 = v1100[3];
  sub_24210541C(v1100);
  *(_QWORD *)(v1 + 1776) = v167;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1784) = v168;
  v169 = sub_24210546C();
  v170 = sub_2421053D0((uint64_t)v169);
  static Catalog.Resource.Tokenizer.CodeLMTokenizerV3()(v1099, v170);
  v171 = v1099[3];
  sub_24210541C(v1099);
  *(_QWORD *)(v1 + 1816) = v171;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1824) = v172;
  v173 = sub_24210546C();
  v174 = sub_2421053D0((uint64_t)v173);
  static Catalog.Resource.Tokenizer.CodeLMTokenizerV4()(v1098, v174);
  v175 = v1098[3];
  sub_24210541C(v1098);
  *(_QWORD *)(v1 + 1856) = v175;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1864) = v176;
  v177 = sub_24210546C();
  sub_2421053D0((uint64_t)v177);
  static Catalog.Resource.LLM.DraftModel.CodeLMV1ANE3B()(v178);
  v179 = v1097[3];
  sub_24210541C(v1097);
  *(_QWORD *)(v1 + 1896) = v179;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1904) = v180;
  v181 = sub_24210546C();
  v182 = sub_2421053D0((uint64_t)v181);
  static Catalog.Resource.LLM.Model.CodeLMV1ANE3B()(v182);
  v183 = v1096[3];
  sub_24210541C(v1096);
  *(_QWORD *)(v1 + 1936) = v183;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1944) = v184;
  v185 = sub_24210546C();
  v186 = sub_2421053D0((uint64_t)v185);
  static Catalog.Resource.Tokenizer.CodeLMV1ANE3BTokenizer()(v1095, v186);
  v187 = v1095[3];
  sub_24210541C(v1095);
  *(_QWORD *)(v1 + 1976) = v187;
  sub_2421054C0();
  *(_QWORD *)(v1 + 1984) = v188;
  v189 = sub_24210546C();
  v190 = sub_2421053D0((uint64_t)v189);
  static Catalog.Resource.LLM.Model.CodeLMV2()(v190);
  v191 = v1094[3];
  sub_24210541C(v1094);
  *(_QWORD *)(v1 + 2016) = v191;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2024) = v192;
  v193 = sub_24210546C();
  v194 = sub_2421053D0((uint64_t)v193);
  static Catalog.Resource.LLM.Model.CodeLMV3()(v194);
  v195 = v1093[3];
  sub_24210541C(v1093);
  *(_QWORD *)(v1 + 2056) = v195;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2064) = v196;
  v197 = sub_24210546C();
  v198 = sub_2421053D0((uint64_t)v197);
  static Catalog.Resource.LLM.Model.CodeLMV4()(v198);
  v199 = v1092[3];
  sub_24210541C(v1092);
  *(_QWORD *)(v1 + 2096) = v199;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2104) = v200;
  v201 = sub_24210546C();
  v202 = sub_2421053D0((uint64_t)v201);
  static Catalog.Resource.LLM.Model.CodeSafetyGuardrail()(v202);
  v203 = v1091[3];
  sub_24210541C(v1091);
  *(_QWORD *)(v1 + 2136) = v203;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2144) = v204;
  v205 = sub_24210546C();
  v206 = sub_2421053D0((uint64_t)v205);
  static Catalog.Resource.Tokenizer.CodeSafetyGuardrailTokenizer()(v1090, v206);
  v207 = v1090[3];
  sub_24210541C(v1090);
  *(_QWORD *)(v1 + 2176) = v207;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2184) = v208;
  v209 = sub_24210546C();
  v210 = sub_2421053D0((uint64_t)v209);
  static Catalog.Resource.LLM.DraftModel.ConciseTone()(v210);
  v211 = v1089[3];
  sub_24210541C(v1089);
  *(_QWORD *)(v1 + 2216) = v211;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2224) = v212;
  v213 = sub_24210546C();
  v214 = sub_2421053D0((uint64_t)v213);
  static Catalog.Resource.LLM.Adapter.ConciseTone()(v214);
  v215 = v1088[3];
  sub_24210541C(v1088);
  *(_QWORD *)(v1 + 2256) = v215;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2264) = v216;
  v217 = sub_24210546C();
  sub_2421053D0((uint64_t)v217);
  static Catalog.Resource.ImageFilter.Conditioning()((uint64_t)v1087);
  v218 = v1087[3];
  sub_24210541C(v1087);
  *(_QWORD *)(v1 + 2296) = v218;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2304) = v219;
  v220 = sub_24210546C();
  sub_2421053D0((uint64_t)v220);
  static Catalog.Resource.Diffusion.Adapter.Emoji()();
  v221 = v1086[3];
  sub_24210541C(v1086);
  *(_QWORD *)(v1 + 2336) = v221;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2344) = v222;
  v223 = sub_24210546C();
  sub_2421053D0((uint64_t)v223);
  static Catalog.Resource.ImageFilter.Face2Word()((uint64_t)v1085);
  v224 = v1085[3];
  sub_24210541C(v1085);
  *(_QWORD *)(v1 + 2376) = v224;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2384) = v225;
  v226 = sub_24210546C();
  v227 = sub_2421053D0((uint64_t)v226);
  static Catalog.Resource.LLM.DraftModel.FactualConsistencyClassifier()(v227);
  v228 = v1084[3];
  sub_24210541C(v1084);
  *(_QWORD *)(v1 + 2416) = v228;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2424) = v229;
  v230 = sub_24210546C();
  v231 = sub_2421053D0((uint64_t)v230);
  static Catalog.Resource.LLM.Adapter.FactualConsistencyClassifier()(v231);
  v232 = v1083[3];
  sub_24210541C(v1083);
  *(_QWORD *)(v1 + 2456) = v232;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2464) = v233;
  v234 = sub_24210546C();
  sub_2421053D0((uint64_t)v234);
  static Catalog.Resource.ImageSegmenter.ForegroundBackgroundSegmenter()((uint64_t)v1082);
  v235 = v1082[3];
  sub_24210541C(v1082);
  *(_QWORD *)(v1 + 2496) = v235;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2504) = v236;
  v237 = sub_24210546C();
  v238 = sub_2421053D0((uint64_t)v237);
  static Catalog.Resource.LLM.DraftModel.FriendlyTone()(v238);
  v239 = v1081[3];
  sub_24210541C(v1081);
  *(_QWORD *)(v1 + 2536) = v239;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2544) = v240;
  v241 = sub_24210546C();
  v242 = sub_2421053D0((uint64_t)v241);
  static Catalog.Resource.LLM.Adapter.FriendlyTone()(v242);
  v243 = v1080[3];
  sub_24210541C(v1080);
  *(_QWORD *)(v1 + 2576) = v243;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2584) = v244;
  v245 = sub_24210546C();
  sub_2421053D0((uint64_t)v245);
  static Catalog.Resource.ImageMagicCleanUp.GenerativeEditsMagicCleanUp()();
  v246 = v1079[3];
  sub_24210541C(v1079);
  *(_QWORD *)(v1 + 2616) = v246;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2624) = v247;
  v248 = sub_24210546C();
  sub_2421053D0((uint64_t)v248);
  static Catalog.Resource.ImageScaler.GenerativePlaygroundsUpscaler()((uint64_t)v1078);
  v249 = v1078[3];
  sub_24210541C(v1078);
  *(_QWORD *)(v1 + 2656) = v249;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2664) = v250;
  v251 = sub_24210546C();
  sub_2421053D0((uint64_t)v251);
  static Catalog.Resource.HandwritingSynthesizer.HandwritingSynthesis()();
  v252 = v1077[3];
  sub_24210541C(v1077);
  *(_QWORD *)(v1 + 2696) = v252;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2704) = v253;
  v254 = sub_24210546C();
  sub_2421053D0((uint64_t)v254);
  static Catalog.Resource.ImageFilter.HolisticallyNestedEdgeDetector()((uint64_t)v1076);
  v255 = v1076[3];
  sub_24210541C(v1076);
  *(_QWORD *)(v1 + 2736) = v255;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2744) = v256;
  v257 = sub_24210546C();
  sub_2421053D0((uint64_t)v257);
  static Catalog.Resource.Diffusion.Adapter.Illustration()();
  v258 = v1075[3];
  sub_24210541C(v1075);
  *(_QWORD *)(v1 + 2776) = v258;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2784) = v259;
  v260 = sub_24210546C();
  v261 = sub_2421053D0((uint64_t)v260);
  static Catalog.Resource.LLM.Model.InstructServerBase()(v261);
  v262 = v1074[3];
  sub_24210541C(v1074);
  *(_QWORD *)(v1 + 2816) = v262;
  sub_242105750();
  *(_QWORD *)(v1 + 2824) = v263;
  v264 = sub_24210546C();
  sub_2421053D0((uint64_t)v264);
  static Catalog.Resource.LLM.ServerConfiguration.InstructServerBase()();
  v265 = v1073[3];
  sub_24210541C(v1073);
  *(_QWORD *)(v1 + 2856) = v265;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2864) = v266;
  v267 = sub_24210546C();
  v268 = sub_2421053D0((uint64_t)v267);
  static Catalog.Resource.Tokenizer.InstructServerTokenizer()(v1072, v268);
  v269 = v1072[3];
  sub_24210541C(v1072);
  *(_QWORD *)(v1 + 2896) = v269;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2904) = v270;
  v271 = sub_24210546C();
  v272 = sub_2421053D0((uint64_t)v271);
  static Catalog.Resource.LLM.DraftModel.MagicRewrite()(v272);
  v273 = v1071[3];
  sub_24210541C(v1071);
  *(_QWORD *)(v1 + 2936) = v273;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2944) = v274;
  v275 = sub_24210546C();
  v276 = sub_2421053D0((uint64_t)v275);
  static Catalog.Resource.LLM.Adapter.MagicRewrite()(v276);
  v277 = v1070[3];
  sub_24210541C(v1070);
  *(_QWORD *)(v1 + 2976) = v277;
  sub_2421054C0();
  *(_QWORD *)(v1 + 2984) = v278;
  v279 = sub_24210546C();
  v280 = sub_2421053D0((uint64_t)v279);
  static Catalog.Resource.LLM.DraftModel.MailReply()(v280);
  v281 = v1069[3];
  sub_24210541C(v1069);
  *(_QWORD *)(v1 + 3016) = v281;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3024) = v282;
  v283 = sub_24210546C();
  v284 = sub_2421053D0((uint64_t)v283);
  static Catalog.Resource.LLM.Adapter.MailReply()(v284);
  v285 = v1068[3];
  sub_24210541C(v1068);
  *(_QWORD *)(v1 + 3056) = v285;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3064) = v286;
  v287 = sub_24210546C();
  sub_2421053D0((uint64_t)v287);
  static Catalog.Resource.TokenInputDenyList.MailReplyLongFormBasicInputDenyList()();
  v288 = v1067[3];
  sub_24210541C(v1067);
  *(_QWORD *)(v1 + 3096) = v288;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3104) = v289;
  v290 = sub_24210546C();
  sub_2421053D0((uint64_t)v290);
  static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList()();
  v291 = v1066[3];
  sub_24210541C(v1066);
  *(_QWORD *)(v1 + 3136) = v291;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3144) = v292;
  v293 = sub_24210546C();
  sub_2421053D0((uint64_t)v293);
  static Catalog.Resource.TokenInputDenyList.MailReplyLongFormQAInputDenyList()();
  v294 = v1065[3];
  sub_24210541C(v1065);
  *(_QWORD *)(v1 + 3176) = v294;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3184) = v295;
  v296 = sub_24210546C();
  sub_2421053D0((uint64_t)v296);
  static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList()();
  v297 = v1064[3];
  sub_24210541C(v1064);
  *(_QWORD *)(v1 + 3216) = v297;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3224) = v298;
  v299 = sub_24210546C();
  sub_2421053D0((uint64_t)v299);
  static Catalog.Resource.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList()();
  v300 = v1063[3];
  sub_24210541C(v1063);
  *(_QWORD *)(v1 + 3256) = v300;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3264) = v301;
  v302 = sub_24210546C();
  sub_2421053D0((uint64_t)v302);
  static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList()();
  v303 = v1062[3];
  sub_24210541C(v1062);
  *(_QWORD *)(v1 + 3296) = v303;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3304) = v304;
  v305 = sub_24210546C();
  sub_2421053D0((uint64_t)v305);
  static Catalog.Resource.TokenInputDenyList.MailReplySnippetInputDenyList()();
  v306 = v1061[3];
  sub_24210541C(v1061);
  *(_QWORD *)(v1 + 3336) = v306;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3344) = v307;
  v308 = sub_24210546C();
  sub_2421053D0((uint64_t)v308);
  static Catalog.Resource.TokenOutputDenyList.MailReplySnippetOutputDenyList()();
  v309 = v1060[3];
  sub_24210541C(v1060);
  *(_QWORD *)(v1 + 3376) = v309;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3384) = v310;
  v311 = sub_24210546C();
  v312 = sub_2421053D0((uint64_t)v311);
  static Catalog.Resource.LLM.DraftModel.MessagesReply()(v312);
  v313 = v1059[3];
  sub_24210541C(v1059);
  *(_QWORD *)(v1 + 3416) = v313;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3424) = v314;
  v315 = sub_24210546C();
  v316 = sub_2421053D0((uint64_t)v315);
  static Catalog.Resource.LLM.Adapter.MessagesReply()(v316);
  v317 = v1058[3];
  sub_24210541C(v1058);
  *(_QWORD *)(v1 + 3456) = v317;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3464) = v318;
  v319 = sub_24210546C();
  sub_2421053D0((uint64_t)v319);
  static Catalog.Resource.TokenInputDenyList.MessagesReplyBaseInputDenyList()();
  v320 = v1057[3];
  sub_24210541C(v1057);
  *(_QWORD *)(v1 + 3496) = v320;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3504) = v321;
  v322 = sub_24210546C();
  sub_2421053D0((uint64_t)v322);
  static Catalog.Resource.TokenOutputDenyList.MessagesReplyBaseOutputDenyList()();
  v323 = v1056[3];
  sub_24210541C(v1056);
  *(_QWORD *)(v1 + 3536) = v323;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3544) = v324;
  v325 = sub_24210546C();
  v326 = sub_2421053D0((uint64_t)v325);
  static Catalog.Resource.LLM.Model.NLRouterBase()(v326);
  v327 = v1055[3];
  sub_24210541C(v1055);
  *(_QWORD *)(v1 + 3576) = v327;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3584) = v328;
  v329 = sub_24210546C();
  sub_2421053D0((uint64_t)v329);
  static Catalog.Resource.LLM.ServerConfiguration.NLRouterBase()();
  v330 = v1054[3];
  sub_24210541C(v1054);
  *(_QWORD *)(v1 + 3616) = v330;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3624) = v331;
  v332 = sub_24210546C();
  v333 = sub_2421053D0((uint64_t)v332);
  static Catalog.Resource.Tokenizer.NLRouterTokenizer()(v1053, v333);
  v334 = v1053[3];
  sub_24210541C(v1053);
  *(_QWORD *)(v1 + 3656) = v334;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3664) = v335;
  v336 = sub_24210546C();
  sub_2421053D0((uint64_t)v336);
  static Catalog.Resource.LLM.ServerConfiguration.OpenEndedTone()();
  v337 = v1052[3];
  sub_24210541C(v1052);
  *(_QWORD *)(v1 + 3696) = v337;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3704) = v338;
  v339 = sub_24210546C();
  sub_2421053D0((uint64_t)v339);
  static Catalog.Resource.Diffusion.Adapter.PersonalizedAnimation()();
  v340 = v1051[3];
  sub_24210541C(v1051);
  *(_QWORD *)(v1 + 3736) = v340;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3744) = v341;
  v342 = sub_24210546C();
  sub_2421053D0((uint64_t)v342);
  static Catalog.Resource.Diffusion.Adapter.PersonalizedEmoji()();
  v343 = v1050[3];
  sub_24210541C(v1050);
  *(_QWORD *)(v1 + 3776) = v343;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3784) = v344;
  v345 = sub_24210546C();
  sub_2421053D0((uint64_t)v345);
  static Catalog.Resource.Diffusion.Adapter.PersonalizedIllustration()();
  v346 = v1049[3];
  sub_24210541C(v1049);
  *(_QWORD *)(v1 + 3816) = v346;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3824) = v347;
  v348 = sub_24210546C();
  sub_2421053D0((uint64_t)v348);
  static Catalog.Resource.Diffusion.Adapter.PersonalizedScribble()();
  v349 = v1048[3];
  sub_24210541C(v1048);
  *(_QWORD *)(v1 + 3856) = v349;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3864) = v350;
  v351 = sub_24210546C();
  sub_2421053D0((uint64_t)v351);
  static Catalog.Resource.Diffusion.Adapter.PersonalizedSketch()();
  v352 = v1047[3];
  sub_24210541C(v1047);
  *(_QWORD *)(v1 + 3896) = v352;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3904) = v353;
  v354 = sub_24210546C();
  sub_2421053D0((uint64_t)v354);
  static Catalog.Resource.ImageInpainter.PhotosMagicClean()(v1046);
  v355 = v1046[3];
  sub_24210541C(v1046);
  *(_QWORD *)(v1 + 3936) = v355;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3944) = v356;
  v357 = sub_24210546C();
  v358 = sub_2421053D0((uint64_t)v357);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationAssetCuration()(v358);
  v359 = v1045[3];
  sub_24210541C(v1045);
  *(_QWORD *)(v1 + 3976) = v359;
  sub_2421054C0();
  *(_QWORD *)(v1 + 3984) = v360;
  v361 = sub_24210546C();
  v362 = sub_2421053D0((uint64_t)v361);
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationAssetCuration()(v362);
  v363 = v1044[3];
  sub_24210541C(v1044);
  *(_QWORD *)(v1 + 4016) = v363;
  sub_242105750();
  *(_QWORD *)(v1 + 4024) = v364;
  v365 = sub_24210546C();
  sub_2421053D0((uint64_t)v365);
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration()();
  v366 = v1043[3];
  sub_24210541C(v1043);
  *(_QWORD *)(v1 + 4056) = v366;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4064) = v367;
  v368 = sub_24210546C();
  v369 = sub_2421053D0((uint64_t)v368);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2()(v369);
  v370 = v1042[3];
  sub_24210541C(v1042);
  *(_QWORD *)(v1 + 4096) = v370;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4104) = v371;
  v372 = sub_24210546C();
  sub_2421053D0((uint64_t)v372);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2()(v373);
  v374 = v1041[3];
  sub_24210541C(v1041);
  *(_QWORD *)(v1 + 4136) = v374;
  sub_242105750();
  *(_QWORD *)(v1 + 4144) = v375;
  v376 = sub_24210546C();
  sub_2421053D0((uint64_t)v376);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2()();
  v377 = v1040[3];
  sub_24210541C(v1040);
  *(_QWORD *)(v1 + 4176) = v377;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4184) = v378;
  v379 = sub_24210546C();
  sub_2421053D0((uint64_t)v379);
  sub_242105840();
  static Catalog.Resource.LLM.Model.PhotosMemoriesCreationBase()(v380);
  v381 = v1039[3];
  sub_24210541C(v1039);
  *(_QWORD *)(v1 + 4216) = v381;
  sub_242105750();
  *(_QWORD *)(v1 + 4224) = v382;
  v383 = sub_24210546C();
  sub_2421053D0((uint64_t)v383);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationBase()();
  v384 = v1038[3];
  sub_24210541C(v1038);
  *(_QWORD *)(v1 + 4256) = v384;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4264) = v385;
  v386 = sub_24210546C();
  sub_2421053D0((uint64_t)v386);
  sub_242105840();
  static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList()();
  v387 = v1037[3];
  sub_24210541C(v1037);
  *(_QWORD *)(v1 + 4296) = v387;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4304) = v388;
  v389 = sub_24210546C();
  sub_2421053D0((uint64_t)v389);
  sub_242105840();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList()();
  v390 = v1036[3];
  sub_24210541C(v1036);
  *(_QWORD *)(v1 + 4336) = v390;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4344) = v391;
  v392 = sub_24210546C();
  sub_2421053D0((uint64_t)v392);
  sub_242105840();
  static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList()();
  v393 = v1035[3];
  sub_24210541C(v1035);
  *(_QWORD *)(v1 + 4376) = v393;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4384) = v394;
  v395 = sub_24210546C();
  sub_2421053D0((uint64_t)v395);
  sub_242105840();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList()();
  v396 = v1034[3];
  sub_24210541C(v1034);
  *(_QWORD *)(v1 + 4416) = v396;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4424) = v397;
  v398 = sub_24210546C();
  sub_2421053D0((uint64_t)v398);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits()(v399);
  v400 = v1033[3];
  sub_24210541C(v1033);
  *(_QWORD *)(v1 + 4456) = v400;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4464) = v401;
  v402 = sub_24210546C();
  sub_2421053D0((uint64_t)v402);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationGlobalTraits()(v403);
  v404 = v1032[3];
  sub_24210541C(v1032);
  *(_QWORD *)(v1 + 4496) = v404;
  sub_242105750();
  *(_QWORD *)(v1 + 4504) = v405;
  v406 = sub_24210546C();
  sub_2421053D0((uint64_t)v406);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits()();
  v407 = v1031[3];
  sub_24210541C(v1031);
  *(_QWORD *)(v1 + 4536) = v407;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4544) = v408;
  v409 = sub_24210546C();
  sub_2421053D0((uint64_t)v409);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2()(v410);
  v411 = v1030[3];
  sub_24210541C(v1030);
  *(_QWORD *)(v1 + 4576) = v411;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4584) = v412;
  v413 = sub_24210546C();
  sub_2421053D0((uint64_t)v413);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2()(v414);
  v415 = v1029[3];
  sub_24210541C(v1029);
  *(_QWORD *)(v1 + 4616) = v415;
  sub_242105750();
  *(_QWORD *)(v1 + 4624) = v416;
  v417 = sub_24210546C();
  sub_2421053D0((uint64_t)v417);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2()();
  v418 = v1028[3];
  sub_24210541C(v1028);
  *(_QWORD *)(v1 + 4656) = v418;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4664) = v419;
  v420 = sub_24210546C();
  sub_2421053D0((uint64_t)v420);
  sub_242105840();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList()();
  v421 = v1027[3];
  sub_24210541C(v1027);
  *(_QWORD *)(v1 + 4696) = v421;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4704) = v422;
  v423 = sub_24210546C();
  sub_2421053D0((uint64_t)v423);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding()(v424);
  v425 = v1026[3];
  sub_24210541C(v1026);
  *(_QWORD *)(v1 + 4736) = v425;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4744) = v426;
  v427 = sub_24210546C();
  sub_2421053D0((uint64_t)v427);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding()(v428);
  v429 = v1025[3];
  sub_24210541C(v1025);
  *(_QWORD *)(v1 + 4776) = v429;
  sub_242105750();
  *(_QWORD *)(v1 + 4784) = v430;
  v431 = sub_24210546C();
  sub_2421053D0((uint64_t)v431);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding()();
  v432 = v1024[3];
  sub_24210541C(v1024);
  *(_QWORD *)(v1 + 4816) = v432;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4824) = v433;
  v434 = sub_24210546C();
  sub_2421053D0((uint64_t)v434);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2()(v435);
  v436 = v1023[3];
  sub_24210541C(v1023);
  *(_QWORD *)(v1 + 4856) = v436;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4864) = v437;
  v438 = sub_24210546C();
  sub_2421053D0((uint64_t)v438);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()(v439);
  v440 = v1022[3];
  sub_24210541C(v1022);
  *(_QWORD *)(v1 + 4896) = v440;
  sub_242105750();
  *(_QWORD *)(v1 + 4904) = v441;
  v442 = sub_24210546C();
  sub_2421053D0((uint64_t)v442);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2()();
  v443 = v1021[3];
  sub_24210541C(v1021);
  *(_QWORD *)(v1 + 4936) = v443;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4944) = v444;
  v445 = sub_24210546C();
  sub_2421053D0((uint64_t)v445);
  sub_242105840();
  static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList()();
  v446 = v1020[3];
  sub_24210541C(v1020);
  *(_QWORD *)(v1 + 4976) = v446;
  sub_2421054C0();
  *(_QWORD *)(v1 + 4984) = v447;
  v448 = sub_24210546C();
  sub_2421053D0((uint64_t)v448);
  sub_242105840();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList()();
  v449 = v1019[3];
  sub_24210541C(v1019);
  *(_QWORD *)(v1 + 5016) = v449;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5024) = v450;
  v451 = sub_24210546C();
  sub_2421053D0((uint64_t)v451);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationStoryteller()(v452);
  v453 = v1018[3];
  sub_24210541C(v1018);
  *(_QWORD *)(v1 + 5056) = v453;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5064) = v454;
  v455 = sub_24210546C();
  sub_2421053D0((uint64_t)v455);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationStoryteller()(v456);
  v457 = v1017[3];
  sub_24210541C(v1017);
  *(_QWORD *)(v1 + 5096) = v457;
  sub_242105750();
  *(_QWORD *)(v1 + 5104) = v458;
  v459 = sub_24210546C();
  sub_2421053D0((uint64_t)v459);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller()();
  v460 = v1016[3];
  sub_24210541C(v1016);
  *(_QWORD *)(v1 + 5136) = v460;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5144) = v461;
  v462 = sub_24210546C();
  sub_2421053D0((uint64_t)v462);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2()(v463);
  v464 = v1015[3];
  sub_24210541C(v1015);
  *(_QWORD *)(v1 + 5176) = v464;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5184) = v465;
  v466 = sub_24210546C();
  sub_2421053D0((uint64_t)v466);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationStorytellerV2()(v467);
  v468 = v1014[3];
  sub_24210541C(v1014);
  *(_QWORD *)(v1 + 5216) = v468;
  sub_242105750();
  *(_QWORD *)(v1 + 5224) = v469;
  v470 = sub_24210546C();
  sub_2421053D0((uint64_t)v470);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2()();
  v471 = v1013[3];
  sub_24210541C(v1013);
  *(_QWORD *)(v1 + 5256) = v471;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5264) = v472;
  v473 = sub_24210546C();
  sub_2421053D0((uint64_t)v473);
  sub_242105840();
  static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList()();
  v474 = v1012[3];
  sub_24210541C(v1012);
  *(_QWORD *)(v1 + 5296) = v474;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5304) = v475;
  v476 = sub_24210546C();
  sub_2421053D0((uint64_t)v476);
  sub_242105840();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList()();
  v477 = v1011[3];
  sub_24210541C(v1011);
  *(_QWORD *)(v1 + 5336) = v477;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5344) = v478;
  v479 = sub_24210546C();
  sub_2421053D0((uint64_t)v479);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.Planner()(v480);
  v481 = v1010[3];
  sub_24210541C(v1010);
  *(_QWORD *)(v1 + 5376) = v481;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5384) = v482;
  v483 = sub_24210546C();
  sub_2421053D0((uint64_t)v483);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.Planner()(v484);
  v485 = v1009[3];
  sub_24210541C(v1009);
  *(_QWORD *)(v1 + 5416) = v485;
  sub_242105750();
  *(_QWORD *)(v1 + 5424) = v486;
  v487 = sub_24210546C();
  sub_2421053D0((uint64_t)v487);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.Planner()();
  v488 = v1008[3];
  sub_24210541C(v1008);
  *(_QWORD *)(v1 + 5456) = v488;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5464) = v489;
  v490 = sub_24210546C();
  sub_2421053D0((uint64_t)v490);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.PlannerV2()(v491);
  v492 = v1007[3];
  sub_24210541C(v1007);
  *(_QWORD *)(v1 + 5496) = v492;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5504) = v493;
  v494 = sub_24210546C();
  sub_2421053D0((uint64_t)v494);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PlannerV2()(v495);
  v496 = v1006[3];
  sub_24210541C(v1006);
  *(_QWORD *)(v1 + 5536) = v496;
  sub_242105750();
  *(_QWORD *)(v1 + 5544) = v497;
  v498 = sub_24210546C();
  sub_2421053D0((uint64_t)v498);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PlannerV2()();
  v499 = v1005[3];
  sub_24210541C(v1005);
  *(_QWORD *)(v1 + 5576) = v499;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5584) = v500;
  v501 = sub_24210546C();
  sub_2421053D0((uint64_t)v501);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.PlannerV3()(v502);
  v503 = v1004[3];
  sub_24210541C(v1004);
  *(_QWORD *)(v1 + 5616) = v503;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5624) = v504;
  v505 = sub_24210546C();
  sub_2421053D0((uint64_t)v505);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.PlannerV3()(v506);
  v507 = v1003[3];
  sub_24210541C(v1003);
  *(_QWORD *)(v1 + 5656) = v507;
  sub_242105750();
  *(_QWORD *)(v1 + 5664) = v508;
  v509 = sub_24210546C();
  sub_2421053D0((uint64_t)v509);
  sub_242105840();
  static Catalog.Resource.LLM.ServerConfiguration.PlannerV3()();
  v510 = v1002[3];
  sub_24210541C(v1002);
  *(_QWORD *)(v1 + 5696) = v510;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5704) = v511;
  v512 = sub_24210546C();
  sub_2421053D0((uint64_t)v512);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.ProfessionalTone()(v513);
  v514 = v1001[3];
  sub_24210541C(v1001);
  *(_QWORD *)(v1 + 5736) = v514;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5744) = v515;
  v516 = sub_24210546C();
  sub_2421053D0((uint64_t)v516);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.ProfessionalTone()(v517);
  v518 = v1000[3];
  sub_24210541C(v1000);
  *(_QWORD *)(v1 + 5776) = v518;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5784) = v519;
  v520 = sub_24210546C();
  sub_2421053D0((uint64_t)v520);
  sub_242105840();
  static Catalog.Resource.LLM.DraftModel.ProofreadingReview()(v521);
  v522 = v999[3];
  sub_24210541C(v999);
  *(_QWORD *)(v1 + 5816) = v522;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5824) = v523;
  v524 = sub_24210546C();
  sub_2421053D0((uint64_t)v524);
  sub_242105840();
  static Catalog.Resource.LLM.Adapter.ProofreadingReview()(v525);
  v526 = v998[3];
  sub_24210541C(v998);
  *(_QWORD *)(v1 + 5856) = v526;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5864) = v527;
  v528 = sub_24210546C();
  sub_2421053D0((uint64_t)v528);
  sub_242105840();
  static Catalog.Resource.Diffusion.Adapter.Refiner()();
  v529 = v997[3];
  sub_24210541C(v997);
  *(_QWORD *)(v1 + 5896) = v529;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5904) = v530;
  v531 = sub_24210546C();
  v532 = sub_2421053D0((uint64_t)v531);
  static Catalog.Resource.LLM.DraftModel.ResponseGeneration()(v532);
  v533 = v996[3];
  sub_24210541C(v996);
  *(_QWORD *)(v1 + 5936) = v533;
  sub_2421054C0();
  *(_QWORD *)(v1 + 5944) = v534;
  v535 = sub_24210546C();
  v536 = sub_2421053D0((uint64_t)v535);
  static Catalog.Resource.LLM.Adapter.ResponseGeneration()(v536);
  v537 = v995[3];
  sub_24210541C(v995);
  *(_QWORD *)(v1 + 5976) = v537;
  sub_242105750();
  *(_QWORD *)(v1 + 5984) = v538;
  v539 = sub_24210546C();
  sub_2421053D0((uint64_t)v539);
  static Catalog.Resource.LLM.ServerConfiguration.ResponseGeneration()();
  v540 = v994[3];
  sub_24210541C(v994);
  *(_QWORD *)(v1 + 6016) = v540;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6024) = v541;
  v542 = sub_24210546C();
  v543 = sub_2421053D0((uint64_t)v542);
  static Catalog.Resource.LLM.DraftModel.ResponseGenerationV2()(v543);
  v544 = v993[3];
  sub_24210541C(v993);
  *(_QWORD *)(v1 + 6056) = v544;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6064) = v545;
  v546 = sub_24210546C();
  v547 = sub_2421053D0((uint64_t)v546);
  static Catalog.Resource.LLM.Adapter.ResponseGenerationV2()(v547);
  v548 = v992[3];
  sub_24210541C(v992);
  *(_QWORD *)(v1 + 6096) = v548;
  sub_242105750();
  *(_QWORD *)(v1 + 6104) = v549;
  v550 = sub_24210546C();
  sub_2421053D0((uint64_t)v550);
  static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV2()();
  v551 = v991[3];
  sub_24210541C(v991);
  *(_QWORD *)(v1 + 6136) = v551;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6144) = v552;
  v553 = sub_24210546C();
  v554 = sub_2421053D0((uint64_t)v553);
  static Catalog.Resource.LLM.DraftModel.ResponseGenerationV3()(v554);
  v555 = v990[3];
  sub_24210541C(v990);
  *(_QWORD *)(v1 + 6176) = v555;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6184) = v556;
  v557 = sub_24210546C();
  v558 = sub_2421053D0((uint64_t)v557);
  static Catalog.Resource.LLM.Adapter.ResponseGenerationV3()(v558);
  v559 = v989[3];
  sub_24210541C(v989);
  *(_QWORD *)(v1 + 6216) = v559;
  sub_242105750();
  *(_QWORD *)(v1 + 6224) = v560;
  v561 = sub_24210546C();
  sub_2421053D0((uint64_t)v561);
  static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV3()();
  v562 = v988[3];
  sub_24210541C(v988);
  *(_QWORD *)(v1 + 6256) = v562;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6264) = v563;
  v564 = sub_24210546C();
  v565 = sub_2421053D0((uint64_t)v564);
  static Catalog.Resource.LLM.DraftModel.SafetyGuardrail()(v565);
  v566 = v987[3];
  sub_24210541C(v987);
  *(_QWORD *)(v1 + 6296) = v566;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6304) = v567;
  v568 = sub_24210546C();
  v569 = sub_2421053D0((uint64_t)v568);
  static Catalog.Resource.LLM.Adapter.SafetyGuardrail()(v569);
  v570 = v986[3];
  sub_24210541C(v986);
  *(_QWORD *)(v1 + 6336) = v570;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6344) = v571;
  v572 = sub_24210546C();
  v573 = sub_2421053D0((uint64_t)v572);
  static Catalog.Resource.LLM.Model.SafetyGuardrailLite()(v573);
  v574 = v985[3];
  sub_24210541C(v985);
  *(_QWORD *)(v1 + 6376) = v574;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6384) = v575;
  v576 = sub_24210546C();
  v577 = sub_2421053D0((uint64_t)v576);
  static Catalog.Resource.Tokenizer.SafetyGuardrailLiteTokenizer()(v984, v577);
  v578 = v984[3];
  sub_24210541C(v984);
  *(_QWORD *)(v1 + 6416) = v578;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6424) = v579;
  v580 = sub_24210546C();
  sub_2421053D0((uint64_t)v580);
  static Catalog.Resource.Diffusion.Adapter.Scribble()();
  v581 = v983[3];
  sub_24210541C(v983);
  *(_QWORD *)(v1 + 6456) = v581;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6464) = v582;
  v583 = sub_24210546C();
  v584 = sub_2421053D0((uint64_t)v583);
  static Catalog.Resource.LLM.DraftModel.SearchQueryUnderstandingOnDevice()(v584);
  v585 = v982[3];
  sub_24210541C(v982);
  *(_QWORD *)(v1 + 6496) = v585;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6504) = v586;
  v587 = sub_24210546C();
  v588 = sub_2421053D0((uint64_t)v587);
  static Catalog.Resource.LLM.Adapter.SearchQueryUnderstandingOnDevice()(v588);
  v589 = v981[3];
  sub_24210541C(v981);
  *(_QWORD *)(v1 + 6536) = v589;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6544) = v590;
  v591 = sub_24210546C();
  v592 = sub_2421053D0((uint64_t)v591);
  static Catalog.Resource.LLM.DraftModel.SearchQueryUnderstandingServer()(v592);
  v593 = v980[3];
  sub_24210541C(v980);
  *(_QWORD *)(v1 + 6576) = v593;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6584) = v594;
  v595 = sub_24210546C();
  v596 = sub_2421053D0((uint64_t)v595);
  static Catalog.Resource.LLM.Adapter.SearchQueryUnderstandingServer()(v596);
  v597 = v979[3];
  sub_24210541C(v979);
  *(_QWORD *)(v1 + 6616) = v597;
  sub_242105750();
  *(_QWORD *)(v1 + 6624) = v598;
  v599 = sub_24210546C();
  sub_2421053D0((uint64_t)v599);
  static Catalog.Resource.LLM.ServerConfiguration.SearchQueryUnderstandingServer()();
  v600 = v978[3];
  sub_24210541C(v978);
  *(_QWORD *)(v1 + 6656) = v600;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6664) = v601;
  v602 = sub_24210546C();
  v603 = sub_2421053D0((uint64_t)v602);
  static Catalog.Resource.LLM.DraftModel.ServerBulletsTransform()(v603);
  v604 = v977[3];
  sub_24210541C(v977);
  *(_QWORD *)(v1 + 6696) = v604;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6704) = v605;
  v606 = sub_24210546C();
  v607 = sub_2421053D0((uint64_t)v606);
  static Catalog.Resource.LLM.Adapter.ServerBulletsTransform()(v607);
  v608 = v976[3];
  sub_24210541C(v976);
  *(_QWORD *)(v1 + 6736) = v608;
  sub_242105750();
  *(_QWORD *)(v1 + 6744) = v609;
  v610 = sub_24210546C();
  sub_2421053D0((uint64_t)v610);
  static Catalog.Resource.LLM.ServerConfiguration.ServerBulletsTransform()();
  v611 = v975[3];
  sub_24210541C(v975);
  *(_QWORD *)(v1 + 6776) = v611;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6784) = v612;
  v613 = sub_24210546C();
  v614 = sub_2421053D0((uint64_t)v613);
  static Catalog.Resource.LLM.DraftModel.ServerConciseTone()(v614);
  v615 = v974[3];
  sub_24210541C(v974);
  *(_QWORD *)(v1 + 6816) = v615;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6824) = v616;
  v617 = sub_24210546C();
  v618 = sub_2421053D0((uint64_t)v617);
  static Catalog.Resource.LLM.Adapter.ServerConciseTone()(v618);
  v619 = v973[3];
  sub_24210541C(v973);
  *(_QWORD *)(v1 + 6856) = v619;
  sub_242105750();
  *(_QWORD *)(v1 + 6864) = v620;
  v621 = sub_24210546C();
  sub_2421053D0((uint64_t)v621);
  static Catalog.Resource.LLM.ServerConfiguration.ServerConciseTone()();
  v622 = v972[3];
  sub_24210541C(v972);
  *(_QWORD *)(v1 + 6896) = v622;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6904) = v623;
  v624 = sub_24210546C();
  v625 = sub_2421053D0((uint64_t)v624);
  static Catalog.Resource.LLM.DraftModel.ServerFriendlyTone()(v625);
  v626 = v971[3];
  sub_24210541C(v971);
  *(_QWORD *)(v1 + 6936) = v626;
  sub_2421054C0();
  *(_QWORD *)(v1 + 6944) = v627;
  v628 = sub_24210546C();
  v629 = sub_2421053D0((uint64_t)v628);
  static Catalog.Resource.LLM.Adapter.ServerFriendlyTone()(v629);
  v630 = v970[3];
  sub_24210541C(v970);
  *(_QWORD *)(v1 + 6976) = v630;
  sub_242105750();
  *(_QWORD *)(v1 + 6984) = v631;
  v632 = sub_24210546C();
  sub_2421053D0((uint64_t)v632);
  static Catalog.Resource.LLM.ServerConfiguration.ServerFriendlyTone()();
  v633 = v969[3];
  sub_24210541C(v969);
  *(_QWORD *)(v1 + 7016) = v633;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7024) = v634;
  v635 = sub_24210546C();
  v636 = sub_2421053D0((uint64_t)v635);
  static Catalog.Resource.LLM.DraftModel.ServerMagicRewrite()(v636);
  v637 = v968[3];
  sub_24210541C(v968);
  *(_QWORD *)(v1 + 7056) = v637;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7064) = v638;
  v639 = sub_24210546C();
  v640 = sub_2421053D0((uint64_t)v639);
  static Catalog.Resource.LLM.Adapter.ServerMagicRewrite()(v640);
  v641 = v967[3];
  sub_24210541C(v967);
  *(_QWORD *)(v1 + 7096) = v641;
  sub_242105750();
  *(_QWORD *)(v1 + 7104) = v642;
  v643 = sub_24210546C();
  sub_2421053D0((uint64_t)v643);
  static Catalog.Resource.LLM.ServerConfiguration.ServerMagicRewrite()();
  v644 = v966[3];
  sub_24210541C(v966);
  *(_QWORD *)(v1 + 7136) = v644;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7144) = v645;
  v646 = sub_24210546C();
  v647 = sub_2421053D0((uint64_t)v646);
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyLongFormBasic()(v647);
  v648 = v965[3];
  sub_24210541C(v965);
  *(_QWORD *)(v1 + 7176) = v648;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7184) = v649;
  v650 = sub_24210546C();
  v651 = sub_2421053D0((uint64_t)v650);
  static Catalog.Resource.LLM.Adapter.ServerMailReplyLongFormBasic()(v651);
  v652 = v964[3];
  sub_24210541C(v964);
  *(_QWORD *)(v1 + 7216) = v652;
  sub_242105750();
  *(_QWORD *)(v1 + 7224) = v653;
  v654 = sub_24210546C();
  sub_2421053D0((uint64_t)v654);
  static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormBasic()();
  v655 = v963[3];
  sub_24210541C(v963);
  *(_QWORD *)(v1 + 7256) = v655;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7264) = v656;
  v657 = sub_24210546C();
  v658 = sub_2421053D0((uint64_t)v657);
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyLongFormRewrite()(v658);
  v659 = v962[3];
  sub_24210541C(v962);
  *(_QWORD *)(v1 + 7296) = v659;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7304) = v660;
  v661 = sub_24210546C();
  v662 = sub_2421053D0((uint64_t)v661);
  static Catalog.Resource.LLM.Adapter.ServerMailReplyLongFormRewrite()(v662);
  v663 = v961[3];
  sub_24210541C(v961);
  *(_QWORD *)(v1 + 7336) = v663;
  sub_242105750();
  *(_QWORD *)(v1 + 7344) = v664;
  v665 = sub_24210546C();
  sub_2421053D0((uint64_t)v665);
  static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite()();
  v666 = v960[3];
  sub_24210541C(v960);
  *(_QWORD *)(v1 + 7376) = v666;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7384) = v667;
  v668 = sub_24210546C();
  v669 = sub_2421053D0((uint64_t)v668);
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyQA()(v669);
  v670 = v959[3];
  sub_24210541C(v959);
  *(_QWORD *)(v1 + 7416) = v670;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7424) = v671;
  v672 = sub_24210546C();
  v673 = sub_2421053D0((uint64_t)v672);
  static Catalog.Resource.LLM.Adapter.ServerMailReplyQA()(v673);
  v674 = v958[3];
  sub_24210541C(v958);
  *(_QWORD *)(v1 + 7456) = v674;
  sub_242105750();
  *(_QWORD *)(v1 + 7464) = v675;
  v676 = sub_24210546C();
  sub_2421053D0((uint64_t)v676);
  static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyQA()();
  v677 = v957[3];
  sub_24210541C(v957);
  *(_QWORD *)(v1 + 7496) = v677;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7504) = v678;
  v679 = sub_24210546C();
  v680 = sub_2421053D0((uint64_t)v679);
  static Catalog.Resource.LLM.DraftModel.ServerProfessionalTone()(v680);
  v681 = v956[3];
  sub_24210541C(v956);
  *(_QWORD *)(v1 + 7536) = v681;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7544) = v682;
  v683 = sub_24210546C();
  v684 = sub_2421053D0((uint64_t)v683);
  static Catalog.Resource.LLM.Adapter.ServerProfessionalTone()(v684);
  v685 = v955[3];
  sub_24210541C(v955);
  *(_QWORD *)(v1 + 7576) = v685;
  sub_242105750();
  *(_QWORD *)(v1 + 7584) = v686;
  v687 = sub_24210546C();
  sub_2421053D0((uint64_t)v687);
  static Catalog.Resource.LLM.ServerConfiguration.ServerProfessionalTone()();
  v688 = v954[3];
  sub_24210541C(v954);
  *(_QWORD *)(v1 + 7616) = v688;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7624) = v689;
  v690 = sub_24210546C();
  v691 = sub_2421053D0((uint64_t)v690);
  static Catalog.Resource.LLM.DraftModel.ServerProofreadingReview()(v691);
  v692 = v953[3];
  sub_24210541C(v953);
  *(_QWORD *)(v1 + 7656) = v692;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7664) = v693;
  v694 = sub_24210546C();
  v695 = sub_2421053D0((uint64_t)v694);
  static Catalog.Resource.LLM.Adapter.ServerProofreadingReview()(v695);
  v696 = v952[3];
  sub_24210541C(v952);
  *(_QWORD *)(v1 + 7696) = v696;
  sub_242105750();
  *(_QWORD *)(v1 + 7704) = v697;
  v698 = sub_24210546C();
  sub_2421053D0((uint64_t)v698);
  static Catalog.Resource.LLM.ServerConfiguration.ServerProofreadingReview()();
  v699 = v951[3];
  sub_24210541C(v951);
  *(_QWORD *)(v1 + 7736) = v699;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7744) = v700;
  v701 = sub_24210546C();
  v702 = sub_2421053D0((uint64_t)v701);
  static Catalog.Resource.LLM.DraftModel.ServerTablesTransform()(v702);
  v703 = v950[3];
  sub_24210541C(v950);
  *(_QWORD *)(v1 + 7776) = v703;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7784) = v704;
  v705 = sub_24210546C();
  v706 = sub_2421053D0((uint64_t)v705);
  static Catalog.Resource.LLM.Adapter.ServerTablesTransform()(v706);
  v707 = v949[3];
  sub_24210541C(v949);
  *(_QWORD *)(v1 + 7816) = v707;
  sub_242105750();
  *(_QWORD *)(v1 + 7824) = v708;
  v709 = sub_24210546C();
  sub_2421053D0((uint64_t)v709);
  static Catalog.Resource.LLM.ServerConfiguration.ServerTablesTransform()();
  v710 = v948[3];
  sub_24210541C(v948);
  *(_QWORD *)(v1 + 7856) = v710;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7864) = v711;
  v712 = sub_24210546C();
  v713 = sub_2421053D0((uint64_t)v712);
  static Catalog.Resource.LLM.DraftModel.ServerTakeawaysTransform()(v713);
  v714 = v947[3];
  sub_24210541C(v947);
  *(_QWORD *)(v1 + 7896) = v714;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7904) = v715;
  v716 = sub_24210546C();
  v717 = sub_2421053D0((uint64_t)v716);
  static Catalog.Resource.LLM.Adapter.ServerTakeawaysTransform()(v717);
  v718 = v946[3];
  sub_24210541C(v946);
  *(_QWORD *)(v1 + 7936) = v718;
  sub_242105750();
  *(_QWORD *)(v1 + 7944) = v719;
  v720 = sub_24210546C();
  sub_2421053D0((uint64_t)v720);
  static Catalog.Resource.LLM.ServerConfiguration.ServerTakeawaysTransform()();
  v721 = v945[3];
  sub_24210541C(v945);
  *(_QWORD *)(v1 + 7976) = v721;
  sub_2421054C0();
  *(_QWORD *)(v1 + 7984) = v722;
  v723 = sub_24210546C();
  v724 = sub_2421053D0((uint64_t)v723);
  static Catalog.Resource.LLM.DraftModel.ServerTextSummarizer()(v724);
  v725 = v944[3];
  sub_24210541C(v944);
  *(_QWORD *)(v1 + 8016) = v725;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8024) = v726;
  v727 = sub_24210546C();
  v728 = sub_2421053D0((uint64_t)v727);
  static Catalog.Resource.LLM.Adapter.ServerTextSummarizer()(v728);
  v729 = v943[3];
  sub_24210541C(v943);
  *(_QWORD *)(v1 + 8056) = v729;
  sub_242105750();
  *(_QWORD *)(v1 + 8064) = v730;
  v731 = sub_24210546C();
  sub_2421053D0((uint64_t)v731);
  static Catalog.Resource.LLM.ServerConfiguration.ServerTextSummarizer()();
  v732 = v942[3];
  sub_24210541C(v942);
  *(_QWORD *)(v1 + 8096) = v732;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8104) = v733;
  v734 = sub_24210546C();
  sub_2421053D0((uint64_t)v734);
  static Catalog.Resource.Diffusion.Adapter.Sketch()();
  v735 = v941[3];
  sub_24210541C(v941);
  *(_QWORD *)(v1 + 8136) = v735;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8144) = v736;
  v737 = sub_24210546C();
  sub_2421053D0((uint64_t)v737);
  static Catalog.Resource.Diffusion.Adapter.SkinToneEmoji()();
  v738 = v940[3];
  sub_24210541C(v940);
  *(_QWORD *)(v1 + 8176) = v738;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8184) = v739;
  v740 = sub_24210546C();
  v741 = sub_2421053D0((uint64_t)v740);
  static Catalog.Resource.LLM.DraftModel.Summarization()(v741);
  v742 = v939[3];
  sub_24210541C(v939);
  *(_QWORD *)(v1 + 8216) = v742;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8224) = v743;
  v744 = sub_24210546C();
  v745 = sub_2421053D0((uint64_t)v744);
  static Catalog.Resource.LLM.Adapter.Summarization()(v745);
  v746 = v938[3];
  sub_24210541C(v938);
  *(_QWORD *)(v1 + 8256) = v746;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8264) = v747;
  v748 = sub_24210546C();
  sub_2421053D0((uint64_t)v748);
  static Catalog.Resource.TokenInputDenyList.SummarizationKitBaseInputDenyList()();
  v749 = v937[3];
  sub_24210541C(v937);
  *(_QWORD *)(v1 + 8296) = v749;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8304) = v750;
  v751 = sub_24210546C();
  sub_2421053D0((uint64_t)v751);
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitBaseOutputDenyList()();
  v752 = v936[3];
  sub_24210541C(v936);
  *(_QWORD *)(v1 + 8336) = v752;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8344) = v753;
  v754 = sub_24210546C();
  sub_2421053D0((uint64_t)v754);
  static Catalog.Resource.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList()();
  v755 = v935[3];
  sub_24210541C(v935);
  *(_QWORD *)(v1 + 8376) = v755;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8384) = v756;
  v757 = sub_24210546C();
  sub_2421053D0((uint64_t)v757);
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList()();
  v758 = v934[3];
  sub_24210541C(v934);
  *(_QWORD *)(v1 + 8416) = v758;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8424) = v759;
  v760 = sub_24210546C();
  sub_2421053D0((uint64_t)v760);
  static Catalog.Resource.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList()();
  v761 = v933[3];
  sub_24210541C(v933);
  *(_QWORD *)(v1 + 8456) = v761;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8464) = v762;
  v763 = sub_24210546C();
  sub_2421053D0((uint64_t)v763);
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList()();
  v764 = v932[3];
  sub_24210541C(v932);
  *(_QWORD *)(v1 + 8496) = v764;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8504) = v765;
  v766 = sub_24210546C();
  sub_2421053D0((uint64_t)v766);
  static Catalog.Resource.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList()();
  v767 = v931[3];
  sub_24210541C(v931);
  *(_QWORD *)(v1 + 8536) = v767;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8544) = v768;
  v769 = sub_24210546C();
  sub_2421053D0((uint64_t)v769);
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList()();
  v770 = v930[3];
  sub_24210541C(v930);
  *(_QWORD *)(v1 + 8576) = v770;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8584) = v771;
  v772 = sub_24210546C();
  sub_2421053D0((uint64_t)v772);
  static Catalog.Resource.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList()();
  v773 = v929[3];
  sub_24210541C(v929);
  *(_QWORD *)(v1 + 8616) = v773;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8624) = v774;
  v775 = sub_24210546C();
  sub_2421053D0((uint64_t)v775);
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList()();
  v776 = v928[3];
  sub_24210541C(v928);
  *(_QWORD *)(v1 + 8656) = v776;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8664) = v777;
  v778 = sub_24210546C();
  v779 = sub_2421053D0((uint64_t)v778);
  static Catalog.Resource.LLM.Model.SummarizationTextSummarizerAjaxBase()(v779);
  v780 = v927[3];
  sub_24210541C(v927);
  *(_QWORD *)(v1 + 8696) = v780;
  sub_242105750();
  *(_QWORD *)(v1 + 8704) = v781;
  v782 = sub_24210546C();
  sub_2421053D0((uint64_t)v782);
  static Catalog.Resource.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase()();
  v783 = v926[3];
  sub_24210541C(v926);
  *(_QWORD *)(v1 + 8736) = v783;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8744) = v784;
  v785 = sub_24210546C();
  v786 = sub_2421053D0((uint64_t)v785);
  static Catalog.Resource.LLM.Model.SummarizationTextSummarizerBase()(v925, v786);
  v787 = v925[3];
  sub_24210541C(v925);
  *(_QWORD *)(v1 + 8776) = v787;
  sub_242105750();
  *(_QWORD *)(v1 + 8784) = v788;
  v789 = sub_24210546C();
  v790 = sub_2421053D0((uint64_t)v789);
  static Catalog.Resource.LLM.DraftModel.TablesTransform()(v790);
  v791 = v924[3];
  sub_24210541C(v924);
  *(_QWORD *)(v1 + 8816) = v791;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8824) = v792;
  v793 = sub_24210546C();
  v794 = sub_2421053D0((uint64_t)v793);
  static Catalog.Resource.LLM.Adapter.TablesTransform()(v794);
  v795 = v923[3];
  sub_24210541C(v923);
  *(_QWORD *)(v1 + 8856) = v795;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8864) = v796;
  v797 = sub_24210546C();
  v798 = sub_2421053D0((uint64_t)v797);
  static Catalog.Resource.LLM.DraftModel.TakeawaysTransform()(v798);
  v799 = v922[3];
  sub_24210541C(v922);
  *(_QWORD *)(v1 + 8896) = v799;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8904) = v800;
  v801 = sub_24210546C();
  v802 = sub_2421053D0((uint64_t)v801);
  static Catalog.Resource.LLM.Adapter.TakeawaysTransform()(v802);
  v803 = v921[3];
  sub_24210541C(v921);
  *(_QWORD *)(v1 + 8936) = v803;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8944) = v804;
  v805 = sub_24210546C();
  sub_2421053D0((uint64_t)v805);
  static Catalog.Resource.Sanitizer.TextModerationLM()();
  v806 = v920[3];
  sub_24210541C(v920);
  *(_QWORD *)(v1 + 8976) = v806;
  sub_2421054C0();
  *(_QWORD *)(v1 + 8984) = v807;
  v808 = sub_24210546C();
  v809 = sub_2421053D0((uint64_t)v808);
  static Catalog.Resource.LLM.DraftModel.UIPreviews()(v809);
  v810 = v919[3];
  sub_24210541C(v919);
  *(_QWORD *)(v1 + 9016) = v810;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9024) = v811;
  v812 = sub_24210546C();
  v813 = sub_2421053D0((uint64_t)v812);
  static Catalog.Resource.LLM.Adapter.UIPreviews()(v813);
  v814 = v918[3];
  sub_24210541C(v918);
  *(_QWORD *)(v1 + 9056) = v814;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9064) = v815;
  v816 = sub_24210546C();
  v817 = sub_2421053D0((uint64_t)v816);
  static Catalog.Resource.LLM.DraftModel.UrgencyClassification()(v817);
  v818 = v917[3];
  sub_24210541C(v917);
  *(_QWORD *)(v1 + 9096) = v818;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9104) = v819;
  v820 = sub_24210546C();
  v821 = sub_2421053D0((uint64_t)v820);
  static Catalog.Resource.LLM.Adapter.UrgencyClassification()(v821);
  v822 = v916[3];
  sub_24210541C(v916);
  *(_QWORD *)(v1 + 9136) = v822;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9144) = v823;
  v824 = sub_24210546C();
  sub_2421053D0((uint64_t)v824);
  static Catalog.Resource.Diffusion.Model.VisualGenerationBase()();
  v825 = v915[3];
  sub_24210541C(v915);
  *(_QWORD *)(v1 + 9176) = v825;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9184) = v826;
  v827 = sub_24210546C();
  sub_2421053D0((uint64_t)v827);
  static Catalog.Resource.TokenInputDenyList.VisualGenerationBaseInputDenyList()();
  v828 = v914[3];
  sub_24210541C(v914);
  *(_QWORD *)(v1 + 9216) = v828;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9224) = v829;
  v830 = sub_24210546C();
  v831 = sub_2421053D0((uint64_t)v830);
  static Catalog.Resource.LLM.Model.VisualGenerationQueryHandlingLite()(v831);
  v832 = v913[3];
  sub_24210541C(v913);
  *(_QWORD *)(v1 + 9256) = v832;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9264) = v833;
  v834 = sub_24210546C();
  v835 = sub_2421053D0((uint64_t)v834);
  static Catalog.Resource.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer()(v912, v835);
  v836 = v912[3];
  sub_24210541C(v912);
  *(_QWORD *)(v1 + 9296) = v836;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9304) = v837;
  v838 = sub_24210546C();
  sub_2421053D0((uint64_t)v838);
  static Catalog.Resource.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList()();
  v839 = v911[3];
  sub_24210541C(v911);
  *(_QWORD *)(v1 + 9336) = v839;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9344) = v840;
  v841 = sub_24210546C();
  sub_2421053D0((uint64_t)v841);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList()();
  v842 = v910[3];
  sub_24210541C(v910);
  *(_QWORD *)(v1 + 9376) = v842;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9384) = v843;
  v844 = sub_24210546C();
  sub_2421053D0((uint64_t)v844);
  static Catalog.Resource.TokenInputDenyList.WritingToolsConciseToneInputDenyList()();
  v845 = v909[3];
  sub_24210541C(v909);
  *(_QWORD *)(v1 + 9416) = v845;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9424) = v846;
  v847 = sub_24210546C();
  sub_2421053D0((uint64_t)v847);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList()();
  v848 = v908[3];
  sub_24210541C(v908);
  *(_QWORD *)(v1 + 9456) = v848;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9464) = v849;
  v850 = sub_24210546C();
  sub_2421053D0((uint64_t)v850);
  static Catalog.Resource.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList()();
  v851 = v907[3];
  sub_24210541C(v907);
  *(_QWORD *)(v1 + 9496) = v851;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9504) = v852;
  v853 = sub_24210546C();
  sub_2421053D0((uint64_t)v853);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList()();
  v854 = v906[3];
  sub_24210541C(v906);
  *(_QWORD *)(v1 + 9536) = v854;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9544) = v855;
  v856 = sub_24210546C();
  sub_2421053D0((uint64_t)v856);
  static Catalog.Resource.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList()();
  v857 = v905[3];
  sub_24210541C(v905);
  *(_QWORD *)(v1 + 9576) = v857;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9584) = v858;
  v859 = sub_24210546C();
  sub_2421053D0((uint64_t)v859);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList()();
  v860 = v904[3];
  sub_24210541C(v904);
  *(_QWORD *)(v1 + 9616) = v860;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9624) = v861;
  v862 = sub_24210546C();
  sub_2421053D0((uint64_t)v862);
  static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList()();
  v863 = v903[3];
  sub_24210541C(v903);
  *(_QWORD *)(v1 + 9656) = v863;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9664) = v864;
  v865 = sub_24210546C();
  sub_2421053D0((uint64_t)v865);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList()();
  v866 = v902[3];
  sub_24210541C(v902);
  *(_QWORD *)(v1 + 9696) = v866;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9704) = v867;
  v868 = sub_24210546C();
  sub_2421053D0((uint64_t)v868);
  static Catalog.Resource.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList()();
  v869 = v901[3];
  sub_24210541C(v901);
  *(_QWORD *)(v1 + 9736) = v869;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9744) = v870;
  v871 = sub_24210546C();
  sub_2421053D0((uint64_t)v871);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList()();
  v872 = v900[3];
  sub_24210541C(v900);
  *(_QWORD *)(v1 + 9776) = v872;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9784) = v873;
  v874 = sub_24210546C();
  sub_2421053D0((uint64_t)v874);
  static Catalog.Resource.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList()();
  v875 = v899[3];
  sub_24210541C(v899);
  *(_QWORD *)(v1 + 9816) = v875;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9824) = v876;
  v877 = sub_24210546C();
  sub_2421053D0((uint64_t)v877);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList()();
  v878 = v898[3];
  sub_24210541C(v898);
  *(_QWORD *)(v1 + 9856) = v878;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9864) = v879;
  v880 = sub_24210546C();
  sub_2421053D0((uint64_t)v880);
  static Catalog.Resource.TokenInputDenyList.WritingToolsTablesTransformInputDenyList()();
  v881 = v897[3];
  sub_24210541C(v897);
  *(_QWORD *)(v1 + 9896) = v881;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9904) = v882;
  v883 = sub_24210546C();
  sub_2421053D0((uint64_t)v883);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList()();
  v884 = v896[3];
  sub_24210541C(v896);
  *(_QWORD *)(v1 + 9936) = v884;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9944) = v885;
  v886 = sub_24210546C();
  sub_2421053D0((uint64_t)v886);
  static Catalog.Resource.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList()();
  v887 = v895[3];
  sub_24210541C(v895);
  *(_QWORD *)(v1 + 9976) = v887;
  sub_2421054C0();
  *(_QWORD *)(v1 + 9984) = v888;
  v889 = sub_24210546C();
  sub_2421053D0((uint64_t)v889);
  static Catalog.Resource.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList()();
  v890 = v894[3];
  sub_24210541C(v894);
  *(_QWORD *)(v1 + 10016) = v890;
  sub_2421054C0();
  *(_QWORD *)(v1 + 10024) = v891;
  v892 = sub_24210546C();
  sub_2421053D0((uint64_t)v892);
  sub_242079824((uint64_t)v894);
  sub_242079824((uint64_t)v895);
  sub_242079824((uint64_t)v896);
  sub_242079824((uint64_t)v897);
  sub_242079824((uint64_t)v898);
  sub_242079824((uint64_t)v899);
  sub_242079824((uint64_t)v900);
  sub_242079824((uint64_t)v901);
  sub_242079824((uint64_t)v902);
  sub_242079824((uint64_t)v903);
  sub_242079824((uint64_t)v904);
  sub_242079824((uint64_t)v905);
  sub_242079824((uint64_t)v906);
  sub_242079824((uint64_t)v907);
  sub_242079824((uint64_t)v908);
  sub_242079824((uint64_t)v909);
  sub_242079824((uint64_t)v910);
  sub_242079824((uint64_t)v911);
  sub_242079824((uint64_t)v912);
  sub_242079824((uint64_t)v913);
  sub_242079824((uint64_t)v914);
  sub_242079824((uint64_t)v915);
  sub_242079824((uint64_t)v916);
  sub_242079824((uint64_t)v917);
  sub_242079824((uint64_t)v918);
  sub_242079824((uint64_t)v919);
  sub_242079824((uint64_t)v920);
  sub_242079824((uint64_t)v921);
  sub_242079824((uint64_t)v922);
  sub_242079824((uint64_t)v923);
  sub_242079824((uint64_t)v924);
  sub_242079824((uint64_t)v925);
  sub_242079824((uint64_t)v926);
  sub_242079824((uint64_t)v927);
  sub_242079824((uint64_t)v928);
  sub_242079824((uint64_t)v929);
  sub_242079824((uint64_t)v930);
  sub_242079824((uint64_t)v931);
  sub_242079824((uint64_t)v932);
  sub_242079824((uint64_t)v933);
  sub_242079824((uint64_t)v934);
  sub_242079824((uint64_t)v935);
  sub_242079824((uint64_t)v936);
  sub_242079824((uint64_t)v937);
  sub_242079824((uint64_t)v938);
  sub_242079824((uint64_t)v939);
  sub_242079824((uint64_t)v940);
  sub_242079824((uint64_t)v941);
  sub_242079824((uint64_t)v942);
  sub_242079824((uint64_t)v943);
  sub_242079824((uint64_t)v944);
  sub_242079824((uint64_t)v945);
  sub_242079824((uint64_t)v946);
  sub_242079824((uint64_t)v947);
  sub_242079824((uint64_t)v948);
  sub_242079824((uint64_t)v949);
  sub_242079824((uint64_t)v950);
  sub_242079824((uint64_t)v951);
  sub_242079824((uint64_t)v952);
  sub_242079824((uint64_t)v953);
  sub_242079824((uint64_t)v954);
  sub_242079824((uint64_t)v955);
  sub_242079824((uint64_t)v956);
  sub_242079824((uint64_t)v957);
  sub_242079824((uint64_t)v958);
  sub_242079824((uint64_t)v959);
  sub_242079824((uint64_t)v960);
  sub_242079824((uint64_t)v961);
  sub_242079824((uint64_t)v962);
  sub_242079824((uint64_t)v963);
  sub_242079824((uint64_t)v964);
  sub_242079824((uint64_t)v965);
  sub_242079824((uint64_t)v966);
  sub_242079824((uint64_t)v967);
  sub_242079824((uint64_t)v968);
  sub_242079824((uint64_t)v969);
  sub_242079824((uint64_t)v970);
  sub_242079824((uint64_t)v971);
  sub_242079824((uint64_t)v972);
  sub_242079824((uint64_t)v973);
  sub_242079824((uint64_t)v974);
  sub_242079824((uint64_t)v975);
  sub_242079824((uint64_t)v976);
  sub_242079824((uint64_t)v977);
  sub_242079824((uint64_t)v978);
  sub_242079824((uint64_t)v979);
  sub_242079824((uint64_t)v980);
  sub_242079824((uint64_t)v981);
  sub_242079824((uint64_t)v982);
  sub_242079824((uint64_t)v983);
  sub_242079824((uint64_t)v984);
  sub_242079824((uint64_t)v985);
  sub_242079824((uint64_t)v986);
  sub_242079824((uint64_t)v987);
  sub_242079824((uint64_t)v988);
  sub_242079824((uint64_t)v989);
  sub_242079824((uint64_t)v990);
  sub_242079824((uint64_t)v991);
  sub_242079824((uint64_t)v992);
  sub_242079824((uint64_t)v993);
  sub_242079824((uint64_t)v994);
  sub_242079824((uint64_t)v995);
  sub_242079824((uint64_t)v996);
  sub_242079824((uint64_t)v997);
  sub_242079824((uint64_t)v998);
  sub_242079824((uint64_t)v999);
  sub_242079824((uint64_t)v1000);
  sub_242079824((uint64_t)v1001);
  sub_242079824((uint64_t)v1002);
  sub_242079824((uint64_t)v1003);
  sub_242079824((uint64_t)v1004);
  sub_242079824((uint64_t)v1005);
  sub_242079824((uint64_t)v1006);
  sub_242079824((uint64_t)v1007);
  sub_242079824((uint64_t)v1008);
  sub_242079824((uint64_t)v1009);
  sub_242079824((uint64_t)v1010);
  sub_242079824((uint64_t)v1011);
  sub_242079824((uint64_t)v1012);
  sub_242079824((uint64_t)v1013);
  sub_242079824((uint64_t)v1014);
  sub_242079824((uint64_t)v1015);
  sub_242079824((uint64_t)v1016);
  sub_242079824((uint64_t)v1017);
  sub_242079824((uint64_t)v1018);
  sub_242079824((uint64_t)v1019);
  sub_242079824((uint64_t)v1020);
  sub_242079824((uint64_t)v1021);
  sub_242079824((uint64_t)v1022);
  sub_242079824((uint64_t)v1023);
  sub_242079824((uint64_t)v1024);
  sub_242079824((uint64_t)v1025);
  sub_242079824((uint64_t)v1026);
  sub_242079824((uint64_t)v1027);
  sub_242079824((uint64_t)v1028);
  sub_242079824((uint64_t)v1029);
  sub_242079824((uint64_t)v1030);
  sub_242079824((uint64_t)v1031);
  sub_242079824((uint64_t)v1032);
  sub_242079824((uint64_t)v1033);
  sub_242079824((uint64_t)v1034);
  sub_242079824((uint64_t)v1035);
  sub_242079824((uint64_t)v1036);
  sub_242079824((uint64_t)v1037);
  sub_242079824((uint64_t)v1038);
  sub_242079824((uint64_t)v1039);
  sub_242079824((uint64_t)v1040);
  sub_242079824((uint64_t)v1041);
  sub_242079824((uint64_t)v1042);
  sub_242079824((uint64_t)v1043);
  sub_242079824((uint64_t)v1044);
  sub_242079824((uint64_t)v1045);
  sub_242079824((uint64_t)v1046);
  sub_242079824((uint64_t)v1047);
  sub_242079824((uint64_t)v1048);
  sub_242079824((uint64_t)v1049);
  sub_242079824((uint64_t)v1050);
  sub_242079824((uint64_t)v1051);
  sub_242079824((uint64_t)v1052);
  sub_242079824((uint64_t)v1053);
  sub_242079824((uint64_t)v1054);
  sub_242079824((uint64_t)v1055);
  sub_242079824((uint64_t)v1056);
  sub_242079824((uint64_t)v1057);
  sub_242079824((uint64_t)v1058);
  sub_242079824((uint64_t)v1059);
  sub_242079824((uint64_t)v1060);
  sub_242079824((uint64_t)v1061);
  sub_242079824((uint64_t)v1062);
  sub_242079824((uint64_t)v1063);
  sub_242079824((uint64_t)v1064);
  sub_242079824((uint64_t)v1065);
  sub_242079824((uint64_t)v1066);
  sub_242079824((uint64_t)v1067);
  sub_242079824((uint64_t)v1068);
  sub_242079824((uint64_t)v1069);
  sub_242079824((uint64_t)v1070);
  sub_242079824((uint64_t)v1071);
  sub_242079824((uint64_t)v1072);
  sub_242079824((uint64_t)v1073);
  sub_242079824((uint64_t)v1074);
  sub_242079824((uint64_t)v1075);
  sub_242079824((uint64_t)v1076);
  sub_242079824((uint64_t)v1077);
  sub_242079824((uint64_t)v1078);
  sub_242079824((uint64_t)v1079);
  sub_242079824((uint64_t)v1080);
  sub_242079824((uint64_t)v1081);
  sub_242079824((uint64_t)v1082);
  sub_242079824((uint64_t)v1083);
  sub_242079824((uint64_t)v1084);
  sub_242079824((uint64_t)v1085);
  sub_242079824((uint64_t)v1086);
  sub_242079824((uint64_t)v1087);
  sub_242079824((uint64_t)v1088);
  sub_242079824((uint64_t)v1089);
  sub_242079824((uint64_t)v1090);
  sub_242079824((uint64_t)v1091);
  sub_242079824((uint64_t)v1092);
  sub_242079824((uint64_t)v1093);
  sub_242079824((uint64_t)v1094);
  sub_242079824((uint64_t)v1095);
  sub_242079824((uint64_t)v1096);
  sub_242079824((uint64_t)v1097);
  sub_242079824((uint64_t)v1098);
  sub_242079824((uint64_t)v1099);
  sub_242079824((uint64_t)v1100);
  sub_242079824((uint64_t)v1101);
  sub_242079824((uint64_t)v1102);
  sub_242079824((uint64_t)v1103);
  sub_242079824((uint64_t)v1104);
  sub_242079824((uint64_t)v1105);
  sub_242079824((uint64_t)v1106);
  sub_242079824((uint64_t)v1107);
  sub_242079824((uint64_t)v1108);
  sub_242079824((uint64_t)v1109);
  sub_242079824((uint64_t)v1110);
  sub_242079824((uint64_t)v1111);
  sub_242079824((uint64_t)v1112);
  sub_242079824((uint64_t)v1113);
  sub_242079824((uint64_t)v1114);
  sub_242079824((uint64_t)v1115);
  sub_242079824((uint64_t)v1116);
  sub_242079824((uint64_t)v1117);
  sub_242079824((uint64_t)v1118);
  sub_242079824((uint64_t)v1119);
  sub_242079824((uint64_t)v1120);
  sub_242079824((uint64_t)v1121);
  sub_242079824((uint64_t)v1122);
  sub_242079824((uint64_t)v1123);
  sub_242079824((uint64_t)v1124);
  sub_242079824((uint64_t)v1125);
  sub_242079824((uint64_t)v1126);
  sub_242079824((uint64_t)v1127);
  sub_242079824((uint64_t)v1128);
  sub_242079824((uint64_t)v1129);
  sub_242079824((uint64_t)v1130);
  sub_242079824((uint64_t)v1131);
  sub_242079824((uint64_t)v1132);
  sub_242079824((uint64_t)v1133);
  sub_242079824((uint64_t)v1134);
  sub_242079824((uint64_t)v1135);
  sub_242079824((uint64_t)v1136);
  sub_242079824((uint64_t)v1137);
  sub_242079824((uint64_t)v1138);
  sub_242079824((uint64_t)v1139);
  sub_242079824((uint64_t)v1140);
  sub_242079824((uint64_t)v1141);
  sub_242079824((uint64_t)v1142);
  result = sub_242079824((uint64_t)v1143);
  qword_254397010 = v1;
  return result;
}

uint64_t static Catalog.Resource.allResources.getter()
{
  return sub_242105078(&qword_254397090);
}

uint64_t sub_242104E44()
{
  uint64_t result;

  result = sub_2420AA3D4((uint64_t)&unk_251312228);
  qword_2571A1418 = result;
  return result;
}

uint64_t static Catalog.Resource.allResourceIDs.getter()
{
  return sub_242105078(&qword_25719D8D0);
}

uint64_t sub_242104E84()
{
  uint64_t result;

  result = sub_2420AA3D4((uint64_t)&unk_251314F68);
  qword_254399EF8 = result;
  return result;
}

uint64_t static Catalog.Resource.explicitRequestResources.getter()
{
  return sub_242105078(&qword_254399F00);
}

uint64_t sub_242104EC4()
{
  uint64_t result;

  result = sub_242132708();
  qword_2543978C8 = result;
  return result;
}

uint64_t static Catalog.Resource.subscribeOnLaunch.getter()
{
  return sub_242105078(&qword_2543978D0);
}

uint64_t sub_242104F18()
{
  uint64_t inited;
  uint64_t result;

  sub_2420797C0(&qword_2543979A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242163910;
  *(_QWORD *)(inited + 32) = 0xD000000000000016;
  *(_QWORD *)(inited + 40) = 0x8000000242137900;
  *(_QWORD *)(inited + 48) = &unk_251314D50;
  *(_QWORD *)(inited + 56) = 0xD000000000000026;
  *(_QWORD *)(inited + 64) = 0x800000024213E140;
  *(_QWORD *)(inited + 72) = &unk_251314B90;
  *(_QWORD *)(inited + 80) = 0xD000000000000023;
  *(_QWORD *)(inited + 88) = 0x800000024213A840;
  *(_QWORD *)(inited + 96) = &unk_251314C10;
  *(_QWORD *)(inited + 104) = 0xD00000000000002DLL;
  *(_QWORD *)(inited + 112) = 0x800000024213E370;
  *(_QWORD *)(inited + 120) = &unk_251314CA0;
  *(_QWORD *)(inited + 128) = 0xD00000000000002FLL;
  *(_QWORD *)(inited + 136) = 0x800000024213E280;
  *(_QWORD *)(inited + 144) = &unk_251314CE0;
  *(_QWORD *)(inited + 152) = 0xD000000000000014;
  *(_QWORD *)(inited + 160) = 0x800000024213B7B0;
  *(_QWORD *)(inited + 168) = &unk_251314D20;
  sub_2420797C0(&qword_254399CD8);
  result = sub_242132708();
  qword_2543978D8 = result;
  return result;
}

uint64_t static Catalog.Resource.usageTypesForAssetSet.getter()
{
  return sub_242105078(qword_2543978E0);
}

uint64_t sub_242105078(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

ModelCatalog::RequestResourcesKey_optional __swiftcall RequestResourcesKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ModelCatalog::RequestResourcesKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_242132BDC();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

ModelCatalog::RequestResourcesKey_optional sub_242105108(Swift::String *a1)
{
  return RequestResourcesKey.init(rawValue:)(*a1);
}

void sub_242105114(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = RequestResourcesKey.rawValue.getter();
  a1[1] = v2;
  sub_24207F428();
}

unint64_t sub_242105138()
{
  unint64_t result;

  result = qword_2543990D8;
  if (!qword_2543990D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for RequestResourcesKey, &type metadata for RequestResourcesKey);
    atomic_store(result, (unint64_t *)&qword_2543990D8);
  }
  return result;
}

void sub_242105174()
{
  sub_2420862E4();
}

void sub_24210517C()
{
  sub_2420AC7C0();
}

void sub_242105184()
{
  sub_2420863E8();
}

void sub_24210518C(char *a1)
{
  sub_242107AB8(*a1);
}

uint64_t sub_242105198()
{
  sub_242105394();
  return sub_242132888();
}

uint64_t sub_2421051F4()
{
  sub_242105394();
  return sub_242132870();
}

uint64_t getEnumTagSinglePayload for RequestResourcesKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestResourcesKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_242105314 + 4 * byte_24216379F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_242105348 + 4 * byte_24216379A[v4]))();
}

uint64_t sub_242105348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242105350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242105358);
  return result;
}

uint64_t sub_242105364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24210536CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_242105370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242105378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestResourcesKey()
{
  return &type metadata for RequestResourcesKey;
}

unint64_t sub_242105394()
{
  unint64_t result;

  result = qword_254399A68;
  if (!qword_254399A68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for RequestResourcesKey, &type metadata for RequestResourcesKey);
    atomic_store(result, (unint64_t *)&qword_254399A68);
  }
  return result;
}

uint64_t sub_2421053D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(a1, v2, v1);
}

uint64_t sub_2421053E4()
{
  return sub_242132B94();
}

uint64_t sub_24210540C()
{
  return sub_2421327EC();
}

_QWORD *sub_24210541C(_QWORD *a1)
{
  uint64_t v1;

  return sub_242079800(a1, v1);
}

uint64_t sub_242105434()
{
  return sub_242132B34();
}

uint64_t *sub_24210546C()
{
  uint64_t *v0;

  return sub_24207F280(v0);
}

double sub_2421054D8()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 130) = 0u;
  return result;
}

double sub_2421054F8()
{
  return 0.0;
}

uint64_t sub_242105558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  _QWORD *v6;
  va_list va;

  va_start(va, a6);
  *v6 = a1;
  return AssetBackedServerConfigurationBase.init(configuration:)(va);
}

void sub_2421055A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;

  *v44 = a1;
  LLMAdapterBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

void sub_2421055E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;

  *v44 = a1;
  LLMDraftModelBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

void sub_2421055FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;

  *v44 = a1;
  AssetBackedLLMDraftModelBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

uint64_t sub_242105610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  _QWORD *v6;
  va_list va;

  va_start(va, a6);
  *v6 = a1;
  return AssetBackedTokenOutputDenyListBase.init(configuration:)(va);
}

uint64_t sub_242105624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  _QWORD *v6;
  va_list va;

  va_start(va, a6);
  *v6 = a1;
  return AssetBackedTokenInputDenyListBase.init(configuration:)(va);
}

void sub_242105704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;

  *v44 = a1;
  AssetBackedLLMAdapterBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

void sub_242105718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;

  *v44 = a1;
  AssetBackedLLMModelBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

void sub_24210572C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;

  *v44 = a1;
  AssetBackedTokenizerBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

uint64_t sub_242105760()
{
  uint64_t v0;

  return v0 + 28;
}

uint64_t sub_2421057D8()
{
  return sub_242132AD4();
}

uint64_t sub_24210581C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  _QWORD *v6;
  va_list va;

  va_start(va, a6);
  *v6 = a1;
  return AssetBackedDiffusionAdapterBase.init(configuration:)(va);
}

uint64_t sub_242105860()
{
  return sub_242132AD4();
}

uint64_t sub_242105874()
{
  return sub_242132AD4();
}

uint64_t sub_242105888()
{
  return sub_242132AD4();
}

uint64_t sub_2421058B8()
{
  uint64_t v0;

  return v0 + 64;
}

uint64_t sub_2421058C8()
{
  return sub_242132AD4();
}

uint64_t sub_2421058DC()
{
  return sub_242132AD4();
}

uint64_t sub_2421058F0()
{
  return sub_242132AD4();
}

uint64_t sub_242105904()
{
  return sub_242132AD4();
}

uint64_t sub_242105918()
{
  return sub_242132AD4();
}

uint64_t sub_242105A54()
{
  return sub_242132AD4();
}

uint64_t sub_242105A68()
{
  return sub_242132AD4();
}

uint64_t sub_242105A7C()
{
  return sub_242132AD4();
}

uint64_t sub_242105A90()
{
  return sub_242132AD4();
}

uint64_t sub_242105AA4()
{
  return sub_242132AD4();
}

unint64_t sub_242105AB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_2420FB324();
}

uint64_t sub_242105AE4()
{
  uint64_t v0;

  return v0 + 70;
}

unint64_t sub_242105B88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_24209F2A4();
}

uint64_t sub_242105B90()
{
  uint64_t v0;

  return v0 + 69;
}

unint64_t sub_242105BA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_24209F264();
}

unint64_t sub_242105BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_24209F06C();
}

uint64_t sub_242105BF8()
{
  return sub_242132AD4();
}

uint64_t sub_242105C0C()
{
  return sub_242132AD4();
}

unint64_t sub_242105C20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_2420FF4B0();
}

unint64_t sub_242105C28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_2420FD900();
}

uint64_t sub_242105C50()
{
  uint64_t v0;

  return v0 + 62;
}

uint64_t sub_242105CE4()
{
  return sub_242132AD4();
}

uint64_t sub_242105CF8()
{
  return sub_242132AD4();
}

uint64_t sub_242105D0C()
{
  return sub_242132AD4();
}

uint64_t sub_242105D20()
{
  return sub_242132AD4();
}

void sub_242105D34(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
}

uint64_t sub_242105E3C()
{
  uint64_t v0;

  return v0 + 59;
}

unint64_t sub_242105E5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_24209F0AC();
}

unint64_t sub_242105E64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_24209F02C();
}

unint64_t sub_242105E6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_24209EFEC();
}

uint64_t sub_242105E74@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 136) = a2;
  *(_QWORD *)(result + 144) = (v2 - 32) | 0x8000000000000000;
  *(_QWORD *)(result + 152) = 0;
  *(_WORD *)(result + 160) = 1793;
  *(_QWORD *)(result + 168) = 0;
  *(_QWORD *)(result + 176) = 0;
  return result;
}

uint64_t sub_242105EA0()
{
  return sub_242132AD4();
}

uint64_t sub_242105EB4()
{
  return sub_242132AD4();
}

uint64_t sub_242105EC8()
{
  return sub_242132AD4();
}

uint64_t sub_242105F00()
{
  uint64_t v0;

  return v0 + 63;
}

uint64_t sub_242105F10()
{
  uint64_t v0;

  return v0 + 71;
}

uint64_t sub_242105F20(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  *(_QWORD *)(result + 16) = 0x6C69466567616D49;
  *(_QWORD *)(result + 24) = 0xEB00000000726574;
  return result;
}

uint64_t sub_242106028()
{
  uint64_t v0;

  return v0 + 51;
}

uint64_t sub_2421060A4()
{
  return sub_242132AD4();
}

uint64_t sub_2421060B8()
{
  return sub_242132AD4();
}

uint64_t sub_2421060CC()
{
  return sub_242132AD4();
}

void sub_2421060E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;

  *v44 = a1;
  LLMModelBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

uint64_t sub_24210610C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 64) = v1;
  *(_BYTE *)(result + 72) = 0;
  *(_QWORD *)(result + 80) = v1;
  *(_QWORD *)(result + 88) = 0;
  *(_BYTE *)(result + 96) = 1;
  return result;
}

uint64_t sub_242106124()
{
  uint64_t v0;

  return v0 + 53;
}

uint64_t sub_242106134()
{
  uint64_t v0;

  return v0 + 65;
}

uint64_t sub_242106144()
{
  uint64_t v0;

  return v0 + 39;
}

unint64_t sub_24210616C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_24209F6AC();
}

double sub_242106174@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 130) = 0u;
  return result;
}

uint64_t sub_2421062F4()
{
  uint64_t v0;

  return v0 + 33;
}

uint64_t sub_242106304()
{
  uint64_t v0;

  return v0 + 68;
}

uint64_t sub_242106314()
{
  uint64_t v0;

  return v0 + 56;
}

uint64_t sub_242106324()
{
  uint64_t v0;

  return v0 + 55;
}

uint64_t sub_2421063DC()
{
  return sub_242132AD4();
}

uint64_t sub_2421063F0()
{
  return sub_242132AD4();
}

uint64_t sub_242106404()
{
  return sub_242132AD4();
}

uint64_t sub_242106418()
{
  return sub_242132AD4();
}

uint64_t sub_24210642C()
{
  return sub_242132AD4();
}

uint64_t sub_242106550(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 48) = v1;
  *(_QWORD *)(result + 56) = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t sub_2421065BC()
{
  uint64_t v0;

  return v0 + 67;
}

uint64_t sub_2421065CC()
{
  uint64_t v0;

  return v0 + 60;
}

uint64_t sub_2421065DC()
{
  uint64_t v0;

  return v0 + 58;
}

uint64_t sub_2421067D8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 120) = v1;
  *(_QWORD *)(result + 128) = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t sub_2421067E8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 136) = a2;
  *(_QWORD *)(result + 144) = (v2 - 32) | 0x8000000000000000;
  *(_QWORD *)(result + 152) = 0;
  *(_WORD *)(result + 160) = 2561;
  *(_QWORD *)(result + 168) = 0;
  *(_QWORD *)(result + 176) = 0;
  return result;
}

uint64_t sub_242106808()
{
  uint64_t v0;

  return v0 + 77;
}

uint64_t sub_242106818()
{
  uint64_t v0;

  return v0 + 52;
}

uint64_t sub_242106828()
{
  uint64_t v0;

  return v0 + 45;
}

uint64_t sub_242106838()
{
  uint64_t v0;

  return v0 + 35;
}

uint64_t sub_242106978()
{
  return sub_242132AD4();
}

uint64_t sub_24210698C()
{
  return sub_242132AD4();
}

uint64_t sub_2421069A0()
{
  return sub_242132AD4();
}

uint64_t sub_2421069B4()
{
  return sub_242132AD4();
}

uint64_t sub_2421069C8()
{
  return sub_242132AD4();
}

uint64_t sub_2421069DC()
{
  return sub_242132AD4();
}

uint64_t sub_242106A7C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 32) = v1;
  *(_QWORD *)(result + 40) = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t sub_242106AB0()
{
  uint64_t v0;

  return v0 + 57;
}

uint64_t sub_242106AC0()
{
  uint64_t v0;

  return v0 + 73;
}

uint64_t sub_242106AD0()
{
  uint64_t v0;

  return v0 + 75;
}

uint64_t sub_242106AE0()
{
  uint64_t v0;

  return v0 + 72;
}

uint64_t sub_242106AF0()
{
  uint64_t v0;

  return v0 + 54;
}

unint64_t sub_242106B00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_24209F224();
}

uint64_t sub_242106BD0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned __int16 v2;

  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = v2 | 0xEE007265746E0000;
  return result;
}

uint64_t sub_242106BE4(uint64_t result, __n128 a2)
{
  *(__n128 *)(result + 104) = a2;
  return result;
}

uint64_t sub_242106C04(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

unint64_t sub_242106C18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_2420FA4AC();
}

void static Sideload.defaultSideloadAssetsURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420797C0((uint64_t *)&unk_254399E98);
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v0);
  sub_24210CA8C();
  sub_24210CB78();
  MEMORY[0x24BDAC7A8](v1);
  sub_24210CA74();
  sub_24210CDC0();
  v2 = sub_24209745C();
  sub_24210CBF0(v2);
  sub_24210CCB0();
  sub_242097A00();
}

uint64_t static CatalogIndex.essentialResources(sideLoadUrl:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40[2];
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  sub_24209745C();
  sub_24210CB78();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  CatalogIndex.init(sideloadURL:)((uint64_t)v4, &v41);
  v6 = v41;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v36 = MEMORY[0x24BEE4AF8];
  v8 = *(_QWORD *)(v41 + 16);
  result = swift_bridgeObjectRetain();
  if (v8)
  {
    v10 = 0;
    v11 = v6 + 32;
    v12 = MEMORY[0x24BEE4AF8];
    while (v10 < *(_QWORD *)(v6 + 16))
    {
      sub_24207EA48(v11, (uint64_t)&v41);
      v13 = v42;
      v14 = v43;
      sub_242079800(&v41, v42);
      v15 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 72))(v13, v14) + 16);
      swift_bridgeObjectRelease();
      if (v15)
      {
        sub_242079E50(&v41, (uint64_t)v40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_24210CB5C(0, *(_QWORD *)(v12 + 16) + 1);
        v12 = v36;
        v17 = *(_QWORD *)(v36 + 16);
        v16 = *(_QWORD *)(v36 + 24);
        if (v17 >= v16 >> 1)
        {
          v18 = sub_24210CDCC(v16);
          sub_24210CB5C(v18, v17 + 1);
          v12 = v36;
        }
        *(_QWORD *)(v12 + 16) = v17 + 1;
        result = sub_242079E50(v40, v12 + 40 * v17 + 32);
      }
      else
      {
        result = sub_242079824((uint64_t)&v41);
      }
      ++v10;
      v11 += 40;
      if (v8 == v10)
      {
        v19 = v36;
        v7 = MEMORY[0x24BEE4AF8];
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    v19 = v7;
LABEL_14:
    sub_24207F700();
    swift_bridgeObjectRelease_n();
    v39 = v7;
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = v19 + 32;
      v35[1] = v19;
      swift_retain();
      do
      {
        sub_24207EA48(v21, (uint64_t)&v41);
        sub_24207EA48((uint64_t)&v41, (uint64_t)v40);
        sub_2420797C0((uint64_t *)&unk_254399948);
        sub_2420797C0(&qword_2543990D0);
        if ((swift_dynamicCast() & 1) == 0)
        {
          v38 = 0;
          v36 = 0u;
          v37 = 0u;
        }
        sub_242079824((uint64_t)&v41);
        if (*((_QWORD *)&v37 + 1))
        {
          sub_242079E50(&v36, (uint64_t)v40);
          sub_242079E50(v40, (uint64_t)&v36);
          v22 = v39;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24210B0C4(0, *(_QWORD *)(v22 + 16) + 1, 1, v22, &qword_25439A0C8, &qword_2543990D0);
            v22 = v31;
            v39 = v31;
          }
          v24 = *(_QWORD *)(v22 + 16);
          v23 = *(_QWORD *)(v22 + 24);
          if (v24 >= v23 >> 1)
          {
            v32 = sub_24210CDCC(v23);
            sub_24210B0C4(v32, v33, 1, v22, &qword_25439A0C8, &qword_2543990D0);
            v39 = v34;
          }
          v25 = *((_QWORD *)&v37 + 1);
          v26 = v38;
          v27 = sub_242079844((uint64_t)&v36, *((uint64_t *)&v37 + 1));
          MEMORY[0x24BDAC7A8](v27);
          v29 = (char *)v35 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v30 + 16))(v29);
          sub_24210C624(v24, (uint64_t)v29, &v39, v25, v26);
          sub_242079824((uint64_t)&v36);
        }
        else
        {
          sub_24207E9D0((uint64_t)&v36, &qword_25719E610);
        }
        v21 += 40;
        --v20;
      }
      while (v20);
      swift_release_n();
      return v39;
    }
    else
    {
      swift_release();
      return MEMORY[0x24BEE4AF8];
    }
  }
  return result;
}

uint64_t static CatalogIndex.notReady(essentialResources:lock:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = *a2;
    v4 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    v5 = v2 - 1;
    do
    {
      v6 = v5;
      LOBYTE(v2) = sub_24210ACC0(v4, v3);
      if ((v2 & 1) != 0)
        break;
      v5 = v6 - 1;
      v4 += 5;
    }
    while (v6);
    sub_242097384();
  }
  return v2 & 1;
}

ModelCatalog::CatalogIndex __swiftcall CatalogIndex.init(resources:resourceBundles:)(Swift::OpaquePointer resources, Swift::OpaquePointer resourceBundles)
{
  _QWORD *v2;
  void *rawValue;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  _BOOL8 v18;
  void *v20;
  void *v21;
  ModelCatalog::CatalogIndex result;
  _QWORD *v23;
  char *v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  rawValue = resourceBundles._rawValue;
  v4 = resources._rawValue;
  v5 = v2;
  v6 = MEMORY[0x24BEE4AF8];
  v31 = MEMORY[0x24BEE4AF8];
  v27 = *((_QWORD *)resources._rawValue + 2);
  if (v27)
  {
    v23 = v2;
    v7 = 0;
    v26 = (char *)resources._rawValue + 32;
    do
    {
      if (v7 >= v4[2])
      {
        __break(1u);
        JUMPOUT(0x242107520);
      }
      sub_24207EA48((uint64_t)&v26[40 * v7], (uint64_t)v28);
      v8 = v29;
      v9 = v30;
      sub_242079800(v28, v29);
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 80))(v8, v9);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        v12 = v6;
        sub_24210BF80(0, v11, 0);
        v13 = v6;
        v14 = *(_QWORD *)(v6 + 16);
        v15 = 32;
        do
        {
          v16 = *(_BYTE *)(v10 + v15);
          v17 = *(_QWORD *)(v13 + 24);
          if (v14 >= v17 >> 1)
          {
            v18 = sub_24210CDCC(v17);
            sub_24210BF80((char *)v18, v14 + 1, 1);
          }
          *(_QWORD *)(v13 + 16) = v14 + 1;
          *(_BYTE *)(v13 + v14 + 32) = v16;
          v15 += 24;
          ++v14;
          --v11;
        }
        while (v11);
        sub_242079F20();
        v6 = v12;
        v4 = resources._rawValue;
      }
      else
      {
        sub_242079F20();
        v13 = v6;
      }
      if (*(_QWORD *)(v13 + 16))
      {
        sub_242097198();
        sub_24210CB64();
        __asm { BR              X9 }
      }
      sub_242097830();
      sub_242079824((uint64_t)v28);
      ++v7;
    }
    while (v7 != v27);
    v6 = v31;
    v5 = v23;
    rawValue = resourceBundles._rawValue;
  }
  v20 = (void *)sub_24207F700();
  *v5 = v6;
  v5[1] = rawValue;
  result.resourceBundles._rawValue = v21;
  result.resources._rawValue = v20;
  return result;
}

uint64_t CatalogIndex.resource(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  _BOOL8 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v44 = a1;
  v8 = *v3;
  v9 = MEMORY[0x24BEE4AF8];
  v56 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(v8 + 16);
  sub_2420977E0();
  v47 = v10;
  if (v10)
  {
    v42 = a2;
    v43 = a3;
    v11 = 0;
    v45 = v8;
    v46 = v8 + 32;
    do
    {
      if (v11 >= *(_QWORD *)(v8 + 16))
      {
        __break(1u);
        JUMPOUT(0x24210786CLL);
      }
      sub_24207EA48(v46 + 40 * v11, (uint64_t)&v53);
      sub_24210CC10(v12, v13, v14, v15, v16, v17, v18, v19, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
        v52,
        v53,
        *((uint64_t *)&v53 + 1),
        v54,
        v55);
      v4 = (*(uint64_t (**)(uint64_t, int64_t))(v5 + 80))(v4, v5);
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        sub_24210BF80(0, v5, 0);
        v20 = v9;
        v21 = *(_QWORD *)(v9 + 16);
        v22 = 32;
        do
        {
          v23 = *(_BYTE *)(v4 + v22);
          v48 = v9;
          v24 = *(_QWORD *)(v9 + 24);
          if (v21 >= v24 >> 1)
          {
            v25 = sub_24210CDCC(v24);
            sub_24210BF80((char *)v25, v21 + 1, 1);
          }
          *(_QWORD *)(v9 + 16) = v21 + 1;
          *(_BYTE *)(v9 + v21 + 32) = v23;
          v22 += 24;
          ++v21;
          --v5;
        }
        while (v5);
        sub_242079EE0();
        v8 = v45;
      }
      else
      {
        sub_242079EE0();
        v20 = v9;
      }
      if (*(_QWORD *)(v20 + 16))
      {
        sub_242097198();
        sub_24210CB64();
        __asm { BR              X9 }
      }
      sub_242097830();
      sub_242079824((uint64_t)&v53);
      ++v11;
    }
    while (v11 != v47);
    v9 = v56;
    a2 = v42;
    a3 = v43;
  }
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v9 + 16);
  if (v27)
  {
    v28 = v9 + 32;
    swift_retain();
    while (1)
    {
      sub_24207EA48(v28, (uint64_t)&v53);
      sub_24210CC10(v29, v30, v31, v32, v33, v34, v35, v36, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
        v52,
        v53,
        *((uint64_t *)&v53 + 1),
        v54,
        v55);
      if (sub_24210CC48(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24)) == v44 && v37 == a2)
      {
        sub_242097B70();
        sub_242079F20();
        goto LABEL_27;
      }
      v39 = sub_242079EB8();
      sub_242097830();
      if ((v39 & 1) != 0)
        break;
      sub_242079824((uint64_t)&v53);
      v28 += 40;
      if (!--v27)
      {
        sub_242097B70();
        goto LABEL_24;
      }
    }
    sub_242097B70();
LABEL_27:
    sub_242079E50(&v53, a3);
  }
  else
  {
LABEL_24:
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return sub_242097B70();
}

uint64_t CatalogIndex.resourceBundle(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v9 = v5 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_24207EA48(v9, (uint64_t)&v15);
      v10 = v17;
      sub_242079800(&v15, v16);
      if (sub_24210CC48(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32)) == a1 && v11 == a2)
        break;
      v13 = sub_242079EB8();
      sub_242097830();
      if ((v13 & 1) != 0)
        goto LABEL_13;
      sub_242079824((uint64_t)&v15);
      v9 += 40;
      if (!--v6)
      {
        sub_242097384();
        goto LABEL_11;
      }
    }
    sub_242097384();
LABEL_13:
    sub_24207F700();
    sub_242079E50(&v15, a3);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return sub_242097384();
}

void sub_24210798C()
{
  sub_24210CB64();
  __asm { BR              X10 }
}

uint64_t sub_2421079D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242107A2C + 4 * byte_242163926[a2]))(7565161);
}

void sub_242107A2C(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 7565161 && v1 == 0xE300000000000000)
    sub_24210CC04();
  else
    sub_24210C9D0();
  sub_242097384();
  sub_242097830();
  sub_242097A00();
}

void sub_242107AB8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_242107B3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_242107C00 + 4 * byte_242163936[a2]))();
}

void sub_242107C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a1 != a3 || v3 != 0xEF32765F65677261)
    sub_242079EB8();
  sub_242097830();
  sub_242097384();
  sub_242097A00();
}

void sub_242107CE4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242107D2C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242107DA0 + 4 * byte_242163946[a2]))(0x385F61726F6CLL);
}

void sub_242107DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x385F61726F6CLL && v1 == v2)
    sub_24210CC04();
  else
    sub_24210C9D0();
  sub_242097384();
  sub_242097830();
  sub_242097A00();
}

void sub_242107E24(uint64_t a1, uint64_t a2)
{
  sub_2421082FC(a1, a2, sub_242086B54);
}

uint64_t sub_242107E30(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 7696487;
  else
    v2 = 6647393;
  if ((a2 & 1) != 0)
    v3 = 7696487;
  else
    v3 = 6647393;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_242079EB8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_242107E98(uint64_t a1, uint64_t a2)
{
  sub_2421082FC(a1, a2, sub_24208621C);
}

void sub_242107EA4(uint64_t a1, uint64_t a2)
{
  sub_2421082FC(a1, a2, sub_242087B3C);
}

void sub_242107EB0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_242107EF0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242107F54 + 4 * byte_242163950[a2]))(0x5F72657470616461);
}

void sub_242107F54(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x5F72657470616461 && v1 == 0xEC00000065707974)
    sub_24210CC04();
  else
    sub_24210C9D0();
  sub_242097384();
  sub_242097830();
  sub_242097A00();
}

void sub_242107FC8(uint64_t a1, uint64_t a2)
{
  sub_2421082FC(a1, a2, sub_24208A3D8);
}

void sub_242107FD4(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0xD00000000000002CLL;
  v3 = 0x8000000242133F40;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000025;
    else
      v5 = 0xD000000000000013;
    if (v4 == 1)
      v6 = 0x8000000242133F70;
    else
      v6 = 0x8000000242133FA0;
  }
  else
  {
    v5 = 0xD00000000000002CLL;
    v6 = 0x8000000242133F40;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0xD000000000000025;
    else
      v2 = 0xD000000000000013;
    if (a2 == 1)
      v3 = 0x8000000242133F70;
    else
      v3 = 0x8000000242133FA0;
  }
  if (v5 != v2 || v6 != v3)
    sub_242079EB8();
  sub_242097830();
  sub_242097384();
  sub_242097A00();
}

void sub_2421080A8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = 1701869940;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E656C5F787463;
    else
      v3 = 0x6E656C5F716573;
    v4 = 0xE700000000000000;
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701869940;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x6E656C5F787463;
    else
      v2 = 0x6E656C5F716573;
    v5 = 0xE700000000000000;
  }
  else
  {
    v5 = 0xE400000000000000;
  }
  if (v3 == v2 && v4 == v5)
    sub_24210CC04();
  else
    sub_24210C9D0();
  sub_242097384();
  sub_242097830();
  sub_242097A00();
}

void sub_242108180(char a1)
{
  __asm { BR              X13 }
}

uint64_t sub_242108204(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_242108270 + 4 * byte_24216395A[a2]))(0x6F635F6C65646F6DLL);
}

void sub_242108270(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 0x6F635F6C65646F6DLL || v1 != 0xEC0000006769666ELL)
    sub_242079EB8();
  sub_242097830();
  sub_242097384();
  sub_242097A00();
}

void sub_2421082FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a3();
  v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8)
    sub_24210CC04();
  else
    sub_24210C9D0();
  sub_242097384();
  sub_242097830();
  sub_242097A00();
}

uint64_t sub_242108364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v29 = a2;
  v5 = sub_2420797C0((uint64_t *)&unk_254399E98);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24213251C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v31 = (char *)&v24 - v13;
  v32 = MEMORY[0x24BEE4AF8];
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v14 = 0;
    v25 = a3;
    v26 = v7;
    v27 = a1;
    while (1)
    {
      if (v14 >= *(_QWORD *)(a1 + 16))
      {
        __break(1u);
        return result;
      }
      v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v16 = *(_QWORD *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, a1 + v15 + v16 * v14, v8);
      sub_24207E8A8((uint64_t)v7, 0, 1, v8);
      if (sub_2420801D0((uint64_t)v7, 1, v8) == 1)
        goto LABEL_19;
      v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v17(v31, v7, v8);
      if (sub_2421324A4() == v29 && v18 == a3)
        break;
      v20 = sub_242132D14();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        goto LABEL_12;
      result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v31, v8);
LABEL_17:
      a1 = v27;
      ++v14;
      v7 = v26;
      if (v28 == v14)
        goto LABEL_18;
    }
    swift_bridgeObjectRelease();
LABEL_12:
    v17(v30, v31, v8);
    v21 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24210BF64(0, *(_QWORD *)(v21 + 16) + 1, 1);
      v21 = v32;
    }
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_24210BF64(v22 > 1, v23 + 1, 1);
      v21 = v32;
    }
    *(_QWORD *)(v21 + 16) = v23 + 1;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v17)(v21 + v15 + v23 * v16, v30, v8);
    v32 = v21;
    a3 = v25;
    goto LABEL_17;
  }
LABEL_18:
  sub_24207E8A8((uint64_t)v7, 1, 1, v8);
LABEL_19:
  swift_bridgeObjectRelease();
  sub_24207E9D0((uint64_t)v7, (uint64_t *)&unk_254399E98);
  swift_bridgeObjectRelease();
  return v32;
}

void static Sideload.defaultSideloadResourcesURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420797C0((uint64_t *)&unk_254399E98);
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v0);
  sub_24210CA8C();
  sub_24210CB78();
  MEMORY[0x24BDAC7A8](v1);
  sub_24210CA74();
  sub_24210CDC0();
  v2 = sub_24209745C();
  sub_24210CBF0(v2);
  sub_24210CCB0();
  sub_242097A00();
}

void static Sideload.addResource(container:to:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  unsigned int v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void *v52;
  unsigned int v53;
  id v54;
  id v55;
  _QWORD v56[3];
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  id v63[5];
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v61 = a2;
  v5 = sub_24210CBA0(*MEMORY[0x24BDAC8D0]);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_24210CAA8();
  MEMORY[0x24BDAC7A8](v7);
  sub_2420AA19C();
  v10 = (char *)(v8 - v9);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v56 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v56 - v16;
  if (qword_25439A0D0 != -1)
  {
    v60 = v15;
    swift_once();
  }
  sub_24210CC20();
  if (v19)
  {
    v59 = v10;
    v60 = v18;
    ResourceContainer.toResource()();
    if (v2)
      goto LABEL_13;
    if (!v63[3])
    {
      sub_24207E9D0((uint64_t)v63, &qword_254399C58);
      goto LABEL_13;
    }
    sub_2420A25F8();
    v57 = v7;
    v58 = v17;
    v20 = v65;
    v21 = v66;
    sub_242079800(v64, v65);
    v22 = v20;
    v23 = v57;
    v63[0] = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v22, v21);
    v63[1] = v24;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v3, *MEMORY[0x24BDCD7A0], v5);
    sub_2420A2FF8();
    sub_242132510();
    v25 = v5;
    v26 = v58;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v25);
    swift_bridgeObjectRelease();
    sub_2421324C8();
    v27 = *(void (**)(char *, uint64_t))(v60 + 8);
    v27(v14, v23);
    v28 = (void *)objc_opt_self();
    v63[0] = 0;
    v29 = objc_msgSend(v28, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v63);
    v30 = v63[0];
    if (v29)
    {
      v31 = sub_2421325AC();
      v33 = v32;

      v34 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      sub_24210CD94();
      v35 = (void *)sub_242132768();
      sub_242097830();
      v36 = objc_msgSend(v34, sel_fileExistsAtPath_, v35);

      if (!v36)
      {
LABEL_18:
        sub_2421325C4();
        sub_24210CD88();

        sub_24210CDA8();
LABEL_21:
        sub_242079824((uint64_t)v64);
        goto LABEL_13;
      }
      v61 = v34;
      if (qword_254397000 != -1)
        swift_once();
      v37 = sub_24213263C();
      sub_24207BF18(v37, (uint64_t)qword_2543A6570);
      v38 = v59;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v58, v23);
      v39 = sub_242132618();
      v40 = sub_242132984();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = sub_24210CA3C();
        v56[2] = v31;
        v42 = (uint8_t *)v41;
        v43 = (void *)sub_24210CA3C();
        v60 = v33;
        v63[0] = v43;
        *(_DWORD *)v42 = 136315138;
        v56[1] = v42 + 4;
        v44 = sub_24210CD94();
        v62 = sub_24212F968(v44, v45, (uint64_t *)v63);
        sub_242132A38();
        sub_242097830();
        v27(v38, v57);
        _os_log_impl(&dword_242074000, v39, v40, "Removing existing resource in order to replace it %s", v42, 0xCu);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_24210CD88();

      v51 = v58;
      sub_24210CD94();
      v52 = (void *)sub_242132768();
      sub_242097830();
      v63[0] = 0;
      v34 = v61;
      v53 = objc_msgSend(v61, sel_removeItemAtPath_error_, v52, v63);

      if (v53)
      {
        v54 = v63[0];
        goto LABEL_18;
      }
      v55 = v63[0];
      sub_24213248C();

      sub_242097610();
      sub_24210CDA8();
      v49 = v51;
      v50 = v57;
    }
    else
    {
      v48 = v30;
      sub_24213248C();

      sub_242097610();
      v49 = v26;
      v50 = v23;
    }
    v27(v49, v50);
    goto LABEL_21;
  }
  sub_2420A8E20();
  sub_2420970E4();
  sub_24210CA2C();
  sub_24210C9A8(v46, v47);
LABEL_13:
  sub_2420970A0();
}

void static Sideload.addResourceBundle(container:to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26[5];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v4 = sub_24210CBA0(*MEMORY[0x24BDAC8D0]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_24210CAA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_2420AA19C();
  v10 = v8 - v9;
  MEMORY[0x24BDAC7A8](v11);
  if (qword_25439A0D0 != -1)
    swift_once();
  sub_24210CC20();
  if (v12)
  {
    ResourceBundleContainer.toResourceBundle()();
    if (!v1)
    {
      v25 = a1;
      if (v26[3])
      {
        sub_2420A25F8();
        v24 = v6;
        v14 = v28;
        v13 = v29;
        sub_242079800(v27, v28);
        v26[0] = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v14, v13);
        v26[1] = v15;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v2, *MEMORY[0x24BDCD7A0], v4);
        sub_2420A2FF8();
        sub_242132510();
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
        swift_bridgeObjectRelease();
        sub_2421324C8();
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v24);
        v26[0] = 0;
        v16 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v25, 1, v26);
        v17 = v26[0];
        if (v16)
        {
          v18 = sub_2421325AC();
          v20 = v19;

          sub_2421325C4();
          sub_24210CD20();
          sub_24207BED4(v18, v20);
        }
        else
        {
          v23 = v17;
          sub_24213248C();

          sub_242097610();
          sub_24210CD20();
        }
        sub_242079824((uint64_t)v27);
      }
      else
      {
        sub_24207E9D0((uint64_t)v26, &qword_25719D980);
      }
    }
  }
  else
  {
    sub_2420A8E20();
    sub_2420970E4();
    sub_24210CA2C();
    sub_24210C9A8(v21, v22);
  }
  sub_2420970A0();
}

void static Sideload.removeResource(for:from:)(void *a1, void *a2)
{
  sub_242108F40(a1, a2);
}

void static Sideload.removeResourceBundle(for:from:)(void *a1, void *a2)
{
  sub_242108F40(a1, a2);
}

void sub_242108F40(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  void *v16;
  unsigned __int8 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23[2];

  v4 = sub_24210CBA0(*MEMORY[0x24BDAC8D0]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_24207F540();
  v8 = v7 - v6;
  v22 = sub_24213251C();
  v9 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_2420AA19C();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  if (qword_25439A0D0 != -1)
    swift_once();
  sub_24210CC20();
  if (v14)
  {
    v23[0] = a1;
    v23[1] = a2;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BDCD7A0], v4);
    sub_2420A2FF8();
    sub_242132510();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    sub_2421324C8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v22);
    v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v16 = (void *)sub_2421324BC();
    v23[0] = 0;
    v17 = objc_msgSend(v15, sel_removeItemAtURL_error_, v16, v23);

    if ((v17 & 1) != 0)
    {
      v18 = v23[0];
    }
    else
    {
      v21 = v23[0];
      sub_24213248C();

      sub_242097610();
    }
    sub_24210CD14();
  }
  else
  {
    sub_2420A8E20();
    sub_2420970E4();
    sub_24210CA2C();
    sub_24210C9A8(v19, v20);
  }
  sub_2420970A0();
}

uint64_t sub_242109180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  void *v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  char *v40;
  os_log_type_t v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  id v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t *v56;
  uint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v68;
  _QWORD v69[2];
  uint64_t *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  __int128 v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  void *v79;
  unint64_t v80;
  uint64_t v81;
  void (*v82)(char *, unint64_t, uint64_t);
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  id v86[7];

  v86[5] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = sub_24213251C();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v72 = (char *)v69 - v13;
  v14 = sub_2420797C0((uint64_t *)&unk_254399E98);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25439A0D0 != -1)
    swift_once();
  if (byte_2543A65C8 != 1)
  {
    sub_2420A8E20();
    swift_allocError();
    *(_QWORD *)v66 = 0xD000000000000029;
    *(_QWORD *)(v66 + 8) = 0x8000000242140E60;
    *(_BYTE *)(v66 + 16) = 2;
    return swift_willThrow();
  }
  v77 = v9;
  v78 = v12;
  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v18 = (void *)sub_2421324BC();
  v86[0] = 0;
  v19 = objc_msgSend(v17, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v18, 0, 5, v86);

  v20 = v86[0];
  if (!v19)
  {
    v68 = v86[0];
    sub_24213248C();

    return swift_willThrow();
  }
  v21 = sub_2421328AC();
  v22 = v20;

  swift_bridgeObjectRetain();
  v23 = sub_242108364(v21, a2, a3);
  v25 = v4;
  v26 = *(_QWORD *)(v23 + 16);
  v71 = v23;
  if (v26)
  {
    v70 = a4;
    v27 = v77;
    v28 = v23 + ((*((unsigned __int8 *)v27 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v27 + 80));
    v76 = v77[9];
    v82 = (void (*)(char *, unint64_t, uint64_t))v77[2];
    *(_QWORD *)&v24 = 136315394;
    v74 = v24;
    v73 = MEMORY[0x24BEE4AD8] + 8;
    v29 = v78;
    v30 = v72;
    v75 = v16;
    do
    {
      v82(v16, v28, v8);
      sub_24207E8A8((uint64_t)v16, 0, 1, v8);
      if (sub_2420801D0((uint64_t)v16, 1, v8) == 1)
        return swift_bridgeObjectRelease();
      v80 = v28;
      v81 = v26;
      ((void (*)(char *, char *, uint64_t))v27[4])(v30, v16, v8);
      v31 = sub_24213254C();
      if (v25)
      {
        v79 = 0;
        if (qword_25439A0E8 != -1)
          swift_once();
        v36 = sub_24213263C();
        sub_24207BF18(v36, (uint64_t)qword_2543A65D0);
        v82(v29, (unint64_t)v30, v8);
        v37 = v25;
        v38 = v25;
        v39 = sub_242132618();
        v40 = v30;
        v41 = sub_2421329A8();
        if (os_log_type_enabled(v39, v41))
        {
          v42 = swift_slowAlloc();
          v43 = (_QWORD *)swift_slowAlloc();
          v44 = (void *)swift_slowAlloc();
          v86[0] = v44;
          *(_DWORD *)v42 = v74;
          sub_24210C928();
          v45 = sub_242132D08();
          *(_QWORD *)(v42 + 4) = sub_24212F968(v45, v46, (uint64_t *)v86);
          swift_bridgeObjectRelease();
          v47 = (void (*)(char *, uint64_t))v77[1];
          v47(v78, v8);
          *(_WORD *)(v42 + 12) = 2112;
          v48 = v25;
          v49 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v42 + 14) = v49;
          *v43 = v49;

          _os_log_impl(&dword_242074000, v39, v41, "Failed to read side-load file %s: %@", (uint8_t *)v42, 0x16u);
          sub_2420797C0(&qword_254399B50);
          swift_arrayDestroy();
          v50 = v43;
          v29 = v78;
          MEMORY[0x2426A4194](v50, -1, -1);
          swift_arrayDestroy();
          v51 = v44;
          v27 = v77;
          MEMORY[0x2426A4194](v51, -1, -1);
          MEMORY[0x2426A4194](v42, -1, -1);

          v47(v40, v8);
        }
        else
        {

          v52 = (void (*)(char *, uint64_t))v27[1];
          v52(v29, v8);

          v52(v40, v8);
        }
        v30 = v40;
        v16 = v75;
        v25 = v79;
        v53 = v80;
        v54 = v81;
        goto LABEL_16;
      }
      v33 = v31;
      v34 = v32;
      sub_24210C968();
      type metadata accessor for ResourceContainer();
      v35 = (void *)sub_2421329B4();
      if (v35)
      {
        v55 = v35;
        ResourceContainer.toResource()();

        if (*((_QWORD *)&v84 + 1))
        {
          sub_242079E50(&v83, (uint64_t)v86);
          sub_24207EA48((uint64_t)v86, (uint64_t)&v83);
          v56 = v70;
          v57 = *v70;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v56 = v57;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_24210B0C4(0, *(_QWORD *)(v57 + 16) + 1, 1, v57, &qword_254399938, (uint64_t *)&unk_254399948);
            v57 = v64;
            *v70 = v64;
          }
          v79 = 0;
          v60 = *(_QWORD *)(v57 + 16);
          v59 = *(_QWORD *)(v57 + 24);
          if (v60 >= v59 >> 1)
          {
            sub_24210B0C4(v59 > 1, v60 + 1, 1, v57, &qword_254399938, (uint64_t *)&unk_254399948);
            *v70 = v65;
          }
          v61 = sub_242079844((uint64_t)&v83, *((uint64_t *)&v84 + 1));
          v69[1] = v69;
          MEMORY[0x24BDAC7A8](v61);
          (*(void (**)(char *))(v63 + 16))((char *)v69 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
          sub_24207E964();
          sub_242079824((uint64_t)&v83);
          sub_24207BED4(v33, v34);

          sub_242079824((uint64_t)v86);
          v27 = v77;
          v29 = v78;
          v30 = v72;
          v25 = v79;
          goto LABEL_28;
        }
        sub_24207BED4(v33, v34);

      }
      else
      {
        v85 = 0;
        v83 = 0u;
        v84 = 0u;
        sub_24207BED4(v33, v34);
      }
      sub_24207E9D0((uint64_t)&v83, &qword_254399C58);
LABEL_28:
      v53 = v80;
      v54 = v81;
      ((void (*)(char *, uint64_t))v27[1])(v30, v8);
LABEL_16:
      v28 = v53 + v76;
      v26 = v54 - 1;
    }
    while (v26);
  }
  sub_24207E8A8((uint64_t)v16, 1, 1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_242109968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  __int128 v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  id v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  id v52;
  _QWORD v54[2];
  __int128 v55;
  char *v56;
  _QWORD *v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, unint64_t, uint64_t);
  id v66[2];

  v64 = a4;
  v66[1] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = sub_24213251C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v62 = (char *)v54 - v14;
  v15 = sub_2420797C0((uint64_t *)&unk_254399E98);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25439A0D0 != -1)
    swift_once();
  if (byte_2543A65C8 != 1)
  {
    sub_2420A8E20();
    swift_allocError();
    *(_QWORD *)v51 = 0xD000000000000029;
    *(_QWORD *)(v51 + 8) = 0x8000000242140E60;
    *(_BYTE *)(v51 + 16) = 2;
LABEL_22:
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  v56 = v13;
  v63 = v10;
  v18 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v19 = (void *)sub_2421324BC();
  v66[0] = 0;
  v20 = objc_msgSend(v18, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v19, 0, 5, v66);

  v21 = v66[0];
  if (!v20)
  {
    v52 = v66[0];
    sub_24213248C();

    goto LABEL_22;
  }
  v61 = v17;
  v22 = sub_2421328AC();
  v23 = v21;

  swift_bridgeObjectRetain();
  v24 = sub_242108364(v22, a2, a3);
  v26 = v5;
  v27 = *(_QWORD *)(v24 + 16);
  v54[0] = v24;
  if (v27)
  {
    v29 = (uint64_t)v62;
    v28 = v63;
    v30 = v24 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
    v60 = *(_QWORD *)(v63 + 72);
    v65 = *(void (**)(char *, unint64_t, uint64_t))(v63 + 16);
    *(_QWORD *)&v25 = 136315394;
    v55 = v25;
    v54[1] = MEMORY[0x24BEE4AD8] + 8;
    v31 = v56;
    v59 = a5;
    while (1)
    {
      v32 = (uint64_t)v61;
      v65(v61, v30, v9);
      sub_24207E8A8(v32, 0, 1, v9);
      if (sub_2420801D0(v32, 1, v9) == 1)
        break;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v29, v32, v9);
      sub_24210A0D8(v29, v64, a5);
      if (v26)
      {
        if (qword_25439A0E8 != -1)
          swift_once();
        v33 = sub_24213263C();
        sub_24207BF18(v33, (uint64_t)qword_2543A65D0);
        v34 = v62;
        v65(v31, (unint64_t)v62, v9);
        v35 = v26;
        v36 = v26;
        v37 = v31;
        v38 = sub_242132618();
        v39 = sub_2421329A8();
        if (os_log_type_enabled(v38, v39))
        {
          v40 = swift_slowAlloc();
          v57 = (_QWORD *)swift_slowAlloc();
          v58 = (void *)swift_slowAlloc();
          v66[0] = v58;
          *(_DWORD *)v40 = v55;
          sub_24210C928();
          v41 = v37;
          v42 = sub_242132D08();
          *(_QWORD *)(v40 + 4) = sub_24212F968(v42, v43, (uint64_t *)v66);
          swift_bridgeObjectRelease();
          v44 = *(void (**)(char *, uint64_t))(v63 + 8);
          v44(v41, v9);
          *(_WORD *)(v40 + 12) = 2112;
          v45 = v26;
          v46 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v40 + 14) = v46;
          v47 = v57;
          *v57 = v46;

          _os_log_impl(&dword_242074000, v38, v39, "Failed to read side-load file %s: %@", (uint8_t *)v40, 0x16u);
          sub_2420797C0(&qword_254399B50);
          swift_arrayDestroy();
          MEMORY[0x2426A4194](v47, -1, -1);
          v48 = v58;
          swift_arrayDestroy();
          MEMORY[0x2426A4194](v48, -1, -1);
          v49 = v40;
          v28 = v63;
          MEMORY[0x2426A4194](v49, -1, -1);

          v34 = v62;
          v44(v62, v9);
          v26 = 0;
          a5 = v59;
          v31 = v56;
        }
        else
        {

          v50 = *(void (**)(char *, uint64_t))(v63 + 8);
          v50(v37, v9);

          v50(v34, v9);
          v28 = v63;
          v26 = 0;
          a5 = v59;
          v31 = v37;
        }
        v29 = (uint64_t)v34;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v9);
      }
      v30 += v60;
      if (!--v27)
        goto LABEL_19;
    }
  }
  else
  {
LABEL_19:
    sub_24207E8A8((uint64_t)v61, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static Sideload.fetchResources(at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_25439A0D0 != -1)
    swift_once();
  if ((byte_2543A65C8 & 1) != 0)
  {
    v6 = MEMORY[0x24BEE4AF8];
    sub_242109180(a1, 0x656372756F736572, 0xE800000000000000, &v6);
    result = v6;
    if (v1)
      return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2420A8E20();
    sub_2420970E4();
    sub_24210CA2C();
    return sub_24210C9A8(v4, v5);
  }
  return result;
}

uint64_t static Sideload.fetchResourceBundles(at:resources:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_25439A0D0 != -1)
    swift_once();
  if ((byte_2543A65C8 & 1) != 0)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_242097198();
    sub_242109968(a1, 0x6552656C646E7562, 0xEE00656372756F73, a2, &v8);
    result = v8;
    if (v2)
      return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2420A8E20();
    sub_2420970E4();
    sub_24210CA2C();
    return sub_24210C9A8(v6, v7);
  }
  return result;
}

void sub_24210A0D8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;

  v6 = sub_24213254C();
  if (v3)
    return;
  v8 = v6;
  v9 = v7;
  sub_24210C968();
  type metadata accessor for ResourceBundleContainer();
  v10 = (void *)sub_2421329B4();
  if (!v10)
  {
    v43 = 0;
    v41 = 0u;
    v42 = 0u;
    sub_24207BED4(v8, v9);
LABEL_5:
    sub_24207E9D0((uint64_t)&v41, &qword_25719D980);
    return;
  }
  v11 = v10;
  ResourceBundleContainer.toResourceBundle()();

  if (!*((_QWORD *)&v42 + 1))
  {
    sub_24207BED4(v8, v9);

    goto LABEL_5;
  }
  sub_242079E50(&v41, (uint64_t)v44);
  v12 = v45;
  v13 = v46;
  sub_242079800(v44, v45);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  v33 = *(_QWORD *)(v37 + 16);
  if (v33)
  {
    v14 = 0;
    v15 = *(_QWORD *)(a2 + 16);
    v36 = a2 + 32;
    v35 = v9;
    v31 = v15;
    v32 = a3;
    v34 = v11;
    while (v15)
    {
      v47 = (_QWORD *)(v37 + 32 + 40 * v14);
      v40 = v47 + 3;
      v38 = v14 + 1;
      v39 = v47 + 4;
      swift_bridgeObjectRetain();
      v16 = v36;
      v17 = v15;
      while (1)
      {
        sub_24207EA48(v16, (uint64_t)&v41);
        v18 = *((_QWORD *)&v42 + 1);
        v19 = v43;
        sub_242079800(&v41, *((uint64_t *)&v42 + 1));
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
        v22 = v21;
        v23 = *v40;
        v24 = *v39;
        sub_242079800(v47, *v40);
        if (v20 == (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24) && v22 == v25)
          break;
        v27 = sub_242132D14();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_242079824((uint64_t)&v41);
        if ((v27 & 1) != 0)
          goto LABEL_19;
        v16 += 40;
        if (!--v17)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v9 = v35;
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease_n();
      sub_242079824((uint64_t)&v41);
LABEL_19:
      swift_bridgeObjectRelease();
      v14 = v38;
      a3 = v32;
      v9 = v35;
      v11 = v34;
      v15 = v31;
      if (v38 == v33)
        goto LABEL_20;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    v28 = a3;
    sub_24207E8B4();
    v29 = *(_QWORD *)(*a3 + 16);
    sub_24207E8FC(v29);
    v30 = *v28;
    *(_QWORD *)(v30 + 16) = v29 + 1;
    sub_24207EA48((uint64_t)v44, v30 + 40 * v29 + 32);

  }
LABEL_22:
  sub_24207BED4(v8, v9);
  sub_242079824((uint64_t)v44);
}

BOOL static ResourceReadinessStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ResourceReadinessStatus.hash(into:)()
{
  return sub_242132D80();
}

uint64_t ResourceReadinessStatus.hashValue.getter()
{
  sub_242132D74();
  sub_242132D80();
  return sub_242132D98();
}

uint64_t CatalogIndex.resources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CatalogIndex.resourceBundles.getter()
{
  return swift_bridgeObjectRetain();
}

ModelCatalog::CatalogIndex __swiftcall CatalogIndex.init()()
{
  _OWORD *v0;
  _OWORD *v1;
  Swift::OpaquePointer v2;
  uint64_t v3;
  Swift::OpaquePointer v4;
  void *v5;
  void *rawValue;
  ModelCatalog::CatalogIndex v7;
  ModelCatalog::CatalogIndex result;
  __int128 v9;

  v1 = v0;
  if (qword_254397090 != -1)
    swift_once();
  v2._rawValue = (void *)qword_254397010;
  v3 = qword_254397088;
  sub_242097198();
  if (v3 != -1)
    swift_once();
  v4._rawValue = (void *)qword_254397008;
  swift_bridgeObjectRetain();
  v7 = CatalogIndex.init(resources:resourceBundles:)(v2, v4);
  rawValue = v7.resourceBundles._rawValue;
  v5 = v7.resources._rawValue;
  *v1 = v9;
  result.resourceBundles._rawValue = rawValue;
  result.resources._rawValue = v5;
  return result;
}

uint64_t static CatalogIndex.essentialResources()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2420797C0((uint64_t *)&unk_254399E98);
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v1);
  sub_24207F540();
  v4 = v3 - v2;
  v5 = sub_242132498();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_24210CA74();
  v7 = sub_24209745C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_24207F540();
  v11 = v10 - v9;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v0, *MEMORY[0x24BDCD790], v5);
  sub_24207E8A8(v4, 1, 1, v7);
  sub_2421324F8();
  v12 = static CatalogIndex.essentialResources(sideLoadUrl:)(v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  return v12;
}

double CatalogIndex.init(sideloadURL:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  Swift::OpaquePointer v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  Swift::OpaquePointer resourceBundles[2];

  v4 = static Sideload.fetchResources(at:)(a1);
  if (qword_254397090 != -1)
    swift_once();
  v5 = swift_bridgeObjectRetain();
  sub_24210C530(v5, &qword_254399938, (uint64_t *)&unk_254399948);
  v6._rawValue = (void *)v4;
  v7 = static Sideload.fetchResourceBundles(at:resources:)(a1, v4);
  if (qword_254397088 != -1)
    swift_once();
  resourceBundles[0]._rawValue = (void *)v7;
  v8 = swift_bridgeObjectRetain();
  sub_24210C530(v8, &qword_254397478, &qword_254397170);
  CatalogIndex.init(resources:resourceBundles:)(v6, (Swift::OpaquePointer)v7);
  v9 = sub_24209745C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  result = *(double *)&v7;
  *a2 = *(_OWORD *)&resourceBundles[0]._rawValue;
  return result;
}

BOOL sub_24210ACC0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v64;

  if (qword_25439A0E8 != -1)
    swift_once();
  v5 = sub_24213263C();
  v6 = sub_24207BF18(v5, (uint64_t)qword_2543A65D0);
  sub_24210CD7C(v6, v7, v8, v9, v10);
  v11 = sub_242132618();
  v12 = sub_242132990();
  v13 = os_log_type_enabled(v11, v12);
  if (v13)
  {
    v18 = (uint8_t *)sub_24210CA3C();
    v64 = sub_24210CA3C();
    *(_DWORD *)v18 = 136315138;
    v20 = AssociatedTypeWitness;
    v19 = AssociatedConformanceWitness;
    sub_242079800(v61, AssociatedTypeWitness);
    v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v19 + 8) + 24))(v20);
    sub_24210CDB4(v21, v22);
    sub_242132A38();
    v23 = sub_242097830();
    sub_24210CBC0(v23, v24, v25, v26, v27);
    _os_log_impl(&dword_242074000, v11, v12, "isEssentialResourcesReady: fetching asset for %s", v18, 0xCu);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_24210CBC0(v13, v14, v15, v16, v17);

  v28 = a1[3];
  v29 = a1[4];
  sub_242079800(a1, v28);
  v64 = a2;
  v30 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v29 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24207F280(v61);
  v31 = v30(&v64, v28, v29);
  if (v2)
  {
    v36 = sub_2420967B0((uint64_t)v61);
    sub_24210CD7C(v36, v37, v38, v39, v40);
    sub_24210CD34();
    sub_24210CD34();
    v41 = sub_242132618();
    v42 = sub_2421329A8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = sub_24210CA3C();
      v44 = (_QWORD *)sub_24210CA3C();
      v64 = sub_24210CA3C();
      *(_DWORD *)v43 = 136315394;
      v46 = AssociatedTypeWitness;
      v45 = AssociatedConformanceWitness;
      sub_242079800(v61, AssociatedTypeWitness);
      v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v45 + 8) + 24))(v46);
      sub_24210CDB4(v47, v48);
      sub_242132A38();
      v49 = sub_242097830();
      sub_24210CBC0(v49, v50, v51, v52, v53);
      *(_WORD *)(v43 + 12) = 2112;
      sub_24210CD34();
      v60 = _swift_stdlib_bridgeErrorToNSError();
      sub_242132A38();
      *v44 = v60;
      sub_24210CAEC();
      sub_24210CAEC();
      _os_log_impl(&dword_242074000, v41, v42, "Resource %s is not ready: %@", (uint8_t *)v43, 0x16u);
      sub_2420797C0(&qword_254399B50);
      sub_24210CC58();
      sub_24210C9C4();
    }
    sub_24210CAEC();
    sub_24210CBC0(v54, v55, v56, v57, v58);
    sub_24210CAEC();
    sub_24210CAEC();

  }
  else
  {
    sub_24210CBC0(v31, v32, v33, v34, v35);
  }
  return v2 != 0;
}

void sub_24210B09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24210B0C4(a1, a2, a3, a4, &qword_254399938, (uint64_t *)&unk_254399948);
}

void sub_24210B0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24210B0C4(a1, a2, a3, a4, &qword_25439A0C8, &qword_2543990D0);
}

void sub_24210B0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    sub_24210CADC();
    if (v10 != v11)
    {
      sub_24210CD08();
      if (v10)
      {
        __break(1u);
        return;
      }
      sub_24210CAC4();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (v13)
  {
    sub_24210CD00(a1, a2, a3, a4, a5);
    v14 = (_QWORD *)sub_24210CB8C();
    sub_24210CCD0(v14);
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  v15 = (char *)(v13 + 32);
  if ((v8 & 1) != 0)
  {
    sub_24210B8F8((char *)(a4 + 32), v12, v15);
    *(_QWORD *)(a4 + 16) = 0;
    sub_242097384();
  }
  else
  {
    sub_24210B30C(0, v12, (unint64_t)v15, a4, a6);
  }
  sub_24207F4E0();
}

void sub_24210B170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24210B0C4(a1, a2, a3, a4, &qword_254397478, &qword_254397170);
}

void sub_24210B184(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    sub_24210CADC();
    if (v7 != v8)
    {
      sub_24210CD08();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_24210CAC4();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    sub_2420797C0(&qword_254399940);
    v11 = (char *)sub_24210CCF4();
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  if ((a1 & 1) != 0)
  {
    sub_24210B5E8((char *)(a4 + 32), v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
    sub_242097384();
  }
  else
  {
    sub_24210B3FC(0, v9, (unint64_t)v13, a4);
  }
  sub_242097A00();
}

void sub_24210B248(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    sub_24210CADC();
    if (v7 != v8)
    {
      sub_24210CD08();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_24210CAC4();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    sub_2420797C0(&qword_25439A0F8);
    v11 = (char *)sub_24210CCF4();
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 32);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  if ((a1 & 1) != 0)
  {
    sub_24210B970((char *)(a4 + 32), v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
    sub_242097384();
  }
  else
  {
    sub_24210B4F0(0, v9, (unint64_t)v13, a4);
  }
  sub_242097A00();
}

uint64_t sub_24210B30C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_24210CD00(a1, a2, a3, a4, a5);
      swift_arrayInitWithCopy();
      sub_242097384();
      return v7;
    }
  }
  sub_24210C9E0();
  result = sub_24210CBC8();
  __break(1u);
  return result;
}

uint64_t sub_24210B3FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242132BC4();
  __break(1u);
  return result;
}

uint64_t sub_24210B4F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_242132BC4();
  __break(1u);
  return result;
}

char *sub_24210B5E8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_242132BC4();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_24210B66C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_242132BC4();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_24210B6F4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_242132BC4();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

uint64_t sub_24210B77C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_242132BC4();
    __break(1u);
  }
  else if (a3 < a1 || (result = sub_24213251C(), a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    sub_24213251C();
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_24210B878(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_242132BC4();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_24210B8F8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_24210C9E0();
    __src = (char *)sub_24210CBC8();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_24210B970(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_242132BC4();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

uint64_t sub_24210B9F4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_242132BC4();
  __break(1u);
  return result;
}

uint64_t sub_24210BAC0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_242132BC4();
  __break(1u);
  return result;
}

uint64_t sub_24210BB90(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 40 * a2 <= a1 || a1 + 40 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_242132BC4();
  __break(1u);
  return result;
}

uint64_t sub_24210BC60(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(sub_24213251C() - 8) + 72) * a2;
    v6 = a3 + v5;
    v7 = a1 + v5;
    if (v6 <= a1 || v7 <= a3)
      return swift_arrayInitWithCopy();
  }
  result = sub_242132BC4();
  __break(1u);
  return result;
}

void *sub_24210BD54(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_242132BC4();
  __break(1u);
  return result;
}

uint64_t sub_24210BE18(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  BOOL v4;
  uint64_t result;

  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (v4 = a1 + 40 * a2 > a3) : (v4 = 0), v4))
  {
    sub_24210C9E0();
    result = sub_24210CBC8();
    __break(1u);
  }
  else
  {
    sub_2420797C0(a4);
    return swift_arrayInitWithCopy();
  }
  return result;
}

void sub_24210BEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_24210C48C(a1, a2, a3, *v3, &qword_254399938, (uint64_t *)&unk_254399948);
  *v3 = v4;
}

char *sub_24210BF10(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_24210BFC8(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_24210BF2C(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_24210C0A8(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_24210BF48(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_24210C190(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

size_t sub_24210BF64(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_24210C278(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_24210BF80(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_24210C3B8(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_24210BF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_24210C48C(a1, a2, a3, *v3, &qword_25439A0C8, &qword_2543990D0);
  *v3 = v4;
}

char *sub_24210BFC8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2420797C0(&qword_254399940);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_24210B5E8(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24210B9F4((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_24210C0A8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2420797C0(&qword_254397810);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_24210B66C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24210BAC0((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_24210C190(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2420797C0(&qword_254397808);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_24210B6F4(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24210BB90((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

size_t sub_24210C278(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_2420797C0(&qword_2571A1438);
  v10 = *(_QWORD *)(sub_24213251C() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_24;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(sub_24213251C() - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (unint64_t)v13 + v16;
  v18 = a4 + v16;
  if ((v5 & 1) != 0)
  {
    sub_24210B77C(v18, v8, v17);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24210BC60(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

char *sub_24210C3B8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2420797C0(&qword_254397A20);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_24210B878(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24210BD54(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void sub_24210C48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  char *v16;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    sub_24210CADC();
    if (v10 != v11)
    {
      sub_24210CD08();
      if (v10)
      {
        __break(1u);
        return;
      }
      sub_24210CAC4();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (v13)
  {
    sub_24210CD00(a1, a2, a3, a4, a5);
    v14 = (_QWORD *)sub_24210CB8C();
    sub_24210CCD0(v14);
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  v15 = (char *)(v13 + 32);
  v16 = (char *)(a4 + 32);
  if ((v8 & 1) != 0)
  {
    sub_24210B8F8(v16, v12, v15);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24210BE18((unint64_t)v16, v12, (unint64_t)v15, a6);
  }
  swift_release();
  sub_24207F4E0();
}

void sub_24210C530(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v7 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v7)
      v12 = v6 + v4;
    else
      v12 = v6;
    sub_24210B0C4(isUniquelyReferenced_nonNull_native, v12, 1, v5, a2, a3);
    v5 = v13;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v4)
      goto LABEL_14;
    goto LABEL_16;
  }
  v14 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v14 < v4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_24210BE18(a1 + 32, v4, v5 + 40 * v14 + 32, a3);
  if (!v4)
  {
LABEL_14:
    sub_242097384();
    *v3 = v5;
    return;
  }
  v15 = *(_QWORD *)(v5 + 16);
  v16 = __OFADD__(v15, v4);
  v17 = v15 + v4;
  if (!v16)
  {
    *(_QWORD *)(v5 + 16) = v17;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_24210C624(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_24207F280((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_242079E50(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_24210C6A0()
{
  unint64_t result;

  result = qword_2571A1420;
  if (!qword_2571A1420)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceReadinessStatus, &type metadata for ResourceReadinessStatus);
    atomic_store(result, (unint64_t *)&qword_2571A1420);
  }
  return result;
}

void type metadata accessor for Sideload()
{
  sub_242082F08();
}

uint64_t storeEnumTagSinglePayload for ResourceReadinessStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24210C734 + 4 * byte_242163965[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24210C768 + 4 * byte_242163960[v4]))();
}

uint64_t sub_24210C768(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24210C770(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24210C778);
  return result;
}

uint64_t sub_24210C784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24210C78CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24210C790(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24210C798(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ResourceReadinessStatus()
{
  sub_242082F08();
}

uint64_t destroy for CatalogIndex()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s12ModelCatalog12CatalogIndexVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_24207F428();
}

_QWORD *assignWithCopy for CatalogIndex(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for CatalogIndex(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CatalogIndex(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CatalogIndex(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CatalogIndex()
{
  sub_242082F08();
}

unint64_t sub_24210C928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571A1428;
  if (!qword_2571A1428)
  {
    v1 = sub_24213251C();
    result = MEMORY[0x2426A40E0](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_2571A1428);
  }
  return result;
}

unint64_t sub_24210C968()
{
  unint64_t result;

  result = qword_2571A1430;
  if (!qword_2571A1430)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571A1430);
  }
  return result;
}

uint64_t sub_24210C9A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 2;
  return swift_willThrow();
}

void sub_24210C9C4()
{
  JUMPOUT(0x2426A4194);
}

uint64_t sub_24210C9D0()
{
  return sub_242132D14();
}

uint64_t sub_24210C9F4()
{
  return 0x735F6D6C65646F63;
}

uint64_t sub_24210CA3C()
{
  return swift_slowAlloc();
}

uint64_t sub_24210CA44()
{
  uint64_t v0;
  uint64_t v1;

  sub_2420BC0CC(v1, v0, 2u);
  sub_2420BC0CC(v1, v0, 2u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24210CA8C()
{
  return sub_242132498();
}

uint64_t sub_24210CAA8()
{
  return sub_24213251C();
}

void sub_24210CAD4()
{
  void *v0;

}

void sub_24210CAEC()
{
  void *v0;

}

void sub_24210CAF4()
{
  uint64_t v0;

  sub_24210BEE4(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

uint64_t sub_24210CB0C()
{
  return 0x736F6E6F69736976;
}

uint64_t sub_24210CB20()
{
  uint64_t v0;
  uint64_t v1;

  sub_2420BC0CC(v1, v0, 2u);
  return sub_2420BC0CC(v1, v0, 2u);
}

uint64_t sub_24210CB48()
{
  return 0x736F6863746177;
}

void sub_24210CB5C(uint64_t a1, uint64_t a2)
{
  sub_24210BEE4(a1, a2, 1);
}

uint64_t sub_24210CB64()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_24210CB8C()
{
  return swift_allocObject();
}

uint64_t sub_24210CBA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_242132498();
}

void sub_24210CBAC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_24210CBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_242079824((uint64_t)va);
}

uint64_t sub_24210CBC8()
{
  return sub_242132BC4();
}

uint64_t sub_24210CBF0(uint64_t a1)
{
  uint64_t v1;

  return sub_24207E8A8(v1, 1, 1, a1);
}

_QWORD *sub_24210CC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_242079800(&a21, a24);
}

id sub_24210CC30()
{
  void *v0;

  return v0;
}

uint64_t sub_24210CC48@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_24210CC58()
{
  return swift_arrayDestroy();
}

uint64_t sub_24210CC60()
{
  return 1634889580;
}

uint64_t sub_24210CC70(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  unint64_t v3;
  uint64_t v4;
  va_list va;

  va_start(va, a3);
  return sub_24212F968(v4, v3, (uint64_t *)va);
}

BOOL sub_24210CC80(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

BOOL sub_24210CC90(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_24210CCA0()
{
  return swift_dynamicCast();
}

uint64_t sub_24210CCB0()
{
  return sub_2421324F8();
}

uint64_t sub_24210CCC0()
{
  return 0x736F63616DLL;
}

size_t sub_24210CCD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_24210CCF4()
{
  return swift_allocObject();
}

uint64_t sub_24210CD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_2420797C0(a5);
}

uint64_t sub_24210CD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_24210CD20()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void sub_24210CD2C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id a17)
{

}

id sub_24210CD34()
{
  void *v0;

  return v0;
}

void sub_24210CD50(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_24210CD64()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_24210CD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_24207EA48(v5, (uint64_t)va);
}

uint64_t sub_24210CD88()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t sub_24210CD94()
{
  return sub_2421324E0();
}

uint64_t sub_24210CD9C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_2420BC0CC(v4, v3, a3);
}

uint64_t sub_24210CDA8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_24207BED4(v1, v0);
}

uint64_t sub_24210CDB4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_24212F968(a1, a2, (uint64_t *)(v2 - 72));
}

uint64_t sub_24210CDC0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v0 + 104))(v1);
}

BOOL sub_24210CDCC@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void *sub_24210CDD8()
{
  return &unk_2513223A8;
}

Swift::Bool __swiftcall Precondition.PreconditionType.isMet()()
{
  unsigned __int8 *v0;
  unsigned int v1;
  char v2;
  BOOL v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  char v13;
  char v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  char v24;
  BOOL v25;
  BOOL v26;
  char v27;
  BOOL v28;
  BOOL v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  BOOL v33;
  char v34;
  BOOL v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v49;

  v1 = *v0;
  v2 = v1 < 2;
  v3 = v1 < 2 || MEMORY[0x24BE086D0] == 0;
  if (!v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_aneArchitectureType);
    v5 = sub_242132780();
    v7 = v6;

    v8 = v5 == 3354984 && v7 == 0xE300000000000000;
    if (v8 || (sub_24210D200() & 1) != 0 || (v5 == 1731408232 ? (v9 = v7 == 0xE400000000000000) : (v9 = 0), v9))
    {
      v2 = 1;
    }
    else
    {
      sub_24210D200();
      sub_24210D220();
      v13 = v3 && v7 == v11;
      v2 = 1;
      if ((v10 & 1) == 0 && (v13 & 1) == 0)
      {
        v14 = sub_24210D200();
        v15 = v5 == 1731473768 && v7 == 0xE400000000000000;
        v16 = v15;
        if ((v14 & 1) == 0 && !v16)
        {
          v17 = sub_24210D200();
          v18 = v5 == 1664364904 && v7 == 0xE400000000000000;
          v19 = v18;
          v2 = 1;
          if ((v17 & 1) == 0 && !v19)
          {
            sub_24210D200();
            sub_24210D220();
            v22 = v3 && v7 == v21;
            v23 = v22;
            if ((v20 & 1) == 0 && !v23)
            {
              v24 = sub_24210D200();
              v25 = v5 == 1731539304 && v7 == 0xE400000000000000;
              v26 = v25;
              if ((v24 & 1) == 0 && !v26)
              {
                v27 = sub_24210D200();
                v28 = v5 == 1664430440 && v7 == 0xE400000000000000;
                v29 = v28;
                v2 = 1;
                if ((v27 & 1) == 0 && !v29)
                {
                  sub_24210D200();
                  sub_24210D220();
                  v32 = v3 && v7 == v31;
                  v33 = v32;
                  if ((v30 & 1) == 0 && !v33)
                  {
                    v34 = sub_24210D200();
                    v35 = v5 == 1731604840 && v7 == 0xE400000000000000;
                    v36 = v35;
                    if ((v34 & 1) == 0 && !v36)
                    {
                      sub_24210D200();
                      sub_24210D220();
                      v39 = v3 && v7 == v38;
                      v40 = v39;
                      if ((v37 & 1) == 0
                        && !v40
                        && (sub_24210D200() & 1) == 0
                        && (v5 != 0x30336E2E67343168 || v7 != 0xE900000000000031))
                      {
                        v2 = sub_24210D200();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    if (qword_254397000 != -1)
      swift_once();
    v42 = sub_24213263C();
    sub_24207BF18(v42, (uint64_t)qword_2543A6570);
    swift_bridgeObjectRetain();
    v43 = sub_242132618();
    v44 = sub_242132984();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_DWORD *)v45 = 136315394;
      swift_bridgeObjectRetain();
      sub_24212F968(v5, v7, &v49);
      sub_24210D210();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2080;
      if ((v2 & 1) != 0)
        v46 = 0;
      else
        v46 = 7630702;
      if ((v2 & 1) != 0)
        v47 = 0xE000000000000000;
      else
        v47 = 0xE300000000000000;
      sub_24212F968(v46, v47, &v49);
      sub_24210D210();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_242074000, v43, v44, "[PreconditionType.aneHardwareEligible] Device architecture \"%s\" is %s eligible", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      sub_24210C9C4();
    }

    swift_bridgeObjectRelease_n();
  }
  return v2 & 1;
}

uint64_t sub_24210D200()
{
  return sub_242132D14();
}

uint64_t sub_24210D210()
{
  return sub_242132A38();
}

uint64_t sub_24210D22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_242079780();
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

void sub_24210D280(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_242079780(), (v5 & 1) != 0))
  {
    sub_2420A99D4(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)a2);
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
    sub_24207F428();
  }
}

ModelCatalog::AssetLock __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetLock.init(resources:)(Swift::OpaquePointer resources)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  ModelCatalog::AssetLock result;
  uint64_t *v57;
  uint64_t v58;
  void *rawValue;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  int64_t v64;
  void (*v65)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[4];
  _QWORD *v69;
  _QWORD v70[7];
  _BYTE v71[24];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[6];
  uint64_t v76;

  v2 = sub_242132708();
  v76 = v2;
  v74 = MEMORY[0x24BEE4B08];
  v60 = *((_QWORD *)resources._rawValue + 2);
  if (!v60)
  {
    sub_242097384();
    v54 = MEMORY[0x24BEE4B08];
    goto LABEL_42;
  }
  v3 = v2;
  v4 = 0;
  v61 = (char *)resources._rawValue + 32;
  rawValue = resources._rawValue;
  while (2)
  {
    if (v4 >= *((_QWORD *)resources._rawValue + 2))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      result.assetSets._rawValue = (void *)sub_242132D38();
      __break(1u);
      return result;
    }
    v62 = v4 + 1;
    sub_24207EA48((uint64_t)&v61[40 * v4], (uint64_t)v71);
    v5 = v72;
    v6 = v73;
    sub_24211B214();
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 48))(v70, v5, v6);
    v7 = v70[4];
    v8 = v70[5];
    swift_bridgeObjectRelease();
    sub_242097384();
    sub_242076DC4(v68, v7, v8);
    swift_bridgeObjectRelease();
    sub_24211B214();
    v9 = sub_24207F648();
    v11 = AssetBackedResource.usages.getter(v9, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = v3;
    v69 = (_QWORD *)v3;
    v76 = 0x8000000000000000;
    sub_242119150(v11, (uint64_t)sub_242119110, 0, v75);
    v66 = v75[0];
    v67 = v75[3];
    v14 = v75[4];
    v65 = (void (*)(uint64_t *__return_ptr, _QWORD *))v75[5];
    v63 = v75[1];
    v64 = (unint64_t)(v75[2] + 64) >> 6;
    sub_2420A1CA0();
    while (1)
    {
      if (v14)
      {
        v15 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v16 = v15 | (v67 << 6);
        goto LABEL_29;
      }
      v17 = v67 + 1;
      if (__OFADD__(v67, 1))
        goto LABEL_47;
      if (v17 >= v64)
        goto LABEL_39;
      if (!*(_QWORD *)(v63 + 8 * v17))
      {
        sub_24211AD54();
        if (v18 == v19)
          goto LABEL_39;
        sub_24211B0C0();
        if (!v20)
        {
          sub_24211AD54();
          if (v18 == v19)
            goto LABEL_39;
          sub_24211B0C0();
          if (!v21)
          {
            sub_24211AD54();
            if (v18 == v19)
              goto LABEL_39;
            sub_24211B0C0();
            if (!v22)
            {
              sub_24211AD54();
              if (v18 == v19)
                goto LABEL_39;
              sub_24211B0C0();
              if (!v23)
              {
                sub_24211B0A8();
                if (v18 == v19)
                  goto LABEL_39;
                if (!*(_QWORD *)(v63 + 8 * v24))
                  break;
              }
            }
          }
        }
      }
LABEL_28:
      sub_24211AD44();
      v14 = v27 & v26;
      v16 = v29 + (v28 << 6);
      v67 = v28;
LABEL_29:
      v30 = (uint64_t *)(*(_QWORD *)(v66 + 48) + 16 * v16);
      v31 = *v30;
      v32 = v30[1];
      v33 = (uint64_t *)(*(_QWORD *)(v66 + 56) + 16 * v16);
      v34 = *v33;
      v35 = v33[1];
      v70[0] = v31;
      v70[1] = v32;
      v70[2] = v34;
      v70[3] = v35;
      sub_2420A1CA0();
      sub_24207F5FC();
      v65(v68, v70);
      sub_24207F700();
      sub_242097384();
      v37 = v68[0];
      v36 = v68[1];
      v38 = v68[2];
      v39 = v68[3];
      v40 = v13;
      v41 = sub_242079780();
      v43 = sub_24211AEC4(v42, *(_QWORD *)(v13 + 16));
      if (v19)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v45 = v44;
      if (*(_QWORD *)(v40 + 24) >= v43)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2420797C0(&qword_25439A0D8);
          sub_242132B4C();
        }
      }
      else
      {
        sub_2421180BC(v43, isUniquelyReferenced_nonNull_native & 1);
        v46 = sub_242079780();
        if ((v45 & 1) != (v47 & 1))
          goto LABEL_49;
        v41 = v46;
      }
      v48 = v69;
      if ((v45 & 1) != 0)
      {
        sub_24207F700();
        v13 = (uint64_t)v48;
        v49 = (uint64_t *)(v48[7] + 16 * v41);
        swift_bridgeObjectRelease();
        *v49 = v38;
        v49[1] = v39;
        isUniquelyReferenced_nonNull_native = 1;
      }
      else
      {
        sub_24211AE98((uint64_t)&v69[v41 >> 6]);
        v50 = (uint64_t *)(v48[6] + 16 * v41);
        *v50 = v37;
        v50[1] = v36;
        v51 = (uint64_t *)(v48[7] + 16 * v41);
        *v51 = v38;
        v51[1] = v39;
        v52 = v48[2];
        v19 = __OFADD__(v52, 1);
        v53 = v52 + 1;
        if (v19)
          goto LABEL_46;
        v13 = (uint64_t)v48;
        v48[2] = v53;
        isUniquelyReferenced_nonNull_native = 1;
      }
    }
    while (1)
    {
      sub_24211B0A8();
      if (v18 == v19)
        break;
      if (*(_QWORD *)(v63 + 8 * v25))
        goto LABEL_28;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    sub_24207F380();
    swift_release();
    v3 = v13;
    v76 = v13;
    swift_bridgeObjectRelease();
    sub_242079824((uint64_t)v71);
    resources._rawValue = rawValue;
    v4 = v62;
    if (v62 != v60)
      continue;
    break;
  }
  sub_242097384();
  v54 = v74;
LABEL_42:
  v55 = sub_24210D744(v54, &v76);
  sub_242097830();
  result.assetSets._rawValue = (void *)swift_bridgeObjectRelease();
  if (!v58)
    *v57 = v55;
  return result;
}

uint64_t sub_24210D744(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;

  v26 = MEMORY[0x24BEE4AF8];
  v24 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    v17 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v18 = objc_msgSend(v17, sel_sharedManager);
    v19 = (void *)sub_242132768();
    v20 = *a2;
    swift_bridgeObjectRetain();
    v21 = sub_242119090((uint64_t)v19, v20, v18);

    if (!v21)
    {
      swift_bridgeObjectRetain();
      sub_2421327EC();
      swift_bridgeObjectRetain();
      sub_2421326FC();
      sub_2421327EC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2421191AC();
      swift_allocError();
      *(_QWORD *)v23 = v15;
      *(_QWORD *)(v23 + 8) = v16;
      *(_BYTE *)(v23 + 16) = 0;
      swift_willThrow();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v22 = swift_bridgeObjectRelease();
    MEMORY[0x2426A37BC](v22);
    if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2421328C4();
    sub_2421328D0();
    result = sub_2421328B8();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v25)
      goto LABEL_27;
    v12 = *(_QWORD *)(v24 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v25)
        goto LABEL_27;
      v12 = *(_QWORD *)(v24 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v25)
          goto LABEL_27;
        v12 = *(_QWORD *)(v24 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v25)
            goto LABEL_27;
          v12 = *(_QWORD *)(v24 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v25)
  {
LABEL_27:
    swift_release();
    return v26;
  }
  v12 = *(_QWORD *)(v24 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v25)
      goto LABEL_27;
    v12 = *(_QWORD *)(v24 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_24210DA80()
{
  sub_24210DA94();
}

void sub_24210DA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_242132498();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_24207F540();
  v4 = v3 - v2;
  sub_24211ACF4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BDCD7A0], v0);
  sub_2420A2FF8();
  sub_242132504();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  swift_bridgeObjectRelease();
  sub_24207F4E0();
}

void AssetContents.metadataURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_24211AB68();
  v4 = v3;
  v6 = v5;
  v7 = sub_242132498();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_242097548();
  v9 = sub_24209745C();
  sub_242097518();
  MEMORY[0x24BDAC7A8](v10);
  sub_242097560();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v4);
  sub_24211ACF4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v0, *MEMORY[0x24BDCD7A0], v7);
  sub_2420A2FF8();
  sub_242132504();
  sub_2420C0B6C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v9);
  sub_242097670();
}

void sub_24210DC3C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210DC64();
  sub_24211AA78();
}

void sub_24210DC64()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedDiffusionAdapterBase;
    *(_QWORD *)(inited + 64) = sub_24208D1BC();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210DF24()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedDiffusionModelBase;
    *(_QWORD *)(inited + 64) = sub_24208D728();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210E1E4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedDisabledUseCaseListBase;
    *(_QWORD *)(inited + 64) = sub_24208DC34();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210E4A4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedGenerativeFunctionOverridesBase;
    *(_QWORD *)(inited + 64) = sub_24208E0E0();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210E764()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedHandwritingSynthesizerBase;
    *(_QWORD *)(inited + 64) = sub_24208E58C();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210EA24()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedImageFilterBase;
    *(_QWORD *)(inited + 64) = sub_24208EA38();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210ECE4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedImageInpainterBase;
    *(_QWORD *)(inited + 64) = sub_24208EEE4();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210EFA4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedImageMagicCleanUpBase;
    *(_QWORD *)(inited + 64) = sub_24208F390();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210F264()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedImageScalerBase;
    *(_QWORD *)(inited + 64) = sub_24208F83C();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210F524()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedImageSegmenterBase;
    *(_QWORD *)(inited + 64) = sub_24208FCE8();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210F7E4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedLLMAdapterBase;
    *(_QWORD *)(inited + 64) = sub_24209005C();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210FAA4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedLLMDraftModelBase;
    *(_QWORD *)(inited + 64) = sub_242090450();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_24210FD64()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedLLMModelBase;
    *(_QWORD *)(inited + 64) = sub_2420907A4();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_242110024()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedServerConfigurationBase;
    *(_QWORD *)(inited + 64) = sub_242090D14();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_2421102E4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedModelConfigurationReplacementBase;
    *(_QWORD *)(inited + 64) = sub_2420911C0();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_2421105A4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedSanitizerBase;
    *(_QWORD *)(inited + 64) = sub_2420916CC();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_242110864()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedTokenInputDenyListBase;
    *(_QWORD *)(inited + 64) = sub_242091BD8();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_242110B24()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedTokenOutputDenyListBase;
    *(_QWORD *)(inited + 64) = sub_242092084();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void sub_242110DE4()
{
  const void *v0;
  const void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[11];

  v1 = v0;
  v15[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  v2 = sub_242117C70();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_242163A40;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v5 = v2;
  v6 = sub_242117F64(0xD000000000000018, 0x8000000242140FB0, v3);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_acquireWithError_, v15);
  v8 = v15[0];
  if (v7)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = &type metadata for AssetBackedTokenizerBase;
    *(_QWORD *)(inited + 64) = sub_242092378();
    v10 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v10;
    memcpy((void *)(v10 + 16), v1, 0xB8uLL);
    sub_24211A76C();
    v11 = v8;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v12)
    {
      sub_242111374();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_invalidate);

      return;
    }
    objc_msgSend(v6, sel_invalidate);
    v13 = v5;
    v5 = v6;
  }
  else
  {
    v14 = v15[0];
    sub_24213248C();

    swift_willThrow();
    v13 = v6;
  }

}

void AssetBackedResource.fetchAsset()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  id v15;
  uint64_t inited;
  uint64_t *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v23[11];

  v4 = v3;
  v23[10] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24207F2FC(0, &qword_254399E38);
  sub_2420802AC();
  v7 = sub_242117C70();
  v8 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  sub_2420797C0((uint64_t *)&unk_254399E88);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_242163A40;
  *(_QWORD *)(v9 + 32) = v7;
  sub_2421328B8();
  objc_allocWithZone(MEMORY[0x24BE80B10]);
  v10 = v7;
  sub_2420802AC();
  v13 = sub_242117F64(v11, v12, v8);
  v23[0] = 0;
  v14 = objc_msgSend(v13, sel_acquireWithError_, v23);
  v15 = v23[0];
  if (v14)
  {
    sub_2420797C0(&qword_25439A0C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    *(_QWORD *)(inited + 56) = a1;
    *(_QWORD *)(inited + 64) = a2;
    v17 = sub_24207F280((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v17, v4, a1);
    v18 = v15;
    AssetLock.init(resources:)((Swift::OpaquePointer)inited);
    if (!v19)
    {
      (*(void (**)(id *, uint64_t, uint64_t))(a2 + 40))(v23, a1, a2);
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_invalidate);

      return;
    }
    objc_msgSend(v13, sel_invalidate, a3);
    v20 = v10;
    v10 = v13;
  }
  else
  {
    v21 = v23[0];
    sub_24213248C();

    swift_willThrow();
    v20 = v13;
  }

}

void sub_242111330(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242111374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(id *);
  NSObject *v8;
  void (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  NSObject *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  char v50;
  uint64_t v51;
  unint64_t *v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD);
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  NSObject *v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  NSObject *v93;
  os_log_type_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  id v105;
  NSObject *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(id *);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t *v131;
  void (*v132)(_QWORD);
  unint64_t *v133;
  NSObject *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  _BYTE v142[32];
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;

  sub_242097180();
  v130 = v5;
  v131 = v4;
  v126 = v7;
  v127 = v6;
  v136 = v1;
  v134 = v8;
  v132 = v9;
  v9(0);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v10);
  v128 = (uint64_t)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v12);
  sub_24211ADA4();
  v129 = v13;
  sub_2420797C0((uint64_t *)&unk_254399E98);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v14);
  sub_242080330();
  v123 = v15;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v118 - v17;
  v19 = sub_242132498();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = sub_24210CAA8();
  v133 = *(unint64_t **)(v21 - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v22);
  sub_242080330();
  v122 = v23;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v24);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v25);
  sub_24211ADA4();
  v135 = v26;
  v27 = *(_QWORD *)(v0 + 40);
  v124 = *(_QWORD *)(v0 + 32);
  v125 = v27;
  v28 = *(_BYTE *)(v0 + 56);
  v29 = sub_242097098(v142, (const void *)v0);
  if ((v28 & 1) != 0)
  {
    sub_24211B060((uint64_t)v29, *MEMORY[0x24BDCD790]);
    sub_24207E8A8((uint64_t)v18, 1, 1, v21);
    v51 = sub_2421324F8();
    v139 = v124;
    v140 = v125;
    sub_24211B060(v51, *MEMORY[0x24BDCD7A0]);
    sub_2420A2FF8();
    sub_242079ED8();
    sub_242132510();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v3, v19);
    sub_24211B15C();
    v52 = v133;
    v53 = (void (*)(uint64_t, uint64_t))v133[1];
    v53(v2, v21);
    v127 = sub_242132708();
    v30 = v134;
LABEL_16:
    v54 = v21;
    v55 = (void (*)(uint64_t, uint64_t, uint64_t))v52[2];
    v56 = v129;
    v57 = v135;
    v55(v129, v135, v54);
    v58 = v128;
    v59 = v132;
    sub_24211A870(v56, v128, v132);
    sub_242079F18();
    sub_242116D48(0, 0, 1, v58, v127, (uint64_t)v30, v131, v59, v130);
    sub_24211A8AC(v56, (uint64_t (*)(_QWORD))v59);
    v53(v57, v54);
    goto LABEL_55;
  }
  v127 = v2;
  v121 = v3;
  v124 = v20;
  v125 = v21;
  MEMORY[0x24BDAC7A8](v29);
  *(&v118 - 2) = v142;
  v30 = v134;
  sub_242079F18();
  v31 = v136;
  v32 = sub_242113D0C(v126, (uint64_t)(&v118 - 4), (unint64_t)v30);
  sub_242079EE0();
  if (!v32)
  {
    if (qword_254399A70 != -1)
      swift_once();
    v60 = 0xD000000000000016;
    v61 = sub_24207F4AC();
    sub_24207BF18(v61, (uint64_t)qword_2543A6598);
    sub_242097098(&v139, v142);
    sub_24211ACEC();
    sub_24211ACEC();
    sub_24211ACEC();
    sub_24211ACEC();
    v62 = sub_242132618();
    v63 = sub_242132984();
    if (sub_24211B0B4(v63))
    {
      v64 = sub_24210CA3C();
      v137 = sub_24210CA3C();
      *(_DWORD *)v64 = 136315394;
      if (v141)
      {
        sub_242097744();
        sub_2420C0B64();
      }
      else
      {
        sub_24211ABC8();
      }
      sub_24207F78C();
      v70 = sub_24211AAC4();
      sub_24211ADE0(v70, v71, &v137);
      sub_242132A38();
      sub_242097578();
      sub_24211AABC();
      sub_24211AABC();
      *(_WORD *)(v64 + 12) = 2080;
      sub_24211B048();
      sub_24211AEE4();
      sub_242132A38();
      swift_bridgeObjectRelease();
      sub_24211AABC();
      sub_24211AABC();
      sub_24211AD3C(&dword_242074000, v62, v63, "Failed to find asset set %s for %s", (uint8_t *)v64);
      sub_24211AD34();
      sub_24210C9C4();
    }
    sub_24211AABC();
    sub_24211AABC();
    sub_24211AABC();
    sub_24211AABC();

    v137 = 0;
    v138 = 0xE000000000000000;
    sub_242132AD4();
    if (v145)
    {
      v60 = v146;
      v72 = v147;
      sub_24207F5FC();
      sub_242097198();
    }
    else
    {
      v72 = 0x8000000242137900;
    }
    sub_24207F78C();
    sub_24207F700();
    sub_24211AAC4();
    v137 = v60;
    v138 = v72;
    sub_24211ABA4();
    sub_2421191AC();
    v73 = sub_2420970E4();
    sub_24211AE6C(v73, v74);
    goto LABEL_55;
  }
  v136 = v31;
  v33 = v149;
  LODWORD(v126) = v149 != 0;
  v120 = v19;
  if (!v149)
  {
    v34 = v143;
    v33 = v144;
    v65 = v32;
    sub_2420C13B0();
    v66 = sub_24211B008();
    v67 = sub_24211AFF0(v66, sel_assetNamed_);
    v68 = (id)v66;
    v37 = v123;
LABEL_24:
    v69 = v127;
    goto LABEL_34;
  }
  v34 = v148;
  v35 = qword_25439A0D0;
  v36 = v32;
  sub_2420C13B0();
  v37 = v123;
  if (v35 != -1)
    swift_once();
  if ((byte_2543A65C8 & 1) == 0)
  {
    v68 = (id)sub_24211B008();
    v67 = -[NSObject assetNamed:](v36, sel_assetNamed_, v68);
    goto LABEL_24;
  }
  v119 = v33;
  sub_24207F5FC();
  v38 = (void *)sub_242132768();
  sub_24207F700();
  v39 = -[NSObject assetNamed:](v36, sel_assetNamed_, v38);

  v118 = v39;
  if (!v39)
  {
LABEL_33:
    v33 = v119;
    v75 = (void *)sub_242132768();
    v67 = sub_24211AFF0((uint64_t)v75, sel_assetNamed_);

    v30 = v134;
    v69 = v127;
    v68 = v118;
LABEL_34:

    if (!v67)
    {
      v136 = v34;
      if (qword_254399A70 != -1)
        swift_once();
      v85 = sub_24207F4AC();
      sub_24207BF18(v85, (uint64_t)qword_2543A6598);
      sub_242097098(&v139, v142);
      sub_24211ACEC();
      sub_2420C13B0();
      sub_24211ACEC();
      sub_2420C13B0();
      v86 = sub_242132618();
      v87 = sub_242132984();
      if (sub_24211B0B4(v87))
      {
        v134 = v32;
        v88 = sub_24210CA3C();
        v137 = sub_24210CA3C();
        *(_DWORD *)v88 = 136315394;
        sub_2420C13B0();
        sub_24211B12C(v136, v89, &v137);
        sub_242132A38();
        v119 = v33;
        sub_24211AFE8();
        *(_WORD *)(v88 + 12) = 2080;
        if (v141)
        {
          sub_242097744();
          sub_2420C0B64();
        }
        else
        {
          sub_24211ABC8();
        }
        sub_24207F78C();
        v107 = sub_24211AAC4();
        sub_24211ADE0(v107, v108, &v137);
        sub_242132A38();
        sub_242097578();
        sub_24211AABC();
        sub_24211AABC();
        sub_24211AD3C(&dword_242074000, v86, v87, "Failed to find asset named %s in asset set %s", (uint8_t *)v88);
        sub_24211AD34();
        sub_24210C9C4();
      }
      sub_2420A1EFC();
      sub_24211AABC();
      sub_24211AABC();

      v137 = v136;
      v138 = v33;
      sub_24211AC4C();
      v109 = v137;
      v110 = v138;
      sub_2421191AC();
      v111 = sub_2420970E4();
      *v112 = v109;
      v112[1] = v110;
      sub_2420A17F8(v111, (uint64_t)v112);

      goto LABEL_55;
    }
    goto LABEL_35;
  }
  v40 = objc_msgSend(v118, sel_metadata);
  v41 = sub_24211AFE0();

  v42 = sub_242132780();
  v44 = sub_24210D22C(v42, v43, v41);
  v46 = v45;
  swift_bridgeObjectRelease();
  sub_242079EE0();
  v47 = sub_242132780();
  if (!v46)
  {
    sub_242079EE0();
    v37 = v123;
    goto LABEL_33;
  }
  v49 = v44 == v47 && v46 == v48;
  v37 = v123;
  if (!v49)
  {
    v50 = sub_242079EB8();
    sub_24207F700();
    sub_242079EE0();
    if ((v50 & 1) != 0)
      goto LABEL_57;
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  sub_24207F700();
LABEL_57:
  swift_bridgeObjectRelease();
  if (qword_254399A70 != -1)
    swift_once();
  v113 = sub_24207F4AC();
  sub_24207BF18(v113, (uint64_t)qword_2543A6598);
  sub_242097098(&v139, v142);
  sub_24211ACEC();
  v114 = sub_242132618();
  v115 = sub_2421329A8();
  if (os_log_type_enabled(v114, v115))
  {
    v116 = sub_24210CA3C();
    v137 = sub_24210CA3C();
    *(_DWORD *)v116 = 136315138;
    v126 = (uint64_t (*)(id *))(v116 + 4);
    sub_24211B048();
    v117 = sub_24211AEE4();
    sub_24211B248(v117);
    sub_242132A38();
    swift_bridgeObjectRelease();
    sub_24211AABC();
    _os_log_impl(&dword_242074000, v114, v115, "Using asset from asset root for resource %s", (uint8_t *)v116, 0xCu);
    swift_arrayDestroy();
    sub_24210C9C4();
  }
  sub_24211AABC();

  v30 = v134;
  v69 = v127;
  v67 = v118;
  v34 = v143;
  v33 = v144;
  sub_2420C13B0();
  LODWORD(v126) = 0;
LABEL_35:
  v76 = v67;
  if (objc_msgSend(v76, sel_location))
  {
    sub_24211B1D0();

    v77 = (void (*)(uint64_t, uint64_t, uint64_t))v133[4];
    v78 = v69;
    v79 = v125;
    v77(v37, v78, v125);
    sub_24207E8A8(v37, 0, 1, v79);
    if (sub_2420801D0(v37, 1, v79) != 1)
    {
      v134 = v32;
      swift_bridgeObjectRelease();
      v80 = v37;
      v81 = v122;
      v77(v122, v80, v79);
      v21 = v79;
      if ((_DWORD)v126)
      {
        v139 = v143;
        v140 = v144;
        v82 = v124;
        v83 = v120;
        v84 = v121;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v124 + 104))(v121, *MEMORY[0x24BDCD7A0], v120);
        sub_2420A2FF8();
        sub_242097198();
        sub_242132504();
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
        sub_24211B15C();
        v52 = v133;
      }
      else
      {
        v52 = v133;
        sub_24211B084(v135, v81, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v133[2]);
      }
      v105 = objc_msgSend(v76, sel_metadata, v118);
      v127 = sub_24211AFE0();

      v106 = v134;
      v53 = (void (*)(uint64_t, uint64_t))v52[1];
      v53(v81, v21);
      goto LABEL_16;
    }
  }
  else
  {
    sub_24207E8A8(v37, 1, 1, v125);
  }
  sub_242119318(v37, (uint64_t *)&unk_254399E98);
  if (qword_254399A70 != -1)
    swift_once();
  v90 = sub_24207F4AC();
  sub_24207BF18(v90, (uint64_t)qword_2543A6598);
  v91 = v76;
  swift_bridgeObjectRetain_n();
  v92 = v91;
  v93 = sub_242132618();
  v94 = sub_24213299C();
  v95 = v94;
  if (os_log_type_enabled(v93, v94))
  {
    v96 = sub_24210CA3C();
    v136 = v34;
    v97 = v96;
    v135 = sub_24210CA3C();
    v139 = v135;
    *(_DWORD *)v97 = 136315394;
    v134 = v93;
    sub_242097198();
    v137 = sub_24212F968(v136, v33, &v139);
    v133 = &v138;
    sub_24211B08C();
    sub_24211AFE8();
    *(_WORD *)(v97 + 12) = 2080;
    v131 = (uint64_t *)(v97 + 14);
    v98 = objc_msgSend(v92, sel_metadata);
    LODWORD(v132) = v95;
    sub_24211AF5C();

    v99 = sub_24211AE00();
    swift_bridgeObjectRelease();
    v137 = sub_24211B12C(v99, v100, &v139);
    sub_242132A38();

    swift_bridgeObjectRelease();
    sub_24211AD3C(&dword_242074000, v134, (os_log_type_t)v132, "Asset %s does not have a location. Metadata: %s", (uint8_t *)v97);
    sub_24211AD34();
    sub_24210C9C4();
  }

  sub_2420A1EFC();
  v139 = 0;
  v140 = 0xE000000000000000;
  sub_242132AD4();
  sub_24211B15C();
  v139 = v34;
  v140 = v33;
  sub_24211AB80();
  v101 = v139;
  v102 = v140;
  sub_2421191AC();
  v103 = sub_2420970E4();
  *v104 = v101;
  v104[1] = v102;
  sub_2420A17F8(v103, (uint64_t)v104);

LABEL_55:
  sub_2420970A0();
}

void AssetBackedResource<>.fetchLockedAsset(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(_QWORD), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v20)(uint64_t);
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *);
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t AssociatedTypeWitness;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *isa;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t *, uint64_t, uint64_t *, NSObject **, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t *v81;
  void (*v82)(uint64_t);
  NSObject *v83;
  void *v84;
  void (*v85)(uint64_t *);
  void (*v86)(NSObject **__return_ptr, uint64_t *, void (*)(_QWORD));
  char *v87;
  NSObject *v88;
  unint64_t v89;
  uint64_t v90;
  NSObject *v91;
  void (*v92)(uint64_t *);
  void *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  void (*v102)(uint64_t);
  BOOL v103;
  char v104;
  uint64_t *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  void (*v116)(uint64_t, uint64_t *);
  char *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  id v121;
  id v122;
  void (*v123)(uint64_t, uint64_t *);
  NSObject *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  id v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, uint64_t);
  NSObject *v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  id v156;
  NSObject *v157;
  os_log_type_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  NSObject *v166;
  unint64_t v167;
  uint64_t v168;
  NSObject **v169;
  NSObject *v170;
  unint64_t v171;
  uint64_t v172;
  NSObject **v173;
  id v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  NSObject *v179;
  os_log_type_t v180;
  uint64_t v181;
  uint8_t *v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  void (*v188)(uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint8_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t AssociatedConformanceWitness;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(uint64_t *);
  uint64_t v210;
  NSObject *v211;
  uint64_t v212;
  uint64_t *v213;
  NSObject *v214;
  void (*v215)(uint64_t);
  NSObject *v216;
  unint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  NSObject *v221;
  unint64_t v222;
  NSObject *v223;
  unint64_t v224;

  sub_242097180();
  a19 = v24;
  a20 = v25;
  v214 = v21;
  v209 = (void (*)(uint64_t *))v26;
  v28 = v27;
  v30 = v29;
  v211 = v31;
  v207 = v32;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v203 = AssociatedTypeWitness;
  v34 = swift_getAssociatedTypeWitness();
  v204 = *(_QWORD *)(v34 - 8);
  v205 = v34;
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v35);
  sub_242080330();
  v202 = v36;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v37);
  sub_24211ADA4();
  v201 = v38;
  v198 = *(v30 - 1);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v39);
  v197 = (char *)&v187 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v41);
  v195 = (uint64_t)&v187 - v42;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v43);
  v193 = (uint8_t *)&v187 - v44;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v45);
  sub_24211ADA4();
  v192 = v46;
  sub_2420797C0((uint64_t *)&unk_254399E98);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v47);
  sub_242080330();
  v196 = v48;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v49);
  sub_24211ADA4();
  v199 = v50;
  v51 = sub_242132498();
  v212 = *(_QWORD *)(v51 - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v52);
  v210 = sub_24210CAA8();
  v208 = *(_QWORD *)(v210 - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v53);
  sub_242080330();
  v194 = v54;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v55);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v56);
  sub_24211ADA4();
  v200 = v57;
  isa = v211->isa;
  v59 = v28;
  v60 = *(_QWORD *)(v28 + 8);
  v215 = v20;
  v213 = v30;
  v61 = sub_24211B06C();
  v63 = v62(v61);
  if ((v63 & 1) != 0)
  {
    v211 = isa;
    sub_24211B054(v63, *MEMORY[0x24BDCD790]);
    sub_24207E8A8(v199, 1, 1, v210);
    sub_2421324F8();
    v218 = (*(uint64_t (**)(uint64_t *, uint64_t))(v60 + 24))(v213, v60);
    v219 = v64;
    sub_24211B054(v218, *MEMORY[0x24BDCD7A0]);
    sub_2420A2FF8();
    v65 = v200;
    sub_242132510();
    v66 = sub_24211AEB8();
    v67(v66);
    swift_bridgeObjectRelease();
    v68 = v208;
    v69 = sub_24211B078();
    v215 = v70;
    v70(v69);
    v213 = (uint64_t *)sub_242132708();
LABEL_3:
    sub_24211B1C8(v22, v65, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 16));
    v72 = v205;
    v71 = AssociatedConformanceWitness;
    v73 = v22;
    v74 = swift_getAssociatedConformanceWitness();
    v75 = v201;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 24))(v73, v72, v74);
    v76 = swift_checkMetadataState();
    v218 = 0;
    v219 = 0;
    v220 = 1;
    v77 = v204;
    v78 = v202;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 16))(v202, v75, v72);
    v216 = v211;
    v79 = *(void (**)(uint64_t *, uint64_t, uint64_t *, NSObject **, uint64_t, uint64_t))(v71 + 112);
    swift_bridgeObjectRetain();
    v79(&v218, v78, v213, &v216, v76, v71);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v72);
    v80 = sub_24211AE7C();
    v215(v80);
    goto LABEL_42;
  }
  v189 = v23;
  v190 = v51;
  v199 = v60;
  v191 = v22;
  MEMORY[0x24BDAC7A8](v63);
  v81 = v213;
  *(&v187 - 4) = (unint64_t)v213;
  *(&v187 - 3) = v59;
  v82 = v215;
  *(&v187 - 2) = (unint64_t)v209;
  *(&v187 - 1) = (unint64_t)v82;
  sub_2420977E0();
  v83 = v214;
  v84 = sub_242113D0C(sub_24211918C, (uint64_t)(&v187 - 6), (unint64_t)isa);
  v214 = v83;
  sub_242097268();
  if (!v84)
  {
    v105 = v81;
    if (qword_254399A70 != -1)
      swift_once();
    v106 = sub_24207F4AC();
    v107 = sub_24207BF18(v106, (uint64_t)qword_2543A6598);
    v108 = v198;
    v109 = v195;
    sub_24211B190(v195);
    v110 = v197;
    sub_24211B190((uint64_t)v197);
    v111 = sub_242132618();
    v112 = sub_242132984();
    if (sub_24211AE3C(v112))
    {
      v113 = sub_24210CA3C();
      v214 = sub_24210CA3C();
      v216 = v214;
      *(_DWORD *)v113 = 136315394;
      v210 = v113 + 4;
      LODWORD(v212) = v107;
      sub_24211B164();
      v211 = v111;
      v114 = (uint64_t)v221;
      v115 = v222;
      swift_bridgeObjectRelease();
      sub_242097830();
      v218 = sub_24212F968(v114, v115, (uint64_t *)&v216);
      sub_242132A38();
      sub_242079EE0();
      v116 = *(void (**)(uint64_t, uint64_t *))(v108 + 8);
      v116(v109, v105);
      *(_WORD *)(v113 + 12) = 2080;
      v117 = v197;
      v118 = (*(uint64_t (**)(uint64_t *))(v199 + 24))(v105);
      v218 = sub_24211AFFC(v118, v119);
      sub_24211B08C();
      sub_242097830();
      v116((uint64_t)v117, v105);
      sub_24211AD3C(&dword_242074000, v211, (os_log_type_t)v212, "Failed to find asset set %s for %s", (uint8_t *)v113);
      sub_24211AD34();
      sub_24210C9C4();
    }
    v123 = *(void (**)(uint64_t, uint64_t *))(v108 + 8);
    v123(v109, v105);
    v123((uint64_t)v110, v105);

    v218 = 0;
    v219 = 0xE000000000000000;
    sub_242132AD4();
    sub_24211B164();
    v124 = v221;
    v125 = v222;
    sub_242079F20();
    sub_24207F700();
    sub_242097830();
    v216 = v124;
    v217 = v125;
    sub_24211ABA4();
    sub_2421191AC();
    v126 = sub_2420970E4();
    sub_24211AE6C(v126, v127);
    goto LABEL_42;
  }
  v195 = v59;
  v211 = isa;
  v85 = (void (*)(_QWORD))v209;
  v86 = (void (*)(NSObject **__return_ptr, uint64_t *, void (*)(_QWORD)))*((_QWORD *)v209 + 3);
  v87 = v84;
  v86(&v216, v81, (void (*)(uint64_t *))v85);
  sub_242097098(&v218, &v216);
  v88 = v223;
  v89 = v224;
  sub_242079F18();
  sub_24211A7EC();
  v197 = v87;
  LODWORD(v209) = v89 != 0;
  if (!v89)
  {
    v88 = (*(uint64_t (**)(uint64_t *))(v199 + 24))(v81);
    v89 = v120;
    v121 = (id)sub_242132768();
    v122 = sub_24211B170((uint64_t)v121, sel_assetNamed_);
    v22 = v191;
    goto LABEL_26;
  }
  v22 = v191;
  v90 = v199;
  if (qword_25439A0D0 != -1)
  {
    swift_once();
    v90 = v199;
  }
  v82 = v215;
  if (byte_2543A65C8 != 1)
  {
    v121 = (id)sub_242132768();
    v122 = sub_24211B170((uint64_t)v121, sel_assetNamed_);
    goto LABEL_26;
  }
  v91 = v88;
  v92 = *(void (**)(uint64_t *))(v90 + 24);
  v92(v81);
  v93 = (void *)sub_242132768();
  v94 = sub_242097830();
  v82 = (void (*)(uint64_t))sub_24211B17C(v94, sel_assetNamed_);

  v188 = v82;
  if (!v82)
  {
LABEL_25:
    sub_24211AEB8();
    v128 = (void *)sub_242132768();
    v87 = v197;
    v122 = sub_24211B17C((uint64_t)v128, sel_assetNamed_);

    v88 = v91;
    v121 = v188;
LABEL_26:

    v129 = v210;
    if (!v122)
    {
      v139 = v88;
      if (qword_254399A70 != -1)
        swift_once();
      v140 = sub_24207F4AC();
      v141 = sub_24207BF18(v140, (uint64_t)qword_2543A6598);
      v142 = v198;
      v143 = (uint64_t)v193;
      sub_24211B084((uint64_t)v193, (uint64_t)v215, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v198 + 16));
      sub_24211B19C();
      v144 = sub_242132618();
      v145 = sub_242132984();
      if (sub_24211AE3C(v145))
      {
        v146 = sub_24210CA3C();
        v215 = (void (*)(uint64_t))sub_24210CA3C();
        a10 = v215;
        *(_DWORD *)v146 = 136315394;
        LODWORD(v214) = v141;
        sub_242079F18();
        v147 = sub_24211AEB8();
        v150 = sub_24212F968(v147, v148, v149);
        sub_24211B028(v150);
        sub_242132A38();
        sub_24211AFE8();
        *(_WORD *)(v146 + 12) = 2080;
        v212 = v146 + 14;
        (*(void (**)(NSObject **__return_ptr, uint64_t *))(v195 + 48))(&v216, v81);
        swift_bridgeObjectRelease();
        v151 = sub_242097830();
        v153 = sub_24211ADE0(v151, v152, (uint64_t *)&a10);
        sub_24211B028(v153);
        sub_242132A38();
        sub_242097578();
        (*(void (**)(uint64_t, uint64_t *))(v198 + 8))(v143, v213);
        sub_24211AD3C(&dword_242074000, v144, (os_log_type_t)v214, "Failed to find asset named %s in asset set %s", (uint8_t *)v146);
        sub_24211AD34();
        sub_24210C9C4();
      }
      sub_2420A1EFC();
      sub_24211ADF8(v143, *(uint64_t (**)(uint64_t, uint64_t))(v142 + 8));

      v216 = v139;
      v217 = v89;
      sub_24211AC4C();
      v170 = v216;
      v171 = v217;
      sub_2421191AC();
      v172 = sub_2420970E4();
      *v173 = v170;
      v173[1] = v171;
      sub_2420A17F8(v172, (uint64_t)v173);

      goto LABEL_42;
    }
    goto LABEL_27;
  }
  v187 = v89;
  v95 = objc_msgSend(v188, sel_metadata);
  v96 = sub_24211AFE0();

  v97 = sub_242132780();
  v99 = sub_24210D22C(v97, v98, v96);
  v82 = v100;
  sub_242079EE0();
  sub_242079F20();
  v101 = sub_242132780();
  if (!v82)
  {
    sub_242079F20();
    v22 = v191;
    v89 = v187;
    goto LABEL_25;
  }
  v103 = v99 == v101 && v82 == v102;
  v22 = v191;
  v89 = v187;
  if (!v103)
  {
    v104 = sub_242079EB8();
    sub_242097830();
    sub_242079F20();
    if ((v104 & 1) != 0)
      goto LABEL_46;
    goto LABEL_25;
  }
  sub_242079EE0();
  sub_242097830();
LABEL_46:
  swift_bridgeObjectRelease();
  v176 = v198;
  v177 = v192;
  if (qword_254399A70 != -1)
    swift_once();
  v178 = sub_24207F4AC();
  sub_24207BF18(v178, (uint64_t)qword_2543A6598);
  sub_24211B084(v177, (uint64_t)v215, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 16));
  v179 = sub_242132618();
  v180 = sub_2421329A8();
  if (os_log_type_enabled(v179, v180))
  {
    v181 = sub_24210CA3C();
    v209 = v92;
    v182 = (uint8_t *)v181;
    v195 = sub_24210CA3C();
    v216 = v195;
    *(_DWORD *)v182 = 136315138;
    v193 = v182 + 4;
    v183 = ((uint64_t (*)(uint64_t *, uint64_t))v209)(v81, v199);
    v185 = sub_24211AFFC(v183, v184);
    sub_24211B248(v185);
    sub_242132A38();
    sub_242097830();
    sub_24211ADF8(v177, *(uint64_t (**)(uint64_t, uint64_t))(v198 + 8));
    _os_log_impl(&dword_242074000, v179, v180, "Using asset from asset root for resource %s", v182, 0xCu);
    swift_arrayDestroy();
    sub_24210C9C4();
  }
  sub_24211ADF8(v177, *(uint64_t (**)(uint64_t, uint64_t))(v176 + 8));

  v129 = v210;
  v22 = v191;
  v82 = v215;
  v88 = ((uint64_t (*)(uint64_t *, uint64_t))v92)(v81, v199);
  v89 = v186;
  LODWORD(v209) = 0;
  v122 = v188;
LABEL_27:
  v130 = v122;
  if (objc_msgSend(v130, sel_location))
  {
    sub_24211B1D0();

    v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 32);
    v132 = v196;
    v131(v196, v22, v129);
    sub_24211B1DC(v132, 0);
    if (sub_2420801D0(v132, 1, v129) != 1)
    {
      sub_242079EE0();
      v133 = v194;
      v131(v194, v132, v129);
      if ((_DWORD)v209)
      {
        v216 = (*(uint64_t (**)(uint64_t *))(v199 + 24))(v81);
        v217 = v134;
        v135 = v212;
        v137 = v189;
        v136 = v190;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v212 + 104))(v189, *MEMORY[0x24BDCD7A0], v190);
        sub_2420A2FF8();
        v65 = v200;
        sub_242132504();
        v138 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
        v133 = v194;
        v138(v137, v136);
        swift_bridgeObjectRelease();
        v68 = v208;
      }
      else
      {
        v68 = v208;
        v65 = v200;
        sub_24211B1C8(v200, v133, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v208 + 16));
      }
      v174 = objc_msgSend(v130, sel_metadata);
      v213 = (uint64_t *)sub_24211AFE0();

      v175 = v197;
      v215 = *(void (**)(uint64_t))(v68 + 8);
      ((void (*)(uint64_t, uint64_t))v215)(v133, v129);
      goto LABEL_3;
    }
  }
  else
  {
    v132 = v196;
    sub_24211B1DC(v196, 1);
  }
  sub_242119318(v132, (uint64_t *)&unk_254399E98);
  if (qword_254399A70 != -1)
    swift_once();
  v154 = sub_24207F4AC();
  sub_24207BF18(v154, (uint64_t)qword_2543A6598);
  v155 = v130;
  sub_24211B19C();
  v156 = v155;
  v157 = sub_242132618();
  v158 = sub_24213299C();
  v159 = v158;
  if (os_log_type_enabled(v157, v158))
  {
    v160 = sub_24210CA3C();
    v215 = (void (*)(uint64_t))v88;
    v161 = v160;
    v214 = sub_24210CA3C();
    v216 = v214;
    *(_DWORD *)v161 = 136315394;
    sub_242079F18();
    a10 = (void (*)(_QWORD))sub_24212F968((uint64_t)v215, v89, (uint64_t *)&v216);
    v213 = &a11;
    sub_24211B08C();
    sub_24211AFE8();
    *(_WORD *)(v161 + 12) = 2080;
    v211 = (v161 + 14);
    v162 = objc_msgSend(v156, sel_metadata);
    LODWORD(v212) = v159;
    sub_24211AF5C();

    v163 = sub_24211AE00();
    sub_242097268();
    a10 = (void (*)(_QWORD))sub_24211B12C(v163, v164, (uint64_t *)&v216);
    sub_242132A38();

    swift_bridgeObjectRelease();
    sub_24211AD3C(&dword_242074000, v157, (os_log_type_t)v212, "Asset %s does not have a location. Metadata: %s", (uint8_t *)v161);
    sub_24211AD34();
    sub_24210C9C4();
  }

  sub_2420A1EFC();
  v165 = v197;
  v216 = 0;
  v217 = 0xE000000000000000;
  sub_242132AD4();
  swift_bridgeObjectRelease();
  v216 = v88;
  v217 = v89;
  sub_24211AB80();
  v166 = v216;
  v167 = v217;
  sub_2421191AC();
  v168 = sub_2420970E4();
  *v169 = v166;
  v169[1] = v167;
  sub_2420A17F8(v168, (uint64_t)v169);

LABEL_42:
  sub_2420970A0();
}

void sub_24211331C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(v1 + 96))
  {
    v5 = *(_QWORD *)(v1 + 120);
    v4 = *(_QWORD *)(v1 + 128);
    v6 = *(_QWORD *)(v1 + 104);
    v2 = *(_QWORD *)(v1 + 112);
    v7 = *(_BYTE *)(v1 + 145);
    sub_242097744();
    sub_24207F5FC();
  }
  else
  {
    v4 = 0x8000000242137900;
    sub_24211ABC8();
    v6 = 0x6E2D726F2D6C6C61;
    v5 = 0xD000000000000016;
    v7 = 10;
  }
  sub_24211AC6C();
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = v7;
  sub_24207F4E0();
}

void AssetBackedResource<>.subscription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unsigned __int16 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[15];

  sub_24211AB68();
  v1 = v0;
  v45 = v3;
  v46 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  v47 = v2;
  ((void (*)(_QWORD *__return_ptr))v46)(v53);
  v4 = v53[12];
  v5 = v53[13];
  v6 = v53[14];
  sub_24211AEF4();
  sub_242084D88(v7, v8);
  sub_24211A7EC();
  if (v4)
  {
    sub_2420977E0();
    v44[1] = v6;
    sub_24211AEF4();
    v9 = sub_242084E14(v17, v18);
    v44[0] = v5;
  }
  else
  {
    HIBYTE(v44[1]) = -18;
    strcpy((char *)v44, "all-or-nothing");
  }
  sub_24211B03C(v9, v10, v11, v12, v13, v14, v15, v16, v36, v38, v41, v44[0], v44[1], v45, v46, v47);
  sub_24211B234();
  sub_24211B10C();
  sub_242084D88(v19, v20);
  sub_24211A7EC();
  if (v50)
  {
    sub_242079ED8();
    sub_24211B234();
    v39 = v51;
    v42 = v52;
    sub_24211B10C();
    v21 = sub_242084E14(v29, v30);
  }
  else
  {
    v39 = 0xD000000000000016;
    v42 = 0x8000000242137900;
  }
  sub_24211B03C(v21, v22, v23, v24, v25, v26, v27, v28, v37, v39, v42, v44[0], v44[1], v45, v46, v47);
  v31 = sub_24211ACA8();
  sub_242084D88(v31, v32);
  sub_24211A7EC();
  if (v48)
  {
    v33 = HIBYTE(v49);
    v34 = sub_24211ACA8();
    sub_242084E14(v34, v35);
  }
  else
  {
    LOBYTE(v33) = 10;
  }
  sub_24211AC6C();
  *(_QWORD *)(v1 + 16) = v44[0];
  *(_QWORD *)(v1 + 24) = v44[1];
  *(_QWORD *)(v1 + 32) = v40;
  *(_QWORD *)(v1 + 40) = v43;
  *(_BYTE *)(v1 + 48) = v33;
  sub_242097670();
}

void sub_242113534(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210DF24();
  sub_24211AA78();
}

void sub_24211355C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_2421135A0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210E1E4();
  sub_24211AA78();
}

void sub_2421135C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_24211360C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210E4A4();
  sub_24211AA78();
}

void sub_242113634(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113678(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210E764();
  sub_24211AA78();
}

void sub_2421136A0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_2421136E4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210EA24();
  sub_24211AA78();
}

void sub_24211370C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113750(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210ECE4();
  sub_24211AA78();
}

void sub_242113778(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_2421137BC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210EFA4();
  sub_24211AA78();
}

void sub_2421137E4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113828(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210F264();
  sub_24211AA78();
}

void sub_242113850(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113894(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210F524();
  sub_24211AA78();
}

void sub_2421138BC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113900(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210F7E4();
  sub_24211AA78();
}

void sub_242113928(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_24211396C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210FAA4();
  sub_24211AA78();
}

void sub_242113994(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_2421139D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_24210FD64();
  sub_24211AA78();
}

void sub_242113A00(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113A44(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_242110024();
  sub_24211AA78();
}

void sub_242113A6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113AB0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_2421102E4();
  sub_24211AA78();
}

void sub_242113AD8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113B1C(uint64_t a1@<X8>)
{
  const void *v1;
  _BYTE __dst[184];

  memcpy(__dst, v1, sizeof(__dst));
  sub_24211331C(a1);
}

void sub_242113B5C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_2421105A4();
  sub_24211AA78();
}

void sub_242113B84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113BC8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_242110864();
  sub_24211AA78();
}

void sub_242113BF0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113C34(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_242110B24();
  sub_24211AA78();
}

void sub_242113C5C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void sub_242113CA0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA3C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA88();
  sub_242110DE4();
  sub_24211AA78();
}

void sub_242113CC8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_24211AA20(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_24211AA54();
  sub_24211AA68();
}

void *sub_242113D0C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_242132BA0())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2426A3A14](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_242113E2C()
{
  return AssetSpecificationVersion.number.getter();
}

void sub_242113E5C()
{
  swift_bridgeObjectRetain();
  sub_24207F428();
}

void AssetSubscription.status()(_BYTE *a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (sub_2421327E0())
  {
    sub_24211B078();
    v2 = (void *)sub_242132768();
    v3 = (void *)sub_242132768();
    v4 = objc_msgSend(v5, sel_downloadStatusForSubscriber_subscriptionName_, v2, v3);

    UAFSubscriptionDownloadStatus.assetSubscriptionStatus()((unint64_t)v4, a1);
  }
  else
  {

    *a1 = 6;
  }
}

uint64_t static AssetSubscription.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  char v13;
  uint64_t result;
  BOOL v15;
  char v16;
  BOOL v17;
  char v18;
  char v19;

  sub_24211AB68();
  v2 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(unsigned __int8 *)(v0 + 48);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 40);
  v11 = *(unsigned __int8 *)(v1 + 48);
  v12 = *(_QWORD *)v0 == *(_QWORD *)v1 && *(_QWORD *)(v0 + 8) == *(_QWORD *)(v1 + 8);
  if (v12 || (v13 = sub_242079EB8(), result = 0, (v13 & 1) != 0))
  {
    v15 = v2 == v7 && v4 == v8;
    if (v15 || (v16 = sub_242079EB8(), result = 0, (v16 & 1) != 0))
    {
      v17 = v3 == v9 && v5 == v10;
      if (v17 || (v18 = sub_242079EB8(), result = 0, (v18 & 1) != 0))
      {
        if (v6 == 10)
        {
          if (v11 != 10)
            return 0;
        }
        else
        {
          if (v11 == 10)
            return 0;
          sub_242107AB8(v6);
          if ((v19 & 1) == 0)
            return 0;
        }
        return 1;
      }
    }
  }
  return result;
}

void UAFSubscriptionDownloadStatus.assetSubscriptionStatus()(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (a1 >= 8)
  {
    if (qword_254399A70 != -1)
      swift_once();
    v4 = sub_24213263C();
    sub_24207BF18(v4, (uint64_t)qword_2543A6598);
    v5 = sub_242132618();
    v6 = sub_24213299C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_DWORD *)v7 = 136315138;
      v8 = (id)UAFSubscriptionDownloadStatusDescription();
      v9 = sub_242132780();
      v11 = v10;

      sub_24212F968(v9, v11, &v12);
      sub_242132A38();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_242074000, v5, v6, "Unknown download status: %s", v7, 0xCu);
      swift_arrayDestroy();
      sub_24210C9C4();
    }

    LOBYTE(v3) = 4;
  }
  else
  {
    v3 = 0x807030502010004uLL >> (8 * a1);
  }
  *a2 = v3;
}

uint64_t CatalogErrors.AssetErrors.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24213260C();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_2420C0D14();
  sub_24213275C();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_24210CA74();
  sub_242132744();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_24207F540();
  sub_242132738();
  sub_2420802AC();
  sub_24213272C();
  sub_24211B078();
  sub_242132720();
  sub_24213272C();
  sub_242132750();
  sub_242132600();
  sub_24211B0F4();
  return sub_2421327BC();
}

uint64_t sub_242114380(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x8000000242141100 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000242141120)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_242132D14();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24211446C()
{
  sub_242132D74();
  sub_242132D80();
  return sub_242132D98();
}

unint64_t sub_2421144B0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0xD000000000000018;
}

uint64_t sub_2421144EC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242079EB8();
    sub_242097384();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242114550()
{
  return sub_24211446C();
}

unint64_t sub_242114558()
{
  char *v0;

  return sub_2421144B0(*v0);
}

uint64_t sub_242114560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242114380(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242114584()
{
  sub_2421191E8();
  return sub_242132DBC();
}

uint64_t sub_2421145AC()
{
  sub_2421191E8();
  return sub_242132DC8();
}

uint64_t sub_2421145D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421144EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242114600()
{
  sub_242119224();
  return sub_242132DBC();
}

uint64_t sub_242114628()
{
  sub_242119224();
  return sub_242132DC8();
}

void sub_242114650()
{
  sub_242132D74();
  sub_2420C16BC();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_242114678()
{
  sub_242119260();
  return sub_242132DBC();
}

uint64_t sub_2421146A0()
{
  sub_242119260();
  return sub_242132DC8();
}

void CatalogErrors.AssetErrors.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_242097180();
  v4 = v3;
  v5 = sub_2420797C0(&qword_2571A1440);
  v13 = *(_QWORD *)(v5 - 8);
  v14 = v5;
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v6);
  sub_242097548();
  v7 = sub_2420797C0(&qword_2571A1448);
  v11 = *(_QWORD *)(v7 - 8);
  v12 = v7;
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v8);
  sub_2420C0CFC();
  v15 = *(_QWORD *)(sub_2420797C0(&qword_2571A1450) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v9);
  sub_2420AA064();
  v10 = *(_BYTE *)(v0 + 16);
  sub_242079800(v4, v4[3]);
  sub_2421191E8();
  sub_242132DB0();
  if ((v10 & 1) != 0)
  {
    sub_24211B220();
    sub_24211AED4();
    sub_242132CCC();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  }
  else
  {
    sub_242119260();
    sub_24211AED4();
    sub_242132CCC();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v12);
  }
  sub_2420C0BD4(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_2420970A0();
}

void CatalogErrors.AssetErrors.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_242097180();
  v3 = v2;
  v27 = v4;
  sub_2420797C0(&qword_2571A1470);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v5);
  sub_24207F540();
  v28 = sub_2420797C0(&qword_2571A1478);
  MEMORY[0x24BDAC7A8](v28);
  sub_2420C0D14();
  sub_2420797C0(&qword_2571A1480);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v6);
  sub_2420AA064();
  sub_242079800(v3, v3[3]);
  sub_2421191E8();
  sub_242132DA4();
  if (v0)
    goto LABEL_8;
  v29 = v1;
  v7 = sub_242132C6C();
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8
    || (v9 = *(_BYTE *)(v7 + 32),
        sub_2420C058C(1, v8, v7, v7 + 32, 0, (2 * v8) | 1),
        v11 = v10,
        v13 = v12,
        sub_242097578(),
        v11 != v13 >> 1))
  {
    v16 = sub_242132B04();
    sub_2420970E4();
    v18 = v17;
    sub_2420797C0(&qword_25719EAB0);
    *v18 = &type metadata for CatalogErrors.AssetErrors;
    sub_242132BF4();
    sub_242132AF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_unknownObjectRelease();
    v19 = sub_24211AE7C();
    v21(v19, v20);
LABEL_8:
    sub_242079824((uint64_t)v3);
    goto LABEL_9;
  }
  if ((v9 & 1) != 0)
  {
    sub_24211B220();
    sub_24211B134();
    sub_242132BE8();
    v14 = sub_242132C3C();
    v15 = v29;
    v24 = v23;
    v26 = v14;
    sub_2420C0C30();
  }
  else
  {
    sub_242119260();
    sub_24211B134();
    sub_242132BE8();
    v22 = sub_242132C3C();
    v24 = v25;
    v26 = v22;
    sub_24211AE28();
    v15 = v29;
  }
  sub_2420C0E48();
  sub_2420C0BD4(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  *(_QWORD *)v27 = v26;
  *(_QWORD *)(v27 + 8) = v24;
  *(_BYTE *)(v27 + 16) = v9;
  sub_242079824((uint64_t)v3);
LABEL_9:
  sub_2420970A0();
}

void sub_242114BD8()
{
  CatalogErrors.AssetErrors.init(from:)();
}

void sub_242114BEC()
{
  CatalogErrors.AssetErrors.encode(to:)();
}

void AssetLock.id.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;

  v1 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_2420A1CA0();
    if (v2)
      goto LABEL_3;
LABEL_11:
    sub_242097384();
    sub_24211AD60();
    return;
  }
  sub_2420A1CA0();
  v2 = sub_242132BA0();
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x2426A3A14](v3, v1);
      else
        v4 = *(id *)(v1 + 8 * v3 + 32);
      v5 = v4;
      ++v3;
      sub_242118FA0(v4);
      sub_2421327EC();
      sub_242097268();

    }
    while (v2 != v3);
    goto LABEL_11;
  }
  __break(1u);
}

ModelCatalog::AssetLock __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetLock.init()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  Swift::OpaquePointer v20;
  uint64_t v21;
  ModelCatalog::AssetLock result;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27[2];
  _QWORD v28[5];
  _QWORD *v29;

  sub_242097180();
  v3 = v2;
  type metadata accessor for CatalogClient();
  swift_allocObject();
  CatalogClient.init()();
  v4 = sub_24207C290();
  swift_release();
  if (!v0)
  {
    v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v23 = v3;
      v6 = v4 + 32;
      sub_2420977E0();
      do
      {
        sub_24207EA48(v6, (uint64_t)v28);
        sub_24207EA48((uint64_t)v28, (uint64_t)v27);
        sub_2420797C0((uint64_t *)&unk_254399948);
        sub_2420797C0(&qword_2543990D0);
        if ((swift_dynamicCast() & 1) == 0)
        {
          v26 = 0;
          v24 = 0u;
          v25 = 0u;
        }
        sub_242079824((uint64_t)v28);
        if (*((_QWORD *)&v25 + 1))
        {
          sub_242079E50(&v24, (uint64_t)v27);
          sub_242079E50(v27, (uint64_t)&v24);
          v7 = v29;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24211B1E8(0, v29[2] + 1);
            v7 = v18;
            v29 = v18;
          }
          v9 = v7[2];
          v8 = v7[3];
          if (v9 >= v8 >> 1)
          {
            sub_24211B1E8(v8 > 1, v9 + 1);
            v29 = v19;
          }
          v11 = *((_QWORD *)&v25 + 1);
          v10 = v26;
          v12 = sub_242079844((uint64_t)&v24, *((uint64_t *)&v25 + 1));
          MEMORY[0x24BDAC7A8](v12);
          sub_242097560();
          sub_24211B1C8(v1, v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
          v15 = sub_24211B06C();
          sub_24210C624(v15, v16, v17, v11, v10);
          sub_242079824((uint64_t)&v24);
        }
        else
        {
          sub_242119318((uint64_t)&v24, &qword_25719E610);
        }
        v6 += 40;
        --v5;
      }
      while (v5);
      sub_2420A1EFC();
      v20._rawValue = v29;
      v3 = v23;
    }
    else
    {
      sub_242097268();
      v20._rawValue = (void *)MEMORY[0x24BEE4AF8];
    }
    AssetLock.init(resources:)(v20);
    if (!v21)
      *v3 = v28[0];
  }
  sub_2420970A0();
  return result;
}

uint64_t static AssetLock.assetSets(resources:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[20] = a1;
  v2 = sub_2421329CC();
  v1[21] = v2;
  v1[22] = *(_QWORD *)(v2 - 8);
  v1[23] = sub_24211ACCC();
  v1[24] = sub_2421329C0();
  v1[25] = sub_24211ACCC();
  sub_2421326D8();
  v1[26] = sub_24211ACCC();
  sub_24211B0F4();
  return swift_task_switch();
}

uint64_t sub_242114F9C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)@<X0>(uint64_t *@<X0>, uint64_t *@<X8>);
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  char v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t (*v47)@<X0>(uint64_t *@<X0>, uint64_t *@<X8>);
  unint64_t v48;
  char v49;
  unint64_t *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void (*v87)(unint64_t *__return_ptr, uint64_t *);
  uint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99[5];

  v1 = v0;
  v2 = v0[20];
  v3 = sub_242079F48();
  v0[27] = v3;
  v4 = sub_242132708();
  v5 = MEMORY[0x24BEE4B08];
  v0[17] = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + 16) = v4;
  v81 = *(_QWORD *)(v2 + 16);
  if (v81)
  {
    v6 = v0 + 2;
    v7 = v0 + 9;
    v8 = v3;
    v9 = v0[20] + 32;
    v10 = v0;
    swift_bridgeObjectRetain();
    v11 = 0;
    v86 = v0 + 2;
    v80 = v0;
    v78 = (uint64_t)(v0 + 9);
    v79 = v3;
    v83 = v9;
LABEL_3:
    v82 = v11 + 1;
    sub_24207EA48(v9 + 40 * v11, (uint64_t)v7);
    v13 = v10[12];
    v12 = v10[13];
    sub_242079800(v7, v13);
    (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 48))(&v92, v13, v12);
    v14 = v96;
    v15 = v97;
    swift_bridgeObjectRelease();
    sub_242097830();
    sub_242076DC4(v99, v14, v15);
    swift_bridgeObjectRelease();
    v16 = v10[12];
    v17 = v10[13];
    sub_242079800(v7, v16);
    v18 = v17;
    v19 = sub_242119110;
    v20 = (_QWORD *)AssetBackedResource.usages.getter(v16, v18);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *(uint64_t **)(v8 + 16);
    v98 = v22;
    *(_QWORD *)(v8 + 16) = 0x8000000000000000;
    sub_242119150((uint64_t)v20, (uint64_t)sub_242119110, 0, v6);
    v89 = (_QWORD *)v10[8];
    v90 = v10[5];
    v23 = v10[6];
    v87 = (void (*)(unint64_t *__return_ptr, uint64_t *))v10[7];
    v84 = (unint64_t)(v10[4] + 64) >> 6;
    v85 = v10[3];
    v24 = (_QWORD *)sub_242097198();
    if (v23)
    {
LABEL_4:
      v23 &= v23 - 1;
      goto LABEL_24;
    }
    while (1)
    {
      v25 = v90;
      v26 = v90 + 1;
      if (__OFADD__(v90, 1))
        goto LABEL_53;
      v9 = v83;
      if (v26 >= v84)
        goto LABEL_37;
      if (!*(_QWORD *)(v85 + 8 * v26))
      {
        sub_24211AD54();
        if (v28 == v29)
          goto LABEL_37;
        if (!*(_QWORD *)(v85 + 8 * v27))
        {
          sub_24211AD54();
          if (v28 == v29)
            goto LABEL_37;
          if (!*(_QWORD *)(v85 + 8 * v30))
          {
            sub_24211AD54();
            if (v28 == v29)
              goto LABEL_37;
            if (!*(_QWORD *)(v85 + 8 * v31))
            {
              sub_24211B0A8();
              if (v28 == v29)
                goto LABEL_37;
              if (!*(_QWORD *)(v85 + 8 * v32))
              {
                while (1)
                {
                  sub_24211B0A8();
                  if (v28 == v29)
                    break;
                  if (*(_QWORD *)(v85 + 8 * v33))
                    goto LABEL_23;
                }
LABEL_37:
                swift_bridgeObjectRelease();
                sub_24207F380();
                swift_release();
                v8 = v79;
                *(_QWORD *)(v79 + 16) = v22;
                swift_bridgeObjectRelease();
                v7 = (_QWORD *)v78;
                sub_242079824(v78);
                v10 = v80;
                v11 = v82;
                if (v82 == v81)
                {
                  swift_bridgeObjectRelease();
                  v5 = v80[17];
                  v1 = v80;
                  break;
                }
                goto LABEL_3;
              }
            }
          }
        }
      }
LABEL_23:
      sub_24211AD44();
      v23 = v35 & v34;
      v90 = v36;
LABEL_24:
      sub_24211B094();
      v38 = *v37;
      v39 = v37[1];
      v99[0] = v40;
      v99[1] = (uint64_t)v19;
      v99[2] = v38;
      v99[3] = v39;
      sub_24207F5FC();
      sub_242079ED8();
      v20 = v89;
      v87(&v92, v99);
      sub_24207F700();
      sub_242079F20();
      v41 = v92;
      v42 = v93;
      v44 = v94;
      v43 = v95;
      v45 = sub_24211AE88();
      v24 = (_QWORD *)sub_24211AEC4(v46, v22[2]);
      if (v29)
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        if (v25 < 0x100)
        {
LABEL_62:
          swift_release();

          sub_24211AE7C();
          sub_24211B120();
          sub_2420A1CA0();
          sub_242097A18();
          sub_24211B22C();
          sub_24211B188();
          sub_24211AFA4();
          swift_task_dealloc();
          sub_24211AFB4();
          __asm { BR              X1 }
        }
        if (!v24[10])
        {
          if (v25 < 0x140)
            goto LABEL_62;
          if (!v24[11])
          {
            v74 = v25 >> 6;
            v75 = 12;
            while (v75 - 7 < v74)
            {
              if (v24[v75++])
                goto LABEL_47;
            }
            goto LABEL_62;
          }
        }
LABEL_47:
        sub_24211B1B4();
        v59 = v73 + (v58 << 6);
        goto LABEL_43;
      }
      v19 = v47;
      if (v22[3] >= (uint64_t)v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v47 & 1) == 0)
            goto LABEL_33;
        }
        else
        {
          sub_2420797C0(&qword_25439A0D8);
          v20 = &v98;
          sub_242132B4C();
          v22 = v98;
          if ((v19 & 1) == 0)
            goto LABEL_33;
        }
      }
      else
      {
        v20 = &v98;
        sub_2421180BC((uint64_t)v24, isUniquelyReferenced_nonNull_native & 1);
        v22 = v98;
        v48 = sub_24211AE88();
        if ((v19 & 1) != (v49 & 1))
        {
          sub_24211AFB4();
          return sub_242132D38();
        }
        v45 = v48;
        if ((v19 & 1) == 0)
        {
LABEL_33:
          sub_24211AE98((uint64_t)&v22[v45 >> 6]);
          v50 = (unint64_t *)(v22[6] + 16 * v45);
          *v50 = v41;
          v50[1] = v42;
          v51 = (_QWORD *)(v22[7] + 16 * v45);
          *v51 = v44;
          v51[1] = v43;
          v52 = v22[2];
          v29 = __OFADD__(v52, 1);
          v25 = v52 + 1;
          if (v29)
            goto LABEL_52;
          v22[2] = v25;
          goto LABEL_35;
        }
      }
      swift_bridgeObjectRelease();
      v20 = (_QWORD *)(v22[7] + 16 * v45);
      v24 = (_QWORD *)swift_bridgeObjectRelease();
      *v20 = v44;
      v20[1] = v43;
LABEL_35:
      isUniquelyReferenced_nonNull_native = 1;
      v6 = v86;
      if (v23)
        goto LABEL_4;
    }
  }
  v1[28] = v5;
  v53 = v1[23];
  v88 = v1[22];
  v91 = v1[21];
  sub_24207F2FC(0, qword_254399D50);
  v92 = 0;
  v93 = 0xE000000000000000;
  sub_242132AD4();
  swift_bridgeObjectRelease();
  v92 = 0xD000000000000023;
  v93 = 0x8000000242141010;
  sub_242097744();
  v54 = sub_242132978();
  sub_24207F78C();
  v1[18] = v54;
  sub_242132D08();
  sub_2421327EC();
  sub_24207F700();
  sub_2421326CC();
  v1[19] = MEMORY[0x24BEE4AF8];
  sub_2420A7D98((unint64_t *)&qword_254399D48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_2420797C0(&qword_254399D38);
  sub_2420A6630();
  sub_242132A68();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v88 + 104))(v53, *MEMORY[0x24BEE5750], v91);
  v23 = sub_2421329D8();
  v1[29] = v23;
  v20 = (_QWORD *)sub_242079F48();
  v1[30] = v20;
  v20[2] = MEMORY[0x24BEE4AF8];
  v55 = *(_BYTE *)(v5 + 32);
  *((_BYTE *)v1 + 296) = v55;
  v56 = -1;
  v57 = -1 << v55;
  if (-v57 < 64)
    v56 = ~(-1 << -(char)v57);
  if ((v56 & *(_QWORD *)(v5 + 56)) == 0)
  {
    v25 = 63 - v57;
    v24 = (_QWORD *)v1[28];
    if (v25 <= 0x7F)
      goto LABEL_62;
    if (!v24[8])
    {
      if (v25 < 0xC0)
        goto LABEL_62;
      if (!v24[9])
        goto LABEL_54;
    }
    goto LABEL_47;
  }
  sub_24211AD44();
  v63 = v62 & v61;
  v64 = v60[28];
LABEL_43:
  v60[31] = v58;
  v60[32] = v63;
  v65 = v60[27];
  v66 = (uint64_t *)(*(_QWORD *)(v64 + 48) + 16 * v59);
  v68 = *v66;
  v67 = v66[1];
  v60[33] = v67;
  v69 = v60;
  v70 = (_QWORD *)swift_task_alloc();
  v69[34] = v70;
  v70[2] = v68;
  v70[3] = v67;
  v70[4] = v65;
  v70[5] = v23;
  v70[6] = v20;
  sub_24207F5FC();
  v71 = (_QWORD *)swift_task_alloc();
  v69[35] = v71;
  *v71 = v69;
  v71[1] = sub_242115770;
  sub_24211AE4C();
  sub_24211AFB4();
  return sub_242132D20();
}

uint64_t sub_242115770()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_24211AF0C();
  *v3 = *v2;
  *(_QWORD *)(v1 + 288) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_24211B0F4();
  return sub_24211AAD8();
}

void sub_2421157D4()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _QWORD *v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 248);
  if (*(_QWORD *)(v0 + 256))
  {
    sub_24211B1B4();
    v5 = v4 | (v2 << 6);
    v6 = *(_QWORD *)(v0 + 224);
LABEL_3:
    *(_QWORD *)(v0 + 248) = v2;
    *(_QWORD *)(v0 + 256) = v3;
    v7 = *(_QWORD *)(v0 + 216);
    v8 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v5);
    v10 = *v8;
    v9 = v8[1];
    *(_QWORD *)(v0 + 264) = v9;
    v11 = swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v11;
    v12 = *(_OWORD *)(v0 + 232);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v9;
    *(_QWORD *)(v11 + 32) = v7;
    *(_OWORD *)(v11 + 40) = v12;
    sub_242097198();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v13;
    *v13 = v0;
    v13[1] = sub_242115770;
    sub_24211AE4C();
    sub_242132D20();
    return;
  }
  v14 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v15 = (1 << *(_BYTE *)(v0 + 296)) + 63;
    v6 = *(_QWORD *)(v0 + 224);
    if (v14 >= (uint64_t)(v15 >> 6))
      goto LABEL_18;
    v16 = v6 + 56;
    v17 = *(_QWORD *)(v6 + 56 + 8 * v14);
    v2 = v1 + 1;
    if (v17)
    {
LABEL_7:
      v3 = (v17 - 1) & v17;
      v5 = __clz(__rbit64(v17)) + (v2 << 6);
      goto LABEL_3;
    }
    v18 = v15 >> 6;
    v2 = v14 + 1;
    if (v14 + 1 >= v18)
      goto LABEL_18;
    v17 = *(_QWORD *)(v16 + 8 * v2);
    if (v17)
      goto LABEL_7;
    v2 = v14 + 2;
    if (v14 + 2 >= v18)
      goto LABEL_18;
    v17 = *(_QWORD *)(v16 + 8 * v2);
    if (v17)
      goto LABEL_7;
    v19 = v14 + 3;
    if (v19 >= v18)
    {
LABEL_18:
      v21 = *(void **)(v0 + 232);
      v20 = *(_QWORD *)(v0 + 240);
      swift_release();

      sub_24211B120();
      v22 = *(_QWORD *)(v20 + 16);
      sub_242097198();
      swift_release();
      sub_24211B22C();
      swift_task_dealloc();
      sub_24211B188();
      sub_24211AFA4();
      (*(void (**)(uint64_t))(v0 + 8))(v22);
      return;
    }
    v17 = *(_QWORD *)(v16 + 8 * v19);
    if (v17)
    {
      v2 = v19;
      goto LABEL_7;
    }
    while (1)
    {
      v2 = v19 + 1;
      if (__OFADD__(v19, 1))
        break;
      if (v2 >= v18)
        goto LABEL_18;
      v17 = *(_QWORD *)(v16 + 8 * v2);
      ++v19;
      if (v17)
        goto LABEL_7;
    }
  }
  __break(1u);
}

uint64_t sub_2421159DC()
{
  uint64_t v0;

  swift_release();
  sub_242097A18();
  sub_24211B22C();
  swift_task_dealloc();
  sub_24211B188();
  sub_24211AFA4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AssetBackedResource.usages.getter(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t inited;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  BOOL v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int64_t v54;
  void (*v55)(_QWORD *__return_ptr, uint64_t *);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  _QWORD v62[4];
  uint64_t *v63;
  _QWORD v64[6];

  v4 = (uint64_t *)sub_242132708();
  v48 = a1;
  v47 = a2;
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 48))(a1);
  v51 = *(_QWORD *)(v5 + 16);
  if (!v51)
    goto LABEL_38;
  v6 = 0;
  v50 = v5 + 32;
  v49 = v5;
  while (2)
  {
    if (v6 >= *(_QWORD *)(v5 + 16))
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    v52 = v6 + 1;
    v7 = *(unsigned __int8 *)(v50 + v6);
    sub_2420797C0(&qword_254399C48);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24214D280;
    v57 = 3040109;
    v58 = 0xE300000000000000;
    v9 = 0x8000000242133F70;
    if (v7 != 1)
      v9 = 0x8000000242133FA0;
    if (v7)
      v10 = v9;
    else
      v10 = 0x8000000242133F40;
    sub_2421327EC();
    sub_24207F700();
    v11 = v58;
    *(_QWORD *)(inited + 32) = v57;
    *(_QWORD *)(inited + 40) = v11;
    *(_QWORD *)(inited + 48) = 0x44454C42414E45;
    *(_QWORD *)(inited + 56) = 0xE700000000000000;
    v12 = sub_242132708();
    v13 = sub_24211AFAC();
    v63 = v4;
    sub_242119150(v12, (uint64_t)sub_242119110, 0, v64);
    v56 = v64[3];
    v14 = v64[4];
    v55 = (void (*)(_QWORD *__return_ptr, uint64_t *))v64[5];
    v53 = v64[1];
    v54 = (unint64_t)(v64[2] + 64) >> 6;
    sub_242097198();
    while (1)
    {
      if (v14)
      {
        v14 &= v14 - 1;
        goto LABEL_27;
      }
      v15 = v56 + 1;
      if (__OFADD__(v56, 1))
        goto LABEL_50;
      if (v15 >= v54)
        goto LABEL_37;
      if (!*(_QWORD *)(v53 + 8 * v15))
      {
        if (v56 + 2 >= v54)
          goto LABEL_37;
        if (!*(_QWORD *)(v53 + 8 * (v56 + 2)))
        {
          if (v56 + 3 >= v54)
            goto LABEL_37;
          if (!*(_QWORD *)(v53 + 8 * (v56 + 3)))
          {
            if (v56 + 4 >= v54)
              goto LABEL_37;
            if (!*(_QWORD *)(v53 + 8 * (v56 + 4)))
            {
              if (v56 + 5 >= v54)
                goto LABEL_37;
              if (!*(_QWORD *)(v53 + 8 * (v56 + 5)))
                break;
            }
          }
        }
      }
LABEL_26:
      sub_24211AD44();
      v14 = v19 & v18;
      v56 = v20;
LABEL_27:
      sub_24211B094();
      v22 = *v21;
      v23 = v21[1];
      v57 = v24;
      v58 = v10;
      v59 = v22;
      v60 = v23;
      sub_24207F5FC();
      sub_242079F18();
      v55(v62, &v57);
      sub_242079EE0();
      sub_24207F700();
      v26 = v62[0];
      v25 = v62[1];
      v28 = v62[2];
      v27 = v62[3];
      sub_24211AEB8();
      v10 = sub_242079780();
      v30 = sub_24211AEC4(v29, v4[2]);
      if (v32)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v33 = v31;
      if (v4[3] >= v30)
      {
        if ((v13 & 1) == 0)
        {
          sub_2420797C0(&qword_25439A0D8);
          sub_242132B4C();
        }
      }
      else
      {
        sub_2421180BC(v30, v13 & 1);
        sub_24211AEB8();
        v34 = sub_242079780();
        if ((v33 & 1) != (v35 & 1))
        {
          result = sub_242132D38();
          __break(1u);
          return result;
        }
        v10 = v34;
      }
      v4 = v63;
      if ((v33 & 1) != 0)
      {
        sub_242079EE0();
        v36 = (_QWORD *)(v4[7] + 16 * v10);
        swift_bridgeObjectRelease();
        *v36 = v28;
        v36[1] = v27;
        v13 = 1;
      }
      else
      {
        sub_24211AE98((uint64_t)&v63[v10 >> 6]);
        v37 = (_QWORD *)(v4[6] + 16 * v10);
        *v37 = v26;
        v37[1] = v25;
        v38 = (_QWORD *)(v4[7] + 16 * v10);
        *v38 = v28;
        v38[1] = v27;
        v39 = v4[2];
        v32 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v32)
          goto LABEL_49;
        v4[2] = v40;
        v13 = 1;
      }
    }
    v16 = v56 + 6;
    while (v16 < v54)
    {
      if (*(_QWORD *)(v53 + 8 * v16++))
        goto LABEL_26;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    sub_24207F380();
    sub_24211AE64();
    swift_release();
    v6 = v52;
    v5 = v49;
    if (v52 != v51)
      continue;
    break;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  v41 = v48;
  if (qword_254399F00 != -1)
  {
LABEL_52:
    swift_once();
    v41 = v48;
  }
  v42 = qword_254399EF8;
  v43 = sub_24211AEA8();
  LOBYTE(v42) = sub_242117B3C(v43, v44, v42);
  sub_242097830();
  if ((v42 & 1) != 0)
  {
    v57 = 3040109;
    v58 = 0xE300000000000000;
    sub_24211AEA8();
    sub_2421327EC();
    sub_24207F78C();
    sub_24211AFAC();
    sub_24211AB1C();
    v4 = (uint64_t *)v57;
    sub_24207F700();
    sub_24211AE64();
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v47 + 48))(&v57, v41);
  v45 = v61;
  swift_bridgeObjectRelease();
  sub_24207F78C();
  sub_242097830();
  if (v45 != 10)
  {
    LOBYTE(v57) = v45;
    RequestResourcesKey.usageKey.getter();
    sub_24211AFAC();
    sub_24211AB1C();
    v4 = (uint64_t *)v57;
    sub_24207F700();
    sub_24211AE64();
  }
  if (qword_25439A0D0 != -1)
    swift_once();
  if (byte_2543A65C8 == 1)
  {
    sub_24211AFAC();
    v57 = (uint64_t)v4;
    sub_24211848C(0x44454C42414E45, 0xE700000000000000, 0xD000000000000017, 0x8000000242137D00);
    v4 = (uint64_t *)v57;
    sub_24211AE64();
  }
  return (uint64_t)v4;
}

void sub_24211605C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v23 = a2;
  v24 = a6;
  v27 = a5;
  v22 = a3;
  v8 = sub_2420797C0(&qword_254397A18);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  v25 = (void *)sub_242132768();
  swift_beginAccess();
  v12 = *(_QWORD *)(a4 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v13, v11, v8);
  v16 = (_QWORD *)(v15 + v14);
  v17 = v22;
  *v16 = v23;
  v16[1] = v17;
  *(_QWORD *)(v15 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)) = a4;
  aBlock[4] = sub_24211A97C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2421163D4;
  aBlock[3] = &unk_25132A748;
  v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v20 = v25;
  v19 = v26;
  sub_242119000((uint64_t)v25, v12, v27, (uint64_t)v18, v26);
  _Block_release(v18);

}

uint64_t sub_242116258(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7;
  uint64_t v9;

  if (a1)
  {
    swift_beginAccess();
    v7 = a1;
    MEMORY[0x2426A37BC]();
    sub_24207E938(*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFF8) + 0x10));
    sub_2421328D0();
    sub_2421328B8();
    swift_endAccess();
    sub_2420797C0(&qword_254397A18);
    return sub_2421328F4();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2421327EC();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_2421326FC();
    sub_2421327EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2421191AC();
    swift_allocError();
    *(_QWORD *)v9 = a4;
    *(_QWORD *)(v9 + 8) = a5;
    *(_BYTE *)(v9 + 16) = 0;
    sub_2420797C0(&qword_254397A18);
    return sub_2421328E8();
  }
}

void sub_2421163D4(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t static AssetLock.lockAllResources()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 216) = a1;
  sub_24211B0F4();
  return swift_task_switch();
}

uint64_t sub_242116444()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v23;
  __int128 *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  type metadata accessor for CatalogClient();
  sub_242079F48();
  CatalogClient.init()();
  v1 = sub_24207C290();
  sub_242097A18();
  v28 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (uint64_t)(v0 + 2);
    v24 = (__int128 *)(v0 + 7);
    v4 = (uint64_t)(v0 + 12);
    v26 = (uint64_t)(v0 + 17);
    v27 = (uint64_t)(v0 + 22);
    v5 = v1 + 32;
    sub_2420A1CA0();
    v25 = v0 + 2;
    v23 = v0 + 12;
    do
    {
      sub_24207EA48(v5, v3);
      sub_24207EA48(v3, v26);
      sub_2420797C0((uint64_t *)&unk_254399948);
      sub_2420797C0(&qword_2543990D0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        *(_QWORD *)(v4 + 32) = 0;
        *(_OWORD *)v4 = 0u;
        *(_OWORD *)(v4 + 16) = 0u;
      }
      sub_242079824(v3);
      if (v0[15])
      {
        sub_242079E50((__int128 *)v4, (uint64_t)v24);
        sub_242079E50(v24, v27);
        v6 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24211B1F4(0, *(_QWORD *)(v6 + 16) + 1);
          v6 = v18;
          v28 = v18;
        }
        v8 = *(_QWORD *)(v6 + 16);
        v7 = *(_QWORD *)(v6 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_24211B1F4(v7 > 1, v8 + 1);
          v28 = v19;
        }
        v9 = v0[25];
        v10 = v0[26];
        v11 = sub_24211AE7C();
        v13 = sub_242079844(v11, v12);
        v14 = v0;
        v15 = *(_QWORD *)(v9 - 8);
        v16 = swift_task_alloc();
        v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
        v0 = v14;
        v17(v16, v13, v9);
        sub_24210C624(v8, v16, &v28, v9, v10);
        sub_242079824(v27);
        sub_24211AFA4();
        v3 = (uint64_t)v25;
        v4 = (uint64_t)v23;
      }
      else
      {
        sub_242119318(v4, &qword_25719E610);
      }
      v5 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    v20 = v28;
  }
  else
  {
    sub_242097384();
    v20 = MEMORY[0x24BEE4AF8];
  }
  v0[28] = v20;
  v21 = (_QWORD *)swift_task_alloc();
  v0[29] = v21;
  *v21 = v0;
  v21[1] = sub_2421166D8;
  return static AssetLock.assetSets(resources:)(v20);
}

uint64_t sub_2421166D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  sub_24211AF0C();
  *v5 = *v3;
  *(_QWORD *)(v2 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 248) = a1;
  }
  sub_24211B0F4();
  return sub_24211AAD8();
}

uint64_t sub_24211673C()
{
  uint64_t v0;

  return sub_24211ACDC(*(_QWORD *)(v0 + 248));
}

uint64_t sub_242116748()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ModelCatalog::AssetLock __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetLock.init(assetSets:)(ModelCatalog::AssetLock assetSets)
{
  ModelCatalog::AssetLock *v1;

  v1->assetSets._rawValue = assetSets.assetSets._rawValue;
  return assetSets;
}

uint64_t static AssetLock.lockResources(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_2421167D4;
  return static AssetLock.assetSets(resources:)(a2);
}

uint64_t sub_2421167D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  _QWORD *v6;

  sub_24211AF0C();
  v5 = *v3;
  *v6 = v5;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v2 + 32) = a1;
  sub_24211B0F4();
  return sub_24211AAD8();
}

uint64_t sub_242116838()
{
  uint64_t v0;

  return sub_24211ACDC(*(_QWORD *)(v0 + 32));
}

void sub_242116844(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  AssetLock.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void CatalogAssetProtocol.displayVersion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  void (*v9)(uint64_t);
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  sub_24211AB68();
  v1 = v0;
  v3 = v2;
  v16 = v4;
  v21 = *MEMORY[0x24BDAC8D0];
  sub_24209745C();
  sub_242097518();
  MEMORY[0x24BDAC7A8](v5);
  sub_24207F540();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v1 + 80))(v3, v1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v8 = sub_24211B06C();
  v9(v8);
  sub_24213254C();
  sub_2420C0844();
  v10 = (void *)objc_opt_self();
  v11 = (void *)sub_2421325A0();
  *(_QWORD *)&v19 = 0;
  v12 = objc_msgSend(v10, sel_JSONObjectWithData_options_error_, v11, 0, &v19);

  if (v12)
  {
    v13 = (id)v19;
    sub_242132A5C();
    swift_unknownObjectRelease();
    sub_2420797C0(&qword_25719EA00);
    if ((sub_24211ADC4() & 1) != 0)
    {
      sub_24210D280(v17, &v19);
      sub_24211ADEC();
      sub_24207F78C();
      if (v20)
      {
        if ((sub_24211ADC4() & 1) != 0)
        {
          *v16 = v17;
          v16[1] = v18;
          goto LABEL_3;
        }
      }
      else
      {
        sub_242119318((uint64_t)&v19, &qword_25719F010);
      }
    }
    else
    {
      sub_24211ADEC();
    }
  }
  else
  {
    v14 = (id)v19;
    v15 = (void *)sub_24213248C();

    swift_willThrow();
    sub_24211ADEC();

  }
  *v16 = 0;
  v16[1] = 0;
LABEL_3:
  sub_242097670();
}

uint64_t sub_242116AF8()
{
  return CatalogAssetProtocol.mobileAssetMetadata.getter();
}

uint64_t CatalogAssetProtocol.mobileAssetMetadata.getter()
{
  return sub_242132708();
}

uint64_t CatalogAsset.version.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t CatalogAsset.reportedDownloadSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

__n128 CatalogAsset.specificationVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 40);
  result = *(__n128 *)(v1 + 24);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  return result;
}

uint64_t CatalogAsset.contents.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

void CatalogAsset.metadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_242097180();
  v2 = v1;
  sub_24213251C();
  sub_242097518();
  MEMORY[0x24BDAC7A8](v3);
  sub_2420C0CFC();
  (*(void (**)(_QWORD))(*(_QWORD *)(v2 + 40) + 16))(*(_QWORD *)(v2 + 24));
  v4 = sub_24213254C();
  if (v0)
  {
    sub_24211AF6C();
  }
  else
  {
    v6 = v4;
    v7 = v5;
    sub_24211AF6C();
    sub_2421323F0();
    swift_allocObject();
    sub_2421323E4();
    sub_2421323D8();
    swift_release();
    sub_24207BED4(v6, v7);
  }
  sub_2420970A0();
}

uint64_t CatalogAsset.mobileAssetMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

void CatalogAsset.init(specificationVersion:metadata:contents:mobileAssetMetadata:assetLock:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  sub_24211AB68();
  v2 = v1;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_2420C0CFC();
  v7 = *((_QWORD *)v6 + 2);
  v10 = *v6;
  v11 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v8, v9);
  CatalogAsset.init(specificationVersion:contents:mobileAssetMetadata:assetLock:)((uint64_t)&v10, v2);
}

void sub_242116D48(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, void (*a8)(_QWORD)@<X7>, uint64_t *a9@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  char v23;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;
  char v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;

  a9[3] = a1;
  a9[4] = a2;
  a9[5] = a3;
  v14 = (int *)sub_2420797C0(a7);
  sub_24211A870(a4, (uint64_t)a9 + v14[15], a8);
  *(uint64_t *)((char *)a9 + v14[16]) = a5;
  *(uint64_t *)((char *)a9 + v14[17]) = a6;
  v15 = sub_242132780();
  sub_242079ED8();
  v16 = sub_24211AFD0();
  v18 = v17;
  sub_242097578();
  if (!v18)
    goto LABEL_61;
  sub_24211B200();
  if (!v21)
  {
    sub_242097268();
LABEL_61:
    v40 = 0;
    goto LABEL_62;
  }
  if ((v18 & 0x1000000000000000) == 0)
  {
    if ((v18 & 0x2000000000000000) == 0)
    {
      if ((v16 & 0x1000000000000000) != 0)
        v22 = (unsigned __int8 *)((v18 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v22 = (unsigned __int8 *)sub_24211B1A8();
      v15 = (uint64_t)sub_242118864(v22, v19, 10);
      LOBYTE(v16) = v23 & 1;
      goto LABEL_50;
    }
    if (v16 == 43)
    {
      if (v20)
      {
        if (v20 == 1)
          goto LABEL_32;
        sub_24211AA98();
        if (!v27 & v26)
          goto LABEL_32;
        v15 = v29;
        if (v28 != 2)
        {
          sub_24211AA98();
          if (!v27 & v26)
            goto LABEL_32;
          sub_24211AD78();
          if (v30 != 3)
          {
            sub_24211AA98();
            if (!v27 & v26)
              goto LABEL_32;
            sub_24211AD78();
            if (v31 != 4)
            {
              while (1)
              {
                sub_24211AB48();
                if (!v27 & v26)
                  goto LABEL_32;
                sub_24211AAA8();
                if (!v27)
                  goto LABEL_32;
                v15 = v33 + v32;
                if (__OFADD__(v33, v32))
                  goto LABEL_32;
                sub_24211AB58();
                if (v27)
                  goto LABEL_50;
              }
            }
          }
        }
LABEL_49:
        LOBYTE(v16) = 0;
        goto LABEL_50;
      }
    }
    else
    {
      if (v16 != 45)
      {
        if (!v20 || (v16 - 48) > 9u)
          goto LABEL_32;
        v15 = (v16 - 48);
        if (v20 != 1)
        {
          sub_24211AA98();
          if (!v27 & v26)
            goto LABEL_32;
          sub_24211AD78();
          if (v34 != 2)
          {
            sub_24211AA98();
            if (!v27 & v26)
              goto LABEL_32;
            sub_24211B148();
            if (!v27)
            {
              while (1)
              {
                sub_24211AB48();
                if (!v27 & v26)
                  goto LABEL_32;
                sub_24211AAA8();
                if (!v27)
                  goto LABEL_32;
                v15 = v36 + v35;
                if (__OFADD__(v36, v35))
                  goto LABEL_32;
                sub_24211AB58();
                if (v27)
                  goto LABEL_50;
              }
            }
          }
        }
        goto LABEL_49;
      }
      if (v20)
      {
        if (v20 == 1)
          goto LABEL_32;
        sub_24211AA98();
        if (!v27 & v26)
          goto LABEL_32;
        if (v24 == 2)
        {
          LOBYTE(v16) = 0;
          v15 = -(uint64_t)v25;
          goto LABEL_50;
        }
        sub_24211B0E0();
        if (!v27 & v26)
          goto LABEL_32;
        sub_24211B0CC();
        if (v37 != 3)
        {
          sub_24211AA98();
          if (!(!v27 & v26))
          {
            v15 = 10 * (int)v15 - v39;
            if (v38 == 4)
              goto LABEL_49;
            while (1)
            {
              sub_24211AB48();
              if (!v27 & v26)
                break;
              sub_24211AAA8();
              if (!v27)
                break;
              v15 = v42 - v41;
              if (__OFSUB__(v42, v41))
                break;
              sub_24211AB58();
              if (v27)
                goto LABEL_50;
            }
          }
LABEL_32:
          v15 = 0;
          LOBYTE(v16) = 1;
          goto LABEL_50;
        }
        goto LABEL_49;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  v15 = (uint64_t)sub_24211AF94();
  LOBYTE(v16) = v47;
LABEL_50:
  sub_242097268();
  if ((v16 & 1) != 0)
    v40 = 0;
  else
    v40 = v15;
LABEL_62:
  a9[2] = v40;
  v43 = sub_24211ABDC();
  v45 = v44;
  sub_242079F20();
  if (v45)
  {
    v46 = v45;
  }
  else
  {
    v43 = 0x6E776F6E6B6E753CLL;
    v46 = 0xE90000000000003ELL;
  }
  sub_24211A8AC(a4, (uint64_t (*)(_QWORD))a8);
  *a9 = v43;
  a9[1] = v46;
}

void CatalogAsset.init(specificationVersion:contents:mobileAssetMetadata:assetLock:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 40) = v3;
  type metadata accessor for CatalogAsset();
}

unint64_t CatalogAsset.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v8;

  sub_24211AB68();
  v3 = v2;
  v8 = *(_QWORD *)(sub_24209745C() - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v4);
  sub_24210CA74();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1490]), sel_init);
  objc_msgSend(v5, sel_setCountStyle_, 0);
  v6 = objc_msgSend(v5, sel_stringFromByteCount_, *(_QWORD *)(v0 + 16));
  sub_242132780();

  sub_242132AD4();
  swift_bridgeObjectRelease();
  sub_242079ED8();
  sub_2421327EC();
  sub_242079F20();
  sub_2421327EC();
  sub_24211B06C();
  sub_2421327EC();
  sub_242097578();
  sub_2421327EC();
  (*(void (**)(_QWORD))(*(_QWORD *)(v3 + 40) + 8))(*(_QWORD *)(v3 + 24));
  sub_2420A7D98((unint64_t *)&qword_2571A1428, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_242132D08();
  sub_2421327EC();
  sub_242079F20();
  sub_2420C0B6C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));

  return 0xD000000000000014;
}

void sub_242117538()
{
  CatalogAsset.metadata.getter();
}

void sub_242117554()
{
  CatalogAsset.init(specificationVersion:metadata:contents:mobileAssetMetadata:assetLock:)();
}

void sub_242117594(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *a1;
  v4 = v2;
  CatalogAsset.init(specificationVersion:contents:mobileAssetMetadata:assetLock:)((uint64_t)&v3, a2);
}

BOOL static AssetSubscriptionStatusPendingReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void AssetSubscriptionStatusPendingReason.hash(into:)()
{
  sub_242132D80();
  sub_24207F428();
}

void AssetSubscriptionStatusPendingReason.hashValue.getter()
{
  sub_2420974F0();
  sub_242132D80();
  sub_242079F68();
  sub_24209725C();
}

void AssetSubscription.subscriberID.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void AssetSubscription.subscriptionName.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void AssetSubscription.assetSetName.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void AssetSubscription.requestResourcesKey.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetSubscription.assetSize()()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  sub_24211B078();
  v1 = (void *)sub_242132768();
  v2 = (void *)sub_242132768();
  v7[0] = 0;
  v3 = objc_msgSend(v0, sel_diskSpaceNeededForSubscriber_subscriptionName_error_, v1, v2, v7);

  v4 = v7[0];
  v5 = objc_msgSend(v3, sel_unsignedLongLongValue);

  if (v4)
    swift_willThrow();
  return (Swift::UInt64)v5;
}

void AssetSubscription.hash(into:)()
{
  uint64_t v0;
  int v1;

  sub_24211AB68();
  v1 = *(unsigned __int8 *)(v0 + 48);
  sub_242079ED8();
  sub_2421327D4();
  sub_242079F20();
  sub_242079F18();
  sub_2421327D4();
  sub_242079EE0();
  sub_2420C13B0();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  sub_242132D8C();
  if (v1 == 10)
    sub_242097670();
  else
    sub_2420AC7C0();
}

void AssetSubscription.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  sub_2420974F0();
  sub_24207F5FC();
  sub_24211AF2C();
  sub_24207F700();
  sub_2420977E0();
  sub_24211AF1C();
  sub_242097268();
  sub_2420C0B64();
  sub_24211AF3C();
  sub_242097578();
  sub_242132D8C();
  if (v1 != 10)
    sub_24211B100();
  sub_242079F68();
  sub_2420C1190();
}

void sub_24211791C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  sub_242132D74();
  sub_24207F5FC();
  sub_24211AF2C();
  sub_24207F700();
  sub_2420977E0();
  sub_24211AF1C();
  sub_242097268();
  sub_2420C0B64();
  sub_24211AF3C();
  sub_242097578();
  sub_242132D8C();
  if (v1 != 10)
    sub_24211B100();
  sub_242079F68();
  sub_2420C1190();
}

void AssetSubscription.description.getter()
{
  sub_242132AD4();
  sub_2421327EC();
  sub_242079F18();
  sub_2421327EC();
  sub_242079EE0();
  sub_2421327EC();
  sub_24207F5FC();
  sub_2421327EC();
  sub_24207F700();
  sub_2421327EC();
  sub_2420A1CA0();
  sub_2421327EC();
  sub_242097384();
  sub_2421327EC();
  sub_24211AD60();
}

void sub_242117AC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  AssetBackedResource.fetchAsset()(a1, a2, a3);
}

uint64_t sub_242117AD4()
{
  return AssetBackedResource.fetchLockedAsset(with:)();
}

uint64_t AssetBackedResource.fetchLockedAsset(with:)()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2421191AC();
  v0 = sub_2420970E4();
  *v1 = 0xD000000000000036;
  v1[1] = 0x80000002421410C0;
  return sub_2420A17F8(v0, (uint64_t)v1);
}

uint64_t sub_242117B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_242132D74();
    sub_2421327D4();
    v6 = sub_242132D98();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_242132D14() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_242132D14() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

id sub_242117C70()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)sub_242132768();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_242132768();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributeWithDomain_name_, v0, v1);

  return v2;
}

void AssetBackedResource.subscription.getter(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "model-catalog");
  *(_WORD *)(a1 + 14) = -4864;
  strcpy((char *)(a1 + 16), "all-or-nothing");
  *(_BYTE *)(a1 + 31) = -18;
  *(_QWORD *)(a1 + 32) = 0xD000000000000016;
  *(_QWORD *)(a1 + 40) = 0x8000000242137900;
  *(_BYTE *)(a1 + 48) = 10;
}

uint64_t sub_242117D70(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v11;

  v3 = objc_msgSend(a1, sel_name);
  if (v3)
  {
    v4 = v3;
    v5 = sub_242132780();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  if (a2[12])
  {
    v9 = a2[15];
    v8 = a2[16];
    sub_242097744();
    sub_24207F5FC();
  }
  else
  {
    v8 = 0x8000000242137900;
    sub_24211ABC8();
    v9 = 0xD000000000000016;
  }
  sub_24207F78C();
  sub_24211AAC4();
  if (v7)
  {
    if (v5 == v9 && v7 == v8)
      v11 = 1;
    else
      v11 = sub_242079EB8();
    sub_242097830();
  }
  else
  {
    v11 = 0;
  }
  sub_24207F700();
  return v11 & 1;
}

uint64_t sub_242117E60(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  _QWORD v16[7];

  v6 = objc_msgSend(*a1, sel_name);
  if (v6)
  {
    v7 = v6;
    v8 = sub_242132780();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v16, a3, a4);
  v11 = v16[4];
  v12 = v16[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (v8 == v11 && v10 == v12)
      v14 = 1;
    else
      v14 = sub_242132D14();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  swift_bridgeObjectRelease();
  return v14 & 1;
}

id sub_242117F64(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)sub_242132768();
  swift_bridgeObjectRelease();
  sub_24207F2FC(0, &qword_254399E80);
  v6 = (void *)sub_2421328A0();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_initWithExplanation_target_attributes_, v5, a3, v6);

  return v7;
}

void sub_242118008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    sub_2420797C0(qword_254399220);
    v4 = (_QWORD *)swift_allocObject();
    v5 = j__malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  sub_24207F428();
}

void sub_242118068(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_242132840();
    sub_24211AF7C(v4);
  }
  else
  {
    v3 = MEMORY[0x2426A3744](15, a1 >> 16);
    sub_24211AF7C(v3);
  }
  sub_24207F428();
}

uint64_t sub_2421180BC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;

  v3 = v2;
  v5 = *v2;
  sub_2420797C0(qword_254399F18);
  v40 = a2;
  v6 = sub_242132BAC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * i);
    v24 = *v23;
    v25 = v23[1];
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_242132D74();
    sub_2421327D4();
    result = sub_242132D98();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) == 0)
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v28);
        if (v33 != -1)
        {
          v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v29);
    *v34 = v22;
    v34[1] = v21;
    v35 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v29);
    *v35 = v24;
    v35[1] = v25;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v38)
    {
      swift_release();
      v3 = v37;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v39 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v38)
        goto LABEL_32;
      v18 = *(_QWORD *)(v39 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v38)
  {
    v18 = *(_QWORD *)(v39 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v38)
          goto LABEL_32;
        v18 = *(_QWORD *)(v39 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v37;
LABEL_34:
  if ((v40 & 1) != 0)
  {
    v36 = 1 << *(_BYTE *)(v5 + 32);
    if (v36 >= 64)
      sub_24207884C(0, (unint64_t)(v36 + 63) >> 6, v17);
    else
      *v17 = -1 << v36;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2421183C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t result;

  sub_24211AC00();
  sub_24211B014();
  if (v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = v4;
  v8 = v5;
  sub_2420797C0(&qword_2543977F8);
  if ((sub_24211AE14() & 1) == 0)
    goto LABEL_5;
  v9 = sub_24211AF4C();
  if ((v8 & 1) != (v10 & 1))
  {
LABEL_9:
    result = sub_242132D38();
    __break(1u);
    return result;
  }
  v7 = v9;
LABEL_5:
  v11 = *v3;
  if ((v8 & 1) != 0)
  {
    sub_242079824(*(_QWORD *)(v11 + 56) + 40 * v7);
    v12 = (__int128 *)sub_24207F648();
    return sub_242079E50(v12, v13);
  }
  else
  {
    sub_242118678(v7, v2, v1, v0, v11);
    return sub_24211AC94();
  }
}

uint64_t sub_24211848C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t result;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = sub_242079780();
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  sub_2420797C0(&qword_25439A0D8);
  if ((sub_242132B40() & 1) == 0)
    goto LABEL_5;
  v15 = sub_242079780();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    result = sub_242132D38();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v5;
  if ((v14 & 1) != 0)
  {
    v18 = (uint64_t *)(v17[7] + 16 * v13);
    result = swift_bridgeObjectRelease();
    *v18 = a1;
    v18[1] = a2;
  }
  else
  {
    sub_2421186B4(v13, a3, a4, a1, a2, v17);
    return swift_bridgeObjectRetain();
  }
  return result;
}

_OWORD *sub_2421185B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *result;

  sub_24211AC00();
  sub_24211B014();
  if (v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = v4;
  v8 = v5;
  sub_2420797C0(&qword_25719D8E8);
  if ((sub_24211AE14() & 1) == 0)
    goto LABEL_5;
  v9 = sub_24211AF4C();
  if ((v8 & 1) != (v10 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_242132D38();
    __break(1u);
    return result;
  }
  v7 = v9;
LABEL_5:
  v11 = *v3;
  if ((v8 & 1) != 0)
  {
    sub_242079824(*(_QWORD *)(v11 + 56) + 32 * v7);
    v12 = (_OWORD *)sub_24207F648();
    return sub_242079DB0(v12, v13);
  }
  else
  {
    sub_242118700(v7, v2, v1, v0, v11);
    return (_OWORD *)sub_24211AC94();
  }
}

void sub_242118678(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v6 = sub_24211AAE8(a1, a2, a3, a4, a5);
  sub_242079E50(v8, v7 + 40 * v6);
  v9 = *(_QWORD *)(v5 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v11;
    sub_24207F428();
  }
}

unint64_t sub_2421186B4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

void sub_242118700(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v6 = sub_24211AAE8(a1, a2, a3, a4, a5);
  sub_242079DB0(v8, (_OWORD *)(v7 + 32 * v6));
  v9 = *(_QWORD *)(v5 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v11;
    sub_24207F428();
  }
}

uint64_t sub_242118738(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *a1 = a4;
  a1[1] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

unsigned __int8 *sub_242118780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_242132858();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_242118AE0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_242132B28();
  }
LABEL_7:
  v11 = sub_242118864(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_242118864(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242118AE0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_242118B3C();
  v4 = sub_242118B70(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_242118B3C()
{
  return sub_242132864();
}

uint64_t sub_242118B70(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_242118CB4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_242118008(v9, 0);
      v12 = v11;
      sub_242118DA0(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x24BEE4AF8];
    }
    v15 = MEMORY[0x2426A36F0](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2426A36F0);
LABEL_9:
      sub_242132B28();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2426A36F0]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_242118CB4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_242118068(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_242118068(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_242132828();
    return;
  }
  __break(1u);
}

void sub_242118DA0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_242118068(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_242132834();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_242132B28();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_242118068(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_242132810();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_242118FA0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_assetSetId);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_242132780();

  return v3;
}

void sub_242119000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9;

  v9 = (id)sub_2421326E4();
  swift_bridgeObjectRelease();
  objc_msgSend(a5, sel_retrieveAssetSet_usages_queue_completion_, a1, v9, a3, a4);

}

id sub_242119090(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;

  v5 = (void *)sub_2421326E4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(a3, sel_retrieveAssetSet_usages_, a1, v5);

  return v6;
}

uint64_t sub_242119110@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  result = sub_242118738(v7, *a1, a1[1], a1[2], a1[3]);
  v4 = v7[0];
  v5 = v7[1];
  *a2 = result;
  a2[1] = v6;
  a2[2] = v4;
  a2[3] = v5;
  return result;
}

uint64_t sub_242119150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = -1 << *(_BYTE *)(a1 + 32);
  *a4 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64)
    v8 = ~(-1 << -(char)v4);
  else
    v8 = -1;
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_24211918C(id *a1)
{
  uint64_t *v1;

  return sub_242117E60(a1, v1[5], v1[2], v1[3]) & 1;
}

unint64_t sub_2421191AC()
{
  unint64_t result;

  result = qword_254399A60;
  if (!qword_254399A60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CatalogErrors.AssetErrors, &type metadata for CatalogErrors.AssetErrors);
    atomic_store(result, (unint64_t *)&qword_254399A60);
  }
  return result;
}

unint64_t sub_2421191E8()
{
  unint64_t result;

  result = qword_2571A1458;
  if (!qword_2571A1458)
  {
    result = MEMORY[0x2426A40E0](&unk_2421641A4, &_s11AssetErrorsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A1458);
  }
  return result;
}

unint64_t sub_242119224()
{
  unint64_t result;

  result = qword_2571A1460;
  if (!qword_2571A1460)
  {
    result = MEMORY[0x2426A40E0](&unk_242164154, &_s11AssetErrorsO27FailedToFindAssetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A1460);
  }
  return result;
}

unint64_t sub_242119260()
{
  unint64_t result;

  result = qword_2571A1468;
  if (!qword_2571A1468)
  {
    result = MEMORY[0x2426A40E0](&unk_242164104, &_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A1468);
  }
  return result;
}

uint64_t sub_24211929C(void **a1, const void *a2)
{
  void *v2;
  _QWORD __dst[23];

  v2 = *a1;
  memcpy(__dst, a2, sizeof(__dst));
  return sub_242117D70(v2, __dst) & 1;
}

uint64_t sub_2421192E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_242119308(uint64_t a1)
{
  uint64_t *v1;

  sub_24211605C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_242119318(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_2420797C0(a2);
  sub_24211ADB0(v2);
  sub_24207F428();
}

void type metadata accessor for CatalogAsset()
{
  JUMPOUT(0x2426A408CLL);
}

uint64_t sub_242119350(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

uint64_t sub_242119358(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_242119360(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CatalogAsset<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242119390()
{
  unint64_t result;

  result = qword_2571A14A0;
  if (!qword_2571A14A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSubscriptionStatusPendingReason, &type metadata for AssetSubscriptionStatusPendingReason);
    atomic_store(result, (unint64_t *)&qword_2571A14A0);
  }
  return result;
}

unint64_t sub_2421193D0()
{
  unint64_t result;

  result = qword_2543979F8;
  if (!qword_2543979F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSubscription, &type metadata for AssetSubscription);
    atomic_store(result, (unint64_t *)&qword_2543979F8);
  }
  return result;
}

uint64_t sub_242119410(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_242097464();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11AssetErrorsOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_242097464();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2420C0608();
  return a1;
}

uint64_t _s11AssetErrorsOwta(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2420C0608();
  return a1;
}

uint64_t _s11AssetErrorsOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for CatalogErrors.AssetErrors()
{
  sub_242082F08();
}

uint64_t dispatch thunk of AssetContents.baseURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AssetContents.metadataURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AssetContents.init(baseURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void type metadata accessor for AssetLock()
{
  sub_242082F08();
}

uint64_t dispatch thunk of CatalogAssetProtocol.reportedDownloadSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.specificationVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.contents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.displayVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.mobileAssetMetadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.init(specificationVersion:metadata:contents:mobileAssetMetadata:assetLock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 104))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.init(specificationVersion:contents:mobileAssetMetadata:assetLock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 112))();
}

uint64_t sub_2421195B4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2421195BC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24211965C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  _QWORD *v21;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 48) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
    v16 = *(_OWORD *)v15;
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
    *(_OWORD *)v14 = v16;
    v17 = (v14 + v6 + 24) & ~v6;
    v18 = (v15 + v6 + 24) & ~v6;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v19(v17, v18, v4);
    v20 = (_QWORD *)((v7 + v17) & 0xFFFFFFFFFFFFF8);
    v21 = (_QWORD *)((v7 + v18) & 0xFFFFFFFFFFFFF8);
    *v20 = *v21;
    *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_242119798(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_242119814(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  *v6 = *v5;
  v7 = ((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_OWORD *)v7 = v9;
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 24 + v7) & ~v12;
  v14 = (v12 + 24 + v8) & ~v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v15(v13, v14, v10);
  v16 = *(_QWORD *)(v11 + 64) + 7;
  v17 = (_QWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2421198F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = (_QWORD *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v8 + v11 + 24) & ~v11;
  v13 = ((unint64_t)v9 + v11 + 24) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v14 + v13;
  v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v15 = *(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_2421199F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  *v5 = *v4;
  v6 = ((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_OWORD *)v7;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v7 + 16);
  *(_OWORD *)v6 = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 24 + v6) & ~v10;
  v12 = (v10 + 24 + v7) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_242119AB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v9 + v12 + 24) & ~v12;
  v14 = ((unint64_t)v10 + v12 + 24) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242119BA0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if ((v6 & 0x80000000) != 0)
    {
      return sub_2420801D0((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 24) & ~v8, v6, v4);
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
  }
  else
  {
    if (((((((*(_QWORD *)(v5 + 64) + ((v8 + 48) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_242119C34 + 4 * byte_242163A50[v11]))();
  }
}

void sub_242119CC0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64)
         + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~*(unsigned __int8 *)(v5 + 80)) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((_DWORD)v7)
    {
      v11 = ~v6 + a2;
      bzero(a1, v7);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_242119DC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;

  *((_BYTE *)v5 + v6) = 0;
  if ((_DWORD)a1)
  {
    if ((a2 & 0x80000000) != 0)
    {
      return sub_24207E8A8(((((((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v4 + 24) & a4, a1, a2, a3);
    }
    else if ((a1 & 0x80000000) != 0)
    {
      *v5 = a1 ^ 0x80000000;
      v5[1] = 0;
    }
    else
    {
      v5[1] = (a1 - 1);
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AssetSubscriptionStatusPendingReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242119EA8 + 4 * byte_242163A64[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242119EDC + 4 * byte_242163A5F[v4]))();
}

uint64_t sub_242119EDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242119EE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242119EECLL);
  return result;
}

uint64_t sub_242119EF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242119F00);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242119F04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242119F0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AssetSubscriptionStatusPendingReason()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for AssetSubscriptionStatus(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
  {
    v6 = *a1;
    if (v6 >= 4)
      v7 = v6 - 3;
    else
      v7 = 0;
    if (v7 >= 6)
      return v7 - 5;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_242119F74 + 4 * byte_242163A69[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for AssetSubscriptionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF8)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_24211A020 + 4 * byte_242163A73[v5]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_24211A054 + 4 * byte_242163A6E[v5]))();
}

uint64_t sub_24211A054(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24211A05C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24211A064);
  return result;
}

uint64_t sub_24211A070(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24211A078);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_24211A07C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24211A084(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24211A090(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 4)
    return v1 - 3;
  else
    return 0;
}

_BYTE *sub_24211A0A4(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 3;
  return result;
}

void type metadata accessor for AssetSubscriptionStatus()
{
  sub_242082F08();
}

uint64_t initializeWithCopy for AssetSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetSubscription(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for AssetSubscription(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AssetSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetSubscription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetSubscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetSubscription()
{
  sub_242082F08();
}

uint64_t dispatch thunk of AssetBackedResource.fetchAsset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AssetBackedResource.fetchLockedAsset(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t _s11AssetErrorsO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24211A344 + 4 * byte_242163A7D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24211A378 + 4 * byte_242163A78[v4]))();
}

uint64_t sub_24211A378(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24211A380(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24211A388);
  return result;
}

uint64_t sub_24211A394(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24211A39CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24211A3A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24211A3A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11AssetErrorsO10CodingKeysOMa()
{
  return &_s11AssetErrorsO10CodingKeysON;
}

ValueMetadata *_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysOMa()
{
  return &_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysON;
}

uint64_t _s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24211A46C + 4 * byte_242163A82[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24211A48C + 4 * byte_242163A87[v4]))();
}

_BYTE *sub_24211A46C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24211A48C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24211A494(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24211A49C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24211A4A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24211A4AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11AssetErrorsO27FailedToFindAssetCodingKeysOMa()
{
  return &_s11AssetErrorsO27FailedToFindAssetCodingKeysON;
}

unint64_t sub_24211A4CC()
{
  unint64_t result;

  result = qword_2571A14A8;
  if (!qword_2571A14A8)
  {
    result = MEMORY[0x2426A40E0](&unk_242163F6C, &_s11AssetErrorsO27FailedToFindAssetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14A8);
  }
  return result;
}

unint64_t sub_24211A50C()
{
  unint64_t result;

  result = qword_2571A14B0;
  if (!qword_2571A14B0)
  {
    result = MEMORY[0x2426A40E0](&unk_242164024, &_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14B0);
  }
  return result;
}

unint64_t sub_24211A54C()
{
  unint64_t result;

  result = qword_2571A14B8;
  if (!qword_2571A14B8)
  {
    result = MEMORY[0x2426A40E0](&unk_2421640DC, &_s11AssetErrorsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14B8);
  }
  return result;
}

unint64_t sub_24211A58C()
{
  unint64_t result;

  result = qword_2571A14C0;
  if (!qword_2571A14C0)
  {
    result = MEMORY[0x2426A40E0](&unk_242163F94, &_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14C0);
  }
  return result;
}

unint64_t sub_24211A5CC()
{
  unint64_t result;

  result = qword_2571A14C8;
  if (!qword_2571A14C8)
  {
    result = MEMORY[0x2426A40E0](&unk_242163FBC, &_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14C8);
  }
  return result;
}

unint64_t sub_24211A60C()
{
  unint64_t result;

  result = qword_2571A14D0;
  if (!qword_2571A14D0)
  {
    result = MEMORY[0x2426A40E0](&unk_242163EDC, &_s11AssetErrorsO27FailedToFindAssetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14D0);
  }
  return result;
}

unint64_t sub_24211A64C()
{
  unint64_t result;

  result = qword_2571A14D8;
  if (!qword_2571A14D8)
  {
    result = MEMORY[0x2426A40E0](&unk_242163F04, &_s11AssetErrorsO27FailedToFindAssetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14D8);
  }
  return result;
}

unint64_t sub_24211A68C()
{
  unint64_t result;

  result = qword_2571A14E0;
  if (!qword_2571A14E0)
  {
    result = MEMORY[0x2426A40E0](&unk_24216404C, &_s11AssetErrorsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14E0);
  }
  return result;
}

unint64_t sub_24211A6CC()
{
  unint64_t result;

  result = qword_2571A14E8;
  if (!qword_2571A14E8)
  {
    result = MEMORY[0x2426A40E0](&unk_242164074, &_s11AssetErrorsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2571A14E8);
  }
  return result;
}

uint64_t sub_24211A720(void **a1)
{
  uint64_t v1;

  return sub_24211929C(a1, *(const void **)(v1 + 16)) & 1;
}

void sub_24211A76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_24211B25C();
  sub_24211AC24();
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  v0 = sub_2420977E0();
  v8 = sub_24211AD88(v0, v1, v2, v3, v4, v5, v6, v7, v10, v11, v12, v13, v14);
  sub_242084D88(v8, v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24211AD18();
}

void sub_24211A7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_24211B25C();
  sub_24211AC24();
  swift_bridgeObjectRelease();
  sub_242079F20();
  sub_24207F700();
  sub_24207F78C();
  sub_242097830();
  v0 = sub_242097268();
  v8 = sub_24211AD88(v0, v1, v2, v3, v4, v5, v6, v7, v10, v11, v12, v13, v14);
  sub_242084E14(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24211AD18();
}

void sub_24211A870(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = sub_24207F648();
  v4(v3);
  sub_24207F428();
}

void sub_24211A8AC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_24211ADB0(v2);
  sub_24207F428();
}

uint64_t sub_24211A8D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_2420797C0(&qword_254397A18) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  sub_2420C0B6C(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24211A97C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(sub_2420797C0(&qword_254397A18) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_242116258(a1, *(_QWORD *)(v1 + 16), v1 + v4, *v5, v5[1]);
}

uint64_t sub_24211A9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24211A9F4()
{
  return swift_release();
}

uint64_t sub_24211AA08(void **a1)
{
  return sub_24211A720(a1) & 1;
}

void *sub_24211AA20(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0xB8uLL);
}

void *sub_24211AA3C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0xB8uLL);
}

void sub_24211AA54()
{
  sub_242111374();
}

void sub_24211AABC()
{
  sub_24211A7EC();
}

uint64_t sub_24211AAC4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24211AAD8()
{
  return swift_task_switch();
}

unint64_t sub_24211AAE8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  v5 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t sub_24211AB1C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_24211848C(0x44454C42414E45, 0xE700000000000000, v0, v1);
}

uint64_t sub_24211AB80()
{
  return sub_2421327EC();
}

uint64_t sub_24211ABA4()
{
  return sub_2421327EC();
}

uint64_t sub_24211ABDC()
{
  uint64_t v0;

  return sub_24210D22C(0x7265567465737341, 0xEC0000006E6F6973, v0);
}

unint64_t sub_24211AC00()
{
  return sub_242079780();
}

uint64_t sub_24211AC4C()
{
  return sub_2421327EC();
}

void sub_24211AC6C()
{
  uint64_t v0;

  strcpy((char *)v0, "model-catalog");
  *(_WORD *)(v0 + 14) = -4864;
}

uint64_t sub_24211AC94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24211ACA8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24211ACCC()
{
  return swift_task_alloc();
}

uint64_t sub_24211ACDC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = a1;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_24211ACEC()
{
  sub_24211A76C();
}

uint64_t sub_24211AD34()
{
  return swift_arrayDestroy();
}

void sub_24211AD3C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t sub_24211AD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

uint64_t sub_24211ADB0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_24211ADC4()
{
  return swift_dynamicCast();
}

uint64_t _s12ModelCatalog0B13AssetProtocolP7versionAA0C7VersionVvgTj_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_24211ADE0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_24212F968(v4, v3, a3);
}

uint64_t sub_24211ADEC()
{
  unint64_t v0;
  uint64_t v1;

  return sub_24207BED4(v1, v0);
}

uint64_t sub_24211ADF8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_24211AE00()
{
  return sub_2421326FC();
}

uint64_t sub_24211AE14()
{
  return sub_242132B40();
}

uint64_t sub_24211AE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(v1, v0);
}

BOOL sub_24211AE3C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_24211AE64()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24211AE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_24211AE7C()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_24211AE88()
{
  return sub_242079780();
}

void sub_24211AE98(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

uint64_t sub_24211AEA8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_24211AEB8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24211AEC4@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  return a2 + ((a1 & 1) == 0);
}

uint64_t sub_24211AED4()
{
  return sub_242132C84();
}

uint64_t sub_24211AEE4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_24212F968(v1, v2, (uint64_t *)(v0 + 152));
}

void sub_24211AF0C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_24211AF1C()
{
  return sub_2421327D4();
}

uint64_t sub_24211AF2C()
{
  return sub_2421327D4();
}

uint64_t sub_24211AF3C()
{
  return sub_2421327D4();
}

unint64_t sub_24211AF4C()
{
  return sub_242079780();
}

uint64_t sub_24211AF5C()
{
  return sub_2421326F0();
}

uint64_t sub_24211AF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

unint64_t sub_24211AF7C(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

unsigned __int8 *sub_24211AF94()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242118780(v1, v0, 10);
}

uint64_t sub_24211AFA4()
{
  return swift_task_dealloc();
}

uint64_t sub_24211AFAC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_24211AFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_24210D22C(v0, v2, v1);
}

uint64_t sub_24211AFE0()
{
  return sub_2421326F0();
}

uint64_t sub_24211AFE8()
{
  return swift_bridgeObjectRelease_n();
}

id sub_24211AFF0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_24211AFFC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_24212F968(a1, a2, (uint64_t *)(v2 + 232));
}

uint64_t sub_24211B008()
{
  return sub_242132768();
}

uint64_t sub_24211B028(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = a1;
  return v1 + 232;
}

uint64_t sub_24211B03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t, uint64_t), uint64_t a16)
{
  return a15(a14, a16);
}

uint64_t sub_24211B048()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24211B054(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v4, a2, v3);
}

uint64_t sub_24211B060(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v4, a2, v3);
}

uint64_t sub_24211B06C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24211B078()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24211B084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_24211B08C()
{
  return sub_242132A38();
}

BOOL sub_24211B0B4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_24211B100()
{
  sub_2420AC7C0();
}

uint64_t sub_24211B120()
{
  return swift_beginAccess();
}

uint64_t sub_24211B12C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_24212F968(a1, v3, a3);
}

uint64_t sub_24211B15C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24211B164()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

id sub_24211B170(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_24211B17C(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_24211B188()
{
  return swift_task_dealloc();
}

uint64_t sub_24211B190(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t sub_24211B19C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_24211B1A8()
{
  return sub_242132B28();
}

uint64_t sub_24211B1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_24211B1D0()
{
  return sub_2421324D4();
}

uint64_t sub_24211B1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24207E8A8(a1, a2, 1, v2);
}

void sub_24211B1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B0B0(a1, a2, 1, v2);
}

void sub_24211B1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B0B0(a1, a2, 1, v2);
}

_QWORD *sub_24211B214()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242079800((_QWORD *)(v1 - 192), v0);
}

unint64_t sub_24211B220()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_242119224();
}

uint64_t sub_24211B22C()
{
  return swift_release();
}

uint64_t sub_24211B234()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24211B248(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_24211B284()
{
  uint64_t result;

  result = sub_24211B2A0();
  qword_2571DEF50 = result;
  return result;
}

uint64_t sub_24211B2A0()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2420797C0(&qword_25719E700);
  sub_2420797C0(&qword_2571A14F0);
  sub_24211D5E4();
  v0 = sub_242132708();
  v1 = sub_24210CDD8();
  if (v1[2])
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  return v0;
}

void ResourceBundleIdentifier<>.serverConfiguration()(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  char v4;

  if (qword_25719D8D8 != -1)
    swift_once();
  v2 = qword_2571DEF50;
  if (*(_QWORD *)(qword_2571DEF50 + 16))
  {
    swift_bridgeObjectRetain();
    v3 = sub_2420798F8();
    if ((v4 & 1) != 0)
    {
      sub_24207986C(*(_QWORD *)(v2 + 56) + 40 * v3, a1);
    }
    else
    {
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

unint64_t sub_24211D5E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25719E830;
  if (!qword_25719E830)
  {
    v1 = sub_24208C304(&qword_25719E700);
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceBundleIdentifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_25719E830);
  }
  return result;
}

uint64_t XPCServiceClientConnection.__allocating_init(delegate:)()
{
  uint64_t v0;

  sub_2420C1758();
  sub_2421321EC();
  v0 = swift_allocObject();
  sub_24207F7AC();
  XPCServiceClientConnection.init(delegate:)();
  return v0;
}

void sub_24211D66C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  a3(&v3);
  sub_2421323A0();
}

void sub_24211D698()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132F628);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_242130DD4;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "requesting status information for: %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_242130DDC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132F6C8);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_resourceStatusWithIdentifier_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_24211E1D0()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132F560);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "requesting resource information for: %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132F600);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_resourceInformationWithIdentifier_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_24211ED08()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132FE70);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "requesting resources for: %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132FEE8);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_requestResourcesWithRequestKey_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_24211F840()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132FDD0);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "releasing resource for: %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132FE48);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_releaseResourcesWithRequestKey_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_242120378()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132FD30);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "requesting resource for: %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132FDA8);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_requestResourceWithIdentifier_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_242120EB0()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132FC90);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "releasing resource for: %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132FD08);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_releaseResourceWithIdentifier_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_2421219E8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  __n128 v11;
  void *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  os_log_type_t v26;
  _QWORD *v27;
  void *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, _QWORD);
  id v58;
  char v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, _QWORD);
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  NSObject *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  _BYTE v96[16];
  unint64_t v97;

  sub_242131478();
  v88 = sub_2421316C8(v3, (uint64_t)v96);
  sub_2421315C4(*(_QWORD *)(v88 - 8));
  MEMORY[0x24BDAC7A8](v4);
  sub_2421320D4();
  MEMORY[0x24BDAC7A8](v5);
  sub_24213234C();
  MEMORY[0x24BDAC7A8](v6);
  sub_242132338();
  MEMORY[0x24BDAC7A8](v7);
  sub_242131B5C();
  MEMORY[0x24BDAC7A8](v8);
  sub_242131CD0(*(os_unfair_lock_s **)(v0 + 16));
  sub_242132318();
  if (v1)
    goto LABEL_2;
  sub_242131C1C();
  if (!v10)
  {
    sub_24207F02C();
    sub_2420970E4();
    *v42 = 0;
    sub_2420A197C();
LABEL_2:
    sub_242131C8C();
    v9 = (void **)v96;
LABEL_3:
    sub_2421313AC((uint64_t)v9);
    goto LABEL_4;
  }
  sub_2421322D0(v10);
  sub_242131C8C();
  v97 = 0;
  sub_242079EE8();
  sub_2421316E4();
  v12 = v86;
  if (!v13)
  {
    v11.n128_u64[0] = 138412290;
    sub_242131F4C(v11);
    v81 = 136315650;
    while (1)
    {
      v97 = v14;
      v15 = sub_242079F48();
      *(_QWORD *)(v15 + 16) = 0;
      v16 = (void **)(v15 + 16);
      v94 = sub_24212C560;
      v95 = v15;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v17 = sub_242131330((uint64_t)&unk_25132F8D0);
      sub_242131A18();
      sub_24211B22C();
      v18 = sub_2421320C8(sel_synchronousRemoteObjectProxyWithErrorHandler_, (uint64_t)&v94);
      sub_242131D5C();
      v19 = sub_242079F48();
      *(_QWORD *)(v19 + 16) = 0;
      v20 = sub_242079F48();
      sub_242131B14(v20);
      v21 = sub_24207F538();
      *(_QWORD *)(v21 + 16) = v17;
      *(_QWORD *)(v21 + 24) = v19;
      v22 = sub_24207F538();
      *(_QWORD *)(v22 + 16) = sub_24213109C;
      *(_QWORD *)(v22 + 24) = v21;
      v23 = qword_25439A030;
      sub_242131BD8();
      sub_2421313D8((uint64_t)&v97);
      sub_24213217C();
      sub_242131A18();
      if (v23 != -1)
        swift_once();
      v24 = sub_24213210C();
      v25 = (void *)sub_24207BF18(v24, (uint64_t)qword_2543A65B0);
      v2 = v12;
      sub_242132618();
      v26 = sub_24207F668();
      if (sub_24210CC90(v26))
      {
        sub_24210CA3C();
        v27 = (_QWORD *)sub_24210CA3C();
        sub_242131D1C(v27);
        sub_242131CE8();
        sub_242131940(v28, v29, v30, "sideloading resource container: %@");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }

      v94 = sub_2421310CC;
      v95 = v22;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132F948);
      sub_242131B20();
      swift_retain();
      v31 = sub_24211B22C();
      sub_2421321C4(v31, sel_sideloadWithResource_with_);
      sub_242131D5C();
      sub_242097B70();
      sub_242131BD0();
      sub_242131658();
      sub_24211B120();
      v32 = *v16;
      if (!*v16)
        break;
      v33 = v97;
      sub_24210CD34();
      sub_24210CD34();
      LOBYTE(v33) = sub_242131A94(v32, v33);
      sub_24210CAEC();
      if ((v33 & 1) == 0)
      {
        if (qword_25439A0E0 != -1)
          goto LABEL_42;
        goto LABEL_27;
      }
      LOBYTE(v2) = v18;
      if (qword_25439A0E0 != -1)
        swift_once();
      sub_24207BF18(v88, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_242131F04();
      sub_24210CD34();
      sub_24210CD34();
      sub_242132618();
      v34 = sub_242131ACC();
      if (sub_242131ADC(v34))
      {
        v35 = sub_2421310D0();
        v36 = (_QWORD *)sub_24210CA3C();
        v37 = sub_2421310D0();
        sub_24213203C(v37);
        sub_24211B120();
        v38 = sub_24213130C();
        v40 = sub_242131120(v38, v39, &v93);
        sub_242132004(v40);
        *(_WORD *)(v35 + 12) = 2112;
        sub_24210CD34();
        v41 = sub_242131B38();
        *(_QWORD *)(v35 + 14) = v41;
        *v36 = v41;
        sub_24210CAEC();
        sub_24210CAEC();
        sub_242132248();
        sub_24213144C(&dword_242074000, v84, (os_log_type_t)v16, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v35);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_24210CAEC();
      sub_242131F78();
      sub_24210CAEC();
      sub_24210CAEC();

      sub_242131110((uint64_t)v84, *(uint64_t (**)(uint64_t, _QWORD))(v21 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_2421310E4();
      sub_242131F78();
      v14 = v97 + 1;
      v12 = v86;
      if (v97 == -1)
        goto LABEL_41;
    }
    sub_24211B120();
    if (*(_QWORD *)(v19 + 16))
    {
      sub_24210CD34();
      if (qword_25439A0E0 != -1)
        swift_once();
      v43 = sub_24207BF18(v88, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421319FC();
      sub_24210CD34();
      sub_24210CD34();
      sub_242131F44();
      v44 = sub_242131ACC();
      if (sub_242131954(v44))
      {
        v45 = sub_2421310D0();
        v82 = (_QWORD *)sub_24210CA3C();
        v46 = sub_2421310D0();
        sub_242131DF0(v46);
        sub_24211B120();
        v47 = sub_2420C0B64();
        v90 = sub_242131120(v47, v48, &v89);
        sub_242131214();
        sub_242097578();
        *(_WORD *)(v45 + 12) = 2112;
        sub_24210CD34();
        v49 = sub_242131B38();
        v90 = v49;
        sub_242131214();
        *v82 = v49;
        sub_24210CAEC();
        sub_24210CAEC();
        *(_WORD *)(v45 + 22) = 2048;
        sub_242131504((uint64_t)&v92);
        sub_24213144C(&dword_242074000, v43, (os_log_type_t)v2, "%s sync: method error during call: %@, num connection attempts:%lu", (uint8_t *)v45);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      goto LABEL_29;
    }
    sub_24211B120();
    if (*(_QWORD *)(v87 + 16))
    {
      v58 = *(id *)(v87 + 16);
      sub_2421322B0();
      if (!v59)
        swift_once();
      v60 = sub_24207BF18(v88, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_242131B04(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 16));
      sub_242131F44();
      v61 = sub_242131FE4();
      if (sub_24213173C(v61))
      {
        v62 = (uint8_t *)sub_24210CA3C();
        v63 = sub_2421310D0();
        sub_242131CDC(v63);
        sub_242132130(4.8151e-34);
        sub_24211B120();
        v64 = sub_2420C13B0();
        v66 = sub_242131560(v64, v65, &v90);
        sub_242131C9C(v66);
        sub_2420A1B60();
        sub_2421314A0();
        sub_24211AD3C(&dword_242074000, v60, (os_log_type_t)v88, "%s sync: method returned non-nil result, num connection attempts:%lu", v62);
        sub_24210CC58();
        sub_24210C9C4();
      }

      sub_242131658();
      sub_2421313AC((uint64_t)&v94);
      sub_242131110(v80, *(uint64_t (**)(uint64_t, _QWORD))(v85 + 8));

      sub_2421310E4();
      sub_2421310E4();
      sub_2421310E4();
      sub_242131658();
      goto LABEL_4;
    }
    if (qword_25439A0E0 != -1)
      swift_once();
    v67 = (void *)sub_24207BF18(v88, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 16));
    sub_242131934();
    v68 = sub_2421314CC();
    if (sub_2421314DC(v68))
    {
      v69 = sub_24210CA3C();
      v70 = sub_2421310D0();
      sub_242131DCC(v70);
      sub_2421316FC(4.8151e-34);
      sub_24211B120();
      v71 = sub_2420C0B64();
      sub_242131120(v71, v72, &v90);
      sub_242131214();
      sub_242097578();
      *(_WORD *)(v69 + 12) = 2048;
      sub_2421315BC();
      sub_2421313E4(&dword_242074000, v73, v74, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_24210CC58();
      sub_24210C9C4();
    }

    v75 = sub_242132148();
    sub_242131110(v75, v76);
    sub_24207F02C();
    v77 = sub_2420970E4();
    sub_242131468(v77, v78);
    sub_2421313AC((uint64_t)v96);
    sub_2421310E4();
    sub_242131424();
    sub_2421310E4();
    sub_2421310E4();
    v9 = &v94;
    goto LABEL_3;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  swift_once();
LABEL_27:
  v43 = sub_24207BF18(v88, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421319FC();
  sub_24210CD34();
  sub_24210CD34();
  sub_242131F44();
  v50 = sub_242131ACC();
  if (sub_242131954(v50))
  {
    v51 = sub_2421310D0();
    v83 = (_QWORD *)sub_24210CA3C();
    v52 = sub_2421310D0();
    sub_242131EA0(v52);
    sub_24211B120();
    v53 = sub_2420C0B64();
    sub_242131120(v53, v54, &v91);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v51 + 12) = 2112;
    sub_24210CD34();
    v55 = sub_242131B38();
    sub_242131214();
    *v83 = v55;
    sub_24210CAEC();
    sub_24210CAEC();
    *(_WORD *)(v51 + 22) = 2048;
    v89 = v81;
    sub_2421315BC();
    sub_24213144C(&dword_242074000, v43, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu", (uint8_t *)v51);
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
LABEL_29:
  sub_24210CAEC();
  sub_24210CAEC();

  v56 = sub_2421322F8();
  sub_242131110(v56, v57);
  sub_242097610();
  sub_2421313AC((uint64_t)v96);
  sub_242097A18();
  sub_242131424();
  sub_2421310E4();
  sub_2421310E4();
  sub_2421313AC((uint64_t)&v94);
LABEL_4:
  sub_242131158();
}

void sub_2421226AC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  __n128 v11;
  void *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  os_log_type_t v26;
  _QWORD *v27;
  void *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, _QWORD);
  id v58;
  char v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, _QWORD);
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  NSObject *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  _BYTE v96[16];
  unint64_t v97;

  sub_242131478();
  v88 = sub_2421316C8(v3, (uint64_t)v96);
  sub_2421315C4(*(_QWORD *)(v88 - 8));
  MEMORY[0x24BDAC7A8](v4);
  sub_2421320D4();
  MEMORY[0x24BDAC7A8](v5);
  sub_24213234C();
  MEMORY[0x24BDAC7A8](v6);
  sub_242132338();
  MEMORY[0x24BDAC7A8](v7);
  sub_242131B5C();
  MEMORY[0x24BDAC7A8](v8);
  sub_242131CD0(*(os_unfair_lock_s **)(v0 + 16));
  sub_242132318();
  if (v1)
    goto LABEL_2;
  sub_242131C1C();
  if (!v10)
  {
    sub_24207F02C();
    sub_2420970E4();
    *v42 = 0;
    sub_2420A197C();
LABEL_2:
    sub_242131C8C();
    v9 = (void **)v96;
LABEL_3:
    sub_2421313AC((uint64_t)v9);
    goto LABEL_4;
  }
  sub_2421322D0(v10);
  sub_242131C8C();
  v97 = 0;
  sub_242079EE8();
  sub_2421316E4();
  v12 = v86;
  if (!v13)
  {
    v11.n128_u64[0] = 138412290;
    sub_242131F4C(v11);
    v81 = 136315650;
    while (1)
    {
      v97 = v14;
      v15 = sub_242079F48();
      *(_QWORD *)(v15 + 16) = 0;
      v16 = (void **)(v15 + 16);
      v94 = sub_24212C560;
      v95 = v15;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v17 = sub_242131330((uint64_t)&unk_25132F830);
      sub_242131A18();
      sub_24211B22C();
      v18 = sub_2421320C8(sel_synchronousRemoteObjectProxyWithErrorHandler_, (uint64_t)&v94);
      sub_242131D5C();
      v19 = sub_242079F48();
      *(_QWORD *)(v19 + 16) = 0;
      v20 = sub_242079F48();
      sub_242131B14(v20);
      v21 = sub_24207F538();
      *(_QWORD *)(v21 + 16) = v17;
      *(_QWORD *)(v21 + 24) = v19;
      v22 = sub_24207F538();
      *(_QWORD *)(v22 + 16) = sub_24213109C;
      *(_QWORD *)(v22 + 24) = v21;
      v23 = qword_25439A030;
      sub_242131BD8();
      sub_2421313D8((uint64_t)&v97);
      sub_24213217C();
      sub_242131A18();
      if (v23 != -1)
        swift_once();
      v24 = sub_24213210C();
      v25 = (void *)sub_24207BF18(v24, (uint64_t)qword_2543A65B0);
      v2 = v12;
      sub_242132618();
      v26 = sub_24207F668();
      if (sub_24210CC90(v26))
      {
        sub_24210CA3C();
        v27 = (_QWORD *)sub_24210CA3C();
        sub_242131D1C(v27);
        sub_242131CE8();
        sub_242131940(v28, v29, v30, "sideloading resource bundle container: %@");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }

      v94 = sub_2421310CC;
      v95 = v22;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132F8A8);
      sub_242131B20();
      swift_retain();
      v31 = sub_24211B22C();
      sub_2421321C4(v31, sel_sideloadWithResourceBundle_with_);
      sub_242131D5C();
      sub_242097B70();
      sub_242131BD0();
      sub_242131658();
      sub_24211B120();
      v32 = *v16;
      if (!*v16)
        break;
      v33 = v97;
      sub_24210CD34();
      sub_24210CD34();
      LOBYTE(v33) = sub_242131A94(v32, v33);
      sub_24210CAEC();
      if ((v33 & 1) == 0)
      {
        if (qword_25439A0E0 != -1)
          goto LABEL_42;
        goto LABEL_27;
      }
      LOBYTE(v2) = v18;
      if (qword_25439A0E0 != -1)
        swift_once();
      sub_24207BF18(v88, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_242131F04();
      sub_24210CD34();
      sub_24210CD34();
      sub_242132618();
      v34 = sub_242131ACC();
      if (sub_242131ADC(v34))
      {
        v35 = sub_2421310D0();
        v36 = (_QWORD *)sub_24210CA3C();
        v37 = sub_2421310D0();
        sub_24213203C(v37);
        sub_24211B120();
        v38 = sub_24213130C();
        v40 = sub_242131120(v38, v39, &v93);
        sub_242132004(v40);
        *(_WORD *)(v35 + 12) = 2112;
        sub_24210CD34();
        v41 = sub_242131B38();
        *(_QWORD *)(v35 + 14) = v41;
        *v36 = v41;
        sub_24210CAEC();
        sub_24210CAEC();
        sub_242132248();
        sub_24213144C(&dword_242074000, v84, (os_log_type_t)v16, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v35);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_24210CAEC();
      sub_242131F78();
      sub_24210CAEC();
      sub_24210CAEC();

      sub_242131110((uint64_t)v84, *(uint64_t (**)(uint64_t, _QWORD))(v21 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_2421310E4();
      sub_242131F78();
      v14 = v97 + 1;
      v12 = v86;
      if (v97 == -1)
        goto LABEL_41;
    }
    sub_24211B120();
    if (*(_QWORD *)(v19 + 16))
    {
      sub_24210CD34();
      if (qword_25439A0E0 != -1)
        swift_once();
      v43 = sub_24207BF18(v88, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421319FC();
      sub_24210CD34();
      sub_24210CD34();
      sub_242131F44();
      v44 = sub_242131ACC();
      if (sub_242131954(v44))
      {
        v45 = sub_2421310D0();
        v82 = (_QWORD *)sub_24210CA3C();
        v46 = sub_2421310D0();
        sub_242131DF0(v46);
        sub_24211B120();
        v47 = sub_2420C0B64();
        v90 = sub_242131120(v47, v48, &v89);
        sub_242131214();
        sub_242097578();
        *(_WORD *)(v45 + 12) = 2112;
        sub_24210CD34();
        v49 = sub_242131B38();
        v90 = v49;
        sub_242131214();
        *v82 = v49;
        sub_24210CAEC();
        sub_24210CAEC();
        *(_WORD *)(v45 + 22) = 2048;
        sub_242131504((uint64_t)&v92);
        sub_24213144C(&dword_242074000, v43, (os_log_type_t)v2, "%s sync: method error during call: %@, num connection attempts:%lu", (uint8_t *)v45);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      goto LABEL_29;
    }
    sub_24211B120();
    if (*(_QWORD *)(v87 + 16))
    {
      v58 = *(id *)(v87 + 16);
      sub_2421322B0();
      if (!v59)
        swift_once();
      v60 = sub_24207BF18(v88, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_242131B04(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 16));
      sub_242131F44();
      v61 = sub_242131FE4();
      if (sub_24213173C(v61))
      {
        v62 = (uint8_t *)sub_24210CA3C();
        v63 = sub_2421310D0();
        sub_242131CDC(v63);
        sub_242132130(4.8151e-34);
        sub_24211B120();
        v64 = sub_2420C13B0();
        v66 = sub_242131560(v64, v65, &v90);
        sub_242131C9C(v66);
        sub_2420A1B60();
        sub_2421314A0();
        sub_24211AD3C(&dword_242074000, v60, (os_log_type_t)v88, "%s sync: method returned non-nil result, num connection attempts:%lu", v62);
        sub_24210CC58();
        sub_24210C9C4();
      }

      sub_242131658();
      sub_2421313AC((uint64_t)&v94);
      sub_242131110(v80, *(uint64_t (**)(uint64_t, _QWORD))(v85 + 8));

      sub_2421310E4();
      sub_2421310E4();
      sub_2421310E4();
      sub_242131658();
      goto LABEL_4;
    }
    if (qword_25439A0E0 != -1)
      swift_once();
    v67 = (void *)sub_24207BF18(v88, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 16));
    sub_242131934();
    v68 = sub_2421314CC();
    if (sub_2421314DC(v68))
    {
      v69 = sub_24210CA3C();
      v70 = sub_2421310D0();
      sub_242131DCC(v70);
      sub_2421316FC(4.8151e-34);
      sub_24211B120();
      v71 = sub_2420C0B64();
      sub_242131120(v71, v72, &v90);
      sub_242131214();
      sub_242097578();
      *(_WORD *)(v69 + 12) = 2048;
      sub_2421315BC();
      sub_2421313E4(&dword_242074000, v73, v74, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_24210CC58();
      sub_24210C9C4();
    }

    v75 = sub_242132148();
    sub_242131110(v75, v76);
    sub_24207F02C();
    v77 = sub_2420970E4();
    sub_242131468(v77, v78);
    sub_2421313AC((uint64_t)v96);
    sub_2421310E4();
    sub_242131424();
    sub_2421310E4();
    sub_2421310E4();
    v9 = &v94;
    goto LABEL_3;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  swift_once();
LABEL_27:
  v43 = sub_24207BF18(v88, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421319FC();
  sub_24210CD34();
  sub_24210CD34();
  sub_242131F44();
  v50 = sub_242131ACC();
  if (sub_242131954(v50))
  {
    v51 = sub_2421310D0();
    v83 = (_QWORD *)sub_24210CA3C();
    v52 = sub_2421310D0();
    sub_242131EA0(v52);
    sub_24211B120();
    v53 = sub_2420C0B64();
    sub_242131120(v53, v54, &v91);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v51 + 12) = 2112;
    sub_24210CD34();
    v55 = sub_242131B38();
    sub_242131214();
    *v83 = v55;
    sub_24210CAEC();
    sub_24210CAEC();
    *(_WORD *)(v51 + 22) = 2048;
    v89 = v81;
    sub_2421315BC();
    sub_24213144C(&dword_242074000, v43, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu", (uint8_t *)v51);
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
LABEL_29:
  sub_24210CAEC();
  sub_24210CAEC();

  v56 = sub_2421322F8();
  sub_242131110(v56, v57);
  sub_242097610();
  sub_2421313AC((uint64_t)v96);
  sub_242097A18();
  sub_242131424();
  sub_2421310E4();
  sub_2421310E4();
  sub_2421313AC((uint64_t)&v94);
LABEL_4:
  sub_242131158();
}

void sub_242123370()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132F790);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "remove sideload resource: %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132F808);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_removeSideloadWithResource_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_242123EA8()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132F6F0);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "remove sideload resource bundle: %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132F768);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_removeSideloadWithResourceBundle_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_2421249E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  __n128 v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  _WORD *v45;
  void *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  _BYTE *v64;
  NSObject *v65;
  unint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, _QWORD);
  void *v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, _QWORD);
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108[3];
  uint64_t v109;
  uint64_t v110[9];
  uint64_t v111[4];
  void *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;

  sub_242131478();
  a19 = v24;
  a20 = v25;
  v107 = sub_2421316F0();
  sub_2421315C4(*(_QWORD *)(v107 - 8));
  MEMORY[0x24BDAC7A8](v26);
  sub_242131B40();
  MEMORY[0x24BDAC7A8](v27);
  sub_242131B5C();
  MEMORY[0x24BDAC7A8](v28);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v29);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v30);
  sub_242131974();
  sub_242131B9C();
  v31 = v21;
  if (v21)
    goto LABEL_2;
  sub_2421318E4();
  if (!v32)
  {
    sub_24207F02C();
    v63 = sub_2420970E4();
    sub_242131588(v63, v64);
LABEL_2:
    sub_242131C8C();
    goto LABEL_3;
  }
  v33 = sub_242131A2C(v32);
  sub_242131C8C();
  v114 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v35)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once();
LABEL_28:
    v75 = sub_24207BF18(v107, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v105, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_242131118();
    sub_242131118();
    sub_242131720();
    v76 = sub_2421314CC();
    if (sub_242131CC8(v75))
    {
      v77 = sub_2421310D0();
      v78 = (_QWORD *)sub_24210CA3C();
      v79 = sub_2421310D0();
      sub_24213199C(v79);
      sub_24211B120();
      v80 = sub_242131728();
      sub_242131B70(v80, v81, v110);
      sub_24213183C();
      sub_242079EE0();
      *(_WORD *)(v77 + 12) = 2112;
      sub_242131118();
      v108[0] = sub_242131784();
      sub_24213183C();
      *v78 = v108[0];
      sub_2421310DC();
      sub_2421310DC();
      sub_2421315D4();
      sub_242131324(&dword_242074000, v75, v76, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_2420797C0(&qword_254399B50);
      sub_24210CC58();
      sub_24210C9C4();
    }
    sub_2421310DC();
    sub_2421310DC();

    v82 = sub_242132158();
    sub_242131110(v82, v83);
    sub_24213185C();
    sub_2420AA15C();
    sub_242131424();
    sub_242097A18();
    sub_242131ED4();
  }
  else
  {
    v34.n128_u64[0] = 136315650;
    sub_242131F4C(v34);
    sub_242131C04();
    while (1)
    {
      v114 = v36;
      v37 = sub_242079F48();
      v112 = sub_24212C560;
      v113 = sub_242131888(v37);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v38 = sub_242131330((uint64_t)&unk_25132F4C0);
      sub_2421313D8((uint64_t)&v114);
      sub_24211B22C();
      sub_242131B94(v33, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_242131B8C();
      v39 = sub_242079F48();
      sub_242131B14(v39);
      v40 = sub_242079F48();
      sub_24213228C(v40);
      v41 = sub_24207F538();
      sub_2421322BC(v41);
      v22 = sub_24207F538();
      *(_QWORD *)(v22 + 16) = sub_24213109C;
      *(_QWORD *)(v22 + 24) = v38;
      v42 = qword_25439A030;
      sub_242131BD8();
      sub_24213218C();
      sub_2421313D8((uint64_t)&v115);
      sub_24207F7EC();
      if (v42 != -1)
        swift_once();
      v43 = sub_24213210C();
      sub_24207F618(v43, (uint64_t)qword_2543A65B0);
      v44 = sub_24207F668();
      if (sub_24213173C(v44))
      {
        v45 = (_WORD *)sub_24210CA3C();
        sub_242132278(v45);
        sub_242131EE8();
        sub_242131F38(v46, v47, v48, "calling isGenerativeExperiencesEssentialResourcesReady()");
        sub_24210C9C4();
      }

      v112 = sub_2421310CC;
      v113 = v22;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132F538);
      sub_242131B20();
      sub_242131A18();
      v49 = sub_24211B22C();
      sub_242131F20(v49, sel_isGenerativeExperiencesEssentialResourcesReadyWith_);
      sub_242131D5C();
      sub_2420AA15C();
      sub_242097B70();
      sub_242131658();
      sub_24211B120();
      v31 = (_QWORD *)*v31;
      if (!v31)
        break;
      v50 = v114;
      sub_242131118();
      sub_242131118();
      LOBYTE(v50) = sub_242131A94(v31, v50);
      sub_2421310DC();
      sub_24213220C();
      if ((v50 & 1) == 0)
      {
        sub_242131FAC();
        if (v74)
          goto LABEL_28;
        goto LABEL_45;
      }
      if (v51 != -1)
        swift_once();
      v52 = sub_242131BAC((uint64_t)&a9);
      sub_24207BF18(v52, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v106, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131B84();
      v53 = sub_242131ACC();
      if (sub_24213173C(v53))
      {
        v54 = sub_2421310D0();
        v55 = (_QWORD *)sub_24210CA3C();
        v56 = sub_2421310D0();
        sub_2421318BC(v56);
        sub_24211B120();
        v57 = sub_24213130C();
        *(_QWORD *)(v54 + 4) = sub_242131120(v57, v58, v111);
        sub_242131964();
        *(_WORD *)(v54 + 12) = 2112;
        sub_242131118();
        v59 = sub_242131784();
        *(_QWORD *)(v54 + 14) = v59;
        *v55 = v59;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131D88();
        sub_242131EE8();
        sub_24213144C(v60, v61, v62, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v54);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_242131658();
      sub_2421310DC();
      sub_2421310DC();

      sub_242131110(v106, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_2421310E4();
      sub_2421310E4();
      swift_release();
      sub_242131658();
      sub_2421316E4();
      if (v35)
        goto LABEL_44;
    }
    sub_24211B120();
    sub_242131FD4();
    if (v38)
    {
      sub_24210CD34();
      if (qword_25439A0E0 != -1)
        swift_once();
      v65 = sub_24207BF18(v107, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_24213170C(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 16));
      v66 = v114;
      sub_24210CD34();
      sub_24210CD34();
      sub_24213194C();
      v67 = sub_242131ACC();
      if (sub_242131954(v67))
      {
        v68 = sub_2421310D0();
        v69 = (_QWORD *)sub_24210CA3C();
        v70 = sub_2421310D0();
        sub_24213190C(v70);
        sub_24211B120();
        v71 = sub_242131728();
        v109 = sub_242131B70(v71, v72, v108);
        sub_24213183C();
        sub_242079EE0();
        *(_WORD *)(v68 + 12) = 2112;
        sub_24210CD34();
        v73 = sub_242131B38();
        sub_242131898(v73);
        *v69 = v66;
        sub_24210CAEC();
        sub_24210CAEC();
        sub_242131698();
        sub_24213144C(&dword_242074000, v65, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu", (uint8_t *)v68);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_24210CAEC();
      sub_24210CAEC();

      sub_242131110(v103, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_242097610();
      sub_2421310E4();
      sub_242131424();
      sub_242131BD0();
      sub_242132184();

      goto LABEL_3;
    }
    sub_24211B120();
    v84 = *(void **)(v23 + 16);
    if (v84)
    {
      v85 = v84;
      sub_2421322B0();
      if (!v74)
        swift_once();
      v86 = sub_24207BF18(v107, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_24213170C(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 16));
      sub_24213194C();
      v87 = sub_242131FE4();
      if (sub_242131ADC(v87))
      {
        v88 = (uint8_t *)sub_24210CA3C();
        v89 = sub_2421310D0();
        sub_242131DCC(v89);
        sub_242131BEC(4.8151e-34);
        sub_24211B120();
        v90 = sub_2420C0B64();
        sub_242131120(v90, v91, &v109);
        sub_2421314D4();
        sub_242097578();
        sub_2421314A0();
        sub_24211AD3C(&dword_242074000, v86, (os_log_type_t)v23, "%s sync: method returned non-nil result, num connection attempts:%lu", v88);
        sub_24210CC58();
        sub_24210C9C4();
      }

      sub_242131658();
      sub_242131110(0, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_2421310E4();
      swift_release();
      sub_2421310E4();
      sub_242131658();
      sub_242132224();
      goto LABEL_3;
    }
    sub_2421322A4();
    if (qword_25439A0E0 != -1)
      swift_once();
    v92 = (void *)sub_24207BF18(v107, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_242131EC8();
    v93 = sub_2421314CC();
    if (sub_2421314DC(v93))
    {
      sub_24210CA3C();
      v94 = sub_2421310D0();
      sub_242131DCC(v94);
      sub_2421316FC(4.8151e-34);
      sub_24211B120();
      v95 = sub_2420C0B64();
      sub_242131120(v95, v96, &v109);
      sub_242131214();
      sub_242131964();
      sub_24213175C();
      sub_2421313E4(&dword_242074000, v97, v98, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_24210CC58();
      sub_24210C9C4();
    }

    v99 = sub_242132230();
    sub_242131110(v99, v100);
    sub_242131B7C();
    v101 = sub_2420970E4();
    sub_242131454(v101, v102);
    sub_2420AA15C();
    sub_242131318();
    sub_242131BD0();
  }
  swift_release();

LABEL_3:
  sub_242131BC4();
  sub_242131158();
}

void sub_242125578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  __n128 v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  _WORD *v45;
  void *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  _BYTE *v64;
  NSObject *v65;
  unint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, _QWORD);
  void *v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, _QWORD);
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108[3];
  uint64_t v109;
  uint64_t v110[9];
  uint64_t v111[4];
  void *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;

  sub_242131478();
  a19 = v24;
  a20 = v25;
  v107 = sub_2421316F0();
  sub_2421315C4(*(_QWORD *)(v107 - 8));
  MEMORY[0x24BDAC7A8](v26);
  sub_242131B40();
  MEMORY[0x24BDAC7A8](v27);
  sub_242131B5C();
  MEMORY[0x24BDAC7A8](v28);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v29);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v30);
  sub_242131974();
  sub_242131B9C();
  v31 = v21;
  if (v21)
    goto LABEL_2;
  sub_2421318E4();
  if (!v32)
  {
    sub_24207F02C();
    v63 = sub_2420970E4();
    sub_242131588(v63, v64);
LABEL_2:
    sub_242131C8C();
    goto LABEL_3;
  }
  v33 = sub_242131A2C(v32);
  sub_242131C8C();
  v114 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v35)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once();
LABEL_28:
    v75 = sub_24207BF18(v107, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v105, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_242131118();
    sub_242131118();
    sub_242131720();
    v76 = sub_2421314CC();
    if (sub_242131CC8(v75))
    {
      v77 = sub_2421310D0();
      v78 = (_QWORD *)sub_24210CA3C();
      v79 = sub_2421310D0();
      sub_24213199C(v79);
      sub_24211B120();
      v80 = sub_242131728();
      sub_242131B70(v80, v81, v110);
      sub_24213183C();
      sub_242079EE0();
      *(_WORD *)(v77 + 12) = 2112;
      sub_242131118();
      v108[0] = sub_242131784();
      sub_24213183C();
      *v78 = v108[0];
      sub_2421310DC();
      sub_2421310DC();
      sub_2421315D4();
      sub_242131324(&dword_242074000, v75, v76, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_2420797C0(&qword_254399B50);
      sub_24210CC58();
      sub_24210C9C4();
    }
    sub_2421310DC();
    sub_2421310DC();

    v82 = sub_242132158();
    sub_242131110(v82, v83);
    sub_24213185C();
    sub_2420AA15C();
    sub_242131424();
    sub_242097A18();
    sub_242131ED4();
  }
  else
  {
    v34.n128_u64[0] = 136315650;
    sub_242131F4C(v34);
    sub_242131C04();
    while (1)
    {
      v114 = v36;
      v37 = sub_242079F48();
      v112 = sub_24212C560;
      v113 = sub_242131888(v37);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v38 = sub_242131330((uint64_t)&unk_2513268E8);
      sub_2421313D8((uint64_t)&v114);
      sub_24211B22C();
      sub_242131B94(v33, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_242131B8C();
      v39 = sub_242079F48();
      sub_242131B14(v39);
      v40 = sub_242079F48();
      sub_24213228C(v40);
      v41 = sub_24207F538();
      sub_2421322BC(v41);
      v22 = sub_24207F538();
      *(_QWORD *)(v22 + 16) = sub_24213109C;
      *(_QWORD *)(v22 + 24) = v38;
      v42 = qword_25439A030;
      sub_242131BD8();
      sub_24213218C();
      sub_2421313D8((uint64_t)&v115);
      sub_24207F7EC();
      if (v42 != -1)
        swift_once();
      v43 = sub_24213210C();
      sub_24207F618(v43, (uint64_t)qword_2543A65B0);
      v44 = sub_24207F668();
      if (sub_24213173C(v44))
      {
        v45 = (_WORD *)sub_24210CA3C();
        sub_242132278(v45);
        sub_242131EE8();
        sub_242131F38(v46, v47, v48, "calling hasEnoughStorageForGenerativeExperiencesEssentialResources()");
        sub_24210C9C4();
      }

      v112 = sub_2421310CC;
      v113 = v22;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132F380);
      sub_242131B20();
      sub_242131A18();
      v49 = sub_24211B22C();
      sub_242131F20(v49, sel_hasEnoughStorageForGenerativeExperiencesEssentialResourcesWith_);
      sub_242131D5C();
      sub_2420AA15C();
      sub_242097B70();
      sub_242131658();
      sub_24211B120();
      v31 = (_QWORD *)*v31;
      if (!v31)
        break;
      v50 = v114;
      sub_242131118();
      sub_242131118();
      LOBYTE(v50) = sub_242131A94(v31, v50);
      sub_2421310DC();
      sub_24213220C();
      if ((v50 & 1) == 0)
      {
        sub_242131FAC();
        if (v74)
          goto LABEL_28;
        goto LABEL_45;
      }
      if (v51 != -1)
        swift_once();
      v52 = sub_242131BAC((uint64_t)&a9);
      sub_24207BF18(v52, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v106, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131B84();
      v53 = sub_242131ACC();
      if (sub_24213173C(v53))
      {
        v54 = sub_2421310D0();
        v55 = (_QWORD *)sub_24210CA3C();
        v56 = sub_2421310D0();
        sub_2421318BC(v56);
        sub_24211B120();
        v57 = sub_24213130C();
        *(_QWORD *)(v54 + 4) = sub_242131120(v57, v58, v111);
        sub_242131964();
        *(_WORD *)(v54 + 12) = 2112;
        sub_242131118();
        v59 = sub_242131784();
        *(_QWORD *)(v54 + 14) = v59;
        *v55 = v59;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131D88();
        sub_242131EE8();
        sub_24213144C(v60, v61, v62, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v54);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_242131658();
      sub_2421310DC();
      sub_2421310DC();

      sub_242131110(v106, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_2421310E4();
      sub_2421310E4();
      swift_release();
      sub_242131658();
      sub_2421316E4();
      if (v35)
        goto LABEL_44;
    }
    sub_24211B120();
    sub_242131FD4();
    if (v38)
    {
      sub_24210CD34();
      if (qword_25439A0E0 != -1)
        swift_once();
      v65 = sub_24207BF18(v107, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_24213170C(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 16));
      v66 = v114;
      sub_24210CD34();
      sub_24210CD34();
      sub_24213194C();
      v67 = sub_242131ACC();
      if (sub_242131954(v67))
      {
        v68 = sub_2421310D0();
        v69 = (_QWORD *)sub_24210CA3C();
        v70 = sub_2421310D0();
        sub_24213190C(v70);
        sub_24211B120();
        v71 = sub_242131728();
        v109 = sub_242131B70(v71, v72, v108);
        sub_24213183C();
        sub_242079EE0();
        *(_WORD *)(v68 + 12) = 2112;
        sub_24210CD34();
        v73 = sub_242131B38();
        sub_242131898(v73);
        *v69 = v66;
        sub_24210CAEC();
        sub_24210CAEC();
        sub_242131698();
        sub_24213144C(&dword_242074000, v65, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu", (uint8_t *)v68);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_24210CAEC();
      sub_24210CAEC();

      sub_242131110(v103, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_242097610();
      sub_2421310E4();
      sub_242131424();
      sub_242131BD0();
      sub_242132184();

      goto LABEL_3;
    }
    sub_24211B120();
    v84 = *(void **)(v23 + 16);
    if (v84)
    {
      v85 = v84;
      sub_2421322B0();
      if (!v74)
        swift_once();
      v86 = sub_24207BF18(v107, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_24213170C(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 16));
      sub_24213194C();
      v87 = sub_242131FE4();
      if (sub_242131ADC(v87))
      {
        v88 = (uint8_t *)sub_24210CA3C();
        v89 = sub_2421310D0();
        sub_242131DCC(v89);
        sub_242131BEC(4.8151e-34);
        sub_24211B120();
        v90 = sub_2420C0B64();
        sub_242131120(v90, v91, &v109);
        sub_2421314D4();
        sub_242097578();
        sub_2421314A0();
        sub_24211AD3C(&dword_242074000, v86, (os_log_type_t)v23, "%s sync: method returned non-nil result, num connection attempts:%lu", v88);
        sub_24210CC58();
        sub_24210C9C4();
      }

      sub_242131658();
      sub_242131110(0, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_2421310E4();
      swift_release();
      sub_2421310E4();
      sub_242131658();
      sub_242132224();
      goto LABEL_3;
    }
    sub_2421322A4();
    if (qword_25439A0E0 != -1)
      swift_once();
    v92 = (void *)sub_24207BF18(v107, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_242131EC8();
    v93 = sub_2421314CC();
    if (sub_2421314DC(v93))
    {
      sub_24210CA3C();
      v94 = sub_2421310D0();
      sub_242131DCC(v94);
      sub_2421316FC(4.8151e-34);
      sub_24211B120();
      v95 = sub_2420C0B64();
      sub_242131120(v95, v96, &v109);
      sub_242131214();
      sub_242131964();
      sub_24213175C();
      sub_2421313E4(&dword_242074000, v97, v98, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_24210CC58();
      sub_24210C9C4();
    }

    v99 = sub_242132230();
    sub_242131110(v99, v100);
    sub_242131B7C();
    v101 = sub_2420970E4();
    sub_242131454(v101, v102);
    sub_2420AA15C();
    sub_242131318();
    sub_242131BD0();
  }
  swift_release();

LABEL_3:
  sub_242131BC4();
  sub_242131158();
}

void sub_242126110()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132FBC8);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "requesting resource container for %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132FC68);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_resourceContainerWithIdentifier_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_242126C48()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __n128 v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _BYTE *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83[9];
  uint64_t v84[4];
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_242131478();
  v7 = sub_24213138C(v4, v5, v6);
  v8 = sub_24213142C(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_242131518();
  MEMORY[0x24BDAC7A8](v9);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v10);
  sub_24211B270();
  MEMORY[0x24BDAC7A8](v11);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24213136C();
  sub_242131A20();
  v13 = v1;
  if (v1)
    goto LABEL_2;
  sub_2421311A4();
  if (!v14)
  {
    sub_24207F02C();
    v50 = sub_2420970E4();
    sub_242131588(v50, v51);
LABEL_2:
    sub_2421319C0();
    sub_242131104();
    goto LABEL_3;
  }
  v15 = sub_242131644(v14);
  sub_24213180C((uint64_t)v15);
  v89 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v17)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    v16.n128_u64[0] = 136315138;
    sub_242131678(v16);
    v18.n128_u64[0] = 136315650;
    sub_242131DE4(v18);
    while (1)
    {
      v89 = v19;
      v20 = sub_242079F48();
      v85 = sub_24212C560;
      v86 = sub_242131888(v20);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v21 = sub_242131330((uint64_t)&unk_25132FB00);
      sub_2421313D8((uint64_t)&v87);
      v22 = sub_24211B22C();
      v23 = sub_2421317FC(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_2421319E4();
      v24 = sub_242079F48();
      sub_242131B14(v24);
      v25 = sub_242079F48();
      sub_242131DC0(v25);
      v26 = sub_24207F538();
      sub_242131DD8(v26);
      v2 = sub_24207F538();
      *(_QWORD *)(v2 + 16) = sub_24213109C;
      *(_QWORD *)(v2 + 24) = v21;
      v27 = qword_25439A030;
      sub_2421317CC();
      sub_242131A18();
      sub_2421313D8((uint64_t)&v88);
      sub_24207F7EC();
      if (v27 != -1)
        swift_once();
      v28 = sub_242131BE0();
      sub_242131534(v28, (uint64_t)qword_2543A65B0);
      sub_242132618();
      v29 = sub_24207F668();
      if (sub_24210CC90(v29))
      {
        sub_24210CA3C();
        v30 = sub_2421310D0();
        sub_24213134C(v30);
        v31 = sub_242131408();
        sub_242131630(v31);
        sub_242131CE8();
        sub_242131940(v32, v33, v34, "requesting resource for %s");
        sub_24213161C();
        sub_24210C9C4();
      }

      sub_24213182C();
      sub_242131868();
      sub_2421317BC();
      v0 = (void *)sub_24213181C();
      v85 = sub_2421310CC;
      v86 = v2;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132FBA0);
      sub_24213178C();
      v35 = sub_24211B22C();
      sub_24213179C(v35, sel_resourceBundleContainerWithIdentifier_with_);
      sub_242131D44();
      sub_2420AA15C();
      sub_2420C0F44();
      sub_242131C54();

      sub_24211B120();
      v13 = (_QWORD *)*v13;
      if (!v13)
      {
        sub_24211B120();
        sub_242131A74();
        if (&unk_25132F048)
        {
          sub_242131580();
          if (qword_25439A0E0 != -1)
            swift_once();
          v52 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131580();
          sub_242131580();
          sub_242131720();
          v53 = sub_2421314CC();
          if (sub_24213174C(v53))
          {
            v54 = sub_2421310D0();
            v55 = (_QWORD *)sub_24210CA3C();
            v56 = sub_2421310D0();
            sub_2421311D4(v56);
            sub_24211B120();
            v57 = sub_24213130C();
            v82 = sub_242131120(v57, v58, v81);
            sub_242131214();
            sub_242097578();
            *(_WORD *)(v54 + 12) = 2112;
            sub_242131580();
            v59 = sub_242131D4C();
            v82 = v59;
            sub_242131268();
            *v55 = v59;
            sub_242131598();
            sub_242131598();
            sub_242131220();
            sub_242131324(&dword_242074000, v52, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_242131598();
          sub_242131598();

          sub_2421310EC(v76, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
          sub_2421317EC();
          sub_242131104();
          sub_2420AA15C();
          sub_242131204();
          sub_242131994();
          sub_2421310E4();
          sub_242131248();
        }
        else
        {
          sub_24211B120();
          v69 = &unk_24217C14C;
          sub_242131DB4();
          if (!v37)
            swift_once();
          v70 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
          sub_24211B120();
          sub_2421310F8(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
          sub_242131934();
          v71 = sub_242131C94();
          if (sub_242131254(v71))
          {
            sub_24210CA3C();
            v72 = sub_2421310D0();
            sub_242131CDC(v72);
            sub_242131A84(4.8151e-34);
            sub_24211B120();
            v73 = sub_2420C13B0();
            v75 = sub_242131560(v73, v74, &v82);
            sub_24213127C(v75);
            sub_2420A1B60();
            sub_2421312A0();
            sub_242131494(&dword_242074000, v70, (os_log_type_t)v2, "%s sync: method returned non-nil result, num connection attempts:%lu");
            sub_24210CC58();
            sub_24210C9C4();
          }

          sub_2421313F8();
          sub_242131248();
          sub_2421310EC(v77, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 8));
          sub_242131104();
          sub_2421310E4();
          swift_release();
          sub_2421310E4();
          sub_242131690();
          sub_242131D64();
        }
        goto LABEL_3;
      }
      sub_242131118();
      sub_242131118();
      v36 = sub_242131608();
      sub_2421310DC();
      sub_242131ABC();
      if (!v36)
        break;
      if (!v37)
        swift_once();
      v38 = sub_2421319C8();
      v39 = (void *)sub_24207BF18(v38, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131720();
      v40 = sub_2421314CC();
      if (sub_2421317AC(v40))
      {
        v41 = sub_2421310D0();
        v42 = (_QWORD *)sub_24210CA3C();
        v43 = sub_2421310D0();
        sub_242131174(v43);
        sub_24211B120();
        v44 = sub_2420C13B0();
        *(_QWORD *)(v41 + 4) = sub_242131560(v44, v45, v84);
        sub_2420A1B60();
        *(_WORD *)(v41 + 12) = 2112;
        sub_242131118();
        v46 = sub_242131784();
        *(_QWORD *)(v41 + 14) = v46;
        *v42 = v46;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131848();
        sub_242131E4C();
        sub_242131324(v47, v48, v49, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_2421317DC();
      sub_2421310DC();
      sub_2421310DC();

      sub_2421310EC(v79, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 8));
      sub_2421310E4();
      sub_2421310E4();
      sub_242097B70();
      swift_unknownObjectRelease();
      sub_2421316E4();
      if (v17)
        goto LABEL_37;
    }
    v3 = v78;
    if (v37)
      goto LABEL_28;
  }
  swift_once();
LABEL_28:
  v60 = sub_24207BF18(v80, (uint64_t)qword_25439A110);
  sub_24211B120();
  sub_2421310F8(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_242131118();
  sub_242131118();
  sub_242131B84();
  v61 = sub_2421314CC();
  if (sub_242131254(v61))
  {
    v62 = sub_2421310D0();
    v63 = (_QWORD *)sub_24210CA3C();
    v64 = sub_2421310D0();
    sub_2421313B4(v64);
    sub_24211B120();
    v65 = sub_24213130C();
    sub_242131120(v65, v66, v83);
    sub_242131214();
    sub_242097578();
    *(_WORD *)(v62 + 12) = 2112;
    sub_242131118();
    v81[0] = sub_242131784();
    sub_242131214();
    *v63 = v81[0];
    sub_2421310DC();
    sub_2421310DC();
    sub_2421312E8();
    sub_242131324(&dword_242074000, v60, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_2420797C0(&qword_254399B50);
    sub_24210CC58();
    sub_24210C9C4();
  }
  sub_2421310DC();
  sub_2421310DC();

  v67 = sub_242131D70();
  sub_2421310EC(v67, v68);
  sub_2421314EC();
  sub_242131104();
  sub_2420AA15C();
  sub_242131204();
  sub_242097A18();
  swift_release();
  sub_242131248();
LABEL_3:
  sub_242131AAC();
  sub_242131158();
}

void sub_242127780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  __n128 v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  _WORD *v45;
  void *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  _BYTE *v64;
  NSObject *v65;
  unint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, _QWORD);
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, _QWORD);
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[3];
  uint64_t v108;
  uint64_t v109[9];
  uint64_t v110[4];
  void *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;

  sub_242131478();
  a19 = v24;
  a20 = v25;
  v106 = sub_2421316F0();
  sub_2421315C4(*(_QWORD *)(v106 - 8));
  MEMORY[0x24BDAC7A8](v26);
  sub_242131B40();
  MEMORY[0x24BDAC7A8](v27);
  sub_242131B5C();
  MEMORY[0x24BDAC7A8](v28);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v29);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v30);
  sub_242131974();
  sub_242131B9C();
  v31 = v21;
  if (v21)
    goto LABEL_2;
  sub_2421318E4();
  if (!v32)
  {
    sub_24207F02C();
    v63 = sub_2420970E4();
    sub_242131588(v63, v64);
LABEL_2:
    sub_242131C8C();
    goto LABEL_3;
  }
  v33 = sub_242131A2C(v32);
  sub_242131C8C();
  v113 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v35)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once();
LABEL_28:
    v75 = sub_24207BF18(v106, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_242131118();
    sub_242131118();
    sub_242131720();
    v76 = sub_2421314CC();
    if (sub_242131CC8(v75))
    {
      v77 = sub_2421310D0();
      v78 = (_QWORD *)sub_24210CA3C();
      v79 = sub_2421310D0();
      sub_24213199C(v79);
      sub_24211B120();
      v80 = sub_242131728();
      sub_242131B70(v80, v81, v109);
      sub_24213183C();
      sub_242079EE0();
      *(_WORD *)(v77 + 12) = 2112;
      sub_242131118();
      v107[0] = sub_242131784();
      sub_24213183C();
      *v78 = v107[0];
      sub_2421310DC();
      sub_2421310DC();
      sub_2421315D4();
      sub_242131324(&dword_242074000, v75, v76, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_2420797C0(&qword_254399B50);
      sub_24210CC58();
      sub_24210C9C4();
    }
    sub_2421310DC();
    sub_2421310DC();

    v82 = sub_242132158();
    sub_242131110(v82, v83);
    sub_24213185C();
    sub_2420AA15C();
    sub_242131424();
    sub_242097A18();
    sub_242131ED4();
  }
  else
  {
    v34.n128_u64[0] = 136315650;
    sub_242131F4C(v34);
    sub_242131C04();
    while (1)
    {
      v113 = v36;
      v37 = sub_242079F48();
      v111 = sub_24212C560;
      v112 = sub_242131888(v37);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v38 = sub_242131330((uint64_t)&unk_25132FA38);
      sub_2421313D8((uint64_t)&v113);
      sub_24211B22C();
      sub_242131B94(v33, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_242131B8C();
      v39 = sub_242079F48();
      sub_242131B14(v39);
      v40 = sub_242079F48();
      sub_24213228C(v40);
      v41 = sub_24207F538();
      sub_2421322BC(v41);
      v22 = sub_24207F538();
      *(_QWORD *)(v22 + 16) = sub_242130E50;
      *(_QWORD *)(v22 + 24) = v38;
      v42 = qword_25439A030;
      sub_242131BD8();
      sub_24213218C();
      sub_2421313D8((uint64_t)&v114);
      sub_24207F7EC();
      if (v42 != -1)
        swift_once();
      v43 = sub_24213210C();
      sub_24207F618(v43, (uint64_t)qword_2543A65B0);
      v44 = sub_24207F668();
      if (sub_24213173C(v44))
      {
        v45 = (_WORD *)sub_24210CA3C();
        sub_242132278(v45);
        sub_242131EE8();
        sub_242131F38(v46, v47, v48, "requesting resources");
        sub_24210C9C4();
      }

      v111 = sub_2421310CC;
      v112 = v22;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132FAD8);
      sub_242131B20();
      sub_242131A18();
      v49 = sub_24211B22C();
      sub_242131F20(v49, sel_resourceContainersWith_);
      sub_242131D5C();
      sub_2420AA15C();
      sub_242097B70();
      sub_242131658();
      sub_24211B120();
      v31 = (_QWORD *)*v31;
      if (!v31)
        break;
      v50 = v113;
      sub_242131118();
      sub_242131118();
      LOBYTE(v50) = sub_242131A94(v31, v50);
      sub_2421310DC();
      sub_24213220C();
      if ((v50 & 1) == 0)
      {
        sub_242131FAC();
        if (v74)
          goto LABEL_28;
        goto LABEL_45;
      }
      if (v51 != -1)
        swift_once();
      v52 = sub_242131BAC((uint64_t)&a9);
      sub_24207BF18(v52, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v105, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131B84();
      v53 = sub_242131ACC();
      if (sub_24213173C(v53))
      {
        v54 = sub_2421310D0();
        v55 = (_QWORD *)sub_24210CA3C();
        v56 = sub_2421310D0();
        sub_2421318BC(v56);
        sub_24211B120();
        v57 = sub_24213130C();
        *(_QWORD *)(v54 + 4) = sub_242131120(v57, v58, v110);
        sub_242131964();
        *(_WORD *)(v54 + 12) = 2112;
        sub_242131118();
        v59 = sub_242131784();
        *(_QWORD *)(v54 + 14) = v59;
        *v55 = v59;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131D88();
        sub_242131EE8();
        sub_24213144C(v60, v61, v62, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v54);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_242131658();
      sub_2421310DC();
      sub_2421310DC();

      sub_242131110(v105, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_2421310E4();
      sub_2421310E4();
      swift_release();
      sub_242131658();
      sub_2421316E4();
      if (v35)
        goto LABEL_44;
    }
    sub_24211B120();
    sub_242131FD4();
    if (v38)
    {
      sub_24210CD34();
      if (qword_25439A0E0 != -1)
        swift_once();
      v65 = sub_24207BF18(v106, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_24213170C(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 16));
      v66 = v113;
      sub_24210CD34();
      sub_24210CD34();
      sub_24213194C();
      v67 = sub_242131ACC();
      if (sub_242131954(v67))
      {
        v68 = sub_2421310D0();
        v69 = (_QWORD *)sub_24210CA3C();
        v70 = sub_2421310D0();
        sub_24213190C(v70);
        sub_24211B120();
        v71 = sub_242131728();
        v108 = sub_242131B70(v71, v72, v107);
        sub_24213183C();
        sub_242079EE0();
        *(_WORD *)(v68 + 12) = 2112;
        sub_24210CD34();
        v73 = sub_242131B38();
        sub_242131898(v73);
        *v69 = v66;
        sub_24210CAEC();
        sub_24210CAEC();
        sub_242131698();
        sub_24213144C(&dword_242074000, v65, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu", (uint8_t *)v68);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_24210CAEC();
      sub_24210CAEC();

      sub_242131110(v102, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_242097610();
      sub_2421310E4();
      sub_242131424();
      sub_242131BD0();
      sub_242132184();

      goto LABEL_3;
    }
    sub_24211B120();
    if (*(_QWORD *)(v23 + 16))
    {
      v84 = qword_25439A0E0;
      swift_bridgeObjectRetain();
      if (v84 != -1)
        swift_once();
      v85 = sub_24207BF18(v106, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_24213170C(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 16));
      sub_24213194C();
      v86 = sub_242131FE4();
      if (sub_242131ADC(v86))
      {
        v87 = (uint8_t *)sub_24210CA3C();
        v88 = sub_2421310D0();
        sub_242131DCC(v88);
        sub_242131BEC(4.8151e-34);
        sub_24211B120();
        v89 = sub_2420C0B64();
        sub_242131120(v89, v90, &v108);
        sub_2421314D4();
        sub_242097578();
        sub_2421314A0();
        sub_24211AD3C(&dword_242074000, v85, (os_log_type_t)v23, "%s sync: method returned non-nil result, num connection attempts:%lu", v87);
        sub_24210CC58();
        sub_24210C9C4();
      }

      sub_242131658();
      sub_242131110(0, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_2421310E4();
      swift_release();
      sub_2421310E4();
      sub_242131658();
      sub_242132224();
      goto LABEL_3;
    }
    sub_2421322A4();
    if (qword_25439A0E0 != -1)
      swift_once();
    v91 = (void *)sub_24207BF18(v106, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v103, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_242131EC8();
    v92 = sub_2421314CC();
    if (sub_2421314DC(v92))
    {
      sub_24210CA3C();
      v93 = sub_2421310D0();
      sub_242131DCC(v93);
      sub_2421316FC(4.8151e-34);
      sub_24211B120();
      v94 = sub_2420C0B64();
      sub_242131120(v94, v95, &v108);
      sub_242131214();
      sub_242131964();
      sub_24213175C();
      sub_2421313E4(&dword_242074000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_24210CC58();
      sub_24210C9C4();
    }

    v98 = sub_242132230();
    sub_242131110(v98, v99);
    sub_242131B7C();
    v100 = sub_2420970E4();
    sub_242131454(v100, v101);
    sub_2420AA15C();
    sub_242131318();
    sub_242131BD0();
  }
  swift_release();

LABEL_3:
  sub_242131BC4();
  sub_242131158();
}

void sub_24212831C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  __n128 v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  _WORD *v45;
  void *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  _BYTE *v64;
  NSObject *v65;
  unint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, _QWORD);
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, _QWORD);
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[3];
  uint64_t v108;
  uint64_t v109[9];
  uint64_t v110[4];
  void *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;

  sub_242131478();
  a19 = v24;
  a20 = v25;
  v106 = sub_2421316F0();
  sub_2421315C4(*(_QWORD *)(v106 - 8));
  MEMORY[0x24BDAC7A8](v26);
  sub_242131B40();
  MEMORY[0x24BDAC7A8](v27);
  sub_242131B5C();
  MEMORY[0x24BDAC7A8](v28);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v29);
  sub_2421315A0();
  MEMORY[0x24BDAC7A8](v30);
  sub_242131974();
  sub_242131B9C();
  v31 = v21;
  if (v21)
    goto LABEL_2;
  sub_2421318E4();
  if (!v32)
  {
    sub_24207F02C();
    v63 = sub_2420970E4();
    sub_242131588(v63, v64);
LABEL_2:
    sub_242131C8C();
    goto LABEL_3;
  }
  v33 = sub_242131A2C(v32);
  sub_242131C8C();
  v113 = 0;
  sub_242079EE8();
  sub_2421316E4();
  if (v35)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once();
LABEL_28:
    v75 = sub_24207BF18(v106, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_242131118();
    sub_242131118();
    sub_242131720();
    v76 = sub_2421314CC();
    if (sub_242131CC8(v75))
    {
      v77 = sub_2421310D0();
      v78 = (_QWORD *)sub_24210CA3C();
      v79 = sub_2421310D0();
      sub_24213199C(v79);
      sub_24211B120();
      v80 = sub_242131728();
      sub_242131B70(v80, v81, v109);
      sub_24213183C();
      sub_242079EE0();
      *(_WORD *)(v77 + 12) = 2112;
      sub_242131118();
      v107[0] = sub_242131784();
      sub_24213183C();
      *v78 = v107[0];
      sub_2421310DC();
      sub_2421310DC();
      sub_2421315D4();
      sub_242131324(&dword_242074000, v75, v76, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_2420797C0(&qword_254399B50);
      sub_24210CC58();
      sub_24210C9C4();
    }
    sub_2421310DC();
    sub_2421310DC();

    v82 = sub_242132158();
    sub_242131110(v82, v83);
    sub_24213185C();
    sub_2420AA15C();
    sub_242131424();
    sub_242097A18();
    sub_242131ED4();
  }
  else
  {
    v34.n128_u64[0] = 136315650;
    sub_242131F4C(v34);
    sub_242131C04();
    while (1)
    {
      v113 = v36;
      v37 = sub_242079F48();
      v111 = sub_24212C560;
      v112 = sub_242131888(v37);
      sub_2421316D8(MEMORY[0x24BDAC760]);
      v38 = sub_242131330((uint64_t)&unk_25132F970);
      sub_2421313D8((uint64_t)&v113);
      sub_24211B22C();
      sub_242131B94(v33, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_242131B8C();
      v39 = sub_242079F48();
      sub_242131B14(v39);
      v40 = sub_242079F48();
      sub_24213228C(v40);
      v41 = sub_24207F538();
      sub_2421322BC(v41);
      v22 = sub_24207F538();
      *(_QWORD *)(v22 + 16) = sub_2421310A0;
      *(_QWORD *)(v22 + 24) = v38;
      v42 = qword_25439A030;
      sub_242131BD8();
      sub_24213218C();
      sub_2421313D8((uint64_t)&v114);
      sub_24207F7EC();
      if (v42 != -1)
        swift_once();
      v43 = sub_24213210C();
      sub_24207F618(v43, (uint64_t)qword_2543A65B0);
      v44 = sub_24207F668();
      if (sub_24213173C(v44))
      {
        v45 = (_WORD *)sub_24210CA3C();
        sub_242132278(v45);
        sub_242131EE8();
        sub_242131F38(v46, v47, v48, "requesting resource bundles");
        sub_24210C9C4();
      }

      v111 = sub_2421310CC;
      v112 = v22;
      sub_2421316D8(MEMORY[0x24BDAC760]);
      sub_242131330((uint64_t)&unk_25132FA10);
      sub_242131B20();
      sub_242131A18();
      v49 = sub_24211B22C();
      sub_242131F20(v49, sel_resourceBundleContainersWith_);
      sub_242131D5C();
      sub_2420AA15C();
      sub_242097B70();
      sub_242131658();
      sub_24211B120();
      v31 = (_QWORD *)*v31;
      if (!v31)
        break;
      v50 = v113;
      sub_242131118();
      sub_242131118();
      LOBYTE(v50) = sub_242131A94(v31, v50);
      sub_2421310DC();
      sub_24213220C();
      if ((v50 & 1) == 0)
      {
        sub_242131FAC();
        if (v74)
          goto LABEL_28;
        goto LABEL_45;
      }
      if (v51 != -1)
        swift_once();
      v52 = sub_242131BAC((uint64_t)&a9);
      sub_24207BF18(v52, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_2421310F8(v105, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
      sub_242131118();
      sub_242131118();
      sub_242131B84();
      v53 = sub_242131ACC();
      if (sub_24213173C(v53))
      {
        v54 = sub_2421310D0();
        v55 = (_QWORD *)sub_24210CA3C();
        v56 = sub_2421310D0();
        sub_2421318BC(v56);
        sub_24211B120();
        v57 = sub_24213130C();
        *(_QWORD *)(v54 + 4) = sub_242131120(v57, v58, v110);
        sub_242131964();
        *(_WORD *)(v54 + 12) = 2112;
        sub_242131118();
        v59 = sub_242131784();
        *(_QWORD *)(v54 + 14) = v59;
        *v55 = v59;
        sub_2421310DC();
        sub_2421310DC();
        sub_242131D88();
        sub_242131EE8();
        sub_24213144C(v60, v61, v62, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v54);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_2421310DC();
      sub_242131658();
      sub_2421310DC();
      sub_2421310DC();

      sub_242131110(v105, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_2421310E4();
      sub_2421310E4();
      swift_release();
      sub_242131658();
      sub_2421316E4();
      if (v35)
        goto LABEL_44;
    }
    sub_24211B120();
    sub_242131FD4();
    if (v38)
    {
      sub_24210CD34();
      if (qword_25439A0E0 != -1)
        swift_once();
      v65 = sub_24207BF18(v106, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_24213170C(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 16));
      v66 = v113;
      sub_24210CD34();
      sub_24210CD34();
      sub_24213194C();
      v67 = sub_242131ACC();
      if (sub_242131954(v67))
      {
        v68 = sub_2421310D0();
        v69 = (_QWORD *)sub_24210CA3C();
        v70 = sub_2421310D0();
        sub_24213190C(v70);
        sub_24211B120();
        v71 = sub_242131728();
        v108 = sub_242131B70(v71, v72, v107);
        sub_24213183C();
        sub_242079EE0();
        *(_WORD *)(v68 + 12) = 2112;
        sub_24210CD34();
        v73 = sub_242131B38();
        sub_242131898(v73);
        *v69 = v66;
        sub_24210CAEC();
        sub_24210CAEC();
        sub_242131698();
        sub_24213144C(&dword_242074000, v65, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu", (uint8_t *)v68);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_24210CAEC();
      sub_24210CAEC();

      sub_242131110(v102, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_242097610();
      sub_2421310E4();
      sub_242131424();
      sub_242131BD0();
      sub_242132184();

      goto LABEL_3;
    }
    sub_24211B120();
    if (*(_QWORD *)(v23 + 16))
    {
      v84 = qword_25439A0E0;
      swift_bridgeObjectRetain();
      if (v84 != -1)
        swift_once();
      v85 = sub_24207BF18(v106, (uint64_t)qword_25439A110);
      sub_24211B120();
      sub_24213170C(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 16));
      sub_24213194C();
      v86 = sub_242131FE4();
      if (sub_242131ADC(v86))
      {
        v87 = (uint8_t *)sub_24210CA3C();
        v88 = sub_2421310D0();
        sub_242131DCC(v88);
        sub_242131BEC(4.8151e-34);
        sub_24211B120();
        v89 = sub_2420C0B64();
        sub_242131120(v89, v90, &v108);
        sub_2421314D4();
        sub_242097578();
        sub_2421314A0();
        sub_24211AD3C(&dword_242074000, v85, (os_log_type_t)v23, "%s sync: method returned non-nil result, num connection attempts:%lu", v87);
        sub_24210CC58();
        sub_24210C9C4();
      }

      sub_242131658();
      sub_242131110(0, *(uint64_t (**)(uint64_t, _QWORD))(v22 + 8));
      sub_2421310E4();
      swift_release();
      sub_2421310E4();
      sub_242131658();
      sub_242132224();
      goto LABEL_3;
    }
    sub_2421322A4();
    if (qword_25439A0E0 != -1)
      swift_once();
    v91 = (void *)sub_24207BF18(v106, (uint64_t)qword_25439A110);
    sub_24211B120();
    sub_2421310F8(v103, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_242131EC8();
    v92 = sub_2421314CC();
    if (sub_2421314DC(v92))
    {
      sub_24210CA3C();
      v93 = sub_2421310D0();
      sub_242131DCC(v93);
      sub_2421316FC(4.8151e-34);
      sub_24211B120();
      v94 = sub_2420C0B64();
      sub_242131120(v94, v95, &v108);
      sub_242131214();
      sub_242131964();
      sub_24213175C();
      sub_2421313E4(&dword_242074000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_24210CC58();
      sub_24210C9C4();
    }

    v98 = sub_242132230();
    sub_242131110(v98, v99);
    sub_242131B7C();
    v100 = sub_2420970E4();
    sub_242131454(v100, v101);
    sub_2420AA15C();
    sub_242131318();
    sub_242131BD0();
  }
  swift_release();

LABEL_3:
  sub_242131BC4();
  sub_242131158();
}

void XPCServiceClientConnection.call<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  NSObject *v50;
  void *v51;
  __n128 v52;
  uint64_t v53;
  char v54;
  void (*v55)(_QWORD, _QWORD, _QWORD);
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  void *v64;
  unint64_t v65;
  _BOOL8 v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(NSObject *, uint64_t);
  uint64_t v78;
  NSObject *v79;
  void (*v80)(_QWORD, _QWORD, _QWORD);
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  unint64_t v94;
  void (*v95)(_QWORD, _QWORD, _QWORD);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  uint64_t v100;
  os_log_type_t v101;
  int v102;
  uint64_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, _QWORD);
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  _BYTE *v123;
  _QWORD v124[2];
  NSObject *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  void *v140;
  NSObject *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  NSObject *v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  void (*v149)(_QWORD, _QWORD, _QWORD);
  NSObject *v150;
  _QWORD v151[5];
  void (*v152)(_QWORD, _QWORD, _QWORD);
  uint64_t v153;
  void (*v154)(_QWORD, _QWORD, _QWORD);
  void *v155;
  id (*v156)(void *);
  uint64_t v157;
  uint64_t v158;
  void (*v159)(_QWORD, _QWORD, _QWORD);

  sub_242131478();
  a19 = v24;
  a20 = v25;
  v150 = v22;
  v26 = v21;
  v28 = v27;
  v145 = v29;
  v144 = v30;
  v128 = v31;
  v32 = *v21;
  v146 = sub_242132374();
  v133 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v132 = (char *)v124 - v33;
  sub_2421315C4(*(_QWORD *)(v28 - 8));
  MEMORY[0x24BDAC7A8](v34);
  sub_24207F540();
  v131 = v36 - v35;
  v143 = sub_24207F4AC();
  sub_2421315C4(*(_QWORD *)(v143 - 8));
  MEMORY[0x24BDAC7A8](v37);
  sub_242080330();
  sub_242132194();
  MEMORY[0x24BDAC7A8](v38);
  sub_242132194();
  MEMORY[0x24BDAC7A8](v39);
  sub_242132360();
  MEMORY[0x24BDAC7A8](v40);
  sub_24213156C();
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)v124 - v42;
  v44 = v21[2];
  v151[2] = v28;
  v151[3] = v26;
  v46 = *(_QWORD *)(v32 + 80);
  v45 = *(_QWORD *)(v32 + 88);
  v48 = type metadata accessor for XPCServiceClientConnection.State(0, v46, v45, v47);
  v49 = sub_2421320F0((uint64_t)v48, &qword_2571A1500);
  v50 = v150;
  sub_24212F7A8((void (*)(uint64_t))sub_242130FC0, (uint64_t)v151, v44, (uint64_t)v48, v49);
  if (!v50)
  {
    v139 = v26;
    v127 = v43;
    v125 = v20;
    v126 = v23;
    v124[1] = 0;
    v141 = v28;
    v150 = v46;
    v142 = v45;
    v51 = v155;
    v159 = 0;
    sub_242079EE8();
    sub_2421316E4();
    v53 = v136;
    if (v54)
    {
LABEL_10:
      __break(1u);
    }
    else
    {
      v52.n128_u64[0] = 136315650;
      sub_242131F4C(v52);
      v134 = MEMORY[0x24BEE4AD8] + 8;
      v140 = v51;
      while (1)
      {
        v159 = v55;
        v45 = sub_242079F48();
        *(_QWORD *)(v45 + 16) = 0;
        v156 = sub_24212C560;
        v157 = v45;
        sub_2421316D8(MEMORY[0x24BDAC760]);
        v56 = sub_242131330((uint64_t)&unk_25132A770);
        sub_242131A18();
        sub_24211B22C();
        v57 = objc_msgSend(v51, sel_synchronousRemoteObjectProxyWithErrorHandler_, v56);
        sub_242131D5C();
        v58 = sub_242079F48();
        sub_242131B14(v58);
        v59 = swift_allocBox();
        v48 = v60;
        v61 = (uint64_t)v141;
        sub_24207E8A8(v60, 1, 1, (uint64_t)v141);
        v62 = (_QWORD *)sub_24207F538();
        v62[2] = v150;
        v62[3] = v61;
        v63 = v142;
        v62[4] = v142;
        v62[5] = v59;
        v62[6] = v56;
        swift_unknownObjectRetain();
        sub_242132284();
        sub_2421313D8((uint64_t)&a14);
        v147 = v57;
        ((void (*)(id, void (*)(uint64_t, void *), _QWORD *))v144)(v57, sub_24212C5B0, v62);
        sub_242131BD0();
        sub_24211B120();
        v64 = *(void **)(v45 + 16);
        if (!v64)
          break;
        v65 = (unint64_t)v159;
        sub_24210CD34();
        sub_24210CD34();
        v66 = sub_242131A94(v64, v65);
        sub_24210CAEC();
        if (!v66)
        {
          v88 = (uint64_t)v127;
          sub_242131AEC();
          sub_24210CD34();
          sub_24210CD34();
          sub_242131720();
          v89 = sub_242131ACC();
          LODWORD(v149) = v89;
          if (os_log_type_enabled((os_log_t)v66, v89))
          {
            v90 = sub_2421310D0();
            v138 = v45;
            v91 = v90;
            v144 = (_QWORD *)sub_24210CA3C();
            v146 = sub_2421310D0();
            v155 = (void *)v146;
            *(_DWORD *)v91 = v135;
            v92 = *(uint64_t (**)(uint64_t, uint64_t))(v63 + 24);
            v145 = v66;
            v93 = sub_2420C0CD4((uint64_t)v57, v92);
            v154 = (void (*)(_QWORD, _QWORD, _QWORD))sub_242131E1C(v93, v94);
            v137 = v59;
            sub_24213183C();
            sub_242097830();
            *(_WORD *)(v91 + 12) = 2112;
            sub_24210CD34();
            v95 = (void (*)(_QWORD, _QWORD, _QWORD))sub_242131B38();
            v154 = v95;
            sub_24213223C();
            *v144 = v95;
            sub_24210CAEC();
            sub_24210CAEC();
            *(_WORD *)(v91 + 22) = 2048;
            v154 = (void (*)(_QWORD, _QWORD, _QWORD))v65;
            sub_242132A38();
            sub_24213144C(&dword_242074000, v145, (os_log_type_t)v149, "%s sync: connection error during call: %@ reached max num connection attempts: %lu", (uint8_t *)v91);
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_24210CAEC();
          sub_24210CAEC();

          sub_242131110(v88, *(uint64_t (**)(uint64_t, _QWORD))(v53 + 8));
          sub_242097610();
          sub_242097B70();
          sub_242131318();
          goto LABEL_21;
        }
        sub_242131AEC();
        sub_24210CD34();
        sub_24210CD34();
        v48 = sub_242132618();
        v67 = sub_24213299C();
        if (os_log_type_enabled(v48, v67))
        {
          v68 = sub_2421310D0();
          v69 = sub_24210CA3C();
          v137 = v59;
          v70 = (_QWORD *)v69;
          v71 = sub_2421310D0();
          v138 = v45;
          v155 = (void *)v71;
          *(_DWORD *)v68 = v135;
          v72 = sub_2420C0CD4((uint64_t)v57, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 24));
          *(_QWORD *)(v68 + 4) = sub_242131E1C(v72, v73);
          sub_242097830();
          *(_WORD *)(v68 + 12) = 2112;
          sub_24210CD34();
          v74 = sub_242131B38();
          *(_QWORD *)(v68 + 14) = v74;
          *v70 = v74;
          sub_24210CAEC();
          sub_24210CAEC();
          *(_WORD *)(v68 + 22) = 2048;
          *(_QWORD *)(v68 + 24) = v159;
          sub_24213144C(&dword_242074000, v48, v67, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v68);
          sub_2420797C0(&qword_254399B50);
          sub_24210CC58();
          sub_24210C9C4();
        }
        sub_24210CAEC();
        sub_24213230C();
        sub_242131AD4();
        sub_24210CAEC();
        sub_24210CAEC();

        sub_242131110((uint64_t)v149, *(uint64_t (**)(uint64_t, _QWORD))(v53 + 8));
        sub_242097B70();
        sub_2421310E4();
        sub_242132034();
        sub_242131AD4();
        v51 = v140;
        sub_2421316E4();
        if (v54)
          goto LABEL_10;
      }
    }
    v75 = v148;
    sub_24211B120();
    if (*(_QWORD *)(v75 + 16))
    {
      v138 = v45;
      v76 = v142;
      v77 = *(void (**)(NSObject *, uint64_t))(v142 + 56);
      sub_24210CD34();
      v78 = (uint64_t)v150;
      v79 = v150;
      v77(v150, v76);
      v80 = v159;
      sub_24210CD34();
      sub_24210CD34();
      sub_24213194C();
      v81 = sub_242131ACC();
      if (os_log_type_enabled(v79, v81))
      {
        v82 = sub_2421310D0();
        v146 = (uint64_t)v80;
        v83 = v82;
        v144 = (_QWORD *)sub_24210CA3C();
        v149 = (void (*)(_QWORD, _QWORD, _QWORD))sub_2421310D0();
        v154 = v149;
        *(_DWORD *)v83 = v135;
        v84 = *(uint64_t (**)(uint64_t, uint64_t))(v76 + 24);
        v145 = v79;
        v85 = sub_2420C0CD4(v78, v84);
        v153 = sub_24212F968(v85, v86, (uint64_t *)&v154);
        sub_24213183C();
        sub_242097830();
        *(_WORD *)(v83 + 12) = 2112;
        sub_24210CD34();
        v87 = sub_242131B38();
        v153 = v87;
        sub_24213223C();
        *v144 = v87;
        sub_24210CAEC();
        sub_24210CAEC();
        *(_WORD *)(v83 + 22) = 2048;
        v153 = v146;
        sub_242132A38();
        sub_24213144C(&dword_242074000, v145, v81, "%s sync: method error during call: %@, num connection attempts:%lu", (uint8_t *)v83);
        sub_2420797C0(&qword_254399B50);
        sub_24210CC58();
        sub_24210C9C4();
      }
      sub_24210CAEC();
      sub_24210CAEC();

      v110 = sub_242132148();
      sub_242131110(v110, v111);
      sub_24213230C();
      sub_242097610();
      sub_2421310E4();
      sub_242131424();
LABEL_21:
      swift_release();
      sub_242132034();
      sub_2421313AC((uint64_t)&v158);
    }
    else
    {
      sub_24211B120();
      v96 = v133;
      v97 = (uint64_t)v132;
      v98 = v146;
      (*(void (**)(char *, NSObject *, uint64_t))(v133 + 16))(v132, v48, v146);
      v99 = v141;
      if (sub_2420801D0(v97, 1, (uint64_t)v141) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v97, v98);
        v100 = v130;
        sub_242131AEC();
        v149 = v159;
        sub_242132618();
        v101 = sub_2421314CC();
        v102 = v101;
        if (os_log_type_enabled(v99, v101))
        {
          v103 = sub_24210CA3C();
          v138 = v45;
          v104 = (uint8_t *)v103;
          v153 = sub_2421310D0();
          v105 = sub_242132118(4.8151e-34);
          LODWORD(v146) = v102;
          v107 = sub_2420C0CD4(v105, v106);
          v109 = sub_2421322EC(v107, v108);
          sub_242131CF4(v109);
          sub_242097830();
          sub_242131F64();
          v152 = v149;
          sub_2421315BC();
          sub_24211AD3C(&dword_242074000, v99, (os_log_type_t)v146, "%s sync: throwing neither result or error returned, num connection attempts:%lu", v104);
          sub_24210CC58();
          sub_24210C9C4();
        }

        sub_242131110(v100, *(uint64_t (**)(uint64_t, _QWORD))(v53 + 8));
        v121 = v140;
        sub_24213230C();
        sub_24207F02C();
        v122 = sub_2420970E4();
        sub_242131468(v122, v123);
        sub_242097B70();
        sub_242131424();
        sub_242131BD0();
        sub_242132034();

      }
      else
      {
        v149 = *(void (**)(_QWORD, _QWORD, _QWORD))(v129 + 32);
        v149(v131, v97, v99);
        v112 = v125;
        sub_242131AEC();
        v146 = (uint64_t)v159;
        sub_242132618();
        v113 = sub_242131C94();
        if (sub_24213133C(v113))
        {
          v114 = sub_24210CA3C();
          v138 = v45;
          v115 = (uint8_t *)v114;
          v153 = sub_2421310D0();
          v116 = sub_242132118(4.8151e-34);
          v118 = sub_2420C0CD4(v116, v117);
          v120 = sub_2421322EC(v118, v119);
          sub_242131CF4(v120);
          sub_242097830();
          sub_242131F64();
          v152 = (void (*)(_QWORD, _QWORD, _QWORD))v146;
          sub_2421315BC();
          sub_24211AD3C(&dword_242074000, v112, (os_log_type_t)v48, "%s sync: method returned non-nil result, num connection attempts:%lu", v115);
          sub_24210CC58();
          sub_24210C9C4();
        }

        sub_242131554();
        sub_2421313AC((uint64_t)&v158);
        sub_242131110((uint64_t)v125, *(uint64_t (**)(uint64_t, _QWORD))(v53 + 8));
        sub_242131690();
        v149(v128, v131, v141);
        sub_242097B70();
        sub_242131BD0();
        sub_242132034();
      }
    }
  }
  sub_242131158();
}

{
  NSObject *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, _QWORD);
  uint64_t v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  void *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  void *v82;
  const char *v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t);
  void (*v86)(char *, uint64_t);
  uint64_t (*v87)(uint64_t, _QWORD);
  _QWORD v88[2];
  char *v89;
  NSObject *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t);
  uint64_t v105;
  uint64_t v106;
  id v107;
  _QWORD v108[3];
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  id (*v112)(void *);
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;

  sub_242131478();
  a19 = v23;
  a20 = v24;
  v107 = v22;
  v26 = v25;
  v95 = v27;
  v104 = v28;
  v91 = v29;
  v30 = *v21;
  v31 = sub_24207F4AC();
  sub_2421315C4(*(_QWORD *)(v31 - 8));
  MEMORY[0x24BDAC7A8](v32);
  sub_242080330();
  sub_242132194();
  MEMORY[0x24BDAC7A8](v33);
  sub_242132360();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)v88 - v35;
  sub_2421315C4(*(_QWORD *)(v26 - 8));
  MEMORY[0x24BDAC7A8](v37);
  sub_24207F540();
  v40 = v39 - v38;
  v41 = v21[2];
  v103 = v26;
  v108[2] = v26;
  v109 = v21;
  v42 = *(_QWORD *)(v30 + 80);
  v43 = *(_QWORD *)(v30 + 88);
  v45 = type metadata accessor for XPCServiceClientConnection.State(0, v42, v43, v44);
  v46 = sub_2421320F0(v45, &qword_2571A1500);
  v47 = v107;
  sub_24212F7A8((void (*)(uint64_t))sub_24212FFA8, (uint64_t)v108, v41, v45, v46);
  if (!v47)
  {
    v97 = v21;
    v98 = (void *)v42;
    v99 = v43;
    v88[1] = 0;
    v90 = v20;
    v101 = v111;
    v114 = 0;
    sub_242079EE8();
    sub_2421316E4();
    if (v50)
    {
LABEL_10:
      __break(1u);
    }
    else
    {
      *(_QWORD *)&v49 = 136315650;
      v93 = v49;
      v92 = MEMORY[0x24BEE4AD8] + 8;
      v94 = v40;
      v96 = v31;
      v89 = v36;
      v51 = v100;
      while (1)
      {
        v114 = v48;
        v52 = sub_242079F48();
        *(_QWORD *)(v52 + 16) = 0;
        v112 = sub_24212C560;
        v113 = v52;
        sub_2421316D8(MEMORY[0x24BDAC760]);
        sub_242131330((uint64_t)&unk_2513267D0);
        v106 = v52;
        sub_242132284();
        sub_24211B22C();
        v53 = sub_2421320C8(sel_synchronousRemoteObjectProxyWithErrorHandler_, (uint64_t)&a14);
        sub_242131D5C();
        v54 = swift_unknownObjectRetain();
        v107 = v53;
        v104(v54);
        sub_24211B120();
        v20 = *(NSObject **)(v52 + 16);
        if (!v20)
          break;
        v55 = v114;
        sub_24210CD34();
        sub_24210CD34();
        v56 = sub_242131A94(v20, v55);
        sub_24210CAEC();
        v57 = v99;
        if (!v56)
        {
          v72 = v89;
          v73 = (uint64_t)v98;
          v74 = v98;
          (*(void (**)(void *, uint64_t))(v99 + 56))(v98, v99);
          sub_24210CD34();
          sub_24210CD34();
          sub_242131720();
          v75 = sub_242131ACC();
          if (sub_24210CC80(v75))
          {
            v76 = sub_2421310D0();
            v97 = (_QWORD *)sub_24210CA3C();
            v77 = sub_2421310D0();
            sub_2421321D4(v77, (uint64_t)&a17);
            v78 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 24);
            v100 = (uint64_t)v74;
            v79 = sub_2420C0CD4(v73, v78);
            v110 = sub_242131E1C(v79, v80);
            sub_242132A38();
            sub_242097830();
            *(_WORD *)(v76 + 12) = 2112;
            sub_24210CD34();
            v81 = sub_242131B38();
            v110 = v81;
            sub_242132A38();
            *v97 = v81;
            sub_24210CAEC();
            sub_24210CAEC();
            *(_WORD *)(v76 + 22) = 2048;
            v110 = v55;
            sub_242132324();
            sub_24213230C();
            sub_24213144C(v82, (v76 + 14), (os_log_type_t)v57, v83, (uint8_t *)v76);
            sub_2420797C0(&qword_254399B50);
            sub_24210CC58();
            sub_24210C9C4();
          }
          sub_24210CAEC();
          sub_24210CAEC();

          sub_242131A68();
          v86(v72, v31);
          sub_242097610();
          sub_2421313AC((uint64_t)&a14);
          sub_242131AD4();
          sub_242131A68();
          sub_242131110(v94, v87);
          sub_242132330();
          sub_242131AD4();
          goto LABEL_17;
        }
        sub_242131FBC();
        sub_24210CD34();
        sub_24210CD34();
        v58 = sub_24213194C();
        v59 = sub_24213299C();
        if (sub_242131CC8(v58))
        {
          v60 = sub_2421310D0();
          v61 = (_QWORD *)sub_24210CA3C();
          v62 = sub_2421310D0();
          sub_2421321D4(v62, (uint64_t)&v115);
          v63 = sub_2421320F8();
          *(_QWORD *)(v60 + 4) = sub_242131E1C(v63, v64);
          sub_242097830();
          *(_WORD *)(v60 + 12) = 2112;
          sub_24210CD34();
          v65 = sub_242131B38();
          *(_QWORD *)(v60 + 14) = v65;
          *v61 = v65;
          sub_24210CAEC();
          sub_24210CAEC();
          *(_WORD *)(v60 + 22) = 2048;
          *(_QWORD *)(v60 + 24) = v114;
          sub_24213144C(&dword_242074000, v58, v59, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v60);
          sub_2420797C0(&qword_254399B50);
          sub_24210CC58();
          sub_24210C9C4();
        }

        sub_242131AD4();
        sub_24210CAEC();
        sub_24210CAEC();
        sub_24210CAEC();
        v31 = v96;
        sub_24211ADF8(v51, *(uint64_t (**)(uint64_t, uint64_t))(v105 + 8));
        sub_242131A68();
        sub_242131110(v40, v66);
        sub_242132330();
        sub_242131AD4();
        sub_2421316E4();
        if (v50)
          goto LABEL_10;
      }
    }
    sub_242131FBC();
    v67 = v114;
    sub_242131720();
    v68 = sub_242131C94();
    if (sub_24213133C(v68))
    {
      v69 = (uint8_t *)sub_24210CA3C();
      v111 = sub_2421310D0();
      *(_DWORD *)v69 = 136315394;
      v104 = (void (*)(uint64_t))(v69 + 4);
      v70 = sub_2421320F8();
      v110 = sub_242131E1C(v70, v71);
      sub_242132A38();
      sub_242097830();
      sub_242131F64();
      v110 = v67;
      sub_242132324();
      sub_24211AD3C(&dword_242074000, v20, (os_log_type_t)v40, "%s sync: method returned result, num connection attempts: %lu", v69);
      sub_24210CC58();
      sub_24210C9C4();
    }

    sub_2421313AC((uint64_t)&a14);
    sub_242131690();
    v84 = sub_242132158();
    sub_24211ADF8(v84, v85);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32))(v91, v94, v103);
    sub_242132330();
  }
LABEL_17:
  sub_242131158();
}

uint64_t sub_242129BCC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_242129BE4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ResourceContainer);
}

uint64_t sub_242129BD8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_242129BE4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ResourceBundleContainer);
}

uint64_t sub_242129BE4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(_QWORD))
{
  void (*v5)(uint64_t);
  id v6;
  uint64_t v7;

  v5 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    a4(0);
    sub_2421328AC();
  }
  sub_2421315B4();
  v6 = a3;
  v7 = sub_24207F7AC();
  v5(v7);
  sub_242097A18();

  return swift_bridgeObjectRelease();
}

void sub_242129C54(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_2421323C4();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t XPCServiceClientConnection.callAsync<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = *v4;
  return sub_242131F80();
}

uint64_t sub_242129CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  _QWORD *v19;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v2;
  v7 = sub_242132380(v5, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v6);
  v8 = sub_242130AFC(0, &qword_2571A1500);
  sub_242131EE0((void (*)(uint64_t))sub_242130FC0, v5, v4, v7, v8);
  sub_242131FFC();
  if (v4)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 16);
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v10;
  sub_24213225C(v10, v11, v12, v13, v14, v15, v16, v17, v18);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v19;
  *v19 = v0;
  v19[1] = sub_242129E30;
  sub_242132164();
  return sub_242132D20();
}

uint64_t sub_242129E30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return sub_242131F58();
}

uint64_t sub_242129E94()
{
  uint64_t v0;

  return sub_24213187C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242129EC0()
{
  uint64_t v0;

  sub_242131FFC();
  return sub_24213187C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242129EF0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_2421315B4();
  v1(v2);
  return swift_release();
}

void static XPCService.respectedEntitlements.getter()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  sub_2420C1758();
  sub_2420797C0(&qword_254399940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24214D280;
  v1 = sub_24207F7AC();
  *(_QWORD *)(inited + 32) = v2(v1);
  *(_QWORD *)(inited + 40) = v3;
  v4 = sub_2420AA3D4(inited);
  v5 = sub_24207F7AC();
  v7 = v6(v5);
  sub_242129F8C(v7, v4);
  sub_2421321B4();
}

uint64_t sub_242129F8C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_242076DC4(&v17, v15, v16);
    result = swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_5:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v7 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_24212A10C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  if (qword_25439A130 != -1)
    swift_once();
  swift_beginAccess();
  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, qword_25439A128);
  if (qword_25439A100 != -1)
    swift_once();
  swift_beginAccess();
  v1 = *((_QWORD *)off_25439A108 + 2);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain() + 48;
    do
    {
      v3 = *(_QWORD *)(v2 - 16);
      v4 = *(_QWORD *)(v2 - 8);
      v2 += 24;
      swift_bridgeObjectRetain();
      v5 = (void *)sub_24213293C();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setClasses_forSelector_argumentIndex_ofReply_, v5, v3, v4, 1);

      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v0;
}

id static XPCService.xpcInterface()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;

  sub_2420C1758();
  v3 = (void *)(*(uint64_t (**)(void))(v2 + 16))();
  v4 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, v3);

  v11 = v1;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 48))(v1, v0);
  v5 = *(_QWORD *)(v12 + 16);
  if (v5)
  {
    v6 = v12 + 48;
    do
    {
      v7 = *(_QWORD *)(v6 - 16);
      v8 = *(_QWORD *)(v6 - 8);
      v6 += 24;
      swift_bridgeObjectRetain();
      v9 = (void *)sub_24213293C();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setClasses_forSelector_argumentIndex_ofReply_, v9, v7, v8, 1);

      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(id, uint64_t))(v0 + 64))(v4, v11);
  return v4;
}

uint64_t *XPCServiceClientConnection.init(delegate:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_2420C1758();
  v2 = *v1;
  v1[3] = 2;
  v1[5] = 0;
  v3 = sub_242132270();
  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v2 + 88);
  v9 = 0;
  v7 = sub_242132380(v3, v4, v5, v6);
  v1[2] = sub_24212A43C((uint64_t)&v9, v7);
  v1[5] = v0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_24212A43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  v7 = sub_24212F890((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

void XPCServiceClientConnection.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = v4[2];
  v6 = *(_QWORD *)(*v4 + 88);
  v10 = *(_QWORD *)(*v4 + 80);
  v11 = v6;
  v7 = sub_242132380(a1, v10, v6, a4);
  v8 = sub_2420797C0(&qword_254399C50);
  sub_242131EE0((void (*)(uint64_t))sub_24212FF34, (uint64_t)&v9, v5, v7, v8);
  sub_24207F718();
  sub_24212FF84((uint64_t)(v4 + 4));
  sub_2421321B4();
}

uint64_t XPCServiceClientConnection.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  XPCServiceClientConnection.deinit(a1, a2, a3, a4);
  sub_2421321EC();
  return swift_deallocClassInstance();
}

void sub_24212A554()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(NSObject *, uint64_t, uint64_t);
  os_log_type_t v13;
  uint8_t *v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  void (*v33)(NSObject *, uint64_t, uint64_t);
  uint64_t v34;
  uint8_t *v35;
  NSObject *v36;
  void (*v37)(NSObject *, uint64_t);
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_242131478();
  v3 = v2;
  v4 = sub_24207F4AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_242080330();
  v38 = v6;
  MEMORY[0x24BDAC7A8]();
  v8 = ((char *)v31 - v7);
  if (MEMORY[0x2426A423C](v0 + 32))
  {
    v9 = *(_QWORD *)(v0 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    if (!v1 && !*v3)
    {
      if (qword_25439A0E0 != -1)
        swift_once();
      v11 = sub_24207BF18(v4, (uint64_t)qword_25439A110);
      sub_24211B120();
      v12 = *(void (**)(NSObject *, uint64_t, uint64_t))(v5 + 16);
      v34 = v11;
      v33 = v12;
      v12(v8, v11, v4);
      sub_242132618();
      v13 = sub_24207F668();
      LODWORD(v37) = v13;
      if (os_log_type_enabled(v8, v13))
      {
        v36 = v8;
        v14 = (uint8_t *)sub_24210CA3C();
        v32 = sub_2421310D0();
        v39 = v32;
        v35 = v14;
        *(_DWORD *)v14 = 136315138;
        v31[1] = v14 + 4;
        sub_24211B120();
        v16 = qword_25719D910;
        v15 = unk_25719D918;
        swift_bridgeObjectRetain();
        v44 = sub_24212F968(v16, v15, &v39);
        sub_242132A38();
        sub_242097830();
        sub_242131B30(&dword_242074000, v36, (os_log_type_t)v37, "%s: establishing connection.", v35);
        sub_24210CC58();
        sub_24210C9C4();
      }

      v37 = *(void (**)(NSObject *, uint64_t))(v5 + 8);
      v37(v8, v4);
      sub_24211B120();
      v17 = objc_allocWithZone(MEMORY[0x24BDD1988]);
      sub_2420C13B0();
      v18 = (void *)sub_242132768();
      sub_2420A1B60();
      v19 = objc_msgSend(v17, sel_initWithMachServiceName_options_, v18, 0);

      *v3 = v19;
      if (!v19)
      {
        v26 = v38;
        v33(v38, v34, v4);
        sub_242131720();
        v27 = sub_242131ACC();
        if (sub_24210CC80(v27))
        {
          v28 = sub_24210CA3C();
          v39 = sub_2421310D0();
          *(_DWORD *)v28 = 136315138;
          v36 = (v28 + 4);
          v29 = qword_25719D910;
          v30 = unk_25719D918;
          swift_bridgeObjectRetain();
          v43 = sub_24212F968(v29, v30, &v39);
          sub_242132A38();
          swift_bridgeObjectRelease();
          sub_242131B30(&dword_242074000, 0, (os_log_type_t)v3, "%s: did not create connection.", (uint8_t *)v28);
          sub_24210CC58();
          sub_24210C9C4();
        }

        sub_2420C1440();
        v37(v26, v4);
        goto LABEL_11;
      }
      v20 = v19;
      v21 = sub_24212A10C();
      sub_2421323CC((uint64_t)v21, sel_setRemoteObjectInterface_);

      sub_242079F48();
      sub_2421321FC();
      v41 = sub_242130B34;
      v42 = 0;
      v22 = MEMORY[0x24BDAC760];
      v39 = MEMORY[0x24BDAC760];
      v40 = 1107296256;
      v23 = sub_242132218((uint64_t)&unk_25132F3D0);
      swift_release();
      objc_msgSend(v20, sel_setInterruptionHandler_, v23);
      _Block_release(v23);
      sub_242079F48();
      sub_2421321FC();
      v41 = sub_242130B54;
      v42 = 0;
      v39 = v22;
      v40 = 1107296256;
      v24 = sub_242132218((uint64_t)&unk_25132F3F8);
      v25 = swift_release();
      sub_2421323CC(v25, sel_setInvalidationHandler_);
      _Block_release(v24);
      objc_msgSend(v20, sel_resume);

    }
    sub_2420C1440();
LABEL_11:
    sub_242131158();
    return;
  }
  sub_242132B94();
  __break(1u);
}

uint64_t sub_24212AA78(id *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void);
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t result;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  char *v46;
  uint8_t *v47;
  uint8_t *v48;
  uint64_t v49;
  void (*v50)(void);
  os_log_t v51;
  uint64_t (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  os_log_t aBlock;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  void *v59;
  uint64_t (*v60)();
  _QWORD *v61;
  uint64_t v62;

  v4 = *v1;
  v55 = sub_24213263C();
  v5 = *(_QWORD *)(v55 - 8);
  v6 = MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v47 - v8;
  if (MEMORY[0x2426A423C](v1 + 4))
  {
    v10 = v1[5];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
    if (v2 || *a1)
      return swift_unknownObjectRelease();
    v12 = *(_QWORD *)(v4 + 80);
    v13 = *(_QWORD *)(v4 + 88);
    v14 = *(void (**)(void))(v13 + 56);
    v53 = v12;
    v50 = v14;
    v14();
    v15 = sub_242132618();
    v16 = sub_2421329A8();
    LODWORD(v52) = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v51 = v15;
      v17 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      aBlock = (os_log_t)v49;
      *(_DWORD *)v17 = 136315138;
      v47 = v17 + 4;
      v48 = v17;
      v18 = (*(uint64_t (**)(uint64_t))(v13 + 24))(v53);
      v62 = sub_24212F968(v18, v19, (uint64_t *)&aBlock);
      sub_242132A38();
      swift_bridgeObjectRelease();
      v20 = v48;
      _os_log_impl(&dword_242074000, v51, (os_log_type_t)v52, "%s: establishing connection.", v48, 0xCu);
      v21 = v49;
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v21, -1, -1);
      MEMORY[0x2426A4194](v20, -1, -1);

    }
    else
    {

    }
    v22 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v23 = v13;
    v52 = v22;
    v22(v9, v55);
    sub_242130AFC(0, &qword_2571A1500);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
    v25 = v53;
    v26 = v24(v53, v23);
    v28 = sub_24212B050(v26, v27, 0);

    *a1 = v28;
    if (v28)
    {
      v29 = v28;
      v30 = static XPCService.xpcInterface()();
      objc_msgSend(v29, sel_setRemoteObjectInterface_, v30);

      v31 = swift_allocObject();
      swift_weakInit();
      v32 = (_QWORD *)swift_allocObject();
      v32[2] = v25;
      v32[3] = v23;
      v32[4] = v31;
      v60 = sub_242130A50;
      v61 = v32;
      aBlock = (os_log_t)MEMORY[0x24BDAC760];
      v57 = 1107296256;
      v58 = sub_242129EF0;
      v59 = &unk_25132F290;
      v33 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v29, sel_setInterruptionHandler_, v33);
      _Block_release(v33);
      v34 = swift_allocObject();
      swift_weakInit();
      v35 = (_QWORD *)swift_allocObject();
      v35[2] = v25;
      v35[3] = v23;
      v35[4] = v34;
      v60 = sub_242130A74;
      v61 = v35;
      aBlock = (os_log_t)MEMORY[0x24BDAC760];
      v57 = 1107296256;
      v58 = sub_242129EF0;
      v59 = &unk_25132F2E0;
      v36 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v29, sel_setInvalidationHandler_, v36);
      _Block_release(v36);
      objc_msgSend(v29, sel_resume);

      return swift_unknownObjectRelease();
    }
    v38 = v54;
    ((void (*)(uint64_t, uint64_t))v50)(v25, v23);
    v39 = v25;
    v40 = sub_242132618();
    v41 = sub_24213299C();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v51 = (os_log_t)swift_slowAlloc();
      aBlock = v51;
      *(_DWORD *)v42 = 136315138;
      v50 = (void (*)(void))(v42 + 4);
      v43 = v24(v39, v23);
      v62 = sub_24212F968(v43, v44, (uint64_t *)&aBlock);
      sub_242132A38();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_242074000, v40, v41, "%s: did not create connection.", v42, 0xCu);
      v45 = v51;
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v45, -1, -1);
      MEMORY[0x2426A4194](v42, -1, -1);
      swift_unknownObjectRelease();

      v46 = v54;
    }
    else
    {

      swift_unknownObjectRelease();
      v46 = v38;
    }
    return v52(v46, v55);
  }
  else
  {
    result = sub_242132B94();
    __break(1u);
  }
  return result;
}

id sub_24212B050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_242132768();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, a3);

  return v6;
}

uint64_t sub_24212B0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[4];
  uint64_t v14;

  v1 = sub_24213263C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25439A0E0 != -1)
    swift_once();
  v5 = sub_24207BF18(v1, (uint64_t)qword_25439A110);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v6 = sub_242132618();
  v7 = sub_24213299C();
  if (os_log_type_enabled(v6, v7))
  {
    v13[2] = v0;
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v13[1] = v8 + 4;
    swift_beginAccess();
    v11 = qword_25719D910;
    v10 = unk_25719D918;
    swift_bridgeObjectRetain();
    v13[3] = sub_24212F968(v11, v10, &v14);
    sub_242132A38();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_242074000, v6, v7, "%s: Connection to XPC Server interrupted.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426A4194](v9, -1, -1);
    MEMORY[0x2426A4194](v8, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_24212B2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_24213263C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  v10 = sub_242132618();
  v11 = sub_24213299C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v21 = v6;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v22 = v3;
    v15 = v14;
    v24 = v14;
    v20 = v7;
    *(_DWORD *)v13 = 136315138;
    v19[1] = v13 + 4;
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    v23 = sub_24212F968(v16, v17, &v24);
    sub_242132A38();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_242074000, v10, v11, "%s: Connection to XPC Server interrupted.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426A4194](v15, -1, -1);
    MEMORY[0x2426A4194](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_24212B4B8(uint64_t a1, void (*a2)(os_unfair_lock_s *))
{
  uint64_t result;
  os_unfair_lock_s *v4;

  sub_242079EE8();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = *(os_unfair_lock_s **)(result + 16);
    sub_242131BA4();
    os_unfair_lock_lock(v4 + 6);
    a2(v4 + 4);
    os_unfair_lock_unlock(v4 + 6);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24212B550(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[5];

  sub_242079EE8();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = *(_QWORD *)(result + 16);
    MEMORY[0x24BDAC7A8](result);
    v11[2] = a2;
    v11[3] = a3;
    v10 = type metadata accessor for XPCServiceClientConnection.State(0, a2, a3, v9);
    sub_242131BA4();
    sub_242131EE0(a4, (uint64_t)v11, v8, v10, MEMORY[0x24BEE4AE0] + 8);
    swift_release();
    return sub_242097A18();
  }
  return result;
}

void sub_24212B628(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint8_t *v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_24213263C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25439A0E0 != -1)
    swift_once();
  v7 = sub_24207BF18(v3, (uint64_t)qword_25439A110);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_242132618();
  v9 = sub_2421329A8();
  if (os_log_type_enabled(v8, v9))
  {
    v18 = v1;
    v10 = swift_slowAlloc();
    v17 = a1;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136315138;
    v16 = v11 + 4;
    swift_beginAccess();
    v13 = qword_25719D910;
    v14 = unk_25719D918;
    swift_bridgeObjectRetain();
    v19 = sub_24212F968(v13, v14, &v20);
    sub_242132A38();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_242074000, v8, v9, "%s: Connection to XPC Server invalidated.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426A4194](v12, -1, -1);
    v15 = v11;
    a1 = v17;
    MEMORY[0x2426A4194](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = 0;
}

void sub_24212B854(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = sub_24213263C();
  v23 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  v10 = sub_242132618();
  v11 = sub_2421329A8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v21 = a1;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v22 = v3;
    v15 = v14;
    v25 = v14;
    v20 = v7;
    *(_DWORD *)v13 = 136315138;
    v19 = v13 + 4;
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    v24 = sub_24212F968(v16, v17, &v25);
    sub_242132A38();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_242074000, v10, v11, "%s: Connection to XPC Server invalidated.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426A4194](v15, -1, -1);
    v18 = v13;
    a1 = v21;
    MEMORY[0x2426A4194](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  }

  *a1 = 0;
}

BOOL sub_24212BA50(void *a1, unint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id v11;
  id v14;

  if (!a1)
    return 0;
  v3 = a1;
  sub_2420797C0((uint64_t *)&unk_254399A80);
  sub_242130AFC(0, &qword_254397A28);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v4 = objc_msgSend(v14, sel_domain);
  v5 = sub_242132780();
  v7 = v6;

  if (v5 == sub_242132780() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_242132D14();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {

      return 0;
    }
  }
  v11 = objc_msgSend(v14, sel_code);

  return v11 == (id)4097 && a2 < 2;
}

void sub_24212C31C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_2421315B4();
  v4 = a2;
  v3();
  sub_242097A18();

}

uint64_t type metadata accessor for XPCServiceClientConnection.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2420C0688(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCServiceClientConnection.State);
}

id sub_24212C370(void *a1, uint64_t a2)
{
  void *v4;

  sub_242131BB8();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;

  return a1;
}

void sub_24212C3B8(void *a1, uint64_t a2, _QWORD *a3)
{
  void *v5;
  id v6;

  sub_242131BB8();
  v5 = (void *)a3[2];
  a3[2] = a1;
  v6 = a1;

  sub_242131BB8();
  sub_2421321A4();

  sub_24213207C();
}

void sub_24212C420(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  sub_242131BB8();
  a3[2] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_242131BB8();
  sub_2421321A4();

  sub_24213207C();
}

void sub_24212C490(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v7 = sub_242132A2C();
  v8 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v8, a1, v7);
  swift_beginAccess();
  v9 = *(void **)(a4 + 16);
  *(_QWORD *)(a4 + 16) = a2;
  v10 = a2;

}

uint64_t sub_24212C544()
{
  uint64_t v0;

  sub_242131FEC();
  return swift_deallocObject();
}

id sub_24212C560(void *a1)
{
  return sub_242131AA4(a1);
}

uint64_t sub_24212C574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24212C584()
{
  return swift_release();
}

uint64_t sub_24212C58C()
{
  sub_2421322E4();
  sub_2421322DC();
  return swift_deallocObject();
}

void sub_24212C5B0(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_24212C490(a1, a2, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

void sub_24212C5C0(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id v6;
  _BYTE *v7;

  sub_24212AA78(a1);
  if (!v2)
  {
    v5 = *a1;
    if (*a1)
    {
      *a2 = v5;
      v6 = v5;
    }
    else
    {
      sub_24207F02C();
      sub_2420970E4();
      *v7 = 0;
      sub_2420A197C();
    }
  }
  sub_2421323AC();
}

uint64_t sub_24212C628(uint64_t a1, void *a2, _QWORD *a3, void (*a4)(uint64_t, uint64_t (*)(), char *), uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  sub_24212C6AC(v12, a2, a3, a1, a4, a5, a6);
  return swift_release();
}

void sub_24212C6AC(uint64_t a1, void *a2, _QWORD *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t (*)(), char *), uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  void (**v32)(uint64_t, uint64_t (*)(), char *);
  void (*v33)(uint64_t, uint64_t (*)(), char *);
  void (*v34)(uint64_t, uint64_t (*)(), char *);
  void *v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t (*)(), char *);
  id v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  void (*v51)(uint64_t, uint64_t (*)(), char *);
  _QWORD *v52;
  _QWORD aBlock[6];

  v51 = a5;
  v52 = a3;
  v12 = *a3;
  sub_24208C304((uint64_t *)&unk_254399A80);
  v13 = sub_242132388();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  sub_242131BB8();
  v18 = *(_QWORD *)(a1 + 16);
  v19 = __CFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a1 + 16) = v20;
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v50(v17, a4, v13);
    v21 = v15;
    v49 = v15;
    v41 = a6;
    v42 = a2;
    v22 = *(unsigned __int8 *)(v14 + 80);
    v23 = a2;
    v24 = v12;
    v25 = (v22 + 64) & ~v22;
    v48 = v22 | 7;
    v44 = a4;
    v26 = (v21 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = (_QWORD *)swift_allocObject();
    v28 = a7;
    v47 = a7;
    v29 = v27;
    v30 = *(_QWORD *)(v24 + 80);
    v27[2] = v30;
    v27[3] = v28;
    v45 = *(_QWORD *)(v24 + 88);
    v46 = v30;
    v31 = v52;
    v27[4] = v45;
    v27[5] = v31;
    v27[6] = a1;
    v27[7] = v23;
    v43 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v43((char *)v27 + v25, v17, v13);
    v32 = (void (**)(uint64_t, uint64_t (*)(), char *))((char *)v29 + v26);
    v33 = v51;
    v34 = v41;
    *v32 = v51;
    v32[1] = (void (*)(uint64_t, uint64_t (*)(), char *))v34;
    aBlock[4] = sub_242130C18;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24212C31C;
    aBlock[3] = &unk_25132F470;
    v35 = _Block_copy(aBlock);
    sub_242132284();
    sub_2421323C4();
    v36 = v42;
    sub_2421315B4();
    sub_2420AA15C();
    v37 = objc_msgSend(v36, sel_remoteObjectProxyWithErrorHandler_, v35);
    _Block_release(v35);
    v50(v17, v44, v13);
    v38 = (char *)swift_allocObject();
    v39 = v47;
    *((_QWORD *)v38 + 2) = v46;
    *((_QWORD *)v38 + 3) = v39;
    *((_QWORD *)v38 + 4) = v45;
    *((_QWORD *)v38 + 5) = a1;
    v43(&v38[(v22 + 48) & ~v22], v17, v13);
    sub_2421323C4();
    v40 = swift_unknownObjectRetain();
    v33(v40, sub_242130D08, v38);
    sub_2420AA15C();
    swift_unknownObjectRelease_n();
    sub_242097670();
  }
}

uint64_t sub_24212C924(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  id v52;
  _QWORD *v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v63 = a8;
  v58 = a6;
  v59 = a7;
  v57 = a4;
  v12 = *a2;
  v13 = sub_24213263C();
  v61 = *(_QWORD *)(v13 - 8);
  v62 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v53 - v17;
  v56 = a3 + 16;
  swift_beginAccess();
  v19 = sub_24212BA50(a1, *(_QWORD *)(a3 + 16));
  v20 = *(_QWORD *)(v12 + 80);
  v21 = *(_QWORD *)(v12 + 88);
  v22 = *(void (**)(uint64_t, uint64_t))(v21 + 56);
  if (v19)
  {
    v22(*(_QWORD *)(v12 + 80), *(_QWORD *)(v12 + 88));
    v23 = a1;
    swift_retain();
    v24 = a1;
    swift_retain();
    v25 = sub_242132618();
    v26 = sub_24213299C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v60 = a5;
      v28 = v27;
      v53 = (_QWORD *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v66 = v55;
      *(_DWORD *)v28 = 136315650;
      v29 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 24);
      v54 = v25;
      v30 = v29(v20, v21);
      v65 = sub_24212F968(v30, v31, &v66);
      sub_242132A38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2112;
      v32 = a1;
      v33 = _swift_stdlib_bridgeErrorToNSError();
      v65 = v33;
      sub_242132A38();
      v34 = v53;
      *v53 = v33;

      *(_WORD *)(v28 + 22) = 2048;
      swift_beginAccess();
      v35 = *(_QWORD *)(a3 + 16);
      swift_release();
      v64 = v35;
      sub_242132A38();
      swift_release();
      v36 = v54;
      _os_log_impl(&dword_242074000, v54, v26, "%s async: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v28, 0x20u);
      sub_2420797C0(&qword_254399B50);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v34, -1, -1);
      v37 = v55;
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v37, -1, -1);
      v38 = v28;
      a5 = v60;
      MEMORY[0x2426A4194](v38, -1, -1);

    }
    else
    {
      swift_release();

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v18, v62);
    return sub_24212C6AC(a3, v57, a2, a5, v58, v59, v63);
  }
  else
  {
    v60 = a5;
    v22(v20, v21);
    v39 = a1;
    swift_retain();
    v40 = a1;
    swift_retain();
    v41 = sub_242132618();
    v42 = sub_24213299C();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v58 = (_QWORD *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v66 = v59;
      *(_DWORD *)v43 = 136315650;
      v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
      v65 = sub_24212F968(v44, v45, &v66);
      sub_242132A38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2112;
      v46 = a1;
      v47 = _swift_stdlib_bridgeErrorToNSError();
      v65 = v47;
      sub_242132A38();
      v48 = v58;
      *v58 = v47;

      *(_WORD *)(v43 + 22) = 2048;
      swift_beginAccess();
      v49 = *(_QWORD *)(a3 + 16);
      swift_release();
      v64 = v49;
      sub_242132A38();
      swift_release();
      _os_log_impl(&dword_242074000, v41, v42, "%s async: connection error during call: %@ reached max num connection attempts: %lu", (uint8_t *)v43, 0x20u);
      sub_2420797C0(&qword_254399B50);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v48, -1, -1);
      v50 = v59;
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v50, -1, -1);
      MEMORY[0x2426A4194](v43, -1, -1);

    }
    else
    {
      swift_release();

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v62);
    v66 = (uint64_t)a1;
    v52 = a1;
    sub_24208C304((uint64_t *)&unk_254399A80);
    sub_242132900();
    return sub_2421328E8();
  }
}

uint64_t sub_24212CF20(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(uint64_t, uint64_t);
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v81 = a1;
  v82 = a4;
  v12 = sub_24213263C();
  v83 = *(_QWORD *)(v12 - 8);
  v84 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v79 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v85 = (char *)&v79 - v19;
  v20 = sub_242132A2C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v79 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  MEMORY[0x24BDAC7A8](v25);
  if (a2)
  {
    v81 = a6;
    v29 = *(void (**)(uint64_t, uint64_t))(a7 + 56);
    v30 = a2;
    v29(a5, a7);
    v31 = a2;
    swift_retain();
    v32 = a2;
    swift_retain();
    v33 = sub_242132618();
    v34 = sub_24213299C();
    v35 = a3;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = a5;
      v37 = swift_slowAlloc();
      v80 = (_QWORD *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v88 = v38;
      *(_DWORD *)v37 = 136315650;
      v39 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 24))(v36, a7);
      v87 = sub_24212F968(v39, v40, &v88);
      sub_242132A38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2112;
      v41 = a2;
      v42 = _swift_stdlib_bridgeErrorToNSError();
      v87 = v42;
      sub_242132A38();
      v43 = v80;
      *v80 = v42;

      *(_WORD *)(v37 + 22) = 2048;
      swift_beginAccess();
      v44 = *(_QWORD *)(v35 + 16);
      swift_release();
      v86 = v44;
      sub_242132A38();
      swift_release();
      _os_log_impl(&dword_242074000, v33, v34, "%s async: method error during call: %@, num connection attempts: %lu", (uint8_t *)v37, 0x20u);
      sub_2420797C0(&qword_254399B50);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v43, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v38, -1, -1);
      MEMORY[0x2426A4194](v37, -1, -1);

    }
    else
    {
      swift_release();

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v84);
    v88 = (uint64_t)a2;
    sub_24208C304((uint64_t *)&unk_254399A80);
    sub_242132900();
    return sub_2421328E8();
  }
  v85 = (char *)&v79 - v26;
  v80 = v28;
  v45 = a5;
  v46 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v81, v20);
  if (sub_2420801D0((uint64_t)v24, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    v47 = a7;
    v48 = *(void (**)(uint64_t, uint64_t))(a7 + 56);
    v49 = v45;
    v48(v45, v47);
    swift_retain_n();
    v50 = sub_242132618();
    v51 = sub_24213299C();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = swift_slowAlloc();
      v85 = v18;
      v53 = v52;
      v54 = swift_slowAlloc();
      v88 = v54;
      *(_DWORD *)v53 = 136315394;
      v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 24))(v49, v47);
      v87 = sub_24212F968(v55, v56, &v88);
      sub_242132A38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2048;
      swift_beginAccess();
      v57 = *(_QWORD *)(a3 + 16);
      swift_release();
      v86 = v57;
      sub_242132A38();
      swift_release();
      _os_log_impl(&dword_242074000, v50, v51, "%s async: throwing neither result or error returned, num connection attempts: %lu", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v54, -1, -1);
      MEMORY[0x2426A4194](v53, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v84);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v18, v84);
    }
    sub_24207F02C();
    v74 = swift_allocError();
    *v75 = 2;
    v88 = v74;
    sub_24208C304((uint64_t *)&unk_254399A80);
    sub_242132900();
    return sub_2421328E8();
  }
  v58 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v81 = a6;
  v58(v85, v24, a6);
  v59 = *(void (**)(uint64_t, uint64_t))(a7 + 56);
  v60 = v15;
  v61 = a7;
  v62 = v45;
  v59(v45, v61);
  v63 = a3;
  swift_retain_n();
  v64 = sub_242132618();
  v65 = sub_242132990();
  v66 = os_log_type_enabled(v64, v65);
  v68 = v83;
  v67 = v84;
  if (v66)
  {
    v69 = swift_slowAlloc();
    v70 = swift_slowAlloc();
    v88 = v70;
    *(_DWORD *)v69 = 136315394;
    v79 = v60;
    v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 24))(v62, v61);
    v87 = sub_24212F968(v71, v72, &v88);
    sub_242132A38();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2048;
    swift_beginAccess();
    v73 = *(_QWORD *)(v63 + 16);
    swift_release();
    v86 = v73;
    sub_242132A38();
    swift_release();
    _os_log_impl(&dword_242074000, v64, v65, "%s async: method returned non-nil result, num connection attempts: %lu", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2426A4194](v70, -1, -1);
    MEMORY[0x2426A4194](v69, -1, -1);

    (*(void (**)(char *, uint64_t))(v83 + 8))(v79, v84);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v60, v67);
  }
  v77 = v81;
  v78 = v85;
  (*(void (**)(_QWORD *, char *, uint64_t))(v46 + 16))(v80, v85, v81);
  sub_24208C304((uint64_t *)&unk_254399A80);
  sub_242132900();
  sub_2421328F4();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v78, v77);
}

#error "24212D7B4: call analysis failed (funcsize=8)"

#error "24212D7D4: call analysis failed (funcsize=8)"

#error "24212D814: call analysis failed (funcsize=24)"

uint64_t sub_24212D844@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *a1;
  swift_unknownObjectWeakInit();
  return swift_unknownObjectRelease();
}

void BidirectionalXPCServiceClientConnection.__allocating_init(existingConnection:localObject:delegate:)(void *a1)
{
  sub_24207F538();
  BidirectionalXPCServiceClientConnection.init(existingConnection:localObject:delegate:)(a1);
}

uint64_t sub_24212D8C4()
{
  uint64_t v0;

  return v0;
}

void BidirectionalXPCServiceClientConnection.init(existingConnection:localObject:delegate:)(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  _BYTE v8[16];

  v3 = *v1;
  v1[5] = 0;
  sub_242132270();
  v1[3] = (uint64_t)a1;
  LOBYTE(v7[0]) = 0;
  v4 = a1;
  swift_unknownObjectRetain();
  v5 = *(_OWORD *)(v3 + 96);
  v6 = *(_OWORD *)(v3 + 80);
  sub_24212D844(v7, v8);
  v7[0] = v6;
  v7[1] = v5;
  type metadata accessor for BidirectionalXPCServiceClientConnection.State();
}

uint64_t sub_24212D96C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;

  v6 = sub_24212A43C((uint64_t)&v8, a1);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 40) = v4;
  swift_unknownObjectWeakAssign();
  sub_24213217C();
  sub_24212F7A8((void (*)(uint64_t))sub_24212FFCC, v1, v6, a1, MEMORY[0x24BEE4AE0] + 8);
  if (v2)
    sub_242097A18();
  sub_242131994();

  sub_2420C1440();
  sub_242131690();
  return v1;
}

uint64_t sub_24212DA00(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t result;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  uint64_t aBlock;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;
  void (*v25)();
  _QWORD *v26;

  v4 = (_QWORD *)*v1;
  if (MEMORY[0x2426A423C](v1 + 4))
  {
    v5 = v1[5];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    if (v2 || *a1)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      v8 = (void *)v1[3];
      v9 = v4[11];
      v20 = v4[13];
      v10 = static XPCService.xpcInterface()();
      objc_msgSend(v8, sel_setRemoteObjectInterface_, v10);

      v11 = v4[10];
      v12 = v4[12];
      v13 = static XPCService.xpcInterface()();
      objc_msgSend(v8, sel_setExportedInterface_, v13);

      objc_msgSend(v8, sel_setExportedObject_, MEMORY[0x2426A423C](a1 + 8));
      swift_unknownObjectRelease();
      v14 = swift_allocObject();
      swift_weakInit();
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = v11;
      v15[3] = v9;
      v15[4] = v12;
      v15[5] = v20;
      v15[6] = v14;
      v25 = sub_24213098C;
      v26 = v15;
      aBlock = MEMORY[0x24BDAC760];
      v22 = 1107296256;
      v23 = sub_242129EF0;
      v24 = &unk_2513268C0;
      v16 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v8, sel_setInterruptionHandler_, v16);
      _Block_release(v16);
      v17 = swift_allocObject();
      swift_weakInit();
      v18 = (_QWORD *)swift_allocObject();
      v18[2] = v11;
      v18[3] = v9;
      v18[4] = v12;
      v18[5] = v20;
      v18[6] = v17;
      v25 = sub_242130998;
      v26 = v18;
      aBlock = MEMORY[0x24BDAC760];
      v22 = 1107296256;
      v23 = sub_242129EF0;
      v24 = &unk_2512FB8D0;
      v19 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v8, sel_setInvalidationHandler_, v19);
      _Block_release(v19);
      objc_msgSend(v8, sel_resume);
      result = swift_unknownObjectRelease();
      *a1 = 1;
    }
  }
  else
  {
    result = sub_242132B94();
    __break(1u);
  }
  return result;
}

void BidirectionalXPCServiceClientConnection.__allocating_init(localObject:delegate:)()
{
  sub_24207F538();
  BidirectionalXPCServiceClientConnection.init(localObject:delegate:)();
}

uint64_t sub_24212DD44()
{
  uint64_t v0;

  return v0;
}

void BidirectionalXPCServiceClientConnection.init(localObject:delegate:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  _BYTE v10[16];

  v1 = (_QWORD *)*v0;
  v0[5] = 0;
  v2 = sub_242132270();
  sub_2421320F0(v2, &qword_2571A1500);
  v3 = v1[11];
  v4 = v1[13];
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v0[3] = sub_24212B050(v5, v6, 0);
  LOBYTE(v9[0]) = 0;
  v7 = v1[10];
  v8 = v1[12];
  sub_242131BD8();
  sub_24212D844(v9, v10);
  v9[0] = v7;
  v9[1] = v3;
  v9[2] = v8;
  v9[3] = v4;
  type metadata accessor for BidirectionalXPCServiceClientConnection.State();
}

uint64_t sub_24212DE18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD v7[14];

  v3 = sub_24212A43C((uint64_t)v7, a1);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 40) = v6;
  swift_unknownObjectWeakAssign();
  sub_2421315B4();
  v4 = v7[3];
  sub_24212F7A8((void (*)(uint64_t))sub_242130E9C, v1, v3, a1, MEMORY[0x24BEE4AE0] + 8);
  if (v4)
    sub_2420AA15C();
  sub_242097A18();
  sub_242131658();
  sub_2420C1440();
  return v1;
}

uint64_t BidirectionalXPCServiceClientConnection.deinit(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + 24);
  v3 = sub_242132298(a1, sel_setInterruptionHandler_);
  sub_242132298((uint64_t)v3, sel_setInvalidationHandler_);
  objc_msgSend(v2, sel_invalidate);
  sub_24207F718();

  sub_24212FF84(v1 + 32);
  return v1;
}

uint64_t BidirectionalXPCServiceClientConnection.__deallocating_deinit(uint64_t a1)
{
  BidirectionalXPCServiceClientConnection.deinit(a1);
  sub_2421321EC();
  return swift_deallocClassInstance();
}

ModelCatalog::ConnectionState __swiftcall BidirectionalXPCServiceClientConnection.getCurrentConnectionState()()
{
  type metadata accessor for BidirectionalXPCServiceClientConnection.State();
}

void sub_24212DF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242131EE0((void (*)(uint64_t))sub_24212FFE0, (uint64_t)&v2, v1, a1, (uint64_t)&type metadata for ConnectionState);
}

BOOL static ConnectionState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_24212DFB4()
{
  uint64_t Strong;

  sub_242079EE8();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    MEMORY[0x24BDAC7A8](Strong);
    sub_24213217C();
    type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  }
  sub_242097670();
}

void sub_24212E0C0(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), const char *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v11 = sub_24207F4AC();
  v21 = *(_QWORD *)(v11 - 8);
  v22 = v11;
  MEMORY[0x24BDAC7A8](v11);
  sub_24207F540();
  v14 = v13 - v12;
  (*(void (**)(uint64_t, uint64_t))(a5 + 56))(a3, a5);
  v15 = sub_242131720();
  v16 = a6();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)sub_24210CA3C();
    v23 = sub_2421310D0();
    *(_DWORD *)v17 = 136315138;
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
    sub_24212F968(v18, v19, &v23);
    sub_242132A38();
    sub_242097830();
    sub_242131B30(&dword_242074000, v15, v16, a7, v17);
    sub_24210CC58();
    sub_24210C9C4();
  }

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v14, v22);
  *a1 = 2;
  sub_2420970A0();
}

void BidirectionalXPCServiceClientConnection.call<A>(_:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  sub_24207F540();
  type metadata accessor for BidirectionalXPCServiceClientConnection.State();
}

void sub_24212E2C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;

  v11 = sub_2421320F0(a1, &qword_2571A1500);
  sub_24212F7A8((void (*)(uint64_t))sub_24212FFEC, v9 - 160, v6, a1, v11);
  if (!v4)
  {
    *(_QWORD *)(v9 - 176) = v8;
    *(_QWORD *)(v9 - 192) = v5;
    v12 = *(void **)(v9 - 72);
    v13 = sub_242079F48();
    *(_QWORD *)(v13 + 16) = 0;
    v14 = (_QWORD *)sub_24207F538();
    v14[2] = v1;
    v14[3] = v2;
    v14[4] = v13;
    *(_QWORD *)(v9 - 96) = sub_242130008;
    *(_QWORD *)(v9 - 88) = v14;
    *(_QWORD *)(v9 - 128) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v9 - 120) = 1107296256;
    *(_QWORD *)(v9 - 112) = sub_24212C31C;
    *(_QWORD *)(v9 - 104) = &unk_251326820;
    v15 = _Block_copy((const void *)(v9 - 128));
    sub_2421315B4();
    sub_242131BA4();
    sub_24211B22C();
    *(_QWORD *)(v9 - 184) = v12;
    v16 = objc_msgSend(v12, sel_synchronousRemoteObjectProxyWithErrorHandler_, v15);
    _Block_release(v15);
    v17 = swift_unknownObjectRetain();
    v7(v17);
    sub_24211B120();
    v18 = *(void **)(v13 + 16);
    if (v18)
    {
      v19 = v18;
      swift_willThrow();

      sub_242131C54();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 176) + 8))(v3, v1);
      sub_2420C0F44();
      sub_242131C54();
    }
    else
    {

      sub_242131424();
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 176) + 32))(*(_QWORD *)(v9 - 192), v3, v1);
      sub_2420C0F44();
    }
  }
  sub_2420970A0();
}

void BidirectionalXPCServiceClientConnection.call<A>(_:)()
{
  uint64_t v0;

  v0 = sub_242132374();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for BidirectionalXPCServiceClientConnection.State();
}

void sub_24212E500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;

  v11 = sub_2421320F0(a1, &qword_2571A1500);
  sub_24212F7A8((void (*)(uint64_t))sub_242130FD4, v9 - 224, v4, a1, v11);
  if (!v3)
  {
    *(_QWORD *)(v9 - 312) = 0;
    *(_QWORD *)(v9 - 296) = v5;
    *(_QWORD *)(v9 - 288) = v8;
    *(_QWORD *)(v9 - 304) = v7;
    v12 = *(void **)(v9 - 160);
    v13 = sub_242079F48();
    *(_QWORD *)(v13 + 16) = 0;
    v14 = (id *)(v13 + 16);
    v15 = (_QWORD *)sub_24207F538();
    v15[2] = v1;
    v15[3] = v2;
    v15[4] = v13;
    *(_QWORD *)(v9 - 104) = sub_242130058;
    *(_QWORD *)(v9 - 96) = v15;
    *(_QWORD *)(v9 - 136) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v9 - 128) = 1107296256;
    *(_QWORD *)(v9 - 120) = sub_24212C31C;
    *(_QWORD *)(v9 - 112) = &unk_251326870;
    v16 = _Block_copy((const void *)(v9 - 136));
    sub_2421315B4();
    *(_QWORD *)(v9 - 280) = v13;
    swift_retain();
    sub_24211B22C();
    *(_QWORD *)(v9 - 272) = v12;
    v17 = objc_msgSend(v12, sel_synchronousRemoteObjectProxyWithErrorHandler_, v16);
    _Block_release(v16);
    v18 = swift_allocBox();
    v20 = v19;
    sub_24207E8A8(v19, 1, 1, v1);
    v21 = sub_242079F48();
    *(_QWORD *)(v21 + 16) = 0;
    v22 = (_QWORD *)sub_24207F538();
    v22[2] = *(_QWORD *)(v9 - 264);
    v22[3] = v6;
    v23 = *(_QWORD *)(v9 - 248);
    v22[4] = v1;
    v22[5] = v23;
    v22[6] = *(_QWORD *)(v9 - 256);
    v22[7] = v18;
    v22[8] = v21;
    swift_unknownObjectRetain();
    sub_2421315B4();
    sub_242131BA4();
    (*(void (**)(id, void (*)(uint64_t, void *), _QWORD *))(v9 - 232))(v17, sub_2421300A8, v22);
    swift_release();
    sub_24211B120();
    if (*v14)
    {
      v24 = *v14;
      swift_willThrow();
      sub_2421313AC(v9 - 16);
      sub_2421310E4();
      sub_242131424();
      sub_242132034();
      sub_2420C0F44();
    }
    else
    {
      *(_QWORD *)(v9 - 232) = v21;
      v25 = *(void **)(v9 - 272);
      v26 = *(_QWORD *)(v9 - 72);
      sub_24211B120();
      if (*(_QWORD *)(v21 + 16))
      {
        sub_242131580();
        swift_willThrow();

        sub_2421310E4();
        sub_242131424();
      }
      else
      {
        *(_QWORD *)(v9 - 240) = v18;
        sub_24211B120();
        v27 = *(_QWORD *)(v9 - 296);
        v28 = *(_QWORD *)(v9 - 288);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v28, v20, v26);
        if (sub_2420801D0(v28, 1, v1) != 1)
        {

          sub_242131424();
          (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(*(_QWORD *)(v9 - 304), v28, v1);
          sub_2421310E4();
          swift_release();
          swift_release();
          goto LABEL_9;
        }
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
        sub_24207F02C();
        v29 = sub_2420970E4();
        sub_242131468(v29, v30);

        sub_2421310E4();
        sub_242131424();
      }
      swift_release();
      swift_release();
    }
  }
LABEL_9:
  sub_2420970A0();
}

void sub_24212E860(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  v33 = a4;
  v34 = a5;
  v6 = *a2;
  v7 = sub_24213263C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_24207F540();
  v11 = v10 - v9;
  v12 = *(_QWORD *)(v6 + 88);
  v32 = v6;
  v13 = *(_QWORD *)(v6 + 104);
  (*(void (**)(uint64_t, uint64_t))(v13 + 56))(v12, v13);
  sub_24210CD34();
  sub_24210CD34();
  v14 = sub_242132618();
  v15 = sub_24213299C();
  if (os_log_type_enabled(v14, v15))
  {
    v30 = v8;
    v16 = sub_24210CA3C();
    v27 = (_QWORD *)sub_24210CA3C();
    v29 = sub_24210CA3C();
    v36[0] = v29;
    *(_DWORD *)v16 = 136315394;
    v31 = a3;
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
    v26 = v14;
    v18 = v17(v12, v13);
    sub_24212F968(v18, v19, v36);
    v28 = v7;
    sub_242132A38();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2112;
    sub_24210CD34();
    v35 = _swift_stdlib_bridgeErrorToNSError();
    sub_242132A38();
    *v27 = v35;
    sub_24210CAEC();
    sub_24210CAEC();
    _os_log_impl(&dword_242074000, v26, v15, "%s: error during call: %@.", (uint8_t *)v16, 0x16u);
    sub_2420797C0(&qword_254399B50);
    sub_2421323B8();
    sub_24210C9C4();
  }
  sub_24210CAEC();
  sub_24210CAEC();

  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  MEMORY[0x24BDAC7A8](v20);
  v21 = v32;
  v22 = v33;
  v23 = *(_QWORD *)(v32 + 80);
  *(&v25 - 6) = v23;
  *(&v25 - 5) = v12;
  v24 = *(_QWORD *)(v21 + 96);
  *(&v25 - 4) = v22;
  *(&v25 - 3) = v24;
  *(&v25 - 2) = v13;
  v36[0] = v23;
  v36[1] = v12;
  v36[2] = v24;
  v36[3] = v13;
  type metadata accessor for BidirectionalXPCServiceClientConnection.State();
}

void sub_24212EAE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  sub_242131EE0(*(void (**)(uint64_t))(v5 - 136), v3, v2, a1, MEMORY[0x24BEE4AE0] + 8);
  sub_242131BB8();
  v6 = *(void **)(v4 + 16);
  *(_QWORD *)(v4 + 16) = v1;

  sub_24210CD34();
  sub_242097670();
}

void sub_24212EB30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v7 = sub_242132A2C();
  v8 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v8, a1, v7);
  swift_beginAccess();
  v9 = *(void **)(a4 + 16);
  *(_QWORD *)(a4 + 16) = a2;
  v10 = a2;

}

uint64_t BidirectionalXPCServiceClientConnection.call<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = *v4;
  return sub_242131F80();
}

void sub_24212EC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v2 + 96);
  type metadata accessor for BidirectionalXPCServiceClientConnection.State();
}

uint64_t sub_24212EC5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD *v17;

  v6 = sub_242130AFC(0, &qword_2571A1500);
  sub_242131EE0((void (*)(uint64_t))sub_242130FD4, v2, v1, a1, v6);
  sub_242131FFC();
  if (v3)
    return (*(uint64_t (**)(void))(v4 + 8))();
  *(_QWORD *)(v4 + 104) = *(_QWORD *)(v4 + 48);
  v8 = swift_task_alloc();
  *(_QWORD *)(v4 + 112) = v8;
  sub_24213225C(v8, v9, v10, v11, v12, v13, v14, v15, v16);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 120) = v17;
  *v17 = v4;
  v17[1] = sub_24212ED4C;
  sub_242132164();
  return sub_242132D20();
}

uint64_t sub_24212ED4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return sub_242131F58();
}

uint64_t sub_24212EDB0()
{
  uint64_t v0;

  return sub_24213187C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24212EDDC()
{
  uint64_t v0;

  sub_242131FFC();
  return sub_24213187C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_24212EE0C(_BYTE *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _BYTE *v7;
  void *v8;
  id v9;

  sub_24212DA00(a1);
  if (!v3)
  {
    if (*a1 == 2)
    {
      sub_24207F02C();
      sub_2420970E4();
      *v7 = 1;
      sub_2420A197C();
    }
    else
    {
      v8 = *(void **)(a2 + 24);
      *a3 = v8;
      v9 = v8;
    }
  }
  sub_2421323AC();
}

uint64_t sub_24212EE80(uint64_t a1, void *a2, _QWORD *a3, void (*a4)(uint64_t, uint64_t (*)(), char *), uint64_t a5, uint64_t a6)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  id v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t (*)(), char *);
  _QWORD aBlock[6];

  v33 = a5;
  v34 = a4;
  v31 = a1;
  v32 = a2;
  v9 = (_QWORD *)*a3;
  sub_24208C304((uint64_t *)&unk_254399A80);
  v10 = a6;
  v27 = a6;
  v11 = sub_242132900();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - v13;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v30((char *)&v25 - v13, a1, v11);
  v15 = *(unsigned __int8 *)(v12 + 80);
  v29 = v15 | 7;
  v16 = (char *)swift_allocObject();
  v28 = v9[10];
  *((_QWORD *)v16 + 2) = v28;
  v26 = v9[11];
  *((_QWORD *)v16 + 3) = v26;
  *((_QWORD *)v16 + 4) = v10;
  v17 = v9[12];
  *((_QWORD *)v16 + 5) = v17;
  v25 = v9[13];
  *((_QWORD *)v16 + 6) = v25;
  *((_QWORD *)v16 + 7) = a3;
  v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v18(&v16[(v15 + 64) & ~v15], v14, v11);
  aBlock[4] = sub_2421307E8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24212C31C;
  aBlock[3] = &unk_25132F178;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v32, sel_remoteObjectProxyWithErrorHandler_, v19);
  _Block_release(v19);
  v30(v14, v31, v11);
  v21 = (char *)swift_allocObject();
  v22 = v26;
  *((_QWORD *)v21 + 2) = v28;
  *((_QWORD *)v21 + 3) = v22;
  *((_QWORD *)v21 + 4) = v27;
  *((_QWORD *)v21 + 5) = v17;
  *((_QWORD *)v21 + 6) = v25;
  v18(&v21[(v15 + 56) & ~v15], v14, v11);
  v23 = swift_unknownObjectRetain();
  v34(v23, sub_2421308C4, v21);
  swift_release();
  return swift_unknownObjectRelease_n();
}

void sub_24212F0C0(void *a1, _QWORD *a2, uint64_t a3, NSObject *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[5];

  v33 = a3;
  v35 = a2;
  v6 = *a2;
  v7 = sub_24213263C();
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(NSObject **)(v6 + 88);
  v36 = v6;
  v11 = *(_QWORD *)(v6 + 104);
  (*(void (**)(NSObject *, uint64_t))(v11 + 56))(v10, v11);
  v12 = a1;
  v13 = a1;
  v14 = sub_242132618();
  v15 = sub_24213299C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v29 = v14;
    v17 = v16;
    v18 = (_QWORD *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v38[0] = v30;
    *(_DWORD *)v17 = 136315394;
    v31 = v7;
    v19 = (*(uint64_t (**)(NSObject *, uint64_t))(v11 + 24))(v10, v11);
    v37 = sub_24212F968(v19, v20, v38);
    v32 = a4;
    sub_242132A38();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2112;
    v21 = a1;
    v22 = _swift_stdlib_bridgeErrorToNSError();
    v37 = v22;
    a4 = v32;
    sub_242132A38();
    *v18 = v22;

    v23 = v29;
    _os_log_impl(&dword_242074000, v29, v15, "%s: error during call: %@.", (uint8_t *)v17, 0x16u);
    sub_2420797C0(&qword_254399B50);
    swift_arrayDestroy();
    MEMORY[0x2426A4194](v18, -1, -1);
    v24 = v30;
    swift_arrayDestroy();
    MEMORY[0x2426A4194](v24, -1, -1);
    MEMORY[0x2426A4194](v17, -1, -1);

    v25 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v9, v31);
  }
  else
  {

    v25 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v9, v7);
  }
  MEMORY[0x24BDAC7A8](v25);
  v26 = v36;
  v27 = *(NSObject **)(v36 + 80);
  *(&v29 - 6) = v27;
  *(&v29 - 5) = v10;
  v28 = *(NSObject **)(v26 + 96);
  *(&v29 - 4) = a4;
  *(&v29 - 3) = v28;
  *(&v29 - 2) = (os_log_t)v11;
  v38[0] = (uint64_t)v27;
  v38[1] = (uint64_t)v10;
  v38[2] = (uint64_t)v28;
  v38[3] = v11;
  type metadata accessor for BidirectionalXPCServiceClientConnection.State();
}

uint64_t sub_24212F394(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  sub_24212F7A8((void (*)(uint64_t))sub_2421310A4, v2, v1, a1, MEMORY[0x24BEE4AE0] + 8);
  *(_QWORD *)(v4 - 120) = v3;
  v5 = v3;
  sub_24208C304((uint64_t *)&unk_254399A80);
  sub_242132900();
  return sub_2421328E8();
}

uint64_t sub_24212F420(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v24;
  uint64_t v25;

  v9 = sub_242132A2C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  v14 = *(_QWORD *)(a6 - 8);
  v15 = MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v24 - v18;
  if (a2)
  {
    v25 = (uint64_t)a2;
    v20 = a2;
LABEL_5:
    sub_24208C304((uint64_t *)&unk_254399A80);
    sub_242132900();
    return sub_2421328E8();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if (sub_2420801D0((uint64_t)v13, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_24207F02C();
    v21 = swift_allocError();
    *v22 = 2;
    v25 = v21;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v13, a6);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, a6);
  sub_24208C304((uint64_t *)&unk_254399A80);
  sub_242132900();
  sub_2421328F4();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, a6);
}

void sub_24212F604()
{
  BidirectionalXPCServiceClientConnection.getCurrentConnectionState()();
}

void sub_24212F624(uint64_t a1)
{
  BidirectionalXPCServiceClientConnection.call<A>(_:)(a1);
}

void sub_24212F644()
{
  BidirectionalXPCServiceClientConnection.call<A>(_:)();
}

uint64_t sub_24212F664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_24212F6E0;
  return BidirectionalXPCServiceClientConnection.call<A>(_:)(a1, a2, a3, a4);
}

uint64_t sub_24212F6E0()
{
  uint64_t v0;

  sub_242131E58();
  return sub_24213187C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ConnectionState.hash(into:)()
{
  return sub_242132D80();
}

void _s12ModelCatalog15ConnectionStateO9hashValueSivg_0()
{
  sub_242132D74();
  sub_2420A267C();
  sub_242132D98();
  sub_24209725C();
}

void sub_24212F778()
{
  sub_242132D74();
  sub_2420A267C();
  sub_242132D98();
  sub_24209725C();
}

void sub_24212F7A8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_24212F810(a3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_24212F810(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7)
    *a7 = v7;
}

uint64_t sub_24212F890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for os_unfair_lock_s();
  sub_242132B1C();
  v4 = sub_242132B10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t sub_24212F914@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + *MEMORY[0x24BEE27A8]) - 8) + 16))(a2);
}

uint64_t sub_24212F968(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_24212FA38(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2420A99D4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2420A99D4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_242079824((uint64_t)v12);
  return v7;
}

uint64_t sub_24212FA38(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_24212FB8C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_242132A44();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_24212FC50(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_242132B28();
    if (!v8)
    {
      result = sub_242132B88();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_24212FB8C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_242132BC4();
  __break(1u);
  return result;
}

uint64_t sub_24212FC50(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_24212FCE4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_24212FE54(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_24212FE54((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24212FCE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_242132804();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  sub_242118008(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_242132AE0();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_242132BC4();
  __break(1u);
LABEL_14:
  result = sub_242132B88();
  __break(1u);
  return result;
}

char *sub_24212FE54(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2420797C0(qword_254399220);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_24210B878(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24210BD54(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24212FF28(uint64_t a1)
{
  return sub_2421300E4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24212C628);
}

id *sub_24212FF34@<X0>(id *result@<X0>, BOOL *a2@<X8>)
{
  id v3;

  v3 = *result;
  if (*result)
    result = (id *)objc_msgSend(*result, sel_invalidate);
  *a2 = v3 == 0;
  return result;
}

uint64_t sub_24212FF84(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

void sub_24212FFA8(id *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_24212C5C0(a1, a2);
}

void type metadata accessor for BidirectionalXPCServiceClientConnection.State()
{
  JUMPOUT(0x2426A408CLL);
}

uint64_t sub_24212FFCC(_BYTE *a1)
{
  return sub_24212DA00(a1);
}

_BYTE *sub_24212FFE0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_24212FFEC(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_24212EE0C(a1, *(_QWORD *)(v2 + 24), a2);
}

void sub_242130008(uint64_t a1)
{
  uint64_t v1;

  sub_24212E860(a1, *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), (uint64_t)sub_242130A20);
}

uint64_t sub_242130030()
{
  sub_2421322C8();
  swift_release();
  return swift_deallocObject();
}

void sub_242130058(uint64_t a1)
{
  uint64_t v1;

  sub_24212E860(a1, *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), (uint64_t)sub_2421310A4);
}

uint64_t sub_24213007C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2421300A8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_24212EB30(a1, a2, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_2421300D8(uint64_t a1)
{
  return sub_2421300E4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24212EE80);
}

uint64_t sub_2421300E4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[3], v2[4], v2[5], v2[6], v2[2]);
}

uint64_t sub_2421300F8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_242130100(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_242130108(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 104);
}

unint64_t sub_242130114()
{
  unint64_t result;

  result = qword_2571A1528;
  if (!qword_2571A1528)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ConnectionState, &type metadata for ConnectionState);
    atomic_store(result, (unint64_t *)&qword_2571A1528);
  }
  return result;
}

unint64_t sub_242130154()
{
  unint64_t result;

  result = qword_2571A1530;
  if (!qword_2571A1530)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for XPCServiceError, &type metadata for XPCServiceError);
    atomic_store(result, (unint64_t *)&qword_2571A1530);
  }
  return result;
}

uint64_t dispatch thunk of static XPCService.serviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static XPCService.entitlementName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static XPCService.otherAcceptedEntitlementNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static XPCService.selectorClasses.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static XPCService.logger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of static XPCService.customize(serverInterface:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ServiceConnectionProtocol.call<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ServiceConnectionProtocol.call<A>(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_242132018();
  v1 = (_QWORD *)sub_24207F5E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_242131E78(v1);
  return sub_242131E34(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t dispatch thunk of BidirectionalServiceConnectionProtocol.getCurrentConnectionState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BidirectionalServiceConnectionProtocol.call<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of BidirectionalServiceConnectionProtocol.call<A>(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_242132018();
  v1 = (_QWORD *)sub_24207F5E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_242131E78(v1);
  return sub_242131E34(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2421302C0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for XPCServiceClientConnection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2420C0688(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCServiceClientConnection);
}

uint64_t method lookup function for XPCServiceClientConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCServiceClientConnection.__allocating_init(delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of XPCServiceClientConnectionDelegate.xpcConnectionIsAllowed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_242130354()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for BidirectionalXPCServiceClientConnection()
{
  JUMPOUT(0x2426A408CLL);
}

uint64_t method lookup function for BidirectionalXPCServiceClientConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BidirectionalXPCServiceClientConnection.__allocating_init(existingConnection:localObject:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of BidirectionalXPCServiceClientConnection.__allocating_init(localObject:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of InitializableFromExistingConnection.init(existingConnection:localObject:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

ValueMetadata *type metadata accessor for ConnectionState()
{
  return &type metadata for ConnectionState;
}

uint64_t _s12ModelCatalog15ConnectionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242130478 + 4 * byte_242164205[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2421304AC + 4 * byte_242164200[v4]))();
}

uint64_t sub_2421304AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421304B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421304BCLL);
  return result;
}

uint64_t sub_2421304C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421304D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2421304D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421304DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCServiceError()
{
  return &type metadata for XPCServiceError;
}

uint64_t sub_2421304F8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_242130500()
{
  return swift_unknownObjectWeakDestroy();
}

_BYTE *sub_242130508(_BYTE *a1, _BYTE *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyInit();
  return a1;
}

_BYTE *sub_242130534(_BYTE *a1, _BYTE *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

_BYTE *sub_242130560(_BYTE *a1, _BYTE *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeInit();
  return a1;
}

_BYTE *sub_24213058C(_BYTE *a1, _BYTE *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

uint64_t sub_2421305B8(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFE && a1[16])
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 3;
      v2 = v3 - 3;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2421305F4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

void **sub_242130634(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void sub_242130660(id *a1)
{

}

void **sub_242130668(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *sub_24213069C(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **sub_2421306A8(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_2421306D8(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24213072C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_24213077C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_242130788()
{
  sub_24208C304((uint64_t *)&unk_254399A80);
  sub_242131F2C();
  sub_242132060();
  swift_release();
  sub_24207F730();
  return sub_242131EF4();
}

void sub_2421307E8(void *a1)
{
  uint64_t v1;
  NSObject *v3;
  uint64_t v4;

  v3 = *(NSObject **)(v1 + 32);
  sub_24208C304((uint64_t *)&unk_254399A80);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_242132394() - 8) + 80);
  sub_24212F0C0(a1, *(_QWORD **)(v1 + 56), v1 + ((v4 + 64) & ~v4), v3);
}

uint64_t sub_24213084C()
{
  uint64_t v0;
  uint64_t v1;

  sub_24208C304((uint64_t *)&unk_254399A80);
  v1 = sub_242131F2C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2421308C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  sub_24208C304((uint64_t *)&unk_254399A80);
  sub_242132388();
  v4 = sub_24207F7AC();
  return sub_24212F420(v4, v5, v6, v1, v2, v3);
}

uint64_t sub_242130950()
{
  swift_weakDestroy();
  sub_242131FEC();
  return swift_deallocObject();
}

uint64_t sub_24213096C()
{
  sub_2421322DC();
  return swift_deallocObject();
}

void sub_24213098C()
{
  sub_2421309A4();
}

void sub_242130998()
{
  sub_2421309A4();
}

void sub_2421309A4()
{
  sub_24212DFB4();
}

void sub_2421309C8(_BYTE *a1)
{
  uint64_t *v1;

  sub_24212E0C0(a1, v1[2], v1[3], v1[4], v1[5], MEMORY[0x24BEE7928], "%s: Connection to XPC Server invalidated.");
}

void sub_2421309F4(_BYTE *a1)
{
  uint64_t *v1;

  sub_24212E0C0(a1, v1[2], v1[3], v1[4], v1[5], MEMORY[0x24BEE7910], "%s: Connection to XPC Server interrupted.");
}

_BYTE *sub_242130A20(_BYTE *result)
{
  *result = 2;
  return result;
}

uint64_t sub_242130A2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242130A50()
{
  uint64_t *v0;

  return sub_24212B550(v0[4], v0[2], v0[3], (void (*)(uint64_t))sub_242130AB0);
}

uint64_t sub_242130A74()
{
  uint64_t *v0;

  return sub_24212B550(v0[4], v0[2], v0[3], (void (*)(uint64_t))sub_242130A98);
}

void sub_242130A98(id *a1)
{
  uint64_t v1;

  sub_24212B854(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_242130AB0(uint64_t a1)
{
  uint64_t v1;

  return sub_24212B2DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_242130AC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24212F914(a1, a2);
}

void sub_242130AE0(void **a1, uint64_t a2, _QWORD *a3)
{
  sub_24212C3B8(*a1, a2, a3);
}

uint64_t sub_242130AFC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_242130B34()
{
  uint64_t v0;

  return sub_24212B4B8(v0, (void (*)(os_unfair_lock_s *))sub_24212B0C8);
}

uint64_t sub_242130B54()
{
  uint64_t v0;

  return sub_24212B4B8(v0, (void (*)(os_unfair_lock_s *))sub_24212B628);
}

uint64_t sub_242130B74()
{
  sub_242131FEC();
  return swift_deallocObject();
}

uint64_t sub_242130B84()
{
  uint64_t v0;

  sub_24208C304((uint64_t *)&unk_254399A80);
  sub_242131F2C();
  sub_242132060();
  sub_2421322E4();
  sub_2421322DC();

  sub_24207F730();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242130C18(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 24);
  sub_24208C304((uint64_t *)&unk_254399A80);
  v4 = *(_QWORD *)(sub_242132394() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_24212C924(a1, *(uint64_t **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + v5, *(_QWORD **)v6, *(_QWORD *)(v6 + 8), v3);
}

uint64_t sub_242130C98()
{
  sub_24208C304((uint64_t *)&unk_254399A80);
  sub_242131F2C();
  sub_2421322E4();
  sub_24207F730();
  return sub_242131EF4();
}

uint64_t sub_242130D08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  sub_24208C304((uint64_t *)&unk_254399A80);
  sub_242132900();
  v4 = sub_24207F7AC();
  return sub_24212CF20(v4, v5, v6, v7, v1, v2, v3);
}

uint64_t sub_242130D90()
{
  sub_2421322C8();
  return swift_deallocObject();
}

uint64_t sub_242130DB0()
{
  uint64_t v0;

  sub_242131FEC();
  return swift_deallocObject();
}

void sub_242130DD4(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_242130AE0(a1, a2, *(_QWORD **)(v2 + 16));
}

void sub_242130DDC(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *);
  uint64_t v3;

  v2 = *(void (**)(uint64_t *))(v1 + 16);
  v3 = a1;
  v2(&v3);
  sub_2421323A0();
}

void sub_242130E14(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  sub_24212C420(*a1, a2, a3);
}

uint64_t sub_242130E2C()
{
  swift_bridgeObjectRelease();
  sub_242131FEC();
  return swift_deallocObject();
}

void sub_242130E50(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  sub_242130E14(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_242130E70()
{
  sub_24207F718();
  sub_2421322C8();
  return swift_deallocObject();
}

uint64_t sub_242130E9C(_BYTE *a1)
{
  return sub_24212FFCC(a1);
}

void sub_242130FC0(id *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_24212FFA8(a1, a2);
}

void sub_242130FD4(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_24212FFEC(a1, a2);
}

_BYTE *sub_2421310A4(_BYTE *a1)
{
  return sub_242130A20(a1);
}

uint64_t dispatch thunk of BidirectionalXPCServiceClientConnectionDelegate.xpcBidirectionalConnectionIsAllowed()(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of XPCServiceClientConnectionDelegate.xpcConnectionIsAllowed()(a1, a2);
}

uint64_t sub_2421310D0()
{
  return swift_slowAlloc();
}

void sub_2421310DC()
{
  void *v0;

}

uint64_t sub_2421310E4()
{
  return swift_release();
}

uint64_t sub_2421310EC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 344));
}

uint64_t sub_2421310F8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_242131104()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242131110@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

id sub_242131118()
{
  void *v0;

  return v0;
}

uint64_t sub_242131120(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_24212F968(v3, v4, a3);
}

uint64_t sub_24213112C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
  return sub_242132A38();
}

__n128 sub_242131174(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;

  *(_QWORD *)(v3 - 424) = v2;
  *(_QWORD *)(v3 - 168) = a1;
  result = *(__n128 *)(v3 - 480);
  *v1 = result.n128_u32[0];
  return result;
}

void sub_2421311A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 376) = v2;
  *(_QWORD *)(v5 - 416) = v1;
  *(_QWORD *)(v5 - 408) = v0;
  *(_QWORD *)(v5 - 496) = v4;
  *(_QWORD *)(v5 - 488) = v3;
}

__n128 sub_2421311D4(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;

  *(_QWORD *)(v3 - 376) = a1;
  *(_QWORD *)(v3 - 272) = a1;
  result = *(__n128 *)(v3 - 480);
  *v1 = result.n128_u32[0];
  *(_QWORD *)(v3 - 392) = v2;
  return result;
}

uint64_t sub_242131204()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_242131214()
{
  return sub_242132A38();
}

uint64_t sub_242131220()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 22) = 2048;
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(v1 - 392);
  return sub_242132A38();
}

void sub_242131248()
{
  uint64_t v0;

}

BOOL sub_242131254(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_242131268()
{
  return sub_242132A38();
}

uint64_t sub_24213127C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
  return sub_242132A38();
}

uint64_t sub_2421312A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v0 + 12) = 2048;
  *(_QWORD *)(v2 - 280) = v1;
  return sub_242132A38();
}

uint64_t sub_2421312C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v0 + 12) = 2048;
  *(_QWORD *)(v2 - 280) = v1;
  return sub_242132A38();
}

uint64_t sub_2421312E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v0 + 22) = 2048;
  *(_QWORD *)(v2 - 272) = v1;
  return sub_242132A38();
}

uint64_t sub_24213130C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_242131318()
{
  return swift_unknownObjectRelease_n();
}

void sub_242131324(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x20u);
}

void *sub_242131330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = v1;
  *(_QWORD *)(v2 - 144) = a1;
  return _Block_copy((const void *)(v2 - 168));
}

BOOL sub_24213133C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_24213134C(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = a1;
  *v1 = *(_OWORD *)(v2 - 448);
  return swift_bridgeObjectRetain();
}

void sub_24213136C()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 24));
}

uint64_t sub_24213138C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 336) = a3;
  *(_QWORD *)(v3 - 392) = a2;
  return sub_24213263C();
}

void sub_2421313AC(uint64_t a1@<X8>)
{

}

__n128 sub_2421313B4(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 - 376) = a1;
  *(_QWORD *)(v2 - 240) = a1;
  result = *(__n128 *)(v2 - 480);
  *v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_2421313D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 256) = v1;
  return swift_retain();
}

void sub_2421313E4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_2421313F8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_242131408()
{
  uint64_t v0;

  return sub_24212F968(*(_QWORD *)(v0 - 392), *(_QWORD *)(v0 - 336), (uint64_t *)(v0 - 168));
}

uint64_t sub_242131424()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_24213142C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 344) = result;
  *(_QWORD *)(v1 - 384) = *(_QWORD *)(result - 8);
  return result;
}

void sub_24213144C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x20u);
}

uint64_t sub_242131454(uint64_t a1, _BYTE *a2)
{
  *a2 = 2;
  return swift_willThrow();
}

uint64_t sub_242131468(uint64_t a1, _BYTE *a2)
{
  *a2 = 2;
  return swift_willThrow();
}

void sub_242131494(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_2421314A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 12) = 2048;
  *(_QWORD *)(v1 - 280) = *(_QWORD *)(v1 - 368);
  return sub_242132A38();
}

uint64_t sub_2421314CC()
{
  return sub_24213299C();
}

uint64_t sub_2421314D4()
{
  return sub_242132A38();
}

BOOL sub_2421314DC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_2421314EC()
{
  return swift_willThrow();
}

uint64_t sub_242131504@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = *(_QWORD *)(a1 - 256);
  return sub_242132A38();
}

uint64_t sub_242131534(uint64_t a1, uint64_t a2)
{
  sub_24207BF18(a1, a2);
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_242131554()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_242131560(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_24212F968(v3, v4, a3);
}

id sub_242131580()
{
  void *v0;

  return v0;
}

uint64_t sub_242131588(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

void sub_242131598()
{
  void *v0;

}

uint64_t sub_2421315B4()
{
  return swift_retain();
}

uint64_t sub_2421315BC()
{
  return sub_242132A38();
}

void sub_2421315C4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_2421315D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 22) = 2048;
  *(_QWORD *)(v1 - 272) = *(_QWORD *)(v1 - 376);
  return sub_242132A38();
}

BOOL sub_242131608()
{
  unint64_t v0;
  void *v1;

  return sub_24212BA50(v1, v0);
}

uint64_t sub_24213161C()
{
  return swift_arrayDestroy();
}

uint64_t sub_242131630(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease_n();
}

id sub_242131644@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 504) = v1;
  *(_QWORD *)(v3 - 512) = v2;
  return a1;
}

uint64_t sub_242131658()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_242131660()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 488);
}

void sub_242131678(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;

  *(__n128 *)(v2 - 448) = a1;
  *(_QWORD *)(v2 - 456) = v1 + 8;
}

uint64_t sub_242131690()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_242131698()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 22) = 2048;
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(v1 - 376);
  return sub_242132A38();
}

uint64_t sub_2421316C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = a1;
  return sub_24213263C();
}

void sub_2421316D8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 168) = a1;
  *(_QWORD *)(v1 - 160) = v2;
}

uint64_t sub_2421316F0()
{
  return sub_24213263C();
}

void sub_2421316FC(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_24213170C@<X0>(uint64_t (*a1)(_QWORD, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(*(_QWORD *)(v1 - 256), v2, v3);
}

uint64_t sub_242131720()
{
  return sub_242132618();
}

uint64_t sub_242131728()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 376) = v0;
  return swift_bridgeObjectRetain();
}

BOOL sub_24213173C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

BOOL sub_24213174C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_24213175C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v0 + 12) = 2048;
  *(_QWORD *)(v2 - 280) = v1;
  return sub_242132A38();
}

uint64_t sub_242131784()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_24213178C()
{
  return swift_retain();
}

id sub_24213179C(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  return objc_msgSend(v4, a2, v2, v3);
}

BOOL sub_2421317AC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_2421317BC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2421317CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 352) = v0;
  return swift_unknownObjectRetain();
}

uint64_t sub_2421317DC()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_2421317EC()
{
  return swift_willThrow();
}

id sub_2421317FC(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(*(id *)(v3 - 400), a2, v2);
}

void sub_24213180C(uint64_t a1)
{
  os_unfair_lock_s *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 400) = a1;
  os_unfair_lock_unlock(v1);
}

uint64_t sub_24213181C()
{
  return sub_242132768();
}

uint64_t sub_24213182C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_24213183C()
{
  return sub_242132A38();
}

void sub_242131848()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 22) = 2048;
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 - 96);
}

uint64_t sub_24213185C()
{
  return swift_willThrow();
}

uint64_t sub_24213187C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_242131888(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_242131898(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = a1;
  return sub_242132A38();
}

__n128 sub_2421318BC(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;

  *(_QWORD *)(v3 - 384) = v2;
  *(_QWORD *)(v3 - 168) = a1;
  result = *(__n128 *)(v3 - 416);
  *v1 = result.n128_u32[0];
  return result;
}

void sub_2421318E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 368) = v2;
  *(_QWORD *)(v4 - 376) = v0;
  *(_QWORD *)(v4 - 448) = v1;
  *(_QWORD *)(v4 - 432) = v3;
}

__n128 sub_24213190C(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 - 368) = a1;
  *(_QWORD *)(v2 - 272) = a1;
  result = *(__n128 *)(v2 - 416);
  *v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_242131934()
{
  return sub_242132618();
}

void sub_242131940(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_24213194C()
{
  return sub_242132618();
}

BOOL sub_242131954(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_242131964()
{
  return swift_bridgeObjectRelease();
}

void sub_242131974()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 24));
}

uint64_t sub_242131994()
{
  return swift_release();
}

__n128 sub_24213199C(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 - 368) = a1;
  *(_QWORD *)(v2 - 240) = a1;
  result = *(__n128 *)(v2 - 416);
  *v1 = result.n128_u32[0];
  return result;
}

void sub_2421319C0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_2421319C8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 344);
}

uint64_t sub_2421319D8()
{
  return sub_242132618();
}

void sub_2421319E4()
{
  const void *v0;

  _Block_release(v0);
}

unint64_t sub_2421319F0()
{
  return sub_24207F02C();
}

uint64_t sub_2421319FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 376) + 16))(v1, v0, v2);
}

uint64_t sub_242131A18()
{
  return swift_retain();
}

void sub_242131A20()
{
  sub_24212A554();
}

id sub_242131A2C@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 440) = v2;
  *(_QWORD *)(v4 - 456) = v1;
  *(_QWORD *)(v4 - 464) = v3;
  return a1;
}

uint64_t sub_242131A48()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 408);
}

uint64_t sub_242131A58(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = result;
  return result;
}

void sub_242131A84(float a1)
{
  float *v1;

  *v1 = a1;
}

BOOL sub_242131A94(void *a1, unint64_t a2)
{
  return sub_24212BA50(a1, a2);
}

uint64_t sub_242131A9C()
{
  return swift_arrayDestroy();
}

id sub_242131AA4(void *a1)
{
  uint64_t v1;

  return sub_24212C370(a1, v1);
}

uint64_t sub_242131AAC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242131ACC()
{
  return sub_24213299C();
}

uint64_t sub_242131AD4()
{
  return swift_unknownObjectRelease();
}

BOOL sub_242131ADC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_242131AEC()
{
  uint64_t (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(*(_QWORD *)(v2 - 280), v1);
}

uint64_t sub_242131B04@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_242131B14(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_242131B20()
{
  return swift_unknownObjectRetain();
}

void sub_242131B30(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t sub_242131B38()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_242131B70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_24212F968(v3, v4, a3);
}

unint64_t sub_242131B7C()
{
  return sub_24207F02C();
}

uint64_t sub_242131B84()
{
  return sub_242132618();
}

void sub_242131B8C()
{
  const void *v0;

  _Block_release(v0);
}

id sub_242131B94(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

void sub_242131B9C()
{
  sub_24212A554();
}

uint64_t sub_242131BA4()
{
  return swift_retain();
}

uint64_t sub_242131BAC@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_242131BB8()
{
  return swift_beginAccess();
}

uint64_t sub_242131BD0()
{
  return swift_release();
}

uint64_t sub_242131BD8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_242131BE0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 344);
}

void sub_242131BEC(float a1)
{
  float *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = a1;
  *(_QWORD *)(v3 - 368) = v2;
}

void sub_242131C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 424) = v0 + 8;
  *(_QWORD *)(v2 - 392) = v1;
}

void sub_242131C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 384) = v3;
  *(_QWORD *)(v6 - 400) = v0;
  *(_QWORD *)(v6 - 472) = v4;
  *(_QWORD *)(v6 - 464) = v5;
  *(_QWORD *)(v6 - 448) = v2;
  *(_QWORD *)(v6 - 456) = v1;
}

uint64_t sub_242131C54()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_242131C5C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 448);
}

uint64_t sub_242131C74()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 440);
}

void sub_242131C8C()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_242131C94()
{
  return sub_242132990();
}

uint64_t sub_242131C9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
  return sub_242132A38();
}

BOOL sub_242131CC8(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

void sub_242131CD0(os_unfair_lock_s *a1@<X8>)
{
  os_unfair_lock_lock(a1 + 6);
}

uint64_t sub_242131CDC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = result;
  return result;
}

uint64_t sub_242131CF4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 232) = a1;
  return sub_242132A38();
}

void sub_242131D1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(_DWORD *)v2 = *(_OWORD *)(v4 - 416);
  *(_QWORD *)(v2 + 4) = v3;
  *a1 = v1;

}

void sub_242131D44()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_242131D4C()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_242131D54()
{
  return swift_unknownObjectRelease();
}

void sub_242131D5C()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_242131D70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242131D7C()
{
  uint64_t v0;

  return v0;
}

void sub_242131D88()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 22) = 2048;
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 - 96);
}

uint64_t sub_242131D9C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 424);
}

uint64_t sub_242131DA8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 360);
}

uint64_t sub_242131DC0(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_242131DCC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = result;
  return result;
}

uint64_t sub_242131DD8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

void sub_242131DE4(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 - 480) = a1;
}

__n128 sub_242131DF0(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;

  *(_QWORD *)(v3 - 400) = a1;
  *(_QWORD *)(v3 - 272) = a1;
  result = *(__n128 *)(v3 - 432);
  *v1 = result.n128_u32[0];
  *(_QWORD *)(v3 - 432) = v2;
  return result;
}

uint64_t sub_242131E1C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_24212F968(a1, a2, (uint64_t *)(v2 - 168));
}

uint64_t sub_242131E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t sub_242131E58()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_242131E78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

__n128 sub_242131EA0(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;

  *(_QWORD *)(v3 - 400) = a1;
  *(_QWORD *)(v3 - 240) = a1;
  result = *(__n128 *)(v3 - 432);
  *v1 = result.n128_u32[0];
  *(_QWORD *)(v3 - 432) = v2;
  return result;
}

uint64_t sub_242131EC8()
{
  return sub_242132618();
}

uint64_t sub_242131ED4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 384);
}

void sub_242131EE0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24212F7A8(a1, a2, a3, a4, a5);
}

uint64_t sub_242131EF4()
{
  return swift_deallocObject();
}

uint64_t sub_242131F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 376) + 16))(v2, v0, v1);
}

id sub_242131F20(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_242131F2C()
{
  return sub_242132900();
}

void sub_242131F38(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_242131F44()
{
  return sub_242132618();
}

void sub_242131F4C(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 - 416) = a1;
}

uint64_t sub_242131F58()
{
  return swift_task_switch();
}

void sub_242131F64()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2048;
}

uint64_t sub_242131F78()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_242131F80()
{
  return swift_task_switch();
}

uint64_t sub_242131F8C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 472);
}

void sub_242131FAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 384) = v0;
}

uint64_t sub_242131FBC()
{
  uint64_t (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(*(_QWORD *)(v2 - 320), v1);
}

uint64_t sub_242131FE4()
{
  return sub_242132990();
}

uint64_t sub_242131FEC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242131FFC()
{
  return swift_task_dealloc();
}

uint64_t sub_242132004(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_242132034()
{
  return swift_release();
}

__n128 sub_24213203C(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 - 168) = a1;
  result = *(__n128 *)(v2 - 432);
  *v1 = result.n128_u32[0];
  return result;
}

uint64_t _s12ModelCatalog10XPCServiceP9interfaceSo8ProtocolCvgZTj_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

id sub_2421320C8@<X0>(const char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(a2 - 256), a1, v2);
}

uint64_t sub_2421320F0(uint64_t a1, unint64_t *a2)
{
  return sub_242130AFC(0, a2);
}

uint64_t sub_2421320F8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v0, v1);
}

uint64_t sub_24213210C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 336);
}

uint64_t sub_242132118(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  return v2;
}

void sub_242132130(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  *(_QWORD *)(v2 - 384) = v1 + 1;
}

uint64_t sub_242132148()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242132158()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24213217C()
{
  return swift_retain();
}

uint64_t sub_242132184()
{
  return swift_release();
}

uint64_t sub_24213218C()
{
  return swift_retain();
}

void sub_242132194()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

id sub_2421321A4()
{
  uint64_t v0;
  void *v1;

  *(_QWORD *)(v0 + 16) = v1;
  return v1;
}

id sub_2421321C4(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v4, v2);
}

__n128 sub_2421321D4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  uint64_t v3;
  __n128 result;

  *(_QWORD *)(a2 - 256) = a1;
  *(_QWORD *)(v3 - 168) = a1;
  result = *(__n128 *)(v3 - 384);
  *v2 = result.n128_u32[0];
  return result;
}

uint64_t sub_2421321EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2421321FC()
{
  return swift_weakInit();
}

void *sub_242132218@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = v1;
  *(_QWORD *)(v2 - 168) = a1;
  return _Block_copy((const void *)(v2 - 192));
}

uint64_t sub_242132230()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24213223C()
{
  return sub_242132A38();
}

void sub_242132248()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 22) = 2048;
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 - 96);
}

__n128 sub_24213225C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;

  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v9;
  result = a9;
  *(__n128 *)(a1 + 40) = a9;
  return result;
}

uint64_t sub_242132270()
{
  return swift_unknownObjectWeakInit();
}

_WORD *sub_242132278(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_242132284()
{
  return swift_retain();
}

uint64_t sub_24213228C(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  return result;
}

id sub_242132298(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 0);
}

void sub_2421322A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 368) = v0;
}

uint64_t sub_2421322BC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t sub_2421322C8()
{
  return swift_release();
}

id sub_2421322D0@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 480) = v1;
  return a1;
}

uint64_t sub_2421322DC()
{
  return swift_release();
}

uint64_t sub_2421322E4()
{
  return swift_release();
}

uint64_t sub_2421322EC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_24212F968(a1, a2, (uint64_t *)(v2 - 224));
}

uint64_t sub_2421322F8()
{
  uint64_t v0;

  return v0;
}

void sub_242132318()
{
  sub_24212A554();
}

uint64_t sub_242132324()
{
  return sub_242132A38();
}

uint64_t sub_242132330()
{
  return swift_release();
}

uint64_t sub_242132374()
{
  return sub_242132A2C();
}

uint64_t sub_242132380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for XPCServiceClientConnection.State(0, a2, a3, a4);
}

uint64_t sub_242132388()
{
  return sub_242132900();
}

uint64_t sub_242132394()
{
  return sub_242132900();
}

uint64_t sub_2421323B8()
{
  return swift_arrayDestroy();
}

uint64_t sub_2421323C4()
{
  return swift_retain();
}

id sub_2421323CC(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_2421323D8()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_2421323E4()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_2421323F0()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_2421323FC()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_242132408()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_242132414()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_242132420()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_24213242C()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_242132438()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_242132444()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_242132450()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_24213245C()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_242132468()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_242132474()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_242132480()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_24213248C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_242132498()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_2421324A4()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_2421324B0()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_2421324BC()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_2421324C8()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_2421324D4()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2421324E0()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_2421324EC()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_2421324F8()
{
  return MEMORY[0x24BDCDA70]();
}

uint64_t sub_242132504()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_242132510()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_24213251C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_242132528()
{
  return MEMORY[0x24BDCDB58]();
}

uint64_t sub_242132534()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_242132540()
{
  return MEMORY[0x24BDCDB68]();
}

uint64_t sub_24213254C()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_242132558()
{
  return MEMORY[0x24BDCDBD0]();
}

uint64_t sub_242132564()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_242132570()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_24213257C()
{
  return MEMORY[0x24BDCDC30]();
}

uint64_t sub_242132588()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_242132594()
{
  return MEMORY[0x24BDCDC60]();
}

uint64_t sub_2421325A0()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2421325AC()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2421325B8()
{
  return MEMORY[0x24BDCDD00]();
}

uint64_t sub_2421325C4()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_2421325D0()
{
  return MEMORY[0x24BDCDE78]();
}

uint64_t sub_2421325DC()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_2421325E8()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_2421325F4()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_242132600()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_24213260C()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_242132618()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_242132624()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_242132630()
{
  return MEMORY[0x24BEE78C8]();
}

uint64_t sub_24213263C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_242132648()
{
  return MEMORY[0x24BEE6440]();
}

uint64_t sub_242132654()
{
  return MEMORY[0x24BEE6448]();
}

uint64_t sub_242132660()
{
  return MEMORY[0x24BEE6450]();
}

uint64_t sub_24213266C()
{
  return MEMORY[0x24BEE6458]();
}

uint64_t sub_242132678()
{
  return MEMORY[0x24BEE6460]();
}

uint64_t sub_242132684()
{
  return MEMORY[0x24BEE6468]();
}

uint64_t sub_242132690()
{
  return MEMORY[0x24BEE6478]();
}

uint64_t sub_24213269C()
{
  return MEMORY[0x24BEE6480]();
}

uint64_t sub_2421326A8()
{
  return MEMORY[0x24BEE6488]();
}

uint64_t sub_2421326B4()
{
  return MEMORY[0x24BEE6490]();
}

uint64_t sub_2421326C0()
{
  return MEMORY[0x24BEE64B8]();
}

uint64_t sub_2421326CC()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_2421326D8()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2421326E4()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2421326F0()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2421326FC()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_242132708()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_242132714()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_242132720()
{
  return MEMORY[0x24BDCF910]();
}

uint64_t sub_24213272C()
{
  return MEMORY[0x24BDCF930]();
}

uint64_t sub_242132738()
{
  return MEMORY[0x24BDCF938]();
}

uint64_t sub_242132744()
{
  return MEMORY[0x24BDCF948]();
}

uint64_t sub_242132750()
{
  return MEMORY[0x24BDCF968]();
}

uint64_t sub_24213275C()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_242132768()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_242132774()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_242132780()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_24213278C()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_242132798()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_2421327A4()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_2421327B0()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_2421327BC()
{
  return MEMORY[0x24BDCFB20]();
}

uint64_t sub_2421327C8()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_2421327D4()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2421327E0()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_2421327EC()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2421327F8()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_242132804()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_242132810()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_24213281C()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_242132828()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_242132834()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_242132840()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_24213284C()
{
  return MEMORY[0x24BEE0CE8]();
}

uint64_t sub_242132858()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_242132864()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_242132870()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_24213287C()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_242132888()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_242132894()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2421328A0()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2421328AC()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2421328B8()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2421328C4()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2421328D0()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2421328DC()
{
  return MEMORY[0x24BEE1270]();
}

uint64_t sub_2421328E8()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_2421328F4()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_242132900()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_24213290C()
{
  return MEMORY[0x24BEE69F8]();
}

uint64_t sub_242132918()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_242132924()
{
  return MEMORY[0x24BEE6A38]();
}

uint64_t sub_242132930()
{
  return MEMORY[0x24BEE6AA0]();
}

uint64_t sub_24213293C()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_242132948()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_242132954()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_242132960()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_24213296C()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_242132978()
{
  return MEMORY[0x24BEE16C8]();
}

uint64_t sub_242132984()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_242132990()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_24213299C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2421329A8()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2421329B4()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_2421329C0()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_2421329CC()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_2421329D8()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_2421329E4()
{
  return MEMORY[0x24BDD00E8]();
}

uint64_t sub_2421329F0()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_2421329FC()
{
  return MEMORY[0x24BDD0180]();
}

uint64_t sub_242132A08()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_242132A14()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_242132A20()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_242132A2C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_242132A38()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_242132A44()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_242132A50()
{
  return MEMORY[0x24BDD0620]();
}

uint64_t sub_242132A5C()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_242132A68()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_242132A74()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_242132A80()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_242132A8C()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_242132A98()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_242132AA4()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_242132AB0()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_242132ABC()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_242132AC8()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_242132AD4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_242132AE0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_242132AEC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_242132AF8()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_242132B04()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_242132B10()
{
  return MEMORY[0x24BEE2788]();
}

uint64_t sub_242132B1C()
{
  return MEMORY[0x24BEE2798]();
}

uint64_t sub_242132B28()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_242132B34()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_242132B40()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_242132B4C()
{
  return MEMORY[0x24BEE2E68]();
}

uint64_t sub_242132B58()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_242132B64()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_242132B70()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_242132B7C()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_242132B88()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_242132B94()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_242132BA0()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_242132BAC()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_242132BB8()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_242132BC4()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_242132BD0()
{
  return MEMORY[0x24BEE3278]();
}

uint64_t sub_242132BDC()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_242132BE8()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_242132BF4()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_242132C00()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_242132C0C()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_242132C18()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_242132C24()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_242132C30()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_242132C3C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_242132C48()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_242132C54()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_242132C60()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_242132C6C()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_242132C78()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_242132C84()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_242132C90()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_242132C9C()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_242132CA8()
{
  return MEMORY[0x24BEE3438]();
}

uint64_t sub_242132CB4()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_242132CC0()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_242132CCC()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_242132CD8()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_242132CE4()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_242132CF0()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_242132CFC()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_242132D08()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_242132D14()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_242132D20()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_242132D2C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_242132D38()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_242132D44()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_242132D50()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_242132D5C()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_242132D68()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_242132D74()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_242132D80()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_242132D8C()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_242132D98()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_242132DA4()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_242132DB0()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_242132DBC()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_242132DC8()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t UAFSubscriptionDownloadStatusDescription()
{
  return MEMORY[0x24BEBEE90]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x24BDAF138](*(_QWORD *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x24BDAF160](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x24BDAF4D0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x24BEE4FB8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x24BEE4FC0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x24BEE4FE0]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x24BEE4FE8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x24BDB0660](xarray);
}

xpc_object_t xpc_array_get_value(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x24BDB06A0](xarray, index);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x24BDB06E0](xBOOL);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x24BDB0880](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x24BDB0888](xdata);
}

uint64_t xpc_date_get_value_absolute()
{
  return MEMORY[0x24BDB08A8]();
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x24BDB08B0](xdict, applier);
}

double xpc_double_get_value(xpc_object_t xdouble)
{
  double result;

  MEMORY[0x24BDB09F0](xdouble);
  return result;
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x24BDB0A70](object);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x24BDB0A88](xint);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x24BDB0BA8](xstring);
}

uint64_t xpc_uint64_get_value(xpc_object_t xuint)
{
  return MEMORY[0x24BDB0BE0](xuint);
}

const uint8_t *__cdecl xpc_uuid_get_bytes(xpc_object_t xuuid)
{
  return (const uint8_t *)MEMORY[0x24BDB0C00](xuuid);
}

