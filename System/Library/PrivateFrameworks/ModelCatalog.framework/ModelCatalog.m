uint64_t static Catalog.managedResource(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  char v55;
  uint64_t v56;
  __int16 v57;
  char v58;
  char v59;
  uint64_t v60;

  v2 = v1;
  if (qword_254397498 == -1)
    goto LABEL_2;
LABEL_40:
  swift_once();
LABEL_2:
  sub_242079F08();
  v4 = off_254397480;
  if (*((_QWORD *)off_254397480 + 2))
  {
    sub_242079ED8();
    v5 = sub_242079780();
    if ((v6 & 1) != 0)
    {
      sub_24207986C(v4[7] + 40 * v5, (uint64_t)&v45);
    }
    else
    {
      v47 = 0;
      v45 = 0u;
      v46 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
  }
  swift_endAccess();
  if (!*((_QWORD *)&v46 + 1))
  {
    sub_242079D74((uint64_t)&v45, &qword_254399C58);
    v48 = 0u;
    v49 = 0u;
    v50 = 0;
    goto LABEL_35;
  }
  sub_2420797C0((uint64_t *)&unk_254399948);
  sub_2420797C0(&qword_2543977C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    goto LABEL_35;
  }
  if (!*((_QWORD *)&v49 + 1))
  {
LABEL_35:
    result = sub_242079D74((uint64_t)&v48, &qword_25719D8E0);
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  v39 = a1;
  sub_242079E50(&v48, (uint64_t)v51);
  type metadata accessor for CatalogClient();
  sub_242079F48();
  CatalogClient.init()();
  *(_QWORD *)&v45 = MEMORY[0x24BEE4B08];
  v7 = v52;
  v8 = v53;
  sub_242079800(v51, v52);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
  v10 = 0;
  v40 = result + 56;
  v11 = 1 << *(_BYTE *)(result + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(result + 56);
  v41 = (unint64_t)(v11 + 63) >> 6;
  v42 = result;
  if (v13)
  {
LABEL_14:
    v60 = v2;
    v43 = (v13 - 1) & v13;
    v44 = v10;
    v14 = __clz(__rbit64(v13)) | (v10 << 6);
    goto LABEL_26;
  }
  while (1)
  {
    v15 = __OFADD__(v10, 1);
    v16 = v10 + 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v41)
      goto LABEL_37;
    v17 = *(_QWORD *)(v40 + 8 * v16);
    if (!v17)
      break;
LABEL_25:
    v60 = v2;
    v43 = (v17 - 1) & v17;
    v44 = v16;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
LABEL_26:
    v19 = *(_QWORD *)(v42 + 48) + 40 * v14;
    v21 = *(_QWORD *)v19;
    v20 = *(_QWORD *)(v19 + 8);
    v22 = *(_BYTE *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(unsigned __int8 *)(v19 + 34);
    v25 = *(unsigned __int16 *)(v19 + 32);
    v26 = v52;
    v27 = v53;
    sub_242079800(v51, v52);
    v28 = *(_QWORD *)(v27 + 8);
    v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 24);
    sub_242079F18();
    v30 = v29(v26, v28);
    v31 = v60;
    v33 = sub_24207C924(v30, v32);
    v2 = v31;
    if (v31)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_242079824((uint64_t)v51);
    }
    v34 = (_BYTE *)v33;
    a1 = v25 | (v24 << 16);
    swift_bridgeObjectRelease();
    v35 = v34[OBJC_IVAR___MCResourceStatus_status];

    v54[0] = v21;
    v54[1] = v20;
    v55 = v22;
    v56 = v23;
    v58 = BYTE2(a1);
    v57 = a1;
    v59 = v35;
    sub_242076A7C((uint64_t)&v48, (uint64_t)v54);
    result = swift_bridgeObjectRelease();
    v13 = v43;
    v10 = v44;
    if (v43)
      goto LABEL_14;
  }
  v18 = v16 + 1;
  if (v16 + 1 >= v41)
    goto LABEL_37;
  v17 = *(_QWORD *)(v40 + 8 * v18);
  if (v17)
    goto LABEL_24;
  v18 = v16 + 2;
  if (v16 + 2 >= v41)
    goto LABEL_37;
  v17 = *(_QWORD *)(v40 + 8 * v18);
  if (v17)
    goto LABEL_24;
  v18 = v16 + 3;
  if (v16 + 3 >= v41)
  {
LABEL_37:
    swift_release();
    v36 = v45;
    v37 = v52;
    v38 = v53;
    sub_242079844((uint64_t)v51, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, v37, v38);
    swift_release();
    sub_24207986C((uint64_t)v51, v39);
    return sub_242079824((uint64_t)v51);
  }
  v17 = *(_QWORD *)(v40 + 8 * v18);
  if (v17)
  {
LABEL_24:
    v16 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v41)
      goto LABEL_37;
    v17 = *(_QWORD *)(v40 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t static Catalog.resource(for:)@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  unint64_t v3;
  char v4;

  if (qword_254397498 != -1)
    swift_once();
  sub_242079F08();
  v2 = off_254397480;
  if (*((_QWORD *)off_254397480 + 2))
  {
    swift_bridgeObjectRetain();
    v3 = sub_242079780();
    if ((v4 & 1) != 0)
    {
      sub_24207986C(v2[7] + 40 * v3, a1);
    }
    else
    {
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return swift_endAccess();
}

uint64_t sub_2420762A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t result;
  __int128 v21[2];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  if (qword_2543977C0 != -1)
LABEL_17:
    swift_once();
  v0 = off_254397488;
  swift_bridgeObjectRetain();
  sub_2420797C0((uint64_t *)&unk_254399948);
  v1 = sub_242132708();
  v2 = v0[2];
  if (!v2)
  {
LABEL_14:
    off_254397480 = (_UNKNOWN *)v1;
    return swift_bridgeObjectRelease();
  }
  v3 = (uint64_t)(v0 + 4);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24207986C(v3, (uint64_t)v22);
    v4 = v23;
    v5 = v24;
    sub_242079800(v22, v23);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    v8 = v7;
    sub_24207986C((uint64_t)v22, (uint64_t)v21);
    swift_isUniquelyReferenced_nonNull_native();
    v9 = sub_242079780();
    if (__OFADD__(*(_QWORD *)(v1 + 16), (v10 & 1) == 0))
    {
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    v11 = v9;
    v12 = v10;
    sub_2420797C0(&qword_2543977F8);
    if ((sub_242132B40() & 1) != 0)
      break;
LABEL_8:
    if ((v12 & 1) != 0)
    {
      v15 = *(_QWORD *)(v1 + 56) + 40 * v11;
      sub_242079824(v15);
      sub_242079E50(v21, v15);
    }
    else
    {
      *(_QWORD *)(v1 + 8 * (v11 >> 6) + 64) |= 1 << v11;
      v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v11);
      *v16 = v6;
      v16[1] = v8;
      sub_242079E50(v21, *(_QWORD *)(v1 + 56) + 40 * v11);
      v17 = *(_QWORD *)(v1 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_16;
      *(_QWORD *)(v1 + 16) = v19;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242079824((uint64_t)v22);
    v3 += 40;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
  }
  v13 = sub_242079780();
  if ((v12 & 1) == (v14 & 1))
  {
    v11 = v13;
    goto LABEL_8;
  }
  result = sub_242132D38();
  __break(1u);
  return result;
}

uint64_t sub_242076504(uint64_t a1)
{
  _BYTE v2[40];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_242079E50((__int128 *)a1, (uint64_t)v2);
    sub_242079C7C();
  }
  else
  {
    sub_242079D74(a1, &qword_254399C58);
    sub_242079A28((uint64_t)v2);
    sub_242079D74((uint64_t)v2, &qword_254399C58);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24207658C(uint64_t a1)
{
  _OWORD v2[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_242079DB0((_OWORD *)a1, v2);
    sub_242079CF8();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_242079D74(a1, &qword_25719F010);
    sub_242079B58(v2);
    swift_bridgeObjectRelease();
    return sub_242079D74((uint64_t)v2, &qword_25719F010);
  }
}

uint64_t static Catalog.resourcesLookup.getter()
{
  if (qword_254397498 != -1)
    swift_once();
  sub_242079EE8();
  return swift_bridgeObjectRetain();
}

uint64_t static Catalog.resourcesLookup.setter(void *a1)
{
  if (qword_254397498 != -1)
    swift_once();
  sub_242079EE8();
  off_254397480 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Catalog.resourcesLookup.modify())()
{
  if (qword_254397498 != -1)
    swift_once();
  sub_242079EE8();
  return j__swift_endAccess;
}

uint64_t static Catalog.resourceInformation(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for CatalogClient();
  sub_242079F48();
  CatalogClient.init()();
  v4 = sub_24207C940(a1, a2);
  swift_release();
  return v4;
}

uint64_t static Catalog.register(resource:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[40];

  if (qword_254397498 != -1)
    swift_once();
  v2 = a1[3];
  v3 = a1[4];
  sub_242079800(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  sub_24207986C((uint64_t)a1, (uint64_t)v5);
  sub_242079EE8();
  sub_242076504((uint64_t)v5);
  return swift_endAccess();
}

uint64_t sub_24207688C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t *v4;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v9 = a4;
  v10 = *v4;
  sub_242132D74();
  sub_242079F18();
  sub_242079ED8();
  sub_2421327D4();
  sub_242079F20();
  v25 = a1;
  if (v9 != 2)
    sub_242079F00();
  sub_242132D8C();
  v11 = sub_242132D98();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_16:
    sub_242079EE0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *v4;
    *v4 = 0x8000000000000000;
    sub_242079ED8();
    sub_242077EA8(a2, a3, a4, v13, isUniquelyReferenced_nonNull_native);
    *v4 = v26;
    swift_bridgeObjectRelease();
    *(_QWORD *)v25 = a2;
    *(_QWORD *)(v25 + 8) = a3;
    result = 1;
    *(_BYTE *)(v25 + 16) = a4;
    return result;
  }
  v14 = ~v12;
  v15 = *(_QWORD *)(v10 + 48);
  while (1)
  {
    v16 = v15 + 24 * v13;
    v17 = *(unsigned __int8 *)(v16 + 16);
    v18 = *(_QWORD *)v16 == a2 && *(_QWORD *)(v16 + 8) == a3;
    if (!v18 && (sub_242079EB8() & 1) == 0)
      goto LABEL_15;
    if (v17 != 2)
      break;
    if (a4 == 2)
      goto LABEL_17;
LABEL_15:
    v13 = (v13 + 1) & v14;
    if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_16;
  }
  if (a4 == 2 || ((a4 ^ ((v17 & 1) == 0)) & 1) == 0)
    goto LABEL_15;
LABEL_17:
  sub_242079F20();
  sub_242079EE0();
  v21 = sub_242079F28((uint64_t)v4);
  LOBYTE(v22) = *(_BYTE *)(v22 + 16);
  *(_QWORD *)v24 = v23;
  *(_QWORD *)(v24 + 8) = v21;
  *(_BYTE *)(v24 + 16) = v22;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_242076A7C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  __int16 v26;
  int v27;
  uint64_t v29;
  char v30;
  BOOL v32;
  char isUniquelyReferenced_nonNull_native;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v3 = v2;
  v6 = *v2;
  sub_242132D74();
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 16);
  sub_242079ED8();
  sub_242079E68(a2);
  v52 = v8;
  v53 = v7;
  sub_2421327D4();
  v50 = v9;
  v43 = a1;
  if (v9 != 2)
    sub_242079F00();
  sub_242132D8C();
  sub_242079E90(a2);
  v10 = *(_QWORD *)(a2 + 24);
  v45 = *(unsigned __int8 *)(a2 + 33);
  v46 = *(unsigned __int8 *)(a2 + 32);
  v44 = *(unsigned __int8 *)(a2 + 34);
  v49 = *(_WORD *)(a2 + 32);
  v41 = v3;
  if (v49 != 2)
  {
    sub_242079F00();
    sub_242132D80();
    sub_242079F70();
    sub_242079F70();
  }
  sub_242079F70();
  v42 = a2;
  v48 = *(unsigned __int8 *)(a2 + 35);
  sub_242132D80();
  v11 = sub_242132D98();
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  v14 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v54 = *v41;
    *v41 = 0x8000000000000000;
    sub_242079E68(v42);
    sub_2420780A8(v42, v13, isUniquelyReferenced_nonNull_native);
    sub_242079F3C(v54);
    v34 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)v43 = *(_OWORD *)v42;
    *(_OWORD *)(v43 + 16) = v34;
    *(_DWORD *)(v43 + 32) = *(_DWORD *)(v42 + 32);
    return 1;
  }
  v47 = v10;
  v15 = ~v12;
  v16 = *(_QWORD *)(v6 + 48);
  v18 = v52;
  v17 = v7;
  v19 = v9;
  while (1)
  {
    v20 = v16 + 40 * v13;
    v21 = *(unsigned __int8 *)(v20 + 16);
    v22 = *(_QWORD *)(v20 + 24);
    v23 = *(unsigned __int8 *)(v20 + 32);
    v24 = *(unsigned __int8 *)(v20 + 33);
    v25 = *(unsigned __int8 *)(v20 + 34);
    v26 = *(_WORD *)(v20 + 32);
    v27 = *(unsigned __int8 *)(v20 + 35);
    if (*(_QWORD *)v20 != v17 || *(_QWORD *)(v20 + 8) != v18)
    {
      v51 = *(unsigned __int8 *)(v20 + 34);
      v29 = v14;
      v30 = sub_242132D14();
      v25 = v51;
      v14 = v29;
      v19 = v50;
      v18 = v52;
      v17 = v53;
      if ((v30 & 1) == 0)
        goto LABEL_33;
    }
    if (v21 == 2)
    {
      if (v19 != 2)
        goto LABEL_33;
    }
    else if (v19 == 2 || ((v19 ^ ((v21 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_33;
    }
    if (v26 != 2)
      break;
    if (v49 == 2 && v27 == v48)
      goto LABEL_35;
LABEL_33:
    v13 = (v13 + 1) & v15;
    if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_34;
  }
  v32 = v49 != 2 && v22 == v47;
  if (!v32 || ((v23 ^ v46) & 1) != 0 || ((v45 ^ v24) & 1) != 0 || ((v25 ^ v44) & 1) != 0 || v27 != v48)
    goto LABEL_33;
LABEL_35:
  swift_bridgeObjectRelease();
  sub_242079E90(v42);
  v36 = sub_242079F28((uint64_t)v41);
  v38 = *(_BYTE *)(v37 + 16);
  v39 = *(_QWORD *)(v37 + 24);
  LODWORD(v37) = *(_DWORD *)(v37 + 32);
  *(_QWORD *)v43 = v40;
  *(_QWORD *)(v43 + 8) = v36;
  *(_BYTE *)(v43 + 16) = v38;
  *(_QWORD *)(v43 + 24) = v39;
  *(_DWORD *)(v43 + 32) = v37;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_242076DC4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;

  v7 = *v3;
  sub_242132D74();
  sub_242079F18();
  sub_2421327D4();
  v8 = sub_242079F68();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  sub_242079F54();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v7 + 48);
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (sub_242079EB8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      sub_242079EE0();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      sub_242079F54();
      if ((v19 & 1) == 0)
        break;
      v20 = (_QWORD *)(v12 + 16 * v10);
      v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_242079EB8() & 1) != 0)
        goto LABEL_7;
    }
  }
  sub_242079EE0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2420783DC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  sub_242079F3C(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_242076F38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  char v26;
  char isUniquelyReferenced_nonNull_native;
  __int128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = *v2;
  sub_242132D74();
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v38 = a2;
  v11 = *(unsigned __int8 *)(a2 + 48);
  v44 = v4;
  swift_bridgeObjectRetain();
  sub_242079F18();
  v45 = v5;
  sub_2421327D4();
  sub_242079EE0();
  sub_242079ED8();
  v43 = v7;
  sub_2421327D4();
  v42 = v8;
  sub_242079F20();
  swift_bridgeObjectRetain();
  sub_2421327D4();
  v41 = v10;
  swift_bridgeObjectRelease();
  if (v11 == 10)
  {
    sub_242132D8C();
  }
  else
  {
    sub_242079F00();
    sub_2420AC7C0();
  }
  v12 = sub_242132D98();
  v13 = -1 << *(_BYTE *)(v4 + 32);
  v14 = v12 & ~v13;
  v15 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v46 = *v37;
    *v37 = 0x8000000000000000;
    sub_242079DC0(v38);
    sub_242078574((uint64_t *)v38, v14, isUniquelyReferenced_nonNull_native);
    *v37 = v46;
    swift_bridgeObjectRelease();
    v28 = *(_OWORD *)(v38 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v38;
    *(_OWORD *)(a1 + 16) = v28;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v38 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(v38 + 48);
    return 1;
  }
  v40 = v11;
  v16 = ~v13;
  while (1)
  {
    v17 = *(_QWORD *)(v44 + 48) + 56 * v14;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v17 + 24);
    v20 = *(_QWORD *)(v17 + 32);
    v21 = *(_QWORD *)(v17 + 40);
    v22 = *(unsigned __int8 *)(v17 + 48);
    v23 = *(_QWORD *)v17 == v45 && *(_QWORD *)(v17 + 8) == v6;
    if (!v23 && (sub_242079EB8() & 1) == 0)
      goto LABEL_26;
    v24 = v18 == v43 && v19 == v42;
    if (!v24 && (sub_242079EB8() & 1) == 0)
      goto LABEL_26;
    v25 = v20 == v9 && v21 == v41;
    if (!v25 && (sub_242079EB8() & 1) == 0)
      goto LABEL_26;
    if (v22 != 10)
      break;
    if (v40 == 10)
      goto LABEL_28;
LABEL_26:
    v14 = (v14 + 1) & v16;
    if (((*(_QWORD *)(v15 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_27;
  }
  if (v40 == 10)
    goto LABEL_26;
  sub_242107AB8(v22);
  if ((v26 & 1) == 0)
    goto LABEL_26;
LABEL_28:
  swift_bridgeObjectRelease();
  sub_242079E08(v38);
  v30 = *(_QWORD *)(*v37 + 48) + 56 * v14;
  v32 = *(_QWORD *)v30;
  v31 = *(_QWORD *)(v30 + 8);
  v33 = *(_QWORD *)(v30 + 16);
  v34 = *(_QWORD *)(v30 + 24);
  v35 = *(_QWORD *)(v30 + 32);
  v36 = *(_QWORD *)(v30 + 40);
  LOBYTE(v30) = *(_BYTE *)(v30 + 48);
  *(_QWORD *)a1 = v32;
  *(_QWORD *)(a1 + 8) = v31;
  *(_QWORD *)(a1 + 16) = v33;
  *(_QWORD *)(a1 + 24) = v34;
  *(_QWORD *)(a1 + 32) = v35;
  *(_QWORD *)(a1 + 40) = v36;
  *(_BYTE *)(a1 + 48) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

unint64_t sub_242077238()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *v0;
  sub_2420797C0(&qword_2543977F0);
  v3 = sub_242132ABC();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      result = sub_242077AC8(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 24 * i), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 24 * i + 8), *(_BYTE *)(*(_QWORD *)(v2 + 48) + 24 * i + 16), v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8)
        goto LABEL_22;
      v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v8)
          goto LABEL_22;
        v14 = v5[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              v16 = 1 << *(_BYTE *)(v2 + 32);
              if (v16 > 63)
                sub_24207884C(0, (unint64_t)(v16 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v16;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v10 >= v8)
                  goto LABEL_22;
                v14 = v5[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_19:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

void sub_242077410()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v18[2];
  int v19;

  v1 = v0;
  v2 = *v0;
  sub_2420797C0(&qword_2543977E8);
  v3 = sub_242132ABC();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
    {
      v15 = *(_QWORD *)(v2 + 48) + 40 * i;
      v16 = *(_OWORD *)(v15 + 16);
      v18[0] = *(_OWORD *)v15;
      v18[1] = v16;
      v19 = *(_DWORD *)(v15 + 32);
      sub_242077BC8((uint64_t)v18, v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if (v12 >= v8)
        goto LABEL_22;
      v13 = v5[v12];
      ++v9;
      if (!v13)
      {
        v9 = v12 + 1;
        if (v12 + 1 >= v8)
          goto LABEL_22;
        v13 = v5[v9];
        if (!v13)
        {
          v9 = v12 + 2;
          if (v12 + 2 >= v8)
            goto LABEL_22;
          v13 = v5[v9];
          if (!v13)
          {
            v14 = v12 + 3;
            if (v14 >= v8)
            {
LABEL_22:
              swift_release();
              v17 = 1 << *(_BYTE *)(v2 + 32);
              if (v17 > 63)
                sub_24207884C(0, (unint64_t)(v17 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v17;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v13 = v5[v14];
            if (!v13)
            {
              while (1)
              {
                v9 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_28;
                if (v9 >= v8)
                  goto LABEL_22;
                v13 = v5[v9];
                ++v14;
                if (v13)
                  goto LABEL_19;
              }
            }
            v9 = v14;
          }
        }
      }
LABEL_19:
      v7 = (v13 - 1) & v13;
    }
  }
  swift_release();
  *v1 = v3;
}

uint64_t sub_2420775FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_2420797C0((uint64_t *)&unk_254399F08);
  v3 = sub_242132ABC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_242132D74();
      sub_2421327D4();
      result = sub_242132D98();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_24207884C(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_2420778D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v18[3];
  char v19;

  v1 = v0;
  v2 = *v0;
  sub_2420797C0((uint64_t *)&unk_25719D8F0);
  v3 = sub_242132ABC();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
    {
      v15 = *(_QWORD *)(v2 + 48) + 56 * i;
      v16 = *(_OWORD *)(v15 + 16);
      v18[0] = *(_OWORD *)v15;
      v18[1] = v16;
      v18[2] = *(_OWORD *)(v15 + 32);
      v19 = *(_BYTE *)(v15 + 48);
      sub_242077D44((uint64_t)v18, v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if (v12 >= v8)
        goto LABEL_22;
      v13 = v5[v12];
      ++v9;
      if (!v13)
      {
        v9 = v12 + 1;
        if (v12 + 1 >= v8)
          goto LABEL_22;
        v13 = v5[v9];
        if (!v13)
        {
          v9 = v12 + 2;
          if (v12 + 2 >= v8)
            goto LABEL_22;
          v13 = v5[v9];
          if (!v13)
          {
            v14 = v12 + 3;
            if (v14 >= v8)
            {
LABEL_22:
              swift_release();
              v17 = 1 << *(_BYTE *)(v2 + 32);
              if (v17 > 63)
                sub_24207884C(0, (unint64_t)(v17 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v17;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v13 = v5[v14];
            if (!v13)
            {
              while (1)
              {
                v9 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_28;
                if (v9 >= v8)
                  goto LABEL_22;
                v13 = v5[v9];
                ++v14;
                if (v13)
                  goto LABEL_19;
              }
            }
            v9 = v14;
          }
        }
      }
LABEL_19:
      v7 = (v13 - 1) & v13;
    }
  }
  swift_release();
  *v1 = v3;
}

unint64_t sub_242077AC8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  int v8;
  unint64_t result;
  uint64_t v10;

  v8 = a3;
  sub_242132D74();
  swift_bridgeObjectRetain();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  if (v8 != 2)
    sub_242132D8C();
  sub_242132D8C();
  sub_242132D98();
  result = sub_242132A74();
  *(_QWORD *)(a4 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  v10 = *(_QWORD *)(a4 + 48) + 24 * result;
  *(_QWORD *)v10 = a1;
  *(_QWORD *)(v10 + 8) = a2;
  *(_BYTE *)(v10 + 16) = a3;
  ++*(_QWORD *)(a4 + 16);
  return result;
}

__n128 sub_242077BC8(uint64_t a1, uint64_t a2)
{
  int v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  __n128 result;
  __int128 v9;
  unsigned __int8 v10;

  sub_242132D74();
  v9 = *(_OWORD *)a1;
  v10 = *(_BYTE *)(a1 + 16);
  v4 = v10;
  sub_242079E68((uint64_t)&v9);
  sub_2421327D4();
  if (v4 != 2)
    sub_242132D8C();
  sub_242132D8C();
  sub_242079E90(a1);
  if (*(_WORD *)(a1 + 32) != 2)
  {
    sub_242132D8C();
    sub_242132D80();
    sub_242132D8C();
    sub_242132D8C();
  }
  sub_242132D8C();
  sub_242132D80();
  sub_242132D98();
  v5 = sub_242132A74();
  *(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
  v6 = *(_QWORD *)(a2 + 48) + 40 * v5;
  v7 = *(_DWORD *)(a1 + 32);
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a1;
  *(__n128 *)(v6 + 16) = result;
  *(_DWORD *)(v6 + 32) = v7;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

__n128 sub_242077D44(uint64_t a1, uint64_t a2)
{
  int v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  __n128 result;

  sub_242132D74();
  v4 = *(unsigned __int8 *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  sub_242132D8C();
  if (v4 != 10)
    sub_2420AC7C0();
  sub_242132D98();
  v5 = sub_242132A74();
  *(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
  v6 = *(_QWORD *)(a2 + 48) + 56 * v5;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 16) = v7;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v6 + 32) = result;
  *(_BYTE *)(v6 + 48) = *(_BYTE *)(a1 + 48);
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_242077EA8(uint64_t result, uint64_t a2, int a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v5;
  v10 = result;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 <= v11 || (a5 & 1) == 0)
  {
    if ((a5 & 1) != 0)
    {
      sub_242077238();
    }
    else
    {
      if (v12 > v11)
      {
        result = (uint64_t)sub_242078868();
        goto LABEL_23;
      }
      sub_242078F88();
    }
    v13 = *v5;
    sub_242132D74();
    swift_bridgeObjectRetain();
    sub_2421327D4();
    swift_bridgeObjectRelease();
    if (a3 != 2)
      sub_242132D8C();
    sub_242132D8C();
    result = sub_242132D98();
    v14 = -1 << *(_BYTE *)(v13 + 32);
    a4 = result & ~v14;
    v15 = v13 + 56;
    if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
    {
      v16 = ~v14;
      v17 = *(_QWORD *)(v13 + 48);
      do
      {
        v18 = v17 + 24 * a4;
        result = *(_QWORD *)v18;
        v19 = *(unsigned __int8 *)(v18 + 16);
        v20 = *(_QWORD *)v18 == v10 && *(_QWORD *)(v18 + 8) == a2;
        if (v20 || (result = sub_242132D14(), (result & 1) != 0))
        {
          if (v19 == 2)
          {
            if (a3 == 2)
              goto LABEL_26;
          }
          else if (a3 != 2 && ((a3 ^ ((v19 & 1) == 0)) & 1) != 0)
          {
            goto LABEL_26;
          }
        }
        a4 = (a4 + 1) & v16;
      }
      while (((*(_QWORD *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_23:
  v21 = *v6;
  *(_QWORD *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = *(_QWORD *)(v21 + 48) + 24 * a4;
  *(_QWORD *)v22 = v10;
  *(_QWORD *)(v22 + 8) = a2;
  *(_BYTE *)(v22 + 16) = a3;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
LABEL_26:
    result = sub_242132D2C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v25;
  }
  return result;
}

uint64_t sub_2420780A8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  __int16 v24;
  int v25;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t *v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  __int128 v45;
  unsigned __int8 v46;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v40 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_242077410();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_242078A24();
        goto LABEL_41;
      }
      sub_242079150();
    }
    v8 = *v3;
    sub_242132D74();
    v45 = *(_OWORD *)v5;
    v46 = *(_BYTE *)(v5 + 16);
    v9 = v46;
    v10 = v45;
    sub_242079E68((uint64_t)&v45);
    sub_2421327D4();
    v43 = v9;
    if (v9 != 2)
      sub_242132D8C();
    sub_242132D8C();
    sub_242079E90(v5);
    v37 = *(unsigned __int8 *)(v5 + 33);
    v38 = *(unsigned __int8 *)(v5 + 32);
    v36 = *(unsigned __int8 *)(v5 + 34);
    v42 = *(_WORD *)(v5 + 32);
    if (v42 != 2)
    {
      sub_242132D8C();
      sub_242132D80();
      sub_242132D8C();
      sub_242132D8C();
    }
    sub_242132D8C();
    v41 = *(unsigned __int8 *)(v5 + 35);
    sub_242132D80();
    result = sub_242132D98();
    v11 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v11;
    v12 = v8 + 56;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v13 = ~v11;
      v14 = *(_QWORD *)(v8 + 48);
      v15 = v9;
      v17 = *((_QWORD *)&v10 + 1);
      v16 = v10;
      do
      {
        v18 = v14 + 40 * a2;
        result = *(_QWORD *)v18;
        v19 = *(unsigned __int8 *)(v18 + 16);
        v20 = *(_QWORD *)(v18 + 24);
        v21 = *(unsigned __int8 *)(v18 + 32);
        v22 = *(unsigned __int8 *)(v18 + 33);
        v23 = *(unsigned __int8 *)(v18 + 34);
        v24 = *(_WORD *)(v18 + 32);
        v25 = *(unsigned __int8 *)(v18 + 35);
        if (*(_QWORD *)v18 != v16 || *(_QWORD *)(v18 + 8) != v17)
        {
          v44 = *(unsigned __int8 *)(v18 + 35);
          result = sub_242132D14();
          v15 = v43;
          v25 = v44;
          v17 = *((_QWORD *)&v10 + 1);
          v16 = v10;
          if ((result & 1) == 0)
            goto LABEL_40;
        }
        if (v19 == 2)
        {
          if (v15 != 2)
            goto LABEL_40;
        }
        else if (v15 == 2 || ((v15 ^ ((v19 & 1) == 0)) & 1) == 0)
        {
          goto LABEL_40;
        }
        if (v24 == 2)
        {
          if (v42 == 2 && v25 == v41)
            goto LABEL_44;
        }
        else
        {
          v28 = v42 != 2 && v20 == (_QWORD)v10;
          if (v28 && ((v21 ^ v38) & 1) == 0 && ((v37 ^ v22) & 1) == 0 && ((v23 ^ v36) & 1) == 0 && v25 == v41)
            goto LABEL_44;
        }
LABEL_40:
        a2 = (a2 + 1) & v13;
      }
      while (((*(_QWORD *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_41:
  v29 = *v39;
  *(_QWORD *)(*v39 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v30 = *(_QWORD *)(v29 + 48) + 40 * a2;
  v31 = *(_OWORD *)v40;
  v32 = *(_OWORD *)(v40 + 16);
  *(_DWORD *)(v30 + 32) = *(_DWORD *)(v40 + 32);
  *(_OWORD *)v30 = v31;
  *(_OWORD *)(v30 + 16) = v32;
  v33 = *(_QWORD *)(v29 + 16);
  v34 = __OFADD__(v33, 1);
  v35 = v33 + 1;
  if (v34)
  {
    __break(1u);
LABEL_44:
    result = sub_242132D2C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v29 + 16) = v35;
  }
  return result;
}

uint64_t sub_2420783DC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_2420775FC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_242078BF0();
      goto LABEL_22;
    }
    sub_242079310();
  }
  v11 = *v4;
  sub_242132D74();
  sub_2421327D4();
  result = sub_242132D98();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_242132D14(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_242132D2C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_242132D14();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_242078574(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_2420778D4();
    }
    else
    {
      if (v7 > v6)
      {
        sub_242078DA0();
        goto LABEL_33;
      }
      sub_2420795B8();
    }
    v39 = *v3;
    sub_242132D74();
    v8 = *a1;
    v9 = a1[1];
    v10 = a1[2];
    v11 = a1[3];
    v12 = a1[4];
    v13 = a1[5];
    v14 = *((unsigned __int8 *)a1 + 48);
    swift_bridgeObjectRetain();
    sub_2421327D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v40 = v10;
    sub_2421327D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v38 = v12;
    sub_2421327D4();
    v37 = v13;
    swift_bridgeObjectRelease();
    sub_242132D8C();
    if (v14 != 10)
      sub_2420AC7C0();
    v15 = sub_242132D98();
    v16 = -1 << *(_BYTE *)(v39 + 32);
    a2 = v15 & ~v16;
    if (((*(_QWORD *)(v39 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v36 = v14;
      v17 = ~v16;
      do
      {
        v18 = *(_QWORD *)(v39 + 48) + 56 * a2;
        v19 = *(_QWORD *)(v18 + 16);
        v20 = *(_QWORD *)(v18 + 24);
        v22 = *(_QWORD *)(v18 + 32);
        v21 = *(_QWORD *)(v18 + 40);
        v23 = *(unsigned __int8 *)(v18 + 48);
        v24 = *(_QWORD *)v18 == v8 && *(_QWORD *)(v18 + 8) == v9;
        if (v24 || (sub_242132D14() & 1) != 0)
        {
          v25 = v19 == v40 && v20 == v11;
          if (v25 || (sub_242132D14() & 1) != 0)
          {
            v26 = v22 == v38 && v21 == v37;
            if (v26 || (sub_242132D14() & 1) != 0)
            {
              if (v23 == 10)
              {
                if (v36 == 10)
                  goto LABEL_36;
              }
              else if (v36 != 10)
              {
                sub_242107AB8(v23);
                if ((v27 & 1) != 0)
                  goto LABEL_36;
              }
            }
          }
        }
        a2 = (a2 + 1) & v17;
      }
      while (((*(_QWORD *)(v39 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_33:
  v28 = *v34;
  *(_QWORD *)(*v34 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v29 = *(_QWORD *)(v28 + 48) + 56 * a2;
  v30 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v29 = *(_OWORD *)a1;
  *(_OWORD *)(v29 + 16) = v30;
  *(_OWORD *)(v29 + 32) = *((_OWORD *)a1 + 2);
  *(_BYTE *)(v29 + 48) = *((_BYTE *)a1 + 48);
  v31 = *(_QWORD *)(v28 + 16);
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (v32)
  {
    __break(1u);
LABEL_36:
    sub_242132D2C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v28 + 16) = v33;
  }
}

uint64_t sub_24207884C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void *sub_242078868()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  sub_2420797C0(&qword_2543977F0);
  v2 = *v0;
  v3 = sub_242132AB0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = *(_QWORD *)(v2 + 48) + 8 * v20;
    v23 = *(_QWORD *)v21;
    v22 = *(_QWORD *)(v21 + 8);
    LOBYTE(v21) = *(_BYTE *)(v21 + 16);
    v24 = *(_QWORD *)(v4 + 48) + 8 * v20;
    *(_QWORD *)v24 = v23;
    *(_QWORD *)(v24 + 8) = v22;
    *(_BYTE *)(v24 + 16) = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_242078A24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  sub_2420797C0(&qword_2543977E8);
  v2 = *v0;
  v3 = sub_242132AB0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 5 * i;
    v21 = *(_QWORD *)(v2 + 48) + 8 * v20;
    v23 = *(_QWORD *)v21;
    v22 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    LODWORD(v21) = *(_DWORD *)(v21 + 32);
    v26 = *(_QWORD *)(v4 + 48) + 8 * v20;
    *(_QWORD *)v26 = v23;
    *(_QWORD *)(v26 + 8) = v22;
    *(_BYTE *)(v26 + 16) = v24;
    *(_QWORD *)(v26 + 24) = v25;
    *(_DWORD *)(v26 + 32) = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_242078BF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  sub_2420797C0((uint64_t *)&unk_254399F08);
  v2 = *v0;
  v3 = sub_242132AB0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_242078DA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  sub_2420797C0((uint64_t *)&unk_25719D8F0);
  v2 = *v0;
  v3 = sub_242132AB0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 56 * i;
    v21 = *(_QWORD *)(v2 + 48) + v20;
    v23 = *(_QWORD *)v21;
    v22 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 32);
    v27 = *(_QWORD *)(v21 + 40);
    LOBYTE(v21) = *(_BYTE *)(v21 + 48);
    v28 = *(_QWORD *)(v4 + 48) + v20;
    *(_QWORD *)v28 = v23;
    *(_QWORD *)(v28 + 8) = v22;
    *(_QWORD *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v25;
    *(_QWORD *)(v28 + 32) = v26;
    *(_QWORD *)(v28 + 40) = v27;
    *(_BYTE *)(v28 + 48) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_242078F88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t *v20;

  v1 = v0;
  v2 = *v0;
  sub_2420797C0(&qword_2543977F0);
  v3 = sub_242132ABC();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = swift_release();
    *v1 = v3;
    return result;
  }
  v20 = v1;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(v2 + 48) + 24 * i;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_BYTE *)(v16 + 16);
    swift_bridgeObjectRetain();
    result = sub_242077AC8(v17, v18, v19, v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_22;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_22;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    v1 = v20;
    goto LABEL_23;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_242079150()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  int v16;
  __int128 v17;
  _OWORD v18[2];
  int v19;

  v1 = v0;
  v2 = *v0;
  sub_2420797C0(&qword_2543977E8);
  v3 = sub_242132ABC();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *v1 = v3;
    return;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  v9 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(_QWORD *)(v2 + 48) + 40 * i;
    v16 = *(_DWORD *)(v15 + 32);
    v17 = *(_OWORD *)(v15 + 16);
    v18[0] = *(_OWORD *)v15;
    v18[1] = v17;
    v19 = v16;
    sub_242079E68((uint64_t)v18);
    sub_242077BC8((uint64_t)v18, v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_22;
      v13 = *(_QWORD *)(v5 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_22;
        v13 = *(_QWORD *)(v5 + 8 * v9);
        if (!v13)
          break;
      }
    }
LABEL_19:
    v7 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v5 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_242079310()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_2420797C0((uint64_t *)&unk_254399F08);
  v3 = sub_242132ABC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_242132D74();
    swift_bridgeObjectRetain();
    sub_2421327D4();
    result = sub_242132D98();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_2420795B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];
  char v20;

  v1 = v0;
  v2 = *v0;
  sub_2420797C0((uint64_t *)&unk_25719D8F0);
  v3 = sub_242132ABC();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *v1 = v3;
    return;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  v9 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(_QWORD *)(v2 + 48) + 56 * i;
    v16 = *(_BYTE *)(v15 + 48);
    v17 = *(_OWORD *)(v15 + 32);
    v18 = *(_OWORD *)v15;
    v19[1] = *(_OWORD *)(v15 + 16);
    v19[2] = v17;
    v19[0] = v18;
    v20 = v16;
    sub_242079DC0((uint64_t)v19);
    sub_242077D44((uint64_t)v19, v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_22;
      v13 = *(_QWORD *)(v5 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_22;
        v13 = *(_QWORD *)(v5 + 8 * v9);
        if (!v13)
          break;
      }
    }
LABEL_19:
    v7 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v5 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

unint64_t sub_242079780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242079EC0();
  sub_242079EF0();
  v2 = sub_242079F68();
  return sub_242079948(v1, v0, v2);
}

uint64_t sub_2420797C0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426A40C8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *sub_242079800(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_242079824(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_242079844(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_24207986C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for os_unfair_lock_s()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_25439A038)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_25439A038);
  }
}

unint64_t sub_2420798F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242079EC0();
  swift_bridgeObjectRetain();
  sub_242079EF0();
  swift_bridgeObjectRelease();
  v2 = sub_242079F68();
  return sub_242079948(v1, v0, v2);
}

unint64_t sub_242079948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_242132D14() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_242132D14() & 1) == 0);
    }
  }
  return v6;
}

double sub_242079A28@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  double result;
  uint64_t v8;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_242079780();
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_2420797C0(&qword_2543977F8);
    sub_242132B40();
    swift_bridgeObjectRelease();
    sub_242079E50((__int128 *)(*(_QWORD *)(v8 + 56) + 40 * v4), a1);
    sub_2420797C0((uint64_t *)&unk_254399948);
    sub_242132B58();
    *v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_242079B58@<D0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  double result;
  uint64_t v8;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_242079780();
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_2420797C0(&qword_25719D8E8);
    sub_242132B40();
    swift_bridgeObjectRelease();
    sub_242079DB0((_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v4), a1);
    sub_242132B58();
    *v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_242079C7C()
{
  uint64_t *v0;
  uint64_t v2;

  swift_isUniquelyReferenced_nonNull_native();
  v2 = *v0;
  *v0 = 0x8000000000000000;
  sub_2421183C8();
  *v0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_242079CF8()
{
  uint64_t *v0;
  uint64_t v2;

  swift_isUniquelyReferenced_nonNull_native();
  v2 = *v0;
  *v0 = 0x8000000000000000;
  sub_2421185B8();
  *v0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_242079D74(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2420797C0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_242079DB0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_242079DC0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_242079E08(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242079E50(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_242079E68(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_242079E90(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242079EB8()
{
  return sub_242132D14();
}

uint64_t sub_242079EC0()
{
  return sub_242132D74();
}

uint64_t sub_242079ED8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_242079EE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242079EE8()
{
  return swift_beginAccess();
}

uint64_t sub_242079EF0()
{
  return sub_2421327D4();
}

uint64_t sub_242079F00()
{
  return sub_242132D8C();
}

uint64_t sub_242079F08()
{
  return swift_beginAccess();
}

uint64_t sub_242079F18()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_242079F20()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242079F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 48) + v1 + 8);
}

uint64_t sub_242079F3C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_242079F48()
{
  return swift_allocObject();
}

uint64_t sub_242079F68()
{
  return sub_242132D98();
}

uint64_t sub_242079F70()
{
  return sub_242132D8C();
}

void CatalogClient.__allocating_init()()
{
  sub_24207F538();
  CatalogClient.init()();
  sub_24207F428();
}

void ResourceContainer.resourceData.getter()
{
  sub_24207F654(OBJC_IVAR____TtC12ModelCatalog17ResourceContainer_resourceData);
  sub_24207F648();
  sub_24207F428();
}

void ResourceContainer.resourceType.getter()
{
  sub_24207F720();
  sub_24207F648();
  sub_24207F428();
}

uint64_t ResourceContainer.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12ModelCatalog17ResourceContainer_assetBacked);
}

void ResourceContainer.__allocating_init(resourceData:resourceType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24207A4D8(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))ResourceContainer.init(resourceData:resourceType:assetBacked:));
}

void ResourceContainer.__allocating_init(resourceData:resourceType:assetBacked:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_24207F430();
  v0 = sub_24207F670();
  ResourceContainer.init(resourceData:resourceType:assetBacked:)(v0, v1, v2, v3, v4);
  sub_24207F4E0();
}

id ResourceContainer.init(resourceData:resourceType:assetBacked:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_24207A560(a1, a2, a3, a4, a5, &OBJC_IVAR____TtC12ModelCatalog17ResourceContainer_resourceData, &OBJC_IVAR____TtC12ModelCatalog17ResourceContainer_resourceType, &OBJC_IVAR____TtC12ModelCatalog17ResourceContainer_assetBacked);
}

uint64_t static ResourceContainer.from(resource:)()
{
  return sub_242082FEC();
}

void ResourceContainer.toResource()()
{
  uint64_t v0;
  uint64_t v1;

  sub_24207F708();
  v0 = sub_24207F6E8();
  sub_242083CA0(v0, v1);
  sub_24207F4C8();
}

void static ResourceContainer.supportsSecureCoding.getter()
{
  sub_242079EE8();
  sub_24207F4D4();
}

void static ResourceContainer.supportsSecureCoding.setter(char a1)
{
  sub_242079EE8();
  byte_25719D900 = a1;
  sub_24207F4D4();
}

void static ResourceContainer.supportsSecureCoding.modify()
{
  sub_242079EE8();
  sub_24207F428();
}

uint64_t static ResourceContainer.resourceDataKey.getter()
{
  return sub_24207F578();
}

uint64_t static ResourceContainer.resourceTypeKey.getter()
{
  return sub_24207F59C();
}

Swift::Void __swiftcall ResourceContainer.encode(with:)(NSCoder with)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = (void *)sub_24207F80C();
  sub_24207F578();
  v2 = (void *)sub_242132768();
  sub_24207F3E4();

  v3 = (void *)sub_24207F800();
  sub_24207F59C();
  v4 = (void *)sub_242132768();
  sub_24207F3E4();

  v5 = (void *)sub_24207F3C0();
  sub_24207F7F4((uint64_t)v5, sel_encodeBool_forKey_);
  sub_24207F4B4(v5);
}

void ResourceContainer.__allocating_init(coder:)(void *a1)
{
  sub_24207F560();
  ResourceContainer.init(coder:)(a1);
  sub_24207F428();
}

uint64_t ResourceContainer.init(coder:)(void *a1)
{
  return sub_24207A878(a1, 0x656372756F736572, 0xEF79654B61746144, 0xEF79654B65707954, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, id))ResourceContainer.init(resourceData:resourceType:assetBacked:));
}

void ResourceContainer.description.getter()
{
  sub_24207F7C4();
  sub_242132AD4();
  swift_bridgeObjectRelease();
  sub_24207F62C();
  sub_24207F604(OBJC_IVAR____TtC12ModelCatalog17ResourceContainer_resourceData);
  sub_24207F794();
  sub_24207F7B8();
  swift_bridgeObjectRelease();
  sub_24207F7A0();
  sub_24207F4F0();
  sub_24207F5FC();
  sub_2421327EC();
  sub_24207F700();
  sub_2421327EC();
  sub_2421327EC();
  swift_bridgeObjectRelease();
  sub_2421327EC();
  sub_24207F68C();
}

id ResourceContainer.__allocating_init()()
{
  return objc_msgSend(sub_24207F560(), sel_init);
}

void ResourceContainer.init()()
{
  sub_24207F778();
  __break(1u);
}

void ResourceBundleContainer.resourceBundleData.getter()
{
  sub_24207F654(OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleData);
  sub_24207F648();
  sub_24207F428();
}

void ResourceBundleContainer.resourceBundleType.getter()
{
  sub_24207F720();
  sub_24207F648();
  sub_24207F428();
}

uint64_t ResourceBundleContainer.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_assetBacked);
}

void ResourceBundleContainer.__allocating_init(resourceBundleData:resourceBundleType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24207A4D8(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))ResourceBundleContainer.init(resourceBundleData:resourceBundleType:assetBacked:));
}

void sub_24207A4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_24207F430();
  a5(v8, v7, v6, v5, 0);
  sub_24207F4E0();
}

void ResourceBundleContainer.__allocating_init(resourceBundleData:resourceBundleType:assetBacked:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_24207F430();
  v0 = sub_24207F670();
  ResourceBundleContainer.init(resourceBundleData:resourceBundleType:assetBacked:)(v0, v1, v2, v3, v4);
  sub_24207F4E0();
}

id ResourceBundleContainer.init(resourceBundleData:resourceBundleType:assetBacked:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_24207A560(a1, a2, a3, a4, a5, &OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleData, &OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleType, &OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_assetBacked);
}

id sub_24207A560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6, _QWORD *a7, _QWORD *a8)
{
  _BYTE *v8;
  objc_class *v17;
  _QWORD *v18;
  _QWORD *v19;
  objc_super v21;

  v17 = (objc_class *)sub_24207F830();
  v18 = &v8[*a6];
  *v18 = a1;
  v18[1] = a2;
  v19 = &v8[*a7];
  *v19 = a3;
  v19[1] = a4;
  v8[*a8] = a5;
  v21.receiver = v8;
  v21.super_class = v17;
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t static ResourceBundleContainer.from(resourceBundle:)()
{
  return sub_242097C00();
}

void ResourceBundleContainer.toResourceBundle()()
{
  uint64_t v0;
  uint64_t v1;

  sub_24207F708();
  v0 = sub_24207F6E8();
  sub_242097F64(v0, v1);
  sub_24207F4C8();
}

void static ResourceBundleContainer.supportsSecureCoding.getter()
{
  sub_242079EE8();
  sub_24207F4D4();
}

void static ResourceBundleContainer.supportsSecureCoding.setter(char a1)
{
  sub_242079EE8();
  byte_25719D901 = a1;
  sub_24207F4D4();
}

void static ResourceBundleContainer.supportsSecureCoding.modify()
{
  sub_242079EE8();
  sub_24207F428();
}

unint64_t static ResourceBundleContainer.resourceBundleDataKey.getter()
{
  return sub_24207F6A0();
}

unint64_t static ResourceBundleContainer.resourceBundleTypeKey.getter()
{
  return sub_24207F6A0();
}

Swift::Void __swiftcall ResourceBundleContainer.encode(with:)(NSCoder with)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = (void *)sub_24207F80C();
  v2 = (void *)sub_24207F6B4();
  sub_24207F3E4();

  v3 = (void *)sub_24207F800();
  v4 = (void *)sub_24207F6B4();
  sub_24207F3E4();

  v5 = (void *)sub_24207F3C0();
  sub_24207F7F4((uint64_t)v5, sel_encodeBool_forKey_);
  sub_24207F4B4(v5);
}

void ResourceBundleContainer.__allocating_init(coder:)(void *a1)
{
  sub_24207F560();
  ResourceBundleContainer.init(coder:)(a1);
  sub_24207F428();
}

uint64_t ResourceBundleContainer.init(coder:)(void *a1)
{
  return sub_24207A878(a1, 0xD000000000000015, 0x80000002421383E0, 0x8000000242138400, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, id))ResourceBundleContainer.init(resourceBundleData:resourceBundleType:assetBacked:));
}

uint64_t sub_24207A878(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  void *v5;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, id);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v8 = sub_24207F830();
  sub_24207F558(v8, (unint64_t *)&unk_254399A20);
  v9 = v5;
  v10 = (void *)sub_2421329F0();
  sub_24207F558((uint64_t)v10, (unint64_t *)&unk_254399958);
  v11 = (void *)sub_2421329F0();
  v12 = (void *)sub_24207F3C0();
  v13 = objc_msgSend(a1, sel_decodeBoolForKey_, v12);

  if (!v10)
  {

LABEL_6:
    swift_getObjectType();
    sub_24207F5D4();
    return 0;
  }
  if (!v11)
  {

    v11 = v9;
    goto LABEL_6;
  }
  v14 = v11;
  v15 = v10;

  v16 = v15;
  v17 = sub_2421325AC();
  v19 = v18;

  v20 = sub_242132780();
  v21 = (objc_class *)v8;
  v22 = a5;
  v24 = v23;
  v25 = objc_allocWithZone(v21);
  v26 = v22(v17, v19, v20, v24, v13);

  swift_getObjectType();
  sub_24207F5D4();
  return v26;
}

id sub_24207AA50(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_242132768();
  sub_24207F78C();
  return v5;
}

void ResourceBundleContainer.description.getter()
{
  sub_24207F7C4();
  sub_242132AD4();
  swift_bridgeObjectRelease();
  sub_24207F62C();
  sub_24207F604(OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleData);
  sub_24207F794();
  sub_24207F7B8();
  swift_bridgeObjectRelease();
  sub_24207F7A0();
  sub_24207F4F0();
  swift_bridgeObjectRetain();
  sub_2421327EC();
  sub_24207F78C();
  sub_2421327EC();
  sub_24207F68C();
}

void ResourceBundleContainer.init()()
{
  sub_24207F778();
  __break(1u);
}

id _s12ModelCatalog17ResourceContainerCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_24207F830();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24207ABB8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  sub_24207BED4(*(_QWORD *)(a1 + *a3), *(_QWORD *)(a1 + *a3 + 8));
  return swift_bridgeObjectRelease();
}

void *sub_24207ABF4()
{
  qword_25439A128 = (uint64_t)&unk_2571E0D08;
  return &unk_2571E0D08;
}

id static CatalogService.interface.getter()
{
  if (qword_25439A130 != -1)
    swift_once();
  sub_242079EE8();
  return (id)qword_25439A128;
}

void static CatalogService.interface.setter(uint64_t a1)
{
  void *v2;

  if (qword_25439A130 != -1)
    swift_once();
  sub_242079EE8();
  v2 = (void *)qword_25439A128;
  qword_25439A128 = a1;

  sub_24207F4D4();
}

void static CatalogService.interface.modify()
{
  if (qword_25439A130 != -1)
    swift_once();
  sub_242079EE8();
  sub_24207F428();
}

uint64_t static CatalogService.serviceName.getter()
{
  return sub_24207F570(&qword_25719D910);
}

void static CatalogService.serviceName.setter()
{
  sub_24207F568();
}

void static CatalogService.serviceName.modify()
{
  sub_242079EE8();
  sub_24207F428();
}

uint64_t static CatalogService.entitlementName.getter()
{
  return sub_24207F570(qword_25719D920);
}

uint64_t sub_24207AD94(uint64_t *a1)
{
  uint64_t v2;

  sub_242079EE8();
  v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

void static CatalogService.entitlementName.setter()
{
  sub_24207F568();
}

void sub_24207ADEC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_24207F764();
  sub_242079EE8();
  *v1 = v3;
  *v0 = v2;
  swift_bridgeObjectRelease();
  sub_24207F528();
}

void static CatalogService.entitlementName.modify()
{
  sub_242079EE8();
  sub_24207F428();
}

uint64_t sub_24207AE64()
{
  uint64_t result;

  result = sub_2420AA3D4((uint64_t)&unk_2513216A0);
  qword_2543970A0 = result;
  return result;
}

uint64_t static CatalogService.otherAcceptedEntitlementNames.getter()
{
  return sub_24207B52C(&qword_2543970A8);
}

void static CatalogService.otherAcceptedEntitlementNames.setter(uint64_t a1)
{
  sub_24207B59C(a1, &qword_2543970A8, &qword_2543970A0);
}

void static CatalogService.otherAcceptedEntitlementNames.modify()
{
  if (qword_2543970A8 != -1)
    swift_once();
  sub_242079EE8();
  sub_24207F428();
}

uint64_t sub_24207AF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  sub_2420797C0(&qword_25439A190);
  v0 = sub_24207F538();
  *(_OWORD *)(v0 + 16) = xmmword_242145B80;
  *(_QWORD *)(v0 + 32) = sel_resourceContainersWith_;
  *(_QWORD *)(v0 + 40) = 0;
  sub_2420797C0(&qword_25439A0F8);
  v1 = sub_24207F538();
  *(_OWORD *)(v1 + 16) = xmmword_242145B80;
  sub_24207F558(v1, &qword_25439A160);
  v3 = v2;
  v4 = sub_2420797C0((uint64_t *)&unk_25439A168);
  *(_QWORD *)(v1 + 56) = v4;
  *(_QWORD *)(v1 + 32) = v3;
  v5 = type metadata accessor for ResourceContainer();
  v6 = sub_2420797C0((uint64_t *)&unk_25439A140);
  *(_QWORD *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 64) = v5;
  sub_24207F558(v6, &qword_25439A158);
  v7 = (void *)MEMORY[0x2426A390C](v1);
  sub_24207F558((uint64_t)v7, &qword_25439A180);
  sub_24207F330();
  v8 = sub_24207F818();

  v9 = sub_24207B0F0(v8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 48) = v9;
  *(_QWORD *)(v0 + 56) = sel_resourceBundleContainersWith_;
  *(_QWORD *)(v0 + 64) = 0;
  v10 = sub_24207F538();
  *(_OWORD *)(v10 + 16) = xmmword_242145B80;
  *(_QWORD *)(v10 + 56) = v4;
  *(_QWORD *)(v10 + 32) = v3;
  v11 = type metadata accessor for ResourceBundleContainer();
  *(_QWORD *)(v10 + 88) = sub_2420797C0(&qword_25439A150);
  *(_QWORD *)(v10 + 64) = v11;
  v12 = (void *)MEMORY[0x2426A390C](v10);
  v13 = sub_24207F818();

  v14 = sub_24207B0F0(v13);
  result = sub_24207F78C();
  *(_QWORD *)(v0 + 72) = v14;
  off_25439A108 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_24207B0F0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_242132A8C())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x24BEE4B08];
    if (v2)
      goto LABEL_4;
    goto LABEL_7;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_2420797C0(&qword_25439A188);
  v3 = sub_242132AC8();
  if (v2)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    swift_retain();
    sub_242132A80();
    sub_24207F2FC(0, &qword_25439A180);
    sub_24207F330();
    result = sub_24213296C();
    v1 = v34;
    v30 = v35;
    v5 = v36;
    v6 = v37;
    v7 = v38;
    goto LABEL_11;
  }
LABEL_7:
  v8 = -1 << *(_BYTE *)(v1 + 32);
  v30 = v1 + 56;
  v5 = ~v8;
  v9 = -v8;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v7 = v10 & *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  result = swift_retain();
  v6 = 0;
LABEL_11:
  v29 = (unint64_t)(v5 + 64) >> 6;
  v11 = v3 + 56;
  if (v1 < 0)
    goto LABEL_14;
LABEL_12:
  if (v7)
  {
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v13 = v12 | (v6 << 6);
    goto LABEL_32;
  }
  v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 < v29)
    {
      v16 = *(_QWORD *)(v30 + 8 * v15);
      v17 = v6 + 1;
      if (v16)
        goto LABEL_31;
      v17 = v6 + 2;
      if (v6 + 2 < v29)
      {
        v16 = *(_QWORD *)(v30 + 8 * v17);
        if (v16)
          goto LABEL_31;
        v17 = v6 + 3;
        if (v6 + 3 < v29)
        {
          v16 = *(_QWORD *)(v30 + 8 * v17);
          if (v16)
            goto LABEL_31;
          v17 = v6 + 4;
          if (v6 + 4 < v29)
          {
            v16 = *(_QWORD *)(v30 + 8 * v17);
            if (v16)
              goto LABEL_31;
            v17 = v6 + 5;
            if (v6 + 5 < v29)
            {
              v16 = *(_QWORD *)(v30 + 8 * v17);
              if (!v16)
              {
                v18 = v6 + 6;
                while (v18 < v29)
                {
                  v16 = *(_QWORD *)(v30 + 8 * v18++);
                  if (v16)
                  {
                    v17 = v18 - 1;
                    goto LABEL_31;
                  }
                }
                goto LABEL_44;
              }
LABEL_31:
              v7 = (v16 - 1) & v16;
              v13 = __clz(__rbit64(v16)) + (v17 << 6);
              v6 = v17;
LABEL_32:
              v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v13);
              while (1)
              {
                sub_24207F2FC(0, &qword_25439A180);
                swift_dynamicCast();
                result = sub_242132AA4();
                v20 = -1 << *(_BYTE *)(v3 + 32);
                v21 = result & ~v20;
                v22 = v21 >> 6;
                if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) == 0)
                  break;
                v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_42:
                *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
                v28 = *(_QWORD *)(v3 + 48) + 40 * v23;
                *(_OWORD *)v28 = v31;
                *(_OWORD *)(v28 + 16) = v32;
                *(_QWORD *)(v28 + 32) = v33;
                ++*(_QWORD *)(v3 + 16);
                if ((v1 & 0x8000000000000000) == 0)
                  goto LABEL_12;
LABEL_14:
                v14 = sub_242132A98();
                if (!v14)
                  goto LABEL_44;
                *(_QWORD *)&v31 = v14;
                sub_24207F2FC(0, &qword_25439A180);
                swift_dynamicCast();
              }
              v24 = 0;
              v25 = (unint64_t)(63 - v20) >> 6;
              while (++v22 != v25 || (v24 & 1) == 0)
              {
                v26 = v22 == v25;
                if (v22 == v25)
                  v22 = 0;
                v24 |= v26;
                v27 = *(_QWORD *)(v11 + 8 * v22);
                if (v27 != -1)
                {
                  v23 = __clz(__rbit64(~v27)) + (v22 << 6);
                  goto LABEL_42;
                }
              }
              __break(1u);
              goto LABEL_46;
            }
          }
        }
      }
    }
LABEL_44:
    swift_release();
    sub_24207F380();
    return v3;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t static CatalogService.selectorClasses.getter()
{
  return sub_24207B52C(&qword_25439A100);
}

uint64_t sub_24207B52C(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  sub_242079EE8();
  return swift_bridgeObjectRetain();
}

void static CatalogService.selectorClasses.setter(uint64_t a1)
{
  sub_24207B59C(a1, &qword_25439A100, &off_25439A108);
}

void sub_24207B59C(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  sub_242079EE8();
  *a3 = a1;
  swift_bridgeObjectRelease();
  sub_24207F4D4();
}

void static CatalogService.selectorClasses.modify()
{
  if (qword_25439A100 != -1)
    swift_once();
  sub_242079EE8();
  sub_24207F428();
}

uint64_t sub_24207B658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_24207F4AC();
  sub_24207F2BC(v0, qword_25439A110);
  v1 = sub_24207F648();
  sub_24207BF18(v1, v2);
  return sub_242132630();
}

void static CatalogService.logger.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25439A0E0 != -1)
    swift_once();
  v2 = sub_24207F4AC();
  v3 = sub_24207BF18(v2, (uint64_t)qword_25439A110);
  sub_242079EE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  sub_24207F528();
}

void static CatalogService.logger.setter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void (*v4)(uint64_t);

  if (qword_25439A0E0 != -1)
    swift_once();
  v0 = sub_24207F4AC();
  sub_24207BF18(v0, (uint64_t)qword_25439A110);
  sub_242079EE8();
  v1 = sub_24207F7AC();
  v2(v1);
  swift_endAccess();
  v3 = sub_24207F648();
  v4(v3);
  sub_24207F528();
}

void static CatalogService.logger.modify()
{
  uint64_t v0;

  if (qword_25439A0E0 != -1)
    swift_once();
  v0 = sub_24207F4AC();
  sub_24207BF18(v0, (uint64_t)qword_25439A110);
  sub_242079EE8();
  sub_24207F428();
}

uint64_t _s12ModelCatalog0B8ResourcePAAE11assetBackedSbvg_0()
{
  return 0;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CatalogClientProtocol.isGenerativeExperiencesEssentialResourcesReady()()
{
  return 0;
}

uint64_t sub_24207B844()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24207F3AC;
  return CatalogClientProtocol.generativeExperiencesEssentialResourcesReady()();
}

uint64_t CatalogClientProtocol.generativeExperiencesEssentialResourcesReady()()
{
  uint64_t v0;

  return sub_24207BF30(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

NSNumber sub_24207B89C(uint64_t a1, uint64_t a2)
{
  return CatalogClientProtocol.requestCompileResource(identifier:userInitiated:)(*(Swift::String *)&a1, 0);
}

NSNumber __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CatalogClientProtocol.requestCompileResource(identifier:userInitiated:)(Swift::String identifier, Swift::Bool userInitiated)
{
  sub_24207F2FC(0, (unint64_t *)&unk_25719D970);
  return (NSNumber)sub_242132A08();
}

void static CatalogClient.generativeExperienceEssentialResourcesStatus()(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unsigned __int8 v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  uint64_t v25;
  os_log_type_t v26;
  _WORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  Class isa;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  _WORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  _WORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = sub_2420797C0((uint64_t *)&unk_254399E98);
  MEMORY[0x24BDAC7A8](v2);
  sub_24207F540();
  v5 = (void *)(v4 - v3);
  v6 = sub_242132498();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_24207F540();
  v10 = v9 - v8;
  v11 = sub_24213251C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_24207F540();
  v15 = v14 - v13;
  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  v17 = objc_msgSend(v16, sel_assetDeliveryReady);

  if ((v17 & 1) != 0)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BDCD790], v6);
    sub_24207E8A8((uint64_t)v5, 1, 1, v11);
    sub_2421324F8();
    v18 = static CatalogIndex.essentialResources(sideLoadUrl:)(v15);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
    v19 = swift_bridgeObjectRetain();
    AssetLock.init(resources:)((Swift::OpaquePointer)v19);
    if (v20)
    {
      swift_bridgeObjectRelease();
      if (qword_25439A0E8 != -1)
        swift_once();
      v21 = sub_24207F4AC();
      v18 = sub_24207BF18(v21, (uint64_t)qword_2543A65D0);
      sub_24207F784();
      sub_24207F784();
      sub_242132618();
      v22 = sub_24207F668();
      if (os_log_type_enabled(v18, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v23 = 138412290;
        sub_24207F784();
        v44 = _swift_stdlib_bridgeErrorToNSError();
        sub_242132A38();
        *v24 = v44;
        sub_24207F550();
        sub_24207F550();
        _os_log_impl(&dword_242074000, v18, v22, "unable to fetch asset sets: %@", v23, 0xCu);
        sub_2420797C0(&qword_254399B50);
        swift_arrayDestroy();
        MEMORY[0x2426A4194](v24, -1, -1);
        sub_24207F404();
      }
      sub_24207F550();
      sub_24207F550();
      sub_24207F550();
LABEL_18:

      v30 = 1;
      goto LABEL_25;
    }
    isa = v18[2].isa;
    if (isa)
    {
      v32 = v18 + 4;
      swift_bridgeObjectRetain();
      while (!sub_24210ACC0(v32, v43))
      {
        v32 += 5;
        isa = (Class)((char *)isa - 1);
        if (!isa)
        {
          sub_24207F700();
          sub_24207F824();
          goto LABEL_20;
        }
      }
      sub_24207F700();
      sub_24207F824();
      if (qword_25439A0E8 != -1)
        swift_once();
      v38 = sub_24207F4AC();
      sub_24207F618(v38, (uint64_t)qword_2543A65D0);
      v39 = sub_24207F668();
      if (sub_24207F454(v39))
      {
        v40 = (_WORD *)sub_24207F50C();
        sub_24207F740(v40);
        sub_24207F414(&dword_242074000, v41, v42, "essential resources not present");
        sub_24207F404();
      }
      goto LABEL_18;
    }
    sub_24207F700();
    swift_bridgeObjectRelease();
LABEL_20:
    if (qword_25439A0E8 != -1)
      swift_once();
    v33 = sub_24207F4AC();
    sub_24207F618(v33, (uint64_t)qword_2543A65D0);
    v34 = sub_24207F668();
    if (sub_24207F454(v34))
    {
      v35 = (_WORD *)sub_24207F50C();
      sub_24207F740(v35);
      sub_24207F414(&dword_242074000, v36, v37, "essential resources available");
      sub_24207F404();
    }

    v30 = 0;
  }
  else
  {
    if (qword_25439A0E8 != -1)
      swift_once();
    v25 = sub_24207F4AC();
    sub_24207F618(v25, (uint64_t)qword_2543A65D0);
    v26 = sub_24207F668();
    if (sub_24207F454(v26))
    {
      v27 = (_WORD *)sub_24207F50C();
      sub_24207F740(v27);
      sub_24207F414(&dword_242074000, v28, v29, "essential resources still initializing");
      sub_24207F404();
    }

    v30 = 2;
  }
LABEL_25:
  *a1 = v30;
}

_QWORD *CatalogClient.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = v0;
  v0[2] = 0;
  if (qword_25439A0E8 != -1)
    swift_once();
  v2 = sub_24207F4AC();
  sub_24207F618(v2, (uint64_t)qword_2543A65D0);
  v3 = sub_24207F668();
  if (sub_24207F454(v3))
  {
    v4 = (_WORD *)sub_24207F50C();
    sub_24207F740(v4);
    sub_24207F414(&dword_242074000, v5, v6, "Initializing modelcatalogd service");
    sub_24207F404();
  }

  sub_2420797C0(&qword_25439A028);
  v7 = (_QWORD *)sub_24207F538();
  v7[3] = 2;
  v7[5] = 0;
  swift_unknownObjectWeakInit();
  sub_2420797C0(qword_25439A040);
  v8 = sub_24207F538();
  *(_DWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  v7[2] = v8;
  v7[5] = &protocol witness table for CatalogClient;
  sub_24207F7AC();
  swift_unknownObjectWeakAssign();
  v1[2] = v7;
  swift_release();
  return v1;
}

uint64_t sub_24207BE90(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24207BED4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24207BF18(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_24207BF30(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

void sub_24207BF44()
{
  sub_24207BF98();
}

uint64_t sub_24207BF60(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_24211ED08);
}

void sub_24207BF7C()
{
  sub_24207BF98();
}

void sub_24207BF98()
{
  sub_24207F6D8();
  __asm { BR              X11 }
}

void sub_24207BFE4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  void *v2;

  sub_24207F6D8();
  v2 = (void *)v1();
  swift_bridgeObjectRelease();
  if (!v0)

  sub_24207F4C8();
}

uint64_t sub_24207C0C0(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_24211F840);
}

uint64_t sub_24207C0DC(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_242120378);
}

uint64_t sub_24207C0F8(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_242120EB0);
}

void sub_24207C114(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  const char *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;

  if (a1 == 0xD000000000000028 && a2 == 0x8000000242138490 || (sub_24207F838(), (sub_242079EB8() & 1) != 0))
  {
    v5 = 0xD000000000000027;
    v6 = "com.apple.if.planner.nlrouter.tokenizer";
LABEL_5:
    v7 = (unint64_t)(v6 - 32) | 0x8000000000000000;
    goto LABEL_6;
  }
  if (a1 == 0xD000000000000023 && a2 == 0x80000002421384C0 || (sub_24207F838(), (sub_242079EB8() & 1) != 0))
  {
    v5 = 0xD000000000000022;
    v6 = "com.apple.if.planner.nlrouter.base";
    goto LABEL_5;
  }
  v5 = a1;
  v7 = a2;
LABEL_6:
  v8 = sub_24207C214(v5, v7);
  if (!v2)
  {
    v9 = (void *)v8;
    ResourceContainer.toResource()();

  }
}

uint64_t sub_24207C214(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_242126110);
}

void sub_24207C230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = sub_24207C274(a1, a2);
  if (!v2)
  {
    v4 = (void *)v3;
    ResourceBundleContainer.toResourceBundle()();

  }
  sub_24207F4C8();
}

uint64_t sub_24207C274(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_242126C48);
}

unint64_t sub_24207C290()
{
  uint64_t v0;
  unint64_t result;
  id *v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21[2];
  uint64_t v22;

  result = (unint64_t)sub_24207C4BC();
  if (!v0)
  {
    v2 = (id *)result;
    v22 = MEMORY[0x24BEE4AF8];
    if (result >> 62)
      goto LABEL_19;
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_24207F5FC();
    for (; v3; v3 = sub_242132BA0())
    {
      v17 = (void (*)(uint64_t))v2;
      v18 = (unint64_t)v2 & 0xC000000000000001;
      for (i = 4; ; ++i)
      {
        v5 = v18 ? (id)MEMORY[0x2426A3A14](i - 4, v2) : v2[i];
        v6 = v5;
        v7 = i - 3;
        if (__OFADD__(i - 4, 1))
          break;
        ResourceContainer.toResource()();

        if (v20)
        {
          sub_242079E50(&v19, (uint64_t)v21);
          sub_242079E50(v21, (uint64_t)&v19);
          v8 = v22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24207F74C(0, *(_QWORD *)(v8 + 16) + 1);
            v8 = v15;
            v22 = v15;
          }
          v10 = *(_QWORD *)(v8 + 16);
          v9 = *(_QWORD *)(v8 + 24);
          if (v10 >= v9 >> 1)
          {
            sub_24207F74C(v9 > 1, v10 + 1);
            v22 = v16;
          }
          v11 = sub_242079844((uint64_t)&v19, v20);
          MEMORY[0x24BDAC7A8](v11);
          sub_24207F540();
          (*(void (**)(uint64_t))(v14 + 16))(v13 - v12);
          sub_24207E964();
          sub_242079824((uint64_t)&v19);
          v2 = (id *)v17;
        }
        else
        {
          sub_24207E9D0((uint64_t)&v19, &qword_254399C58);
        }
        if (v7 == v3)
        {
          sub_24207F3F8();
          return v22;
        }
      }
      __break(1u);
LABEL_19:
      sub_24207F5C0();
    }
    sub_24207F3F8();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

void (*sub_24207C4BC())(uint64_t)
{
  return sub_24207C6A4((void (*)(uint64_t))sub_242127780);
}

uint64_t sub_24207C4D8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  id *v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16[2];

  v2 = sub_24207C688();
  if (!v0)
  {
    v4 = (id *)v2;
    if ((unint64_t)v2 >> 62)
      goto LABEL_20;
    v5 = *(_QWORD *)(((unint64_t)v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_24207F5FC();
    for (; v5; v5 = sub_242132BA0())
    {
      v1 = MEMORY[0x24BEE4AF8];
      for (i = 4; ; ++i)
      {
        v7 = ((unint64_t)v4 & 0xC000000000000001) != 0
           ? (id)MEMORY[0x2426A3A14](i - 4, v4)
           : v4[i];
        v8 = v7;
        v9 = i - 3;
        if (__OFADD__(i - 4, 1))
          break;
        ResourceBundleContainer.toResourceBundle()();

        if (v15)
        {
          sub_242079E50(&v14, (uint64_t)v16);
          sub_242079E50(v16, (uint64_t)&v14);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24207F758(0, *(_QWORD *)(v1 + 16) + 1);
            v1 = v12;
          }
          v11 = *(_QWORD *)(v1 + 16);
          v10 = *(_QWORD *)(v1 + 24);
          if (v11 >= v10 >> 1)
          {
            sub_24207F758(v10 > 1, v11 + 1);
            v1 = v13;
          }
          *(_QWORD *)(v1 + 16) = v11 + 1;
          sub_242079E50(&v14, v1 + 40 * v11 + 32);
        }
        else
        {
          sub_24207E9D0((uint64_t)&v14, &qword_25719D980);
        }
        if (v9 == v5)
        {
          sub_24207F3F8();
          return v1;
        }
      }
      __break(1u);
LABEL_20:
      sub_24207F5C0();
    }
    sub_24207F3F8();
    return MEMORY[0x24BEE4AF8];
  }
  return v1;
}

void (*sub_24207C688())(uint64_t)
{
  return sub_24207C6A4((void (*)(uint64_t))sub_24212831C);
}

void (*sub_24207C6A4(void (*result)(uint64_t)))(uint64_t)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = result;
    v3 = sub_24207F7EC();
    v2(v3);
    sub_24207F518();
    return (void (*)(uint64_t))v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24207C6E8(uint64_t a1)
{
  sub_24207C76C(a1, (void (*)(void))type metadata accessor for ResourceContainer, (uint64_t (*)(_BYTE *))sub_242082FEC, &qword_254399C58, (uint64_t (*)(void *))sub_24207C71C);
}

void *sub_24207C71C(void *a1)
{
  return sub_24207C83C(a1, (void (*)(uint64_t, id))sub_2421219E8);
}

void sub_24207C738(uint64_t a1)
{
  sub_24207C76C(a1, (void (*)(void))type metadata accessor for ResourceBundleContainer, (uint64_t (*)(_BYTE *))sub_242097C00, &qword_25719D980, (uint64_t (*)(void *))sub_24207C820);
}

void sub_24207C76C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(_BYTE *), uint64_t *a4, uint64_t (*a5)(void *))
{
  uint64_t v5;
  void *v10;
  void *v11;
  _BYTE v12[40];

  a2();
  sub_24207EA48(a1, (uint64_t)v12);
  v10 = (void *)a3(v12);
  sub_24207E9D0((uint64_t)v12, a4);
  if (!v5)
  {
    v11 = (void *)a5(v10);

  }
}

void *sub_24207C820(void *a1)
{
  return sub_24207C83C(a1, (void (*)(uint64_t, id))sub_2421226AC);
}

void *sub_24207C83C(void *result, void (*a2)(uint64_t, id))
{
  uint64_t v2;
  id v4;
  uint64_t v5;

  if (*(_QWORD *)(v2 + 16))
  {
    v4 = result;
    v5 = sub_24207F7EC();
    a2(v5, v4);
    sub_24207F518();
    return (void *)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24207C894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;

  v3 = (void *)sub_24207C8C0(a1, a2);
  if (!v2)

}

uint64_t sub_24207C8C0(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_242123370);
}

void sub_24207C8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;

  v3 = (void *)sub_24207C908(a1, a2);
  if (!v2)

}

uint64_t sub_24207C908(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_242123EA8);
}

uint64_t sub_24207C924(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_24211D698);
}

uint64_t sub_24207C940(uint64_t a1, uint64_t a2)
{
  return sub_24207C95C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_24211E1D0);
}

uint64_t sub_24207C95C(uint64_t result, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(v3 + 16))
  {
    v6 = result;
    swift_bridgeObjectRetain();
    v7 = sub_24207F7EC();
    a3(v7, v6, a2);
    sub_24207F518();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_24207C9C0()
{
  return (unint64_t)sub_24207CFD0((uint64_t (*)(uint64_t))sub_2421249E0) & 1;
}

uint64_t sub_24207C9E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

void sub_24207C9F8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;

  v1 = *(_QWORD *)(v0[2] + 16);
  v0[3] = v1;
  if (v1)
  {
    v3 = (char *)&dword_25719D990 + dword_25719D990;
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    v0[4] = v2;
    *v2 = v0;
    v2[1] = sub_24207CA84;
    ((void (*)(uint64_t (*)(void *, uint64_t, uint64_t), _QWORD))v3)(sub_24207CB7C, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24207CA84(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 48) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_24207CB00()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = objc_msgSend(v1, sel_BOOLValue);

  return sub_24207F448((uint64_t)v2, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24207CB44()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_24207CB7C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v7 = qword_25439A030;
  swift_retain();
  if (v7 != -1)
    swift_once();
  v8 = sub_24213263C();
  sub_24207BF18(v8, (uint64_t)qword_2543A65B0);
  v9 = sub_242132618();
  v10 = sub_2421329A8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_242074000, v9, v10, "calling generativeExperiencesEssentialResourcesReady()", v11, 2u);
    MEMORY[0x2426A4194](v11, -1, -1);
  }

  swift_unknownObjectRetain();
  sub_24207CCA8((uint64_t)sub_24207F278, v6, a1);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_24207CCA8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  _QWORD v5[6];

  v5[4] = a1;
  v5[5] = a2;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_24211D694;
  v5[3] = &unk_25132AA50;
  v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_generativeExperiencesEssentialResourcesReadyWith_, v4);
  _Block_release(v4);
}

uint64_t sub_24207CD44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_24207CD60()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void **v2;
  os_unfair_lock_s *v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE *v10;
  __int128 v11;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 40) + 16);
  v2 = (void **)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_24212A554();
  v4 = *v2;
  *(_QWORD *)(v0 + 48) = *v2;
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 40);
    v6 = v4;
    v11 = *(_OWORD *)(v0 + 24);
    os_unfair_lock_unlock(v3);
    v7 = swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v7;
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 24) = v5;
    *(_OWORD *)(v7 + 32) = v11;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v8;
    sub_24207F558((uint64_t)v8, (unint64_t *)&unk_25719D970);
    *v8 = v0;
    v8[1] = sub_24207CED4;
    return sub_242132D20();
  }
  else
  {
    sub_24207F02C();
    swift_allocError();
    *v10 = 0;
    swift_willThrow();
    os_unfair_lock_unlock(v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24207CED4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24207CF40()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24207CF74()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_24207CFB0()
{
  return (unint64_t)sub_24207CFD0((uint64_t (*)(uint64_t))sub_242125578) & 1;
}

uint64_t (*sub_24207CFD0(uint64_t (*result)(uint64_t)))(uint64_t)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;

  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = result;
    v5 = swift_retain();
    v6 = (void *)v4(v5);
    swift_release();
    if (!v2)
    {
      LOBYTE(v3) = objc_msgSend(v6, sel_BOOLValue);

    }
    return (uint64_t (*)(uint64_t))(v3 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CatalogClient.deinit()
{
  uint64_t v0;

  sub_24207F718();
  return v0;
}

uint64_t CatalogClient.__deallocating_deinit()
{
  sub_24207F718();
  return swift_deallocClassInstance();
}

void sub_24207D078(uint64_t a1, unint64_t a2)
{
  sub_24207C114(a1, a2);
}

void sub_24207D098(uint64_t a1, uint64_t a2)
{
  sub_24207C230(a1, a2);
}

unint64_t sub_24207D0B8()
{
  return sub_24207C290();
}

uint64_t sub_24207D0D8()
{
  return sub_24207C4D8();
}

uint64_t sub_24207D0F8(uint64_t a1, uint64_t a2)
{
  return sub_24207C924(a1, a2);
}

uint64_t sub_24207D118(uint64_t a1, uint64_t a2)
{
  return sub_24207C940(a1, a2);
}

uint64_t sub_24207D138(uint64_t a1, uint64_t a2)
{
  return sub_24207C0DC(a1, a2);
}

uint64_t sub_24207D158(uint64_t a1, uint64_t a2)
{
  return sub_24207C0F8(a1, a2);
}

void sub_24207D178()
{
  sub_24207BF44();
}

void sub_24207D198()
{
  sub_24207BF7C();
}

unint64_t sub_24207D1B8()
{
  return sub_24207C9C0() & 1;
}

uint64_t sub_24207D1DC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24207F3AC;
  return sub_24207C9E0();
}

unint64_t sub_24207D224()
{
  return sub_24207CFB0() & 1;
}

uint64_t LocalCatalogClient.__allocating_init(resources:resourceBundles:statusBlock:informationBlock:)()
{
  uint64_t v0;

  sub_24207F7D8();
  v0 = sub_24207F538();
  LocalCatalogClient.init(resources:resourceBundles:statusBlock:informationBlock:)();
  return v0;
}

uint64_t LocalCatalogClient.init(resources:resourceBundles:statusBlock:informationBlock:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::OpaquePointer v5;
  Swift::OpaquePointer v6;
  __int128 v8;

  sub_24207F7D8();
  CatalogIndex.init(resources:resourceBundles:)(v5, v6);
  *(_OWORD *)(v1 + 16) = v8;
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  return v1;
}

uint64_t sub_24207D304()
{
  return sub_24207D318();
}

uint64_t sub_24207D318()
{
  sub_24207F2FC(0, (unint64_t *)&unk_25719D970);
  return sub_242132A14();
}

uint64_t sub_24207D35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  CatalogIndex.resource(for:)(a1, a2, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24207D3DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v20 = v4;
    v10 = v6 + 32;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24207EA48(v10, (uint64_t)&v17);
      v12 = v18;
      v11 = v19;
      sub_242079800(&v17, v18);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v12, v11) == a1 && v13 == a2)
        break;
      v15 = sub_242079EB8();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_13;
      sub_242079824((uint64_t)&v17);
      v10 += 40;
      if (!--v7)
      {
        sub_24207F700();
        goto LABEL_11;
      }
    }
    sub_24207F700();
LABEL_13:
    swift_bridgeObjectRelease();
    sub_242079E50(&v17, a3);
    swift_bridgeObjectRelease();
    return sub_24207F3F8();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
LABEL_11:
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    swift_bridgeObjectRelease();
    return sub_24207F3F8();
  }
}

uint64_t sub_24207D53C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24207D554()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24207D56C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_24207D58C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

void LocalCatalogClient.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_24207F428();
}

uint64_t LocalCatalogClient.__deallocating_deinit()
{
  LocalCatalogClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24207D604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24207D35C(a1, a2, a3);
}

uint64_t sub_24207D624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24207D3DC(a1, a2, a3);
}

uint64_t sub_24207D644()
{
  return sub_24207D53C();
}

uint64_t sub_24207D664()
{
  return sub_24207D554();
}

uint64_t sub_24207D684()
{
  return sub_24207D56C();
}

uint64_t sub_24207D6A4()
{
  return sub_24207D58C();
}

uint64_t sub_24207D6C4()
{
  return sub_24207D304();
}

uint64_t sub_24207D6D8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24207D71C;
  return CatalogClientProtocol.generativeExperiencesEssentialResourcesReady()();
}

uint64_t sub_24207D71C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_24207F488();
  if (v1)
    v3 = 0;
  else
    v3 = v0 & 1;
  return sub_24207F448(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_24207D750(uint64_t a1, void *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD), uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  sub_24207D7C4(v10, a2, a3, a1, a4, a5);
  return swift_release();
}

uint64_t sub_24207D7C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _QWORD, _QWORD), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void (*v25)(_QWORD, _QWORD, _QWORD);
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  _QWORD *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  void (*v44)(uint64_t, uint64_t (*)(), uint64_t);
  _QWORD aBlock[6];

  v12 = sub_2420797C0(&qword_25719DA48);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  v18 = __CFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a1 + 16) = v19;
    v37 = a1;
    v20 = a3;
    v39 = a3;
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v43((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
    v38 = a6;
    v41 = v14;
    v42 = a4;
    v21 = *(unsigned __int8 *)(v13 + 80);
    v22 = (v21 + 40) & ~v21;
    v40 = v21 | 7;
    v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = (_QWORD *)swift_allocObject();
    v25 = a5;
    v44 = (void (*)(uint64_t, uint64_t (*)(), uint64_t))a5;
    v26 = v24;
    v24[2] = v20;
    v27 = v37;
    v24[3] = v37;
    v24[4] = a2;
    v28 = (char *)v24 + v22;
    v29 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v29(v28, v15, v12);
    v30 = (_QWORD *)((char *)v26 + v23);
    *v30 = v25;
    v30[1] = v38;
    aBlock[4] = sub_24207F11C;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24212C31C;
    aBlock[3] = &unk_25132A6D0;
    v31 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v32 = a2;
    swift_retain();
    swift_release();
    v33 = objc_msgSend(v32, sel_remoteObjectProxyWithErrorHandler_, v31);
    _Block_release(v31);
    v43(v15, v42, v12);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v27;
    v29((char *)(v34 + ((v21 + 24) & ~v21)), v15, v12);
    swift_retain();
    v35 = swift_unknownObjectRetain();
    v44(v35, sub_24207F204, v34);
    swift_release();
    return swift_unknownObjectRelease_n();
  }
  return result;
}

uint64_t sub_24207DA30(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a4;
  v54 = a6;
  v12 = sub_24213263C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v46 - v17;
  swift_beginAccess();
  v19 = *(_QWORD *)(a3 + 16);
  v52 = a2;
  if (sub_242130E98(a1, v19))
  {
    v50 = a7;
    if (qword_25439A0E0 != -1)
      swift_once();
    v20 = sub_24207BF18(v12, (uint64_t)qword_25439A110);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v20, v12);
    v21 = a1;
    v22 = a1;
    swift_retain();
    v23 = sub_242132618();
    v24 = sub_24213299C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v46 = (_QWORD *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v57 = v47;
      *(_DWORD *)v25 = 136315650;
      v49 = v13;
      v51 = a5;
      swift_beginAccess();
      v48 = a3 + 16;
      v27 = qword_25719D910;
      v26 = unk_25719D918;
      swift_bridgeObjectRetain();
      v56 = sub_24212F968(v27, v26, &v57);
      sub_242132A38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2112;
      v28 = a1;
      v29 = _swift_stdlib_bridgeErrorToNSError();
      v56 = v29;
      a5 = v51;
      sub_242132A38();
      v30 = v46;
      *v46 = v29;

      *(_WORD *)(v25 + 22) = 2048;
      swift_beginAccess();
      v55 = *(_QWORD *)(a3 + 16);
      sub_242132A38();
      swift_release();
      _os_log_impl(&dword_242074000, v23, v24, "%s async: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v25, 0x20u);
      sub_2420797C0(&qword_254399B50);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v30, -1, -1);
      v31 = v47;
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v31, -1, -1);
      MEMORY[0x2426A4194](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v12);
    }
    else
    {

      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
    return sub_24207D7C4(a3, v53, v52, a5, v54, v50);
  }
  else
  {
    if (qword_25439A0E0 != -1)
      swift_once();
    v32 = sub_24207BF18(v12, (uint64_t)qword_25439A110);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v32, v12);
    v33 = a1;
    v34 = a1;
    swift_retain();
    v35 = sub_242132618();
    v36 = sub_24213299C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v53 = (_QWORD *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v57 = v54;
      *(_DWORD *)v37 = 136315650;
      v51 = a5;
      v49 = v13;
      swift_beginAccess();
      v48 = a3 + 16;
      v39 = qword_25719D910;
      v38 = unk_25719D918;
      swift_bridgeObjectRetain();
      v56 = sub_24212F968(v39, v38, &v57);
      sub_242132A38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2112;
      v40 = a1;
      v41 = _swift_stdlib_bridgeErrorToNSError();
      v56 = v41;
      sub_242132A38();
      v42 = v53;
      *v53 = v41;

      *(_WORD *)(v37 + 22) = 2048;
      swift_beginAccess();
      v55 = *(_QWORD *)(a3 + 16);
      sub_242132A38();
      swift_release();
      _os_log_impl(&dword_242074000, v35, v36, "%s async: connection error during call: %@ reached max num connection attempts: %lu", (uint8_t *)v37, 0x20u);
      sub_2420797C0(&qword_254399B50);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v42, -1, -1);
      v43 = v54;
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v43, -1, -1);
      MEMORY[0x2426A4194](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v12);
    }
    else
    {

      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
    v57 = (uint64_t)a1;
    v45 = a1;
    sub_2420797C0(&qword_25719DA48);
    return sub_2421328E8();
  }
}

uint64_t sub_24207E0C0(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v8 = sub_24213263C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v53 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v53 - v16;
  if (a2)
  {
    v18 = a2;
    if (qword_25439A0E0 != -1)
      swift_once();
    v19 = sub_24207BF18(v8, (uint64_t)qword_25439A110);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, v19, v8);
    v20 = a2;
    v21 = a2;
    swift_retain();
    v22 = sub_242132618();
    v23 = sub_24213299C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v55 = a4;
      v26 = (_QWORD *)v25;
      v54 = swift_slowAlloc();
      v60 = v54;
      *(_DWORD *)v24 = 136315650;
      v57 = v8;
      swift_beginAccess();
      v56 = v9;
      v28 = qword_25719D910;
      v27 = unk_25719D918;
      swift_bridgeObjectRetain();
      v59 = sub_24212F968(v28, v27, &v60);
      sub_242132A38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2112;
      v29 = a2;
      v30 = _swift_stdlib_bridgeErrorToNSError();
      v59 = v30;
      sub_242132A38();
      *v26 = v30;

      *(_WORD *)(v24 + 22) = 2048;
      swift_beginAccess();
      v58 = *(_QWORD *)(a3 + 16);
      sub_242132A38();
      swift_release();
      _os_log_impl(&dword_242074000, v22, v23, "%s async: method error during call: %@, num connection attempts: %lu", (uint8_t *)v24, 0x20u);
      sub_2420797C0(&qword_254399B50);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v26, -1, -1);
      v31 = v54;
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v31, -1, -1);
      MEMORY[0x2426A4194](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v57);
    }
    else
    {

      swift_release();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    }
    v60 = (uint64_t)a2;
LABEL_13:
    sub_2420797C0(&qword_25719DA48);
    return sub_2421328E8();
  }
  if (!a1)
  {
    if (qword_25439A0E0 != -1)
      swift_once();
    v44 = sub_24207BF18(v8, (uint64_t)qword_25439A110);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v44, v8);
    swift_retain();
    v45 = sub_242132618();
    v46 = sub_24213299C();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v60 = v48;
      *(_DWORD *)v47 = 136315394;
      v57 = v8;
      swift_beginAccess();
      v56 = v9;
      v50 = qword_25719D910;
      v49 = unk_25719D918;
      swift_bridgeObjectRetain();
      v59 = sub_24212F968(v50, v49, &v60);
      sub_242132A38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2048;
      swift_beginAccess();
      v58 = *(_QWORD *)(a3 + 16);
      sub_242132A38();
      swift_release();
      _os_log_impl(&dword_242074000, v45, v46, "%s async: throwing neither result or error returned, num connection attempts: %lu", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v48, -1, -1);
      MEMORY[0x2426A4194](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);
    }
    else
    {

      swift_release();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    sub_24207F02C();
    v51 = swift_allocError();
    *v52 = 2;
    v60 = v51;
    goto LABEL_13;
  }
  v32 = qword_25439A0E0;
  v33 = a1;
  if (v32 != -1)
    swift_once();
  v34 = sub_24207BF18(v8, (uint64_t)qword_25439A110);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v34, v8);
  swift_retain();
  v35 = sub_242132618();
  v36 = sub_242132990();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v55 = v33;
    v39 = v38;
    v60 = v38;
    *(_DWORD *)v37 = 136315394;
    v57 = v8;
    swift_beginAccess();
    v56 = v9;
    v41 = qword_25719D910;
    v40 = unk_25719D918;
    swift_bridgeObjectRetain();
    v59 = sub_24212F968(v41, v40, &v60);
    sub_242132A38();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2048;
    swift_beginAccess();
    v58 = *(_QWORD *)(a3 + 16);
    sub_242132A38();
    swift_release();
    _os_log_impl(&dword_242074000, v35, v36, "%s async: method returned non-nil result, num connection attempts: %lu", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    v42 = v39;
    v33 = v55;
    MEMORY[0x2426A4194](v42, -1, -1);
    MEMORY[0x2426A4194](v37, -1, -1);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v57);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  }
  v60 = (uint64_t)v33;
  sub_2420797C0(&qword_25719DA48);
  return sub_2421328F4();
}

uint64_t sub_24207E8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void sub_24207E8B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v3;

  v1 = *v0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
  {
    sub_24210B170(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v1 + 16) + 1, 1, v1);
    *v0 = v3;
  }
}

void sub_24207E8FC(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  if (a1 + 1 > (uint64_t)(v2 >> 1))
  {
    sub_24210B170(v2 > 1, a1 + 1, 1, *v1);
    *v1 = v3;
  }
}

uint64_t sub_24207E938(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_2421328C4();
  return result;
}

uint64_t sub_24207E964()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  sub_24207F764();
  v10 = v4;
  v11 = v5;
  v6 = sub_24207F280((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v6, v2, v0);
  v7 = *v1;
  *(_QWORD *)(v7 + 16) = v3 + 1;
  return sub_242079E50(&v9, v7 + 40 * v3 + 32);
}

void sub_24207E9D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2420797C0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_24207F428();
}

uint64_t type metadata accessor for ResourceContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ResourceBundleContainer()
{
  return objc_opt_self();
}

void sub_24207EA48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_24207F428();
}

uint64_t method lookup function for ResourceContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResourceContainer.__allocating_init(resourceData:resourceType:assetBacked:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ResourceContainer.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for ResourceBundleContainer()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for CatalogService()
{
  return &type metadata for CatalogService;
}

uint64_t dispatch thunk of CatalogClientProtocol.resource(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CatalogClientProtocol.resourceBundle(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of CatalogClientProtocol.resources()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CatalogClientProtocol.resourceBundles()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CatalogClientProtocol.resourceStatus(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of CatalogClientProtocol.resourceInformation(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of CatalogClientProtocol.requestResource(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of CatalogClientProtocol.releaseResource(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of CatalogClientProtocol.requestResources(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of CatalogClientProtocol.releaseResources(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of CatalogClientProtocol.isGenerativeExperiencesEssentialResourcesReady()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))() & 1;
}

uint64_t dispatch thunk of CatalogClientProtocol.generativeExperiencesEssentialResourcesReady()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)sub_24207F5E8();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24207EC24;
  v2 = sub_24207F7AC();
  return v4(v2);
}

uint64_t sub_24207EC24()
{
  uint64_t v0;
  uint64_t v1;

  sub_24207F488();
  return sub_24207F448(v0, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of CatalogClientProtocol.hasEnoughStorageForGenerativeExperiencesEssentialResources()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))() & 1;
}

uint64_t dispatch thunk of CatalogClientProtocol.requestCompileResource(identifier:userInitiated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t type metadata accessor for CatalogClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for CatalogClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CatalogClient.xpcConnectionIsAllowed()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of CatalogClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CatalogClient.requestResources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of CatalogClient.releaseResources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CatalogClient.requestResource(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CatalogClient.releaseResource(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CatalogClient.resource(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CatalogClient.resourceBundle(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of CatalogClient.resources()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of CatalogClient.resourceBundles()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CatalogClient.sideload(resource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of CatalogClient.sideload(resourceBundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of CatalogClient.removeSideload(resource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of CatalogClient.removeSideload(resourceBundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of CatalogClient.resourceStatus(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of CatalogClient.resourceInformation(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of CatalogClient.isGenerativeExperiencesEssentialResourcesReady()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))() & 1;
}

uint64_t dispatch thunk of CatalogClient.generativeExperiencesEssentialResourcesReady()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_24207F5E8();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24207F3BC;
  return v3();
}

uint64_t dispatch thunk of CatalogClient.hasEnoughStorageForGenerativeExperiencesEssentialResources()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))() & 1;
}

uint64_t type metadata accessor for LocalCatalogClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocalCatalogClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalCatalogClient.__allocating_init(resources:resourceBundles:statusBlock:informationBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of LocalCatalogClient.requestResources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of LocalCatalogClient.releaseResources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of LocalCatalogClient.requestResource(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of LocalCatalogClient.releaseResource(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of LocalCatalogClient.resource(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of LocalCatalogClient.resourceBundle(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of LocalCatalogClient.resources()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of LocalCatalogClient.resourceBundles()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of LocalCatalogClient.resourceStatus(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of LocalCatalogClient.resourceInformation(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

unint64_t sub_24207F02C()
{
  unint64_t result;

  result = qword_25719DA40;
  if (!qword_25719DA40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for XPCServiceError, &type metadata for XPCServiceError);
    atomic_store(result, (unint64_t *)&qword_25719DA40);
  }
  return result;
}

uint64_t sub_24207F068(uint64_t a1)
{
  uint64_t v1;

  return sub_24207D750(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_24207F074()
{
  return swift_deallocObject();
}

uint64_t sub_24207F084()
{
  uint64_t v0;

  sub_2420797C0(&qword_25719DA48);
  sub_24207F718();
  swift_release();

  sub_24207F730();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24207F11C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(sub_2420797C0(&qword_25719DA48) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_24207DA30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), v1 + v4, *v5, v5[1]);
}

uint64_t sub_24207F17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24207F18C()
{
  return swift_release();
}

uint64_t sub_24207F194(void **a1, void *a2, uint64_t a3, void *a4)
{
  return sub_24207E0C0(*a1, a2, a3, a4);
}

uint64_t sub_24207F19C()
{
  sub_2420797C0(&qword_25719DA48);
  sub_24207F718();
  sub_24207F730();
  return swift_deallocObject();
}

uint64_t sub_24207F204()
{
  void **v0;
  void *v1;
  uint64_t v2;
  void *v3;

  sub_2420797C0(&qword_25719DA48);
  v0 = (void **)sub_24207F7AC();
  return sub_24207F194(v0, v1, v2, v3);
}

uint64_t sub_24207F254()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24207F278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24211D66C(a1, a2, *(void (**)(uint64_t *))(v2 + 16));
}

uint64_t *sub_24207F280(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t *sub_24207F2BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_24207F2FC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  sub_24207F428();
}

unint64_t sub_24207F330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25439A178;
  if (!qword_25439A178)
  {
    sub_24207F2FC(255, &qword_25439A180);
    result = MEMORY[0x2426A40E0](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25439A178);
  }
  return result;
}

uint64_t sub_24207F380()
{
  return swift_release();
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CatalogClientProtocol.hasEnoughStorageForGenerativeExperiencesEssentialResources()()
{
  return CatalogClientProtocol.isGenerativeExperiencesEssentialResourcesReady()();
}

uint64_t sub_24207F3C0()
{
  return sub_242132768();
}

id sub_24207F3E4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(v0, (SEL)(v3 + 328), v1, v2);
}

uint64_t sub_24207F3F8()
{
  return swift_bridgeObjectRelease_n();
}

void sub_24207F404()
{
  JUMPOUT(0x2426A4194);
}

void sub_24207F414(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

id sub_24207F430()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_24207F448(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

BOOL sub_24207F454(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t _s12ModelCatalog17ResourceContainerC14assetBackedKeySSvgZ_0()
{
  return 0x6361427465737361;
}

uint64_t sub_24207F488()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_24207F4AC()
{
  return sub_24213263C();
}

void sub_24207F4B4(id a1)
{

}

uint64_t sub_24207F4F0()
{
  return sub_2421327EC();
}

uint64_t sub_24207F50C()
{
  return swift_slowAlloc();
}

uint64_t sub_24207F518()
{
  return swift_release();
}

uint64_t sub_24207F538()
{
  return swift_allocObject();
}

void sub_24207F550()
{
  void *v0;

}

void sub_24207F558(uint64_t a1, unint64_t *a2)
{
  sub_24207F2FC(0, a2);
}

id sub_24207F560()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

void sub_24207F568()
{
  sub_24207ADEC();
}

uint64_t sub_24207F570(uint64_t *a1)
{
  return sub_24207AD94(a1);
}

uint64_t sub_24207F578()
{
  return 0x656372756F736572;
}

uint64_t sub_24207F59C()
{
  return 0x656372756F736572;
}

uint64_t sub_24207F5C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24207F5D4()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_24207F5E8()
{
  return swift_task_alloc();
}

uint64_t sub_24207F5FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24207F604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24207BE90(*(_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 8));
}

uint64_t sub_24207F618(uint64_t a1, uint64_t a2)
{
  sub_24207BF18(a1, a2);
  return sub_242132618();
}

uint64_t sub_24207F648()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24207F654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24207BE90(*(_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 8));
}

uint64_t sub_24207F668()
{
  return sub_2421329A8();
}

uint64_t sub_24207F670()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_24207F6A0()
{
  return 0xD000000000000015;
}

uint64_t sub_24207F6B4()
{
  return sub_242132768();
}

uint64_t sub_24207F6E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24207F700()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24207F708()
{
  return swift_getObjectType();
}

uint64_t sub_24207F718()
{
  return swift_release();
}

uint64_t sub_24207F720()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24207F730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

_WORD *sub_24207F740(_WORD *result)
{
  *result = 0;
  return result;
}

void sub_24207F74C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B09C(a1, a2, 1, v2);
}

void sub_24207F758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B170(a1, a2, 1, v2);
}

uint64_t sub_24207F778()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

id sub_24207F784()
{
  void *v0;

  return v0;
}

uint64_t sub_24207F78C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24207F794()
{
  return sub_242132564();
}

uint64_t sub_24207F7A0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_24207BED4(v0, v1);
}

uint64_t sub_24207F7AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24207F7B8()
{
  return sub_2421327EC();
}

uint64_t sub_24207F7EC()
{
  return swift_retain();
}

id sub_24207F7F4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_24207F800()
{
  return sub_242132768();
}

uint64_t sub_24207F80C()
{
  return sub_2421325A0();
}

uint64_t sub_24207F818()
{
  return sub_242132948();
}

uint64_t sub_24207F824()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_24207F830()
{
  return swift_getObjectType();
}

uint64_t sub_24207F838()
{
  uint64_t v0;

  return v0;
}

uint64_t defaultAJAXConfirguration(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;

  v97 = (char *)a2;
  v3 = sub_2420797C0((uint64_t *)&unk_254399E98);
  MEMORY[0x24BDAC7A8](v3);
  sub_242080330();
  v85 = v4;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420802F4();
  v87 = v6;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_2420802F4();
  v89 = v8;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v9);
  sub_2420802F4();
  v91 = v10;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v11);
  sub_2420802F4();
  v92 = v12;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v13);
  sub_2420802F4();
  v93 = v14;
  sub_2420802DC();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v84 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v84 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v84 - v22;
  v98 = sub_24213251C();
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  sub_242080330();
  v84[1] = v24;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v25);
  sub_2420802F4();
  v86 = v26;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v27);
  sub_2420802F4();
  v88 = v28;
  sub_2420802DC();
  MEMORY[0x24BDAC7A8](v29);
  sub_2420802F4();
  v90 = v30;
  sub_2420802DC();
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)v84 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)v84 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35);
  v40 = (char *)v84 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38);
  v43 = (char *)v84 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v46 = (char *)v84 - v45;
  v95 = a1;
  if (a1 == 0xD000000000000039 && v44 == 0x80000002421342B0
    || (sub_2420802AC(), v94 = v47, (sub_242132D14() & 1) != 0))
  {
    sub_2420802AC();
    sub_242080288();
    sub_242080268((uint64_t)v23);
    if (!v48)
    {
      sub_242080300();
      sub_2420802A4((uint64_t)v46, (uint64_t)v23);
      v49 = (uint64_t)v97;
      sub_2420802A4((uint64_t)v97, (uint64_t)v46);
      v50 = sub_2420802B8();
      v51 = (_QWORD *)(v49 + *(int *)(v50 + 20));
      *v51 = 0xD00000000000001DLL;
      v51[1] = 0x8000000242138D50;
      v52 = (_QWORD *)(v49 + *(int *)(v50 + 24));
      *v52 = 0;
      v52[1] = 0xE000000000000000;
      v53 = v49;
      return sub_24207E8A8(v53, 0, 1, v50);
    }
    sub_2420801DC((uint64_t)v23);
    sub_2420802E8();
    for (v84[0] = 13; ; v84[0] = 28)
    {
LABEL_57:
      sub_242132B94();
      __break(1u);
LABEL_58:
      sub_2420801DC(a1);
      sub_2420802E8();
    }
  }
  sub_24208034C();
  if (v48 && (sub_242080294(), v48) || (sub_24208021C() & 1) != 0)
  {
    sub_2420802AC();
    sub_242080288();
    sub_242080268((uint64_t)v21);
    if (v48)
    {
      sub_2420801DC((uint64_t)v21);
      sub_2420802E8();
      v84[0] = 18;
      goto LABEL_57;
    }
    sub_242080300();
    sub_2420802A4((uint64_t)v43, (uint64_t)v21);
    v54 = (unint64_t)v97;
    sub_2420802A4((uint64_t)v97, (uint64_t)v43);
    sub_2420802B8();
    sub_2420802C0();
    v59 = v58 - 512;
    goto LABEL_12;
  }
  v54 = 0xD000000000000033;
  if (v95 == 0xD000000000000033 && (sub_242080294(), v48) || (sub_2420802AC(), (sub_24208025C() & 1) != 0))
  {
    sub_2420802AC();
    sub_242080288();
    sub_242080268((uint64_t)v18);
    if (v48)
    {
      sub_2420801DC((uint64_t)v18);
      sub_2420802E8();
      v84[0] = 23;
      goto LABEL_57;
    }
    sub_242080300();
    sub_2420802A4((uint64_t)v40, (uint64_t)v18);
    v54 = (unint64_t)v97;
    sub_2420802A4((uint64_t)v97, (uint64_t)v40);
    sub_2420802B8();
    sub_2420802C0();
    goto LABEL_12;
  }
  if (v95 == 0xD000000000000033 && (sub_242080294(), v48) || (sub_24208021C() & 1) != 0)
  {
    sub_2420802AC();
    a1 = v93;
    sub_242080288();
    v62 = v98;
    if (sub_2420801D0(a1, 1, v98) == 1)
      goto LABEL_58;
    v63 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 32);
    v63(v37, a1, v62);
    v64 = (uint64_t)v97;
    v63(v97, (uint64_t)v37, v62);
    sub_2420802B8();
    sub_2420802C0();
    *v65 = v66;
    v65[1] = v67;
    v69 = (_QWORD *)(v64 + *(int *)(v68 + 24));
    *v69 = 0;
    v69[1] = 0xE000000000000000;
    v53 = v64;
    return sub_24207E8A8(v53, 0, 1, v50);
  }
  sub_24208034C();
  if (v48 && (sub_242080294(), v48) || (sub_24208021C() & 1) != 0)
  {
    sub_2420802AC();
    v70 = v92;
    sub_242080288();
    sub_242080268(v70);
    if (v48)
    {
      sub_242080344();
      sub_2420802E8();
      v84[0] = 33;
      goto LABEL_57;
    }
    sub_242080300();
    sub_2420802A4((uint64_t)v34, v70);
    v54 = (unint64_t)v97;
    sub_2420802A4((uint64_t)v97, (uint64_t)v34);
    sub_2420802B8();
    sub_242080230();
    v59 = v71 & 0xFFFFFFFFFFFFLL | 0xEF36000000000000;
    goto LABEL_12;
  }
  a1 = 0xD00000000000003FLL;
  if (v95 == 0xD00000000000003FLL && (sub_242080294(), v48) || (sub_2420802AC(), (sub_24208025C() & 1) != 0))
  {
    sub_2420802AC();
    v72 = v91;
    sub_242080288();
    sub_242080268(v72);
    if (v48)
    {
      sub_242080344();
      sub_2420802E8();
      v84[0] = 38;
      goto LABEL_57;
    }
    sub_242080300();
    v73 = v90;
    sub_2420802A4(v90, v72);
    v54 = (unint64_t)v97;
    sub_2420802A4((uint64_t)v97, v73);
    sub_2420802B8();
    sub_242080230();
    v59 = v74 & 0xFFFFFFFFFFFFLL | 0xEF34000000000000;
    goto LABEL_12;
  }
  v75 = v98;
  if (v95 == 0xD00000000000003FLL && (sub_242080294(), v48) || (sub_24208021C() & 1) != 0)
  {
    sub_2420802AC();
    v76 = v89;
    sub_242080288();
    if (sub_2420801D0(v76, 1, v75) == 1)
    {
      sub_242080344();
      sub_2420802E8();
      v84[0] = 43;
      goto LABEL_57;
    }
    sub_242080300();
    v77 = v88;
    sub_2420802A4(v88, v76);
    v54 = (unint64_t)v97;
    sub_2420802A4((uint64_t)v97, v77);
    sub_2420802B8();
    sub_242080230();
    v59 = v78 & 0xFFFFFFFFFFFFLL | 0xEF35000000000000;
LABEL_12:
    *v56 = v57;
    v56[1] = v59;
    v60 = (_QWORD *)(v54 + *(int *)(v55 + 24));
    *v60 = 0;
    v60[1] = 0xE000000000000000;
    v53 = v54;
    return sub_24207E8A8(v53, 0, 1, v50);
  }
  sub_24208034C();
  if (v48 && (sub_242080294(), v48) || (sub_24208021C() & 1) != 0)
  {
    sub_2420802AC();
    a1 = v87;
    sub_2421324EC();
    if (sub_2420801D0(a1, 1, v98) == 1)
    {
      sub_2420801DC(v87);
      sub_2420802E8();
      v84[0] = 48;
      goto LABEL_57;
    }
    sub_242080300();
    sub_242080320(v79, v87);
    sub_24208030C();
    v55 = sub_2420802B8();
    v50 = v55;
    v56 = (unint64_t *)(*(int *)(v55 + 20) - 0x2FFFFFFFFFFFFFCDLL);
    v57 = 0xD000000000000029;
    v80 = "afm-text-30b-text-assistant-summarization";
LABEL_46:
    v59 = (unint64_t)(v80 - 32) | 0x8000000000000000;
    goto LABEL_12;
  }
  sub_24208034C();
  if (v48 && v94 == ((v81 - 32) | 0x8000000000000000) || (sub_24208021C() & 1) != 0)
  {
    sub_2420802AC();
    a1 = v85;
    sub_2421324EC();
    if (sub_2420801D0(a1, 1, v98) == 1)
    {
      sub_2420801DC(v85);
      sub_2420802E8();
      v84[0] = 53;
      goto LABEL_57;
    }
    sub_242080300();
    sub_242080320(v82, v85);
    sub_24208030C();
    v55 = sub_2420802B8();
    v50 = v55;
    v56 = (unint64_t *)(*(int *)(v55 + 20) - 0x2FFFFFFFFFFFFFCDLL);
    v57 = 0xD00000000000001ELL;
    v80 = "afm-text-30b-instruct-20240126";
    goto LABEL_46;
  }
  v83 = sub_2420802B8();
  return sub_24207E8A8((uint64_t)v97, 1, 1, v83);
}

uint64_t sub_2420801D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_2420801DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2420797C0((uint64_t *)&unk_254399E98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24208021C()
{
  return sub_242132D14();
}

uint64_t sub_24208025C()
{
  return sub_242132D14();
}

uint64_t sub_242080268(uint64_t a1)
{
  uint64_t v1;

  return sub_2420801D0(a1, 1, *(_QWORD *)(v1 - 88));
}

uint64_t sub_242080288()
{
  return sub_2421324EC();
}

uint64_t sub_2420802A4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_2420802B8()
{
  return type metadata accessor for AJAXConfiguration();
}

uint64_t sub_24208030C()
{
  uint64_t (*v0)(_QWORD, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(*(_QWORD *)(v3 - 96), v2, v1);
}

uint64_t sub_242080320(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, _QWORD);
  uint64_t v3;
  uint64_t v4;

  return v2(v3, a2, *(_QWORD *)(v4 - 88));
}

uint64_t sub_242080344()
{
  uint64_t v0;

  return sub_2420801DC(v0);
}

void static Catalog.ResourceBundle.Sanitizer.TextModerationLMID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.Sanitizer.TextModerationLM()()
{
  sub_242082EB8();
  static Catalog.Resource.Sanitizer.TextModerationLM()();
  sub_242082E08(0xD000000000000027);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.AFMTextInstruct3BBaseID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.AFMTextInstruct3BBase()()
{
  sub_242082E44();
  sub_242082E9C();
  sub_242082EA4();
  sub_242082E08(0xD000000000000026);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesis()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.AnswerSynthesis()(v0);
  static Catalog.Resource.LLM.DraftModel.AnswerSynthesis()(v1);
  sub_242082E08(0xD000000000000032);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServerID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServer()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.AnswerSynthesisServer()(v0);
  static Catalog.Resource.LLM.DraftModel.AnswerSynthesisServer()(v1);
  sub_242082E08(0xD000000000000039);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.AutonamingMessagesID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.AutonamingMessages()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.AutonamingMessages()(v0);
  static Catalog.Resource.LLM.DraftModel.AutonamingMessages()(v1);
  sub_242082F28();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.BulletsTransformID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.BulletsTransform()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.BulletsTransform()(v0);
  static Catalog.Resource.LLM.DraftModel.BulletsTransform()(v1);
  sub_242082F1C();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLM()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = sub_242082FD0(a1, a2);
  static Catalog.Resource.LLM.Model.CodeLM()(v2);
  sub_242082E80();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMExperimentalID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMExperimental()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMTokenizerExperimental()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMExperimental()(v2);
  sub_242082EA4();
  sub_242082E08(0xD000000000000023);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMLargeV1ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMLargeV1()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMLargeV1Tokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMLargeV1()(v2);
  sub_242082E58();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMLargeV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMLargeV2()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMLargeV2Tokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMLargeV2()(v2);
  sub_242082E58();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMLargeV3ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMLargeV3()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMLargeV3Tokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMLargeV3()(v2);
  sub_242082E58();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMSafetyGuardrailID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMSafetyGuardrail()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMSafetyGuardrailTokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMSafetyGuardrail()(v2);
  sub_242082F34();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMSmallV1ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMSmallV1()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMSmallV1Tokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMSmallV1()(v2);
  sub_242082E58();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMSmallV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMSmallV2()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMSmallV2Tokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMSmallV2()(v2);
  sub_242082E58();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMSmallV3ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMSmallV3()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMSmallV3Tokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMSmallV3()(v2);
  sub_242082E58();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMV1ANE3BID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMV1ANE3B()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  double v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMV1ANE3BTokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMV1ANE3B()(v2);
  v3 = sub_242082F94();
  static Catalog.Resource.LLM.DraftModel.CodeLMV1ANE3B()(v3);
  sub_242082E08(0xD000000000000029);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMV2()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMTokenizerV2()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMV2()(v2);
  sub_242082E80();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMV3ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMV3()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMTokenizerV3()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMV3()(v2);
  sub_242082E80();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMV4ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMV4()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeLMTokenizerV4()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeLMV4()(v2);
  sub_242082E80();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMWithDraftID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeLMWithDraft()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  double v3;
  uint64_t v4;

  v2 = sub_242082FD0(a1, a2);
  static Catalog.Resource.LLM.Model.CodeLM()(v2);
  v3 = sub_242082F94();
  static Catalog.Resource.LLM.DraftModel.CodeLM()(v3);
  sub_242082F68();
  sub_242082E08(v4);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeSafetyGuardrailID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.CodeSafetyGuardrail()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.CodeSafetyGuardrailTokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.CodeSafetyGuardrail()(v2);
  sub_242082F34();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ConciseToneID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ConciseTone()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.ConciseTone()(v0);
  static Catalog.Resource.LLM.DraftModel.ConciseTone()(v1);
  sub_242082E08(0xD00000000000002ELL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.FactualConsistencyClassifierID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.FactualConsistencyClassifier()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.FactualConsistencyClassifier()(v0);
  static Catalog.Resource.LLM.DraftModel.FactualConsistencyClassifier()(v1);
  sub_242082E08(0xD000000000000040);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.FriendlyToneID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.FriendlyTone()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.FriendlyTone()(v0);
  static Catalog.Resource.LLM.DraftModel.FriendlyTone()(v1);
  sub_242082E08(0xD00000000000002FLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.InstructServerBaseID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.InstructServerBase()()
{
  uint64_t v0;

  sub_242082E24();
  sub_242082E50();
  sub_242082EA4();
  sub_242082F68();
  sub_242082E08(v0);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.MagicRewriteID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.MagicRewrite()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.MagicRewrite()(v0);
  static Catalog.Resource.LLM.DraftModel.MagicRewrite()(v1);
  sub_242082E08(0xD00000000000002FLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.MailReplyID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.MailReply()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.MailReply()(v0);
  static Catalog.Resource.LLM.DraftModel.MailReply()(v1);
  sub_242082E08(0xD00000000000002CLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.MessagesReplyID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.MessagesReply()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.MessagesReply()(v0);
  static Catalog.Resource.LLM.DraftModel.MessagesReply()(v1);
  sub_242082E08(0xD000000000000030);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.NLRouterBaseID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.NLRouterBase()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.NLRouterTokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.NLRouterBase()(v2);
  sub_242082E80();
  sub_242082E08(v3);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.OpenEndedToneID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.OpenEndedTone()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v1 = sub_242082E50();
  static Catalog.Resource.LLM.Adapter.BaseAdapter()(v1);
  *(_QWORD *)(v0 + 168) = 0;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  sub_242082E08(0xD000000000000038);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationAssetCurationID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationAssetCuration()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationAssetCuration()(v0);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationAssetCuration()(v1);
  sub_242082E08(0xD000000000000047);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationAssetCurationV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationAssetCurationV2()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2()(v0);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2()(v1);
  sub_242082E08(0xD00000000000004ALL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationBaseID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationBase()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242082E24();
  static Catalog.Resource.LLM.Model.PhotosMemoriesCreationBase()(v0);
  sub_242082EA4();
  sub_242082F1C();
  sub_242082E08(v1);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationGlobalTraitsID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationGlobalTraits()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationGlobalTraits()(v0);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits()(v1);
  sub_242082E08(0xD000000000000046);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationGlobalTraitsV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationGlobalTraitsV2()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2()(v0);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2()(v1);
  sub_242082E08(0xD000000000000049);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstandingID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstanding()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding()(v0);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding()(v1);
  sub_242082E08(0xD00000000000004CLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstandingV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstandingV2()()
{
  uint64_t v0;
  uint64_t Understanding;

  sub_242082E24();
  v0 = sub_242082E50();
  Understanding = static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()(v0);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2()(Understanding);
  sub_242082E08(0xD00000000000004FLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationStorytellerID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationStoryteller()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationStoryteller()(v0);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationStoryteller()(v1);
  sub_242082E08(0xD000000000000044);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationStorytellerV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationStorytellerV2()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationStorytellerV2()(v0);
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2()(v1);
  sub_242082E08(0xD000000000000047);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PlannerID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.Planner()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.Planner()(v0);
  static Catalog.Resource.LLM.DraftModel.Planner()(v1);
  sub_242082E08(0xD000000000000030);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PlannerV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PlannerV2()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PlannerV2()(v0);
  static Catalog.Resource.LLM.DraftModel.PlannerV2()(v1);
  sub_242082F1C();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PlannerV3ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.PlannerV3()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.PlannerV3()(v0);
  static Catalog.Resource.LLM.DraftModel.PlannerV3()(v1);
  sub_242082F1C();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ProfessionalToneID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ProfessionalTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.ProfessionalTone()(v0);
  static Catalog.Resource.LLM.DraftModel.ProfessionalTone()(v1);
  sub_242082F1C();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ProofreadingReviewID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ProofreadingReview()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.ProofreadingReview()(v0);
  static Catalog.Resource.LLM.DraftModel.ProofreadingReview()(v1);
  sub_242082F28();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGenerationID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGeneration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ResponseGeneration()(v0);
  static Catalog.Resource.LLM.DraftModel.ResponseGeneration()(v1);
  sub_242082F88();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGenerationV2ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGenerationV2()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ResponseGenerationV2()(v0);
  static Catalog.Resource.LLM.DraftModel.ResponseGenerationV2()(v1);
  sub_242082E08(0xD00000000000003FLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGenerationV3ID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGenerationV3()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ResponseGenerationV3()(v0);
  static Catalog.Resource.LLM.DraftModel.ResponseGenerationV3()(v1);
  sub_242082E08(0xD00000000000003FLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SafetyGuardrailID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SafetyGuardrail()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.SafetyGuardrail()(v0);
  static Catalog.Resource.LLM.DraftModel.SafetyGuardrail()(v1);
  sub_242082E08(0xD000000000000032);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SafetyGuardrailLiteID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SafetyGuardrailLite()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  sub_242082EB8();
  v2 = static Catalog.Resource.Tokenizer.SafetyGuardrailLiteTokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.SafetyGuardrailLite()(v2);
  sub_242082EA4();
  sub_242082E08(0xD00000000000002BLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SearchQueryUnderstandingOnDeviceID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SearchQueryUnderstandingOnDevice()()
{
  uint64_t v0;
  uint64_t UnderstandingOn;
  uint64_t v2;

  sub_242082E44();
  v0 = sub_242082E9C();
  UnderstandingOn = static Catalog.Resource.LLM.Adapter.SearchQueryUnderstandingOnDevice()(v0);
  static Catalog.Resource.LLM.DraftModel.SearchQueryUnderstandingOnDevice()(UnderstandingOn);
  sub_242082F88();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SearchQueryUnderstandingServerID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SearchQueryUnderstandingServer()()
{
  uint64_t v0;
  uint64_t Understanding;

  sub_242082E24();
  v0 = sub_242082E50();
  Understanding = static Catalog.Resource.LLM.Adapter.SearchQueryUnderstandingServer()(v0);
  static Catalog.Resource.LLM.DraftModel.SearchQueryUnderstandingServer()(Understanding);
  sub_242082E08(0xD000000000000043);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerBulletsTransformID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerBulletsTransform()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerBulletsTransform()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerBulletsTransform()(v1);
  sub_242082E08(0xD00000000000003ALL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerConciseToneID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerConciseTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerConciseTone()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerConciseTone()(v1);
  sub_242082F28();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerFriendlyToneID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerFriendlyTone()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerFriendlyTone()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerFriendlyTone()(v1);
  sub_242082E08(0xD000000000000036);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMagicRewriteID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMagicRewrite()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerMagicRewrite()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerMagicRewrite()(v1);
  sub_242082E08(0xD000000000000036);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyLongFormBasicID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyLongFormBasic()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerMailReplyLongFormBasic()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyLongFormBasic()(v1);
  sub_242082E08(0xD000000000000043);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyLongFormRewriteID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyLongFormRewrite()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerMailReplyLongFormRewrite()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyLongFormRewrite()(v1);
  sub_242082E08(0xD000000000000045);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyQAID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyQA()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerMailReplyQA()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyQA()(v1);
  sub_242082E08(0xD000000000000036);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerProfessionalToneID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerProfessionalTone()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerProfessionalTone()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerProfessionalTone()(v1);
  sub_242082E08(0xD00000000000003ALL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerProofreadingReviewID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerProofreadingReview()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerProofreadingReview()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerProofreadingReview()(v1);
  sub_242082F88();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerTablesTransformID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerTablesTransform()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerTablesTransform()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerTablesTransform()(v1);
  sub_242082E08(0xD000000000000039);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerTakeawaysTransformID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.ServerTakeawaysTransform()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerTakeawaysTransform()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerTakeawaysTransform()(v1);
  sub_242082F88();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SummarizationID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.Summarization()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.Summarization()(v0);
  static Catalog.Resource.LLM.DraftModel.Summarization()(v1);
  sub_242082E08(0xD00000000000002FLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SummarizationTextSummarizerID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SummarizationTextSummarizer()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E24();
  v0 = sub_242082E50();
  v1 = static Catalog.Resource.LLM.Adapter.ServerTextSummarizer()(v0);
  static Catalog.Resource.LLM.DraftModel.ServerTextSummarizer()(v1);
  sub_242082E08(0xD000000000000038);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SummarizationTextSummarizerAjaxBaseID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.SummarizationTextSummarizerAjaxBase()()
{
  uint64_t v0;

  v0 = sub_242082E24();
  static Catalog.Resource.LLM.Model.SummarizationTextSummarizerAjaxBase()(v0);
  sub_242082EA4();
  sub_242082E08(0xD00000000000003DLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.TablesTransformID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.TablesTransform()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.TablesTransform()(v0);
  static Catalog.Resource.LLM.DraftModel.TablesTransform()(v1);
  sub_242082E08(0xD000000000000032);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.TakeawaysTransformID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.TakeawaysTransform()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.TakeawaysTransform()(v0);
  static Catalog.Resource.LLM.DraftModel.TakeawaysTransform()(v1);
  sub_242082F28();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.UIPreviewsID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.UIPreviews()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.UIPreviews()(v0);
  static Catalog.Resource.LLM.DraftModel.UIPreviews()(v1);
  sub_242082F68();
  sub_242082E08(v2);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.UrgencyClassificationID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.UrgencyClassification()()
{
  uint64_t v0;
  uint64_t v1;

  sub_242082E44();
  v0 = sub_242082E9C();
  v1 = static Catalog.Resource.LLM.Adapter.UrgencyClassification()(v0);
  static Catalog.Resource.LLM.DraftModel.UrgencyClassification()(v1);
  sub_242082E08(0xD000000000000038);
  sub_24207F428();
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.VisualGenerationQueryHandlingLiteID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.TokenGeneration.LLM.VisualGenerationQueryHandlingLite()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *HandlingLite;

  sub_242082EB8();
  HandlingLite = static Catalog.Resource.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer()(v1, v0);
  static Catalog.Resource.LLM.Model.VisualGenerationQueryHandlingLite()(HandlingLite);
  sub_242082EA4();
  sub_242082E08(0xD00000000000002CLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.AnimationID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.Animation()()
{
  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.Animation()();
  sub_242082E08(0xD000000000000030);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.DiffusionBaseID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.DiffusionBase()()
{
  uint64_t v0;

  sub_242082E74();
  *(_QWORD *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  sub_242082E08(0xD00000000000002BLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.EmojiID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.Emoji()()
{
  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.Emoji()();
  sub_242082E08(0xD00000000000002CLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.IllustrationID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.Illustration()()
{
  uint64_t v0;

  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.Illustration()();
  sub_242082F1C();
  sub_242082E08(v0);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedAnimationID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedAnimation()()
{
  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedAnimation()();
  sub_242082E08(0xD00000000000003DLL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedEmojiID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedEmoji()()
{
  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedEmoji()();
  sub_242082E08(0xD000000000000039);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedIllustrationID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedIllustration()()
{
  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedIllustration()();
  sub_242082E08(0xD000000000000040);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedScribbleID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedScribble()()
{
  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedScribble()();
  sub_242082E08(0xD000000000000042);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedSketchID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.PersonalizedSketch()()
{
  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedSketch()();
  sub_242082E08(0xD00000000000003ALL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.RefinerID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.Refiner()()
{
  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.Refiner()();
  sub_242082E08(0xD00000000000002ELL);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.ScribbleID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.Scribble()()
{
  uint64_t v0;

  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.Scribble()();
  sub_242082F28();
  sub_242082E08(v0);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.SketchID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.Sketch()()
{
  uint64_t v0;

  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.Sketch()();
  sub_242082F68();
  sub_242082E08(v0);
  sub_24207F428();
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.SkinToneEmojiID.getter(_QWORD *a1@<X8>)
{
  sub_242082DF8(a1);
}

void static Catalog.ResourceBundle.VisualGeneration.Diffusion.SkinToneEmoji()()
{
  uint64_t v0;

  sub_242082E74();
  static Catalog.Resource.Diffusion.Adapter.SkinToneEmoji()();
  sub_242082F28();
  sub_242082E08(v0);
  sub_24207F428();
}

void sub_242081CD0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t HandlingLite;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_2420797C0(&qword_254397478);
  v0 = sub_24207F538();
  *(_OWORD *)(v0 + 16) = xmmword_242145D30;
  *(_QWORD *)(v0 + 56) = &type metadata for AssetBackedLLMBundle;
  v1 = sub_242082C5C();
  *(_QWORD *)(v0 + 64) = v1;
  v2 = sub_242082E18();
  *(_QWORD *)(v0 + 32) = v2;
  v3 = static Catalog.Resource.Tokenizer.AFMTextInstructEnglish49k()();
  static Catalog.Resource.LLM.Model.AFMTextInstruct3BBase()(v3);
  sub_242082FA8();
  sub_242082EFC();
  *(_QWORD *)(v2 + 16) = v4 - 2;
  *(_QWORD *)(v2 + 24) = 0x80000002421335E0;
  *(_QWORD *)(v0 + 96) = &type metadata for AssetBackedDiffusionBundle;
  v58 = sub_242082C9C();
  *(_QWORD *)(v0 + 104) = v58;
  v5 = sub_24207F538();
  *(_QWORD *)(v0 + 72) = v5;
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.Animation()();
  sub_242082F10();
  *(_QWORD *)(v5 + 16) = 0xD000000000000030;
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v0 + 136) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 144) = v1;
  *(_QWORD *)(v0 + 112) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesis()();
  *(_QWORD *)(v0 + 176) = &type metadata for LLMBundle;
  v7 = sub_242082D0C();
  *(_QWORD *)(v0 + 184) = v7;
  *(_QWORD *)(v0 + 152) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServer()();
  *(_QWORD *)(v0 + 216) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 224) = v1;
  *(_QWORD *)(v0 + 192) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.AutonamingMessages()();
  *(_QWORD *)(v0 + 256) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 264) = v1;
  *(_QWORD *)(v0 + 232) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.BulletsTransform()();
  *(_QWORD *)(v0 + 296) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 304) = v1;
  *(_QWORD *)(v0 + 272) = sub_242082E18();
  v8 = static Catalog.Resource.Tokenizer.CodeLMTokenizer()();
  static Catalog.Resource.LLM.Model.CodeLM()(v8);
  sub_242082E30();
  sub_242082EEC((uint64_t)"com.apple.fm.code.generate_v1.base");
  v10 = v9;
  *(_QWORD *)(v0 + 336) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 344) = v1;
  *(_QWORD *)(v0 + 312) = sub_242082E18();
  v11 = static Catalog.Resource.Tokenizer.CodeLMTokenizerExperimental()();
  static Catalog.Resource.LLM.Model.CodeLMExperimental()(v11);
  sub_242082E30();
  sub_242082EC4(0xD000000000000023);
  *(_QWORD *)(v0 + 376) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 384) = v1;
  *(_QWORD *)(v0 + 352) = sub_242082E18();
  v12 = static Catalog.Resource.Tokenizer.CodeLMLargeV1Tokenizer()();
  static Catalog.Resource.LLM.Model.CodeLMLargeV1()(v12);
  sub_242082E30();
  sub_242082EDC((uint64_t)"com.apple.fm.code.generate_large_v1.base");
  *(_QWORD *)(v0 + 416) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 424) = v1;
  *(_QWORD *)(v0 + 392) = sub_242082E18();
  v13 = static Catalog.Resource.Tokenizer.CodeLMLargeV2Tokenizer()();
  static Catalog.Resource.LLM.Model.CodeLMLargeV2()(v13);
  sub_242082E30();
  sub_242082EDC((uint64_t)"com.apple.fm.code.generate_large_v2.base");
  *(_QWORD *)(v0 + 456) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 464) = v1;
  *(_QWORD *)(v0 + 432) = sub_242082E18();
  v14 = static Catalog.Resource.Tokenizer.CodeLMLargeV3Tokenizer()();
  static Catalog.Resource.LLM.Model.CodeLMLargeV3()(v14);
  sub_242082E30();
  sub_242082EDC((uint64_t)"com.apple.fm.code.generate_large_v3.base");
  *(_QWORD *)(v0 + 496) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 504) = v1;
  v15 = sub_242082E18();
  *(_QWORD *)(v0 + 472) = v15;
  v16 = static Catalog.Resource.Tokenizer.CodeLMSafetyGuardrailTokenizer()();
  static Catalog.Resource.LLM.Model.CodeLMSafetyGuardrail()(v16);
  sub_242082E30();
  *(_QWORD *)(v15 + 16) = 0xD000000000000030;
  *(_QWORD *)(v15 + 24) = 0x8000000242134620;
  *(_QWORD *)(v0 + 536) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 544) = v1;
  *(_QWORD *)(v0 + 512) = sub_242082E18();
  v17 = static Catalog.Resource.Tokenizer.CodeLMSmallV1Tokenizer()();
  static Catalog.Resource.LLM.Model.CodeLMSmallV1()(v17);
  sub_242082E30();
  sub_242082EDC((uint64_t)"com.apple.fm.code.generate_small_v1.base");
  *(_QWORD *)(v0 + 576) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 584) = v1;
  *(_QWORD *)(v0 + 552) = sub_242082E18();
  v18 = static Catalog.Resource.Tokenizer.CodeLMSmallV2Tokenizer()();
  static Catalog.Resource.LLM.Model.CodeLMSmallV2()(v18);
  sub_242082E30();
  sub_242082EDC((uint64_t)"com.apple.fm.code.generate_small_v2.base");
  *(_QWORD *)(v0 + 616) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 624) = v1;
  *(_QWORD *)(v0 + 592) = sub_242082E18();
  v19 = static Catalog.Resource.Tokenizer.CodeLMSmallV3Tokenizer()();
  static Catalog.Resource.LLM.Model.CodeLMSmallV3()(v19);
  sub_242082E30();
  sub_242082EDC((uint64_t)"com.apple.fm.code.generate_small_v3.base");
  *(_QWORD *)(v0 + 656) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 664) = v1;
  *(_QWORD *)(v0 + 632) = sub_242082E18();
  v20 = static Catalog.Resource.Tokenizer.CodeLMV1ANE3BTokenizer()();
  static Catalog.Resource.LLM.Model.CodeLMV1ANE3B()(v20);
  v21 = sub_242082FBC();
  static Catalog.Resource.LLM.DraftModel.CodeLMV1ANE3B()(v21);
  sub_242082EC4(0xD000000000000029);
  *(_QWORD *)(v0 + 696) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 704) = v1;
  *(_QWORD *)(v0 + 672) = sub_242082E18();
  v22 = static Catalog.Resource.Tokenizer.CodeLMTokenizerV2()();
  static Catalog.Resource.LLM.Model.CodeLMV2()(v22);
  sub_242082E30();
  sub_242082F50((uint64_t)"com.apple.fm.code.generate_v2.base");
  *(_QWORD *)(v0 + 736) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 744) = v1;
  *(_QWORD *)(v0 + 712) = sub_242082E18();
  v23 = static Catalog.Resource.Tokenizer.CodeLMTokenizerV3()();
  static Catalog.Resource.LLM.Model.CodeLMV3()(v23);
  sub_242082E30();
  sub_242082F50((uint64_t)"com.apple.fm.code.generate_v3.base");
  v61 = v10;
  *(_QWORD *)(v0 + 776) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 784) = v1;
  *(_QWORD *)(v0 + 752) = sub_242082E18();
  v24 = static Catalog.Resource.Tokenizer.CodeLMTokenizerV4()();
  static Catalog.Resource.LLM.Model.CodeLMV4()(v24);
  sub_242082E30();
  sub_242082F50((uint64_t)"com.apple.fm.code.generate_v4.base");
  *(_QWORD *)(v0 + 816) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 824) = v1;
  *(_QWORD *)(v0 + 792) = sub_242082E18();
  v25 = static Catalog.Resource.Tokenizer.CodeLMTokenizer()();
  static Catalog.Resource.LLM.Model.CodeLM()(v25);
  v26 = sub_242082FBC();
  static Catalog.Resource.LLM.DraftModel.CodeLM()(v26);
  sub_242082EEC((uint64_t)"com.apple.fm.code.generate_v1.base_with_draft");
  *(_QWORD *)(v0 + 856) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 864) = v1;
  v27 = sub_242082E18();
  *(_QWORD *)(v0 + 832) = v27;
  v28 = static Catalog.Resource.Tokenizer.CodeSafetyGuardrailTokenizer()();
  static Catalog.Resource.LLM.Model.CodeSafetyGuardrail()(v28);
  sub_242082E30();
  *(_QWORD *)(v27 + 16) = 0xD000000000000030;
  *(_QWORD *)(v27 + 24) = 0x8000000242133A40;
  *(_QWORD *)(v0 + 896) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 904) = v1;
  *(_QWORD *)(v0 + 872) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ConciseTone()();
  *(_QWORD *)(v0 + 936) = &type metadata for AssetBackedDiffusionBundle;
  v29 = v58;
  *(_QWORD *)(v0 + 944) = v58;
  v30 = sub_24207F538();
  *(_QWORD *)(v0 + 912) = v30;
  sub_242082ED4();
  *(_QWORD *)(v30 + 104) = 0;
  *(_OWORD *)(v30 + 88) = 0u;
  *(_OWORD *)(v30 + 72) = 0u;
  sub_242082EEC((uint64_t)"com.apple.fm.visual.image_diffusion_v1.base");
  *(_QWORD *)(v0 + 976) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 984) = v58;
  *(_QWORD *)(v0 + 952) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.Emoji()();
  sub_242082EEC((uint64_t)"com.apple.fm.visual.image_diffusion_v1.emoji");
  *(_QWORD *)(v0 + 1016) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 1024) = v1;
  *(_QWORD *)(v0 + 992) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.FactualConsistencyClassifier()();
  *(_QWORD *)(v0 + 1056) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 1064) = v1;
  *(_QWORD *)(v0 + 1032) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.FriendlyTone()();
  *(_QWORD *)(v0 + 1096) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 1104) = v58;
  *(_QWORD *)(v0 + 1072) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.Illustration()();
  sub_242082EEC((uint64_t)"com.apple.fm.visual.image_diffusion_v1.illustration");
  *(_QWORD *)(v0 + 1136) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1144) = v7;
  *(_QWORD *)(v0 + 1112) = sub_242082E18();
  v31 = sub_242082F60();
  static Catalog.Resource.LLM.Model.InstructServerBase()(v31);
  sub_242082E30();
  sub_242082F74((uint64_t)"com.apple.fm.language.instruct_server_v1.base", 0xD000000000000033, v58, 0xD00000000000002BLL, v61, 0xD00000000000002CLL, 0xD00000000000002DLL);
  *(_QWORD *)(v0 + 1176) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 1184) = v1;
  *(_QWORD *)(v0 + 1152) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.MagicRewrite()();
  *(_QWORD *)(v0 + 1216) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 1224) = v1;
  *(_QWORD *)(v0 + 1192) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.MailReply()();
  *(_QWORD *)(v0 + 1256) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 1264) = v1;
  *(_QWORD *)(v0 + 1232) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.MessagesReply()();
  *(_QWORD *)(v0 + 1296) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 1304) = v1;
  v32 = sub_242082E18();
  *(_QWORD *)(v0 + 1272) = v32;
  v33 = static Catalog.Resource.Tokenizer.NLRouterTokenizer()();
  static Catalog.Resource.LLM.Model.NLRouterBase()(v33);
  sub_242082E30();
  *(_QWORD *)(v32 + 16) = v62;
  *(_QWORD *)(v32 + 24) = 0x8000000242134FD0;
  *(_QWORD *)(v0 + 1336) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1344) = v7;
  v34 = sub_242082E18();
  *(_QWORD *)(v0 + 1312) = v34;
  v35 = sub_242082F60();
  v36 = static Catalog.Resource.LLM.Model.InstructServerBase()(v35);
  static Catalog.Resource.LLM.Adapter.BaseAdapter()(v36);
  *(_QWORD *)(v34 + 184) = 0;
  *(_OWORD *)(v34 + 168) = 0u;
  *(_OWORD *)(v34 + 152) = 0u;
  sub_242082EC4(0xD000000000000038);
  *(_QWORD *)(v0 + 1376) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 1384) = v29;
  *(_QWORD *)(v0 + 1352) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedAnimation()();
  sub_242082EEC((uint64_t)"com.apple.fm.visual.image_diffusion_v1.personalized_animation");
  *(_QWORD *)(v0 + 1416) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 1424) = v29;
  *(_QWORD *)(v0 + 1392) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedEmoji()();
  sub_242082EC4(0xD000000000000039);
  *(_QWORD *)(v0 + 1456) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 1464) = v29;
  *(_QWORD *)(v0 + 1432) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedIllustration()();
  sub_242082EC4(0xD000000000000040);
  *(_QWORD *)(v0 + 1496) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 1504) = v29;
  *(_QWORD *)(v0 + 1472) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedScribble()();
  sub_242082EC4(0xD000000000000042);
  *(_QWORD *)(v0 + 1536) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 1544) = v29;
  *(_QWORD *)(v0 + 1512) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedSketch()();
  sub_242082EC4(0xD00000000000003ALL);
  *(_QWORD *)(v0 + 1576) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1584) = v7;
  *(_QWORD *)(v0 + 1552) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationAssetCuration()();
  *(_QWORD *)(v0 + 1616) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1624) = v7;
  *(_QWORD *)(v0 + 1592) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationAssetCurationV2()();
  *(_QWORD *)(v0 + 1656) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1664) = v7;
  v37 = sub_242082E18();
  *(_QWORD *)(v0 + 1632) = v37;
  v38 = sub_242082F60();
  static Catalog.Resource.LLM.Model.PhotosMemoriesCreationBase()(v38);
  sub_242082E30();
  sub_242082F10();
  *(_QWORD *)(v37 + 16) = v57;
  *(_QWORD *)(v37 + 24) = v39;
  *(_QWORD *)(v0 + 1696) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1704) = v7;
  *(_QWORD *)(v0 + 1672) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationGlobalTraits()();
  *(_QWORD *)(v0 + 1736) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1744) = v7;
  *(_QWORD *)(v0 + 1712) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationGlobalTraitsV2()();
  *(_QWORD *)(v0 + 1776) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1784) = v7;
  *(_QWORD *)(v0 + 1752) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstanding()();
  *(_QWORD *)(v0 + 1816) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1824) = v7;
  *(_QWORD *)(v0 + 1792) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstandingV2()();
  *(_QWORD *)(v0 + 1856) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1864) = v7;
  *(_QWORD *)(v0 + 1832) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationStoryteller()();
  *(_QWORD *)(v0 + 1896) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1904) = v7;
  *(_QWORD *)(v0 + 1872) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationStorytellerV2()();
  *(_QWORD *)(v0 + 1936) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1944) = v7;
  *(_QWORD *)(v0 + 1912) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.Planner()();
  *(_QWORD *)(v0 + 1976) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 1984) = v7;
  *(_QWORD *)(v0 + 1952) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PlannerV2()();
  *(_QWORD *)(v0 + 2016) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2024) = v7;
  *(_QWORD *)(v0 + 1992) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.PlannerV3()();
  *(_QWORD *)(v0 + 2056) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 2064) = v1;
  *(_QWORD *)(v0 + 2032) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ProfessionalTone()();
  *(_QWORD *)(v0 + 2096) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 2104) = v1;
  *(_QWORD *)(v0 + 2072) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ProofreadingReview()();
  *(_QWORD *)(v0 + 2136) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 2144) = v29;
  *(_QWORD *)(v0 + 2112) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.Refiner()();
  sub_242082EFC();
  sub_242082EC4(v40 | 6);
  *(_QWORD *)(v0 + 2176) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2184) = v7;
  *(_QWORD *)(v0 + 2152) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGeneration()();
  *(_QWORD *)(v0 + 2216) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2224) = v7;
  *(_QWORD *)(v0 + 2192) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGenerationV2()();
  *(_QWORD *)(v0 + 2256) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2264) = v7;
  *(_QWORD *)(v0 + 2232) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ResponseGenerationV3()();
  *(_QWORD *)(v0 + 2296) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 2304) = v1;
  *(_QWORD *)(v0 + 2272) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.SafetyGuardrail()();
  *(_QWORD *)(v0 + 2336) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 2344) = v1;
  v41 = sub_242082E18();
  *(_QWORD *)(v0 + 2312) = v41;
  v42 = static Catalog.Resource.Tokenizer.SafetyGuardrailLiteTokenizer()();
  static Catalog.Resource.LLM.Model.SafetyGuardrailLite()(v42);
  sub_242082E30();
  sub_242082F10();
  *(_QWORD *)(v41 + 16) = v60;
  *(_QWORD *)(v41 + 24) = v43;
  *(_QWORD *)(v0 + 2376) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 2384) = v29;
  v44 = sub_24207F538();
  *(_QWORD *)(v0 + 2352) = v44;
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.Scribble()();
  sub_242082EFC();
  v46 = v45 + 13;
  sub_242082F10();
  *(_QWORD *)(v44 + 16) = v46;
  *(_QWORD *)(v44 + 24) = v47;
  *(_QWORD *)(v0 + 2416) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 2424) = v1;
  *(_QWORD *)(v0 + 2392) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.SearchQueryUnderstandingOnDevice()();
  *(_QWORD *)(v0 + 2456) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2464) = v7;
  *(_QWORD *)(v0 + 2432) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.SearchQueryUnderstandingServer()();
  *(_QWORD *)(v0 + 2496) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2504) = v7;
  *(_QWORD *)(v0 + 2472) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerBulletsTransform()();
  *(_QWORD *)(v0 + 2536) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2544) = v7;
  *(_QWORD *)(v0 + 2512) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerConciseTone()();
  *(_QWORD *)(v0 + 2576) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2584) = v7;
  *(_QWORD *)(v0 + 2552) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerFriendlyTone()();
  *(_QWORD *)(v0 + 2616) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2624) = v7;
  *(_QWORD *)(v0 + 2592) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMagicRewrite()();
  *(_QWORD *)(v0 + 2656) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2664) = v7;
  *(_QWORD *)(v0 + 2632) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyLongFormBasic()();
  *(_QWORD *)(v0 + 2696) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2704) = v7;
  *(_QWORD *)(v0 + 2672) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyLongFormRewrite()();
  *(_QWORD *)(v0 + 2736) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2744) = v7;
  *(_QWORD *)(v0 + 2712) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerMailReplyQA()();
  *(_QWORD *)(v0 + 2776) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2784) = v7;
  *(_QWORD *)(v0 + 2752) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerProfessionalTone()();
  *(_QWORD *)(v0 + 2816) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2824) = v7;
  *(_QWORD *)(v0 + 2792) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerProofreadingReview()();
  *(_QWORD *)(v0 + 2856) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2864) = v7;
  *(_QWORD *)(v0 + 2832) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerTablesTransform()();
  *(_QWORD *)(v0 + 2896) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 2904) = v7;
  *(_QWORD *)(v0 + 2872) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.ServerTakeawaysTransform()();
  *(_QWORD *)(v0 + 2936) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 2944) = v29;
  *(_QWORD *)(v0 + 2912) = sub_24207F538();
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.Sketch()();
  sub_242082F74((uint64_t)"com.apple.fm.visual.image_diffusion_v1.sketch", v57, v59, v60, 0xD00000000000003DLL, v64, v66);
  *(_QWORD *)(v0 + 2976) = &type metadata for AssetBackedDiffusionBundle;
  *(_QWORD *)(v0 + 2984) = v29;
  v48 = sub_24207F538();
  *(_QWORD *)(v0 + 2952) = v48;
  sub_242082ED4();
  static Catalog.Resource.Diffusion.Adapter.SkinToneEmoji()();
  sub_242082F10();
  *(_QWORD *)(v48 + 16) = v46;
  *(_QWORD *)(v48 + 24) = v49;
  *(_QWORD *)(v0 + 3016) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 3024) = v1;
  *(_QWORD *)(v0 + 2992) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.Summarization()();
  *(_QWORD *)(v0 + 3056) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 3064) = v7;
  *(_QWORD *)(v0 + 3032) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.SummarizationTextSummarizer()();
  *(_QWORD *)(v0 + 3096) = &type metadata for LLMBundle;
  *(_QWORD *)(v0 + 3104) = v7;
  v50 = sub_242082E18();
  *(_QWORD *)(v0 + 3072) = v50;
  v51 = sub_242082F60();
  static Catalog.Resource.LLM.Model.SummarizationTextSummarizerAjaxBase()(v51);
  sub_242082FA8();
  *(_QWORD *)(v50 + 16) = v63;
  *(_QWORD *)(v50 + 24) = 0x80000002421371F0;
  *(_QWORD *)(v0 + 3136) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 3144) = v1;
  *(_QWORD *)(v0 + 3112) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.TablesTransform()();
  *(_QWORD *)(v0 + 3176) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 3184) = v1;
  *(_QWORD *)(v0 + 3152) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.TakeawaysTransform()();
  *(_QWORD *)(v0 + 3216) = &type metadata for SanitizerBundle;
  *(_QWORD *)(v0 + 3224) = sub_242082D98();
  v52 = sub_24207F538();
  *(_QWORD *)(v0 + 3192) = v52;
  static Catalog.Resource.Sanitizer.TextModerationLM()();
  sub_242082EFC();
  *(_QWORD *)(v52 + 16) = v53 - 1;
  *(_QWORD *)(v52 + 24) = 0x80000002421373B0;
  *(_QWORD *)(v0 + 3256) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 3264) = v1;
  *(_QWORD *)(v0 + 3232) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.UIPreviews()();
  *(_QWORD *)(v0 + 3296) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 3304) = v1;
  *(_QWORD *)(v0 + 3272) = sub_242082E18();
  static Catalog.ResourceBundle.TokenGeneration.LLM.UrgencyClassification()();
  *(_QWORD *)(v0 + 3336) = &type metadata for AssetBackedLLMBundle;
  *(_QWORD *)(v0 + 3344) = v1;
  v54 = sub_242082E18();
  *(_QWORD *)(v0 + 3312) = v54;
  HandlingLite = static Catalog.Resource.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer()();
  static Catalog.Resource.LLM.Model.VisualGenerationQueryHandlingLite()(HandlingLite);
  *(_OWORD *)(v54 + 160) = 0u;
  *(_OWORD *)(v54 + 176) = 0u;
  *(_OWORD *)(v54 + 128) = 0u;
  *(_OWORD *)(v54 + 144) = 0u;
  *(_OWORD *)(v54 + 112) = 0u;
  sub_242082F10();
  *(_QWORD *)(v54 + 16) = v65;
  *(_QWORD *)(v54 + 24) = v56;
  qword_254397008 = v0;
}

uint64_t static Catalog.ResourceBundle.allResourceBundles.getter()
{
  if (qword_254397088 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void type metadata accessor for Catalog.ResourceBundle.Sanitizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ResourceBundle.TokenGeneration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ResourceBundle.TokenGeneration.LLM()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ResourceBundle.VisualGeneration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ResourceBundle.VisualGeneration.Diffusion()
{
  sub_242082F08();
}

unint64_t sub_242082C5C()
{
  unint64_t result;

  result = qword_2543971F0;
  if (!qword_2543971F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMBundle, &type metadata for AssetBackedLLMBundle);
    atomic_store(result, (unint64_t *)&qword_2543971F0);
  }
  return result;
}

unint64_t sub_242082C9C()
{
  unint64_t result;

  result = qword_2543972A0;
  if (!qword_2543972A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionBundle, &type metadata for AssetBackedDiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_2543972A0);
  }
  return result;
}

uint64_t sub_242082CD8()
{
  uint64_t v0;

  sub_242082FE4();
  sub_242082FDC();
  if (*(_QWORD *)(v0 + 96))
    sub_242079824(v0 + 72);
  return swift_deallocObject();
}

unint64_t sub_242082D0C()
{
  unint64_t result;

  result = qword_254397470;
  if (!qword_254397470)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMBundle, &type metadata for LLMBundle);
    atomic_store(result, (unint64_t *)&qword_254397470);
  }
  return result;
}

uint64_t sub_242082D4C()
{
  uint64_t v0;

  sub_242082FE4();
  sub_242082FDC();
  sub_242079824(v0 + 72);
  if (*(_QWORD *)(v0 + 136))
    sub_242079824(v0 + 112);
  if (*(_QWORD *)(v0 + 176))
    sub_242079824(v0 + 152);
  return swift_deallocObject();
}

unint64_t sub_242082D98()
{
  unint64_t result;

  result = qword_254397190;
  if (!qword_254397190)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBundle, &type metadata for SanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_254397190);
  }
  return result;
}

uint64_t sub_242082DD4()
{
  sub_242082FE4();
  sub_242082FDC();
  return swift_deallocObject();
}

void sub_242082DF8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

void sub_242082E08(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = a1;
  v2[1] = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_242082E18()
{
  return swift_allocObject();
}

uint64_t sub_242082E24()
{
  return static Catalog.Resource.Tokenizer.InstructServerTokenizer()();
}

double sub_242082E30()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[10] = 0u;
  v0[11] = 0u;
  v0[8] = 0u;
  v0[9] = 0u;
  v0[7] = 0u;
  return result;
}

uint64_t sub_242082E44()
{
  return static Catalog.Resource.Tokenizer.AFMTextInstructEnglish49k()();
}

uint64_t sub_242082E50()
{
  return static Catalog.Resource.LLM.Model.InstructServerBase()();
}

double sub_242082E58()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[9] = 0u;
  v0[10] = 0u;
  v0[7] = 0u;
  v0[8] = 0u;
  v0[6] = 0u;
  return result;
}

void sub_242082E74()
{
  static Catalog.Resource.Diffusion.Model.VisualGenerationBase()();
}

double sub_242082E80()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[9] = 0u;
  v0[10] = 0u;
  v0[7] = 0u;
  v0[8] = 0u;
  v0[6] = 0u;
  return result;
}

uint64_t sub_242082E9C()
{
  return static Catalog.Resource.LLM.Model.AFMTextInstruct3BBase()();
}

double sub_242082EA4()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[9] = 0u;
  v0[10] = 0u;
  v0[7] = 0u;
  v0[8] = 0u;
  v0[6] = 0u;
  return result;
}

void sub_242082EC4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = (v1 - 32) | 0x8000000000000000;
}

void sub_242082ED4()
{
  static Catalog.Resource.Diffusion.Model.VisualGenerationBase()();
}

void sub_242082EDC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = (a1 - 32) | 0x8000000000000000;
}

void sub_242082EEC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = (a1 - 32) | 0x8000000000000000;
}

double sub_242082F34()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[9] = 0u;
  v0[10] = 0u;
  v0[7] = 0u;
  v0[8] = 0u;
  v0[6] = 0u;
  return result;
}

void sub_242082F50(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = (a1 - 32) | 0x8000000000000000;
}

uint64_t sub_242082F60()
{
  return static Catalog.Resource.Tokenizer.InstructServerTokenizer()();
}

void sub_242082F74(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 16) = a7;
  *(_QWORD *)(v7 + 24) = (a1 - 32) | 0x8000000000000000;
}

double sub_242082F94()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  return result;
}

double sub_242082FA8()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[10] = 0u;
  v0[11] = 0u;
  v0[8] = 0u;
  v0[9] = 0u;
  v0[7] = 0u;
  return result;
}

double sub_242082FBC()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  return result;
}

_QWORD *sub_242082FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Catalog.Resource.Tokenizer.CodeLMTokenizer()((_QWORD *)(a2 + 16), a1);
}

uint64_t sub_242082FDC()
{
  uint64_t v0;

  return sub_242079824(v0 + 32);
}

uint64_t sub_242082FE4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242082FEC()
{
  objc_class *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  id v741;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  _QWORD v838[3];
  uint64_t v839;
  unint64_t v840;
  _BYTE v841[40];
  _QWORD v842[15];
  uint64_t v843;
  uint64_t v844;

  sub_242097180();
  v843 = v3;
  v844 = v4;
  v5 = v0;
  v7 = v6;
  sub_242132414();
  sub_242097BC8();
  sub_242132408();
  sub_242096AF8(v7, (uint64_t)v838);
  v8 = v839;
  if (v839)
  {
    v2 = v840;
    sub_242079800(v838, v839);
    LOBYTE(v8) = (*(uint64_t (**)(uint64_t, unint64_t))(v2 + 64))(v8, v2);
    sub_242079824((uint64_t)v838);
  }
  else
  {
    sub_2420966F4((uint64_t)v838);
  }
  sub_242096AF8(v7, (uint64_t)v842);
  if (!v842[3])
    goto LABEL_131;
  sub_242096AF8((uint64_t)v842, (uint64_t)v841);
  v9 = sub_2420797C0((uint64_t *)&unk_254399948);
  if (sub_242097078())
  {
    sub_24209708C(&v811, v10, v11, v12, v13, v14, v15, v16, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
      v794,
      v795,
      v796,
      v797,
      v798,
      v799,
      v800,
      v801,
      v802,
      v803,
      v804,
      v805,
      v806,
      v807,
      v808,
      v809,
      v810,
      v811,
      v812,
      v813,
      v814,
      v815,
      v816,
      v817,
      v818,
      v819,
      v820,
      v821,
      v822,
      v823,
      v824,
      v825,
      v826,
      v827,
      v828,
      v829,
      v830,
      v831,
      v832,
      v833,
      v834,
      v835,
      v836,
      v837);
    sub_24209708C(&v784, v17, v18, v19, v20, v21, v22, v23, v744, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
      v794,
      v795,
      v796,
      v797,
      v798,
      v799,
      v800,
      v801,
      v802,
      v803,
      v804,
      v805,
      v806,
      v807,
      v808,
      v809,
      v810,
      v811,
      v812,
      v813,
      v814,
      v815,
      v816,
      v817,
      v818,
      v819,
      v820,
      v821,
      v822,
      v823,
      v824,
      v825,
      v826,
      v827,
      v828,
      v829,
      v830,
      v831,
      v832,
      v833,
      v834,
      v835,
      v836,
      v837);
    sub_24208CFA8();
    goto LABEL_9;
  }
  if (!sub_242097078())
  {
    if (sub_242097078())
    {
      sub_24209708C(&v811, v56, v57, v58, v59, v60, v61, v62, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v63, v64, v65, v66, v67, v68, v69, v747, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208D520();
LABEL_18:
      v84 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      v9 = v84;
      v7 = v85;
      sub_242097B3C();
      sub_2420972B0(v86, v87, v88, v89, v90, v91, v92, v93, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420973EC();
      v55 = 0xEF6C65646F4D2E6ELL;
LABEL_132:
      sub_2420966F4((uint64_t)v842);
      v741 = objc_allocWithZone(v5);
      v9 = (uint64_t)ResourceContainer.init(resourceData:resourceType:assetBacked:)(v9, v7, v2, v55, v8 & 1);
      sub_242097B70();
      return v9;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v70, v71, v72, v73, v74, v75, v76, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v77, v78, v79, v80, v81, v82, v83, v748, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208D7F0();
      goto LABEL_18;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v94, v95, v96, v97, v98, v99, v100, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v101, v102, v103, v104, v105, v106, v107, v749, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208DA8C();
LABEL_24:
      v122 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097298(v122, v123, v124, v125, v126, v127, v128, v129, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_242079824((uint64_t)v841);
      v2 = 0xD000000000000013;
      v54 = "DisabledUseCaseList";
      goto LABEL_13;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v108, v109, v110, v111, v112, v113, v114, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v115, v116, v117, v118, v119, v120, v121, v750, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208DCFC();
      goto LABEL_24;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v130, v131, v132, v133, v134, v135, v136, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v137, v138, v139, v140, v141, v142, v143, v751, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208DF38();
LABEL_30:
      v158 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097298(v158, v159, v160, v161, v162, v163, v164, v165, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420973EC();
      v2 = 0xD00000000000001BLL;
      v54 = "GenerativeFunctionOverrides";
      goto LABEL_13;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v144, v145, v146, v147, v148, v149, v150, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v151, v152, v153, v154, v155, v156, v157, v752, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208E1A8();
      goto LABEL_30;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v166, v167, v168, v169, v170, v171, v172, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v173, v174, v175, v176, v177, v178, v179, v753, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208E3E4();
LABEL_36:
      v194 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097298(v194, v195, v196, v197, v198, v199, v200, v201, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420975F4();
      v2 = v202 + 5;
      v54 = "HandwritingSynthesizer";
      goto LABEL_13;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v180, v181, v182, v183, v184, v185, v186, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v187, v188, v189, v190, v191, v192, v193, v754, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208E654();
      goto LABEL_36;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v203, v204, v205, v206, v207, v208, v209, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v210, v211, v212, v213, v214, v215, v216, v755, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208E890();
LABEL_42:
      v231 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      v9 = v231;
      v7 = v232;
      sub_242097ADC();
      goto LABEL_44;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v217, v218, v219, v220, v221, v222, v223, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v224, v225, v226, v227, v228, v229, v230, v756, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208EB00();
      goto LABEL_42;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v241, v242, v243, v244, v245, v246, v247, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v248, v249, v250, v251, v252, v253, v254, v757, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208ED3C();
LABEL_50:
      v269 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      v9 = v269;
      v7 = v270;
      v2 = 0x706E496567616D49;
      sub_2420972B0(v269, v270, v271, v272, v273, v274, v275, v276, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420973EC();
      v55 = 0xEE007265746E6961;
      goto LABEL_132;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v255, v256, v257, v258, v259, v260, v261, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v262, v263, v264, v265, v266, v267, v268, v758, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208EFAC();
      goto LABEL_50;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v277, v278, v279, v280, v281, v282, v283, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v284, v285, v286, v287, v288, v289, v290, v759, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208F1E8();
LABEL_56:
      v305 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      v9 = v305;
      v7 = v306;
      v2 = 0xD000000000000011;
      sub_2420972B0(v305, v306, v307, v308, v309, v310, v311, v312, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420973EC();
      v54 = "ImageMagicCleanUp";
      goto LABEL_13;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v291, v292, v293, v294, v295, v296, v297, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v298, v299, v300, v301, v302, v303, v304, v760, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208F458();
      goto LABEL_56;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v313, v314, v315, v316, v317, v318, v319, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v320, v321, v322, v323, v324, v325, v326, v761, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208F694();
LABEL_62:
      sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097998();
      v2 = v2 & 0xFFFFFFFFFFFFLL | 0x6163000000000000;
      sub_2420972B0(v341, v342, v343, v344, v345, v346, v347, v348, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420973EC();
      v55 = 0xEB0000000072656CLL;
      goto LABEL_132;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v327, v328, v329, v330, v331, v332, v333, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v334, v335, v336, v337, v338, v339, v340, v762, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208F904();
      goto LABEL_62;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v349, v350, v351, v352, v353, v354, v355, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v356, v357, v358, v359, v360, v361, v362, v763, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208FB40();
LABEL_68:
      sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097998();
      v2 = v2 & 0xFFFFFFFFFFFFLL | 0x6765000000000000;
      sub_2420972B0(v377, v378, v379, v380, v381, v382, v383, v384, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420973EC();
      v385 = 0x7265746E656DLL;
      goto LABEL_70;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v363, v364, v365, v366, v367, v368, v369, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v370, v371, v372, v373, v374, v375, v376, v764, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24208FDB0();
      goto LABEL_68;
    }
    if (sub_242097078())
    {
      sub_242097368(&v811, v386, v387, v388, v389, v390, v391, v392, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242097368(&v784, v393, v394, v395, v396, v397, v398, v399, v765, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242096BF4();
      v400 = sub_2420970B8();
      if (!v1)
      {
        v9 = v400;
        v7 = v401;
        sub_2420976AC();
        sub_2420977BC(v448, v449, v450, v451, v452, v453, v454, v455, v766, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
          v794,
          v795,
          v796,
          v797,
          v798,
          v799,
          v800,
          v801,
          v802,
          v803,
          v804,
          v805,
          v806,
          v807,
          v808,
          v809,
          v810,
          v811);
        goto LABEL_45;
      }
LABEL_73:
      v402 = sub_242097B70();
      sub_2420977BC(v402, v403, v404, v405, v406, v407, v408, v409, v766, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      goto LABEL_11;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v410, v411, v412, v413, v414, v415, v416, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v417, v418, v419, v420, v421, v422, v423, v767, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242090124();
      v424 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      v9 = v424;
      v7 = v425;
      sub_2420976AC();
LABEL_44:
      sub_2420972B0(v233, v234, v235, v236, v237, v238, v239, v240, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
LABEL_45:
      sub_2420973EC();
      v55 = 0xEB00000000726574;
      goto LABEL_132;
    }
    if (sub_242097078())
    {
      sub_242097368(&v811, v426, v427, v428, v429, v430, v431, v432, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242097368(&v784, v433, v434, v435, v436, v437, v438, v439, v768, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242096BB8();
      v440 = sub_2420970B8();
      if (v1)
        goto LABEL_73;
      v9 = v440;
      v7 = v441;
      v2 = 0x666172442E4D4C4CLL;
      sub_2420977BC(v440, v441, v442, v443, v444, v445, v446, v447, v766, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
LABEL_84:
      sub_2420973EC();
      v385 = 0x6C65646F4D74;
LABEL_70:
      v55 = v385 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      goto LABEL_132;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v456, v457, v458, v459, v460, v461, v462, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v463, v464, v465, v466, v467, v468, v469, v769, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242090518();
      v470 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      v9 = v470;
      v7 = v471;
      v2 = 0x666172442E4D4C4CLL;
      sub_2420972B0(v470, v471, v472, v473, v474, v475, v476, v477, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      goto LABEL_84;
    }
    if (sub_242097078())
    {
      sub_242097368(&v811, v478, v479, v480, v481, v482, v483, v484, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242097368(&v784, v485, v486, v487, v488, v489, v490, v491, v770, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242096B7C();
      v492 = sub_2420970B8();
      if (v1)
        goto LABEL_73;
      v9 = v492;
      v7 = v493;
      v2 = 0x65646F4D2E4D4C4CLL;
      sub_2420977BC(v492, v493, v494, v495, v496, v497, v498, v499, v766, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
LABEL_91:
      sub_2420973EC();
      v55 = 0xE90000000000006CLL;
      goto LABEL_132;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v500, v501, v502, v503, v504, v505, v506, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v507, v508, v509, v510, v511, v512, v513, v771, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242090830();
      v514 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      v9 = v514;
      v7 = v515;
      v2 = 0x65646F4D2E4D4C4CLL;
      sub_2420972B0(v514, v515, v516, v517, v518, v519, v520, v521, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      goto LABEL_91;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v522, v523, v524, v525, v526, v527, v528, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v529, v530, v531, v532, v533, v534, v535, v772, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242090B6C();
LABEL_96:
      v550 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097298(v550, v551, v552, v553, v554, v555, v556, v557, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420975F4();
      v2 = v558 | 6;
      v54 = "LLM.ServerConfiguration";
      goto LABEL_13;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v536, v537, v538, v539, v540, v541, v542, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v543, v544, v545, v546, v547, v548, v549, v773, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242090DDC();
      goto LABEL_96;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v559, v560, v561, v562, v563, v564, v565, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v566, v567, v568, v569, v570, v571, v572, v774, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242091018();
LABEL_102:
      v587 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097298(v587, v588, v589, v590, v591, v592, v593, v594, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420975F4();
      v2 = v595 | 0xC;
      v54 = "ModelConfigurationReplacement";
      goto LABEL_13;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v573, v574, v575, v576, v577, v578, v579, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v580, v581, v582, v583, v584, v585, v586, v775, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242091288();
      goto LABEL_102;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v596, v597, v598, v599, v600, v601, v602, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v603, v604, v605, v606, v607, v608, v609, v776, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_2420914C4();
LABEL_108:
      v624 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      v9 = v624;
      v7 = v625;
      v2 = 0x6974696E6153;
      goto LABEL_110;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v610, v611, v612, v613, v614, v615, v616, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v617, v618, v619, v620, v621, v622, v623, v777, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242091794();
      goto LABEL_108;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v632, v633, v634, v635, v636, v637, v638, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v639, v640, v641, v642, v643, v644, v645, v778, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242091A30();
LABEL_116:
      v660 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097298(v660, v661, v662, v663, v664, v665, v666, v667, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_2420975F4();
      v2 = v668 + 1;
      v54 = "TokenInputDenyList";
      goto LABEL_13;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v646, v647, v648, v649, v650, v651, v652, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v653, v654, v655, v656, v657, v658, v659, v779, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242091CA0();
      goto LABEL_116;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v669, v670, v671, v672, v673, v674, v675, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v676, v677, v678, v679, v680, v681, v682, v780, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242091EDC();
LABEL_122:
      v697 = sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_242097298(v697, v698, v699, v700, v701, v702, v703, v704, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      sub_242079824((uint64_t)v841);
      v2 = 0xD000000000000013;
      v54 = "TokenOutputDenyList";
      goto LABEL_13;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v683, v684, v685, v686, v687, v688, v689, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v690, v691, v692, v693, v694, v695, v696, v781, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209214C();
      goto LABEL_122;
    }
    if (sub_242097078())
    {
      sub_242097368(&v811, v705, v706, v707, v708, v709, v710, v711, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242097368(&v784, v712, v713, v714, v715, v716, v717, v718, v782, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242096B40();
      sub_2420970B8();
      if (v1)
        goto LABEL_73;
      sub_2420979B0();
      v2 = v2 & 0xFFFFFFFFFFFFLL | 0x657A000000000000;
      sub_2420977BC(v719, v720, v721, v722, v723, v724, v725, v726, v766, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
LABEL_111:
      sub_2420973EC();
      v55 = 0xE900000000000072;
      goto LABEL_132;
    }
    if (sub_242097078())
    {
      sub_24209708C(&v811, v727, v728, v729, v730, v731, v732, v733, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_24209708C(&v784, v734, v735, v736, v737, v738, v739, v740, v783, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811,
        v812,
        v813,
        v814,
        v815,
        v816,
        v817,
        v818,
        v819,
        v820,
        v821,
        v822,
        v823,
        v824,
        v825,
        v826,
        v827,
        v828,
        v829,
        v830,
        v831,
        v832,
        v833,
        v834,
        v835,
        v836,
        v837);
      sub_242092404();
      sub_2420970B8();
      if (v1)
        goto LABEL_10;
      sub_2420979B0();
LABEL_110:
      v2 = v2 & 0xFFFFFFFFFFFFLL | 0x657A000000000000;
      sub_2420972B0(v624, v625, v626, v627, v628, v629, v630, v631, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
        v794,
        v795,
        v796,
        v797,
        v798,
        v799,
        v800,
        v801,
        v802,
        v803,
        v804,
        v805,
        v806,
        v807,
        v808,
        v809,
        v810,
        v811);
      goto LABEL_111;
    }
    sub_2420973EC();
LABEL_131:
    v2 = 0;
    v9 = 0;
    v7 = 0xC000000000000000;
    v55 = 0xE000000000000000;
    goto LABEL_132;
  }
  sub_24209708C(&v811, v24, v25, v26, v27, v28, v29, v30, v743, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
    v794,
    v795,
    v796,
    v797,
    v798,
    v799,
    v800,
    v801,
    v802,
    v803,
    v804,
    v805,
    v806,
    v807,
    v808,
    v809,
    v810,
    v811,
    v812,
    v813,
    v814,
    v815,
    v816,
    v817,
    v818,
    v819,
    v820,
    v821,
    v822,
    v823,
    v824,
    v825,
    v826,
    v827,
    v828,
    v829,
    v830,
    v831,
    v832,
    v833,
    v834,
    v835,
    v836,
    v837);
  sub_24209708C(&v784, v31, v32, v33, v34, v35, v36, v37, v746, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
    v794,
    v795,
    v796,
    v797,
    v798,
    v799,
    v800,
    v801,
    v802,
    v803,
    v804,
    v805,
    v806,
    v807,
    v808,
    v809,
    v810,
    v811,
    v812,
    v813,
    v814,
    v815,
    v816,
    v817,
    v818,
    v819,
    v820,
    v821,
    v822,
    v823,
    v824,
    v825,
    v826,
    v827,
    v828,
    v829,
    v830,
    v831,
    v832,
    v833,
    v834,
    v835,
    v836,
    v837);
  sub_24208D284();
LABEL_9:
  v38 = sub_2420970B8();
  if (!v1)
  {
    v9 = v38;
    v7 = v39;
    v2 = 0xD000000000000011;
    sub_2420972B0(v38, v39, v40, v41, v42, v43, v44, v45, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
      v794,
      v795,
      v796,
      v797,
      v798,
      v799,
      v800,
      v801,
      v802,
      v803,
      v804,
      v805,
      v806,
      v807,
      v808,
      v809,
      v810,
      v811);
    sub_2420973EC();
    v54 = "Diffusion.Adapter";
LABEL_13:
    v55 = (unint64_t)(v54 - 32) | 0x8000000000000000;
    goto LABEL_132;
  }
LABEL_10:
  v46 = sub_242097B70();
  sub_2420972B0(v46, v47, v48, v49, v50, v51, v52, v53, v745, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793,
    v794,
    v795,
    v796,
    v797,
    v798,
    v799,
    v800,
    v801,
    v802,
    v803,
    v804,
    v805,
    v806,
    v807,
    v808,
    v809,
    v810,
    v811);
LABEL_11:
  sub_2420973EC();
  sub_2420966F4((uint64_t)v842);
  return v9;
}

uint64_t sub_242083CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  __int128 v18;
  ValueMetadata *v19;
  unint64_t v20;
  _OWORD v21[2];
  uint64_t v22;

  sub_2421323F0();
  sub_242097BC8();
  sub_2421323E4();
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12ModelCatalog17ResourceContainer_resourceType);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12ModelCatalog17ResourceContainer_resourceType + 8);
  if (v5 == 0xD000000000000011 && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
  {
    sub_2420972B8();
    if (v8)
    {
      sub_242097134();
      v19 = &type metadata for AssetBackedDiffusionAdapterBase;
      v20 = sub_24208D368();
      sub_2420970C8();
      sub_24209714C();
      sub_24208D248();
    }
    else
    {
      sub_242097134();
      v19 = &type metadata for DiffusionAdapterBase;
      v20 = sub_24208D008();
      sub_2420970C8();
      sub_24209714C();
      sub_24208CF6C();
    }
  }
  else
  {
    v8 = v5 == 0x6F69737566666944 && v6 == 0xEF6C65646F4D2E6ELL;
    if (v8 || (sub_2420970D4() & 1) != 0)
    {
      sub_2420972B8();
      if (v8)
      {
        sub_242097134();
        v19 = &type metadata for AssetBackedDiffusionModelBase;
        v20 = sub_24208D8D4();
        sub_2420970C8();
        sub_24209714C();
        sub_24208D7B4();
      }
      else
      {
        sub_242097134();
        v19 = &type metadata for DiffusionModelBase;
        v20 = sub_24208D580();
        sub_2420970C8();
        sub_24209714C();
        sub_24208D4E4();
      }
    }
    else if (v5 == 0xD000000000000013 && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
    {
      sub_2420972B8();
      if (v8)
      {
        sub_242097134();
        v19 = &type metadata for AssetBackedDisabledUseCaseListBase;
        v20 = sub_24208DD38();
        sub_2420970C8();
        sub_24209714C();
        sub_24208DCC0();
      }
      else
      {
        sub_242097134();
        v19 = &type metadata for DisabledUseCaseListBase;
        v20 = sub_24208DA00();
        sub_2420970C8();
        sub_24209714C();
        sub_24208DA50();
      }
    }
    else if (v5 == 0xD00000000000001BLL && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
    {
      sub_2420972B8();
      if (v8)
      {
        sub_242097134();
        v19 = &type metadata for AssetBackedGenerativeFunctionOverridesBase;
        v20 = sub_24208E1E4();
        sub_2420970C8();
        sub_24209714C();
        sub_24208E16C();
      }
      else
      {
        sub_242097134();
        v19 = &type metadata for GenerativeFunctionOverridesBase;
        v20 = sub_24208DEAC();
        sub_2420970C8();
        sub_24209714C();
        sub_24208DEFC();
      }
    }
    else if (v5 == 0xD000000000000016 && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
    {
      sub_2420972B8();
      if (v8)
      {
        sub_242097134();
        v19 = &type metadata for AssetBackedHandwritingSynthesizerBase;
        v20 = sub_24208E690();
        sub_2420970C8();
        sub_24209714C();
        sub_24208E618();
      }
      else
      {
        sub_242097134();
        v19 = &type metadata for HandwritingSynthesizerBase;
        v20 = sub_24208E358();
        sub_2420970C8();
        sub_24209714C();
        sub_24208E3A8();
      }
    }
    else
    {
      v9 = v5 == 0x6C69466567616D49 && v6 == 0xEB00000000726574;
      if (v9 || (sub_2420970D4() & 1) != 0)
      {
        sub_2420972B8();
        if (v8)
        {
          sub_242097134();
          v19 = &type metadata for AssetBackedImageFilterBase;
          v20 = sub_24208EB3C();
          sub_2420970C8();
          sub_24209714C();
          sub_24208EAC4();
        }
        else
        {
          sub_242097134();
          v19 = &type metadata for ImageFilterBase;
          v20 = sub_24208E804();
          sub_2420970C8();
          sub_24209714C();
          sub_24208E854();
        }
      }
      else
      {
        v10 = v5 == 0x706E496567616D49 && v6 == 0xEE007265746E6961;
        if (v10 || (sub_2420970D4() & 1) != 0)
        {
          sub_2420972B8();
          if (v8)
          {
            sub_242097134();
            v19 = &type metadata for AssetBackedImageInpainterBase;
            v20 = sub_24208EFE8();
            sub_2420970C8();
            sub_24209714C();
            sub_24208EF70();
          }
          else
          {
            sub_242097134();
            v19 = &type metadata for ImageInpainterBase;
            v20 = sub_24208ECB0();
            sub_2420970C8();
            sub_24209714C();
            sub_24208ED00();
          }
        }
        else if (v5 == 0xD000000000000011 && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
        {
          sub_2420972B8();
          if (v8)
          {
            sub_242097134();
            v19 = &type metadata for AssetBackedImageMagicCleanUpBase;
            v20 = sub_24208F494();
            sub_2420970C8();
            sub_24209714C();
            sub_24208F41C();
          }
          else
          {
            sub_242097134();
            v19 = &type metadata for ImageMagicCleanUpBase;
            v20 = sub_24208F15C();
            sub_2420970C8();
            sub_24209714C();
            sub_24208F1AC();
          }
        }
        else
        {
          v11 = v5 == 0x6163536567616D49 && v6 == 0xEB0000000072656CLL;
          if (v11 || (sub_2420970D4() & 1) != 0)
          {
            sub_2420972B8();
            if (v8)
            {
              sub_242097134();
              v19 = &type metadata for AssetBackedImageScalerBase;
              v20 = sub_24208F940();
              sub_2420970C8();
              sub_24209714C();
              sub_24208F8C8();
            }
            else
            {
              sub_242097134();
              v19 = &type metadata for ImageScalerBase;
              v20 = sub_24208F608();
              sub_2420970C8();
              sub_24209714C();
              sub_24208F658();
            }
          }
          else
          {
            v12 = v5 == 0x6765536567616D49 && v6 == 0xEE007265746E656DLL;
            if (v12 || (sub_2420970D4() & 1) != 0)
            {
              sub_2420972B8();
              if (v8)
              {
                sub_242097134();
                v19 = &type metadata for AssetBackedImageSegmenterBase;
                v20 = sub_24208FDEC();
                sub_2420970C8();
                sub_24209714C();
                sub_24208FD74();
              }
              else
              {
                sub_242097134();
                v19 = &type metadata for ImageSegmenterBase;
                v20 = sub_24208FAB4();
                sub_2420970C8();
                sub_24209714C();
                sub_24208FB04();
              }
            }
            else
            {
              v13 = v5 == 0x706164412E4D4C4CLL && v6 == 0xEB00000000726574;
              if (v13 || (sub_2420970D4() & 1) != 0)
              {
                sub_2420972B8();
                if (v8)
                {
                  sub_242097134();
                  v19 = &type metadata for AssetBackedLLMAdapterBase;
                  v20 = sub_242090248();
                  sub_2420970C8();
                  sub_24209714C();
                  sub_2420900E8();
                }
                else
                {
                  sub_242097134();
                  v19 = &type metadata for LLMAdapterBase;
                  v20 = sub_242096910();
                  sub_24207F538();
                  sub_24209714C();
                  sub_2420969E8();
                }
              }
              else
              {
                v14 = v5 == 0x666172442E4D4C4CLL && v6 == 0xEE006C65646F4D74;
                if (v14 || (sub_2420970D4() & 1) != 0)
                {
                  sub_2420972B8();
                  if (v8)
                  {
                    sub_242097134();
                    v19 = &type metadata for AssetBackedLLMDraftModelBase;
                    v20 = sub_2420905FC();
                    sub_2420970C8();
                    sub_24209714C();
                    sub_2420904DC();
                  }
                  else
                  {
                    sub_242097134();
                    v19 = &type metadata for LLMDraftModelBase;
                    v20 = sub_242096890();
                    sub_24207F538();
                    sub_24209714C();
                    sub_2420968D0();
                  }
                }
                else
                {
                  v15 = v5 == 0x65646F4D2E4D4C4CLL && v6 == 0xE90000000000006CLL;
                  if (v15 || (sub_2420970D4() & 1) != 0)
                  {
                    sub_2420972B8();
                    if (v8)
                    {
                      sub_242097134();
                      v19 = &type metadata for AssetBackedLLMModelBase;
                      v20 = sub_242090954();
                      sub_2420970C8();
                      sub_24209714C();
                      sub_2420907F4();
                    }
                    else
                    {
                      sub_242097134();
                      v19 = &type metadata for LLMModelBase;
                      v20 = sub_242096810();
                      sub_24207F538();
                      sub_24209714C();
                      sub_242096850();
                    }
                  }
                  else if (v5 == 0xD000000000000017 && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
                  {
                    sub_2420972B8();
                    if (v8)
                    {
                      sub_242097134();
                      v19 = &type metadata for AssetBackedServerConfigurationBase;
                      v20 = sub_242090E18();
                      sub_2420970C8();
                      sub_24209714C();
                      sub_242090DA0();
                    }
                    else
                    {
                      sub_242097134();
                      v19 = &type metadata for ServerConfigurationBase;
                      v20 = sub_242090AE0();
                      sub_2420970C8();
                      sub_24209714C();
                      sub_242090B30();
                    }
                  }
                  else if (v5 == 0xD00000000000001DLL && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
                  {
                    sub_2420972B8();
                    if (v8)
                    {
                      sub_242097134();
                      v19 = &type metadata for AssetBackedModelConfigurationReplacementBase;
                      v20 = sub_2420912E8();
                      sub_2420970C8();
                      sub_24209714C();
                      sub_24209124C();
                    }
                    else
                    {
                      sub_242097134();
                      v19 = &type metadata for ModelConfigurationReplacementBase;
                      v20 = sub_242090F8C();
                      sub_2420970C8();
                      sub_24209714C();
                      sub_242090FDC();
                    }
                  }
                  else
                  {
                    v16 = v5 == 0x657A6974696E6153 && v6 == 0xE900000000000072;
                    if (v16 || (sub_2420970D4() & 1) != 0)
                    {
                      sub_2420972B8();
                      if (v8)
                      {
                        sub_242097134();
                        v19 = &type metadata for AssetBackedSanitizerBase;
                        v20 = sub_242091878();
                        sub_2420970C8();
                        sub_24209714C();
                        sub_242091758();
                      }
                      else
                      {
                        sub_242097134();
                        v19 = &type metadata for SanitizerBase;
                        v20 = sub_242091524();
                        sub_2420970C8();
                        sub_24209714C();
                        sub_242091488();
                      }
                    }
                    else if (v5 == 0xD000000000000012 && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
                    {
                      sub_2420972B8();
                      if (v8)
                      {
                        sub_242097134();
                        v19 = &type metadata for AssetBackedTokenInputDenyListBase;
                        v20 = sub_242091CDC();
                        sub_2420970C8();
                        sub_24209714C();
                        sub_242091C64();
                      }
                      else
                      {
                        sub_242097134();
                        v19 = &type metadata for TokenInputDenyListBase;
                        v20 = sub_2420919A4();
                        sub_2420970C8();
                        sub_24209714C();
                        sub_2420919F4();
                      }
                    }
                    else if (v5 == 0xD000000000000013 && (sub_2420972C4(), v8) || (sub_2420970D4() & 1) != 0)
                    {
                      sub_2420972B8();
                      if (v8)
                      {
                        sub_242097134();
                        v19 = &type metadata for AssetBackedTokenOutputDenyListBase;
                        v20 = sub_242092188();
                        sub_2420970C8();
                        sub_24209714C();
                        sub_242092110();
                      }
                      else
                      {
                        sub_242097134();
                        v19 = &type metadata for TokenOutputDenyListBase;
                        v20 = sub_242091E50();
                        sub_2420970C8();
                        sub_24209714C();
                        sub_242091EA0();
                      }
                    }
                    else
                    {
                      v17 = v5 == 0x657A696E656B6F54 && v6 == 0xE900000000000072;
                      if (!v17 && (sub_2420970D4() & 1) == 0)
                      {
                        sub_242097A18();
                        goto LABEL_10;
                      }
                      sub_2420972B8();
                      if (v8)
                      {
                        sub_242097134();
                        v19 = &type metadata for AssetBackedTokenizerBase;
                        v20 = sub_242092520();
                        sub_2420970C8();
                        sub_24209714C();
                        sub_2420923C8();
                      }
                      else
                      {
                        sub_242097134();
                        v19 = &type metadata for TokenizerBase;
                        v20 = sub_242096734();
                        sub_24207F538();
                        sub_24209714C();
                        sub_242096774();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_2421323D8();
  if (v2)
  {
    sub_2420966F4((uint64_t)v21);
    sub_242097A18();
    return sub_2420967B0((uint64_t)&v18);
  }
  sub_2420966F4((uint64_t)v21);
  sub_242097A18();
  sub_2420966B8((uint64_t)&v18, (uint64_t)v21, &qword_254399C58);
LABEL_10:
  sub_2420966B8((uint64_t)v21, (uint64_t)&v18, &qword_254399C58);
  if (v19)
    return sub_242079E50(&v18, a2);
  result = sub_2420966F4((uint64_t)&v18);
  *(_QWORD *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_242084C9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_242084D88(v4, v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_242084D88(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

#error "242084DCC: call analysis failed (funcsize=5)"

unint64_t sub_242084DD8()
{
  unint64_t result;

  result = qword_25719EBE0;
  if (!qword_25719EBE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CatalogErrors.ConfigurationError, &type metadata for CatalogErrors.ConfigurationError);
    atomic_store(result, (unint64_t *)&qword_25719EBE0);
  }
  return result;
}

uint64_t sub_242084E14(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242084E5C()
{
  return DiffusionAdapterBase.init(configuration:)();
}

void sub_242084E70()
{
  sub_2420AA850();
}

void sub_242084E84()
{
  const void *v0;
  _BYTE __dst[184];

  memcpy(__dst, v0, sizeof(__dst));
  sub_2420ABC74();
}

uint64_t sub_242084ED4@<X0>(uint64_t *a1@<X8>)
{
  return sub_24208BCD4((uint64_t (*)(void *))sub_2420C0778, a1);
}

uint64_t sub_242084F04()
{
  sub_24208BD74();
  return sub_242132DBC();
}

uint64_t sub_242084F2C()
{
  sub_24208BD74();
  return sub_242132DC8();
}

void DiffusionAdapterAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void DiffusionAdapterAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_242084F98(uint64_t a1)
{
  DiffusionModelAssetMetadata.init(from:)(a1);
}

void sub_242084FAC()
{
  DiffusionAdapterAssetMetadata.encode(to:)();
}

#error "242084FC8: call analysis failed (funcsize=5)"

void sub_242084FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  const void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_24209739C();
  a43 = v44;
  a44 = v45;
  v47 = v46;
  v49 = v48;
  sub_242097098(&a12, v46);
  v51 = a12;
  v50 = a13;
  if (a12 != 0xD000000000000011 || a13 != 0x8000000242138DE0)
  {
    sub_242097A28();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_242097140();
      sub_242097290();
      sub_242084DD8();
      sub_2420970E4();
      *v53 = v51;
      v53[1] = v50;
      sub_24209742C((uint64_t)v53, 0xD00000000000002DLL);
      goto LABEL_9;
    }
  }
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    sub_2420970E4();
    *v52 = v51;
    v52[1] = v50;
    sub_2420971A0((uint64_t)v52, 0xD000000000000029);
LABEL_9:
    v54 = sub_242097610();
    sub_2420972A8(v54, v55, v56);
    goto LABEL_10;
  }
  sub_242097098(v49, v47);
LABEL_10:
  sub_24209711C();
}

void sub_2420850F4()
{
  sub_2420AA86C();
}

#error "242085110: call analysis failed (funcsize=5)"

uint64_t sub_242085124()
{
  return AssetBackedDiffusionModelBase.init(configuration:)();
}

void sub_242085138()
{
  sub_2420AA888();
}

uint64_t sub_242085154()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t _s12ModelCatalog0B8ResourcePAAE10sideloadedSbvg_0()
{
  return 1;
}

uint64_t sub_242085178()
{
  return 0;
}

uint64_t sub_242085184()
{
  return 0;
}

uint64_t sub_242085190@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242085154();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2420851B8()
{
  return sub_242085178();
}

uint64_t sub_2420851D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s12ModelCatalog0B8ResourcePAAE10sideloadedSbvg_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2420851F8()
{
  sub_24208BDB0();
  return sub_242132DBC();
}

uint64_t sub_242085220()
{
  sub_24208BDB0();
  return sub_242132DC8();
}

void DiffusionModelAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void DiffusionModelAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_24208528C()
{
  DiffusionModelAssetMetadata.encode(to:)();
}

#error "2420852A8: call analysis failed (funcsize=5)"

void sub_2420852B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_242097334();
  a43 = v47;
  a44 = v48;
  sub_242097270();
  sub_242097B3C();
  sub_242097098(&a12, v44);
  sub_242097810();
  v49 = v49 && v45 == 0xEF6C65646F4D2E6ELL;
  if (!v49)
  {
    sub_242097A28();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_242097140();
      sub_242097290();
      sub_242084DD8();
      v54 = sub_2420970E4();
      sub_2420974FC(v54, v55);
      sub_24209742C(v57, v56 | 2);
      goto LABEL_11;
    }
  }
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v50 = sub_2420970E4();
    sub_2420974FC(v50, v51);
    sub_2420971A0(v52, v53);
LABEL_11:
    v58 = sub_242097610();
    sub_2420972A8(v58, v59, v60);
    goto LABEL_12;
  }
  sub_242097098(v46, v44);
LABEL_12:
  sub_2420970F0();
}

void sub_2420853C4()
{
  sub_2420AA8A4();
}

#error "2420853E0: call analysis failed (funcsize=5)"

uint64_t sub_2420853F4()
{
  return DisabledUseCaseListBase.init(configuration:)();
}

void sub_242085408()
{
  sub_2420AA8C0();
}

uint64_t sub_242085424()
{
  sub_24208BDEC();
  return sub_242132DBC();
}

uint64_t sub_24208544C()
{
  sub_24208BDEC();
  return sub_242132DC8();
}

void DisabledUseCaseListAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void DisabledUseCaseListAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_2420854B8()
{
  DisabledUseCaseListAssetMetadata.encode(to:)();
}

#error "2420854D4: call analysis failed (funcsize=5)"

void sub_2420854E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  const void *v47;
  void *v48;
  void *v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_24209739C();
  a43 = v44;
  a44 = v45;
  v47 = v46;
  v49 = v48;
  sub_242097098(&a12, v46);
  if (a12 == 0xD000000000000013 && (sub_242097374(), v50) || (sub_242079EB8() & 1) != 0)
  {
    sub_242097098(v49, v47);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v51 = sub_2420970E4();
    sub_24209738C(v51, v52);
    v55 = sub_242097108(v53, v54);
    sub_2420972A8(v55, v56, v57);
  }
  sub_24209711C();
}

#error "2420855B0: call analysis failed (funcsize=5)"

uint64_t sub_2420855C4()
{
  return GenerativeFunctionOverridesBase.init(configuration:)();
}

void sub_2420855D8()
{
  sub_2420AAA10();
}

uint64_t sub_2420855F4()
{
  sub_24208BE28();
  return sub_242132DBC();
}

uint64_t sub_24208561C()
{
  sub_24208BE28();
  return sub_242132DC8();
}

void GenerativeFunctionOverridesAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void GenerativeFunctionOverridesAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_242085688()
{
  GenerativeFunctionOverridesAssetMetadata.encode(to:)();
}

#error "2420856A4: call analysis failed (funcsize=5)"

void sub_2420856B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_24209739C();
  a43 = v46;
  a44 = v47;
  sub_242097270();
  sub_242097098(&a12, v44);
  if (a12 == 0xD00000000000001BLL && (sub_242097374(), v48) || (sub_242097354(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v45, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v49 = sub_2420970E4();
    sub_24209738C(v49, v50);
    v53 = sub_242097108(v51, v52);
    sub_2420972A8(v53, v54, v55);
  }
  sub_24209711C();
}

#error "24208576C: call analysis failed (funcsize=5)"

uint64_t sub_242085780()
{
  return HandwritingSynthesizerBase.init(configuration:)();
}

void sub_242085794()
{
  sub_2420AAB54();
}

uint64_t sub_2420857B0()
{
  sub_24208BE64();
  return sub_242132DBC();
}

uint64_t sub_2420857D8()
{
  sub_24208BE64();
  return sub_242132DC8();
}

void HandwritingSynthesizerAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void HandwritingSynthesizerAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_242085844()
{
  HandwritingSynthesizerAssetMetadata.encode(to:)();
}

#error "242085860: call analysis failed (funcsize=5)"

void sub_24208586C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_24209739C();
  a43 = v46;
  a44 = v47;
  sub_242097270();
  sub_242097098(&a12, v44);
  if (a12 == 0xD000000000000016 && (sub_242097374(), v48) || (sub_242097354(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v45, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v49 = sub_2420970E4();
    sub_24209738C(v49, v50);
    v53 = sub_242097108(v51, v52);
    sub_2420972A8(v53, v54, v55);
  }
  sub_24209711C();
}

#error "242085928: call analysis failed (funcsize=5)"

uint64_t sub_24208593C()
{
  return ImageFilterBase.init(configuration:)();
}

void sub_242085950()
{
  sub_2420AAC98();
}

uint64_t sub_24208596C()
{
  sub_24208BEA0();
  return sub_242132DBC();
}

uint64_t sub_242085994()
{
  sub_24208BEA0();
  return sub_242132DC8();
}

void ImageFilterAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void ImageFilterAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_242085A00()
{
  ImageFilterAssetMetadata.encode(to:)();
}

#error "242085A1C: call analysis failed (funcsize=5)"

void sub_242085A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_242097334();
  a43 = v49;
  a44 = v50;
  sub_2420977F4();
  sub_242097ADC();
  sub_242097098(&a12, v44);
  sub_242097B50();
  v51 = v51 && v46 == v48;
  if (v51 || (sub_242097B5C(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v47, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    sub_2420970E4();
    *v52 = v45;
    v52[1] = v46;
    sub_242097B04();
    v55 = sub_242097108(v53, v54);
    sub_2420972A8(v55, v56, v57);
  }
  sub_2420970F0();
}

#error "242085AE4: call analysis failed (funcsize=5)"

uint64_t sub_242085AF8()
{
  return ImageInpainterBase.init(configuration:)();
}

void sub_242085B0C()
{
  sub_2420AAE00();
}

uint64_t sub_242085B28()
{
  sub_24208BEDC();
  return sub_242132DBC();
}

uint64_t sub_242085B50()
{
  sub_24208BEDC();
  return sub_242132DC8();
}

void ImageInpainterAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void ImageInpainterAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_242085BBC()
{
  ImageInpainterAssetMetadata.encode(to:)();
}

#error "242085BD8: call analysis failed (funcsize=5)"

void sub_242085BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_242097334();
  a43 = v47;
  a44 = v48;
  sub_242097270();
  sub_2420978CC();
  sub_242097098(&a12, v44);
  sub_242097B50();
  v49 = v49 && v45 == 26977;
  if (v49 || (sub_242097B5C(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v46, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v50 = sub_2420970E4();
    sub_242097BB4(v50, v51);
    v54 = sub_242097108(v52, v53);
    sub_2420972A8(v54, v55, v56);
  }
  sub_2420970F0();
}

#error "242085CA8: call analysis failed (funcsize=5)"

uint64_t sub_242085CBC()
{
  return ImageMagicCleanUpBase.init(configuration:)();
}

void sub_242085CD0()
{
  sub_2420AAF68();
}

uint64_t sub_242085CEC()
{
  sub_24208BF18();
  return sub_242132DBC();
}

uint64_t sub_242085D14()
{
  sub_24208BF18();
  return sub_242132DC8();
}

void ImageMagicCleanUpAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void ImageMagicCleanUpAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_242085D80()
{
  ImageMagicCleanUpAssetMetadata.encode(to:)();
}

#error "242085D9C: call analysis failed (funcsize=5)"

void sub_242085DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  const void *v47;
  void *v48;
  void *v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_24209739C();
  a43 = v44;
  a44 = v45;
  v47 = v46;
  v49 = v48;
  sub_242097098(&a12, v46);
  if (a12 == 0xD000000000000011 && (sub_242097374(), v50) || (sub_242097354(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v49, v47);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v51 = sub_2420970E4();
    sub_24209738C(v51, v52);
    v55 = sub_242097108(v53, v54);
    sub_2420972A8(v55, v56, v57);
  }
  sub_24209711C();
}

#error "242085E6C: call analysis failed (funcsize=5)"

uint64_t sub_242085E80()
{
  return ImageScalerBase.init(configuration:)();
}

void sub_242085E94()
{
  sub_2420AB0AC();
}

uint64_t sub_242085EB0()
{
  sub_24208BF54();
  return sub_242132DBC();
}

uint64_t sub_242085ED8()
{
  sub_24208BF54();
  return sub_242132DC8();
}

void ImageScalerAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void ImageScalerAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_242085F44()
{
  ImageScalerAssetMetadata.encode(to:)();
}

#error "242085F60: call analysis failed (funcsize=5)"

void sub_242085F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_242097334();
  a43 = v48;
  a44 = v49;
  sub_242097270();
  sub_242097098(&a12, v44);
  sub_242097B50();
  v50 = v50 && v46 == 0xEB0000000072656CLL;
  if (v50 || (sub_24209791C(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v47, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    sub_2420970E4();
    *v51 = v45;
    v51[1] = v46;
    sub_242097B04();
    v54 = sub_242097108(v52, v53);
    sub_2420972A8(v54, v55, v56);
  }
  sub_2420970F0();
}

#error "24208603C: call analysis failed (funcsize=5)"

uint64_t sub_242086050()
{
  return ImageSegmenterBase.init(configuration:)();
}

void sub_242086064()
{
  sub_2420AB208();
}

uint64_t sub_242086080()
{
  sub_24208BF90();
  return sub_242132DBC();
}

uint64_t sub_2420860A8()
{
  sub_24208BF90();
  return sub_242132DC8();
}

void ImageSegmenterAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void ImageSegmenterAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_242086114()
{
  ImageSegmenterAssetMetadata.encode(to:)();
}

#error "242086130: call analysis failed (funcsize=5)"

void sub_24208613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_242097334();
  a43 = v47;
  a44 = v48;
  sub_242097270();
  sub_2420978CC();
  sub_242097098(&a12, v44);
  sub_242097B50();
  v49 = v49 && v45 == 25965;
  if (v49 || (sub_24209791C(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v46, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v50 = sub_2420970E4();
    sub_242097BB4(v50, v51);
    v54 = sub_242097108(v52, v53);
    sub_2420972A8(v54, v55, v56);
  }
  sub_2420970F0();
}

void sub_242086200()
{
  sub_24208A384();
}

void sub_242086220(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_242107E98(*a1, *a2);
}

uint64_t sub_24208622C()
{
  return sub_24208635C();
}

void sub_242086238()
{
  sub_2420974F0();
  sub_242097860();
  sub_2420972FC();
  sub_242097384();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_24208626C()
{
  return sub_2420864CC();
}

void sub_242086278()
{
  sub_2420974F0();
  sub_242097A34();
  sub_242079F68();
  sub_24209725C();
}

void sub_2420862A0()
{
  sub_242086440();
}

void sub_2420862AC()
{
  sub_2420862F0();
}

void sub_2420862B8()
{
  sub_2420974F0();
  sub_2420976F0();
  sub_242079F68();
  sub_24209725C();
}

void sub_2420862E4()
{
  sub_2420862F0();
}

void sub_2420862F0()
{
  uint64_t v0;

  v0 = sub_2420974F0();
  sub_242097B94(v0);
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_24208631C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2420AC710(a1, *v1);
}

void sub_242086324()
{
  sub_2420863F4();
}

void sub_242086330()
{
  sub_2420976A4();
  sub_2420976F0();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_24208635C()
{
  sub_242132D74();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  return sub_242132D98();
}

void sub_2420863BC()
{
  sub_2420975B4();
  sub_242097860();
  sub_2420972FC();
  sub_242097384();
  sub_242079F68();
  sub_24209725C();
}

void sub_2420863E8()
{
  sub_2420863F4();
}

void sub_2420863F4()
{
  uint64_t v0;

  v0 = sub_2420975B4();
  sub_242097B94(v0);
  sub_242079F68();
  sub_24209725C();
}

void sub_242086418()
{
  sub_2420976A4();
  sub_242097A34();
  sub_242079F68();
  sub_24209725C();
}

void sub_242086440()
{
  sub_2420976A4();
  sub_2421327D4();
  sub_242097384();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_2420864CC()
{
  sub_242132D74();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  return sub_242132D98();
}

void sub_242086560(_BYTE *a1@<X8>)
{
  char v2;

  sub_24208A384();
  *a1 = v2;
}

void sub_242086594(_BYTE *a1@<X8>)
{
  char v2;

  sub_242086200();
  *a1 = v2;
}

void sub_2420865B8(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_2420865C4()
{
  sub_24208BFCC();
  return sub_242132DBC();
}

uint64_t sub_2420865EC()
{
  sub_24208BFCC();
  return sub_242132DC8();
}

void LLMAdapterAssetMetadata.DraftMetadata.encode(to:)()
{
  sub_242088078();
}

void LLMAdapterAssetMetadata.DraftMetadata.init(from:)()
{
  sub_2420882A4();
}

void sub_24208666C()
{
  LLMAdapterAssetMetadata.DraftMetadata.init(from:)();
}

void sub_242086680()
{
  LLMAdapterAssetMetadata.DraftMetadata.encode(to:)();
}

ModelCatalog::LLMAdapterAssetMetadata::LoraRank_optional __swiftcall LLMAdapterAssetMetadata.LoraRank.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  ModelCatalog::LLMAdapterAssetMetadata::LoraRank_optional result;

  v2 = v1;
  v3 = sub_242097510();
  sub_242097384();
  v4 = 6;
  if (v3 < 6)
    v4 = v3;
  *v2 = v4;
  sub_242097A00();
  return result;
}

uint64_t LLMAdapterAssetMetadata.LoraRank.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242086708
                                                            + 4 * asc_242145D80[*v0]))(0x345F61726F6CLL, 0xE600000000000000);
}

uint64_t sub_242086708()
{
  return 0x385F61726F6CLL;
}

uint64_t sub_242086718()
{
  return 0x36315F61726F6CLL;
}

uint64_t sub_242086730()
{
  return 0x32335F61726F6CLL;
}

uint64_t sub_242086748()
{
  return 0x34365F61726F6CLL;
}

uint64_t sub_242086760()
{
  return 0x3832315F61726F6CLL;
}

void sub_242086778(char *a1)
{
  sub_242107CE4(*a1);
}

void sub_242086784()
{
  sub_2420862F0();
}

void sub_2420867A4(uint64_t a1)
{
  char *v1;

  sub_2420AC630(a1, *v1);
}

void sub_2420867AC()
{
  sub_2420863F4();
}

ModelCatalog::LLMAdapterAssetMetadata::LoraRank_optional sub_2420867CC(Swift::String *a1)
{
  return LLMAdapterAssetMetadata.LoraRank.init(rawValue:)(*a1);
}

void sub_2420867D8(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = LLMAdapterAssetMetadata.LoraRank.rawValue.getter();
  a1[1] = v2;
  sub_24207F428();
}

uint64_t sub_2420867F8()
{
  sub_24209667C();
  return sub_242132888();
}

uint64_t sub_242086854()
{
  sub_24209667C();
  return sub_242132870();
}

ModelCatalog::LLMAdapterAssetMetadata::ModelType_optional __swiftcall LLMAdapterAssetMetadata.ModelType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  ModelCatalog::LLMAdapterAssetMetadata::ModelType_optional result;

  v2 = v1;
  v3 = sub_242097510();
  sub_242097384();
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *v2 = v4;
  sub_242097A00();
  return result;
}

uint64_t LLMAdapterAssetMetadata.ModelType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 7696487;
  else
    return 6647393;
}

uint64_t sub_242086914(char *a1, char *a2)
{
  return sub_242107E30(*a1, *a2);
}

uint64_t sub_242086920()
{
  return sub_24208622C();
}

uint64_t sub_242086928()
{
  return sub_2420AC6DC();
}

uint64_t sub_242086930()
{
  return sub_24208635C();
}

ModelCatalog::LLMAdapterAssetMetadata::ModelType_optional sub_242086938(Swift::String *a1)
{
  return LLMAdapterAssetMetadata.ModelType.init(rawValue:)(*a1);
}

void sub_242086944(uint64_t *a1@<X8>)
{
  *a1 = LLMAdapterAssetMetadata.ModelType.rawValue.getter();
  a1[1] = 0xE300000000000000;
  sub_24207F428();
}

uint64_t sub_242086968()
{
  sub_242096640();
  return sub_242132888();
}

uint64_t sub_2420869C4()
{
  sub_242096640();
  return sub_242132870();
}

void LLMAdapterAssetMetadata.modelType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t LLMAdapterAssetMetadata.rank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void LLMAdapterAssetMetadata.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

void LLMAdapterAssetMetadata.backboneSignature.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMAdapterAssetMetadata.adapterSignature.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t LLMAdapterAssetMetadata.speculativeStreamCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

void LLMAdapterAssetMetadata.speculativeStreamingDefaultParameters.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 16) = v2;
  sub_2420979C8((__n128 *)a1, *(__n128 *)(v1 + 104), *(__n128 *)(v1 + 120));
}

void __swiftcall LLMAdapterAssetMetadata.init(modelType:rank:type:backboneSignature:adapterSignature:speculativeStreamCount:speculativeStreamingDefaultParameters:)(ModelCatalog::LLMAdapterAssetMetadata *__return_ptr retstr, ModelCatalog::LLMAdapterAssetMetadata::ModelType modelType, Swift::Int_optional rank, ModelCatalog::LLMAdapterAssetMetadata::LoraRank_optional type, Swift::String backboneSignature, Swift::String adapterSignature, Swift::Int_optional speculativeStreamCount, ModelCatalog::LLMAdapterAssetMetadata::DraftMetadata_optional *speculativeStreamingDefaultParameters)
{
  __int128 v8;
  __int128 v9;
  ModelCatalog::LLMAdapterAssetMetadata::LoraRank v10;
  Swift::Double value;
  Swift::Bool is_nil;

  v8 = *(_OWORD *)&speculativeStreamingDefaultParameters->value.draftTreeFactor.value;
  *(_OWORD *)&retstr->speculativeStreamingDefaultParameters.value.draftSteps.value = *(_OWORD *)&speculativeStreamingDefaultParameters->value.draftSteps.value;
  *(_OWORD *)&retstr->speculativeStreamingDefaultParameters.value.draftTreeFactor.value = v8;
  v9 = *(_OWORD *)&speculativeStreamingDefaultParameters->value.draftTreeMaxPaths.value;
  *(_OWORD *)&retstr->speculativeStreamingDefaultParameters.value.draftSoftMatchTolerance.value = *(_OWORD *)&speculativeStreamingDefaultParameters->value.draftSoftMatchTolerance.value;
  v10 = *(_BYTE *)type.value;
  value = speculativeStreamingDefaultParameters->value.draftEarlyReturnProbabilityThreshold.value;
  is_nil = speculativeStreamingDefaultParameters->value.draftEarlyReturnProbabilityThreshold.is_nil;
  retstr->modelType = *(_BYTE *)modelType;
  retstr->rank.value = rank.value;
  retstr->rank.is_nil = rank.is_nil;
  retstr->type.value = v10;
  retstr->backboneSignature = backboneSignature;
  retstr->adapterSignature = adapterSignature;
  retstr->speculativeStreamCount.value = speculativeStreamCount.value;
  retstr->speculativeStreamCount.is_nil = speculativeStreamCount.is_nil;
  *(_OWORD *)&retstr->speculativeStreamingDefaultParameters.value.draftTreeMaxPaths.value = v9;
  retstr->speculativeStreamingDefaultParameters.value.draftEarlyReturnProbabilityThreshold.value = value;
  retstr->speculativeStreamingDefaultParameters.value.draftEarlyReturnProbabilityThreshold.is_nil = is_nil;
}

void sub_242086B18()
{
  sub_242097868();
  sub_242097510();
  sub_242097384();
  sub_24207F428();
}

uint64_t sub_242086B54()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242097208();
  return ((uint64_t (*)(uint64_t))((char *)sub_242086B78 + 4 * byte_242145D86[v1]))(v0);
}

unint64_t sub_242086B80()
{
  return 0xD000000000000012;
}

uint64_t sub_242086BDC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242097208();
  return ((uint64_t (*)(uint64_t))((char *)sub_242086C00 + 4 * byte_242145D8D[v1]))(v0);
}

unint64_t sub_242086C08()
{
  return 0xD000000000000012;
}

void sub_242086C64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_242107E24(*a1, *a2);
}

void sub_242086C70()
{
  sub_242086238();
}

uint64_t sub_242086C90(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2420AC6D0(a1, *v1);
}

void sub_242086C98()
{
  sub_2420863BC();
}

void sub_242086CB8(_BYTE *a1@<X8>)
{
  char v2;

  sub_242086B18();
  *a1 = v2;
}

void sub_242086CE4()
{
  uint64_t *v0;
  uint64_t v1;

  sub_242097640();
  *v0 = sub_242086B54();
  v0[1] = v1;
  sub_24207F428();
}

uint64_t sub_242086D04()
{
  return sub_242086BDC();
}

uint64_t sub_242086D0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242086B50();
  *a1 = result;
  return result;
}

void sub_242086D30(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_242086D3C()
{
  sub_24208C008();
  return sub_242132DBC();
}

uint64_t sub_242086D64()
{
  sub_24208C008();
  return sub_242132DC8();
}

void LLMAdapterAssetMetadata.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_242097180();
  v3 = v2;
  v4 = sub_2420797C0(&qword_25719DB68);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_2420972E4();
  v6 = v3;
  v8 = v7;
  sub_24209788C(v6);
  sub_24208C008();
  sub_242132DB0();
  sub_24208C044();
  sub_242132CF0();
  if (!v0)
  {
    sub_242097A58(1);
    sub_242097624();
    sub_24208C080();
    sub_2420976C0();
    sub_242097A58(3);
    sub_2420977A4();
    sub_242097A58(4);
    sub_2420977A4();
    sub_242097A58(5);
    sub_242097624();
    sub_24208C0BC();
    sub_2420976C0();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v8);
  sub_242097A70();
  sub_2420970A0();
}

void LLMAdapterAssetMetadata.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  _QWORD v32[19];
  char v33;
  _BYTE v34[7];
  uint64_t v35;
  char v36;
  char v37;
  int v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _BYTE v46[7];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _BYTE v68[7];
  char v69;
  int v70;
  __int16 v71;
  char v72;
  _DWORD v73[3];

  sub_242097180();
  v2 = v1;
  v4 = v3;
  v5 = sub_2420797C0(&qword_25719DB90);
  MEMORY[0x24BDAC7A8](v5);
  sub_2420978F4();
  sub_242079800(v2, v2[3]);
  sub_24208C008();
  sub_242132DA4();
  if (v0)
  {
    sub_242097734();
  }
  else
  {
    sub_24208C0F8();
    sub_242132C60();
    v6 = sub_2420975A0();
    v72 = v7 & 1;
    LOBYTE(v32[0]) = 2;
    v8 = v7;
    sub_24208C134();
    sub_242097484();
    v30 = v8;
    v31 = v33;
    v9 = sub_242097498();
    v11 = v10;
    v28 = v9;
    v29 = v6;
    sub_242097464();
    v12 = sub_242097498();
    v14 = v13;
    v33 = 5;
    sub_242097464();
    v27 = sub_2420975A0();
    v26 = v15 & 1;
    v69 = v15 & 1;
    v57 = 6;
    sub_24208C170();
    sub_242097484();
    sub_24209746C();
    v24 = v59;
    v25 = v58;
    v22 = v61;
    v23 = v60;
    v20 = v63;
    v21 = v62;
    v18 = v65;
    v19 = v64;
    v17 = v66;
    v16 = v67;
    LOBYTE(v32[0]) = v31;
    v32[1] = v29;
    LOBYTE(v32[2]) = v30 & 1;
    BYTE1(v32[2]) = 1;
    v32[3] = v28;
    v32[4] = v11;
    v32[5] = v12;
    v32[6] = v14;
    v32[7] = v27;
    LOBYTE(v32[8]) = v26;
    v32[9] = v58;
    v32[10] = v59;
    v32[11] = v60;
    v32[12] = v61;
    v32[13] = v62;
    v32[14] = v63;
    v32[15] = v64;
    v32[16] = v65;
    v32[17] = v66;
    LOBYTE(v32[18]) = v67;
    sub_24208C1AC((uint64_t)v32);
    sub_242097268();
    sub_242097578();
    memcpy(v4, v32, 0x91uLL);
    sub_242097734();
    v33 = v31;
    *(_DWORD *)v34 = v73[0];
    *(_DWORD *)&v34[3] = *(_DWORD *)((char *)v73 + 3);
    v35 = v29;
    v36 = v72;
    v37 = 1;
    v38 = v70;
    v39 = v71;
    v40 = v28;
    v41 = v11;
    v42 = v12;
    v43 = v14;
    v44 = v27;
    v45 = v69;
    *(_DWORD *)v46 = *(_DWORD *)v68;
    *(_DWORD *)&v46[3] = *(_DWORD *)&v68[3];
    v47 = v25;
    v48 = v24;
    v49 = v23;
    v50 = v22;
    v51 = v21;
    v52 = v20;
    v53 = v19;
    v54 = v18;
    v55 = v17;
    v56 = v16;
    sub_24208C1E0((uint64_t)&v33);
  }
  sub_242097664();
  sub_2420970A0();
}

void sub_24208744C()
{
  LLMAdapterAssetMetadata.init(from:)();
}

void sub_242087460()
{
  LLMAdapterAssetMetadata.encode(to:)();
}

void AssetBackedLLMAdapterBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_242097334();
  a43 = v49;
  a44 = v50;
  sub_2420977F4();
  sub_2420976AC();
  sub_242097098(&a12, v44);
  sub_242097810();
  v51 = v51 && v45 == v48;
  if (!v51)
  {
    sub_242097688();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_242097140();
      sub_242097290();
      sub_242084DD8();
      sub_2420970E4();
      *v55 = v46;
      v55[1] = v45;
      sub_242097B04();
      sub_24209742C(v56, v57);
      goto LABEL_11;
    }
  }
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    sub_2420970E4();
    *v52 = v46;
    v52[1] = v45;
    sub_242097B04();
    sub_2420971A0(v54, v53 + 2);
LABEL_11:
    v58 = sub_242097610();
    sub_2420972A8(v58, v59, v60);
    goto LABEL_12;
  }
  sub_242097098(v47, v44);
LABEL_12:
  sub_2420970F0();
}

void AssetBackedLLMAdapterBase.llmModel.getter()
{
  sub_2420978E4();
  __break(1u);
}

#error "2420875CC: call analysis failed (funcsize=5)"

void sub_2420875D8()
{
  sub_2420AB364();
}

void sub_2420875EC()
{
  AssetBackedLLMAdapterBase.llmModel.getter();
}

void LLMDraftModelAssetMetadata.ANEExtendInfo.type.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t LLMDraftModelAssetMetadata.ANEExtendInfo.ctxLen.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t LLMDraftModelAssetMetadata.ANEExtendInfo.seqLen.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

ModelCatalog::LLMDraftModelAssetMetadata::ANEExtendInfo __swiftcall LLMDraftModelAssetMetadata.ANEExtendInfo.init(type:ctxLen:seqLen:)(Swift::String type, Swift::Int ctxLen, Swift::Int seqLen)
{
  Swift::String *v3;
  ModelCatalog::LLMDraftModelAssetMetadata::ANEExtendInfo result;

  *v3 = type;
  v3[1]._countAndFlagsBits = ctxLen;
  v3[1]._object = (void *)seqLen;
  result.type = type;
  result.seqLen = seqLen;
  result.ctxLen = ctxLen;
  return result;
}

void sub_24208763C()
{
  sub_242097868();
  sub_242097510();
  sub_242097384();
  sub_24207F428();
}

uint64_t sub_242087678(char a1)
{
  if (!a1)
    return sub_24209744C();
  if (a1 == 1)
    return 0x6E656C5F787463;
  return 0x6E656C5F716573;
}

void sub_2420876BC(char *a1, char *a2)
{
  sub_2421080A8(*a1, *a2);
}

uint64_t sub_2420876C8()
{
  return sub_24208626C();
}

uint64_t sub_2420876D0()
{
  return sub_2420AC94C();
}

uint64_t sub_2420876D8()
{
  return sub_2420864CC();
}

void sub_2420876E0(_BYTE *a1@<X8>)
{
  char v2;

  sub_24208763C();
  *a1 = v2;
}

void sub_24208770C()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;

  v1 = sub_242097640();
  *v0 = sub_242087678(v1);
  v0[1] = v2;
  sub_24207F428();
}

uint64_t sub_24208772C()
{
  char *v0;

  return sub_242087678(*v0);
}

uint64_t sub_242087734@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242087674();
  *a1 = result;
  return result;
}

void sub_242087758(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_242087764()
{
  sub_24208C214();
  return sub_242132DBC();
}

uint64_t sub_24208778C()
{
  sub_24208C214();
  return sub_242132DC8();
}

void LLMDraftModelAssetMetadata.ANEExtendInfo.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_242097180();
  v2 = v1;
  v3 = sub_2420797C0(&qword_25719DBB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_2420972E4();
  sub_242079800(v2, v2[3]);
  sub_24208C214();
  sub_242132DB0();
  sub_242097B78();
  if (!v0)
  {
    sub_242097618();
    sub_242097618();
  }
  sub_242097790(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_242097A70();
  sub_2420970A0();
}

void LLMDraftModelAssetMetadata.ANEExtendInfo.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_242097180();
  v4 = v3;
  v6 = v5;
  sub_2420797C0(&qword_25719DBC0);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v7);
  sub_242097548();
  sub_242079800(v4, v4[3]);
  sub_24208C214();
  sub_242097874();
  if (v0)
  {
    sub_24209769C();
  }
  else
  {
    v8 = sub_242097498();
    v10 = v9;
    sub_242097464();
    v12 = sub_2420979D8();
    v11 = sub_2420979D8();
    sub_242097598(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *v6 = v8;
    v6[1] = v10;
    v6[2] = v12;
    v6[3] = v11;
    sub_24209769C();
    sub_242097578();
  }
  sub_242097664();
  sub_2420970A0();
}

void sub_2420879F4()
{
  LLMDraftModelAssetMetadata.ANEExtendInfo.init(from:)();
}

void sub_242087A08()
{
  LLMDraftModelAssetMetadata.ANEExtendInfo.encode(to:)();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.startPromptTokenStr.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.endPromptToken.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.chatRoleSystem.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.chatRoleUser.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.chatRoleAssistant.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.chatComponentTurnend.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.chatRoleSystemDefault.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.stopTokenInt.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.stopTokenStr.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

void sub_242087B20()
{
  sub_2420896E0();
}

void sub_242087B40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_242107EA4(*a1, *a2);
}

void sub_242087B4C()
{
  sub_242086238();
}

uint64_t sub_242087B6C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2420AC71C(a1, *v1);
}

void sub_242087B74()
{
  sub_2420863BC();
}

void sub_242087B94(_BYTE *a1@<X8>)
{
  char v2;

  sub_2420896E0();
  *a1 = v2;
}

void sub_242087BC8()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_242097640();
  *v0 = sub_242089734(v1);
  v0[1] = v2;
  sub_24207F428();
}

uint64_t sub_242087BE8()
{
  unsigned __int8 *v0;

  return sub_242089810(*v0);
}

void sub_242087C00(_BYTE *a1@<X8>)
{
  char v2;

  sub_242087B20();
  *a1 = v2;
}

void sub_242087C24(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_242087C30()
{
  sub_24208C250();
  return sub_242132DBC();
}

uint64_t sub_242087C58()
{
  sub_24208C250();
  return sub_242132DC8();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.encode(to:)()
{
  sub_2420899C0();
}

void LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.init(from:)()
{
  sub_242089C70();
}

void sub_242087CD8()
{
  LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.init(from:)();
}

void sub_242087CEC()
{
  LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.encode(to:)();
}

uint64_t LLMDraftModelAssetMetadata.DraftMetadata.draftIsAdaptive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t LLMDraftModelAssetMetadata.DraftMetadata.draftSoftMatchTolerance.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t LLMDraftModelAssetMetadata.DraftMetadata.draftUseRejectionSampling.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t LLMDraftModelAssetMetadata.DraftMetadata.draftEarlyReturn.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t LLMDraftModelAssetMetadata.DraftMetadata.draftEarlyReturnProbabilityThreshold.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_242087D40@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, uint64_t a11, char a12)
{
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_BYTE *)(a9 + 9) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_BYTE *)(a9 + 24) = a5 & 1;
  *(_QWORD *)(a9 + 32) = a6;
  *(_BYTE *)(a9 + 40) = a7 & 1;
  *(_QWORD *)(a9 + 48) = a8;
  *(_BYTE *)(a9 + 56) = a10 & 1;
  *(_WORD *)(a9 + 57) = *(_WORD *)((char *)&a10 + 1);
  *(_QWORD *)(a9 + 64) = a11;
  *(_BYTE *)(a9 + 72) = a12 & 1;
  return result;
}

void sub_242087D98()
{
  sub_24208A384();
}

uint64_t sub_242087DB4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242097934();
  return ((uint64_t (*)(uint64_t))((char *)sub_242087DD8 + 4 * byte_242145D94[v1]))(v0);
}

unint64_t sub_242087DD8()
{
  return sub_2420973D8();
}

unint64_t sub_242087DF0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_242087E70()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242097934();
  return ((uint64_t (*)(uint64_t))((char *)sub_242087E94 + 4 * byte_242145D9C[v1]))(v0);
}

unint64_t sub_242087E94()
{
  return sub_2420973D8();
}

unint64_t sub_242087EAC()
{
  return 0xD00000000000001ALL;
}

void sub_242087F2C()
{
  sub_242086238();
}

void sub_242087F4C()
{
  sub_2420863BC();
}

void sub_242087F6C(_BYTE *a1@<X8>)
{
  char v2;

  sub_24208A384();
  *a1 = v2;
}

void sub_242087FA0()
{
  uint64_t *v0;
  uint64_t v1;

  sub_242097640();
  *v0 = sub_242087DB4();
  v0[1] = v1;
  sub_24207F428();
}

uint64_t sub_242087FC0()
{
  return sub_242087E70();
}

void sub_242087FD8(_BYTE *a1@<X8>)
{
  char v2;

  sub_242087D98();
  *a1 = v2;
}

uint64_t sub_242087FFC()
{
  sub_24208C28C();
  return sub_242132DBC();
}

uint64_t sub_242088024()
{
  sub_24208C28C();
  return sub_242132DC8();
}

void LLMDraftModelAssetMetadata.DraftMetadata.encode(to:)()
{
  sub_242088078();
}

void sub_242088078()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(void);

  sub_242097180();
  v7 = v2;
  v4 = (_QWORD *)v3;
  sub_24209781C(v3, v5);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v6);
  sub_2420972E4();
  sub_242079800(v4, v4[3]);
  v7();
  sub_242132DB0();
  sub_242132CB4();
  if (!v0)
  {
    sub_2420975C4();
    sub_242097624();
    sub_2420978A4();
    sub_242097624();
    sub_2420975C4();
    sub_2420975C4();
    sub_2420978A4();
  }
  sub_242097790(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_242097A70();
  sub_2420970A0();
}

void LLMDraftModelAssetMetadata.DraftMetadata.init(from:)()
{
  sub_2420882A4();
}

void sub_2420882A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  sub_242097180();
  v4 = v3;
  v6 = (_QWORD *)v5;
  v31 = v7;
  sub_24209781C(v5, v8);
  sub_242097708();
  MEMORY[0x24BDAC7A8](v9);
  sub_242097548();
  sub_242079800(v6, v6[3]);
  v4();
  sub_242132DA4();
  if (!v0)
  {
    v10 = sub_242097B34();
    v12 = v11;
    v30 = sub_2420977E8();
    v13 = sub_242097B34();
    v28 = v14;
    sub_242097B20(v13);
    v15 = sub_242097BA8();
    v26 = v16;
    v27 = v15;
    v17 = sub_242097B34();
    v24 = v18;
    v25 = v17;
    v23 = sub_2420977E8();
    v19 = sub_2420977E8();
    v20 = sub_242097BA8();
    v22 = v21;
    sub_24209796C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_QWORD *)v31 = v10;
    *(_BYTE *)(v31 + 8) = v12 & 1;
    *(_BYTE *)(v31 + 9) = v30;
    *(_QWORD *)(v31 + 16) = v29;
    *(_BYTE *)(v31 + 24) = v28 & 1;
    *(_QWORD *)(v31 + 32) = v27;
    *(_BYTE *)(v31 + 40) = v26 & 1;
    *(_QWORD *)(v31 + 48) = v25;
    *(_BYTE *)(v31 + 56) = v24 & 1;
    *(_BYTE *)(v31 + 57) = v23;
    *(_BYTE *)(v31 + 58) = v19;
    *(_QWORD *)(v31 + 64) = v20;
    *(_BYTE *)(v31 + 72) = v22 & 1;
  }
  sub_24209769C();
  sub_2420970A0();
}

void sub_2420884D4()
{
  LLMDraftModelAssetMetadata.DraftMetadata.init(from:)();
}

void sub_2420884E8()
{
  LLMDraftModelAssetMetadata.DraftMetadata.encode(to:)();
}

void LLMDraftModelAssetMetadata.modelType.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMDraftModelAssetMetadata.modelConfig.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMDraftModelAssetMetadata.backboneSignature.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t LLMDraftModelAssetMetadata.e5FunctionNameMap.getter()
{
  return swift_bridgeObjectRetain();
}

void LLMDraftModelAssetMetadata.defaultParameters.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 16) = v2;
  sub_2420979C8((__n128 *)a1, *(__n128 *)(v1 + 88), *(__n128 *)(v1 + 104));
}

void LLMDraftModelAssetMetadata.specialTokensMap.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[22];

  sub_242097A88(v8 + 136, a2, a3, a4, a5, a6, a7, a8, v17[0]);
  sub_24209787C(v9, v10, v11, v12, v13, v14, v15, v16, v17[0]);
  sub_24208C850((uint64_t)v17);
  sub_242097A7C();
}

void LLMDraftModelAssetMetadata.init(modelType:modelConfig:backboneSignature:e5FunctionNameMap:defaultParameters:specialTokensMap:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __int128 *a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v24[176];
  _QWORD __src[40];

  v21 = a8[1];
  v22 = *a8;
  v19 = a8[3];
  v20 = a8[2];
  v17 = *((_QWORD *)a8 + 8);
  v18 = *((_BYTE *)a8 + 72);
  sub_2420966B8(a10, (uint64_t)v24, &qword_25719DBF8);
  __src[0] = a1;
  __src[1] = a2;
  __src[2] = a3;
  __src[3] = a4;
  __src[4] = a5;
  __src[5] = a6;
  *(_OWORD *)&__src[7] = v22;
  *(_OWORD *)&__src[9] = v21;
  *(_OWORD *)&__src[11] = v20;
  *(_OWORD *)&__src[13] = v19;
  __src[6] = a7;
  __src[15] = v17;
  LOBYTE(__src[16]) = v18;
  sub_2420966B8((uint64_t)v24, (uint64_t)&__src[17], &qword_25719DBF8);
  memcpy(a9, __src, 0x131uLL);
  sub_242097670();
}

void sub_24208869C()
{
  sub_242097868();
  sub_242097510();
  sub_242097384();
  sub_24207F428();
}

uint64_t sub_2420886D8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242097208();
  return ((uint64_t (*)(uint64_t))((char *)sub_2420886FC + 4 * byte_242145DA4[v1]))(v0);
}

unint64_t sub_242088700()
{
  return 0xD000000000000012;
}

uint64_t sub_24208874C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242097208();
  return ((uint64_t (*)(uint64_t))((char *)sub_242088770 + 4 * byte_242145DAA[v1]))(v0);
}

unint64_t sub_242088774()
{
  return 0xD000000000000012;
}

void sub_2420887C0(char *a1)
{
  sub_242108180(*a1);
}

void sub_2420887CC()
{
  sub_242086238();
}

void sub_2420887EC(uint64_t a1)
{
  char *v1;

  sub_2420AC9B4(a1, *v1);
}

void sub_2420887F4()
{
  sub_2420863BC();
}

void sub_242088814(_BYTE *a1@<X8>)
{
  char v2;

  sub_24208869C();
  *a1 = v2;
}

void sub_242088840()
{
  uint64_t *v0;
  uint64_t v1;

  sub_242097640();
  *v0 = sub_2420886D8();
  v0[1] = v1;
  sub_24207F428();
}

uint64_t sub_242088860()
{
  return sub_24208874C();
}

uint64_t sub_242088868@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2420886D4();
  *a1 = result;
  return result;
}

void sub_24208888C(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_242088898()
{
  sub_24208C2C8();
  return sub_242132DBC();
}

uint64_t sub_2420888C0()
{
  sub_24208C2C8();
  return sub_242132DC8();
}

void LLMDraftModelAssetMetadata.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[9];
  char v18;
  _BYTE v19[184];
  char v20;

  sub_242097180();
  v4 = v3;
  sub_2420797C0(&qword_25719DC00);
  sub_242097708();
  MEMORY[0x24BDAC7A8](v5);
  sub_242097560();
  v16 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 120);
  v20 = *(_BYTE *)(v0 + 128);
  sub_2420966B8(v0 + 136, (uint64_t)v19, &qword_25719DBF8);
  sub_24209788C(v4);
  sub_24208C2C8();
  sub_242132DB0();
  LOBYTE(v17[0]) = 0;
  sub_242132CCC();
  if (v1)
  {
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  }
  else
  {
    LOBYTE(v17[0]) = 1;
    sub_242097BE8();
    LOBYTE(v17[0]) = 2;
    sub_242097BF4();
    v17[0] = v16;
    sub_2420797C0(&qword_25719DC10);
    sub_24208C3FC((uint64_t)&unk_25719DC18);
    sub_242097638();
    v17[0] = v15;
    v17[1] = v7;
    v17[2] = v8;
    v17[3] = v9;
    v17[4] = v14;
    v17[5] = v13;
    v17[6] = v12;
    v17[7] = v11;
    v17[8] = v10;
    v18 = v20;
    sub_24208C384();
    sub_2420975D4();
    sub_2420966B8((uint64_t)v19, (uint64_t)v17, &qword_25719DBF8);
    sub_24208C3C0();
    sub_2420975D4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  }
  sub_242097A0C(v6);
  sub_2420970A0();
}

void LLMDraftModelAssetMetadata.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _BYTE v33[176];
  _QWORD v34[39];
  _QWORD v35[39];
  uint64_t v36;
  _QWORD v37[40];
  char v38;

  sub_242097180();
  v2 = v1;
  v4 = v3;
  v5 = sub_2420797C0(&qword_25719DC38);
  MEMORY[0x24BDAC7A8](v5);
  sub_2420978F4();
  sub_242079800(v2, v2[3]);
  sub_24208C2C8();
  sub_242097874();
  if (v0)
  {
    sub_242097BA0();
  }
  else
  {
    v32 = v4;
    v6 = sub_242097498();
    v8 = v7;
    v37[0] = v6;
    v37[1] = v7;
    sub_242097464();
    v31 = sub_242097490();
    v37[2] = v31;
    v37[3] = v9;
    LOBYTE(v35[0]) = 2;
    v10 = v9;
    swift_bridgeObjectRetain();
    v11 = sub_242097498();
    v28 = v11;
    v29 = v10;
    v37[4] = v11;
    v37[5] = v12;
    v13 = v12;
    sub_2420797C0(&qword_25719DC10);
    LOBYTE(v34[0]) = 3;
    sub_24208C3FC((uint64_t)&unk_25719DC40);
    v15 = v14;
    v30 = v13;
    sub_242079ED8();
    sub_242097484();
    if (v15)
    {
      sub_242097324();
      sub_242097268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = 0;
    }
    else
    {
      v17 = v35[0];
      v37[6] = v35[0];
      LOBYTE(v34[0]) = 4;
      v18 = sub_24208C488();
      sub_242079ED8();
      sub_242097484();
      if (!v18)
      {
        v26 = v35[1];
        v27 = v35[0];
        v37[7] = v35[0];
        v37[8] = v35[1];
        v24 = v35[3];
        v25 = v35[2];
        v37[9] = v35[2];
        v37[10] = v35[3];
        v22 = v35[5];
        v23 = v35[4];
        v37[11] = v35[4];
        v37[12] = v35[5];
        v20 = v35[7];
        v21 = v35[6];
        v37[13] = v35[6];
        v37[14] = v35[7];
        v19 = v35[8];
        v37[15] = v35[8];
        v38 = v35[9];
        LOBYTE(v37[16]) = v35[9];
        sub_24208C4C4();
        sub_242097484();
        sub_242097324();
        sub_2420977C4((uint64_t)&v36, (uint64_t)v33);
        sub_2420977C4((uint64_t)v33, (uint64_t)&v37[17]);
        v34[0] = v6;
        v34[1] = v8;
        v34[2] = v31;
        v34[3] = v29;
        v34[4] = v28;
        v34[5] = v30;
        v34[6] = v17;
        v34[7] = v27;
        v34[8] = v26;
        v34[9] = v25;
        v34[10] = v24;
        v34[11] = v23;
        v34[12] = v22;
        v34[13] = v21;
        v34[14] = v20;
        v34[15] = v19;
        LOBYTE(v34[16]) = v38;
        sub_2420977C4((uint64_t)v33, (uint64_t)&v34[17]);
        sub_24208C500(v34);
        sub_242097268();
        sub_242079F20();
        sub_242079EE0();
        sub_242097578();
        memcpy(v32, v34, 0x131uLL);
        sub_242097BA0();
        memcpy(v35, v37, 0x131uLL);
        sub_24208C608(v35);
        goto LABEL_6;
      }
      sub_242097324();
      sub_242097268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242079F20();
      v16 = 1;
    }
    sub_242097BA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      swift_bridgeObjectRelease();
  }
LABEL_6:
  sub_242097664();
  sub_2420970A0();
}

void sub_242088FA0()
{
  LLMDraftModelAssetMetadata.init(from:)();
}

void sub_242088FB4()
{
  LLMDraftModelAssetMetadata.encode(to:)();
}

void AssetBackedLLMDraftModelBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_242097334();
  a43 = v47;
  a44 = v48;
  sub_242097270();
  sub_242097098(&a12, v44);
  sub_242097810();
  v49 = v49 && v45 == 0xEE006C65646F4D74;
  if (!v49)
  {
    sub_242097688();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_242097140();
      sub_242097290();
      sub_242084DD8();
      v54 = sub_2420970E4();
      sub_2420974FC(v54, v55);
      sub_24209742C(v57, v56 + 1);
      goto LABEL_11;
    }
  }
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v50 = sub_2420970E4();
    sub_2420974FC(v50, v51);
    sub_2420971A0(v52, v53);
LABEL_11:
    v58 = sub_242097610();
    sub_2420972A8(v58, v59, v60);
    goto LABEL_12;
  }
  sub_242097098(v46, v44);
LABEL_12:
  sub_2420970F0();
}

#error "2420890E4: call analysis failed (funcsize=5)"

void sub_2420890F0()
{
  sub_2420AB380();
}

void LLMModelAssetMetadata.ANEExtendInfo.type.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMModelAssetMetadata.ANEExtendInfo.adapterType.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t LLMModelAssetMetadata.ANEExtendInfo.ctxLen.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t LLMModelAssetMetadata.ANEExtendInfo.seqLen.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void __swiftcall LLMModelAssetMetadata.ANEExtendInfo.init(type:adapterType:ctxLen:seqLen:)(ModelCatalog::LLMModelAssetMetadata::ANEExtendInfo *__return_ptr retstr, Swift::String type, Swift::String adapterType, Swift::Int ctxLen, Swift::Int seqLen)
{
  retstr->type = type;
  retstr->adapterType = adapterType;
  retstr->ctxLen = ctxLen;
  retstr->seqLen = seqLen;
}

void sub_24208916C()
{
  sub_242097868();
  sub_242097510();
  sub_242097384();
  sub_24207F428();
}

uint64_t sub_2420891A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2420891D4 + 4 * byte_242145DB0[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_2420891DC()
{
  return 0x6E656C5F716573;
}

uint64_t sub_2420891F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242089220 + 4 * byte_242145DB4[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_242089228()
{
  return 0x6E656C5F716573;
}

void sub_242089240(char *a1)
{
  sub_242107EB0(*a1);
}

void sub_24208924C()
{
  sub_2420862F0();
}

void sub_24208926C(uint64_t a1)
{
  char *v1;

  sub_2420AC728(a1, *v1);
}

void sub_242089274()
{
  sub_2420863F4();
}

void sub_242089294(_BYTE *a1@<X8>)
{
  char v2;

  sub_24208916C();
  *a1 = v2;
}

void sub_2420892C0()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_242097640();
  *v0 = sub_2420891A8(v1);
  v0[1] = v2;
  sub_24207F428();
}

uint64_t sub_2420892E0()
{
  unsigned __int8 *v0;

  return sub_2420891F4(*v0);
}

uint64_t sub_2420892E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2420891A4();
  *a1 = result;
  return result;
}

void sub_24208930C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_242089318()
{
  sub_24208C714();
  return sub_242132DBC();
}

uint64_t sub_242089340()
{
  sub_24208C714();
  return sub_242132DC8();
}

void LLMModelAssetMetadata.ANEExtendInfo.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_242097180();
  v3 = v2;
  v4 = sub_2420797C0(&qword_25719DC60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_2420972E4();
  sub_242079800(v3, v3[3]);
  sub_24208C714();
  sub_242097A64();
  sub_242097B78();
  if (!v0)
  {
    sub_2420977A4();
    sub_242097618();
    sub_242097618();
  }
  sub_24209796C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_242097A70();
  sub_2420970A0();
}

void LLMModelAssetMetadata.ANEExtendInfo.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_242097180();
  v2 = v1;
  v4 = v3;
  sub_2420797C0(&qword_25719DC70);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v5);
  sub_242097560();
  sub_242079800(v2, v2[3]);
  sub_24208C714();
  sub_242097874();
  if (v0)
  {
    sub_24209769C();
  }
  else
  {
    v6 = sub_242097498();
    v8 = v7;
    v17 = v6;
    sub_242097464();
    v9 = sub_242097498();
    v11 = v10;
    v15 = v9;
    sub_242097198();
    v16 = v11;
    v12 = sub_242132C54();
    sub_242097B20(v12);
    v13 = sub_242132C54();
    sub_24209743C();
    *v4 = v17;
    v4[1] = v8;
    v4[2] = v15;
    v4[3] = v16;
    v4[4] = v14;
    v4[5] = v13;
    sub_24209769C();
    sub_242079F20();
    swift_bridgeObjectRelease();
  }
  sub_242097664();
  sub_2420970A0();
}

void sub_242089634()
{
  LLMModelAssetMetadata.ANEExtendInfo.init(from:)();
}

void sub_242089648()
{
  LLMModelAssetMetadata.ANEExtendInfo.encode(to:)();
}

__n128 sub_242089660@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __n128 a14, uint64_t a15, char a16, uint64_t a17, char a18)
{
  __n128 result;

  result = a14;
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(__n128 *)(a9 + 128) = a14;
  *(_QWORD *)(a9 + 144) = a15;
  *(_BYTE *)(a9 + 152) = a16 & 1;
  *(_QWORD *)(a9 + 160) = a17;
  *(_BYTE *)(a9 + 168) = a18 & 1;
  return result;
}

void sub_2420896E0()
{
  sub_242097510();
  sub_242097384();
  sub_24207F428();
}

void sub_242089718()
{
  sub_2420896E0();
}

uint64_t sub_242089734(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_242089770 + 4 * byte_242145DB8[a1]))(0xD000000000000012, 0x8000000242133D50);
}

void sub_242089770()
{
  sub_2420802AC();
}

uint64_t sub_242089810(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24208984C + 4 * byte_242145DC3[a1]))(0xD000000000000012, 0x8000000242133D50);
}

void sub_24208984C()
{
  sub_2420802AC();
}

void sub_2420898EC(_BYTE *a1@<X8>)
{
  char v2;

  sub_2420896E0();
  *a1 = v2;
}

void sub_242089920(_BYTE *a1@<X8>)
{
  char v2;

  sub_242089718();
  *a1 = v2;
}

uint64_t sub_242089944()
{
  sub_24208C750();
  return sub_242132DBC();
}

uint64_t sub_24208996C()
{
  sub_24208C750();
  return sub_242132DC8();
}

void LLMModelAssetMetadata.DeviceSpecialTokensMap.encode(to:)()
{
  sub_2420899C0();
}

void sub_2420899C0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *);
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(_QWORD *);

  sub_242097180();
  v8 = v2;
  v4 = (_QWORD *)v3;
  sub_24209781C(v3, v5);
  sub_242097708();
  MEMORY[0x24BDAC7A8](v6);
  sub_2420972E4();
  v7 = sub_24209788C(v4);
  v8(v7);
  sub_242132DB0();
  sub_242132CB4();
  if (!v0)
  {
    sub_242097280();
    sub_242097280();
    sub_2420975E4();
    sub_242097280();
    sub_242097280();
    sub_242097280();
    sub_242097280();
    sub_242097280();
    sub_2420975E4();
    sub_2420975E4();
  }
  sub_242097790(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_2420970A0();
}

void LLMModelAssetMetadata.DeviceSpecialTokensMap.init(from:)()
{
  sub_242089C70();
}

void sub_242089C70()
{
  uint64_t v0;
  void (*v1)(_QWORD *);
  void (*v2)(_QWORD *);
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _QWORD v43[22];
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _BYTE v52[7];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _BYTE v65[7];
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  _BYTE v70[7];
  char v71;
  _BYTE v72[7];
  char v73;
  char v74;

  sub_242097180();
  v2 = v1;
  v4 = (_QWORD *)v3;
  v41 = v5;
  v42 = sub_24209781C(v3, v6);
  MEMORY[0x24BDAC7A8](v42);
  sub_242097560();
  v7 = sub_24209788C(v4);
  v2(v7);
  sub_242097874();
  if (v0)
  {
    sub_242097734();
  }
  else
  {
    v8 = sub_2420975A0();
    v10 = v9;
    v74 = v9 & 1;
    v11 = sub_242097314();
    v13 = v12;
    sub_242097464();
    v40 = v13;
    v35 = v11;
    v36 = sub_242097314();
    sub_242097824();
    v39 = v11;
    v34 = sub_2420975A0();
    v73 = v14 & 1;
    v32 = v14;
    v33 = sub_242097490();
    v16 = v15;
    sub_242097464();
    v38 = v16;
    v31 = sub_242097314();
    v18 = v17;
    sub_242097464();
    v30 = sub_242097314();
    sub_242097824();
    v29 = sub_242097314();
    v37 = v19;
    swift_bridgeObjectRetain();
    v28 = sub_242097314();
    LOBYTE(v44) = 9;
    v21 = v20;
    sub_242097464();
    v22 = sub_2420975A0();
    v26 = v23 & 1;
    v71 = v23 & 1;
    v68 = 10;
    v27 = sub_2420975A0();
    v25 = v24;
    sub_2420977D4();
    v69 = v25 & 1;
    v43[0] = v8;
    LOBYTE(v43[1]) = v10 & 1;
    v43[2] = v35;
    v43[3] = v40;
    v43[4] = v36;
    v43[5] = v39;
    v43[6] = v34;
    LOBYTE(v43[7]) = v32 & 1;
    v43[8] = v33;
    v43[9] = v38;
    v43[10] = v31;
    v43[11] = v18;
    v43[12] = v30;
    v43[13] = v18;
    v43[14] = v29;
    v43[15] = v37;
    v43[16] = v28;
    v43[17] = v21;
    v43[18] = v22;
    LOBYTE(v43[19]) = v26;
    v43[20] = v27;
    LOBYTE(v43[21]) = v25 & 1;
    sub_24208C78C();
    sub_242097830();
    swift_bridgeObjectRelease();
    sub_242079EE0();
    sub_242097830();
    sub_242097268();
    sub_242097400();
    sub_242079F20();
    memcpy(v41, v43, 0xA9uLL);
    sub_242097734();
    v44 = v8;
    v45 = v74;
    v46 = v35;
    v47 = v40;
    v48 = v36;
    v49 = v39;
    v50 = v34;
    v51 = v73;
    *(_DWORD *)v52 = *(_DWORD *)v72;
    *(_DWORD *)&v52[3] = *(_DWORD *)&v72[3];
    v53 = v33;
    v54 = v38;
    v55 = v31;
    v56 = v18;
    v57 = v30;
    v58 = v18;
    v59 = v29;
    v60 = v37;
    v61 = v28;
    v62 = v21;
    v63 = v22;
    v64 = v71;
    *(_DWORD *)&v65[3] = *(_DWORD *)&v70[3];
    *(_DWORD *)v65 = *(_DWORD *)v70;
    v66 = v27;
    v67 = v69;
    sub_24208C7EC();
  }
  sub_242097664();
  sub_2420970A0();
}

void sub_24208A1F0()
{
  LLMModelAssetMetadata.DeviceSpecialTokensMap.init(from:)();
}

void sub_24208A204()
{
  LLMModelAssetMetadata.DeviceSpecialTokensMap.encode(to:)();
}

void LLMModelAssetMetadata.modelType.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMModelAssetMetadata.modelConfig.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void LLMModelAssetMetadata.backboneSignature.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t LLMModelAssetMetadata.adapterTypeToSignatureMapping.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LLMModelAssetMetadata.adapterTypeToSymbolMapping.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LLMModelAssetMetadata.e5FunctionNameMap.getter()
{
  return swift_bridgeObjectRetain();
}

void LLMModelAssetMetadata.specialTokensMap.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[22];

  sub_242097A88(v8 + 88, a2, a3, a4, a5, a6, a7, a8, v17[0]);
  sub_24209787C(v9, v10, v11, v12, v13, v14, v15, v16, v17[0]);
  sub_24208C850((uint64_t)v17);
  sub_242097A7C();
}

void LLMModelAssetMetadata.init(modelType:contextLength:modelConfig:backboneSignature:adapterTypeToSignatureMapping:adapterTypeToSymbolMapping:e5FunctionNameMap:specialTokensMap:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12)
{
  _BYTE v21[176];
  _OWORD __src[17];

  sub_2420966B8(a12, (uint64_t)v21, &qword_25719DC90);
  *(_QWORD *)&__src[0] = a1;
  *((_QWORD *)&__src[0] + 1) = a2;
  *(_QWORD *)&__src[1] = a3;
  BYTE8(__src[1]) = a4 & 1;
  *(_QWORD *)&__src[2] = a5;
  *((_QWORD *)&__src[2] + 1) = a6;
  *(_QWORD *)&__src[3] = a7;
  *((_QWORD *)&__src[3] + 1) = a8;
  __src[4] = a10;
  *(_QWORD *)&__src[5] = a11;
  sub_2420966B8((uint64_t)v21, (uint64_t)&__src[5] + 8, &qword_25719DC90);
  memcpy(a9, __src, 0x101uLL);
  sub_242097670();
}

void sub_24208A384()
{
  sub_242097510();
  sub_242097384();
  sub_24207F428();
}

void sub_24208A3BC()
{
  sub_24208A384();
}

uint64_t sub_24208A3D8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242097208();
  return ((uint64_t (*)(uint64_t))((char *)sub_24208A3FC + 4 * byte_242145DCE[v1]))(v0);
}

unint64_t sub_24208A404()
{
  return 0xD000000000000012;
}

uint64_t sub_24208A474()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242097208();
  return ((uint64_t (*)(uint64_t))((char *)sub_24208A498 + 4 * byte_242145DD6[v1]))(v0);
}

unint64_t sub_24208A4A0()
{
  return 0xD000000000000012;
}

void sub_24208A510(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_242107FC8(*a1, *a2);
}

void sub_24208A51C()
{
  sub_242086238();
}

uint64_t sub_24208A53C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2420AC7B4(a1, *v1);
}

void sub_24208A544()
{
  sub_2420863BC();
}

void sub_24208A564(_BYTE *a1@<X8>)
{
  char v2;

  sub_24208A384();
  *a1 = v2;
}

void sub_24208A598()
{
  uint64_t *v0;
  uint64_t v1;

  sub_242097640();
  *v0 = sub_24208A3D8();
  v0[1] = v1;
  sub_24207F428();
}

uint64_t sub_24208A5B8()
{
  return sub_24208A474();
}

void sub_24208A5C0(_BYTE *a1@<X8>)
{
  char v2;

  sub_24208A3BC();
  *a1 = v2;
}

uint64_t sub_24208A5E4()
{
  sub_24208C918();
  return sub_242132DBC();
}

uint64_t sub_24208A60C()
{
  sub_24208C918();
  return sub_242132DC8();
}

void LLMModelAssetMetadata.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[22];
  _BYTE v10[184];

  sub_242097180();
  v4 = v3;
  sub_2420797C0(&qword_25719DC98);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v5);
  v7 = v0[9];
  v8 = v0[8];
  v6 = v0[10];
  sub_2420966B8((uint64_t)(v0 + 11), (uint64_t)v10, &qword_25719DC90);
  sub_242079800(v4, v4[3]);
  sub_24208C918();
  sub_242132DB0();
  LOBYTE(v9[0]) = 0;
  sub_242132CCC();
  if (!v1)
  {
    LOBYTE(v9[0]) = 1;
    sub_242132CB4();
    LOBYTE(v9[0]) = 2;
    sub_242097BE8();
    LOBYTE(v9[0]) = 3;
    sub_242097BF4();
    v9[0] = v8;
    sub_2420797C0(&qword_25719DCA8);
    sub_24208CA1C((uint64_t)&unk_25719DCB0);
    sub_242097638();
    v9[0] = v7;
    sub_242097638();
    v9[0] = v6;
    sub_2420797C0(&qword_25719DCB8);
    sub_24208C954((uint64_t)&unk_25719DCC0);
    sub_242097638();
    sub_2420966B8((uint64_t)v10, (uint64_t)v9, &qword_25719DC90);
    sub_24208C9E0();
    sub_2420975D4();
  }
  sub_242097A0C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_2420970A0();
}

void LLMModelAssetMetadata.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD v32[33];
  _QWORD v33[33];
  uint64_t v34;
  _QWORD v35[34];
  char v36;

  sub_242097180();
  v2 = v1;
  v4 = v3;
  sub_2420797C0(&qword_25719DCD8);
  sub_242097708();
  MEMORY[0x24BDAC7A8](v5);
  sub_242079800(v2, v2[3]);
  sub_24208C918();
  sub_242132DA4();
  if (v0)
  {
    sub_242097A20();
    goto LABEL_11;
  }
  v30 = v4;
  v6 = sub_242097498();
  v8 = v7;
  v35[0] = v6;
  v35[1] = v7;
  v9 = v6;
  sub_242097464();
  v29 = v9;
  v35[2] = sub_2420975A0();
  LOBYTE(v35[3]) = v10 & 1;
  v36 = v10;
  v28 = v35[2];
  v35[4] = sub_242097490();
  v35[5] = v11;
  LOBYTE(v33[0]) = 3;
  sub_242097824();
  v12 = sub_242097498();
  v14 = v13;
  v24 = v12;
  v25 = v35[4];
  v27 = v35[2];
  v35[6] = v12;
  v35[7] = v13;
  sub_2420797C0(&qword_25719DCA8);
  LOBYTE(v32[0]) = 4;
  v15 = sub_24208CA1C((uint64_t)&unk_25719DCE0);
  sub_242097198();
  sub_2420974A0();
  v16 = v15 == 0;
  if (v15)
  {
    sub_2420972D4();
    sub_242079EE0();
    sub_24209795C();
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 0;
  }
  else
  {
    v35[8] = v33[0];
    LOBYTE(v32[0]) = 5;
    v23 = v33[0];
    swift_bridgeObjectRetain();
    sub_2420974A0();
    v19 = v33[0];
    v35[9] = v33[0];
    sub_2420797C0(&qword_25719DCB8);
    LOBYTE(v32[0]) = 6;
    sub_24208C954((uint64_t)&unk_25719DCE8);
    v21 = v20;
    sub_2420977E0();
    sub_2420974A0();
    if (v21)
    {
      sub_2420972D4();
      sub_242079EE0();
      sub_24209795C();
      sub_242097B8C();
      swift_bridgeObjectRelease();
      sub_242097268();
      v18 = 0;
      v17 = 1;
    }
    else
    {
      v35[10] = v33[0];
      v22 = sub_24208CAB4();
      v26 = v33[0];
      sub_242097198();
      sub_2420974A0();
      if (!v22)
      {
        sub_2420972D4();
        sub_2420977C4((uint64_t)&v34, (uint64_t)&v31);
        sub_2420977C4((uint64_t)&v31, (uint64_t)&v35[11]);
        v32[0] = v29;
        v32[1] = v8;
        v32[2] = v28;
        LOBYTE(v32[3]) = v36 & 1;
        v32[4] = v25;
        v32[5] = v27;
        v32[6] = v24;
        v32[7] = v14;
        v32[8] = v23;
        v32[9] = v19;
        v32[10] = v26;
        sub_2420966B8((uint64_t)&v31, (uint64_t)&v32[11], &qword_25719DC90);
        sub_24208CAF0(v32);
        sub_242079EE0();
        sub_242097578();
        sub_242097268();
        swift_bridgeObjectRelease();
        sub_242097400();
        sub_242097830();
        memcpy(v30, v32, 0x101uLL);
        sub_242097A20();
        memcpy(v33, v35, 0x101uLL);
        sub_24208CC10(v33);
        goto LABEL_11;
      }
      sub_2420972D4();
      sub_242079EE0();
      sub_24209795C();
      sub_242097B8C();
      swift_bridgeObjectRelease();
      sub_242097268();
      swift_bridgeObjectRelease();
      v17 = 1;
      v18 = 1;
    }
  }
  sub_242097A20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_9;
LABEL_5:
    if (!v18)
      goto LABEL_11;
    goto LABEL_10;
  }
  if (!v17)
    goto LABEL_5;
LABEL_9:
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
  sub_242097664();
  sub_2420970A0();
}

void sub_24208AE48()
{
  LLMModelAssetMetadata.init(from:)();
}

void sub_24208AE5C()
{
  LLMModelAssetMetadata.encode(to:)();
}

void AssetBackedLLMModelBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_242097334();
  a43 = v47;
  a44 = v48;
  sub_242097270();
  sub_242097098(&a12, v44);
  sub_242097810();
  v49 = v49 && v45 == 0xE90000000000006CLL;
  if (!v49)
  {
    sub_242097688();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_242097140();
      sub_242097290();
      sub_242084DD8();
      v54 = sub_2420970E4();
      sub_242097720(v54, v55);
      sub_24209742C(v56, v57);
      goto LABEL_11;
    }
  }
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v50 = sub_2420970E4();
    sub_242097580(v50, v51);
    sub_2420971A0(v52, v53);
LABEL_11:
    v58 = sub_242097610();
    sub_2420972A8(v58, v59, v60);
    goto LABEL_12;
  }
  sub_242097098(v46, v44);
LABEL_12:
  sub_2420970F0();
}

void AssetBackedLLMModelBase.tokenizer.getter()
{
  sub_2420978E4();
  __break(1u);
}

#error "24208AFC4: call analysis failed (funcsize=5)"

void sub_24208AFD0()
{
  sub_2420AB39C();
}

void sub_24208AFE4()
{
  AssetBackedLLMModelBase.tokenizer.getter();
}

#error "24208AFF8: call analysis failed (funcsize=5)"

uint64_t sub_24208B00C()
{
  return ServerConfigurationBase.init(configuration:)();
}

void sub_24208B020()
{
  sub_2420AB3B8();
}

uint64_t sub_24208B03C()
{
  sub_24208CD90();
  return sub_242132DBC();
}

uint64_t sub_24208B064()
{
  sub_24208CD90();
  return sub_242132DC8();
}

void ServerConfigurationAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void ServerConfigurationAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_24208B0D0()
{
  ServerConfigurationAssetMetadata.encode(to:)();
}

#error "24208B0EC: call analysis failed (funcsize=5)"

void sub_24208B0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_24209739C();
  a43 = v46;
  a44 = v47;
  sub_242097270();
  sub_242097098(&a12, v44);
  if (a12 == 0xD000000000000017 && (sub_242097374(), v48) || (sub_242097354(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v45, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v49 = sub_2420970E4();
    sub_24209738C(v49, v50);
    v53 = sub_242097108(v51, v52);
    sub_2420972A8(v53, v54, v55);
  }
  sub_24209711C();
}

#error "24208B1B4: call analysis failed (funcsize=5)"

uint64_t sub_24208B1C8()
{
  return AssetBackedModelConfigurationReplacementBase.init(configuration:)();
}

void sub_24208B1DC()
{
  sub_2420AB4FC();
}

uint64_t sub_24208B1F8()
{
  sub_24208CDCC();
  return sub_242132DBC();
}

uint64_t sub_24208B220()
{
  sub_24208CDCC();
  return sub_242132DC8();
}

void ModelConfigurationReplacementAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void ModelConfigurationReplacementAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_24208B28C()
{
  ModelConfigurationReplacementAssetMetadata.encode(to:)();
}

void AssetBackedModelConfigurationReplacementBase.configuration.getter()
{
  const void *v0;
  void *v1;
  const void *v2;
  _BYTE v3[184];

  sub_242097098(v3, v0);
  v1 = (void *)sub_24207F648();
  sub_242097098(v1, v2);
  sub_242084C9C((uint64_t)v3);
  sub_242097AA8();
}

#error "24208B2E0: call analysis failed (funcsize=5)"

void sub_24208B2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_24209739C();
  a43 = v46;
  a44 = v47;
  sub_242097270();
  sub_242097098(&a12, v44);
  if (a12 == 0xD00000000000001DLL && (sub_242097374(), v48) || (sub_242097354(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v45, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v49 = sub_2420970E4();
    sub_24209738C(v49, v50);
    v53 = sub_242097108(v51, v52);
    sub_2420972A8(v53, v54, v55);
  }
  sub_24209711C();
}

void AssetBackedModelConfigurationReplacementBase.hash(into:)(uint64_t a1)
{
  const void *v1;
  _BYTE v3[184];

  sub_242097098(v3, v1);
  ResourceConfiguration.hash(into:)(a1);
  sub_242097AA8();
}

uint64_t sub_24208B3D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_24208BCD4((uint64_t (*)(void *))sub_2420AC184, a1);
}

#error "24208B3E8: call analysis failed (funcsize=5)"

uint64_t sub_24208B3FC()
{
  return SanitizerBase.init(configuration:)();
}

void sub_24208B410()
{
  sub_2420AB640();
}

uint64_t sub_24208B42C()
{
  sub_24208CE08();
  return sub_242132DBC();
}

uint64_t sub_24208B454()
{
  sub_24208CE08();
  return sub_242132DC8();
}

void SanitizerAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void SanitizerAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_24208B4C0()
{
  SanitizerAssetMetadata.encode(to:)();
}

#error "24208B4DC: call analysis failed (funcsize=5)"

void sub_24208B4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_242097334();
  a43 = v48;
  a44 = v49;
  sub_2420979E8();
  sub_242097098(&a12, v44);
  sub_242097810();
  v50 = v50 && v45 == v47;
  if (!v50)
  {
    sub_242097A28();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_242097140();
      sub_242097290();
      sub_242084DD8();
      v55 = sub_2420970E4();
      sub_242097720(v55, v56);
      sub_24209742C(v57, v58);
      goto LABEL_11;
    }
  }
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v51 = sub_2420970E4();
    sub_242097580(v51, v52);
    sub_2420971A0(v53, v54);
LABEL_11:
    v59 = sub_242097610();
    sub_2420972A8(v59, v60, v61);
    goto LABEL_12;
  }
  sub_242097098(v46, v44);
LABEL_12:
  sub_2420970F0();
}

void sub_24208B5E8()
{
  sub_2420AB65C();
}

#error "24208B604: call analysis failed (funcsize=5)"

uint64_t sub_24208B618()
{
  return TokenInputDenyListBase.init(configuration:)();
}

void sub_24208B62C()
{
  sub_2420AB678();
}

uint64_t sub_24208B648()
{
  sub_24208CE44();
  return sub_242132DBC();
}

uint64_t sub_24208B670()
{
  sub_24208CE44();
  return sub_242132DC8();
}

void TokenInputDenyListAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void TokenInputDenyListAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_24208B6DC()
{
  TokenInputDenyListAssetMetadata.encode(to:)();
}

#error "24208B6F8: call analysis failed (funcsize=5)"

void sub_24208B704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_24209739C();
  a43 = v46;
  a44 = v47;
  sub_242097270();
  sub_242097098(&a12, v44);
  if (a12 == 0xD000000000000012 && (sub_242097374(), v48) || (sub_242097354(), (sub_242079EB8() & 1) != 0))
  {
    sub_242097098(v45, v44);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v49 = sub_2420970E4();
    sub_24209738C(v49, v50);
    v53 = sub_242097108(v51, v52);
    sub_2420972A8(v53, v54, v55);
  }
  sub_24209711C();
}

#error "24208B7C0: call analysis failed (funcsize=5)"

uint64_t sub_24208B7D4()
{
  return TokenOutputDenyListBase.init(configuration:)();
}

void sub_24208B7E8()
{
  sub_2420AB7BC();
}

uint64_t sub_24208B804()
{
  sub_24208CE80();
  return sub_242132DBC();
}

uint64_t sub_24208B82C()
{
  sub_24208CE80();
  return sub_242132DC8();
}

void TokenOutputDenyListAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void TokenOutputDenyListAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_24208B898()
{
  TokenOutputDenyListAssetMetadata.encode(to:)();
}

#error "24208B8B4: call analysis failed (funcsize=5)"

void sub_24208B8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  const void *v47;
  void *v48;
  void *v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_24209739C();
  a43 = v44;
  a44 = v45;
  v47 = v46;
  v49 = v48;
  sub_242097098(&a12, v46);
  if (a12 == 0xD000000000000013 && (sub_242097374(), v50) || (sub_242079EB8() & 1) != 0)
  {
    sub_242097098(v49, v47);
  }
  else
  {
    sub_242097158();
    sub_242097140();
    sub_242097290();
    sub_242084DD8();
    v51 = sub_2420970E4();
    sub_24209738C(v51, v52);
    v55 = sub_242097108(v53, v54);
    sub_2420972A8(v55, v56, v57);
  }
  sub_24209711C();
}

uint64_t _s12ModelCatalog29DiffusionAdapterAssetContentsV7baseURL10Foundation0H0Vvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_24209745C();
  sub_2420977B0();
  v0 = sub_24207F648();
  return sub_24209747C(v0, v1, v2, v3);
}

uint64_t _s12ModelCatalog29DiffusionAdapterAssetContentsV7baseURLAC10Foundation0H0V_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  sub_24209745C();
  sub_2420977B0();
  return sub_24209747C(a2, a1, v5, *(uint64_t (**)(void))(v4 + 32));
}

uint64_t sub_24208B9E8()
{
  sub_24208CEBC();
  return sub_242132DBC();
}

uint64_t sub_24208BA10()
{
  sub_24208CEBC();
  return sub_242132DC8();
}

void TokenizerAssetMetadata.encode(to:)()
{
  sub_24208BA64();
}

void sub_24208BA64()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;

  sub_242097180();
  v3 = v2;
  v5 = (_QWORD *)v4;
  sub_24209781C(v4, v6);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v7);
  sub_242097548();
  sub_242079800(v5, v5[3]);
  v3();
  sub_242097A64();
  sub_24209796C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_242097664();
  sub_2420970A0();
}

void TokenizerAssetMetadata.init(from:)(uint64_t a1)
{
  sub_242097168(a1);
  sub_24209734C();
}

void sub_24208BB04()
{
  TokenizerAssetMetadata.encode(to:)();
}

void AssetBackedTokenizerBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  const void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_242097334();
  a43 = v48;
  a44 = v49;
  sub_2420979E8();
  sub_242097098(&a12, v44);
  sub_242097810();
  v50 = v50 && v45 == v47;
  if (!v50)
  {
    sub_242097A28();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_242097140();
      sub_242097290();
      sub_242084DD8();
      v55 = sub_2420970E4();
      sub_242097720(v55, v56);
      sub_24209742C(v57, v58);
      goto LABEL_11;
    }
  }
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v51 = sub_2420970E4();
    sub_242097580(v51, v52);
    sub_2420971A0(v53, v54);
LABEL_11:
    v59 = sub_242097610();
    sub_2420972A8(v59, v60, v61);
    goto LABEL_12;
  }
  sub_242097098(v46, v44);
LABEL_12:
  sub_2420970F0();
}

uint64_t _s12ModelCatalog20DiffusionAdapterBaseV2eeoiySbAC_ACtFZ_0()
{
  const void *v0;
  const void *v1;
  char v2;
  uint64_t v4;
  _BYTE v5[184];

  sub_242097868();
  sub_242097098(v5, v1);
  sub_242097098(&v4, v0);
  static ResourceConfiguration.== infix(_:_:)((uint64_t)v5);
  return v2 & 1;
}

uint64_t _s12ModelCatalog20DiffusionAdapterBaseV9hashValueSivg_0()
{
  const void *v0;
  uint64_t v2;
  _BYTE v3[72];

  sub_242097098(&v2, v0);
  sub_242132D74();
  ResourceConfiguration.hash(into:)((uint64_t)v3);
  return sub_242132D98();
}

#error "24208BCB4: call analysis failed (funcsize=5)"

void sub_24208BCC0()
{
  sub_2420AB90C();
}

uint64_t sub_24208BCD4@<X0>(uint64_t (*a1)(void *)@<X2>, uint64_t *a2@<X8>)
{
  const void *v2;
  void *v5;
  uint64_t result;
  uint64_t v7;
  char v8[184];

  v5 = sub_242097098(v8, v2);
  result = a1(v5);
  *a2 = result;
  a2[1] = v7;
  return result;
}

uint64_t sub_24208BD1C()
{
  const void *v0;
  uint64_t v2;
  _BYTE v3[72];

  sub_242097098(&v2, v0);
  sub_242132D74();
  ResourceConfiguration.hash(into:)((uint64_t)v3);
  return sub_242132D98();
}

unint64_t sub_24208BD74()
{
  unint64_t result;

  result = qword_25719DAB8;
  if (!qword_25719DAB8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214C154, &type metadata for DiffusionAdapterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DAB8);
  }
  return result;
}

unint64_t sub_24208BDB0()
{
  unint64_t result;

  result = qword_25719DAC8;
  if (!qword_25719DAC8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214C104, &type metadata for DiffusionModelAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DAC8);
  }
  return result;
}

unint64_t sub_24208BDEC()
{
  unint64_t result;

  result = qword_25719DAD8;
  if (!qword_25719DAD8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214C0B4, &type metadata for DisabledUseCaseListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DAD8);
  }
  return result;
}

unint64_t sub_24208BE28()
{
  unint64_t result;

  result = qword_25719DAE8;
  if (!qword_25719DAE8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214C064, &type metadata for GenerativeFunctionOverridesAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DAE8);
  }
  return result;
}

unint64_t sub_24208BE64()
{
  unint64_t result;

  result = qword_25719DAF8;
  if (!qword_25719DAF8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214C014, &type metadata for HandwritingSynthesizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DAF8);
  }
  return result;
}

unint64_t sub_24208BEA0()
{
  unint64_t result;

  result = qword_25719DB08;
  if (!qword_25719DB08)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BFC4, &type metadata for ImageFilterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DB08);
  }
  return result;
}

unint64_t sub_24208BEDC()
{
  unint64_t result;

  result = qword_25719DB18;
  if (!qword_25719DB18)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BF74, &type metadata for ImageInpainterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DB18);
  }
  return result;
}

unint64_t sub_24208BF18()
{
  unint64_t result;

  result = qword_25719DB28;
  if (!qword_25719DB28)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BF24, &type metadata for ImageMagicCleanUpAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DB28);
  }
  return result;
}

unint64_t sub_24208BF54()
{
  unint64_t result;

  result = qword_25719DB38;
  if (!qword_25719DB38)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BED4, &type metadata for ImageScalerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DB38);
  }
  return result;
}

unint64_t sub_24208BF90()
{
  unint64_t result;

  result = qword_25719DB48;
  if (!qword_25719DB48)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BE84, &type metadata for ImageSegmenterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DB48);
  }
  return result;
}

unint64_t sub_24208BFCC()
{
  unint64_t result;

  result = qword_25719DB58;
  if (!qword_25719DB58)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BE34, &unk_251323C60);
    atomic_store(result, (unint64_t *)&qword_25719DB58);
  }
  return result;
}

unint64_t sub_24208C008()
{
  unint64_t result;

  result = qword_25719DB70;
  if (!qword_25719DB70)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BDE4, &unk_251323F30);
    atomic_store(result, (unint64_t *)&qword_25719DB70);
  }
  return result;
}

unint64_t sub_24208C044()
{
  unint64_t result;

  result = qword_25719DB78;
  if (!qword_25719DB78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.ModelType, &type metadata for LLMAdapterAssetMetadata.ModelType);
    atomic_store(result, (unint64_t *)&qword_25719DB78);
  }
  return result;
}

unint64_t sub_24208C080()
{
  unint64_t result;

  result = qword_25719DB80;
  if (!qword_25719DB80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.LoraRank, &type metadata for LLMAdapterAssetMetadata.LoraRank);
    atomic_store(result, (unint64_t *)&qword_25719DB80);
  }
  return result;
}

unint64_t sub_24208C0BC()
{
  unint64_t result;

  result = qword_25719DB88;
  if (!qword_25719DB88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.DraftMetadata, &type metadata for LLMAdapterAssetMetadata.DraftMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DB88);
  }
  return result;
}

unint64_t sub_24208C0F8()
{
  unint64_t result;

  result = qword_25719DB98;
  if (!qword_25719DB98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.ModelType, &type metadata for LLMAdapterAssetMetadata.ModelType);
    atomic_store(result, (unint64_t *)&qword_25719DB98);
  }
  return result;
}

unint64_t sub_24208C134()
{
  unint64_t result;

  result = qword_25719DBA0;
  if (!qword_25719DBA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.LoraRank, &type metadata for LLMAdapterAssetMetadata.LoraRank);
    atomic_store(result, (unint64_t *)&qword_25719DBA0);
  }
  return result;
}

unint64_t sub_24208C170()
{
  unint64_t result;

  result = qword_25719DBA8;
  if (!qword_25719DBA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.DraftMetadata, &type metadata for LLMAdapterAssetMetadata.DraftMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DBA8);
  }
  return result;
}

uint64_t sub_24208C1AC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24208C1E0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24208C214()
{
  unint64_t result;

  result = qword_25719DBB8;
  if (!qword_25719DBB8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BD94, &unk_2512FC0D0);
    atomic_store(result, (unint64_t *)&qword_25719DBB8);
  }
  return result;
}

unint64_t sub_24208C250()
{
  unint64_t result;

  result = qword_25719DBD0;
  if (!qword_25719DBD0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BD44, &unk_2512FC310);
    atomic_store(result, (unint64_t *)&qword_25719DBD0);
  }
  return result;
}

unint64_t sub_24208C28C()
{
  unint64_t result;

  result = qword_25719DBE8;
  if (!qword_25719DBE8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BCF4, &unk_2512FBE00);
    atomic_store(result, (unint64_t *)&qword_25719DBE8);
  }
  return result;
}

unint64_t sub_24208C2C8()
{
  unint64_t result;

  result = qword_25719DC08;
  if (!qword_25719DC08)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BCA4, &unk_2512FBFD8);
    atomic_store(result, (unint64_t *)&qword_25719DC08);
  }
  return result;
}

uint64_t sub_24208C304(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426A40D4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_24208C348()
{
  unint64_t result;

  result = qword_25719DC20;
  if (!qword_25719DC20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelAssetMetadata.ANEExtendInfo, &type metadata for LLMDraftModelAssetMetadata.ANEExtendInfo);
    atomic_store(result, (unint64_t *)&qword_25719DC20);
  }
  return result;
}

unint64_t sub_24208C384()
{
  unint64_t result;

  result = qword_25719DC28;
  if (!qword_25719DC28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelAssetMetadata.DraftMetadata, &type metadata for LLMDraftModelAssetMetadata.DraftMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DC28);
  }
  return result;
}

unint64_t sub_24208C3C0()
{
  unint64_t result;

  result = qword_25719DC30;
  if (!qword_25719DC30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap, &type metadata for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap);
    atomic_store(result, (unint64_t *)&qword_25719DC30);
  }
  return result;
}

void sub_24208C3FC(uint64_t a1)
{
  void (*v1)(void);
  void (*v2)(void);

  if (!sub_24209798C(a1))
  {
    v2 = v1;
    sub_24208C304(&qword_25719DC10);
    v2();
    sub_24209774C();
  }
  sub_24207F68C();
}

unint64_t sub_24208C44C()
{
  unint64_t result;

  result = qword_25719DC48;
  if (!qword_25719DC48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelAssetMetadata.ANEExtendInfo, &type metadata for LLMDraftModelAssetMetadata.ANEExtendInfo);
    atomic_store(result, (unint64_t *)&qword_25719DC48);
  }
  return result;
}

unint64_t sub_24208C488()
{
  unint64_t result;

  result = qword_25719DC50;
  if (!qword_25719DC50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelAssetMetadata.DraftMetadata, &type metadata for LLMDraftModelAssetMetadata.DraftMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DC50);
  }
  return result;
}

unint64_t sub_24208C4C4()
{
  unint64_t result;

  result = qword_25719DC58;
  if (!qword_25719DC58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap, &type metadata for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap);
    atomic_store(result, (unint64_t *)&qword_25719DC58);
  }
  return result;
}

_QWORD *sub_24208C500(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[19];
  v5 = a1[18];
  v6 = a1[17];
  v3 = a1[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24208C8B4(v6, v5, v2, v3);
  return a1;
}

_QWORD *sub_24208C608(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[19];
  v5 = a1[18];
  v6 = a1[17];
  v3 = a1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24208CD30(v6, v5, v2, v3);
  return a1;
}

unint64_t sub_24208C714()
{
  unint64_t result;

  result = qword_25719DC68;
  if (!qword_25719DC68)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BC54, &unk_2513231E0);
    atomic_store(result, (unint64_t *)&qword_25719DC68);
  }
  return result;
}

unint64_t sub_24208C750()
{
  unint64_t result;

  result = qword_25719DC80;
  if (!qword_25719DC80)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BC04, &unk_251323420);
    atomic_store(result, (unint64_t *)&qword_25719DC80);
  }
  return result;
}

void sub_24208C78C()
{
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420973B4();
}

void sub_24208C7EC()
{
  swift_bridgeObjectRelease();
  sub_242097830();
  sub_24207F78C();
  sub_24207F700();
  sub_242079F20();
  sub_242097268();
  swift_bridgeObjectRelease();
  sub_2420973B4();
}

uint64_t *sub_24208C850(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = sub_24209798C(a1);
  sub_24208C8B4(v2, v1[1], v1[2], v1[3]);
  return v1;
}

uint64_t sub_24208C8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 1)
  {
    sub_242097BD4();
    swift_bridgeObjectRetain();
    sub_242097198();
    swift_bridgeObjectRetain();
    sub_2420977E0();
    sub_242079ED8();
    sub_24207F5FC();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24208C918()
{
  unint64_t result;

  result = qword_25719DCA0;
  if (!qword_25719DCA0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BBB4, &unk_2513230D0);
    atomic_store(result, (unint64_t *)&qword_25719DCA0);
  }
  return result;
}

void sub_24208C954(uint64_t a1)
{
  void (*v1)(void);
  void (*v2)(void);

  if (!sub_24209798C(a1))
  {
    v2 = v1;
    sub_24208C304(&qword_25719DCB8);
    v2();
    sub_24209774C();
  }
  sub_24207F68C();
}

unint64_t sub_24208C9A4()
{
  unint64_t result;

  result = qword_25719DCC8;
  if (!qword_25719DCC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelAssetMetadata.ANEExtendInfo, &type metadata for LLMModelAssetMetadata.ANEExtendInfo);
    atomic_store(result, (unint64_t *)&qword_25719DCC8);
  }
  return result;
}

unint64_t sub_24208C9E0()
{
  unint64_t result;

  result = qword_25719DCD0;
  if (!qword_25719DCD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelAssetMetadata.DeviceSpecialTokensMap, &type metadata for LLMModelAssetMetadata.DeviceSpecialTokensMap);
    atomic_store(result, (unint64_t *)&qword_25719DCD0);
  }
  return result;
}

unint64_t sub_24208CA1C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = sub_24209798C(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_24208C304(&qword_25719DCA8);
    v8[0] = v6;
    v8[1] = v6;
    result = MEMORY[0x2426A40E0](v5, v7, v8);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_24208CA78()
{
  unint64_t result;

  result = qword_25719DCF0;
  if (!qword_25719DCF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelAssetMetadata.ANEExtendInfo, &type metadata for LLMModelAssetMetadata.ANEExtendInfo);
    atomic_store(result, (unint64_t *)&qword_25719DCF0);
  }
  return result;
}

unint64_t sub_24208CAB4()
{
  unint64_t result;

  result = qword_25719DCF8;
  if (!qword_25719DCF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelAssetMetadata.DeviceSpecialTokensMap, &type metadata for LLMModelAssetMetadata.DeviceSpecialTokensMap);
    atomic_store(result, (unint64_t *)&qword_25719DCF8);
  }
  return result;
}

_QWORD *sub_24208CAF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[13];
  v5 = a1[12];
  v6 = a1[11];
  v3 = a1[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24208C8B4(v6, v5, v2, v3);
  return a1;
}

_QWORD *sub_24208CC10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[13];
  v5 = a1[12];
  v6 = a1[11];
  v3 = a1[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24208CD30(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_24208CD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 1)
  {
    sub_242097BD4();
    swift_bridgeObjectRelease();
    sub_242097384();
    sub_242097268();
    sub_242079F20();
    sub_24207F700();
    sub_24207F78C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24208CD90()
{
  unint64_t result;

  result = qword_25719DD08;
  if (!qword_25719DD08)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BB64, &type metadata for ServerConfigurationAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DD08);
  }
  return result;
}

unint64_t sub_24208CDCC()
{
  unint64_t result;

  result = qword_25719DD18;
  if (!qword_25719DD18)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BB14, &type metadata for ModelConfigurationReplacementAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DD18);
  }
  return result;
}

unint64_t sub_24208CE08()
{
  unint64_t result;

  result = qword_25719DD28;
  if (!qword_25719DD28)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BAC4, &type metadata for SanitizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DD28);
  }
  return result;
}

unint64_t sub_24208CE44()
{
  unint64_t result;

  result = qword_25719DD38;
  if (!qword_25719DD38)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BA74, &type metadata for TokenInputDenyListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DD38);
  }
  return result;
}

unint64_t sub_24208CE80()
{
  unint64_t result;

  result = qword_25719DD48;
  if (!qword_25719DD48)
  {
    result = MEMORY[0x2426A40E0](&unk_24214BA24, &type metadata for TokenOutputDenyListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DD48);
  }
  return result;
}

unint64_t sub_24208CEBC()
{
  unint64_t result;

  result = qword_25719DD58;
  if (!qword_25719DD58)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B9D4, &type metadata for TokenizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719DD58);
  }
  return result;
}

unint64_t sub_24208CEF8(uint64_t a1)
{
  unint64_t result;

  result = sub_24208CF1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208CF1C()
{
  unint64_t result;

  result = qword_25719DD60;
  if (!qword_25719DD60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterBase, &type metadata for DiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719DD60);
  }
  return result;
}

void sub_24208CF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208CF6C, (uint64_t (*)(void))sub_24208CFA8);
}

unint64_t sub_24208CF6C()
{
  unint64_t result;

  result = qword_25719DD68;
  if (!qword_25719DD68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterBase, &type metadata for DiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719DD68);
  }
  return result;
}

unint64_t sub_24208CFA8()
{
  unint64_t result;

  result = qword_25719DD70;
  if (!qword_25719DD70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterBase, &type metadata for DiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719DD70);
  }
  return result;
}

unint64_t sub_24208CFE4(uint64_t a1)
{
  unint64_t result;

  result = sub_24208D008();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208D008()
{
  unint64_t result;

  result = qword_25719DD78;
  if (!qword_25719DD78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterBase, &type metadata for DiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719DD78);
  }
  return result;
}

void sub_24208D044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D058, (uint64_t (*)(void))sub_24208D094);
}

unint64_t sub_24208D058()
{
  unint64_t result;

  result = qword_25719DD80;
  if (!qword_25719DD80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterBase, &type metadata for DiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719DD80);
  }
  return result;
}

unint64_t sub_24208D094()
{
  unint64_t result;

  result = qword_25719DD88;
  if (!qword_25719DD88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterBase, &type metadata for DiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719DD88);
  }
  return result;
}

uint64_t sub_24208D0D0()
{
  return MEMORY[0x24BEE0D10];
}

unint64_t sub_24208D0E0()
{
  unint64_t result;

  result = qword_25719DD90;
  if (!qword_25719DD90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterBase, &type metadata for DiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719DD90);
  }
  return result;
}

void sub_24208D11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D130, (uint64_t (*)(void))sub_24208D16C);
}

unint64_t sub_24208D130()
{
  unint64_t result;

  result = qword_25719DD98;
  if (!qword_25719DD98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterAssetMetadata, &type metadata for DiffusionAdapterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DD98);
  }
  return result;
}

unint64_t sub_24208D16C()
{
  unint64_t result;

  result = qword_25719DDA0;
  if (!qword_25719DDA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterAssetMetadata, &type metadata for DiffusionAdapterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DDA0);
  }
  return result;
}

void sub_24208D1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D1BC, (uint64_t (*)(void))sub_24208D1F8);
}

unint64_t sub_24208D1BC()
{
  unint64_t result;

  result = qword_2543973A8;
  if (!qword_2543973A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_2543973A8);
  }
  return result;
}

unint64_t sub_24208D1F8()
{
  unint64_t result;

  result = qword_2543973B8;
  if (!qword_2543973B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_2543973B8);
  }
  return result;
}

void sub_24208D234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D248, (uint64_t (*)(void))sub_24208D284);
}

unint64_t sub_24208D248()
{
  unint64_t result;

  result = qword_25719DDA8;
  if (!qword_25719DDA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719DDA8);
  }
  return result;
}

unint64_t sub_24208D284()
{
  unint64_t result;

  result = qword_254399110;
  if (!qword_254399110)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254399110);
  }
  return result;
}

unint64_t sub_24208D2C0(uint64_t a1)
{
  unint64_t result;

  result = sub_24208D2E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208D2E4()
{
  unint64_t result;

  result = qword_2543973C0;
  if (!qword_2543973C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_2543973C0);
  }
  return result;
}

void sub_24208D320()
{
  sub_2420924C4((uint64_t)&unk_25719DDB0);
}

unint64_t sub_24208D344(uint64_t a1)
{
  unint64_t result;

  result = sub_24208D368();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208D368()
{
  unint64_t result;

  result = qword_2543973A0;
  if (!qword_2543973A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_2543973A0);
  }
  return result;
}

void sub_24208D3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D3B8, (uint64_t (*)(void))sub_24208D3F4);
}

unint64_t sub_24208D3B8()
{
  unint64_t result;

  result = qword_254397388;
  if (!qword_254397388)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397388);
  }
  return result;
}

unint64_t sub_24208D3F4()
{
  unint64_t result;

  result = qword_254397398;
  if (!qword_254397398)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397398);
  }
  return result;
}

unint64_t sub_24208D434()
{
  unint64_t result;

  result = qword_254397390;
  if (!qword_254397390)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397390);
  }
  return result;
}

unint64_t sub_24208D470(uint64_t a1)
{
  unint64_t result;

  result = sub_24208D494();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208D494()
{
  unint64_t result;

  result = qword_254397080;
  if (!qword_254397080)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelBase, &type metadata for DiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397080);
  }
  return result;
}

void sub_24208D4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D4E4, (uint64_t (*)(void))sub_24208D520);
}

unint64_t sub_24208D4E4()
{
  unint64_t result;

  result = qword_25719DDC0;
  if (!qword_25719DDC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelBase, &type metadata for DiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_25719DDC0);
  }
  return result;
}

unint64_t sub_24208D520()
{
  unint64_t result;

  result = qword_25719DDC8;
  if (!qword_25719DDC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelBase, &type metadata for DiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_25719DDC8);
  }
  return result;
}

unint64_t sub_24208D55C(uint64_t a1)
{
  unint64_t result;

  result = sub_24208D580();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208D580()
{
  unint64_t result;

  result = qword_254397070;
  if (!qword_254397070)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelBase, &type metadata for DiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397070);
  }
  return result;
}

void sub_24208D5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D5D0, (uint64_t (*)(void))sub_24208D60C);
}

unint64_t sub_24208D5D0()
{
  unint64_t result;

  result = qword_254397058;
  if (!qword_254397058)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelBase, &type metadata for DiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397058);
  }
  return result;
}

unint64_t sub_24208D60C()
{
  unint64_t result;

  result = qword_254397068;
  if (!qword_254397068)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelBase, &type metadata for DiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397068);
  }
  return result;
}

unint64_t sub_24208D64C()
{
  unint64_t result;

  result = qword_254397060;
  if (!qword_254397060)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelBase, &type metadata for DiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397060);
  }
  return result;
}

void sub_24208D688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D69C, (uint64_t (*)(void))sub_24208D6D8);
}

unint64_t sub_24208D69C()
{
  unint64_t result;

  result = qword_25719DDD0;
  if (!qword_25719DDD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelAssetMetadata, &type metadata for DiffusionModelAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DDD0);
  }
  return result;
}

unint64_t sub_24208D6D8()
{
  unint64_t result;

  result = qword_25719DDD8;
  if (!qword_25719DDD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelAssetMetadata, &type metadata for DiffusionModelAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DDD8);
  }
  return result;
}

void sub_24208D714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D728, (uint64_t (*)(void))sub_24208D764);
}

unint64_t sub_24208D728()
{
  unint64_t result;

  result = qword_254397038;
  if (!qword_254397038)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397038);
  }
  return result;
}

unint64_t sub_24208D764()
{
  unint64_t result;

  result = qword_254397048;
  if (!qword_254397048)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397048);
  }
  return result;
}

void sub_24208D7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D7B4, (uint64_t (*)(void))sub_24208D7F0);
}

unint64_t sub_24208D7B4()
{
  unint64_t result;

  result = qword_25719DDE0;
  if (!qword_25719DDE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_25719DDE0);
  }
  return result;
}

unint64_t sub_24208D7F0()
{
  unint64_t result;

  result = qword_254399070;
  if (!qword_254399070)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254399070);
  }
  return result;
}

unint64_t sub_24208D82C(uint64_t a1)
{
  unint64_t result;

  result = sub_24208D850();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208D850()
{
  unint64_t result;

  result = qword_254397050;
  if (!qword_254397050)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397050);
  }
  return result;
}

void sub_24208D88C()
{
  sub_2420924C4((uint64_t)&unk_25719DDE8);
}

unint64_t sub_24208D8B0(uint64_t a1)
{
  unint64_t result;

  result = sub_24208D8D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208D8D4()
{
  unint64_t result;

  result = qword_254397030;
  if (!qword_254397030)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397030);
  }
  return result;
}

void sub_24208D910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208D924, (uint64_t (*)(void))sub_24208D960);
}

unint64_t sub_24208D924()
{
  unint64_t result;

  result = qword_254397018;
  if (!qword_254397018)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397018);
  }
  return result;
}

unint64_t sub_24208D960()
{
  unint64_t result;

  result = qword_254397028;
  if (!qword_254397028)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397028);
  }
  return result;
}

unint64_t sub_24208D9A0()
{
  unint64_t result;

  result = qword_254397020;
  if (!qword_254397020)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397020);
  }
  return result;
}

unint64_t sub_24208D9DC(uint64_t a1)
{
  unint64_t result;

  result = sub_24208DA00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208DA00()
{
  unint64_t result;

  result = qword_25719DDF8;
  if (!qword_25719DDF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DisabledUseCaseListBase, &type metadata for DisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_25719DDF8);
  }
  return result;
}

void sub_24208DA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208DA50, (uint64_t (*)(void))sub_24208DA8C);
}

unint64_t sub_24208DA50()
{
  unint64_t result;

  result = qword_25719DE00;
  if (!qword_25719DE00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DisabledUseCaseListBase, &type metadata for DisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_25719DE00);
  }
  return result;
}

unint64_t sub_24208DA8C()
{
  unint64_t result;

  result = qword_25719DE08;
  if (!qword_25719DE08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DisabledUseCaseListBase, &type metadata for DisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_25719DE08);
  }
  return result;
}

void sub_24208DAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208DADC, (uint64_t (*)(void))sub_24208DB18);
}

unint64_t sub_24208DADC()
{
  unint64_t result;

  result = qword_25719DE10;
  if (!qword_25719DE10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DisabledUseCaseListBase, &type metadata for DisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_25719DE10);
  }
  return result;
}

unint64_t sub_24208DB18()
{
  unint64_t result;

  result = qword_25719DE18;
  if (!qword_25719DE18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DisabledUseCaseListBase, &type metadata for DisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_25719DE18);
  }
  return result;
}

unint64_t sub_24208DB58()
{
  unint64_t result;

  result = qword_25719DE20;
  if (!qword_25719DE20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DisabledUseCaseListBase, &type metadata for DisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_25719DE20);
  }
  return result;
}

void sub_24208DB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208DBA8, (uint64_t (*)(void))sub_24208DBE4);
}

unint64_t sub_24208DBA8()
{
  unint64_t result;

  result = qword_2543999E0;
  if (!qword_2543999E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DisabledUseCaseListAssetMetadata, &type metadata for DisabledUseCaseListAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_2543999E0);
  }
  return result;
}

unint64_t sub_24208DBE4()
{
  unint64_t result;

  result = qword_2543999D8;
  if (!qword_2543999D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DisabledUseCaseListAssetMetadata, &type metadata for DisabledUseCaseListAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_2543999D8);
  }
  return result;
}

void sub_24208DC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208DC34, (uint64_t (*)(void))sub_24208DC70);
}

unint64_t sub_24208DC34()
{
  unint64_t result;

  result = qword_254399C10;
  if (!qword_254399C10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_254399C10);
  }
  return result;
}

unint64_t sub_24208DC70()
{
  unint64_t result;

  result = qword_254399C20;
  if (!qword_254399C20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_254399C20);
  }
  return result;
}

void sub_24208DCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208DCC0, (uint64_t (*)(void))sub_24208DCFC);
}

unint64_t sub_24208DCC0()
{
  unint64_t result;

  result = qword_2543979C8;
  if (!qword_2543979C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_2543979C8);
  }
  return result;
}

unint64_t sub_24208DCFC()
{
  unint64_t result;

  result = qword_254397920;
  if (!qword_254397920)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_254397920);
  }
  return result;
}

unint64_t sub_24208DD38()
{
  unint64_t result;

  result = qword_254399C08;
  if (!qword_254399C08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_254399C08);
  }
  return result;
}

void sub_24208DD74()
{
  sub_2420924C4((uint64_t)&unk_2543979B0);
}

unint64_t sub_24208DD98(uint64_t a1)
{
  unint64_t result;

  result = sub_24208DD38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24208DDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208DDD0, (uint64_t (*)(void))sub_24208DE0C);
}

unint64_t sub_24208DDD0()
{
  unint64_t result;

  result = qword_254399BF0;
  if (!qword_254399BF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_254399BF0);
  }
  return result;
}

unint64_t sub_24208DE0C()
{
  unint64_t result;

  result = qword_254399C00;
  if (!qword_254399C00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_254399C00);
  }
  return result;
}

unint64_t sub_24208DE4C()
{
  unint64_t result;

  result = qword_254399BF8;
  if (!qword_254399BF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDisabledUseCaseListBase, &type metadata for AssetBackedDisabledUseCaseListBase);
    atomic_store(result, (unint64_t *)&qword_254399BF8);
  }
  return result;
}

unint64_t sub_24208DE88(uint64_t a1)
{
  unint64_t result;

  result = sub_24208DEAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208DEAC()
{
  unint64_t result;

  result = qword_25719DE28;
  if (!qword_25719DE28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for GenerativeFunctionOverridesBase, &type metadata for GenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_25719DE28);
  }
  return result;
}

void sub_24208DEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208DEFC, (uint64_t (*)(void))sub_24208DF38);
}

unint64_t sub_24208DEFC()
{
  unint64_t result;

  result = qword_25719DE30;
  if (!qword_25719DE30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for GenerativeFunctionOverridesBase, &type metadata for GenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_25719DE30);
  }
  return result;
}

unint64_t sub_24208DF38()
{
  unint64_t result;

  result = qword_25719DE38;
  if (!qword_25719DE38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for GenerativeFunctionOverridesBase, &type metadata for GenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_25719DE38);
  }
  return result;
}

void sub_24208DF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208DF88, (uint64_t (*)(void))sub_24208DFC4);
}

unint64_t sub_24208DF88()
{
  unint64_t result;

  result = qword_25719DE40;
  if (!qword_25719DE40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for GenerativeFunctionOverridesBase, &type metadata for GenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_25719DE40);
  }
  return result;
}

unint64_t sub_24208DFC4()
{
  unint64_t result;

  result = qword_25719DE48;
  if (!qword_25719DE48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for GenerativeFunctionOverridesBase, &type metadata for GenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_25719DE48);
  }
  return result;
}

unint64_t sub_24208E004()
{
  unint64_t result;

  result = qword_25719DE50;
  if (!qword_25719DE50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for GenerativeFunctionOverridesBase, &type metadata for GenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_25719DE50);
  }
  return result;
}

void sub_24208E040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E054, (uint64_t (*)(void))sub_24208E090);
}

unint64_t sub_24208E054()
{
  unint64_t result;

  result = qword_25719DE58;
  if (!qword_25719DE58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for GenerativeFunctionOverridesAssetMetadata, &type metadata for GenerativeFunctionOverridesAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DE58);
  }
  return result;
}

unint64_t sub_24208E090()
{
  unint64_t result;

  result = qword_25719DE60;
  if (!qword_25719DE60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for GenerativeFunctionOverridesAssetMetadata, &type metadata for GenerativeFunctionOverridesAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DE60);
  }
  return result;
}

void sub_24208E0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E0E0, (uint64_t (*)(void))sub_24208E11C);
}

unint64_t sub_24208E0E0()
{
  unint64_t result;

  result = qword_254397458;
  if (!qword_254397458)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_254397458);
  }
  return result;
}

unint64_t sub_24208E11C()
{
  unint64_t result;

  result = qword_254397468;
  if (!qword_254397468)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_254397468);
  }
  return result;
}

void sub_24208E158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E16C, (uint64_t (*)(void))sub_24208E1A8);
}

unint64_t sub_24208E16C()
{
  unint64_t result;

  result = qword_25719DE68;
  if (!qword_25719DE68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_25719DE68);
  }
  return result;
}

unint64_t sub_24208E1A8()
{
  unint64_t result;

  result = qword_2543991B8;
  if (!qword_2543991B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_2543991B8);
  }
  return result;
}

unint64_t sub_24208E1E4()
{
  unint64_t result;

  result = qword_254397450;
  if (!qword_254397450)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_254397450);
  }
  return result;
}

void sub_24208E220()
{
  sub_2420924C4((uint64_t)&unk_25719DE70);
}

unint64_t sub_24208E244(uint64_t a1)
{
  unint64_t result;

  result = sub_24208E1E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24208E268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E27C, (uint64_t (*)(void))sub_24208E2B8);
}

unint64_t sub_24208E27C()
{
  unint64_t result;

  result = qword_254397438;
  if (!qword_254397438)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_254397438);
  }
  return result;
}

unint64_t sub_24208E2B8()
{
  unint64_t result;

  result = qword_254397448;
  if (!qword_254397448)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_254397448);
  }
  return result;
}

unint64_t sub_24208E2F8()
{
  unint64_t result;

  result = qword_254397440;
  if (!qword_254397440)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedGenerativeFunctionOverridesBase, &type metadata for AssetBackedGenerativeFunctionOverridesBase);
    atomic_store(result, (unint64_t *)&qword_254397440);
  }
  return result;
}

unint64_t sub_24208E334(uint64_t a1)
{
  unint64_t result;

  result = sub_24208E358();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208E358()
{
  unint64_t result;

  result = qword_25719DE80;
  if (!qword_25719DE80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for HandwritingSynthesizerBase, &type metadata for HandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_25719DE80);
  }
  return result;
}

void sub_24208E394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E3A8, (uint64_t (*)(void))sub_24208E3E4);
}

unint64_t sub_24208E3A8()
{
  unint64_t result;

  result = qword_25719DE88;
  if (!qword_25719DE88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for HandwritingSynthesizerBase, &type metadata for HandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_25719DE88);
  }
  return result;
}

unint64_t sub_24208E3E4()
{
  unint64_t result;

  result = qword_25719DE90;
  if (!qword_25719DE90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for HandwritingSynthesizerBase, &type metadata for HandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_25719DE90);
  }
  return result;
}

void sub_24208E420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E434, (uint64_t (*)(void))sub_24208E470);
}

unint64_t sub_24208E434()
{
  unint64_t result;

  result = qword_25719DE98;
  if (!qword_25719DE98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for HandwritingSynthesizerBase, &type metadata for HandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_25719DE98);
  }
  return result;
}

unint64_t sub_24208E470()
{
  unint64_t result;

  result = qword_25719DEA0;
  if (!qword_25719DEA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for HandwritingSynthesizerBase, &type metadata for HandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_25719DEA0);
  }
  return result;
}

unint64_t sub_24208E4B0()
{
  unint64_t result;

  result = qword_25719DEA8;
  if (!qword_25719DEA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for HandwritingSynthesizerBase, &type metadata for HandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_25719DEA8);
  }
  return result;
}

void sub_24208E4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E500, (uint64_t (*)(void))sub_24208E53C);
}

unint64_t sub_24208E500()
{
  unint64_t result;

  result = qword_25719DEB0;
  if (!qword_25719DEB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for HandwritingSynthesizerAssetMetadata, &type metadata for HandwritingSynthesizerAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DEB0);
  }
  return result;
}

unint64_t sub_24208E53C()
{
  unint64_t result;

  result = qword_25719DEB8;
  if (!qword_25719DEB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for HandwritingSynthesizerAssetMetadata, &type metadata for HandwritingSynthesizerAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DEB8);
  }
  return result;
}

void sub_24208E578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E58C, (uint64_t (*)(void))sub_24208E5C8);
}

unint64_t sub_24208E58C()
{
  unint64_t result;

  result = qword_254399190;
  if (!qword_254399190)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_254399190);
  }
  return result;
}

unint64_t sub_24208E5C8()
{
  unint64_t result;

  result = qword_2543991A0;
  if (!qword_2543991A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_2543991A0);
  }
  return result;
}

void sub_24208E604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E618, (uint64_t (*)(void))sub_24208E654);
}

unint64_t sub_24208E618()
{
  unint64_t result;

  result = qword_25719DEC0;
  if (!qword_25719DEC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_25719DEC0);
  }
  return result;
}

unint64_t sub_24208E654()
{
  unint64_t result;

  result = qword_254399168;
  if (!qword_254399168)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_254399168);
  }
  return result;
}

unint64_t sub_24208E690()
{
  unint64_t result;

  result = qword_254399188;
  if (!qword_254399188)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_254399188);
  }
  return result;
}

void sub_24208E6CC()
{
  sub_2420924C4((uint64_t)&unk_25719DEC8);
}

unint64_t sub_24208E6F0(uint64_t a1)
{
  unint64_t result;

  result = sub_24208E690();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24208E714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E728, (uint64_t (*)(void))sub_24208E764);
}

unint64_t sub_24208E728()
{
  unint64_t result;

  result = qword_254399170;
  if (!qword_254399170)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_254399170);
  }
  return result;
}

unint64_t sub_24208E764()
{
  unint64_t result;

  result = qword_254399180;
  if (!qword_254399180)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_254399180);
  }
  return result;
}

unint64_t sub_24208E7A4()
{
  unint64_t result;

  result = qword_254399178;
  if (!qword_254399178)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedHandwritingSynthesizerBase, &type metadata for AssetBackedHandwritingSynthesizerBase);
    atomic_store(result, (unint64_t *)&qword_254399178);
  }
  return result;
}

unint64_t sub_24208E7E0(uint64_t a1)
{
  unint64_t result;

  result = sub_24208E804();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208E804()
{
  unint64_t result;

  result = qword_25719DED8;
  if (!qword_25719DED8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageFilterBase, &type metadata for ImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_25719DED8);
  }
  return result;
}

void sub_24208E840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E854, (uint64_t (*)(void))sub_24208E890);
}

unint64_t sub_24208E854()
{
  unint64_t result;

  result = qword_25719DEE0;
  if (!qword_25719DEE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageFilterBase, &type metadata for ImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_25719DEE0);
  }
  return result;
}

unint64_t sub_24208E890()
{
  unint64_t result;

  result = qword_25719DEE8;
  if (!qword_25719DEE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageFilterBase, &type metadata for ImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_25719DEE8);
  }
  return result;
}

void sub_24208E8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E8E0, (uint64_t (*)(void))sub_24208E91C);
}

unint64_t sub_24208E8E0()
{
  unint64_t result;

  result = qword_25719DEF0;
  if (!qword_25719DEF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageFilterBase, &type metadata for ImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_25719DEF0);
  }
  return result;
}

unint64_t sub_24208E91C()
{
  unint64_t result;

  result = qword_25719DEF8;
  if (!qword_25719DEF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageFilterBase, &type metadata for ImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_25719DEF8);
  }
  return result;
}

unint64_t sub_24208E95C()
{
  unint64_t result;

  result = qword_25719DF00;
  if (!qword_25719DF00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageFilterBase, &type metadata for ImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF00);
  }
  return result;
}

void sub_24208E998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208E9AC, (uint64_t (*)(void))sub_24208E9E8);
}

unint64_t sub_24208E9AC()
{
  unint64_t result;

  result = qword_25719DF08;
  if (!qword_25719DF08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageFilterAssetMetadata, &type metadata for ImageFilterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DF08);
  }
  return result;
}

unint64_t sub_24208E9E8()
{
  unint64_t result;

  result = qword_25719DF10;
  if (!qword_25719DF10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageFilterAssetMetadata, &type metadata for ImageFilterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DF10);
  }
  return result;
}

void sub_24208EA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208EA38, (uint64_t (*)(void))sub_24208EA74);
}

unint64_t sub_24208EA38()
{
  unint64_t result;

  result = qword_2543972C8;
  if (!qword_2543972C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_2543972C8);
  }
  return result;
}

unint64_t sub_24208EA74()
{
  unint64_t result;

  result = qword_2543972D8;
  if (!qword_2543972D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_2543972D8);
  }
  return result;
}

void sub_24208EAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208EAC4, (uint64_t (*)(void))sub_24208EB00);
}

unint64_t sub_24208EAC4()
{
  unint64_t result;

  result = qword_25719DF18;
  if (!qword_25719DF18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF18);
  }
  return result;
}

unint64_t sub_24208EB00()
{
  unint64_t result;

  result = qword_2543990F0;
  if (!qword_2543990F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_2543990F0);
  }
  return result;
}

unint64_t sub_24208EB3C()
{
  unint64_t result;

  result = qword_2543972C0;
  if (!qword_2543972C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_2543972C0);
  }
  return result;
}

void sub_24208EB78()
{
  sub_2420924C4((uint64_t)&unk_25719DF20);
}

unint64_t sub_24208EB9C(uint64_t a1)
{
  unint64_t result;

  result = sub_24208EB3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24208EBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208EBD4, (uint64_t (*)(void))sub_24208EC10);
}

unint64_t sub_24208EBD4()
{
  unint64_t result;

  result = qword_2543972A8;
  if (!qword_2543972A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_2543972A8);
  }
  return result;
}

unint64_t sub_24208EC10()
{
  unint64_t result;

  result = qword_2543972B8;
  if (!qword_2543972B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_2543972B8);
  }
  return result;
}

unint64_t sub_24208EC50()
{
  unint64_t result;

  result = qword_2543972B0;
  if (!qword_2543972B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageFilterBase, &type metadata for AssetBackedImageFilterBase);
    atomic_store(result, (unint64_t *)&qword_2543972B0);
  }
  return result;
}

unint64_t sub_24208EC8C(uint64_t a1)
{
  unint64_t result;

  result = sub_24208ECB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208ECB0()
{
  unint64_t result;

  result = qword_25719DF30;
  if (!qword_25719DF30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageInpainterBase, &type metadata for ImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF30);
  }
  return result;
}

void sub_24208ECEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208ED00, (uint64_t (*)(void))sub_24208ED3C);
}

unint64_t sub_24208ED00()
{
  unint64_t result;

  result = qword_25719DF38;
  if (!qword_25719DF38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageInpainterBase, &type metadata for ImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF38);
  }
  return result;
}

unint64_t sub_24208ED3C()
{
  unint64_t result;

  result = qword_25719DF40;
  if (!qword_25719DF40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageInpainterBase, &type metadata for ImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF40);
  }
  return result;
}

void sub_24208ED78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208ED8C, (uint64_t (*)(void))sub_24208EDC8);
}

unint64_t sub_24208ED8C()
{
  unint64_t result;

  result = qword_25719DF48;
  if (!qword_25719DF48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageInpainterBase, &type metadata for ImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF48);
  }
  return result;
}

unint64_t sub_24208EDC8()
{
  unint64_t result;

  result = qword_25719DF50;
  if (!qword_25719DF50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageInpainterBase, &type metadata for ImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF50);
  }
  return result;
}

unint64_t sub_24208EE08()
{
  unint64_t result;

  result = qword_25719DF58;
  if (!qword_25719DF58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageInpainterBase, &type metadata for ImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF58);
  }
  return result;
}

void sub_24208EE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208EE58, (uint64_t (*)(void))sub_24208EE94);
}

unint64_t sub_24208EE58()
{
  unint64_t result;

  result = qword_25719DF60;
  if (!qword_25719DF60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageInpainterAssetMetadata, &type metadata for ImageInpainterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DF60);
  }
  return result;
}

unint64_t sub_24208EE94()
{
  unint64_t result;

  result = qword_25719DF68;
  if (!qword_25719DF68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageInpainterAssetMetadata, &type metadata for ImageInpainterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DF68);
  }
  return result;
}

void sub_24208EED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208EEE4, (uint64_t (*)(void))sub_24208EF20);
}

unint64_t sub_24208EEE4()
{
  unint64_t result;

  result = qword_254397338;
  if (!qword_254397338)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_254397338);
  }
  return result;
}

unint64_t sub_24208EF20()
{
  unint64_t result;

  result = qword_254397348;
  if (!qword_254397348)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_254397348);
  }
  return result;
}

void sub_24208EF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208EF70, (uint64_t (*)(void))sub_24208EFAC);
}

unint64_t sub_24208EF70()
{
  unint64_t result;

  result = qword_25719DF70;
  if (!qword_25719DF70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_25719DF70);
  }
  return result;
}

unint64_t sub_24208EFAC()
{
  unint64_t result;

  result = qword_254399100;
  if (!qword_254399100)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_254399100);
  }
  return result;
}

unint64_t sub_24208EFE8()
{
  unint64_t result;

  result = qword_254397330;
  if (!qword_254397330)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_254397330);
  }
  return result;
}

void sub_24208F024()
{
  sub_2420924C4((uint64_t)&unk_25719DF78);
}

unint64_t sub_24208F048(uint64_t a1)
{
  unint64_t result;

  result = sub_24208EFE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24208F06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F080, (uint64_t (*)(void))sub_24208F0BC);
}

unint64_t sub_24208F080()
{
  unint64_t result;

  result = qword_254397318;
  if (!qword_254397318)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_254397318);
  }
  return result;
}

unint64_t sub_24208F0BC()
{
  unint64_t result;

  result = qword_254397328;
  if (!qword_254397328)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_254397328);
  }
  return result;
}

unint64_t sub_24208F0FC()
{
  unint64_t result;

  result = qword_254397320;
  if (!qword_254397320)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageInpainterBase, &type metadata for AssetBackedImageInpainterBase);
    atomic_store(result, (unint64_t *)&qword_254397320);
  }
  return result;
}

unint64_t sub_24208F138(uint64_t a1)
{
  unint64_t result;

  result = sub_24208F15C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208F15C()
{
  unint64_t result;

  result = qword_25719DF88;
  if (!qword_25719DF88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageMagicCleanUpBase, &type metadata for ImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_25719DF88);
  }
  return result;
}

void sub_24208F198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F1AC, (uint64_t (*)(void))sub_24208F1E8);
}

unint64_t sub_24208F1AC()
{
  unint64_t result;

  result = qword_25719DF90;
  if (!qword_25719DF90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageMagicCleanUpBase, &type metadata for ImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_25719DF90);
  }
  return result;
}

unint64_t sub_24208F1E8()
{
  unint64_t result;

  result = qword_25719DF98;
  if (!qword_25719DF98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageMagicCleanUpBase, &type metadata for ImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_25719DF98);
  }
  return result;
}

void sub_24208F224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F238, (uint64_t (*)(void))sub_24208F274);
}

unint64_t sub_24208F238()
{
  unint64_t result;

  result = qword_25719DFA0;
  if (!qword_25719DFA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageMagicCleanUpBase, &type metadata for ImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_25719DFA0);
  }
  return result;
}

unint64_t sub_24208F274()
{
  unint64_t result;

  result = qword_25719DFA8;
  if (!qword_25719DFA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageMagicCleanUpBase, &type metadata for ImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_25719DFA8);
  }
  return result;
}

unint64_t sub_24208F2B4()
{
  unint64_t result;

  result = qword_25719DFB0;
  if (!qword_25719DFB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageMagicCleanUpBase, &type metadata for ImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_25719DFB0);
  }
  return result;
}

void sub_24208F2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F304, (uint64_t (*)(void))sub_24208F340);
}

unint64_t sub_24208F304()
{
  unint64_t result;

  result = qword_25719DFB8;
  if (!qword_25719DFB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageMagicCleanUpAssetMetadata, &type metadata for ImageMagicCleanUpAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DFB8);
  }
  return result;
}

unint64_t sub_24208F340()
{
  unint64_t result;

  result = qword_25719DFC0;
  if (!qword_25719DFC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageMagicCleanUpAssetMetadata, &type metadata for ImageMagicCleanUpAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719DFC0);
  }
  return result;
}

void sub_24208F37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F390, (uint64_t (*)(void))sub_24208F3CC);
}

unint64_t sub_24208F390()
{
  unint64_t result;

  result = qword_254399140;
  if (!qword_254399140)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_254399140);
  }
  return result;
}

unint64_t sub_24208F3CC()
{
  unint64_t result;

  result = qword_254399148;
  if (!qword_254399148)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_254399148);
  }
  return result;
}

void sub_24208F408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F41C, (uint64_t (*)(void))sub_24208F458);
}

unint64_t sub_24208F41C()
{
  unint64_t result;

  result = qword_25719DFC8;
  if (!qword_25719DFC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_25719DFC8);
  }
  return result;
}

unint64_t sub_24208F458()
{
  unint64_t result;

  result = qword_254399118;
  if (!qword_254399118)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_254399118);
  }
  return result;
}

unint64_t sub_24208F494()
{
  unint64_t result;

  result = qword_254399138;
  if (!qword_254399138)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_254399138);
  }
  return result;
}

void sub_24208F4D0()
{
  sub_2420924C4((uint64_t)&unk_25719DFD0);
}

unint64_t sub_24208F4F4(uint64_t a1)
{
  unint64_t result;

  result = sub_24208F494();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24208F518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F52C, (uint64_t (*)(void))sub_24208F568);
}

unint64_t sub_24208F52C()
{
  unint64_t result;

  result = qword_254399120;
  if (!qword_254399120)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_254399120);
  }
  return result;
}

unint64_t sub_24208F568()
{
  unint64_t result;

  result = qword_254399130;
  if (!qword_254399130)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_254399130);
  }
  return result;
}

unint64_t sub_24208F5A8()
{
  unint64_t result;

  result = qword_254399128;
  if (!qword_254399128)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageMagicCleanUpBase, &type metadata for AssetBackedImageMagicCleanUpBase);
    atomic_store(result, (unint64_t *)&qword_254399128);
  }
  return result;
}

unint64_t sub_24208F5E4(uint64_t a1)
{
  unint64_t result;

  result = sub_24208F608();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208F608()
{
  unint64_t result;

  result = qword_25719DFE0;
  if (!qword_25719DFE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageScalerBase, &type metadata for ImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_25719DFE0);
  }
  return result;
}

void sub_24208F644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F658, (uint64_t (*)(void))sub_24208F694);
}

unint64_t sub_24208F658()
{
  unint64_t result;

  result = qword_25719DFE8;
  if (!qword_25719DFE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageScalerBase, &type metadata for ImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_25719DFE8);
  }
  return result;
}

unint64_t sub_24208F694()
{
  unint64_t result;

  result = qword_25719DFF0;
  if (!qword_25719DFF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageScalerBase, &type metadata for ImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_25719DFF0);
  }
  return result;
}

void sub_24208F6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F6E4, (uint64_t (*)(void))sub_24208F720);
}

unint64_t sub_24208F6E4()
{
  unint64_t result;

  result = qword_25719DFF8;
  if (!qword_25719DFF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageScalerBase, &type metadata for ImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_25719DFF8);
  }
  return result;
}

unint64_t sub_24208F720()
{
  unint64_t result;

  result = qword_25719E000;
  if (!qword_25719E000)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageScalerBase, &type metadata for ImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_25719E000);
  }
  return result;
}

unint64_t sub_24208F760()
{
  unint64_t result;

  result = qword_25719E008;
  if (!qword_25719E008)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageScalerBase, &type metadata for ImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_25719E008);
  }
  return result;
}

void sub_24208F79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F7B0, (uint64_t (*)(void))sub_24208F7EC);
}

unint64_t sub_24208F7B0()
{
  unint64_t result;

  result = qword_25719E010;
  if (!qword_25719E010)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageScalerAssetMetadata, &type metadata for ImageScalerAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E010);
  }
  return result;
}

unint64_t sub_24208F7EC()
{
  unint64_t result;

  result = qword_25719E018;
  if (!qword_25719E018)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageScalerAssetMetadata, &type metadata for ImageScalerAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E018);
  }
  return result;
}

void sub_24208F828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F83C, (uint64_t (*)(void))sub_24208F878);
}

unint64_t sub_24208F83C()
{
  unint64_t result;

  result = qword_254397300;
  if (!qword_254397300)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_254397300);
  }
  return result;
}

unint64_t sub_24208F878()
{
  unint64_t result;

  result = qword_254397310;
  if (!qword_254397310)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_254397310);
  }
  return result;
}

void sub_24208F8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F8C8, (uint64_t (*)(void))sub_24208F904);
}

unint64_t sub_24208F8C8()
{
  unint64_t result;

  result = qword_25719E020;
  if (!qword_25719E020)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_25719E020);
  }
  return result;
}

unint64_t sub_24208F904()
{
  unint64_t result;

  result = qword_2543990F8;
  if (!qword_2543990F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_2543990F8);
  }
  return result;
}

unint64_t sub_24208F940()
{
  unint64_t result;

  result = qword_2543972F8;
  if (!qword_2543972F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_2543972F8);
  }
  return result;
}

void sub_24208F97C()
{
  sub_2420924C4((uint64_t)&unk_25719E028);
}

unint64_t sub_24208F9A0(uint64_t a1)
{
  unint64_t result;

  result = sub_24208F940();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24208F9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208F9D8, (uint64_t (*)(void))sub_24208FA14);
}

unint64_t sub_24208F9D8()
{
  unint64_t result;

  result = qword_2543972E0;
  if (!qword_2543972E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_2543972E0);
  }
  return result;
}

unint64_t sub_24208FA14()
{
  unint64_t result;

  result = qword_2543972F0;
  if (!qword_2543972F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_2543972F0);
  }
  return result;
}

unint64_t sub_24208FA54()
{
  unint64_t result;

  result = qword_2543972E8;
  if (!qword_2543972E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageScalerBase, &type metadata for AssetBackedImageScalerBase);
    atomic_store(result, (unint64_t *)&qword_2543972E8);
  }
  return result;
}

unint64_t sub_24208FA90(uint64_t a1)
{
  unint64_t result;

  result = sub_24208FAB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24208FAB4()
{
  unint64_t result;

  result = qword_25719E038;
  if (!qword_25719E038)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageSegmenterBase, &type metadata for ImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_25719E038);
  }
  return result;
}

void sub_24208FAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208FB04, (uint64_t (*)(void))sub_24208FB40);
}

unint64_t sub_24208FB04()
{
  unint64_t result;

  result = qword_25719E040;
  if (!qword_25719E040)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageSegmenterBase, &type metadata for ImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_25719E040);
  }
  return result;
}

unint64_t sub_24208FB40()
{
  unint64_t result;

  result = qword_25719E048;
  if (!qword_25719E048)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageSegmenterBase, &type metadata for ImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_25719E048);
  }
  return result;
}

void sub_24208FB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208FB90, (uint64_t (*)(void))sub_24208FBCC);
}

unint64_t sub_24208FB90()
{
  unint64_t result;

  result = qword_25719E050;
  if (!qword_25719E050)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageSegmenterBase, &type metadata for ImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_25719E050);
  }
  return result;
}

unint64_t sub_24208FBCC()
{
  unint64_t result;

  result = qword_25719E058;
  if (!qword_25719E058)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageSegmenterBase, &type metadata for ImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_25719E058);
  }
  return result;
}

unint64_t sub_24208FC0C()
{
  unint64_t result;

  result = qword_25719E060;
  if (!qword_25719E060)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageSegmenterBase, &type metadata for ImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_25719E060);
  }
  return result;
}

void sub_24208FC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208FC5C, (uint64_t (*)(void))sub_24208FC98);
}

unint64_t sub_24208FC5C()
{
  unint64_t result;

  result = qword_25719E068;
  if (!qword_25719E068)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageSegmenterAssetMetadata, &type metadata for ImageSegmenterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E068);
  }
  return result;
}

unint64_t sub_24208FC98()
{
  unint64_t result;

  result = qword_25719E070;
  if (!qword_25719E070)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ImageSegmenterAssetMetadata, &type metadata for ImageSegmenterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E070);
  }
  return result;
}

void sub_24208FCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208FCE8, (uint64_t (*)(void))sub_24208FD24);
}

unint64_t sub_24208FCE8()
{
  unint64_t result;

  result = qword_254397370;
  if (!qword_254397370)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_254397370);
  }
  return result;
}

unint64_t sub_24208FD24()
{
  unint64_t result;

  result = qword_254397380;
  if (!qword_254397380)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_254397380);
  }
  return result;
}

void sub_24208FD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208FD74, (uint64_t (*)(void))sub_24208FDB0);
}

unint64_t sub_24208FD74()
{
  unint64_t result;

  result = qword_25719E078;
  if (!qword_25719E078)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_25719E078);
  }
  return result;
}

unint64_t sub_24208FDB0()
{
  unint64_t result;

  result = qword_254399108;
  if (!qword_254399108)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_254399108);
  }
  return result;
}

unint64_t sub_24208FDEC()
{
  unint64_t result;

  result = qword_254397368;
  if (!qword_254397368)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_254397368);
  }
  return result;
}

void sub_24208FE28()
{
  sub_2420924C4((uint64_t)&unk_25719E080);
}

unint64_t sub_24208FE4C(uint64_t a1)
{
  unint64_t result;

  result = sub_24208FDEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24208FE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208FE84, (uint64_t (*)(void))sub_24208FEC0);
}

unint64_t sub_24208FE84()
{
  unint64_t result;

  result = qword_254397350;
  if (!qword_254397350)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_254397350);
  }
  return result;
}

unint64_t sub_24208FEC0()
{
  unint64_t result;

  result = qword_254397360;
  if (!qword_254397360)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_254397360);
  }
  return result;
}

unint64_t sub_24208FF00()
{
  unint64_t result;

  result = qword_254397358;
  if (!qword_254397358)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedImageSegmenterBase, &type metadata for AssetBackedImageSegmenterBase);
    atomic_store(result, (unint64_t *)&qword_254397358);
  }
  return result;
}

unint64_t sub_24208FF40()
{
  unint64_t result;

  result = qword_25719E090;
  if (!qword_25719E090)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.LoraRank, &type metadata for LLMAdapterAssetMetadata.LoraRank);
    atomic_store(result, (unint64_t *)&qword_25719E090);
  }
  return result;
}

unint64_t sub_24208FF80()
{
  unint64_t result;

  result = qword_25719E098;
  if (!qword_25719E098)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.ModelType, &type metadata for LLMAdapterAssetMetadata.ModelType);
    atomic_store(result, (unint64_t *)&qword_25719E098);
  }
  return result;
}

void sub_24208FFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24208FFD0, (uint64_t (*)(void))sub_24209000C);
}

unint64_t sub_24208FFD0()
{
  unint64_t result;

  result = qword_25719E0A0;
  if (!qword_25719E0A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata, &type metadata for LLMAdapterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E0A0);
  }
  return result;
}

unint64_t sub_24209000C()
{
  unint64_t result;

  result = qword_25719E0A8;
  if (!qword_25719E0A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata, &type metadata for LLMAdapterAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E0A8);
  }
  return result;
}

void sub_242090048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209005C, (uint64_t (*)(void))sub_242090098);
}

unint64_t sub_24209005C()
{
  unint64_t result;

  result = qword_254397268;
  if (!qword_254397268)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397268);
  }
  return result;
}

unint64_t sub_242090098()
{
  unint64_t result;

  result = qword_254397260;
  if (!qword_254397260)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397260);
  }
  return result;
}

void sub_2420900D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420900E8, (uint64_t (*)(void))sub_242090124);
}

unint64_t sub_2420900E8()
{
  unint64_t result;

  result = qword_25719E0B0;
  if (!qword_25719E0B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719E0B0);
  }
  return result;
}

unint64_t sub_242090124()
{
  unint64_t result;

  result = qword_2543990E8;
  if (!qword_2543990E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_2543990E8);
  }
  return result;
}

unint64_t sub_242090164()
{
  unint64_t result;

  result = qword_254399918;
  if (!qword_254399918)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_254399918);
  }
  return result;
}

unint64_t sub_2420901A0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420901C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420901C4()
{
  unint64_t result;

  result = qword_254397280;
  if (!qword_254397280)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397280);
  }
  return result;
}

void sub_242090200()
{
  sub_2420924C4((uint64_t)&unk_25719E0B8);
}

unint64_t sub_242090224(uint64_t a1)
{
  unint64_t result;

  result = sub_242090248();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242090248()
{
  unint64_t result;

  result = qword_254397258;
  if (!qword_254397258)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397258);
  }
  return result;
}

unint64_t sub_242090284(uint64_t a1)
{
  unint64_t result;

  result = sub_2420902A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420902A8()
{
  unint64_t result;

  result = qword_254397278;
  if (!qword_254397278)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397278);
  }
  return result;
}

void sub_2420902E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420902F8, (uint64_t (*)(void))sub_242090334);
}

unint64_t sub_2420902F8()
{
  unint64_t result;

  result = qword_254397240;
  if (!qword_254397240)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397240);
  }
  return result;
}

unint64_t sub_242090334()
{
  unint64_t result;

  result = qword_254397250;
  if (!qword_254397250)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397250);
  }
  return result;
}

unint64_t sub_242090374()
{
  unint64_t result;

  result = qword_254397248;
  if (!qword_254397248)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397248);
  }
  return result;
}

void sub_2420903B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420903C4, (uint64_t (*)(void))sub_242090400);
}

unint64_t sub_2420903C4()
{
  unint64_t result;

  result = qword_25719E0C8;
  if (!qword_25719E0C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelAssetMetadata, &type metadata for LLMDraftModelAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E0C8);
  }
  return result;
}

unint64_t sub_242090400()
{
  unint64_t result;

  result = qword_25719E0D0;
  if (!qword_25719E0D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelAssetMetadata, &type metadata for LLMDraftModelAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E0D0);
  }
  return result;
}

void sub_24209043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090450, (uint64_t (*)(void))sub_24209048C);
}

unint64_t sub_242090450()
{
  unint64_t result;

  result = qword_254397870;
  if (!qword_254397870)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397870);
  }
  return result;
}

unint64_t sub_24209048C()
{
  unint64_t result;

  result = qword_254397880;
  if (!qword_254397880)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397880);
  }
  return result;
}

void sub_2420904C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420904DC, (uint64_t (*)(void))sub_242090518);
}

unint64_t sub_2420904DC()
{
  unint64_t result;

  result = qword_25719E0D8;
  if (!qword_25719E0D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_25719E0D8);
  }
  return result;
}

unint64_t sub_242090518()
{
  unint64_t result;

  result = qword_254399068;
  if (!qword_254399068)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254399068);
  }
  return result;
}

unint64_t sub_242090554(uint64_t a1)
{
  unint64_t result;

  result = sub_242090578();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242090578()
{
  unint64_t result;

  result = qword_254397888;
  if (!qword_254397888)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397888);
  }
  return result;
}

void sub_2420905B4()
{
  sub_2420924C4((uint64_t)&unk_25719E0E0);
}

unint64_t sub_2420905D8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420905FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420905FC()
{
  unint64_t result;

  result = qword_254397868;
  if (!qword_254397868)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397868);
  }
  return result;
}

void sub_242090638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209064C, (uint64_t (*)(void))sub_242090688);
}

unint64_t sub_24209064C()
{
  unint64_t result;

  result = qword_254397850;
  if (!qword_254397850)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397850);
  }
  return result;
}

unint64_t sub_242090688()
{
  unint64_t result;

  result = qword_254397860;
  if (!qword_254397860)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397860);
  }
  return result;
}

unint64_t sub_2420906C8()
{
  unint64_t result;

  result = qword_254397858;
  if (!qword_254397858)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397858);
  }
  return result;
}

void sub_242090704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090718, (uint64_t (*)(void))sub_242090754);
}

unint64_t sub_242090718()
{
  unint64_t result;

  result = qword_254399AE0;
  if (!qword_254399AE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelAssetMetadata, &type metadata for LLMModelAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_254399AE0);
  }
  return result;
}

unint64_t sub_242090754()
{
  unint64_t result;

  result = qword_254399AD8;
  if (!qword_254399AD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelAssetMetadata, &type metadata for LLMModelAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_254399AD8);
  }
  return result;
}

void sub_242090790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420907A4, (uint64_t (*)(void))sub_242090164);
}

unint64_t sub_2420907A4()
{
  unint64_t result;

  result = qword_254399920;
  if (!qword_254399920)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_254399920);
  }
  return result;
}

void sub_2420907E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420907F4, (uint64_t (*)(void))sub_242090830);
}

unint64_t sub_2420907F4()
{
  unint64_t result;

  result = qword_2543979E0;
  if (!qword_2543979E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543979E0);
  }
  return result;
}

unint64_t sub_242090830()
{
  unint64_t result;

  result = qword_254397A08;
  if (!qword_254397A08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_254397A08);
  }
  return result;
}

unint64_t sub_242090870()
{
  unint64_t result;

  result = qword_254397220;
  if (!qword_254397220)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397220);
  }
  return result;
}

unint64_t sub_2420908AC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420908D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420908D0()
{
  unint64_t result;

  result = qword_254399930;
  if (!qword_254399930)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_254399930);
  }
  return result;
}

void sub_24209090C()
{
  sub_2420924C4((uint64_t)&unk_254399088);
}

unint64_t sub_242090930(uint64_t a1)
{
  unint64_t result;

  result = sub_242090954();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242090954()
{
  unint64_t result;

  result = qword_254399910;
  if (!qword_254399910)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_254399910);
  }
  return result;
}

unint64_t sub_242090990(uint64_t a1)
{
  unint64_t result;

  result = sub_2420909B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420909B4()
{
  unint64_t result;

  result = qword_254399928;
  if (!qword_254399928)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_254399928);
  }
  return result;
}

void sub_2420909F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090A04, (uint64_t (*)(void))sub_242090A40);
}

unint64_t sub_242090A04()
{
  unint64_t result;

  result = qword_2543998F8;
  if (!qword_2543998F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543998F8);
  }
  return result;
}

unint64_t sub_242090A40()
{
  unint64_t result;

  result = qword_254399908;
  if (!qword_254399908)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_254399908);
  }
  return result;
}

unint64_t sub_242090A80()
{
  unint64_t result;

  result = qword_254399900;
  if (!qword_254399900)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_254399900);
  }
  return result;
}

unint64_t sub_242090ABC(uint64_t a1)
{
  unint64_t result;

  result = sub_242090AE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242090AE0()
{
  unint64_t result;

  result = qword_25719E0F0;
  if (!qword_25719E0F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ServerConfigurationBase, &type metadata for ServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_25719E0F0);
  }
  return result;
}

void sub_242090B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090B30, (uint64_t (*)(void))sub_242090B6C);
}

unint64_t sub_242090B30()
{
  unint64_t result;

  result = qword_25719E0F8;
  if (!qword_25719E0F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ServerConfigurationBase, &type metadata for ServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_25719E0F8);
  }
  return result;
}

unint64_t sub_242090B6C()
{
  unint64_t result;

  result = qword_25719E100;
  if (!qword_25719E100)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ServerConfigurationBase, &type metadata for ServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_25719E100);
  }
  return result;
}

void sub_242090BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090BBC, (uint64_t (*)(void))sub_242090BF8);
}

unint64_t sub_242090BBC()
{
  unint64_t result;

  result = qword_25719E108;
  if (!qword_25719E108)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ServerConfigurationBase, &type metadata for ServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_25719E108);
  }
  return result;
}

unint64_t sub_242090BF8()
{
  unint64_t result;

  result = qword_25719E110;
  if (!qword_25719E110)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ServerConfigurationBase, &type metadata for ServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_25719E110);
  }
  return result;
}

unint64_t sub_242090C38()
{
  unint64_t result;

  result = qword_25719E118;
  if (!qword_25719E118)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ServerConfigurationBase, &type metadata for ServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_25719E118);
  }
  return result;
}

void sub_242090C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090C88, (uint64_t (*)(void))sub_242090CC4);
}

unint64_t sub_242090C88()
{
  unint64_t result;

  result = qword_25719E120;
  if (!qword_25719E120)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ServerConfigurationAssetMetadata, &type metadata for ServerConfigurationAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E120);
  }
  return result;
}

unint64_t sub_242090CC4()
{
  unint64_t result;

  result = qword_25719E128;
  if (!qword_25719E128)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ServerConfigurationAssetMetadata, &type metadata for ServerConfigurationAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E128);
  }
  return result;
}

void sub_242090D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090D14, (uint64_t (*)(void))sub_242090D50);
}

unint64_t sub_242090D14()
{
  unint64_t result;

  result = qword_254397948;
  if (!qword_254397948)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_254397948);
  }
  return result;
}

unint64_t sub_242090D50()
{
  unint64_t result;

  result = qword_254397958;
  if (!qword_254397958)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_254397958);
  }
  return result;
}

void sub_242090D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090DA0, (uint64_t (*)(void))sub_242090DDC);
}

unint64_t sub_242090DA0()
{
  unint64_t result;

  result = qword_25719E130;
  if (!qword_25719E130)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_25719E130);
  }
  return result;
}

unint64_t sub_242090DDC()
{
  unint64_t result;

  result = qword_254399158;
  if (!qword_254399158)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_254399158);
  }
  return result;
}

unint64_t sub_242090E18()
{
  unint64_t result;

  result = qword_254397940;
  if (!qword_254397940)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_254397940);
  }
  return result;
}

void sub_242090E54()
{
  sub_2420924C4((uint64_t)&unk_25719E138);
}

unint64_t sub_242090E78(uint64_t a1)
{
  unint64_t result;

  result = sub_242090E18();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_242090E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090EB0, (uint64_t (*)(void))sub_242090EEC);
}

unint64_t sub_242090EB0()
{
  unint64_t result;

  result = qword_254397928;
  if (!qword_254397928)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_254397928);
  }
  return result;
}

unint64_t sub_242090EEC()
{
  unint64_t result;

  result = qword_254397938;
  if (!qword_254397938)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_254397938);
  }
  return result;
}

unint64_t sub_242090F2C()
{
  unint64_t result;

  result = qword_254397930;
  if (!qword_254397930)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedServerConfigurationBase, &type metadata for AssetBackedServerConfigurationBase);
    atomic_store(result, (unint64_t *)&qword_254397930);
  }
  return result;
}

unint64_t sub_242090F68(uint64_t a1)
{
  unint64_t result;

  result = sub_242090F8C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242090F8C()
{
  unint64_t result;

  result = qword_25719E148;
  if (!qword_25719E148)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ModelConfigurationReplacementBase, &type metadata for ModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_25719E148);
  }
  return result;
}

void sub_242090FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242090FDC, (uint64_t (*)(void))sub_242091018);
}

unint64_t sub_242090FDC()
{
  unint64_t result;

  result = qword_25719E150;
  if (!qword_25719E150)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ModelConfigurationReplacementBase, &type metadata for ModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_25719E150);
  }
  return result;
}

unint64_t sub_242091018()
{
  unint64_t result;

  result = qword_25719E158;
  if (!qword_25719E158)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ModelConfigurationReplacementBase, &type metadata for ModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_25719E158);
  }
  return result;
}

void sub_242091054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091068, (uint64_t (*)(void))sub_2420910A4);
}

unint64_t sub_242091068()
{
  unint64_t result;

  result = qword_25719E160;
  if (!qword_25719E160)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ModelConfigurationReplacementBase, &type metadata for ModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_25719E160);
  }
  return result;
}

unint64_t sub_2420910A4()
{
  unint64_t result;

  result = qword_25719E168;
  if (!qword_25719E168)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ModelConfigurationReplacementBase, &type metadata for ModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_25719E168);
  }
  return result;
}

unint64_t sub_2420910E4()
{
  unint64_t result;

  result = qword_25719E170;
  if (!qword_25719E170)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ModelConfigurationReplacementBase, &type metadata for ModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_25719E170);
  }
  return result;
}

void sub_242091120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091134, (uint64_t (*)(void))sub_242091170);
}

unint64_t sub_242091134()
{
  unint64_t result;

  result = qword_25719E178;
  if (!qword_25719E178)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ModelConfigurationReplacementAssetMetadata, &type metadata for ModelConfigurationReplacementAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E178);
  }
  return result;
}

unint64_t sub_242091170()
{
  unint64_t result;

  result = qword_25719E180;
  if (!qword_25719E180)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ModelConfigurationReplacementAssetMetadata, &type metadata for ModelConfigurationReplacementAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E180);
  }
  return result;
}

void sub_2420911AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420911C0, (uint64_t (*)(void))sub_2420911FC);
}

unint64_t sub_2420911C0()
{
  unint64_t result;

  result = qword_254397840;
  if (!qword_254397840)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_254397840);
  }
  return result;
}

unint64_t sub_2420911FC()
{
  unint64_t result;

  result = qword_254397838;
  if (!qword_254397838)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_254397838);
  }
  return result;
}

void sub_242091238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209124C, (uint64_t (*)(void))sub_242091288);
}

unint64_t sub_24209124C()
{
  unint64_t result;

  result = qword_25719E188;
  if (!qword_25719E188)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_25719E188);
  }
  return result;
}

unint64_t sub_242091288()
{
  unint64_t result;

  result = qword_254399060;
  if (!qword_254399060)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_254399060);
  }
  return result;
}

unint64_t sub_2420912C4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420912E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420912E8()
{
  unint64_t result;

  result = qword_254397830;
  if (!qword_254397830)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_254397830);
  }
  return result;
}

void sub_242091324()
{
  sub_2420924C4((uint64_t)&unk_25719E190);
}

void sub_242091348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209135C, (uint64_t (*)(void))sub_242091398);
}

unint64_t sub_24209135C()
{
  unint64_t result;

  result = qword_254397818;
  if (!qword_254397818)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_254397818);
  }
  return result;
}

unint64_t sub_242091398()
{
  unint64_t result;

  result = qword_254397828;
  if (!qword_254397828)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_254397828);
  }
  return result;
}

unint64_t sub_2420913D8()
{
  unint64_t result;

  result = qword_254397820;
  if (!qword_254397820)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedModelConfigurationReplacementBase, &type metadata for AssetBackedModelConfigurationReplacementBase);
    atomic_store(result, (unint64_t *)&qword_254397820);
  }
  return result;
}

unint64_t sub_242091414(uint64_t a1)
{
  unint64_t result;

  result = sub_242091438();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242091438()
{
  unint64_t result;

  result = qword_254397118;
  if (!qword_254397118)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBase, &type metadata for SanitizerBase);
    atomic_store(result, (unint64_t *)&qword_254397118);
  }
  return result;
}

void sub_242091474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091488, (uint64_t (*)(void))sub_2420914C4);
}

unint64_t sub_242091488()
{
  unint64_t result;

  result = qword_25719E1A0;
  if (!qword_25719E1A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBase, &type metadata for SanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E1A0);
  }
  return result;
}

unint64_t sub_2420914C4()
{
  unint64_t result;

  result = qword_2543990B0;
  if (!qword_2543990B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBase, &type metadata for SanitizerBase);
    atomic_store(result, (unint64_t *)&qword_2543990B0);
  }
  return result;
}

unint64_t sub_242091500(uint64_t a1)
{
  unint64_t result;

  result = sub_242091524();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242091524()
{
  unint64_t result;

  result = qword_254397108;
  if (!qword_254397108)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBase, &type metadata for SanitizerBase);
    atomic_store(result, (unint64_t *)&qword_254397108);
  }
  return result;
}

void sub_242091560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091574, (uint64_t (*)(void))sub_2420915B0);
}

unint64_t sub_242091574()
{
  unint64_t result;

  result = qword_2543970F0;
  if (!qword_2543970F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBase, &type metadata for SanitizerBase);
    atomic_store(result, (unint64_t *)&qword_2543970F0);
  }
  return result;
}

unint64_t sub_2420915B0()
{
  unint64_t result;

  result = qword_254397100;
  if (!qword_254397100)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBase, &type metadata for SanitizerBase);
    atomic_store(result, (unint64_t *)&qword_254397100);
  }
  return result;
}

unint64_t sub_2420915F0()
{
  unint64_t result;

  result = qword_2543970F8;
  if (!qword_2543970F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBase, &type metadata for SanitizerBase);
    atomic_store(result, (unint64_t *)&qword_2543970F8);
  }
  return result;
}

void sub_24209162C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091640, (uint64_t (*)(void))sub_24209167C);
}

unint64_t sub_242091640()
{
  unint64_t result;

  result = qword_25719E1A8;
  if (!qword_25719E1A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerAssetMetadata, &type metadata for SanitizerAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E1A8);
  }
  return result;
}

unint64_t sub_24209167C()
{
  unint64_t result;

  result = qword_25719E1B0;
  if (!qword_25719E1B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerAssetMetadata, &type metadata for SanitizerAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E1B0);
  }
  return result;
}

void sub_2420916B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420916CC, (uint64_t (*)(void))sub_242091708);
}

unint64_t sub_2420916CC()
{
  unint64_t result;

  result = qword_25719E1B8;
  if (!qword_25719E1B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E1B8);
  }
  return result;
}

unint64_t sub_242091708()
{
  unint64_t result;

  result = qword_25719E1C0;
  if (!qword_25719E1C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E1C0);
  }
  return result;
}

void sub_242091744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091758, (uint64_t (*)(void))sub_242091794);
}

unint64_t sub_242091758()
{
  unint64_t result;

  result = qword_25719E1C8;
  if (!qword_25719E1C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E1C8);
  }
  return result;
}

unint64_t sub_242091794()
{
  unint64_t result;

  result = qword_25719E1D0;
  if (!qword_25719E1D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E1D0);
  }
  return result;
}

unint64_t sub_2420917D0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420917F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420917F4()
{
  unint64_t result;

  result = qword_25719E1D8;
  if (!qword_25719E1D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E1D8);
  }
  return result;
}

void sub_242091830()
{
  sub_2420924C4((uint64_t)&unk_25719E1E0);
}

unint64_t sub_242091854(uint64_t a1)
{
  unint64_t result;

  result = sub_242091878();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242091878()
{
  unint64_t result;

  result = qword_25719E1F0;
  if (!qword_25719E1F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E1F0);
  }
  return result;
}

void sub_2420918B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420918C8, (uint64_t (*)(void))sub_242091904);
}

unint64_t sub_2420918C8()
{
  unint64_t result;

  result = qword_25719E1F8;
  if (!qword_25719E1F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E1F8);
  }
  return result;
}

unint64_t sub_242091904()
{
  unint64_t result;

  result = qword_25719E200;
  if (!qword_25719E200)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E200);
  }
  return result;
}

unint64_t sub_242091944()
{
  unint64_t result;

  result = qword_25719E208;
  if (!qword_25719E208)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E208);
  }
  return result;
}

unint64_t sub_242091980(uint64_t a1)
{
  unint64_t result;

  result = sub_2420919A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420919A4()
{
  unint64_t result;

  result = qword_25719E210;
  if (!qword_25719E210)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenInputDenyListBase, &type metadata for TokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E210);
  }
  return result;
}

void sub_2420919E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420919F4, (uint64_t (*)(void))sub_242091A30);
}

unint64_t sub_2420919F4()
{
  unint64_t result;

  result = qword_25719E218;
  if (!qword_25719E218)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenInputDenyListBase, &type metadata for TokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E218);
  }
  return result;
}

unint64_t sub_242091A30()
{
  unint64_t result;

  result = qword_25719E220;
  if (!qword_25719E220)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenInputDenyListBase, &type metadata for TokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E220);
  }
  return result;
}

void sub_242091A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091A80, (uint64_t (*)(void))sub_242091ABC);
}

unint64_t sub_242091A80()
{
  unint64_t result;

  result = qword_25719E228;
  if (!qword_25719E228)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenInputDenyListBase, &type metadata for TokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E228);
  }
  return result;
}

unint64_t sub_242091ABC()
{
  unint64_t result;

  result = qword_25719E230;
  if (!qword_25719E230)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenInputDenyListBase, &type metadata for TokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E230);
  }
  return result;
}

unint64_t sub_242091AFC()
{
  unint64_t result;

  result = qword_25719E238;
  if (!qword_25719E238)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenInputDenyListBase, &type metadata for TokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E238);
  }
  return result;
}

void sub_242091B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091B4C, (uint64_t (*)(void))sub_242091B88);
}

unint64_t sub_242091B4C()
{
  unint64_t result;

  result = qword_25719E240;
  if (!qword_25719E240)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenInputDenyListAssetMetadata, &type metadata for TokenInputDenyListAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E240);
  }
  return result;
}

unint64_t sub_242091B88()
{
  unint64_t result;

  result = qword_25719E248;
  if (!qword_25719E248)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenInputDenyListAssetMetadata, &type metadata for TokenInputDenyListAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E248);
  }
  return result;
}

void sub_242091BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091BD8, (uint64_t (*)(void))sub_242091C14);
}

unint64_t sub_242091BD8()
{
  unint64_t result;

  result = qword_2543973E8;
  if (!qword_2543973E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_2543973E8);
  }
  return result;
}

unint64_t sub_242091C14()
{
  unint64_t result;

  result = qword_2543973F8;
  if (!qword_2543973F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_2543973F8);
  }
  return result;
}

void sub_242091C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091C64, (uint64_t (*)(void))sub_242091CA0);
}

unint64_t sub_242091C64()
{
  unint64_t result;

  result = qword_25719E250;
  if (!qword_25719E250)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E250);
  }
  return result;
}

unint64_t sub_242091CA0()
{
  unint64_t result;

  result = qword_254399150;
  if (!qword_254399150)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254399150);
  }
  return result;
}

unint64_t sub_242091CDC()
{
  unint64_t result;

  result = qword_2543973E0;
  if (!qword_2543973E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_2543973E0);
  }
  return result;
}

void sub_242091D18()
{
  sub_2420924C4((uint64_t)&unk_25719E258);
}

unint64_t sub_242091D3C(uint64_t a1)
{
  unint64_t result;

  result = sub_242091CDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_242091D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091D74, (uint64_t (*)(void))sub_242091DB0);
}

unint64_t sub_242091D74()
{
  unint64_t result;

  result = qword_2543973C8;
  if (!qword_2543973C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_2543973C8);
  }
  return result;
}

unint64_t sub_242091DB0()
{
  unint64_t result;

  result = qword_2543973D8;
  if (!qword_2543973D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_2543973D8);
  }
  return result;
}

unint64_t sub_242091DF0()
{
  unint64_t result;

  result = qword_2543973D0;
  if (!qword_2543973D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenInputDenyListBase, &type metadata for AssetBackedTokenInputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_2543973D0);
  }
  return result;
}

unint64_t sub_242091E2C(uint64_t a1)
{
  unint64_t result;

  result = sub_242091E50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242091E50()
{
  unint64_t result;

  result = qword_25719E268;
  if (!qword_25719E268)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenOutputDenyListBase, &type metadata for TokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E268);
  }
  return result;
}

void sub_242091E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091EA0, (uint64_t (*)(void))sub_242091EDC);
}

unint64_t sub_242091EA0()
{
  unint64_t result;

  result = qword_25719E270;
  if (!qword_25719E270)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenOutputDenyListBase, &type metadata for TokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E270);
  }
  return result;
}

unint64_t sub_242091EDC()
{
  unint64_t result;

  result = qword_25719E278;
  if (!qword_25719E278)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenOutputDenyListBase, &type metadata for TokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E278);
  }
  return result;
}

void sub_242091F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091F2C, (uint64_t (*)(void))sub_242091F68);
}

unint64_t sub_242091F2C()
{
  unint64_t result;

  result = qword_25719E280;
  if (!qword_25719E280)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenOutputDenyListBase, &type metadata for TokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E280);
  }
  return result;
}

unint64_t sub_242091F68()
{
  unint64_t result;

  result = qword_25719E288;
  if (!qword_25719E288)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenOutputDenyListBase, &type metadata for TokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E288);
  }
  return result;
}

unint64_t sub_242091FA8()
{
  unint64_t result;

  result = qword_25719E290;
  if (!qword_25719E290)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenOutputDenyListBase, &type metadata for TokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E290);
  }
  return result;
}

void sub_242091FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242091FF8, (uint64_t (*)(void))sub_242092034);
}

unint64_t sub_242091FF8()
{
  unint64_t result;

  result = qword_25719E298;
  if (!qword_25719E298)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenOutputDenyListAssetMetadata, &type metadata for TokenOutputDenyListAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E298);
  }
  return result;
}

unint64_t sub_242092034()
{
  unint64_t result;

  result = qword_25719E2A0;
  if (!qword_25719E2A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenOutputDenyListAssetMetadata, &type metadata for TokenOutputDenyListAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E2A0);
  }
  return result;
}

void sub_242092070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242092084, (uint64_t (*)(void))sub_2420920C0);
}

unint64_t sub_242092084()
{
  unint64_t result;

  result = qword_254397420;
  if (!qword_254397420)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254397420);
  }
  return result;
}

unint64_t sub_2420920C0()
{
  unint64_t result;

  result = qword_254397430;
  if (!qword_254397430)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254397430);
  }
  return result;
}

void sub_2420920FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242092110, (uint64_t (*)(void))sub_24209214C);
}

unint64_t sub_242092110()
{
  unint64_t result;

  result = qword_25719E2A8;
  if (!qword_25719E2A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_25719E2A8);
  }
  return result;
}

unint64_t sub_24209214C()
{
  unint64_t result;

  result = qword_254399160;
  if (!qword_254399160)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254399160);
  }
  return result;
}

unint64_t sub_242092188()
{
  unint64_t result;

  result = qword_254397418;
  if (!qword_254397418)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254397418);
  }
  return result;
}

void sub_2420921C4()
{
  sub_2420924C4((uint64_t)&unk_25719E2B0);
}

unint64_t sub_2420921E8(uint64_t a1)
{
  unint64_t result;

  result = sub_242092188();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24209220C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242092220, (uint64_t (*)(void))sub_24209225C);
}

unint64_t sub_242092220()
{
  unint64_t result;

  result = qword_254397400;
  if (!qword_254397400)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254397400);
  }
  return result;
}

unint64_t sub_24209225C()
{
  unint64_t result;

  result = qword_254397410;
  if (!qword_254397410)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254397410);
  }
  return result;
}

unint64_t sub_24209229C()
{
  unint64_t result;

  result = qword_254397408;
  if (!qword_254397408)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenOutputDenyListBase, &type metadata for AssetBackedTokenOutputDenyListBase);
    atomic_store(result, (unint64_t *)&qword_254397408);
  }
  return result;
}

void sub_2420922D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420922EC, (uint64_t (*)(void))sub_242092328);
}

unint64_t sub_2420922EC()
{
  unint64_t result;

  result = qword_25719E2C0;
  if (!qword_25719E2C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerAssetMetadata, &type metadata for TokenizerAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E2C0);
  }
  return result;
}

unint64_t sub_242092328()
{
  unint64_t result;

  result = qword_25719E2C8;
  if (!qword_25719E2C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerAssetMetadata, &type metadata for TokenizerAssetMetadata);
    atomic_store(result, (unint64_t *)&qword_25719E2C8);
  }
  return result;
}

void sub_242092364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242092378, (uint64_t (*)(void))sub_242090870);
}

unint64_t sub_242092378()
{
  unint64_t result;

  result = qword_254397228;
  if (!qword_254397228)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397228);
  }
  return result;
}

void sub_2420923B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420923C8, (uint64_t (*)(void))sub_242092404);
}

unint64_t sub_2420923C8()
{
  unint64_t result;

  result = qword_25719E2D0;
  if (!qword_25719E2D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E2D0);
  }
  return result;
}

unint64_t sub_242092404()
{
  unint64_t result;

  result = qword_2543990E0;
  if (!qword_2543990E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_2543990E0);
  }
  return result;
}

unint64_t sub_242092440(uint64_t a1)
{
  unint64_t result;

  result = sub_242092464();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242092464()
{
  unint64_t result;

  result = qword_254397238;
  if (!qword_254397238)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397238);
  }
  return result;
}

void sub_2420924A0()
{
  sub_2420924C4((uint64_t)&unk_25719E2D8);
}

void sub_2420924C4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  if (!sub_24209798C(a1))
  {
    v3 = sub_24208C304(v2);
    atomic_store(MEMORY[0x2426A40E0](&protocol conformance descriptor for CatalogAsset<A, B>, v3), v1);
  }
  sub_24207F428();
}

unint64_t sub_2420924FC(uint64_t a1)
{
  unint64_t result;

  result = sub_242092520();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_242092520()
{
  unint64_t result;

  result = qword_254397218;
  if (!qword_254397218)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397218);
  }
  return result;
}

void sub_24209255C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209259C, (uint64_t (*)(void))sub_2420925D8);
}

void sub_242092570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(_QWORD *)(a1 + 8) = a4();
  *(_QWORD *)(a1 + 16) = a5();
  sub_24207F428();
}

unint64_t sub_24209259C()
{
  unint64_t result;

  result = qword_254397200;
  if (!qword_254397200)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397200);
  }
  return result;
}

unint64_t sub_2420925D8()
{
  unint64_t result;

  result = qword_254397210;
  if (!qword_254397210)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397210);
  }
  return result;
}

unint64_t sub_242092618()
{
  unint64_t result;

  result = qword_254397208;
  if (!qword_254397208)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397208);
  }
  return result;
}

uint64_t sub_242092660(uint64_t a1)
{
  destroy for AssetSubscriptionInformation();
  return a1;
}

void *initializeWithTake for ResourceConfiguration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB8uLL);
}

void type metadata accessor for DiffusionAdapterBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for DiffusionAdapterAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2420926D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_2420973F4();
  return sub_2420801D0(v2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DiffusionAdapterAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_242092710(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_2420973F4();
  return sub_24207E8A8(v2, a2, a2, v4);
}

uint64_t type metadata accessor for DiffusionAdapterAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E2E8);
}

void type metadata accessor for DiffusionAdapterAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedDiffusionAdapterBase()
{
  sub_242082F08();
}

void type metadata accessor for DiffusionModelBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for DiffusionModelAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for DiffusionModelAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for DiffusionModelAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E2F8);
}

void type metadata accessor for DiffusionModelAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedDiffusionModelBase()
{
  sub_242082F08();
}

void type metadata accessor for DisabledUseCaseListBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for DisabledUseCaseListAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for DisabledUseCaseListAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for DisabledUseCaseListAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_2543999C8);
}

void type metadata accessor for DisabledUseCaseListAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedDisabledUseCaseListBase()
{
  sub_242082F08();
}

void type metadata accessor for GenerativeFunctionOverridesBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for GenerativeFunctionOverridesAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for GenerativeFunctionOverridesAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for GenerativeFunctionOverridesAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E308);
}

void type metadata accessor for GenerativeFunctionOverridesAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedGenerativeFunctionOverridesBase()
{
  sub_242082F08();
}

void type metadata accessor for HandwritingSynthesizerBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for HandwritingSynthesizerAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for HandwritingSynthesizerAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for HandwritingSynthesizerAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E318);
}

void type metadata accessor for HandwritingSynthesizerAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedHandwritingSynthesizerBase()
{
  sub_242082F08();
}

void type metadata accessor for ImageFilterBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for ImageFilterAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ImageFilterAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ImageFilterAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E328);
}

void type metadata accessor for ImageFilterAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedImageFilterBase()
{
  sub_242082F08();
}

void type metadata accessor for ImageInpainterBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for ImageInpainterAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ImageInpainterAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ImageInpainterAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E338);
}

void type metadata accessor for ImageInpainterAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedImageInpainterBase()
{
  sub_242082F08();
}

void type metadata accessor for ImageMagicCleanUpBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for ImageMagicCleanUpAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ImageMagicCleanUpAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ImageMagicCleanUpAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E348);
}

void type metadata accessor for ImageMagicCleanUpAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedImageMagicCleanUpBase()
{
  sub_242082F08();
}

void type metadata accessor for ImageScalerBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for ImageScalerAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ImageScalerAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ImageScalerAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E358);
}

void type metadata accessor for ImageScalerAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedImageScalerBase()
{
  sub_242082F08();
}

void type metadata accessor for ImageSegmenterBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for ImageSegmenterAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ImageSegmenterAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ImageSegmenterAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E368);
}

void type metadata accessor for ImageSegmenterAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedImageSegmenterBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for LLMAdapterAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for LLMAdapterAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for LLMAdapterAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E378);
}

uint64_t destroy for LLMAdapterAssetMetadata()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LLMAdapterAssetMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x49uLL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LLMAdapterAssetMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x49uLL);
  return a1;
}

void *initializeWithTake for LLMAdapterAssetMetadata(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x91uLL);
}

uint64_t assignWithTake for LLMAdapterAssetMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x49uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMAdapterAssetMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 145))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMAdapterAssetMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 144) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 145) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 145) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LLMAdapterAssetMetadata()
{
  sub_242082F08();
}

void *initializeWithCopy for LLMAdapterAssetMetadata.DraftMetadata(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

void type metadata accessor for LLMAdapterAssetMetadata.DraftMetadata()
{
  sub_242082F08();
}

_BYTE *initializeBufferWithCopyOfBuffer for ResourceStatus(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

void type metadata accessor for LLMAdapterAssetMetadata.LoraRank()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for LLMAdapterAssetMetadata.ModelType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMAdapterAssetMetadata.ModelType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242092E0C + 4 * byte_242145DE3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242092E40 + 4 * byte_242145DDE[v4]))();
}

uint64_t sub_242092E40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242092E48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242092E50);
  return result;
}

uint64_t sub_242092E5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242092E64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242092E68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242092E70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242092E7C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_242092E84(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void type metadata accessor for LLMAdapterAssetMetadata.ModelType()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedLLMAdapterBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for LLMDraftModelAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for LLMDraftModelAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for LLMDraftModelAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E388);
}

uint64_t destroy for LLMDraftModelAssetMetadata(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 160);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LLMDraftModelAssetMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x49uLL);
  v7 = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    memcpy((void *)(a1 + 136), (const void *)(a2 + 136), 0xA9uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v7;
    v8 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v8;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v9 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v9;
    v10 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = v10;
    v11 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = v11;
    v12 = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = v12;
    v13 = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = v13;
    v14 = *(_QWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    *(_QWORD *)(a1 + 280) = v14;
    v15 = *(_QWORD *)(a2 + 296);
    *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
    *(_QWORD *)(a1 + 296) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for LLMDraftModelAssetMetadata(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x49uLL);
  v4 = (_QWORD *)(a1 + 136);
  v5 = (uint64_t *)(a2 + 136);
  v6 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160) != 1)
  {
    if (v6 != 1)
    {
      v11 = *v5;
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *v4 = v11;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 184);
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = v12;
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 280);
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      *(_QWORD *)(a1 + 280) = v13;
      v14 = *(_QWORD *)(a2 + 296);
      *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
      *(_QWORD *)(a1 + 296) = v14;
      return a1;
    }
    sub_2420933D0(a1 + 136);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 136), (const void *)(a2 + 136), 0xA9uLL);
    return a1;
  }
  v7 = *v5;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *v4 = v7;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v8 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v8;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  v9 = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v9;
  v10 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2420933D0(uint64_t a1)
{
  destroy for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap(a1, &type metadata for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap);
  return a1;
}

void *initializeWithTake for LLMDraftModelAssetMetadata(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x131uLL);
}

uint64_t assignWithTake for LLMDraftModelAssetMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  memcpy((void *)(a1 + 56), (const void *)(a2 + 56), 0x49uLL);
  if (*(_QWORD *)(a1 + 160) != 1)
  {
    v7 = *(_QWORD *)(a2 + 160);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      v9 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = v13;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
      return a1;
    }
    sub_2420933D0(a1 + 136);
  }
  memcpy((void *)(a1 + 136), (const void *)(a2 + 136), 0xA9uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMDraftModelAssetMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 305))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMDraftModelAssetMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 304) = 0;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 305) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 305) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LLMDraftModelAssetMetadata()
{
  sub_242082F08();
}

uint64_t destroy for LLMDraftModelAssetMetadata.ANEExtendInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LLMDraftModelAssetMetadata.ANEExtendInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LLMDraftModelAssetMetadata.ANEExtendInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

__n128 initializeWithTake for LLMDraftModelAssetMetadata.ANEExtendInfo(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for LLMDraftModelAssetMetadata.ANEExtendInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMDraftModelAssetMetadata.ANEExtendInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMDraftModelAssetMetadata.ANEExtendInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LLMDraftModelAssetMetadata.ANEExtendInfo()
{
  sub_242082F08();
}

void *initializeWithTake for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA9uLL);
}

void type metadata accessor for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap()
{
  sub_242082F08();
}

uint64_t _s12ModelCatalog23LLMAdapterAssetMetadataV13DraftMetadataVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 73))
      return sub_2420977CC(*(_DWORD *)a1 + 253);
    v3 = *(unsigned __int8 *)(a1 + 9);
    if (v3 >= 2)
      v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
    else
      v4 = -2;
    if (v4 < 0)
      return sub_2420977CC(-1);
  }
  else
  {
    v4 = -1;
  }
  return sub_2420977CC(v4);
}

uint64_t _s12ModelCatalog23LLMAdapterAssetMetadataV13DraftMetadataVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 2;
  }
  return result;
}

void type metadata accessor for LLMDraftModelAssetMetadata.DraftMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedLLMDraftModelBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for LLMModelAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for LLMModelAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for LLMModelAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_254399A50);
}

uint64_t destroy for LLMModelAssetMetadata(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 112);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LLMModelAssetMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = (_BYTE *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 1)
  {
    memcpy((void *)(a1 + 88), v8, 0xA9uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)v8;
    *(_BYTE *)(a1 + 96) = v8[8];
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v9;
    v10 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v10;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    v11 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v11;
    v12 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v12;
    v13 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v13;
    v14 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v14;
    v15 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = v15;
    v16 = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = v16;
    v17 = *(_QWORD *)(a2 + 248);
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    *(_QWORD *)(a1 + 248) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for LLMModelAssetMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 88);
  v6 = (uint64_t *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112) != 1)
  {
    if (v7 != 1)
    {
      v12 = *v6;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v5 = v12;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = v13;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 232) = v14;
      v15 = *(_QWORD *)(a2 + 248);
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *(_QWORD *)(a1 + 248) = v15;
      return a1;
    }
    sub_242093E20(a1 + 88);
    goto LABEL_6;
  }
  if (v7 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 88), (const void *)(a2 + 88), 0xA9uLL);
    return a1;
  }
  v8 = *v6;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *v5 = v8;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v9;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v10 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v10;
  v11 = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_242093E20(uint64_t a1)
{
  destroy for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap(a1, &type metadata for LLMModelAssetMetadata.DeviceSpecialTokensMap);
  return a1;
}

void *initializeWithTake for LLMModelAssetMetadata(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x101uLL);
}

uint64_t assignWithTake for LLMModelAssetMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112) != 1)
  {
    v7 = *(_QWORD *)(a2 + 112);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      v9 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v13;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      return a1;
    }
    sub_242093E20(a1 + 88);
  }
  memcpy((void *)(a1 + 88), (const void *)(a2 + 88), 0xA9uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMModelAssetMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 257))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMModelAssetMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 256) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 257) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 257) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LLMModelAssetMetadata()
{
  sub_242082F08();
}

uint64_t destroy for LLMModelAssetMetadata.ANEExtendInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LLMModelAssetMetadata.ANEExtendInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LLMModelAssetMetadata.ANEExtendInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

__n128 initializeWithTake for LLMModelAssetMetadata.ANEExtendInfo(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LLMModelAssetMetadata.ANEExtendInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMModelAssetMetadata.ANEExtendInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMModelAssetMetadata.ANEExtendInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LLMModelAssetMetadata.ANEExtendInfo()
{
  sub_242082F08();
}

uint64_t _s12ModelCatalog26LLMDraftModelAssetMetadataV22DeviceSpecialTokensMapVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24209773C();
}

void _s12ModelCatalog26LLMDraftModelAssetMetadataV22DeviceSpecialTokensMapVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_242097974(a1, a2);
  v4 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v3 + 48);
  *(_BYTE *)(v2 + 56) = *(_BYTE *)(v3 + 56);
  v6 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v2 + 72) = v6;
  v7 = *(_QWORD *)(v3 + 88);
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v2 + 88) = v7;
  v8 = *(_QWORD *)(v3 + 104);
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(v3 + 96);
  *(_QWORD *)(v2 + 104) = v8;
  v9 = *(_QWORD *)(v3 + 120);
  *(_QWORD *)(v2 + 112) = *(_QWORD *)(v3 + 112);
  *(_QWORD *)(v2 + 120) = v9;
  v10 = *(_QWORD *)(v3 + 136);
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v3 + 128);
  *(_QWORD *)(v2 + 136) = v10;
  v11 = *(_QWORD *)(v3 + 144);
  *(_BYTE *)(v2 + 152) = *(_BYTE *)(v3 + 152);
  *(_QWORD *)(v2 + 144) = v11;
  v12 = *(_QWORD *)(v3 + 160);
  *(_BYTE *)(v2 + 168) = *(_BYTE *)(v3 + 168);
  *(_QWORD *)(v2 + 160) = v12;
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420973B4();
}

void _s12ModelCatalog26LLMDraftModelAssetMetadataV22DeviceSpecialTokensMapVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  sub_242097AF8(a2[3]);
  sub_24207F78C();
  sub_2420976D8();
  sub_24207F78C();
  v5 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_QWORD *)(a1 + 120) = a2[15];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 128) = a2[16];
  *(_QWORD *)(a1 + 136) = a2[17];
  swift_bridgeObjectRetain();
  sub_24207F78C();
  v6 = a2[18];
  *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
  *(_QWORD *)(a1 + 144) = v6;
  v7 = a2[20];
  *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
  *(_QWORD *)(a1 + 160) = v7;
  sub_242097A00();
}

void _s12ModelCatalog26LLMDraftModelAssetMetadataV22DeviceSpecialTokensMapVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_242097974(a1, a2);
  v5 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v2 + 24) = v5;
  swift_bridgeObjectRelease();
  sub_2420978B4();
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(v2 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(v2 + 72) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(v2 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(v2 + 104) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(v2 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(v2 + 120) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(v2 + 136) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(v2 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(v2 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(v2 + 168) = *(_BYTE *)(a2 + 168);
  sub_24207F428();
}

uint64_t _s12ModelCatalog26LLMDraftModelAssetMetadataV22DeviceSpecialTokensMapVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 169))
      return sub_2420977CC(*(_DWORD *)a1 + 2147483646);
    v3 = *(_QWORD *)(a1 + 24);
    if (v3 >= 0xFFFFFFFF)
      LODWORD(v3) = -1;
    v4 = v3 - 1;
    if (v4 < 0)
      return sub_2420977CC(-1);
  }
  else
  {
    v4 = -1;
  }
  return sub_2420977CC(v4);
}

uint64_t _s12ModelCatalog26LLMDraftModelAssetMetadataV22DeviceSpecialTokensMapVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;
  unsigned int v4;

  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    result = sub_242097838(result, (__n128)0);
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = v3;
    if (v4 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 169) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 169) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

void type metadata accessor for LLMModelAssetMetadata.DeviceSpecialTokensMap()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedLLMModelBase()
{
  sub_242082F08();
}

void type metadata accessor for ServerConfigurationBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for ServerConfigurationAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ServerConfigurationAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ServerConfigurationAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E398);
}

void type metadata accessor for ServerConfigurationAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedServerConfigurationBase()
{
  sub_242082F08();
}

void type metadata accessor for ModelConfigurationReplacementBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for ModelConfigurationReplacementAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModelConfigurationReplacementAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ModelConfigurationReplacementAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E3A8);
}

void type metadata accessor for ModelConfigurationReplacementAssetMetadata()
{
  sub_242082F08();
}

uint64_t initializeBufferWithCopyOfBuffer for AssetBackedModelConfigurationReplacementBase(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void type metadata accessor for AssetBackedModelConfigurationReplacementBase()
{
  sub_242082F08();
}

void type metadata accessor for SanitizerBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for SanitizerAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SanitizerAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for SanitizerAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E3B8);
}

void type metadata accessor for SanitizerAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedSanitizerBase()
{
  sub_242082F08();
}

void type metadata accessor for TokenInputDenyListBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for TokenInputDenyListAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TokenInputDenyListAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TokenInputDenyListAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E3C8);
}

void type metadata accessor for TokenInputDenyListAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedTokenInputDenyListBase()
{
  sub_242082F08();
}

void type metadata accessor for TokenOutputDenyListBase()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for TokenOutputDenyListAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TokenOutputDenyListAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TokenOutputDenyListAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E3D8);
}

void type metadata accessor for TokenOutputDenyListAssetMetadata()
{
  sub_242082F08();
}

void type metadata accessor for AssetBackedTokenOutputDenyListBase()
{
  sub_242082F08();
}

uint64_t _s12ModelCatalog29DiffusionAdapterAssetContentsVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)(void);
  uint64_t v3;

  sub_2420973C8();
  sub_2420977B0();
  return sub_24209747C(v1, v0, v3, *v2);
}

uint64_t _s12ModelCatalog29DiffusionAdapterAssetContentsVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24209745C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void _s12ModelCatalog29DiffusionAdapterAssetContentsVwcp_0()
{
  uint64_t v0;

  sub_2420973C8();
  sub_2420977B0();
  sub_2420975A8(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16));
  sub_24207F428();
}

void _s12ModelCatalog29DiffusionAdapterAssetContentsVwca_0()
{
  uint64_t v0;

  sub_2420973C8();
  sub_2420977B0();
  sub_2420975A8(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 24));
  sub_24207F428();
}

void _s12ModelCatalog29DiffusionAdapterAssetContentsVwtk_0()
{
  uint64_t v0;

  v0 = sub_2420973C8();
  sub_2420975A8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  sub_24207F428();
}

void _s12ModelCatalog29DiffusionAdapterAssetContentsVwta_0()
{
  uint64_t v0;

  sub_2420973C8();
  sub_2420977B0();
  sub_2420975A8(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 40));
  sub_24207F428();
}

uint64_t getEnumTagSinglePayload for TokenizerAssetContents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TokenizerAssetContents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TokenizerAssetContents(uint64_t a1)
{
  return sub_2420948F8(a1, (uint64_t *)&unk_25719E3E8);
}

uint64_t sub_2420948F8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_242094928()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24213251C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for TokenizerAssetMetadata()
{
  sub_242082F08();
}

uint64_t _s12ModelCatalog20DiffusionAdapterBaseVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24209773C();
}

void _s12ModelCatalog20DiffusionAdapterBaseVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v9;
    v10 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v10;
    sub_242097A94();
    sub_242097744();
    sub_24207F5FC();
    sub_242079ED8();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v11;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
  }
  v12 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v12;
  v14 = *(_QWORD *)(a2 + 168);
  v13 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v14;
  *(_QWORD *)(a1 + 176) = v13;
  swift_bridgeObjectRetain();
  sub_242097744();
  sub_242097198();
  sub_2420973B4();
}

uint64_t _s12ModelCatalog20DiffusionAdapterBaseVwca_0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_242097AF8(*(_QWORD *)(a2 + 24));
  sub_24207F78C();
  sub_2420976D8();
  sub_24207F78C();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v4 = (_OWORD *)(a1 + 88);
  v5 = (__int128 *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v6)
    {
      sub_242097AB4();
      swift_bridgeObjectRetain();
      sub_24207F700();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      sub_24207F78C();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      sub_24207F78C();
      sub_242097760();
    }
    else
    {
      sub_242092660(a1 + 88);
      v8 = *(_OWORD *)(a2 + 104);
      v7 = *(_OWORD *)(a2 + 120);
      v9 = *v5;
      *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
      *(_OWORD *)(a1 + 104) = v8;
      *(_OWORD *)(a1 + 120) = v7;
      *v4 = v9;
    }
  }
  else if (v6)
  {
    sub_242097AB4();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    sub_242097760();
    swift_bridgeObjectRetain();
    sub_242097744();
    sub_24207F5FC();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 104);
    v12 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
    *(_OWORD *)(a1 + 104) = v11;
    *(_OWORD *)(a1 + 120) = v12;
    *v4 = v10;
  }
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  return a1;
}

void _s12ModelCatalog20DiffusionAdapterBaseVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  sub_2420978B4();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 96);
  if (!v6)
  {
    sub_242092660(a1 + 88);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  swift_bridgeObjectRelease();
  sub_242097A94();
LABEL_6:
  v10 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  sub_242097A00();
}

uint64_t getEnumTagSinglePayload for ResourceConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 184))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242094E40(uint64_t result, int a2, int a3)
{
  uint64_t v3;
  int v4;

  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    result = sub_242097838(result, (__n128)0);
    *(_QWORD *)result = v3;
    if (v4 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetBackedTokenizerBase()
{
  sub_242082F08();
}

ValueMetadata *type metadata accessor for TokenizerAssetMetadata.CodingKeys()
{
  return &type metadata for TokenizerAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for TokenOutputDenyListAssetMetadata.CodingKeys()
{
  return &type metadata for TokenOutputDenyListAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for TokenInputDenyListAssetMetadata.CodingKeys()
{
  return &type metadata for TokenInputDenyListAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for SanitizerAssetMetadata.CodingKeys()
{
  return &type metadata for SanitizerAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelConfigurationReplacementAssetMetadata.CodingKeys()
{
  return &type metadata for ModelConfigurationReplacementAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ServerConfigurationAssetMetadata.CodingKeys()
{
  return &type metadata for ServerConfigurationAssetMetadata.CodingKeys;
}

void type metadata accessor for LLMModelAssetMetadata.CodingKeys()
{
  sub_242082F08();
}

void type metadata accessor for LLMModelAssetMetadata.DeviceSpecialTokensMap.CodingKeys()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for AssetSubscriptionStatusPendingReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_242094FB0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242094FFC + 4 * byte_242145DED[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242095030 + 4 * byte_242145DE8[v4]))();
}

uint64_t sub_242095030(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242095038(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242095040);
  return result;
}

uint64_t sub_24209504C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242095054);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242095058(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242095060(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LLMModelAssetMetadata.ANEExtendInfo.CodingKeys()
{
  sub_242082F08();
}

uint64_t _s12ModelCatalog23LLMAdapterAssetMetadataV8LoraRankOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2420977CC((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2420977CC((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2420977CC((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return sub_2420977CC(v8);
}

uint64_t _s12ModelCatalog23LLMAdapterAssetMetadataV8LoraRankOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_242095148 + 4 * byte_242145DF7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24209517C + 4 * byte_242145DF2[v4]))();
}

uint64_t sub_242095180(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242095188);
  return result;
}

uint64_t sub_242095190(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x242095198);
  return sub_242097B10();
}

void type metadata accessor for LLMDraftModelAssetMetadata.CodingKeys()
{
  sub_242082F08();
}

_BYTE *sub_2420951B4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void type metadata accessor for LLMDraftModelAssetMetadata.DraftMetadata.CodingKeys()
{
  sub_242082F08();
}

uint64_t sub_2420951C8(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2420977CC((*a1 | (v4 << 8)) - 11);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2420977CC((*a1 | (v4 << 8)) - 11);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2420977CC((*a1 | (v4 << 8)) - 11);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return sub_2420977CC(v8);
}

uint64_t sub_24209524C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_242095298 + 4 * byte_242145E01[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2420952CC + 4 * byte_242145DFC[v4]))();
}

uint64_t sub_2420952D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420952D8);
  return result;
}

uint64_t sub_2420952E0(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420952E8);
  return sub_242097B10();
}

void type metadata accessor for LLMDraftModelAssetMetadata.DeviceSpecialTokensMap.CodingKeys()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for AJAXConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_24209538C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2420953D8 + 4 * byte_242145E0B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24209540C + 4 * byte_242145E06[v4]))();
}

uint64_t sub_24209540C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242095414(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24209541CLL);
  return result;
}

uint64_t sub_242095428(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242095430);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242095434(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24209543C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LLMDraftModelAssetMetadata.ANEExtendInfo.CodingKeys()
{
  sub_242082F08();
}

uint64_t sub_242095454(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2420954DC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_242095528 + 4 * byte_242145E15[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_24209555C + 4 * byte_242145E10[v4]))();
}

uint64_t sub_24209555C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242095564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24209556CLL);
  return result;
}

uint64_t sub_242095578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242095580);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_242095584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24209558C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LLMAdapterAssetMetadata.CodingKeys()
{
  sub_242082F08();
}

uint64_t sub_2420955A4(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2420977CC((*a1 | (v4 << 8)) - 8);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2420977CC((*a1 | (v4 << 8)) - 8);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2420977CC((*a1 | (v4 << 8)) - 8);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return sub_2420977CC(v8);
}

uint64_t sub_242095628(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_242095674 + 4 * byte_242145E1F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2420956A8 + 4 * byte_242145E1A[v4]))();
}

uint64_t sub_2420956AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420956B4);
  return result;
}

uint64_t sub_2420956BC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420956C4);
  return sub_242097B10();
}

void type metadata accessor for LLMAdapterAssetMetadata.DraftMetadata.CodingKeys()
{
  sub_242082F08();
}

ValueMetadata *type metadata accessor for ImageSegmenterAssetMetadata.CodingKeys()
{
  return &type metadata for ImageSegmenterAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageScalerAssetMetadata.CodingKeys()
{
  return &type metadata for ImageScalerAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageMagicCleanUpAssetMetadata.CodingKeys()
{
  return &type metadata for ImageMagicCleanUpAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageInpainterAssetMetadata.CodingKeys()
{
  return &type metadata for ImageInpainterAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageFilterAssetMetadata.CodingKeys()
{
  return &type metadata for ImageFilterAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for HandwritingSynthesizerAssetMetadata.CodingKeys()
{
  return &type metadata for HandwritingSynthesizerAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerativeFunctionOverridesAssetMetadata.CodingKeys()
{
  return &type metadata for GenerativeFunctionOverridesAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for DisabledUseCaseListAssetMetadata.CodingKeys()
{
  return &type metadata for DisabledUseCaseListAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for DiffusionModelAssetMetadata.CodingKeys()
{
  return &type metadata for DiffusionModelAssetMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for DiffusionAdapterAssetMetadata.CodingKeys()
{
  return &type metadata for DiffusionAdapterAssetMetadata.CodingKeys;
}

unint64_t sub_242095784()
{
  unint64_t result;

  result = qword_25719E3F8;
  if (!qword_25719E3F8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B04C, &unk_251323C60);
    atomic_store(result, (unint64_t *)&qword_25719E3F8);
  }
  return result;
}

unint64_t sub_2420957C4()
{
  unint64_t result;

  result = qword_25719E400;
  if (!qword_25719E400)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B13C, &unk_251323F30);
    atomic_store(result, (unint64_t *)&qword_25719E400);
  }
  return result;
}

unint64_t sub_242095804()
{
  unint64_t result;

  result = qword_25719E408;
  if (!qword_25719E408)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B22C, &unk_2512FC0D0);
    atomic_store(result, (unint64_t *)&qword_25719E408);
  }
  return result;
}

unint64_t sub_242095844()
{
  unint64_t result;

  result = qword_25719E410;
  if (!qword_25719E410)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B31C, &unk_2512FC310);
    atomic_store(result, (unint64_t *)&qword_25719E410);
  }
  return result;
}

unint64_t sub_242095884()
{
  unint64_t result;

  result = qword_25719E418;
  if (!qword_25719E418)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B40C, &unk_2512FBE00);
    atomic_store(result, (unint64_t *)&qword_25719E418);
  }
  return result;
}

unint64_t sub_2420958C4()
{
  unint64_t result;

  result = qword_25719E420;
  if (!qword_25719E420)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B4FC, &unk_2512FBFD8);
    atomic_store(result, (unint64_t *)&qword_25719E420);
  }
  return result;
}

unint64_t sub_242095904()
{
  unint64_t result;

  result = qword_25719E428;
  if (!qword_25719E428)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B5EC, &unk_2513231E0);
    atomic_store(result, (unint64_t *)&qword_25719E428);
  }
  return result;
}

unint64_t sub_242095944()
{
  unint64_t result;

  result = qword_25719E430;
  if (!qword_25719E430)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B6DC, &unk_251323420);
    atomic_store(result, (unint64_t *)&qword_25719E430);
  }
  return result;
}

unint64_t sub_242095984()
{
  unint64_t result;

  result = qword_25719E438;
  if (!qword_25719E438)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B7CC, &unk_2513230D0);
    atomic_store(result, (unint64_t *)&qword_25719E438);
  }
  return result;
}

unint64_t sub_2420959C4()
{
  unint64_t result;

  result = qword_25719E440;
  if (!qword_25719E440)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B984, &type metadata for TokenizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E440);
  }
  return result;
}

unint64_t sub_242095A04()
{
  unint64_t result;

  result = qword_25719E448;
  if (!qword_25719E448)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B9AC, &type metadata for TokenizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E448);
  }
  return result;
}

unint64_t sub_242095A44()
{
  unint64_t result;

  result = qword_25719E450;
  if (!qword_25719E450)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B934, &type metadata for TokenOutputDenyListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E450);
  }
  return result;
}

unint64_t sub_242095A84()
{
  unint64_t result;

  result = qword_25719E458;
  if (!qword_25719E458)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B95C, &type metadata for TokenOutputDenyListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E458);
  }
  return result;
}

unint64_t sub_242095AC4()
{
  unint64_t result;

  result = qword_25719E460;
  if (!qword_25719E460)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B8E4, &type metadata for TokenInputDenyListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E460);
  }
  return result;
}

unint64_t sub_242095B04()
{
  unint64_t result;

  result = qword_25719E468;
  if (!qword_25719E468)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B90C, &type metadata for TokenInputDenyListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E468);
  }
  return result;
}

unint64_t sub_242095B44()
{
  unint64_t result;

  result = qword_25719E470;
  if (!qword_25719E470)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B894, &type metadata for SanitizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E470);
  }
  return result;
}

unint64_t sub_242095B84()
{
  unint64_t result;

  result = qword_25719E478;
  if (!qword_25719E478)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B8BC, &type metadata for SanitizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E478);
  }
  return result;
}

unint64_t sub_242095BC4()
{
  unint64_t result;

  result = qword_25719E480;
  if (!qword_25719E480)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B844, &type metadata for ModelConfigurationReplacementAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E480);
  }
  return result;
}

unint64_t sub_242095C04()
{
  unint64_t result;

  result = qword_25719E488;
  if (!qword_25719E488)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B86C, &type metadata for ModelConfigurationReplacementAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E488);
  }
  return result;
}

unint64_t sub_242095C44()
{
  unint64_t result;

  result = qword_25719E490;
  if (!qword_25719E490)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B7F4, &type metadata for ServerConfigurationAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E490);
  }
  return result;
}

unint64_t sub_242095C84()
{
  unint64_t result;

  result = qword_25719E498;
  if (!qword_25719E498)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B81C, &type metadata for ServerConfigurationAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E498);
  }
  return result;
}

unint64_t sub_242095CC4()
{
  unint64_t result;

  result = qword_25719E4A0;
  if (!qword_25719E4A0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B704, &unk_2513230D0);
    atomic_store(result, (unint64_t *)&qword_25719E4A0);
  }
  return result;
}

unint64_t sub_242095D04()
{
  unint64_t result;

  result = qword_25719E4A8;
  if (!qword_25719E4A8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B72C, &unk_2513230D0);
    atomic_store(result, (unint64_t *)&qword_25719E4A8);
  }
  return result;
}

unint64_t sub_242095D44()
{
  unint64_t result;

  result = qword_25719E4B0;
  if (!qword_25719E4B0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B614, &unk_251323420);
    atomic_store(result, (unint64_t *)&qword_25719E4B0);
  }
  return result;
}

unint64_t sub_242095D84()
{
  unint64_t result;

  result = qword_25719E4B8;
  if (!qword_25719E4B8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B63C, &unk_251323420);
    atomic_store(result, (unint64_t *)&qword_25719E4B8);
  }
  return result;
}

unint64_t sub_242095DC4()
{
  unint64_t result;

  result = qword_25719E4C0;
  if (!qword_25719E4C0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B524, &unk_2513231E0);
    atomic_store(result, (unint64_t *)&qword_25719E4C0);
  }
  return result;
}

unint64_t sub_242095E04()
{
  unint64_t result;

  result = qword_25719E4C8;
  if (!qword_25719E4C8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B54C, &unk_2513231E0);
    atomic_store(result, (unint64_t *)&qword_25719E4C8);
  }
  return result;
}

unint64_t sub_242095E44()
{
  unint64_t result;

  result = qword_25719E4D0;
  if (!qword_25719E4D0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B434, &unk_2512FBFD8);
    atomic_store(result, (unint64_t *)&qword_25719E4D0);
  }
  return result;
}

unint64_t sub_242095E84()
{
  unint64_t result;

  result = qword_25719E4D8;
  if (!qword_25719E4D8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B45C, &unk_2512FBFD8);
    atomic_store(result, (unint64_t *)&qword_25719E4D8);
  }
  return result;
}

unint64_t sub_242095EC4()
{
  unint64_t result;

  result = qword_25719E4E0;
  if (!qword_25719E4E0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B344, &unk_2512FBE00);
    atomic_store(result, (unint64_t *)&qword_25719E4E0);
  }
  return result;
}

unint64_t sub_242095F04()
{
  unint64_t result;

  result = qword_25719E4E8;
  if (!qword_25719E4E8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B36C, &unk_2512FBE00);
    atomic_store(result, (unint64_t *)&qword_25719E4E8);
  }
  return result;
}

unint64_t sub_242095F44()
{
  unint64_t result;

  result = qword_25719E4F0;
  if (!qword_25719E4F0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B254, &unk_2512FC310);
    atomic_store(result, (unint64_t *)&qword_25719E4F0);
  }
  return result;
}

unint64_t sub_242095F84()
{
  unint64_t result;

  result = qword_25719E4F8;
  if (!qword_25719E4F8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B27C, &unk_2512FC310);
    atomic_store(result, (unint64_t *)&qword_25719E4F8);
  }
  return result;
}

unint64_t sub_242095FC4()
{
  unint64_t result;

  result = qword_25719E500;
  if (!qword_25719E500)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B164, &unk_2512FC0D0);
    atomic_store(result, (unint64_t *)&qword_25719E500);
  }
  return result;
}

unint64_t sub_242096004()
{
  unint64_t result;

  result = qword_25719E508;
  if (!qword_25719E508)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B18C, &unk_2512FC0D0);
    atomic_store(result, (unint64_t *)&qword_25719E508);
  }
  return result;
}

unint64_t sub_242096044()
{
  unint64_t result;

  result = qword_25719E510;
  if (!qword_25719E510)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B074, &unk_251323F30);
    atomic_store(result, (unint64_t *)&qword_25719E510);
  }
  return result;
}

unint64_t sub_242096084()
{
  unint64_t result;

  result = qword_25719E518;
  if (!qword_25719E518)
  {
    result = MEMORY[0x2426A40E0](&unk_24214B09C, &unk_251323F30);
    atomic_store(result, (unint64_t *)&qword_25719E518);
  }
  return result;
}

unint64_t sub_2420960C4()
{
  unint64_t result;

  result = qword_25719E520;
  if (!qword_25719E520)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AF84, &unk_251323C60);
    atomic_store(result, (unint64_t *)&qword_25719E520);
  }
  return result;
}

unint64_t sub_242096104()
{
  unint64_t result;

  result = qword_25719E528;
  if (!qword_25719E528)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AFAC, &unk_251323C60);
    atomic_store(result, (unint64_t *)&qword_25719E528);
  }
  return result;
}

unint64_t sub_242096144()
{
  unint64_t result;

  result = qword_25719E530;
  if (!qword_25719E530)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AF34, &type metadata for ImageSegmenterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E530);
  }
  return result;
}

unint64_t sub_242096184()
{
  unint64_t result;

  result = qword_25719E538;
  if (!qword_25719E538)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AF5C, &type metadata for ImageSegmenterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E538);
  }
  return result;
}

unint64_t sub_2420961C4()
{
  unint64_t result;

  result = qword_25719E540;
  if (!qword_25719E540)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AEE4, &type metadata for ImageScalerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E540);
  }
  return result;
}

unint64_t sub_242096204()
{
  unint64_t result;

  result = qword_25719E548;
  if (!qword_25719E548)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AF0C, &type metadata for ImageScalerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E548);
  }
  return result;
}

unint64_t sub_242096244()
{
  unint64_t result;

  result = qword_25719E550;
  if (!qword_25719E550)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AE94, &type metadata for ImageMagicCleanUpAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E550);
  }
  return result;
}

unint64_t sub_242096284()
{
  unint64_t result;

  result = qword_25719E558;
  if (!qword_25719E558)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AEBC, &type metadata for ImageMagicCleanUpAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E558);
  }
  return result;
}

unint64_t sub_2420962C4()
{
  unint64_t result;

  result = qword_25719E560;
  if (!qword_25719E560)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AE44, &type metadata for ImageInpainterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E560);
  }
  return result;
}

unint64_t sub_242096304()
{
  unint64_t result;

  result = qword_25719E568;
  if (!qword_25719E568)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AE6C, &type metadata for ImageInpainterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E568);
  }
  return result;
}

unint64_t sub_242096344()
{
  unint64_t result;

  result = qword_25719E570;
  if (!qword_25719E570)
  {
    result = MEMORY[0x2426A40E0](&unk_24214ADF4, &type metadata for ImageFilterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E570);
  }
  return result;
}

unint64_t sub_242096384()
{
  unint64_t result;

  result = qword_25719E578;
  if (!qword_25719E578)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AE1C, &type metadata for ImageFilterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E578);
  }
  return result;
}

unint64_t sub_2420963C4()
{
  unint64_t result;

  result = qword_25719E580;
  if (!qword_25719E580)
  {
    result = MEMORY[0x2426A40E0](&unk_24214ADA4, &type metadata for HandwritingSynthesizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E580);
  }
  return result;
}

unint64_t sub_242096404()
{
  unint64_t result;

  result = qword_25719E588;
  if (!qword_25719E588)
  {
    result = MEMORY[0x2426A40E0](&unk_24214ADCC, &type metadata for HandwritingSynthesizerAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E588);
  }
  return result;
}

unint64_t sub_242096444()
{
  unint64_t result;

  result = qword_25719E590;
  if (!qword_25719E590)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AD54, &type metadata for GenerativeFunctionOverridesAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E590);
  }
  return result;
}

unint64_t sub_242096484()
{
  unint64_t result;

  result = qword_25719E598;
  if (!qword_25719E598)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AD7C, &type metadata for GenerativeFunctionOverridesAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E598);
  }
  return result;
}

unint64_t sub_2420964C4()
{
  unint64_t result;

  result = qword_25719E5A0;
  if (!qword_25719E5A0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AD04, &type metadata for DisabledUseCaseListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E5A0);
  }
  return result;
}

unint64_t sub_242096504()
{
  unint64_t result;

  result = qword_25719E5A8;
  if (!qword_25719E5A8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AD2C, &type metadata for DisabledUseCaseListAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E5A8);
  }
  return result;
}

unint64_t sub_242096544()
{
  unint64_t result;

  result = qword_25719E5B0;
  if (!qword_25719E5B0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214ACB4, &type metadata for DiffusionModelAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E5B0);
  }
  return result;
}

unint64_t sub_242096584()
{
  unint64_t result;

  result = qword_25719E5B8;
  if (!qword_25719E5B8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214ACDC, &type metadata for DiffusionModelAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E5B8);
  }
  return result;
}

unint64_t sub_2420965C4()
{
  unint64_t result;

  result = qword_25719E5C0;
  if (!qword_25719E5C0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AC64, &type metadata for DiffusionAdapterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E5C0);
  }
  return result;
}

unint64_t sub_242096604()
{
  unint64_t result;

  result = qword_25719E5C8;
  if (!qword_25719E5C8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214AC8C, &type metadata for DiffusionAdapterAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E5C8);
  }
  return result;
}

unint64_t sub_242096640()
{
  unint64_t result;

  result = qword_25719E5D0;
  if (!qword_25719E5D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.ModelType, &type metadata for LLMAdapterAssetMetadata.ModelType);
    atomic_store(result, (unint64_t *)&qword_25719E5D0);
  }
  return result;
}

unint64_t sub_24209667C()
{
  unint64_t result;

  result = qword_25719E5D8;
  if (!qword_25719E5D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterAssetMetadata.LoraRank, &type metadata for LLMAdapterAssetMetadata.LoraRank);
    atomic_store(result, (unint64_t *)&qword_25719E5D8);
  }
  return result;
}

void sub_2420966B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_2420797C0(a3);
  v3 = sub_24207F648();
  v4(v3);
  sub_24207F428();
}

uint64_t sub_2420966F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2420797C0(&qword_254399C58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_242096734()
{
  unint64_t result;

  result = qword_254397150;
  if (!qword_254397150)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerBase, &type metadata for TokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397150);
  }
  return result;
}

unint64_t sub_242096774()
{
  unint64_t result;

  result = qword_25719EC80;
  if (!qword_25719EC80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerBase, &type metadata for TokenizerBase);
    atomic_store(result, (unint64_t *)&qword_25719EC80);
  }
  return result;
}

uint64_t sub_2420967B0(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x2426A4194);
  return result;
}

unint64_t sub_242096810()
{
  unint64_t result;

  result = qword_2543970D0;
  if (!qword_2543970D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543970D0);
  }
  return result;
}

unint64_t sub_242096850()
{
  unint64_t result;

  result = qword_25719ECA0;
  if (!qword_25719ECA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_25719ECA0);
  }
  return result;
}

unint64_t sub_242096890()
{
  unint64_t result;

  result = qword_2543978B0;
  if (!qword_2543978B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelBase, &type metadata for LLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_2543978B0);
  }
  return result;
}

unint64_t sub_2420968D0()
{
  unint64_t result;

  result = qword_25719E5E0;
  if (!qword_25719E5E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelBase, &type metadata for LLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_25719E5E0);
  }
  return result;
}

unint64_t sub_242096910()
{
  unint64_t result;

  result = qword_254399BD0;
  if (!qword_254399BD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254399BD0);
  }
  return result;
}

uint64_t sub_242096950()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2420969E8()
{
  unint64_t result;

  result = qword_25719ECB0;
  if (!qword_25719ECB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719ECB0);
  }
  return result;
}

uint64_t sub_242096A78()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242096AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2420797C0(&qword_254399C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_242096B40()
{
  unint64_t result;

  result = qword_2543990B8;
  if (!qword_2543990B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerBase, &type metadata for TokenizerBase);
    atomic_store(result, (unint64_t *)&qword_2543990B8);
  }
  return result;
}

unint64_t sub_242096B7C()
{
  unint64_t result;

  result = qword_2543990A8;
  if (!qword_2543990A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543990A8);
  }
  return result;
}

unint64_t sub_242096BB8()
{
  unint64_t result;

  result = qword_254399080;
  if (!qword_254399080)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelBase, &type metadata for LLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254399080);
  }
  return result;
}

unint64_t sub_242096BF4()
{
  unint64_t result;

  result = qword_2543990C0;
  if (!qword_2543990C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_2543990C0);
  }
  return result;
}

uint64_t sub_242096C30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRelease();
  sub_242097268();
  sub_242079F20();
  sub_24207F700();
  sub_24207F78C();
  swift_bridgeObjectRelease();
  sub_242084E14(v4, v2);
  sub_242097830();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242096D34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRelease();
  sub_242079F20();
  sub_24207F700();
  sub_24207F78C();
  sub_242097830();
  sub_242097268();
  sub_242084E14(v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_242097078()
{
  return swift_dynamicCast();
}

void *sub_24209708C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t __src;

  return memcpy(a1, &__src, 0xB8uLL);
}

void *sub_242097098(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB8uLL);
}

uint64_t sub_2420970B8()
{
  return sub_2421323FC();
}

uint64_t sub_2420970C8()
{
  return swift_allocObject();
}

uint64_t sub_2420970D4()
{
  return sub_242132D14();
}

uint64_t sub_2420970E4()
{
  return swift_allocError();
}

uint64_t sub_242097108@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
  return swift_willThrow();
}

uint64_t sub_242097140()
{
  return sub_242132AD4();
}

uint64_t sub_242097158()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_242097168(uint64_t a1)
{
  return sub_242079824(a1);
}

uint64_t sub_242097198()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420971A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
  return swift_bridgeObjectRetain();
}

double _s12ModelCatalog08LLMDraftA13AssetMetadataV22DeviceSpecialTokensMapV16startPromptToken0jkL3Str03endkL00nkL3Int14chatRoleSystem0pQ4User0pQ9Assistant0P16ComponentTurnend0pqR7Default04stoplO00xlM0AESiSg_SSSgArq5r2QtcfC_0@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __n128 a14, uint64_t a15, char a16, uint64_t a17, char a18)
{
  double result;

  *(_QWORD *)&result = sub_242089660(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18).n128_u64[0];
  return result;
}

uint64_t sub_242097208()
{
  return 0x79745F6C65646F6DLL;
}

uint64_t sub_24209722C()
{
  return 0x6F635F6C65646F6DLL;
}

uint64_t sub_24209724C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_242097268()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242097280()
{
  return sub_242132C90();
}

uint64_t sub_242097290()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242097298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  return sub_242096D34((uint64_t)&a37);
}

uint64_t sub_2420972A8(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_242096D34((uint64_t)va);
}

uint64_t sub_2420972B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  return sub_242096D34((uint64_t)&a37);
}

uint64_t sub_2420972D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v2, *(_QWORD *)(v0 + 72));
}

uint64_t sub_2420972FC()
{
  return sub_2421327D4();
}

uint64_t sub_242097314()
{
  return sub_242132C00();
}

uint64_t sub_242097324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_242097354()
{
  uint64_t v0;

  return v0;
}

void *sub_242097368(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t __src;

  return memcpy(a1, &__src, 0xD8uLL);
}

uint64_t sub_242097384()
{
  return swift_bridgeObjectRelease();
}

void sub_24209738C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
}

uint64_t sub_2420973C8()
{
  return sub_24213251C();
}

unint64_t sub_2420973D8()
{
  return 0xD000000000000011;
}

uint64_t sub_2420973EC()
{
  uint64_t v0;

  return sub_242079824(v0 - 160);
}

uint64_t sub_2420973F4()
{
  return sub_24213251C();
}

uint64_t sub_242097400()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12ModelCatalog23LLMAdapterAssetMetadataV05DraftE0V10draftSteps0G10IsAdaptive0G10TreeFactor0G18SoftMatchTolerance0gK8MaxPaths0G20UseRejectionSampling0G11EarlyReturn0guV20ProbabilityThresholdAESiSg_SbSgANSdSgAn2oPtcfC_0@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, uint64_t a11, char a12)
{
  return sub_242087D40(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_24209742C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
}

uint64_t sub_24209743C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_24209744C()
{
  return 1701869940;
}

uint64_t sub_24209745C()
{
  return sub_24213251C();
}

uint64_t sub_242097464()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24209746C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_24209747C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_242097484()
{
  return sub_242132C30();
}

uint64_t sub_242097490()
{
  return sub_242132C00();
}

uint64_t sub_242097498()
{
  return sub_242132C3C();
}

uint64_t sub_2420974A0()
{
  return sub_242132C30();
}

uint64_t sub_2420974A8()
{
  return 0x6C6F722E74616863;
}

uint64_t sub_2420974CC()
{
  return 0x5F747865746E6F63;
}

uint64_t sub_2420974F0()
{
  return sub_242132D74();
}

void sub_2420974FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v3;
  a2[1] = v2;
}

uint64_t sub_242097510()
{
  return sub_242132BDC();
}

uint64_t sub_242097528()
{
  return 0x5F72657470616461;
}

uint64_t sub_242097578()
{
  return swift_bridgeObjectRelease();
}

void sub_242097580(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v3;
  a2[1] = v2;
}

uint64_t sub_242097598@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_2420975A0()
{
  return sub_242132C24();
}

uint64_t sub_2420975A8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_2420975B4()
{
  return sub_242132D74();
}

uint64_t sub_2420975C4()
{
  return sub_242132C9C();
}

uint64_t sub_2420975D4()
{
  return sub_242132CC0();
}

uint64_t sub_2420975E4()
{
  return sub_242132CB4();
}

uint64_t sub_2420975F4()
{
  uint64_t v0;

  return sub_242079824(v0 - 160);
}

uint64_t sub_242097610()
{
  return swift_willThrow();
}

uint64_t sub_242097618()
{
  return sub_242132CE4();
}

uint64_t sub_242097624()
{
  return sub_242132CB4();
}

uint64_t sub_242097630()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242097638()
{
  return sub_242132CC0();
}

uint64_t sub_242097640()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_24209764C()
{
  return 0x6E656C5F787463;
}

uint64_t sub_242097688()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24209769C()
{
  uint64_t v0;

  return sub_242079824(v0);
}

uint64_t sub_2420976A4()
{
  return sub_242132D74();
}

uint64_t sub_2420976C0()
{
  return sub_242132CC0();
}

uint64_t sub_2420976D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420976F0()
{
  return sub_2421327D4();
}

uint64_t sub_242097718()
{
  return swift_bridgeObjectRelease();
}

void sub_242097720(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v3;
  a2[1] = v2;
}

uint64_t sub_242097734()
{
  uint64_t v0;

  return sub_242079824(*(_QWORD *)(v0 - 72));
}

uint64_t sub_24209773C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242097744()
{
  return swift_bridgeObjectRetain();
}

void sub_24209774C()
{
  JUMPOUT(0x2426A40E0);
}

void sub_242097760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 136);
  *(_BYTE *)(v0 + 144) = *(_BYTE *)(v1 + 144);
  *(_QWORD *)(v0 + 136) = v2;
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v1 + 145);
}

unint64_t sub_24209777C()
{
  return 0xD000000000000010;
}

uint64_t sub_242097790@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_24209779C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420977A4()
{
  return sub_242132CCC();
}

uint64_t sub_2420977BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  return sub_242096C30((uint64_t)&a37);
}

void sub_2420977C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_2420966B8(a1, a2, v2);
}

uint64_t sub_2420977CC@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_2420977D4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
}

uint64_t sub_2420977E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420977E8()
{
  return sub_242132C0C();
}

uint64_t sub_24209781C(uint64_t a1, uint64_t *a2)
{
  return sub_2420797C0(a2);
}

uint64_t sub_242097824()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_242097830()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242097838(uint64_t result, __n128 a2)
{
  *(__n128 *)(result + 136) = a2;
  *(__n128 *)(result + 120) = a2;
  *(__n128 *)(result + 104) = a2;
  *(__n128 *)(result + 88) = a2;
  *(__n128 *)(result + 72) = a2;
  *(__n128 *)(result + 56) = a2;
  *(__n128 *)(result + 40) = a2;
  *(__n128 *)(result + 24) = a2;
  *(__n128 *)(result + 8) = a2;
  return result;
}

uint64_t sub_242097860()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t sub_242097874()
{
  return sub_242132DA4();
}

void sub_24209787C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t *v10;

  sub_2420966B8((uint64_t)&a9, v9, v10);
}

_QWORD *sub_24209788C(_QWORD *a1)
{
  uint64_t v1;

  return sub_242079800(a1, v1);
}

uint64_t sub_2420978A4()
{
  return sub_242132CA8();
}

uint64_t sub_2420978B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420978C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420978E4()
{
  return sub_242132B94();
}

uint64_t sub_24209790C()
{
  return 1802396018;
}

uint64_t sub_24209791C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242097934()
{
  return 0x74735F7466617264;
}

uint64_t sub_24209795C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242097964()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24209796C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_242097974(uint64_t result, uint64_t a2)
{
  *(_QWORD *)result = *(_QWORD *)a2;
  *(_BYTE *)(result + 8) = *(_BYTE *)(a2 + 8);
  return result;
}

uint64_t sub_24209798C(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_2420979C8(__n128 *a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  unint64_t v3;
  unsigned __int8 v4;

  a1[2] = a2;
  a1[3] = a3;
  a1[4].n128_u64[0] = v3;
  a1[4].n128_u8[8] = v4;
}

uint64_t sub_2420979D8()
{
  return sub_242132C54();
}

uint64_t sub_242097A0C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_242097A18()
{
  return swift_release();
}

uint64_t sub_242097A20()
{
  uint64_t v0;

  return sub_242079824(v0);
}

uint64_t sub_242097A28()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242097A34()
{
  return sub_242132D80();
}

uint64_t _s12ModelCatalog08LLMDraftA13AssetMetadataV22DeviceSpecialTokensMapV17endPromptTokenIntSiSgvg_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t _s12ModelCatalog08LLMDraftA13AssetMetadataV22DeviceSpecialTokensMapV16startPromptTokenSiSgvg_0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_242097A58(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 168) = a1;
}

uint64_t sub_242097A64()
{
  return sub_242132DB0();
}

void sub_242097A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;

  sub_2420966B8(a1, (uint64_t)&a9, v9);
}

void sub_242097A94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v1 + 136);
  *(_WORD *)(v0 + 144) = *(_WORD *)(v1 + 144);
}

uint64_t sub_242097AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  result = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v0 + 96) = result;
  return result;
}

uint64_t _s12ModelCatalog08LLMDraftA13AssetMetadataV05DraftE0V15draftTreeFactorSiSgvg_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_242097AD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242097AF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242097AF8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRetain();
}

_BYTE *sub_242097B10@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t sub_242097B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242097B20(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  *(_BYTE *)(v1 - 68) = 3;
  return v1 - 68;
}

uint64_t sub_242097B34()
{
  return sub_242132C24();
}

uint64_t sub_242097B5C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242097B70()
{
  return swift_release();
}

uint64_t sub_242097B78()
{
  return sub_242132CCC();
}

uint64_t sub_242097B84()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242097B8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242097B94(uint64_t a1, ...)
{
  uint64_t (*v1)(char *, uint64_t);
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return v1(va, v2);
}

uint64_t sub_242097BA0()
{
  uint64_t v0;

  return sub_242079824(*(_QWORD *)(v0 + 120));
}

uint64_t sub_242097BA8()
{
  return sub_242132C18();
}

void sub_242097BB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
}

uint64_t sub_242097BC8()
{
  return swift_allocObject();
}

uint64_t sub_242097BE8()
{
  return sub_242132C90();
}

uint64_t sub_242097BF4()
{
  return sub_242132CCC();
}

uint64_t sub_242097C00()
{
  objc_class *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  char v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  id v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  _BYTE v98[40];
  _QWORD v99[15];
  uint64_t v100;
  uint64_t v101;

  sub_242097180();
  v100 = v3;
  v101 = v4;
  v5 = v0;
  v7 = v6;
  sub_242132414();
  sub_242097BC8();
  sub_242132408();
  sub_2420A1554(v7, (uint64_t)v99, &qword_25719D980);
  if (!v99[3])
    goto LABEL_28;
  sub_2420A1554((uint64_t)v99, (uint64_t)v98, &qword_25719D980);
  v8 = sub_2420797C0(&qword_254397170);
  v9 = sub_2420A1918();
  if (!(_DWORD)v9)
  {
    v17 = sub_2420A1918();
    if ((_DWORD)v17)
    {
      sub_2420A21CC(v17, v18, v19, v20, v21, v22, v23, v24, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97);
      sub_2420A1670();
      sub_2420A19C0();
      if (v1)
      {
        sub_24209EEE4((uint64_t)&v71);
        goto LABEL_25;
      }
      sub_2420A2074();
      sub_24209EEE4(v43);
      sub_2420973EC();
      v34 = 1;
      goto LABEL_16;
    }
    v25 = sub_2420A1918();
    if (v25)
    {
      sub_2420A23A0(v25, v26, v27, v28, v29, v30, v31, v32, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93);
      sub_2420A1634();
      sub_2420A19C0();
      if (v1)
      {
        sub_24209F3E8((uint64_t)&v71);
        goto LABEL_25;
      }
      sub_2420A2428();
      sub_24209F3E8(v55);
      sub_242079824((uint64_t)v98);
      v34 = 0;
      v56 = "TokenGeneration.LLM";
      goto LABEL_21;
    }
    v35 = sub_2420A1918();
    if (v35)
    {
      sub_2420A23A0(v35, v36, v37, v38, v39, v40, v41, v42, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93);
      sub_2420A15F8();
      sub_2420A19C0();
      if (v1)
      {
        sub_24209F174((uint64_t)&v71);
        goto LABEL_25;
      }
      sub_2420A2428();
      sub_24209F174(v67);
      sub_2420973EC();
      v68 = "TokenGeneration.LLM";
      goto LABEL_33;
    }
    v45 = sub_2420A1918();
    if (v45)
    {
      sub_2420A23B0(v45, v46, v47, v48, v49, v50, v51, v52, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93);
      sub_2420A15BC();
      v53 = sub_2420A19C0();
      if (v1)
      {
        sub_24209F8F4((uint64_t)&v71);
        goto LABEL_25;
      }
      v8 = v53;
      v7 = v54;
      sub_24209F8F4((uint64_t)&v71);
      sub_242079824((uint64_t)v98);
      v34 = 0;
      v2 = 0xD00000000000001ALL;
      v56 = "VisualGeneration.Diffusion";
LABEL_21:
      v44 = (unint64_t)(v56 - 32) | 0x8000000000000000;
      goto LABEL_29;
    }
    v57 = sub_2420A1918();
    if (v57)
    {
      sub_2420A23B0(v57, v58, v59, v60, v61, v62, v63, v64, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93);
      sub_2420A1580();
      v65 = sub_2420A19C0();
      if (v1)
      {
        sub_24209F75C((uint64_t)&v71);
        goto LABEL_25;
      }
      v8 = v65;
      v7 = v66;
      sub_24209F75C((uint64_t)&v71);
      sub_2420973EC();
      v2 = 0xD00000000000001ALL;
      v68 = "VisualGeneration.Diffusion";
LABEL_33:
      v44 = (unint64_t)(v68 - 32) | 0x8000000000000000;
      v34 = 1;
      goto LABEL_29;
    }
    sub_2420973EC();
LABEL_28:
    v34 = 0;
    v2 = 0;
    v8 = 0;
    v7 = 0xC000000000000000;
    v44 = 0xE000000000000000;
    goto LABEL_29;
  }
  sub_2420A21CC(v9, v10, v11, v12, v13, v14, v15, v16, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97);
  sub_2420A16AC();
  sub_2420A19C0();
  if (!v1)
  {
    sub_2420A2074();
    sub_24209EFC0(v33);
    sub_242079824((uint64_t)v98);
    v34 = 0;
LABEL_16:
    v44 = 0xE900000000000072;
LABEL_29:
    sub_24207E9D0((uint64_t)v99, &qword_25719D980);
    v69 = objc_allocWithZone(v5);
    v8 = (uint64_t)ResourceBundleContainer.init(resourceBundleData:resourceBundleType:assetBacked:)(v8, v7, v2, v44, v34);
    swift_release();
    return v8;
  }
  sub_24209EFC0((uint64_t)&v71);
LABEL_25:
  swift_release();
  sub_2420973EC();
  sub_24207E9D0((uint64_t)v99, &qword_25719D980);
  return v8;
}

void sub_242097F64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  ValueMetadata *v11;
  unint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  sub_2421323F0();
  sub_242097BC8();
  sub_2421323E4();
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleType);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleType + 8);
  v7 = v5 == 0x657A6974696E6153 && v6 == 0xE900000000000072;
  if (v7 || (sub_242079EB8() & 1) != 0)
  {
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_assetBacked) == 1)
    {
      sub_242097134();
      v11 = &type metadata for AssetBackedSanitizerBundle;
      v12 = sub_24209FB5C();
      sub_24207F538();
      sub_24209714C();
      sub_2420A1518();
    }
    else
    {
      sub_242097134();
      v11 = &type metadata for SanitizerBundle;
      v12 = sub_242082D98();
      sub_24207F538();
      sub_24209714C();
      sub_2420A14DC();
    }
LABEL_9:
    sub_2420A1CBC();
    sub_24207E9D0((uint64_t)v13, &qword_25719D980);
    sub_242097A18();
    if (v2)
    {
LABEL_10:
      sub_2420967B0((uint64_t)&v10);
      return;
    }
LABEL_11:
    sub_2420A13C0((uint64_t)&v10, (uint64_t)v13, &qword_25719D980);
    goto LABEL_12;
  }
  if (v5 == 0xD000000000000013 && v6 == 0x80000002421395A0 || (sub_242079EB8() & 1) != 0)
  {
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_assetBacked) == 1)
    {
      sub_242097134();
      v11 = &type metadata for AssetBackedLLMBundle;
      v12 = sub_242082C5C();
      sub_24207F538();
      sub_24209714C();
      sub_2420A14A0();
      goto LABEL_9;
    }
    sub_242097134();
    v11 = &type metadata for LLMBundle;
    v12 = sub_242082D0C();
    sub_24207F538();
    sub_24209714C();
    sub_2420A1464();
LABEL_21:
    sub_2420A1CBC();
    if (v2)
    {
      sub_24207E9D0((uint64_t)v13, &qword_25719D980);
      sub_242097A18();
      goto LABEL_10;
    }
    sub_24207E9D0((uint64_t)v13, &qword_25719D980);
    sub_242097A18();
    goto LABEL_11;
  }
  if (v5 == 0xD00000000000001ALL && v6 == 0x80000002421395C0 || (sub_242079EB8() & 1) != 0)
  {
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_assetBacked) == 1)
    {
      sub_242097134();
      v11 = &type metadata for AssetBackedDiffusionBundle;
      v12 = sub_242082C9C();
      sub_24207F538();
      sub_24209714C();
      sub_2420A1428();
    }
    else
    {
      sub_242097134();
      v11 = &type metadata for DiffusionBundle;
      v12 = sub_24209FAD8();
      sub_24207F538();
      sub_24209714C();
      sub_2420A13EC();
    }
    goto LABEL_21;
  }
  sub_242097A18();
LABEL_12:
  sub_2420A13C0((uint64_t)v13, (uint64_t)&v10, &qword_25719D980);
  if (v11)
  {
    sub_242079E50(&v10, a2);
  }
  else
  {
    sub_2420A1F24(v8, &qword_25719D980, v9);
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

uint64_t SanitizerBundle.init(id:sanitizer:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_242098488(a1, a2, (uint64_t (*)(uint64_t, _QWORD *))sub_242079E50, a3);
}

void AssetBackedLLMBundle.init(id:tokenizer:baseModel:adapter:draftModel:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  sub_2420983D8(a1, a2, a3, a4, a5, (void (*)(uint64_t, _QWORD *))sub_242079E50, (void (*)(uint64_t, _QWORD *))sub_242079E50, &qword_25719E5E8, a6, &qword_25719E5F0);
}

void LLMBundle.init(id:tokenizer:baseModel:adapter:draftModel:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  sub_2420983D8(a1, a2, a3, a4, a5, (void (*)(uint64_t, _QWORD *))sub_242079E50, (void (*)(uint64_t, _QWORD *))sub_242079E50, &qword_25719E5F8, a6, &qword_25719E600);
}

void sub_2420983D8(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t, _QWORD *)@<X5>, void (*a7)(uint64_t, _QWORD *)@<X6>, uint64_t *a8@<X7>, _QWORD *a9@<X8>, uint64_t *a10)
{
  uint64_t v16;

  v16 = a1[1];
  *a9 = *a1;
  a9[1] = v16;
  a6(a2, a9 + 2);
  a7(a3, a9 + 7);
  sub_2420A13C0(a4, (uint64_t)(a9 + 12), a8);
  sub_2420A13C0(a5, (uint64_t)(a9 + 17), a10);
}

void AssetBackedDiffusionBundle.init(id:baseModel:adapter:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_24209D934(a1, a2, a3, (void (*)(uint64_t, _QWORD *))sub_242079E50, &qword_25719E608, a4);
}

uint64_t AssetBackedSanitizerBundle.init(id:sanitizer:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_242098488(a1, a2, (uint64_t (*)(uint64_t, _QWORD *))sub_242079E50, a3);
}

uint64_t sub_242098488@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD *)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = a1[1];
  *a4 = *a1;
  a4[1] = v4;
  return a3(a2, a4 + 2);
}

void AssetBackedSanitizerBundle.init(with:resources:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_2420A2440();
  v3 = v2;
  sub_2420A1B58(&v35);
  if (v36)
  {
    if ((sub_2420A17A4() & 1) != 0)
    {
      v4 = v39;
      *v3 = v38;
      v3[1] = v4;
      sub_2420A1B58(&v35);
      if (v36)
      {
        if ((sub_2420A17A4() & 1) != 0)
        {
          sub_242097268();
          v6 = v38;
          v5 = v39;
          v7 = *(_QWORD *)(v0 + 16);
          if (v7)
          {
            v8 = sub_2420A21C0();
            while (1)
            {
              sub_2420A23F0(v8, (uint64_t)&v35);
              v10 = v36;
              v9 = v37;
              sub_2420A24DC(v11);
              if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v9 + 8) + 24))(v10) == v6 && v12 == v5)
                break;
              v14 = sub_242079EB8();
              sub_242097830();
              if ((v14 & 1) != 0)
                goto LABEL_22;
              v8 = sub_242079824((uint64_t)&v35);
              v1 += 40;
              if (!--v7)
              {
                sub_242079F20();
                goto LABEL_14;
              }
            }
            sub_242079F20();
LABEL_22:
            v22 = swift_bridgeObjectRelease();
            sub_2420A24E8(v22, v23, v24, v25, v26, v27, v28, v29, v34, v35);
          }
          else
          {
LABEL_14:
            sub_2420A2690();
          }
          sub_242079F20();
          if (v40)
          {
            sub_2420797C0(&qword_2543990D0);
            if ((sub_2420A17A4() & 1) != 0)
            {
              sub_242097268();
              v3[5] = &type metadata for AssetBackedSanitizerBase;
              v3[6] = sub_2420987EC();
              v30 = sub_24207F538();
              v3[2] = v30;
              sub_242097098((void *)(v30 + 16), &v35);
              goto LABEL_29;
            }
          }
          else
          {
            sub_24207E9D0((uint64_t)&v38, &qword_25719E610);
          }
          sub_2420A2194();
          sub_242097290();
          sub_2420A1E8C();
LABEL_28:
          swift_bridgeObjectRelease();
          v31 = v35;
          sub_2420987B0();
          v32 = sub_2420970E4();
          *v33 = v31;
          sub_2420A17F8(v32, (uint64_t)v33);
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        sub_242079F20();
      }
      else
      {
        v20 = sub_242079F20();
        sub_2420A1F24(v20, &qword_25719F010, v21);
      }
      sub_2420A2180();
      sub_2420A2300();
      sub_2420A1FAC();
      sub_2420A1D9C();
      sub_2420A1FAC();
      sub_242097268();
      goto LABEL_28;
    }
    sub_242079F20();
  }
  else
  {
    v15 = sub_242079F20();
    sub_2420A1F24(v15, &qword_25719F010, v16);
  }
  *(_QWORD *)&v35 = 0;
  *((_QWORD *)&v35 + 1) = 0xE000000000000000;
  sub_2420A1FA4();
  sub_242097290();
  sub_2420A2174();
  sub_2420A2638();
  sub_2420A1D9C();
  sub_2420A1FAC();
  sub_242097268();
  sub_242097384();
  v17 = v35;
  sub_2420987B0();
  v18 = sub_2420970E4();
  *v19 = v17;
  sub_2420A17F8(v18, (uint64_t)v19);
LABEL_29:
  sub_2420A1E58();
}

unint64_t sub_2420987B0()
{
  unint64_t result;

  result = qword_25719EC00;
  if (!qword_25719EC00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CatalogErrors.SerializationError, &type metadata for CatalogErrors.SerializationError);
    atomic_store(result, (unint64_t *)&qword_25719EC00);
  }
  return result;
}

unint64_t sub_2420987EC()
{
  unint64_t result;

  result = qword_25719E618;
  if (!qword_25719E618)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBase, &type metadata for AssetBackedSanitizerBase);
    atomic_store(result, (unint64_t *)&qword_25719E618);
  }
  return result;
}

void AssetBackedSanitizerBundle.resources.getter()
{
  uint64_t v0;

  AssetBackedSanitizerBundle.assetBackedResources.getter();
  sub_2420A1F34(v0);
  sub_242097384();
  sub_24207F428();
}

void AssetBackedSanitizerBundle.assetBackedResources.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[5];
  uint64_t v16;

  sub_2420A25BC();
  v15[4] = *(_QWORD *)(v0 + 8);
  v2 = sub_2420A22B8();
  v3 = sub_2420A1DA4((uint64_t)v2, v1);
  sub_2420A1E2C(v3, v4, v5, MEMORY[0x24BEE4AF8]);
  v16 = v6;
  v8 = *(_QWORD *)(v6 + 16);
  v7 = *(_QWORD *)(v6 + 24);
  if (v8 >= v7 >> 1)
  {
    sub_2420A1DF4(v8 + 1, v6, v7);
    v16 = v6;
  }
  MEMORY[0x24BDAC7A8](v6);
  sub_2420A1C7C(v9, v15[0]);
  v10 = sub_2420A2270();
  sub_24210C624(v10, v11, v12, v13, v14);
  sub_242079824((uint64_t)v15);
  sub_2420973B4();
}

uint64_t sub_242098904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[40];
  __int128 v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_24210BEE4(0, v1, 0);
    v4 = a1 + 32;
    v2 = v10;
    do
    {
      sub_24207EA48(v4, (uint64_t)v8);
      sub_2420797C0(&qword_2543990D0);
      sub_2420797C0((uint64_t *)&unk_254399948);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24210BEE4(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_24210BEE4(v5 > 1, v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_242079E50(&v9, v2 + 40 * v6 + 32);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242098A40()
{
  sub_24209EE74();
  return sub_242132DBC();
}

uint64_t sub_242098A68()
{
  sub_24209EE74();
  return sub_242132DC8();
}

void AssetBackedSanitizerBundle.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242097180();
  v2 = v1;
  sub_2420797C0(&qword_25719E620);
  sub_2420A2710();
  MEMORY[0x24BDAC7A8](v3);
  sub_242079800(v2, v2[3]);
  sub_24209EE74();
  sub_2420A1F04();
  if (v0)
  {
    sub_242079824((uint64_t)v2);
  }
  else
  {
    sub_2420A1A4C();
    sub_2420A1A44(&qword_25719E638, v4, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
    sub_2420A1BE8();
    sub_2420A24B8();
    sub_2420987EC();
    sub_24207F538();
    sub_242091758();
    sub_2420A1B7C();
    sub_2420A1B48();
    v5 = sub_2420A2494();
    sub_24209EEB0(v5, v6);
    sub_242079824((uint64_t)v2);
    sub_24209EEE4((uint64_t)&v7);
  }
  sub_2420970A0();
}

void AssetBackedSanitizerBundle.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[184];
  _BYTE v9[232];

  sub_242097180();
  sub_2420A2474();
  sub_2420797C0(&qword_25719E640);
  sub_2420A1A08();
  MEMORY[0x24BDAC7A8](v3);
  sub_2420A195C();
  sub_24209EE74();
  sub_2420A1904();
  v4 = v2[1];
  *v1 = *v2;
  v1[1] = v4;
  v8[0] = 0;
  sub_2420A1A4C();
  sub_2420A1A44(&qword_25719E648, v5, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
  sub_2420A1CDC();
  if (v0)
    goto LABEL_5;
  sub_2420A1A94();
  sub_2420797C0(&qword_25719E650);
  if (!sub_2420A17A4())
  {
    sub_2420987B0();
    sub_2420970E4();
    *(_QWORD *)v6 = 0xD000000000000027;
    *(_QWORD *)(v6 + 8) = 0x8000000242139330;
    *(_BYTE *)(v6 + 16) = 0;
    sub_2420A197C();
LABEL_5:
    sub_2420A177C();
    goto LABEL_6;
  }
  sub_242097098(v8, v9);
  sub_242097098(&v7, v9);
  sub_242091794();
  sub_2420A18EC();
  sub_2420A177C();
  sub_24209F920((uint64_t)v8);
LABEL_6:
  sub_2420A1EC0();
  sub_2420970A0();
}

#error "242098D7C: call analysis failed (funcsize=85)"

void AssetBackedSanitizerBundle.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  sub_2420A1D74();
  a23 = v24;
  a24 = v25;
  sub_2420A19A0();
  sub_2420A19B0();
  sub_24207F700();
  AssetBackedSanitizerBundle.assetBackedResources.getter();
  v27 = sub_2420A206C(v26);
  v28 = sub_242097830();
  if (*(_QWORD *)(v27 + 16))
  {
    do
    {
      sub_2420A1AC4(v28);
      sub_2420A1824(&a10);
      sub_2420A1880();
      sub_242097830();
      v28 = sub_2420A1CFC((uint64_t)&a10);
    }
    while (!v29);
    sub_24207F78C();
    sub_2420A1868();
  }
  else
  {
    sub_2420A17C0();
  }
}

void AssetBackedSanitizerBundle.hashValue.getter()
{
  sub_242099A40();
}

void sub_242098F14()
{
  AssetBackedSanitizerBundle.init(from:)();
}

void sub_242098F28()
{
  AssetBackedSanitizerBundle.encode(to:)();
}

void sub_242098F50()
{
  sub_242099AA8();
}

void SanitizerBundle.rawID.getter()
{
  sub_2420A2168();
  sub_24207F428();
}

void SanitizerBundle.sanitizer.getter(uint64_t a1@<X8>)
{
  sub_2420A215C(a1);
}

void SanitizerBundle.init(with:resources:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  sub_2420A2440();
  v2 = v1;
  sub_2420A1B58(&v34);
  if (v35)
  {
    if ((sub_2420A17A4() & 1) != 0)
    {
      v3 = v38;
      *v2 = v37;
      v2[1] = v3;
      sub_2420A1B58(&v34);
      if (v35)
      {
        if ((sub_2420A17A4() & 1) != 0)
        {
          sub_242097268();
          v5 = v37;
          v4 = v38;
          v6 = *(_QWORD *)(v0 + 16);
          if (v6)
          {
            v40 = v2;
            v7 = sub_2420A21C0();
            while (1)
            {
              sub_2420A23F0(v7, (uint64_t)&v34);
              v8 = v35;
              v9 = v36;
              sub_2420A24DC(v10);
              if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9) == v5 && v11 == v4)
                break;
              v13 = sub_242079EB8();
              sub_242097830();
              if ((v13 & 1) != 0)
                goto LABEL_22;
              v7 = sub_242079824((uint64_t)&v34);
              v2 += 5;
              if (!--v6)
              {
                sub_242079F20();
                v2 = v40;
                goto LABEL_14;
              }
            }
            sub_242079F20();
LABEL_22:
            v21 = swift_bridgeObjectRelease();
            sub_2420A24E8(v21, v22, v23, v24, v25, v26, v27, v28, v33, v34);
            sub_242079F20();
            v2 = v40;
          }
          else
          {
LABEL_14:
            sub_2420A2690();
            sub_242079F20();
          }
          if (v39)
          {
            sub_2420797C0((uint64_t *)&unk_254399948);
            if ((sub_2420A17A4() & 1) != 0)
            {
              sub_242097268();
              v2[5] = &type metadata for SanitizerBase;
              v2[6] = sub_24209EF10();
              v29 = sub_24207F538();
              v2[2] = v29;
              sub_242097098((void *)(v29 + 16), &v34);
              goto LABEL_29;
            }
          }
          else
          {
            sub_24207E9D0((uint64_t)&v37, &qword_254399C58);
          }
          sub_2420A2194();
          sub_242097290();
          sub_2420A1E8C();
LABEL_28:
          swift_bridgeObjectRelease();
          v30 = v34;
          sub_2420987B0();
          v31 = sub_2420970E4();
          *v32 = v30;
          sub_2420A17F8(v31, (uint64_t)v32);
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        sub_242079F20();
      }
      else
      {
        v19 = sub_242079F20();
        sub_2420A1F24(v19, &qword_25719F010, v20);
      }
      sub_2420A2180();
      sub_2420A2300();
      sub_2420A1FAC();
      sub_2420A1D9C();
      sub_2420A1FAC();
      sub_242097268();
      goto LABEL_28;
    }
    sub_242079F20();
  }
  else
  {
    v14 = sub_242079F20();
    sub_2420A1F24(v14, &qword_25719F010, v15);
  }
  *(_QWORD *)&v34 = 0;
  *((_QWORD *)&v34 + 1) = 0xE000000000000000;
  sub_2420A1FA4();
  sub_242097290();
  sub_2420A2174();
  sub_2420A2638();
  sub_2420A1D9C();
  sub_2420A1FAC();
  sub_242097268();
  sub_242097384();
  v16 = v34;
  sub_2420987B0();
  v17 = sub_2420970E4();
  *v18 = v16;
  sub_2420A17F8(v17, (uint64_t)v18);
LABEL_29:
  sub_2420A1E58();
}

void SanitizerBundle.resources.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10[5];
  uint64_t v11;

  sub_2420A25BC();
  v10[4] = *(_QWORD *)(*(_QWORD *)(v0 + 8) + 8);
  v2 = sub_2420A22B8();
  v3 = sub_2420A1DA4((uint64_t)v2, v1);
  sub_2420A1E3C(v3, v4, v5, MEMORY[0x24BEE4AF8]);
  v11 = v6;
  v8 = *(_QWORD *)(v6 + 16);
  v7 = *(_QWORD *)(v6 + 24);
  if (v8 >= v7 >> 1)
  {
    sub_2420A1E04(v8 + 1, v6, v7);
    v11 = v6;
  }
  MEMORY[0x24BDAC7A8](v6);
  sub_2420A1C7C(v9, v10[0]);
  sub_2420A2270();
  sub_24207E964();
  sub_242079824((uint64_t)v10);
  sub_2420973B4();
}

BOOL sub_24209936C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24209937C()
{
  return sub_242132D80();
}

uint64_t sub_2420993A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_2420A1858() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657A6974696E6173 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_2420A1858();
    sub_2420A1984();
    if ((a1 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242099460()
{
  return 2;
}

void sub_242099468()
{
  sub_2420974F0();
  sub_242132D80();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_242099498(char a1)
{
  if ((a1 & 1) != 0)
    return 0x657A6974696E6173;
  else
    return 25705;
}

BOOL sub_2420994C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24209936C(*a1, *a2);
}

void sub_2420994D4()
{
  sub_242099468();
}

uint64_t sub_2420994EC()
{
  return sub_24209937C();
}

void sub_2420994F4()
{
  sub_2420A251C();
  sub_2420A267C();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_242099518()
{
  char *v0;

  return sub_242099498(*v0);
}

uint64_t sub_242099520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420993A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242099544()
{
  return sub_242085178();
}

uint64_t sub_242099560@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242099460();
  *a1 = result;
  return result;
}

uint64_t sub_242099584()
{
  sub_24209EF50();
  return sub_242132DBC();
}

uint64_t sub_2420995AC()
{
  sub_24209EF50();
  return sub_242132DC8();
}

void SanitizerBundle.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_242097180();
  v2 = v1;
  sub_2420797C0(&qword_25719E658);
  sub_2420A2710();
  MEMORY[0x24BDAC7A8](v3);
  sub_242079800(v2, v2[3]);
  sub_24209EF50();
  sub_2420A1F04();
  if (v0)
  {
    sub_242079824((uint64_t)v2);
  }
  else
  {
    sub_2420A1A4C();
    sub_2420A1A44(&qword_25719E670, v4, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
    sub_2420A1BE8();
    sub_2420A24B8();
    sub_24209EF10();
    sub_24207F538();
    sub_242091488();
    sub_2420A1B7C();
    sub_2420A1B48();
    v5 = sub_2420A2494();
    sub_24209EF8C(v5, v6);
    sub_242079824((uint64_t)v2);
    sub_24209EFC0((uint64_t)&v7);
  }
  sub_2420970A0();
}

void SanitizerBundle.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[184];
  _BYTE v9[232];

  sub_242097180();
  sub_2420A2474();
  sub_2420797C0(&qword_25719E678);
  sub_2420A1A08();
  MEMORY[0x24BDAC7A8](v3);
  sub_2420A195C();
  sub_24209EF50();
  sub_2420A1904();
  v4 = v2[1];
  *v1 = *v2;
  v1[1] = v4;
  v8[0] = 0;
  sub_2420A1A4C();
  sub_2420A1A44(&qword_25719E680, v5, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
  sub_2420A1CDC();
  if (v0)
    goto LABEL_5;
  sub_2420A1A94();
  sub_2420797C0(&qword_25719E688);
  if (!sub_2420A17A4())
  {
    sub_2420987B0();
    sub_2420970E4();
    *(_QWORD *)v6 = 0xD000000000000027;
    *(_QWORD *)(v6 + 8) = 0x8000000242139330;
    *(_BYTE *)(v6 + 16) = 0;
    sub_2420A197C();
LABEL_5:
    sub_2420A177C();
    goto LABEL_6;
  }
  sub_242097098(v8, v9);
  sub_242097098(&v7, v9);
  sub_2420914C4();
  sub_2420A18EC();
  sub_2420A177C();
  sub_24209F920((uint64_t)v8);
LABEL_6:
  sub_2420A1EC0();
  sub_2420970A0();
}

#error "2420998B8: call analysis failed (funcsize=81)"

void SanitizerBundle.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_2420A1D74();
  a23 = v24;
  a24 = v25;
  sub_2420A19A0();
  sub_2420A19B0();
  sub_24207F700();
  SanitizerBundle.resources.getter();
  if (*(_QWORD *)(v26 + 16))
  {
    do
    {
      sub_2420A1AC4(v26);
      sub_2420A1824(&a10);
      sub_2420A1880();
      sub_242097830();
      v26 = sub_2420A1CFC((uint64_t)&a10);
    }
    while (!v27);
    sub_24207F78C();
    sub_2420A1868();
  }
  else
  {
    sub_2420A17C0();
  }
}

void SanitizerBundle.hashValue.getter()
{
  sub_242099A40();
}

void sub_242099A40()
{
  uint64_t v0;

  v0 = sub_2420974F0();
  sub_2420A1F1C(v0);
  sub_242079F68();
  sub_24209725C();
}

void sub_242099A68()
{
  SanitizerBundle.init(from:)();
}

void sub_242099A7C()
{
  SanitizerBundle.encode(to:)();
}

void sub_242099A9C()
{
  sub_242099AA8();
}

void sub_242099AA8()
{
  uint64_t v0;

  v0 = sub_2420A20EC();
  sub_2420A1F1C(v0);
  sub_242079F68();
  sub_24209725C();
}

void AssetBackedLLMBundle.rawID.getter()
{
  sub_2420A2168();
  sub_24207F428();
}

void AssetBackedLLMBundle.tokenizer.getter(uint64_t a1@<X8>)
{
  sub_2420A215C(a1);
}

void AssetBackedLLMBundle.baseModel.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_24207EA48(v1 + 56, a1);
}

void AssetBackedLLMBundle.adapter.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2420A1554(v1 + 96, a1, &qword_25719E5E8);
}

void AssetBackedLLMBundle.draftModel.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2420A1554(v1 + 136, a1, &qword_25719E5F0);
}

void AssetBackedLLMBundle.init(with:resources:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  ValueMetadata *v148;
  unint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  _BYTE v153[40];
  __int128 v154;
  uint64_t v155;
  uint64_t v156;

  sub_242097180();
  v1 = v0;
  v3 = v2;
  sub_2420A1B40(&v154);
  LODWORD(v4) = MEMORY[0x24BEE4AD8];
  if (!v155)
  {
    sub_242097268();
    sub_24207E9D0((uint64_t)&v154, &qword_25719F010);
LABEL_16:
    sub_2420A1FC8();
    sub_2420A1FA4();
    sub_2420A24CC();
    sub_2420A2174();
    sub_2420A2358(v11);
    sub_2420A1F3C();
    sub_2421327EC();
    sub_242079F20();
    sub_242097384();
    v12 = v154;
    sub_2420987B0();
    v13 = sub_2420970E4();
    *v14 = v12;
    sub_2420A17F8(v13, (uint64_t)v14);
    goto LABEL_17;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242097268();
    goto LABEL_16;
  }
  v5 = *((_QWORD *)&v151 + 1);
  *(_QWORD *)v3 = v151;
  *(_QWORD *)(v3 + 8) = v5;
  sub_2420A1B40(&v154);
  if (!v155)
  {
    sub_242097268();
    sub_24207E9D0((uint64_t)&v154, &qword_25719F010);
LABEL_20:
    sub_2420A1FC8();
    sub_242132AD4();
    sub_2420A24CC();
    sub_2420A2358(0xD00000000000002DLL);
    sub_2420A1F3C();
    sub_2421327EC();
    sub_242079F20();
LABEL_36:
    swift_bridgeObjectRelease();
    sub_2420987B0();
    v25 = sub_2420970E4();
    sub_2420A2410(v25, v26);
    goto LABEL_37;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242097268();
    goto LABEL_20;
  }
  v4 = *(_QWORD *)(v1 + 16);
  if (!v4)
    goto LABEL_34;
  v156 = v3;
  v6 = v1 + 32;
  v7 = sub_2420977E0();
  v115 = v1 + 32;
  while (1)
  {
    sub_2420A1F2C(v7, (uint64_t)&v154);
    if (sub_2420A1AA0(&v154) == (_QWORD)v151 && v8 == *((_QWORD *)&v151 + 1))
      break;
    v10 = sub_2420A17E8();
    sub_242097830();
    if ((v10 & 1) != 0)
      goto LABEL_22;
    v7 = sub_242079824((uint64_t)&v154);
    v6 += 40;
    if (!--v4)
    {
      sub_242079F20();
      sub_2420A1EFC();
      v3 = v156;
      goto LABEL_35;
    }
  }
  sub_242097268();
LABEL_22:
  swift_bridgeObjectRelease();
  sub_2420A2268(&v154);
  v15 = sub_2420797C0(&qword_2543990D0);
  v16 = sub_2420A17A4();
  v3 = v156;
  LODWORD(v4) = MEMORY[0x24BEE4AD8];
  if ((v16 & 1) == 0)
  {
LABEL_34:
    sub_242079F20();
    sub_242097268();
LABEL_35:
    sub_2420A1FC8();
    sub_242132AD4();
    sub_2420A24CC();
    *(_QWORD *)&v154 = 0xD000000000000024;
    *((_QWORD *)&v154 + 1) = 0x8000000242139390;
    sub_2420A1A1C();
    goto LABEL_36;
  }
  sub_2420A1B60();
  *(_QWORD *)(v156 + 40) = &type metadata for AssetBackedTokenizerBase;
  *(_QWORD *)(v156 + 48) = sub_24209EFEC();
  v17 = sub_24207F538();
  *(_QWORD *)(v156 + 16) = v17;
  sub_242097098((void *)(v17 + 16), &v154);
  sub_2420A1EDC();
  sub_2420A1B40(v18);
  if (!v152)
  {
    v27 = sub_242097268();
    sub_2420A24F4(v27, &qword_25719F010, v28, v29, v30, v31, v32, v33, v110, v112, v115, v117, *((uint64_t *)&v117 + 1), v118, v119, v120, v121, v122, v123,
      v124,
      v125,
      v126,
      v127,
      v128,
      v129,
      v130,
      v131,
      v132,
      v133,
      v134,
      v135,
      v136,
      v137,
      v138,
      v139,
      v140,
      v141,
      v142,
      v143,
      v144,
      v145,
      v146,
      v147,
      (uint64_t)v148,
      v149,
      v150,
      v151);
LABEL_41:
    sub_2420A1D8C();
    sub_242132AD4();
    sub_2420A2208();
    *(_QWORD *)&v151 = 0xD00000000000002ELL;
    *((_QWORD *)&v151 + 1) = 0x80000002421393C0;
    sub_2420A1F3C();
    sub_2420A2210();
    sub_242079F20();
LABEL_58:
    swift_bridgeObjectRelease();
    LODWORD(v4) = v151;
    sub_2420987B0();
    v63 = sub_2420970E4();
    sub_2420A26F4(v63, v64);
LABEL_37:
    swift_willThrow();
    swift_bridgeObjectRelease();
    if ((_DWORD)v4)
      sub_242079824(v3 + 16);
    goto LABEL_17;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242097268();
    goto LABEL_41;
  }
  v19 = *(_QWORD *)(v1 + 16);
  if (!v19)
    goto LABEL_56;
  v113 = v15;
  v20 = sub_2420977E0();
  v21 = v1 + 32;
  while (1)
  {
    sub_2420A1F2C(v20, (uint64_t)&v151);
    if (sub_2420A1AA0(&v151) == (_QWORD)v117 && v22 == *((_QWORD *)&v117 + 1))
      break;
    v24 = sub_2420A17E8();
    sub_242097830();
    if ((v24 & 1) != 0)
      goto LABEL_43;
    v20 = sub_242079824((uint64_t)&v151);
    v21 += 40;
    if (!--v19)
    {
      sub_242079F20();
      sub_2420A1EFC();
      v3 = v156;
      goto LABEL_57;
    }
  }
  sub_242097268();
LABEL_43:
  swift_bridgeObjectRelease();
  sub_242079E50(&v151, (uint64_t)v153);
  v3 = v156;
  if ((sub_2420A17A4() & 1) == 0)
  {
LABEL_56:
    sub_242079F20();
    sub_242097268();
LABEL_57:
    sub_2420A1D8C();
    sub_242132AD4();
    sub_2420A2208();
    *(_QWORD *)&v151 = 0xD000000000000023;
    *((_QWORD *)&v151 + 1) = 0x80000002421393F0;
    sub_2420A1A1C();
    goto LABEL_58;
  }
  sub_2420A1B60();
  *(_QWORD *)(v156 + 80) = &type metadata for AssetBackedLLMModelBase;
  *(_QWORD *)(v156 + 88) = sub_24209F02C();
  v34 = sub_24207F538();
  *(_QWORD *)(v156 + 56) = v34;
  sub_242097098((void *)(v34 + 16), &v151);
  sub_2420A1B40(&v117);
  if (v119)
  {
    v39 = sub_2420A17A4();
    v47 = v1 + 32;
    if ((v39 & 1) != 0)
    {
      v48 = v146;
      v49 = *(_QWORD *)(v1 + 16);
      if (v49)
      {
        v50 = v1 + 32;
        v51 = v145;
        v52 = sub_2420977E0();
        while (1)
        {
          sub_2420A1F2C(v52, (uint64_t)&v117);
          if (sub_2420A1AA0(&v117) == v51 && v53 == v48)
            break;
          v55 = sub_2420A17E8();
          sub_242097830();
          if ((v55 & 1) != 0)
            goto LABEL_62;
          v52 = sub_242079824((uint64_t)&v117);
          v50 += 40;
          if (!--v49)
          {
            sub_242097268();
            v3 = v156;
            v47 = v1 + 32;
            goto LABEL_55;
          }
        }
        sub_242097268();
LABEL_62:
        v47 = v1 + 32;
        v65 = swift_bridgeObjectRelease();
        sub_2420A20CC(v65, v66, v67, v68, v69, v70, v71, v72, v110, v113, v115, v117, v118, v119, v120, v121, v122, v123, v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139);
        v56 = sub_2420A1B60();
        v3 = v156;
      }
      else
      {
LABEL_55:
        sub_2420A2740();
        v56 = sub_2420A1B60();
      }
      if (v142)
      {
        if ((sub_2420A17A4() & 1) != 0)
        {
          v148 = &type metadata for AssetBackedLLMAdapterBase;
          v149 = sub_24209F0AC();
          v145 = sub_24207F538();
          v73 = sub_242097098((void *)(v145 + 16), &v117);
LABEL_68:
          sub_2420A2754((uint64_t)v73, v3 + 96, &qword_25719E5E8, v74, v75, v76, v77, v78, v110, v113, v115, v117, *((uint64_t *)&v117 + 1), v118, v119, v120, v121, v122, v123,
            v124,
            v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145);
          goto LABEL_69;
        }
      }
      else
      {
        sub_2420A2708(v56, &qword_25719E610, v57, v58, v59, v60, v61, v62, v110, v113, v115, v117, *((uint64_t *)&v117 + 1), v118, v119, v120, v121, v122, v123,
          v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139);
      }
      sub_2420A254C();
      goto LABEL_68;
    }
  }
  else
  {
    sub_2420A20D8(v35, &qword_25719F010, v36, v37, v38);
    v47 = v1 + 32;
  }
  *(_QWORD *)(v156 + 128) = 0;
  *(_OWORD *)(v156 + 96) = 0u;
  *(_OWORD *)(v156 + 112) = 0u;
LABEL_69:
  sub_2420A1B18(v39, v40, v41, v42, v43, v44, v45, v46, v110, v113, v115, v117);
  sub_242079F20();
  if (v119)
  {
    if ((sub_2420A17A4() & 1) != 0)
    {
      v79 = v146;
      v80 = *(_QWORD *)(v1 + 16);
      if (v80)
      {
        v81 = v145;
        v82 = sub_2420977E0();
        while (1)
        {
          sub_2420A20C4(v82, (uint64_t)&v117);
          if (sub_2420A1AF4(&v117) == v81 && v83 == v79)
            break;
          v85 = sub_242079EB8();
          sub_242097830();
          if ((v85 & 1) != 0)
            goto LABEL_85;
          v82 = sub_242079824((uint64_t)&v117);
          v47 += 40;
          if (!--v80)
          {
            sub_242097268();
            goto LABEL_80;
          }
        }
        sub_242097268();
LABEL_85:
        v90 = swift_bridgeObjectRelease();
        sub_2420A20CC(v90, v91, v92, v93, v94, v95, v96, v97, v111, v114, v116, v117, v118, v119, v120, v121, v122, v123, v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139);
      }
      else
      {
LABEL_80:
        sub_2420A2740();
      }
      sub_242097268();
      v98 = sub_242079F20();
      if (v142)
      {
        if ((sub_2420A17A4() & 1) != 0)
        {
          v148 = &type metadata for AssetBackedLLMDraftModelBase;
          v149 = sub_24209F06C();
          v145 = sub_24207F538();
          v104 = sub_242097098((void *)(v145 + 16), &v117);
LABEL_91:
          sub_2420A2754((uint64_t)v104, v3 + 136, &qword_25719E5F0, v105, v106, v107, v108, v109, v111, v114, v116, v117, *((uint64_t *)&v117 + 1), v118, v119, v120, v121, v122, v123,
            v124,
            v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145);
          goto LABEL_17;
        }
      }
      else
      {
        sub_2420A2708(v98, &qword_25719E610, v114, v99, v100, v101, v102, v103, v111, v114, v116, v117, *((uint64_t *)&v117 + 1), v118, v119, v120, v121, v122, v123,
          v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139);
      }
      sub_2420A254C();
      goto LABEL_91;
    }
    sub_242097268();
  }
  else
  {
    v86 = sub_242097268();
    sub_2420A20D8(v86, &qword_25719F010, v87, v88, v89);
  }
  *(_QWORD *)(v3 + 168) = 0;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
LABEL_17:
  sub_2420970A0();
}

void AssetBackedLLMBundle.resources.getter()
{
  uint64_t v0;

  AssetBackedLLMBundle.assetBackedResources.getter();
  sub_2420A1F34(v0);
  sub_242097384();
  sub_24207F428();
}

void AssetBackedLLMBundle.assetBackedResources.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[4];
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  char *v64;

  sub_2420A2574();
  v3 = sub_2420A1EA8();
  v4 = sub_2420A19E8((uint64_t)v3);
  sub_2420A1E2C(v4, v5, v6, MEMORY[0x24BEE4AF8]);
  v64 = (char *)v7;
  sub_2420A2670();
  if (v10)
  {
    sub_2420A1DF4(v1 + 1, v8, v9);
    v64 = (char *)v43;
  }
  sub_2420A1F94();
  MEMORY[0x24BDAC7A8](v11);
  sub_2420A18C8(v12, v58[0]);
  sub_2420A1E14(v1, v2, (uint64_t *)&v64);
  sub_2420A1FDC();
  v13 = sub_2420A1EA8();
  sub_2420A1A00((uint64_t)v13, v2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v44 = sub_2420A23C0();
    sub_24210B0B0(v44, v45, v46, v47);
    v1 = v48;
    v64 = (char *)v48;
  }
  v15 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  if (v15 >= v14 >> 1)
  {
    v49 = sub_2420A22C0(v14);
    sub_24210B0B0(v49, v50, v51, v52);
    v64 = (char *)v53;
  }
  sub_2420A1F74();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420A1A00((uint64_t)v18, (uint64_t)v13);
  sub_2420A1E14(v15, (uint64_t)v18, (uint64_t *)&v64);
  sub_2420A260C();
  v19 = v64;
  sub_2420A2328(v0 + 96, v20, &qword_25719E5E8);
  if (v59)
  {
    sub_2420A25F8();
    v22 = v62;
    v23 = v63;
    v24 = sub_242079800(v61, v62);
    v59 = v22;
    v60 = *(_QWORD *)(v23 + 8);
    v25 = sub_2420A2320();
    sub_2420A1A00((uint64_t)v25, (uint64_t)v24);
    if ((sub_2420A2604() & 1) == 0)
    {
      sub_2420A1E20(0, *((_QWORD *)v19 + 2) + 1);
      v19 = (char *)v54;
      v64 = (char *)v54;
    }
    v27 = *((_QWORD *)v19 + 2);
    v26 = *((_QWORD *)v19 + 3);
    if (v27 >= v26 >> 1)
    {
      sub_2420A1E20(v26 > 1, v27 + 1);
      v64 = (char *)v55;
    }
    sub_2420A1F74();
    MEMORY[0x24BDAC7A8](v28);
    v19 = (char *)v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2420A1A00((uint64_t)v19, (uint64_t)v25);
    sub_2420A1E14(v27, (uint64_t)v19, (uint64_t *)&v64);
    sub_2420A1D3C();
  }
  else
  {
    sub_2420A2318(v21, &qword_25719E5E8);
  }
  sub_2420A2328(v0 + 136, v30, &qword_25719E5F0);
  if (v59)
  {
    sub_2420A1F44();
    v60 = *(_QWORD *)(v0 + 8);
    v32 = sub_2420A2320();
    sub_2420A1DA4((uint64_t)v32, (uint64_t)v19);
    v33 = (uint64_t)v64;
    if ((sub_2420A2604() & 1) == 0)
    {
      sub_2420A1E20(0, *(_QWORD *)(v33 + 16) + 1);
      v33 = v56;
      v64 = (char *)v56;
    }
    v35 = *(_QWORD *)(v33 + 16);
    v34 = *(_QWORD *)(v33 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_2420A1E20(v34 > 1, v35 + 1);
      v64 = (char *)v57;
    }
    sub_2420A1E74();
    MEMORY[0x24BDAC7A8](v36);
    sub_2420A1C34(v37, v58[0]);
    v38 = sub_2420A2340();
    sub_24210C624(v38, v39, v40, v41, v42);
    sub_2420A1D3C();
  }
  else
  {
    sub_2420A2318(v31, &qword_25719E5F0);
  }
  sub_242097670();
}

uint64_t sub_24209A6BC()
{
  return 5;
}

uint64_t sub_24209A6C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24209A6EC + 4 * byte_24214C1B0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_24209A6EC()
{
  return 0x657A696E656B6F74;
}

uint64_t sub_24209A70C()
{
  return 0x65646F4D65736162;
}

uint64_t sub_24209A728()
{
  return 0x72657470616461;
}

uint64_t sub_24209A740()
{
  return 0x646F4D7466617264;
}

uint64_t sub_24209A75C()
{
  unsigned __int8 *v0;

  return sub_24209A6C4(*v0);
}

uint64_t sub_24209A764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24209BE98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24209A788@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24209A6BC();
  *a1 = result;
  return result;
}

uint64_t sub_24209A7AC()
{
  sub_24209F0EC();
  return sub_242132DBC();
}

uint64_t sub_24209A7D4()
{
  sub_24209F0EC();
  return sub_242132DC8();
}

void AssetBackedLLMBundle.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE v8[184];
  _BYTE v9[184];
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  _BYTE v14[184];
  _BYTE v15[184];
  __int128 v16;
  ValueMetadata *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_242097180();
  v2 = v1;
  v7 = v3;
  sub_2420797C0(&qword_25719E690);
  sub_2420A1E74();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420A23D8(v2);
  sub_24209F0EC();
  sub_2420A1E80();
  if (v0)
  {
    sub_242079824((uint64_t)v2);
  }
  else
  {
    sub_2420A1A4C();
    sub_2420A1A44(&qword_25719E6A8, v5, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
    sub_2420A1EB4();
    v22 = v16;
    v17 = &type metadata for AssetBackedTokenizerBase;
    v18 = sub_24209EFEC();
    *(_QWORD *)&v16 = sub_24207F538();
    sub_2420923C8();
    sub_2420A1DD8();
    sub_242079E50(&v16, (uint64_t)&v23);
    v15[0] = 2;
    v17 = &type metadata for AssetBackedLLMModelBase;
    v18 = sub_24209F02C();
    *(_QWORD *)&v16 = sub_24207F538();
    sub_2420907F4();
    sub_2420A1DAC();
    sub_242079E50(&v16, (uint64_t)&v24);
    sub_2420900E8();
    sub_2420A19D0();
    sub_2420A1A8C((uint64_t)&v16, (uint64_t)v14);
    sub_2420A1A8C((uint64_t)v14, (uint64_t)v15);
    sub_2420A24FC((uint64_t)v15);
    if (v6)
    {
      v21 = 0;
      v20 = 0u;
      v19 = 0u;
    }
    else
    {
      *((_QWORD *)&v20 + 1) = &type metadata for AssetBackedLLMAdapterBase;
      v21 = sub_24209F0AC();
      *(_QWORD *)&v19 = sub_24207F538();
      sub_242097098((void *)(v19 + 16), v15);
    }
    sub_2420A13C0((uint64_t)&v19, (uint64_t)&v25, &qword_25719E5E8);
    sub_2420904DC();
    sub_2420A19D0();
    sub_2420A1A8C((uint64_t)&v10, (uint64_t)v8);
    sub_2420A1A8C((uint64_t)v8, (uint64_t)v9);
    sub_2420A24FC((uint64_t)v9);
    if (v6)
    {
      sub_2420A17D8();
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
    }
    else
    {
      *((_QWORD *)&v12 + 1) = &type metadata for AssetBackedLLMDraftModelBase;
      v13 = sub_24209F06C();
      *(_QWORD *)&v11 = sub_24207F538();
      sub_242097098((void *)(v11 + 16), v9);
      sub_2420A17D8();
    }
    sub_2420A13C0((uint64_t)&v11, (uint64_t)&v26, &qword_25719E5F0);
    sub_24209F140((uint64_t)&v22, v7);
    sub_2420A22F0();
    sub_24209F174((uint64_t)&v22);
  }
  sub_2420970A0();
}

void AssetBackedLLMBundle.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  const char *v6;
  uint64_t v7;
  __n128 *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v14[80];
  _QWORD v15[23];
  _QWORD v16[5];
  __n128 v17[11];
  _BYTE v18[184];
  __n128 v19[11];
  uint64_t v20;
  _BYTE v21[184];
  uint64_t v22;
  _BYTE v23[184];
  _BYTE v24[184];
  _QWORD v25[29];

  sub_242097180();
  sub_2420A1ECC();
  sub_2420797C0(&qword_25719E6C0);
  sub_2420A1A08();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420A195C();
  sub_24209F0EC();
  sub_2420A1904();
  v3 = v1[1];
  v25[0] = *v1;
  v25[1] = v3;
  v24[0] = 0;
  sub_2420A1A4C();
  sub_2420A1A44(&qword_25719E6C8, v4, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
  sub_2420A18EC();
  if (v0)
    goto LABEL_7;
  sub_2420A1A94();
  sub_2420797C0(&qword_25719E6D0);
  if (sub_2420A17A4())
  {
    sub_242097098(v24, v25);
    sub_242097098(v23, v25);
    v21[0] = 1;
    sub_242092404();
    sub_2420A18EC();
    sub_24209F920((uint64_t)v24);
    sub_24207EA48((uint64_t)(v1 + 7), (uint64_t)&v22);
    sub_2420797C0(&qword_25719E6D8);
    if (sub_2420A17A4())
    {
      sub_242097098(v21, v23);
      sub_242097098(&v20, v23);
      sub_2420A2510();
      sub_242090830();
      sub_2420A18EC();
      sub_24209F920((uint64_t)v21);
      sub_2420A1554((uint64_t)(v1 + 12), (uint64_t)v15, &qword_25719E5E8);
      if (v15[3])
      {
        sub_2420797C0(&qword_25719E6E8);
        if (!sub_2420A17A4())
        {
          sub_2420987B0();
          sub_2420970E4();
          sub_2420A2094();
          v11 = v10 - 2;
LABEL_24:
          sub_2420A1F84(v9, v11);
          goto LABEL_6;
        }
        sub_242097098(v17, v18);
        nullsub_1(v17);
        v8 = v17;
      }
      else
      {
        sub_24207E9D0((uint64_t)v15, &qword_25719E5E8);
        sub_24209F1A0(v18);
        v8 = (__n128 *)v18;
      }
      sub_2420A13C0((uint64_t)v8, (uint64_t)v19, &qword_25719E6B0);
      sub_2420A13C0((uint64_t)v19, (uint64_t)v18, &qword_25719E6B0);
      sub_242090124();
      sub_2420A1990();
      sub_24209F1A8(v19);
      sub_2420A1554((uint64_t)(v1 + 17), (uint64_t)v16, &qword_25719E5F0);
      if (!v16[3])
      {
        sub_24207E9D0((uint64_t)v16, &qword_25719E5F0);
        sub_24209F1A0(v15);
        v12 = v15;
        goto LABEL_22;
      }
      sub_2420797C0(&qword_25719E6E0);
      if (sub_2420A17A4())
      {
        sub_242097098(v14, v15);
        nullsub_1(v14);
        v12 = v14;
LABEL_22:
        sub_2420A13C0((uint64_t)v12, (uint64_t)v17, &qword_25719E6B8);
        sub_2420A13C0((uint64_t)v17, (uint64_t)v15, &qword_25719E6B8);
        v14[0] = 4;
        sub_242090518();
        sub_2420A1990();
        sub_2420A177C();
        sub_24209F1A8(v17);
        goto LABEL_8;
      }
      sub_2420987B0();
      sub_2420970E4();
      sub_2420A2094();
      v11 = v13 + 1;
      goto LABEL_24;
    }
    sub_2420987B0();
    sub_2420970E4();
    v6 = "LLMBundle baseModel is wrong type";
  }
  else
  {
    sub_2420987B0();
    sub_2420970E4();
    v6 = "LLMBundle tokenizer is wrong type";
  }
  sub_2420A1CA8(v5, (uint64_t)v6);
LABEL_6:
  *(_BYTE *)(v7 + 16) = 0;
  sub_2420A197C();
LABEL_7:
  sub_2420A177C();
LABEL_8:
  sub_2420A1EC0();
  sub_2420970A0();
}

#error "24209B094: call analysis failed (funcsize=85)"

void AssetBackedLLMBundle.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  sub_2420A1D74();
  a23 = v24;
  a24 = v25;
  sub_2420A19A0();
  sub_2420A19B0();
  sub_24207F700();
  AssetBackedLLMBundle.assetBackedResources.getter();
  v27 = sub_2420A206C(v26);
  v28 = sub_242097830();
  if (*(_QWORD *)(v27 + 16))
  {
    do
    {
      sub_2420A1AC4(v28);
      sub_2420A1824(&a10);
      sub_2420A1880();
      sub_242097830();
      v28 = sub_2420A1CFC((uint64_t)&a10);
    }
    while (!v29);
    sub_24207F78C();
    sub_2420A1868();
  }
  else
  {
    sub_2420A17C0();
  }
}

void AssetBackedLLMBundle.hashValue.getter()
{
  sub_242099A40();
}

void sub_24209B22C()
{
  AssetBackedLLMBundle.init(from:)();
}

void sub_24209B240()
{
  AssetBackedLLMBundle.encode(to:)();
}

void sub_24209B268()
{
  sub_242099AA8();
}

void LLMBundle.adapter.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2420A1554(v1 + 96, a1, &qword_25719E5F8);
}

void LLMBundle.draftModel.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2420A1554(v1 + 136, a1, &qword_25719E600);
}

void LLMBundle.init(with:resources:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141[24];
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  ValueMetadata *v145;
  unint64_t v146;
  __int128 v147;
  uint64_t v148;
  _BYTE v149[40];
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  sub_242097180();
  v1 = v0;
  v3 = v2;
  sub_2420A1B40(&v150);
  if (!v151)
  {
    sub_242097384();
    sub_24207E9D0((uint64_t)&v150, &qword_25719F010);
LABEL_16:
    sub_2420A1FB4();
    sub_2420A1FA4();
    sub_2420A26C4();
    sub_2420A2174();
    sub_2420A2370(v20);
    sub_2420A1F3C();
    sub_2421327EC();
    sub_242079F20();
    sub_242097384();
    v21 = v150;
    sub_2420987B0();
    v22 = sub_2420970E4();
    *v23 = v21;
    sub_2420A17F8(v22, (uint64_t)v23);
    goto LABEL_17;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242097384();
    goto LABEL_16;
  }
  v4 = *((_QWORD *)&v147 + 1);
  *(_QWORD *)v3 = v147;
  *(_QWORD *)(v3 + 8) = v4;
  sub_2420A1B40(&v150);
  if (!v151)
  {
    sub_242097384();
    sub_24207E9D0((uint64_t)&v150, &qword_25719F010);
LABEL_20:
    sub_2420A1FB4();
    sub_242132AD4();
    sub_2420A26C4();
    sub_2420A2370(0xD00000000000002DLL);
    sub_2420A1F3C();
    sub_2421327EC();
    sub_242079F20();
LABEL_37:
    swift_bridgeObjectRelease();
    sub_2420987B0();
    v40 = sub_2420970E4();
    sub_2420A2410(v40, v41);
    goto LABEL_38;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242097384();
    goto LABEL_20;
  }
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
    goto LABEL_35;
  v153 = v3;
  v6 = v1 + 32;
  v113 = v1;
  v7 = sub_2420A1CA0();
  v111 = v1 + 32;
  while (1)
  {
    sub_2420A1F2C(v7, (uint64_t)&v150);
    v8 = v151;
    v9 = v152;
    sub_242079800(&v150, v151);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9) == (_QWORD)v147
      && v10 == *((_QWORD *)&v147 + 1))
    {
      v1 = v113;
      sub_242097384();
      goto LABEL_23;
    }
    v1 = sub_2420A17E8();
    v12 = sub_242097830();
    if ((v1 & 1) != 0)
      break;
    v7 = sub_242079824((uint64_t)&v150);
    v6 += 40;
    if (!--v5)
    {
      sub_242079F20();
      sub_2420A1EFC();
      v3 = v153;
      goto LABEL_36;
    }
  }
  sub_2420A21B4(v12, v13, v14, v15, v16, v17, v18, v19, v108, v111, v113);
LABEL_23:
  swift_bridgeObjectRelease();
  sub_2420A2268(&v150);
  v24 = sub_2420797C0((uint64_t *)&unk_254399948);
  v3 = v153;
  if ((sub_2420A17A4() & 1) == 0)
  {
LABEL_35:
    sub_242079F20();
    sub_242097384();
LABEL_36:
    sub_2420A1FB4();
    sub_242132AD4();
    sub_2420A26C4();
    *(_QWORD *)&v150 = 0xD000000000000024;
    *((_QWORD *)&v150 + 1) = 0x8000000242139390;
    sub_2420A1A1C();
    goto LABEL_37;
  }
  sub_2420A1B60();
  *(_QWORD *)(v153 + 40) = &type metadata for TokenizerBase;
  *(_QWORD *)(v153 + 48) = sub_24209F1E4();
  v25 = sub_24207F538();
  *(_QWORD *)(v153 + 16) = v25;
  sub_2420A1A84((void *)(v25 + 16), &v150);
  sub_2420A1B40(&v147);
  if (!v148)
  {
    sub_242097384();
    sub_24207E9D0((uint64_t)&v147, &qword_25719F010);
LABEL_42:
    *(_QWORD *)&v147 = 0;
    *((_QWORD *)&v147 + 1) = 0xE000000000000000;
    sub_242132AD4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v147 = 0xD00000000000002ELL;
    *((_QWORD *)&v147 + 1) = 0x80000002421393C0;
    sub_2420A1F3C();
    sub_2421327EC();
    sub_242079F20();
LABEL_60:
    swift_bridgeObjectRelease();
    LODWORD(v1) = v147;
    sub_2420987B0();
    v71 = sub_2420970E4();
    sub_2420A26F4(v71, v72);
LABEL_38:
    swift_willThrow();
    sub_2420A2688();
    if ((_DWORD)v1)
      sub_242079824(v3 + 16);
    goto LABEL_17;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242097384();
    goto LABEL_42;
  }
  v26 = *(_QWORD *)(v1 + 16);
  if (!v26)
    goto LABEL_58;
  v109 = v24;
  v27 = sub_2420A1CA0();
  v28 = v111;
  while (1)
  {
    sub_2420A1F2C(v27, (uint64_t)&v147);
    if (sub_2420A2130(&v147) == (_QWORD)v115 && v29 == *((_QWORD *)&v115 + 1))
    {
      v31 = v113;
      sub_242097384();
      goto LABEL_45;
    }
    v31 = sub_2420A17E8();
    v32 = sub_242097830();
    if ((v31 & 1) != 0)
      break;
    v27 = sub_242079824((uint64_t)&v147);
    v28 += 40;
    if (!--v26)
    {
      sub_242079F20();
      sub_2420A1EFC();
      v3 = v153;
      goto LABEL_59;
    }
  }
  sub_2420A21B4(v32, v33, v34, v35, v36, v37, v38, v39, v24, v111, v113);
LABEL_45:
  swift_bridgeObjectRelease();
  sub_242079E50(&v147, (uint64_t)v149);
  v3 = v153;
  if ((sub_2420A17A4() & 1) == 0)
  {
LABEL_58:
    sub_242079F20();
    sub_242097384();
LABEL_59:
    *(_QWORD *)&v147 = 0;
    *((_QWORD *)&v147 + 1) = 0xE000000000000000;
    sub_242132AD4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v147 = 0xD000000000000023;
    *((_QWORD *)&v147 + 1) = 0x80000002421393F0;
    sub_2420A1A1C();
    goto LABEL_60;
  }
  sub_2420A1B60();
  *(_QWORD *)(v153 + 80) = &type metadata for LLMModelBase;
  *(_QWORD *)(v153 + 88) = sub_24209F224();
  v42 = sub_24207F538();
  *(_QWORD *)(v153 + 56) = v42;
  sub_2420A1A84((void *)(v42 + 16), &v147);
  sub_2420A1B40(&v115);
  if (v117)
  {
    v47 = sub_2420A17A4();
    v55 = v111;
    if ((v47 & 1) != 0)
    {
      v56 = v144;
      v57 = *(_QWORD *)(v31 + 16);
      if (v57)
      {
        v58 = v111;
        v59 = v143;
        v60 = sub_2420A1CA0();
        while (1)
        {
          sub_2420A1F2C(v60, (uint64_t)&v115);
          if (sub_2420A2130(&v115) == v59 && v61 == v56)
          {
            v31 = v113;
            sub_242097384();
            goto LABEL_65;
          }
          v31 = sub_2420A17E8();
          v63 = sub_242097830();
          if ((v31 & 1) != 0)
            break;
          v60 = sub_242079824((uint64_t)&v115);
          v58 += 40;
          if (!--v57)
          {
            v31 = v113;
            sub_242097384();
            v3 = v153;
            v55 = v111;
            goto LABEL_57;
          }
        }
        sub_2420A21B4(v63, v64, v65, v66, v67, v68, v69, v70, v109, v111, v113);
LABEL_65:
        v3 = v153;
        v55 = v111;
        v73 = swift_bridgeObjectRelease();
        sub_2420A2488(v73, v74, v75, v76, v77, v78, v79, v80, v109, v111, v113, v115, v116, v117, v118, v119, v120, v121, v122,
          v123,
          v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139,
          v140,
          v141[0]);
        sub_2420A1B60();
      }
      else
      {
LABEL_57:
        sub_2420A2618();
        sub_2420A1B60();
      }
      if (v142)
      {
        if ((sub_2420A17A4() & 1) != 0)
        {
          v145 = &type metadata for LLMAdapterBase;
          v146 = sub_24209F2A4();
          v143 = sub_24207F538();
          sub_2420A1A84((void *)(v143 + 16), &v115);
LABEL_71:
          sub_2420A13C0((uint64_t)&v143, v3 + 96, &qword_25719E5F8);
          goto LABEL_72;
        }
      }
      else
      {
        sub_24207E9D0((uint64_t)v141, &qword_254399C58);
      }
      sub_2420A2560();
      goto LABEL_71;
    }
  }
  else
  {
    sub_2420A20D8(v43, &qword_25719F010, v44, v45, v46);
    v55 = v111;
  }
  *(_QWORD *)(v153 + 128) = 0;
  *(_OWORD *)(v153 + 96) = 0u;
  *(_OWORD *)(v153 + 112) = 0u;
LABEL_72:
  sub_2420A1B18(v47, v48, v49, v50, v51, v52, v53, v54, v109, v111, v113, v115);
  sub_242079F20();
  if (v117)
  {
    if ((sub_2420A17A4() & 1) != 0)
    {
      v81 = v144;
      v82 = *(_QWORD *)(v31 + 16);
      if (v82)
      {
        v83 = v143;
        v84 = sub_2420A1CA0();
        while (1)
        {
          sub_2420A20C4(v84, (uint64_t)&v115);
          if (sub_2420A210C(&v115) == v83 && v85 == v81)
          {
            sub_242097384();
            goto LABEL_89;
          }
          v87 = sub_242079EB8();
          v88 = sub_242097830();
          if ((v87 & 1) != 0)
            break;
          v84 = sub_242079824((uint64_t)&v115);
          v55 += 40;
          if (!--v82)
          {
            sub_242097384();
            v3 = v153;
            goto LABEL_83;
          }
        }
        sub_2420A21B4(v88, v89, v90, v91, v92, v93, v94, v95, v110, v112, v114);
LABEL_89:
        v100 = swift_bridgeObjectRelease();
        sub_2420A2488(v100, v101, v102, v103, v104, v105, v106, v107, v110, v112, v114, v115, v116, v117, v118, v119, v120, v121, v122,
          v123,
          v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139,
          v140,
          v141[0]);
        sub_242097384();
        sub_242079F20();
        v3 = v153;
      }
      else
      {
LABEL_83:
        sub_2420A2618();
        sub_242097384();
        sub_242079F20();
      }
      if (v142)
      {
        if ((sub_2420A17A4() & 1) != 0)
        {
          v145 = &type metadata for LLMDraftModelBase;
          v146 = sub_24209F264();
          v143 = sub_24207F538();
          sub_2420A1A84((void *)(v143 + 16), &v115);
LABEL_95:
          sub_2420A13C0((uint64_t)&v143, v3 + 136, &qword_25719E600);
          goto LABEL_17;
        }
      }
      else
      {
        sub_24207E9D0((uint64_t)v141, &qword_254399C58);
      }
      sub_2420A2560();
      goto LABEL_95;
    }
    sub_242097384();
  }
  else
  {
    v96 = sub_242097384();
    sub_2420A20D8(v96, &qword_25719F010, v97, v98, v99);
  }
  *(_QWORD *)(v3 + 168) = 0;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
LABEL_17:
  sub_2420970A0();
}

void LLMBundle.resources.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[4];
  uint64_t v52;
  uint64_t *v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_2420A2574();
  v3 = sub_2420A1EA8();
  v4 = sub_2420A19E8((uint64_t)v3);
  sub_2420A1E3C(v4, v5, v6, MEMORY[0x24BEE4AF8]);
  v57 = v7;
  sub_2420A2670();
  if (v10)
  {
    sub_2420A1E04(v1 + 1, v8, v9);
    v57 = v36;
  }
  sub_2420A1F94();
  MEMORY[0x24BDAC7A8](v11);
  sub_2420A18C8(v12, v51[0]);
  sub_2420A20E0();
  sub_2420A1FDC();
  v13 = sub_2420A1EA8();
  sub_2420A1A00((uint64_t)v13, v2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v37 = sub_2420A23C0();
    sub_24210B09C(v37, v38, v39, v40);
    v1 = v41;
    v57 = v41;
  }
  v14 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)(v1 + 16) >= v14 >> 1)
  {
    v42 = sub_2420A22C0(v14);
    sub_24210B09C(v42, v43, v44, v45);
    v57 = v46;
  }
  sub_2420A1F74();
  MEMORY[0x24BDAC7A8](v15);
  sub_2420A1A00((uint64_t)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v13);
  sub_2420A20E0();
  sub_2420A260C();
  v17 = v57;
  sub_2420A2328(v0 + 96, v18, &qword_25719E5F8);
  if (v52)
  {
    sub_2420A25F8();
    v20 = v55;
    v21 = v56;
    v22 = sub_242079800(v54, v55);
    v52 = v20;
    v13 = *(uint64_t **)(*(_QWORD *)(*(_QWORD *)(v21 + 8) + 8) + 8);
    v53 = v13;
    v23 = sub_2420A2320();
    sub_2420A1A00((uint64_t)v23, (uint64_t)v22);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2420A2528(0, *(_QWORD *)(v17 + 16) + 1);
      v17 = v47;
      v57 = v47;
    }
    v25 = *(_QWORD *)(v17 + 16);
    v24 = *(_QWORD *)(v17 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_2420A2528(v24 > 1, v25 + 1);
      v57 = v48;
    }
    sub_2420A1F74();
    MEMORY[0x24BDAC7A8](v26);
    sub_2420A1A00((uint64_t)v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v23);
    sub_24207E964();
    sub_2420A1D3C();
  }
  else
  {
    sub_2420A2318(v19, &qword_25719E5F8);
  }
  sub_2420A2328(v0 + 136, v28, &qword_25719E600);
  if (v52)
  {
    sub_2420A1F44();
    v53 = *(uint64_t **)(*(_QWORD *)(v0 + 8) + 8);
    v30 = sub_2420A2320();
    sub_2420A1DA4((uint64_t)v30, (uint64_t)v13);
    v31 = v57;
    if ((sub_2420A2604() & 1) == 0)
    {
      sub_2420A2540(0, *(_QWORD *)(v31 + 16) + 1);
      v31 = v49;
      v57 = v49;
    }
    v33 = *(_QWORD *)(v31 + 16);
    v32 = *(_QWORD *)(v31 + 24);
    if (v33 >= v32 >> 1)
    {
      sub_2420A2540(v32 > 1, v33 + 1);
      v57 = v50;
    }
    sub_2420A1E74();
    MEMORY[0x24BDAC7A8](v34);
    sub_2420A1C34(v35, v51[0]);
    sub_2420A2340();
    sub_24207E964();
    sub_2420A1D3C();
  }
  else
  {
    sub_2420A2318(v29, &qword_25719E600);
  }
  sub_242097670();
}

uint64_t sub_24209BE98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_2420A1858() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x657A696E656B6F74 && a2 == 0xE900000000000072;
    if (v6 || (sub_2420A1858() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65646F4D65736162 && a2 == 0xE90000000000006CLL;
      if (v7 || (sub_2420A1858() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        sub_2420A22A0();
        v8 = v2 && a2 == 0xE700000000000000;
        if (v8 || (sub_2420A1858() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x646F4D7466617264 && a2 == 0xEA00000000006C65)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          sub_2420A1858();
          sub_2420A1984();
          if ((a1 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_24209C054()
{
  sub_24209F378();
  return sub_242132DBC();
}

uint64_t sub_24209C07C()
{
  sub_24209F378();
  return sub_242132DC8();
}

void LLMBundle.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE v8[216];
  _BYTE v9[216];
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  _BYTE v14[216];
  _BYTE v15[216];
  __int128 v16;
  ValueMetadata *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_242097180();
  v2 = v1;
  v7 = v3;
  sub_2420797C0(&qword_25719E6F0);
  sub_2420A1E74();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420A23D8(v2);
  sub_24209F378();
  sub_2420A1E80();
  if (v0)
  {
    sub_242079824((uint64_t)v2);
  }
  else
  {
    sub_2420A1A4C();
    sub_2420A1A44(&qword_25719E708, v5, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
    sub_2420A1EB4();
    v22 = v16;
    v17 = &type metadata for TokenizerBase;
    v18 = sub_24209F1E4();
    *(_QWORD *)&v16 = sub_24207F538();
    sub_242096774();
    sub_2420A1DD8();
    sub_242079E50(&v16, (uint64_t)&v23);
    v15[0] = 2;
    v17 = &type metadata for LLMModelBase;
    v18 = sub_24209F224();
    *(_QWORD *)&v16 = sub_24207F538();
    sub_242096850();
    sub_2420A1DAC();
    sub_242079E50(&v16, (uint64_t)&v24);
    sub_2420969E8();
    sub_2420A19D0();
    sub_2420A1A8C((uint64_t)&v16, (uint64_t)v14);
    sub_2420A1A8C((uint64_t)v14, (uint64_t)v15);
    sub_2420A24FC((uint64_t)v15);
    if (v6)
    {
      v21 = 0;
      v20 = 0u;
      v19 = 0u;
    }
    else
    {
      *((_QWORD *)&v20 + 1) = &type metadata for LLMAdapterBase;
      v21 = sub_24209F2A4();
      *(_QWORD *)&v19 = sub_24207F538();
      sub_2420A1A84((void *)(v19 + 16), v15);
    }
    sub_2420A13C0((uint64_t)&v19, (uint64_t)&v25, &qword_25719E5F8);
    sub_2420968D0();
    sub_2420A19D0();
    sub_2420A1A8C((uint64_t)&v10, (uint64_t)v8);
    sub_2420A1A8C((uint64_t)v8, (uint64_t)v9);
    sub_2420A24FC((uint64_t)v9);
    if (v6)
    {
      sub_2420A17D8();
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
    }
    else
    {
      *((_QWORD *)&v12 + 1) = &type metadata for LLMDraftModelBase;
      v13 = sub_24209F264();
      *(_QWORD *)&v11 = sub_24207F538();
      sub_2420A1A84((void *)(v11 + 16), v9);
      sub_2420A17D8();
    }
    sub_2420A13C0((uint64_t)&v11, (uint64_t)&v26, &qword_25719E600);
    sub_24209F3B4((uint64_t)&v22, v7);
    sub_2420A22F0();
    sub_24209F3E8((uint64_t)&v22);
  }
  sub_2420970A0();
}

void LLMBundle.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  const char *v6;
  uint64_t v7;
  __n128 *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v14[80];
  _QWORD v15[27];
  _QWORD v16[5];
  __n128 v17[13];
  _BYTE v18[216];
  __n128 v19[13];
  uint64_t v20;
  _BYTE v21[216];
  uint64_t v22;
  _BYTE v23[216];
  _BYTE v24[216];
  _QWORD v25[33];

  sub_242097180();
  sub_2420A1ECC();
  sub_2420797C0(&qword_25719E720);
  sub_2420A1A08();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420A195C();
  sub_24209F378();
  sub_2420A1904();
  v3 = v1[1];
  v25[0] = *v1;
  v25[1] = v3;
  v24[0] = 0;
  sub_2420A1A4C();
  sub_2420A1A44(&qword_25719E728, v4, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
  sub_2420A18EC();
  if (v0)
    goto LABEL_7;
  sub_2420A1A94();
  sub_2420797C0(&qword_25719E730);
  if (sub_2420A17A4())
  {
    sub_2420A1A84(v24, v25);
    sub_2420A1A84(v23, v25);
    v21[0] = 1;
    sub_242096B40();
    sub_2420A18EC();
    sub_24209F414((uint64_t)v24);
    sub_24207EA48((uint64_t)(v1 + 7), (uint64_t)&v22);
    sub_2420797C0(&qword_25719E738);
    if (sub_2420A17A4())
    {
      sub_2420A1A84(v21, v23);
      sub_2420A1A84(&v20, v23);
      sub_2420A2510();
      sub_242096B7C();
      sub_2420A18EC();
      sub_24209F414((uint64_t)v21);
      sub_2420A1554((uint64_t)(v1 + 12), (uint64_t)v15, &qword_25719E5F8);
      if (v15[3])
      {
        sub_2420797C0(&qword_25719E748);
        if (!sub_2420A17A4())
        {
          sub_2420987B0();
          sub_2420970E4();
          sub_2420A2094();
          v11 = v10 - 2;
LABEL_24:
          sub_2420A1F84(v9, v11);
          goto LABEL_6;
        }
        sub_2420A1A84(v17, v18);
        nullsub_1(v17);
        v8 = v17;
      }
      else
      {
        sub_24207E9D0((uint64_t)v15, &qword_25719E5F8);
        sub_24209F50C(v18);
        v8 = (__n128 *)v18;
      }
      sub_2420A13C0((uint64_t)v8, (uint64_t)v19, &qword_25719E710);
      sub_2420A13C0((uint64_t)v19, (uint64_t)v18, &qword_25719E710);
      sub_242096BF4();
      sub_2420A1990();
      sub_24209F514(v19);
      sub_2420A1554((uint64_t)(v1 + 17), (uint64_t)v16, &qword_25719E600);
      if (!v16[3])
      {
        sub_24207E9D0((uint64_t)v16, &qword_25719E600);
        sub_24209F50C(v15);
        v12 = v15;
        goto LABEL_22;
      }
      sub_2420797C0(&qword_25719E740);
      if (sub_2420A17A4())
      {
        sub_2420A1A84(v14, v15);
        nullsub_1(v14);
        v12 = v14;
LABEL_22:
        sub_2420A13C0((uint64_t)v12, (uint64_t)v17, &qword_25719E718);
        sub_2420A13C0((uint64_t)v17, (uint64_t)v15, &qword_25719E718);
        v14[0] = 4;
        sub_242096BB8();
        sub_2420A1990();
        sub_2420A177C();
        sub_24209F514(v17);
        goto LABEL_8;
      }
      sub_2420987B0();
      sub_2420970E4();
      sub_2420A2094();
      v11 = v13 + 1;
      goto LABEL_24;
    }
    sub_2420987B0();
    sub_2420970E4();
    v6 = "LLMBundle baseModel is wrong type";
  }
  else
  {
    sub_2420987B0();
    sub_2420970E4();
    v6 = "LLMBundle tokenizer is wrong type";
  }
  sub_2420A1CA8(v5, (uint64_t)v6);
LABEL_6:
  *(_BYTE *)(v7 + 16) = 0;
  sub_2420A197C();
LABEL_7:
  sub_2420A177C();
LABEL_8:
  sub_2420A1EC0();
  sub_2420970A0();
}

#error "24209C934: call analysis failed (funcsize=81)"

void LLMBundle.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_2420A1D74();
  a23 = v24;
  a24 = v25;
  sub_2420A19A0();
  sub_2420A19B0();
  sub_24207F700();
  LLMBundle.resources.getter();
  if (*(_QWORD *)(v26 + 16))
  {
    do
    {
      sub_2420A1AC4(v26);
      sub_2420A1824(&a10);
      sub_2420A1880();
      sub_242097830();
      v26 = sub_2420A1CFC((uint64_t)&a10);
    }
    while (!v27);
    sub_24207F78C();
    sub_2420A1868();
  }
  else
  {
    sub_2420A17C0();
  }
}

void LLMBundle.hashValue.getter()
{
  sub_242099A40();
}

void sub_24209CABC()
{
  LLMBundle.init(from:)();
}

void sub_24209CAD0()
{
  LLMBundle.encode(to:)();
}

void sub_24209CAF0()
{
  sub_242099AA8();
}

void AssetBackedDiffusionBundle.adapter.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2420A1554(v1 + 56, a1, &qword_25719E608);
}

void AssetBackedDiffusionBundle.init(with:resources:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  __int128 v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;

  sub_242097180();
  sub_2420A2440();
  v3 = v2;
  sub_2420A1B58(&v38);
  if (!v39)
  {
    sub_242079F20();
    sub_24207E9D0((uint64_t)&v38, &qword_25719F010);
LABEL_16:
    sub_2420A2390();
    sub_2420A1FA4();
    swift_bridgeObjectRelease();
    sub_2420A2174();
    *(_QWORD *)&v38 = v10;
    *((_QWORD *)&v38 + 1) = 0x80000002421392A0;
    sub_2420A1D9C();
    sub_2420A2738();
    sub_242097268();
    sub_242097384();
    v11 = v38;
    sub_2420987B0();
    v12 = sub_2420970E4();
    *v13 = v11;
    sub_2420A17F8(v12, (uint64_t)v13);
    goto LABEL_37;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242079F20();
    goto LABEL_16;
  }
  v4 = *((_QWORD *)&v30 + 1);
  *v3 = v30;
  v3[1] = v4;
  sub_2420A1B58(&v38);
  if (!v39)
  {
    sub_242079F20();
    sub_24207E9D0((uint64_t)&v38, &qword_25719F010);
LABEL_19:
    sub_2420A2390();
    sub_242132AD4();
    sub_2420A2738();
    sub_2420A1D9C();
    sub_2420A2738();
    sub_242097268();
LABEL_36:
    swift_bridgeObjectRelease();
    v24 = v38;
    sub_2420987B0();
    v25 = sub_2420970E4();
    *v26 = v24;
    sub_2420A17F8(v25, (uint64_t)v26);
    sub_2420A2688();
    goto LABEL_37;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242079F20();
    goto LABEL_19;
  }
  v5 = *(_QWORD *)(v0 + 16);
  if (!v5)
    goto LABEL_34;
  v40 = v3;
  v6 = sub_2420A21C0();
  v29 = v1;
  while (1)
  {
    sub_2420A23F0(v6, (uint64_t)&v38);
    if (sub_2420A1AF4(&v38) == (_QWORD)v30 && v7 == *((_QWORD *)&v30 + 1))
      break;
    v9 = sub_2420A17E8();
    sub_242097830();
    if ((v9 & 1) != 0)
      goto LABEL_21;
    v6 = sub_242079824((uint64_t)&v38);
    v1 += 40;
    if (!--v5)
    {
      sub_242097268();
      sub_2420A1EFC();
      goto LABEL_35;
    }
  }
  sub_242079F20();
LABEL_21:
  v14 = v40;
  swift_bridgeObjectRelease();
  sub_2420A2268(&v38);
  sub_2420797C0(&qword_2543990D0);
  if ((sub_2420A17A4() & 1) == 0)
  {
LABEL_34:
    sub_242097268();
    sub_242079F20();
LABEL_35:
    sub_2420A2390();
    sub_242132AD4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v38 = 0xD00000000000002FLL;
    *((_QWORD *)&v38 + 1) = 0x8000000242139510;
    sub_2420A1A1C();
    goto LABEL_36;
  }
  sub_2420A1B60();
  v40[5] = &type metadata for AssetBackedDiffusionModelBase;
  v40[6] = sub_24209F66C();
  v15 = sub_24207F538();
  v40[2] = v15;
  sub_242097098((void *)(v15 + 16), &v38);
  sub_2420A1B58(&v30);
  sub_242097268();
  if (v31)
  {
    if ((sub_2420A17A4() & 1) != 0)
    {
      v16 = *((_QWORD *)&v35 + 1);
      v17 = *(_QWORD *)(v0 + 16);
      if (v17)
      {
        v18 = v35;
        v19 = swift_bridgeObjectRetain();
        v20 = v29;
        while (1)
        {
          sub_2420A20C4(v19, (uint64_t)&v30);
          if (sub_2420A1AF4(&v30) == v18 && v21 == v16)
            break;
          v23 = sub_242079EB8();
          sub_242097830();
          if ((v23 & 1) != 0)
            goto LABEL_42;
          v19 = sub_242079824((uint64_t)&v30);
          v20 += 40;
          if (!--v17)
          {
            sub_242079F20();
            v14 = v40;
            goto LABEL_33;
          }
        }
        sub_242079F20();
LABEL_42:
        swift_bridgeObjectRelease();
        sub_242079E50(&v30, (uint64_t)&v32);
        sub_242079F20();
        sub_242097268();
        v14 = v40;
      }
      else
      {
LABEL_33:
        v34 = 0;
        v32 = 0u;
        v33 = 0u;
        sub_242079F20();
        sub_242097268();
      }
      if (*((_QWORD *)&v33 + 1))
      {
        if ((sub_2420A17A4() & 1) != 0)
        {
          *((_QWORD *)&v36 + 1) = &type metadata for AssetBackedDiffusionAdapterBase;
          v37 = sub_24209F6AC();
          *(_QWORD *)&v35 = sub_24207F538();
          sub_242097098((void *)(v35 + 16), &v30);
LABEL_48:
          sub_2420A13C0((uint64_t)&v35, (uint64_t)(v14 + 7), &qword_25719E608);
          goto LABEL_37;
        }
      }
      else
      {
        sub_24207E9D0((uint64_t)&v32, &qword_25719E610);
      }
      v35 = 0u;
      v36 = 0u;
      v37 = 0;
      goto LABEL_48;
    }
    sub_242079F20();
  }
  else
  {
    v27 = sub_242079F20();
    sub_2420A1F24(v27, &qword_25719F010, v28);
  }
  sub_2420A26E0();
LABEL_37:
  sub_2420970A0();
}

void AssetBackedDiffusionBundle.resources.getter()
{
  uint64_t v0;

  AssetBackedDiffusionBundle.assetBackedResources.getter();
  sub_2420A1F34(v0);
  sub_242097384();
  sub_24207F428();
}

void AssetBackedDiffusionBundle.assetBackedResources.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  uint64_t v38;
  _BYTE v39[32];
  uint64_t v40;
  uint64_t v41;

  sub_2420A2598();
  v40 = *(_QWORD *)(v1 + 8);
  v4 = sub_2420A22B8();
  v5 = sub_2420A19E8((uint64_t)v4);
  sub_2420A1E2C(v5, v6, v7, MEMORY[0x24BEE4AF8]);
  v41 = v8;
  sub_2420A2670();
  if (v11)
  {
    sub_2420A1DF4(v2 + 1, v9, v10);
    v41 = v24;
  }
  sub_2420A1F94();
  MEMORY[0x24BDAC7A8](v12);
  sub_2420A18C8(v13, v35);
  sub_2420A1E14(v2, v3, &v41);
  sub_242079824((uint64_t)v39);
  v14 = v41;
  sub_2420A1554(v0 + 56, (uint64_t)v37, &qword_25719E608);
  if (v38)
  {
    sub_2420A2024();
    v15 = sub_2420A26A4();
    sub_2420A2054((uint64_t)v15);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v25 = sub_2420A23F8();
      sub_24210B0B0(v25, v26, v27, v28);
      v14 = v29;
      v41 = v29;
    }
    v16 = *(_QWORD *)(v14 + 24);
    if (*(_QWORD *)(v14 + 16) >= v16 >> 1)
    {
      v30 = sub_2420A22D8(v16);
      sub_24210B0B0(v30, v31, v32, v33);
      v41 = v34;
    }
    sub_2420A1E74();
    MEMORY[0x24BDAC7A8](v17);
    sub_2420A1C58(v18, v36);
    v19 = sub_2420A2288();
    sub_24210C624(v19, v20, v21, v22, v23);
    sub_242079824((uint64_t)v37);
    sub_242079824((uint64_t)v39);
  }
  else
  {
    sub_24207E9D0((uint64_t)v37, &qword_25719E608);
  }
  sub_2420973B4();
}

uint64_t sub_24209D190()
{
  sub_24209F6EC();
  return sub_242132DBC();
}

uint64_t sub_24209D1B8()
{
  sub_24209F6EC();
  return sub_242132DC8();
}

void AssetBackedDiffusionBundle.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v8[72];
  _BYTE v9[184];
  __int128 v10;
  ValueMetadata *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;

  sub_242097180();
  v2 = v1;
  v4 = v3;
  sub_2420797C0(&qword_25719E750);
  sub_2420A1E74();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420A23D8(v2);
  sub_24209F6EC();
  sub_2420A1E80();
  if (v0)
  {
    sub_242079824((uint64_t)v2);
  }
  else
  {
    sub_2420A1A4C();
    v9[0] = 0;
    sub_2420A1A44(&qword_25719E768, v6, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
    sub_2420A1BC4();
    sub_2420A265C();
    v11 = &type metadata for AssetBackedDiffusionModelBase;
    v12 = sub_24209F66C();
    *(_QWORD *)&v10 = sub_24207F538();
    sub_24208D7B4();
    sub_2420A1BA0();
    sub_242079E50(&v10, (uint64_t)&v17);
    sub_2420A2510();
    sub_24208D248();
    sub_2420A1D54();
    sub_2420A1A8C((uint64_t)&v10, (uint64_t)v8);
    sub_2420A1A8C((uint64_t)v8, (uint64_t)v9);
    sub_2420A24FC((uint64_t)v9);
    if (v7)
    {
      sub_2420A1848();
      v15 = 0;
      v13 = 0u;
      v14 = 0u;
    }
    else
    {
      *((_QWORD *)&v14 + 1) = &type metadata for AssetBackedDiffusionAdapterBase;
      v15 = sub_24209F6AC();
      *(_QWORD *)&v13 = sub_24207F538();
      sub_242097098((void *)(v13 + 16), v9);
      sub_2420A1848();
    }
    sub_2420A13C0((uint64_t)&v13, (uint64_t)&v18, &qword_25719E608);
    sub_24209F728((uint64_t)v16, v4);
    sub_242079824((uint64_t)v2);
    sub_24209F75C((uint64_t)v16);
  }
  sub_2420A1EC0();
  sub_2420970A0();
}

void AssetBackedDiffusionBundle.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  _BYTE v10[72];
  _BYTE v11[184];
  _QWORD v12[5];
  __n128 v13[11];
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[232];

  sub_242097180();
  sub_2420A1ECC();
  sub_2420797C0(&qword_25719E778);
  sub_2420A1A08();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420A195C();
  sub_24209F6EC();
  sub_2420A1904();
  sub_2420A2460();
  sub_2420A1A4C();
  sub_2420A1A44(&qword_25719E780, v3, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
  sub_2420A18EC();
  if (!v0)
  {
    sub_2420A1A94();
    sub_2420797C0(&qword_25719E788);
    if (sub_2420A17A4())
    {
      sub_242097098(&v15, v16);
      sub_242097098(&v14, v16);
      sub_24208D7F0();
      sub_2420A18EC();
      sub_2420A22F8();
      sub_2420A1554(v1 + 56, (uint64_t)v12, &qword_25719E608);
      if (!v12[3])
      {
        sub_24207E9D0((uint64_t)v12, &qword_25719E608);
        sub_24209F1A0(v11);
        v6 = v11;
        goto LABEL_12;
      }
      sub_2420797C0(&qword_25719E790);
      if (sub_2420A17A4())
      {
        sub_242097098(v10, v11);
        nullsub_1(v10);
        v6 = v10;
LABEL_12:
        sub_2420A13C0((uint64_t)v6, (uint64_t)v13, &qword_25719E770);
        sub_2420A25EC(v7, v8, &qword_25719E770);
        v10[0] = 2;
        sub_24208D284();
        sub_2420A1990();
        sub_2420A177C();
        sub_24209F1A8(v13);
        goto LABEL_7;
      }
      sub_2420987B0();
      sub_2420970E4();
      sub_2420A1CA8(v9, (uint64_t)"DiffusionBundle adapter is wrong type");
    }
    else
    {
      sub_2420987B0();
      sub_2420970E4();
      sub_2420A1F84(v4, 0xD000000000000027);
    }
    *(_BYTE *)(v5 + 16) = 0;
    sub_2420A197C();
  }
  sub_2420A177C();
LABEL_7:
  sub_2420A1EC0();
  sub_2420970A0();
}

#error "24209D6E0: call analysis failed (funcsize=85)"

void AssetBackedDiffusionBundle.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  sub_2420A1D74();
  a23 = v24;
  a24 = v25;
  sub_2420A19A0();
  sub_2420A19B0();
  sub_24207F700();
  AssetBackedDiffusionBundle.assetBackedResources.getter();
  v27 = sub_2420A206C(v26);
  v28 = sub_242097830();
  if (*(_QWORD *)(v27 + 16))
  {
    do
    {
      sub_2420A1AC4(v28);
      sub_2420A1824(&a10);
      sub_2420A1880();
      sub_242097830();
      v28 = sub_2420A1CFC((uint64_t)&a10);
    }
    while (!v29);
    sub_24207F78C();
    sub_2420A1868();
  }
  else
  {
    sub_2420A17C0();
  }
}

void AssetBackedDiffusionBundle.hashValue.getter()
{
  sub_242099A40();
}

void sub_24209D878()
{
  AssetBackedDiffusionBundle.init(from:)();
}

void sub_24209D88C()
{
  AssetBackedDiffusionBundle.encode(to:)();
}

void sub_24209D8B4()
{
  sub_242099AA8();
}

void DiffusionBundle.rawID.getter()
{
  sub_2420A2168();
  sub_24207F428();
}

void DiffusionBundle.baseModel.getter(uint64_t a1@<X8>)
{
  sub_2420A215C(a1);
}

void DiffusionBundle.adapter.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2420A1554(v1 + 56, a1, &qword_25719E798);
}

void DiffusionBundle.init(id:baseModel:adapter:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_24209D934(a1, a2, a3, (void (*)(uint64_t, _QWORD *))sub_242079E50, &qword_25719E798, a4);
}

void sub_24209D934(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, _QWORD *)@<X3>, uint64_t *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;

  v9 = a1[1];
  *a6 = *a1;
  a6[1] = v9;
  a4(a2, a6 + 2);
  sub_2420A13C0(a3, (uint64_t)(a6 + 7), a5);
}

void DiffusionBundle.init(with:resources:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  __int128 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  unint64_t v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;

  sub_242097180();
  v1 = v0;
  v3 = v2;
  sub_2420A1B58(&v121);
  if (!v122)
  {
    v22 = sub_242097384();
    sub_2420A24F4(v22, &qword_25719F010, v23, v24, v25, v26, v27, v28, v86, v87, v89, v91, *((uint64_t *)&v91 + 1), v92, v93, v94, v95, v96, v97,
      v98,
      v99,
      v100,
      v101,
      v102,
      v103,
      v104,
      v105,
      v106,
      v107,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      *((uint64_t *)&v113 + 1),
      v114,
      *((uint64_t *)&v114 + 1),
      v115,
      v116,
      v117,
      *((uint64_t *)&v117 + 1),
      v118,
      *((uint64_t *)&v118 + 1),
      v119,
      v120,
      v121);
LABEL_16:
    sub_2420A1D8C();
    sub_2420A1FA4();
    sub_2420A2208();
    sub_2420A2174();
    *(_QWORD *)&v121 = v29;
    *((_QWORD *)&v121 + 1) = 0x80000002421392A0;
    sub_2420A1D9C();
    sub_2420A2210();
    sub_242097268();
    sub_242097384();
    v30 = v121;
    sub_2420987B0();
    v31 = sub_2420970E4();
    *v32 = v30;
    sub_2420A17F8(v31, (uint64_t)v32);
    goto LABEL_38;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242097384();
    goto LABEL_16;
  }
  v4 = *((_QWORD *)&v91 + 1);
  *v3 = v91;
  v3[1] = v4;
  sub_2420A1EDC();
  sub_2420A1B58(v5);
  if (!v122)
  {
    v33 = sub_242097384();
    sub_2420A24F4(v33, &qword_25719F010, v34, v35, v36, v37, v38, v39, v86, v87, v89, v91, *((uint64_t *)&v91 + 1), v92, v93, v94, v95, v96, v97,
      v98,
      v99,
      v100,
      v101,
      v102,
      v103,
      v104,
      v105,
      v106,
      v107,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      *((uint64_t *)&v113 + 1),
      v114,
      *((uint64_t *)&v114 + 1),
      v115,
      v116,
      v117,
      *((uint64_t *)&v117 + 1),
      v118,
      *((uint64_t *)&v118 + 1),
      v119,
      v120,
      v121);
LABEL_19:
    sub_2420A1D8C();
    sub_242132AD4();
    sub_2420A2210();
    sub_2420A1D9C();
    sub_2420A2210();
    sub_242097268();
LABEL_37:
    swift_bridgeObjectRelease();
    v65 = v121;
    sub_2420987B0();
    v66 = sub_2420970E4();
    *v67 = v65;
    sub_2420A17F8(v66, (uint64_t)v67);
    sub_2420A2688();
    goto LABEL_38;
  }
  if ((sub_2420A17A4() & 1) == 0)
  {
    sub_242097384();
    goto LABEL_19;
  }
  v6 = *(_QWORD *)(v1 + 16);
  if (!v6)
    goto LABEL_35;
  v124 = v3;
  v7 = v1 + 32;
  v90 = v1;
  v8 = sub_2420A1CA0();
  v88 = v1 + 32;
  while (1)
  {
    sub_2420A23F0(v8, (uint64_t)&v121);
    v10 = v122;
    v9 = v123;
    sub_242079800(&v121, v122);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v10, v9) == (_QWORD)v91 && v11 == *((_QWORD *)&v91 + 1))
    {
      v13 = v90;
      sub_242097384();
      goto LABEL_22;
    }
    v13 = sub_2420A17E8();
    v14 = sub_242097830();
    if ((v13 & 1) != 0)
      break;
    v8 = sub_242079824((uint64_t)&v121);
    v7 += 40;
    if (!--v6)
    {
      sub_242097268();
      sub_2420A1EFC();
      goto LABEL_36;
    }
  }
  sub_2420A21B4(v14, v15, v16, v17, v18, v19, v20, v21, v86, v88, v90);
LABEL_22:
  v40 = v124;
  swift_bridgeObjectRelease();
  sub_2420A2268(&v121);
  sub_2420797C0((uint64_t *)&unk_254399948);
  if ((sub_2420A17A4() & 1) == 0)
  {
LABEL_35:
    sub_242097268();
    sub_242097384();
LABEL_36:
    sub_2420A1D8C();
    sub_242132AD4();
    sub_2420A2208();
    *(_QWORD *)&v121 = 0xD00000000000002FLL;
    *((_QWORD *)&v121 + 1) = 0x8000000242139510;
    sub_2420A1A1C();
    goto LABEL_37;
  }
  sub_2420A1B60();
  v124[5] = &type metadata for DiffusionModelBase;
  v124[6] = sub_24209F788();
  v41 = sub_24207F538();
  v124[2] = v41;
  sub_242097098((void *)(v41 + 16), &v121);
  sub_2420A1B58(&v91);
  sub_242097268();
  if (v93)
  {
    if ((sub_2420A17A4() & 1) != 0)
    {
      v42 = *((_QWORD *)&v117 + 1);
      v43 = *(_QWORD *)(v13 + 16);
      if (v43)
      {
        v44 = v117;
        v45 = sub_2420A1CA0();
        v46 = v88;
        while (1)
        {
          sub_2420A20C4(v45, (uint64_t)&v91);
          if (sub_2420A210C(&v91) == v44 && v47 == v42)
          {
            sub_242097384();
            goto LABEL_44;
          }
          v49 = sub_242079EB8();
          v50 = sub_242097830();
          if ((v49 & 1) != 0)
            break;
          v45 = sub_242079824((uint64_t)&v91);
          v46 += 40;
          if (!--v43)
          {
            sub_242097384();
            v40 = v124;
            goto LABEL_34;
          }
        }
        sub_2420A21B4(v50, v51, v52, v53, v54, v55, v56, v57, v86, v88, v90);
LABEL_44:
        v72 = swift_bridgeObjectRelease();
        sub_2420A20CC(v72, v73, v74, v75, v76, v77, v78, v79, v86, v88, v90, v91, v92, v93, v94, v95, v96, v97, v98,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113);
        sub_242097384();
        v58 = sub_242097268();
        v40 = v124;
      }
      else
      {
LABEL_34:
        v115 = 0;
        v113 = 0u;
        v114 = 0u;
        sub_242097384();
        v58 = sub_242097268();
      }
      if (*((_QWORD *)&v114 + 1))
      {
        v80 = sub_2420A17A4();
        if ((v80 & 1) != 0)
        {
          *((_QWORD *)&v118 + 1) = &type metadata for DiffusionAdapterBase;
          v119 = sub_24209F7C8();
          *(_QWORD *)&v117 = sub_24207F538();
          v80 = (uint64_t)sub_242097098((void *)(v117 + 16), &v91);
LABEL_50:
          sub_2420A2754(v80, (uint64_t)(v40 + 7), &qword_25719E798, v81, v82, v83, v84, v85, v86, v88, v90, v91, *((uint64_t *)&v91 + 1), v92, v93, v94, v95, v96, v97,
            v98,
            v99,
            v100,
            v101,
            v102,
            v103,
            v104,
            v105,
            v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            *((uint64_t *)&v113 + 1),
            v114,
            *((uint64_t *)&v114 + 1),
            v115,
            v116,
            v117);
          goto LABEL_38;
        }
      }
      else
      {
        sub_2420A2708(v58, &qword_254399C58, v59, v60, v61, v62, v63, v64, v86, v88, v90, v91, *((uint64_t *)&v91 + 1), v92, v93, v94, v95, v96, v97,
          v98,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113);
      }
      v117 = 0u;
      v118 = 0u;
      v119 = 0;
      goto LABEL_50;
    }
    sub_242097384();
  }
  else
  {
    v68 = sub_242097384();
    sub_2420A20D8(v68, &qword_25719F010, v69, v70, v71);
  }
  sub_2420A26E0();
LABEL_38:
  sub_2420970A0();
}

void DiffusionBundle.resources.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;
  _BYTE v33[32];
  uint64_t v34;
  uint64_t v35;

  sub_2420A2598();
  v34 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8);
  v3 = sub_2420A22B8();
  v4 = sub_2420A19E8((uint64_t)v3);
  sub_2420A1E3C(v4, v5, v6, MEMORY[0x24BEE4AF8]);
  v35 = v7;
  sub_2420A2670();
  if (v10)
  {
    sub_2420A1E04(v2 + 1, v8, v9);
    v35 = v18;
  }
  sub_2420A1F94();
  MEMORY[0x24BDAC7A8](v11);
  sub_2420A18C8(v12, v29);
  sub_2420A20E0();
  sub_242079824((uint64_t)v33);
  v13 = v35;
  sub_2420A1554(v0 + 56, (uint64_t)v31, &qword_25719E798);
  if (v32)
  {
    sub_2420A2024();
    v14 = sub_2420A26A4();
    sub_2420A2054((uint64_t)v14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v19 = sub_2420A23F8();
      sub_24210B09C(v19, v20, v21, v22);
      v13 = v23;
      v35 = v23;
    }
    v15 = *(_QWORD *)(v13 + 24);
    if (*(_QWORD *)(v13 + 16) >= v15 >> 1)
    {
      v24 = sub_2420A22D8(v15);
      sub_24210B09C(v24, v25, v26, v27);
      v35 = v28;
    }
    sub_2420A1E74();
    MEMORY[0x24BDAC7A8](v16);
    sub_2420A1C58(v17, v30);
    sub_2420A2288();
    sub_24207E964();
    sub_242079824((uint64_t)v31);
    sub_242079824((uint64_t)v33);
  }
  else
  {
    sub_24207E9D0((uint64_t)v31, &qword_25719E798);
  }
  sub_2420973B4();
}

BOOL sub_24209DFCC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24209DFDC()
{
  return sub_242132D80();
}

uint64_t sub_24209E000(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_2420A1858() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65646F4D65736162 && a2 == 0xE90000000000006CLL;
    if (v6 || (sub_2420A1858() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      sub_2420A22A0();
      if (v2 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        sub_2420A1858();
        sub_2420A1984();
        if ((a1 & 1) != 0)
          return 2;
        else
          return 3;
      }
    }
  }
}

uint64_t sub_24209E104()
{
  return 3;
}

void sub_24209E10C()
{
  sub_2420974F0();
  sub_242132D80();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_24209E13C(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 0x65646F4D65736162;
  return 0x72657470616461;
}

BOOL sub_24209E18C(char *a1, char *a2)
{
  return sub_24209DFCC(*a1, *a2);
}

void sub_24209E198()
{
  sub_24209E10C();
}

uint64_t sub_24209E1B0()
{
  return sub_24209DFDC();
}

uint64_t sub_24209E1B8()
{
  char *v0;

  return sub_24209E13C(*v0);
}

uint64_t sub_24209E1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24209E000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24209E1E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24209E104();
  *a1 = result;
  return result;
}

uint64_t sub_24209E208()
{
  sub_24209F884();
  return sub_242132DBC();
}

uint64_t sub_24209E230()
{
  sub_24209F884();
  return sub_242132DC8();
}

void DiffusionBundle.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v8[72];
  _BYTE v9[184];
  __int128 v10;
  ValueMetadata *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;

  sub_242097180();
  v2 = v1;
  v4 = v3;
  sub_2420797C0(&qword_25719E7A8);
  sub_2420A1E74();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420A23D8(v2);
  sub_24209F884();
  sub_2420A1E80();
  if (v0)
  {
    sub_242079824((uint64_t)v2);
  }
  else
  {
    sub_2420A1A4C();
    v9[0] = 0;
    sub_2420A1A44(&qword_25719E7C0, v6, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
    sub_2420A1BC4();
    sub_2420A265C();
    v11 = &type metadata for DiffusionModelBase;
    v12 = sub_24209F788();
    *(_QWORD *)&v10 = sub_24207F538();
    sub_24208D4E4();
    sub_2420A1BA0();
    sub_242079E50(&v10, (uint64_t)&v17);
    sub_2420A2510();
    sub_24208CF6C();
    sub_2420A1D54();
    sub_2420A1A8C((uint64_t)&v10, (uint64_t)v8);
    sub_2420A1A8C((uint64_t)v8, (uint64_t)v9);
    sub_2420A24FC((uint64_t)v9);
    if (v7)
    {
      sub_2420A1848();
      v15 = 0;
      v13 = 0u;
      v14 = 0u;
    }
    else
    {
      *((_QWORD *)&v14 + 1) = &type metadata for DiffusionAdapterBase;
      v15 = sub_24209F7C8();
      *(_QWORD *)&v13 = sub_24207F538();
      sub_242097098((void *)(v13 + 16), v9);
      sub_2420A1848();
    }
    sub_2420A13C0((uint64_t)&v13, (uint64_t)&v18, &qword_25719E798);
    sub_24209F8C0((uint64_t)v16, v4);
    sub_242079824((uint64_t)v2);
    sub_24209F8F4((uint64_t)v16);
  }
  sub_2420A1EC0();
  sub_2420970A0();
}

void DiffusionBundle.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  _BYTE v10[72];
  _BYTE v11[184];
  _QWORD v12[5];
  __n128 v13[11];
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[232];

  sub_242097180();
  sub_2420A1ECC();
  sub_2420797C0(&qword_25719E7D0);
  sub_2420A1A08();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420A195C();
  sub_24209F884();
  sub_2420A1904();
  sub_2420A2460();
  sub_2420A1A4C();
  sub_2420A1A44(&qword_25719E7D8, v3, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
  sub_2420A18EC();
  if (!v0)
  {
    sub_2420A1A94();
    sub_2420797C0(&qword_25719E7E0);
    if (sub_2420A17A4())
    {
      sub_242097098(&v15, v16);
      sub_242097098(&v14, v16);
      sub_24208D520();
      sub_2420A18EC();
      sub_2420A22F8();
      sub_2420A1554(v1 + 56, (uint64_t)v12, &qword_25719E798);
      if (!v12[3])
      {
        sub_24207E9D0((uint64_t)v12, &qword_25719E798);
        sub_24209F1A0(v11);
        v6 = v11;
        goto LABEL_12;
      }
      sub_2420797C0(&qword_25719E7E8);
      if (sub_2420A17A4())
      {
        sub_242097098(v10, v11);
        nullsub_1(v10);
        v6 = v10;
LABEL_12:
        sub_2420A13C0((uint64_t)v6, (uint64_t)v13, &qword_25719E7C8);
        sub_2420A25EC(v7, v8, &qword_25719E7C8);
        v10[0] = 2;
        sub_24208CFA8();
        sub_2420A1990();
        sub_2420A177C();
        sub_24209F1A8(v13);
        goto LABEL_7;
      }
      sub_2420987B0();
      sub_2420970E4();
      sub_2420A1CA8(v9, (uint64_t)"DiffusionBundle adapter is wrong type");
    }
    else
    {
      sub_2420987B0();
      sub_2420970E4();
      sub_2420A1F84(v4, 0xD000000000000027);
    }
    *(_BYTE *)(v5 + 16) = 0;
    sub_2420A197C();
  }
  sub_2420A177C();
LABEL_7:
  sub_2420A1EC0();
  sub_2420970A0();
}

#error "24209E750: call analysis failed (funcsize=81)"

void DiffusionBundle.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_2420A1D74();
  a23 = v24;
  a24 = v25;
  sub_2420A19A0();
  sub_2420A19B0();
  sub_24207F700();
  DiffusionBundle.resources.getter();
  if (*(_QWORD *)(v26 + 16))
  {
    do
    {
      sub_2420A1AC4(v26);
      sub_2420A1824(&a10);
      sub_2420A1880();
      sub_242097830();
      v26 = sub_2420A1CFC((uint64_t)&a10);
    }
    while (!v27);
    sub_24207F78C();
    sub_2420A1868();
  }
  else
  {
    sub_2420A17C0();
  }
}

void DiffusionBundle.hashValue.getter()
{
  sub_242099A40();
}

void sub_24209E8D8()
{
  DiffusionBundle.init(from:)();
}

void sub_24209E8EC()
{
  DiffusionBundle.encode(to:)();
}

void sub_24209E90C()
{
  sub_242099AA8();
}

void static Catalog.ResourceBundle.deserialize(json:resourceBundleType:resources:assetBacked:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71[2];
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_242097180();
  a19 = v21;
  a20 = v28;
  v29 = v24;
  v30 = v23;
  v31 = v27;
  a10 = MEMORY[0x24BEE4AF8];
  v32 = *(_QWORD *)(v25 + 16);
  v67 = v25;
  if (v32)
  {
    v61 = v26;
    v62 = v23;
    v63 = v24;
    v64 = v22;
    v65 = v20;
    v66 = v27;
    v33 = v25 + 32;
    v34 = swift_bridgeObjectRetain();
    do
    {
      sub_2420A20C4(v34, (uint64_t)&v72);
      v36 = v74;
      v35 = v75;
      sub_242079800(&v72, v74);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v35 + 64))(v36, v35) & 1) == 0
        || (sub_24207EA48((uint64_t)&v72, (uint64_t)v71),
            sub_2420797C0((uint64_t *)&unk_254399948),
            sub_2420797C0(&qword_2543990D0),
            (sub_2420A17A4() & 1) == 0))
      {
        v70 = 0;
        v68 = 0u;
        v69 = 0u;
      }
      sub_242079824((uint64_t)&v72);
      if (*((_QWORD *)&v69 + 1))
      {
        sub_242079E50(&v68, (uint64_t)v71);
        sub_242079E50(v71, (uint64_t)&v68);
        v37 = a10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2420A2534(0, *(_QWORD *)(v37 + 16) + 1);
          v37 = v46;
          a10 = v46;
        }
        v39 = *(_QWORD *)(v37 + 16);
        v38 = *(_QWORD *)(v37 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_2420A2534(v38 > 1, v39 + 1);
          a10 = v47;
        }
        v40 = *((_QWORD *)&v69 + 1);
        v41 = v70;
        v42 = sub_242079844((uint64_t)&v68, *((uint64_t *)&v69 + 1));
        MEMORY[0x24BDAC7A8](v42);
        v44 = (char *)&v60 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v45 + 16))(v44);
        sub_24210C624(v39, (uint64_t)v44, &a10, v40, v41);
        v34 = sub_242079824((uint64_t)&v68);
      }
      else
      {
        sub_24207E9D0((uint64_t)&v68, &qword_25719E610);
      }
      v33 += 40;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    v31 = v66;
    v29 = v63;
    v30 = v62;
    LOBYTE(v26) = v61;
  }
  if ((v26 & 1) != 0)
  {
    v48 = v30 == 0x657A6974696E6153 && v29 == 0xE900000000000072;
    if (v48 || (sub_2420A17E8() & 1) != 0)
    {
      *(_QWORD *)(v31 + 24) = &type metadata for AssetBackedSanitizerBundle;
      *(_QWORD *)(v31 + 32) = sub_24209FB5C();
      v49 = sub_24207F538();
      sub_2420A1DC8(v49);
      sub_2420A2218();
      AssetBackedSanitizerBundle.init(with:resources:)();
      goto LABEL_28;
    }
    if (v30 == 0xD000000000000013 && v29 == 0x80000002421395A0 || (sub_2420A17E8() & 1) != 0)
    {
      *(_QWORD *)(v31 + 24) = &type metadata for AssetBackedLLMBundle;
      *(_QWORD *)(v31 + 32) = sub_242082C5C();
      v52 = sub_24207F538();
      sub_2420A1DC8(v52);
      sub_2420A2218();
      AssetBackedLLMBundle.init(with:resources:)();
      goto LABEL_28;
    }
    if (v30 == 0xD00000000000001ALL && v29 == 0x80000002421395C0 || (sub_2420A17E8() & 1) != 0)
    {
      *(_QWORD *)(v31 + 24) = &type metadata for AssetBackedDiffusionBundle;
      *(_QWORD *)(v31 + 32) = sub_242082C9C();
      v54 = sub_24207F538();
      sub_2420A1DC8(v54);
      sub_2420A2218();
      AssetBackedDiffusionBundle.init(with:resources:)();
      goto LABEL_28;
    }
    sub_242097830();
LABEL_48:
    v72 = 0;
    v73 = 0xE000000000000000;
    sub_242132AD4();
    swift_bridgeObjectRelease();
    v72 = 0xD00000000000001DLL;
    v73 = 0x80000002421395E0;
    sub_2420A1A1C();
    v56 = v72;
    v57 = v73;
    sub_2420987B0();
    v58 = sub_2420970E4();
    *v59 = v56;
    v59[1] = v57;
    sub_2420A17F8(v58, (uint64_t)v59);
    goto LABEL_30;
  }
  sub_242097830();
  v50 = v30 == 0x657A6974696E6153 && v29 == 0xE900000000000072;
  if (v50 || (sub_2420A17E8() & 1) != 0)
  {
    *(_QWORD *)(v31 + 24) = &type metadata for SanitizerBundle;
    *(_QWORD *)(v31 + 32) = sub_242082D98();
    v51 = sub_24207F538();
    sub_2420A1B68(v51);
    sub_242079F18();
    sub_2420A2228();
    SanitizerBundle.init(with:resources:)();
    goto LABEL_28;
  }
  if (v30 == 0xD000000000000013 && v29 == 0x80000002421395A0 || (sub_2420A17E8() & 1) != 0)
  {
    *(_QWORD *)(v31 + 24) = &type metadata for LLMBundle;
    *(_QWORD *)(v31 + 32) = sub_242082D0C();
    v53 = sub_24207F538();
    sub_2420A1B68(v53);
    sub_242079F18();
    sub_2420A2228();
    LLMBundle.init(with:resources:)();
    goto LABEL_28;
  }
  if ((v30 != 0xD00000000000001ALL || v29 != 0x80000002421395C0) && (sub_2420A17E8() & 1) == 0)
    goto LABEL_48;
  *(_QWORD *)(v31 + 24) = &type metadata for DiffusionBundle;
  *(_QWORD *)(v31 + 32) = sub_24209FAD8();
  v55 = sub_24207F538();
  sub_2420A1B68(v55);
  sub_242079F18();
  sub_2420A2228();
  DiffusionBundle.init(with:resources:)();
LABEL_28:
  if (v20)
    sub_2420967B0(v31);
LABEL_30:
  sub_2420970A0();
}

unint64_t sub_24209EE74()
{
  unint64_t result;

  result = qword_25719E628;
  if (!qword_25719E628)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CFE8, &type metadata for AssetBackedSanitizerBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E628);
  }
  return result;
}

uint64_t sub_24209EEB0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AssetBackedSanitizerBundle(a2, a1, &type metadata for AssetBackedSanitizerBundle);
  return a2;
}

uint64_t sub_24209EEE4(uint64_t a1)
{
  destroy for SanitizerBundle(a1);
  return a1;
}

unint64_t sub_24209EF10()
{
  unint64_t result;

  result = qword_254397110;
  if (!qword_254397110)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBase, &type metadata for SanitizerBase);
    atomic_store(result, (unint64_t *)&qword_254397110);
  }
  return result;
}

unint64_t sub_24209EF50()
{
  unint64_t result;

  result = qword_25719E660;
  if (!qword_25719E660)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CF98, &type metadata for SanitizerBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E660);
  }
  return result;
}

uint64_t sub_24209EF8C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AssetBackedSanitizerBundle(a2, a1, &type metadata for SanitizerBundle);
  return a2;
}

uint64_t sub_24209EFC0(uint64_t a1)
{
  destroy for SanitizerBundle(a1);
  return a1;
}

unint64_t sub_24209EFEC()
{
  unint64_t result;

  result = qword_254397230;
  if (!qword_254397230)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedTokenizerBase, &type metadata for AssetBackedTokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397230);
  }
  return result;
}

unint64_t sub_24209F02C()
{
  unint64_t result;

  result = qword_2543971F8;
  if (!qword_2543971F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMModelBase, &type metadata for AssetBackedLLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543971F8);
  }
  return result;
}

unint64_t sub_24209F06C()
{
  unint64_t result;

  result = qword_254397878;
  if (!qword_254397878)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMDraftModelBase, &type metadata for AssetBackedLLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397878);
  }
  return result;
}

unint64_t sub_24209F0AC()
{
  unint64_t result;

  result = qword_254397270;
  if (!qword_254397270)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMAdapterBase, &type metadata for AssetBackedLLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254397270);
  }
  return result;
}

unint64_t sub_24209F0EC()
{
  unint64_t result;

  result = qword_25719E698;
  if (!qword_25719E698)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CF48, &type metadata for AssetBackedLLMBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E698);
  }
  return result;
}

uint64_t sub_24209F128(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_24209F140(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AssetBackedLLMBundle(a2, a1, &type metadata for AssetBackedLLMBundle);
  return a2;
}

uint64_t sub_24209F174(uint64_t a1)
{
  destroy for AssetBackedLLMBundle(a1, &type metadata for AssetBackedLLMBundle);
  return a1;
}

void sub_24209F1A0(void *a1)
{
  bzero(a1, 0xB8uLL);
}

uint64_t sub_24209F1A8(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_2420A1D14(a1);
  sub_2420A2724();
  sub_24209F9F0(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13, v14, v15);
  return v1;
}

unint64_t sub_24209F1E4()
{
  unint64_t result;

  result = qword_254397158;
  if (!qword_254397158)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerBase, &type metadata for TokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397158);
  }
  return result;
}

unint64_t sub_24209F224()
{
  unint64_t result;

  result = qword_2543970D8;
  if (!qword_2543970D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543970D8);
  }
  return result;
}

unint64_t sub_24209F264()
{
  unint64_t result;

  result = qword_2543978B8;
  if (!qword_2543978B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelBase, &type metadata for LLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_2543978B8);
  }
  return result;
}

unint64_t sub_24209F2A4()
{
  unint64_t result;

  result = qword_254399BD8;
  if (!qword_254399BD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254399BD8);
  }
  return result;
}

uint64_t sub_24209F2E4()
{
  uint64_t v0;

  sub_242082FE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_24209F378()
{
  unint64_t result;

  result = qword_25719E6F8;
  if (!qword_25719E6F8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CEF8, &type metadata for LLMBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E6F8);
  }
  return result;
}

uint64_t sub_24209F3B4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AssetBackedLLMBundle(a2, a1, &type metadata for LLMBundle);
  return a2;
}

uint64_t sub_24209F3E8(uint64_t a1)
{
  destroy for AssetBackedLLMBundle(a1, &type metadata for LLMBundle);
  return a1;
}

uint64_t sub_24209F414(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRelease();
  sub_242097268();
  sub_242079F20();
  sub_24207F700();
  sub_24207F78C();
  swift_bridgeObjectRelease();
  sub_242084E14(v4, v2);
  sub_242097830();
  sub_2420A2388();
  sub_2420A2654();
  sub_2420A264C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_24209F50C(void *a1)
{
  bzero(a1, 0xD8uLL);
}

uint64_t sub_24209F514(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_2420A1D14(a1);
  sub_2420A2724();
  sub_24209F558(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13, v14, v15);
  return v1;
}

uint64_t sub_24209F558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242097830();
    sub_242097384();
    sub_242084E14(a12, a13);
    sub_2420A2388();
    sub_2420A2654();
    swift_bridgeObjectRelease();
    sub_2420A264C();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24209F66C()
{
  unint64_t result;

  result = qword_254397040;
  if (!qword_254397040)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionModelBase, &type metadata for AssetBackedDiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397040);
  }
  return result;
}

unint64_t sub_24209F6AC()
{
  unint64_t result;

  result = qword_2543973B0;
  if (!qword_2543973B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionAdapterBase, &type metadata for AssetBackedDiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_2543973B0);
  }
  return result;
}

unint64_t sub_24209F6EC()
{
  unint64_t result;

  result = qword_25719E758;
  if (!qword_25719E758)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CEA8, &type metadata for AssetBackedDiffusionBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E758);
  }
  return result;
}

uint64_t sub_24209F728(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AssetBackedDiffusionBundle(a2, a1, &type metadata for AssetBackedDiffusionBundle);
  return a2;
}

uint64_t sub_24209F75C(uint64_t a1)
{
  destroy for AssetBackedDiffusionBundle(a1, &type metadata for AssetBackedDiffusionBundle);
  return a1;
}

unint64_t sub_24209F788()
{
  unint64_t result;

  result = qword_254397078;
  if (!qword_254397078)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionModelBase, &type metadata for DiffusionModelBase);
    atomic_store(result, (unint64_t *)&qword_254397078);
  }
  return result;
}

unint64_t sub_24209F7C8()
{
  unint64_t result;

  result = qword_25719E7A0;
  if (!qword_25719E7A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionAdapterBase, &type metadata for DiffusionAdapterBase);
    atomic_store(result, (unint64_t *)&qword_25719E7A0);
  }
  return result;
}

uint64_t sub_24209F808()
{
  uint64_t v0;

  sub_242082FE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_24209F884()
{
  unint64_t result;

  result = qword_25719E7B0;
  if (!qword_25719E7B0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CE58, &type metadata for DiffusionBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E7B0);
  }
  return result;
}

uint64_t sub_24209F8C0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AssetBackedDiffusionBundle(a2, a1, &type metadata for DiffusionBundle);
  return a2;
}

uint64_t sub_24209F8F4(uint64_t a1)
{
  destroy for AssetBackedDiffusionBundle(a1, &type metadata for DiffusionBundle);
  return a1;
}

uint64_t sub_24209F920(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRelease();
  sub_242079F20();
  sub_24207F700();
  sub_24207F78C();
  sub_242097830();
  sub_242097268();
  sub_242084E14(v4, v2);
  sub_2420A2388();
  sub_2420A2654();
  sub_2420A264C();
  return a1;
}

uint64_t sub_24209F9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_242097268();
    sub_242079F20();
    sub_24207F700();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242084E14(a12, a13);
    swift_bridgeObjectRelease();
    sub_2420A2388();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24209FAD8()
{
  unint64_t result;

  result = qword_25719E7F0;
  if (!qword_25719E7F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionBundle, &type metadata for DiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_25719E7F0);
  }
  return result;
}

uint64_t sub_24209FB24()
{
  uint64_t v0;

  sub_242082FE4();
  sub_242082FDC();
  if (*(_QWORD *)(v0 + 96))
    sub_242079824(v0 + 72);
  return swift_deallocObject();
}

unint64_t sub_24209FB5C()
{
  unint64_t result;

  result = qword_25719E7F8;
  if (!qword_25719E7F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBundle, &type metadata for AssetBackedSanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_25719E7F8);
  }
  return result;
}

uint64_t sub_24209FB9C()
{
  sub_242082FE4();
  sub_242082FDC();
  return swift_deallocObject();
}

unint64_t sub_24209FBC0(uint64_t a1)
{
  unint64_t result;

  result = sub_24209FB5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24209FBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209FBF8, (uint64_t (*)(void))sub_24209FC34);
}

unint64_t sub_24209FBF8()
{
  unint64_t result;

  result = qword_25719E800;
  if (!qword_25719E800)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBundle, &type metadata for AssetBackedSanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_25719E800);
  }
  return result;
}

unint64_t sub_24209FC34()
{
  unint64_t result;

  result = qword_25719E808;
  if (!qword_25719E808)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBundle, &type metadata for AssetBackedSanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_25719E808);
  }
  return result;
}

void sub_24209FC70()
{
  sub_2420A0228(&qword_25719E810, &qword_25719E630, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
}

unint64_t sub_24209FCA0()
{
  unint64_t result;

  result = qword_25719E818;
  if (!qword_25719E818)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBundle, &type metadata for AssetBackedSanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_25719E818);
  }
  return result;
}

unint64_t sub_24209FCDC(uint64_t a1)
{
  unint64_t result;

  result = sub_242082D98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24209FD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209FD14, (uint64_t (*)(void))sub_24209FD50);
}

unint64_t sub_24209FD14()
{
  unint64_t result;

  result = qword_254397178;
  if (!qword_254397178)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBundle, &type metadata for SanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_254397178);
  }
  return result;
}

unint64_t sub_24209FD50()
{
  unint64_t result;

  result = qword_254397188;
  if (!qword_254397188)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBundle, &type metadata for SanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_254397188);
  }
  return result;
}

void sub_24209FD8C()
{
  sub_2420A0228(&qword_25719E820, &qword_25719E668, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
}

unint64_t sub_24209FDBC()
{
  unint64_t result;

  result = qword_254397180;
  if (!qword_254397180)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBundle, &type metadata for SanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_254397180);
  }
  return result;
}

unint64_t sub_24209FDF8(uint64_t a1)
{
  unint64_t result;

  result = sub_242082C5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24209FE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209FE30, (uint64_t (*)(void))sub_24209FE6C);
}

unint64_t sub_24209FE30()
{
  unint64_t result;

  result = qword_2543998E0;
  if (!qword_2543998E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMBundle, &type metadata for AssetBackedLLMBundle);
    atomic_store(result, (unint64_t *)&qword_2543998E0);
  }
  return result;
}

unint64_t sub_24209FE6C()
{
  unint64_t result;

  result = qword_2543998F0;
  if (!qword_2543998F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMBundle, &type metadata for AssetBackedLLMBundle);
    atomic_store(result, (unint64_t *)&qword_2543998F0);
  }
  return result;
}

void sub_24209FEA8()
{
  sub_2420A0228(&qword_25719E828, &qword_25719E6A0, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
}

unint64_t sub_24209FED8()
{
  unint64_t result;

  result = qword_2543998E8;
  if (!qword_2543998E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMBundle, &type metadata for AssetBackedLLMBundle);
    atomic_store(result, (unint64_t *)&qword_2543998E8);
  }
  return result;
}

unint64_t sub_24209FF14(uint64_t a1)
{
  unint64_t result;

  result = sub_242082D0C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_24209FF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_24209FF4C, (uint64_t (*)(void))sub_24209FF88);
}

unint64_t sub_24209FF4C()
{
  unint64_t result;

  result = qword_254399C28;
  if (!qword_254399C28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMBundle, &type metadata for LLMBundle);
    atomic_store(result, (unint64_t *)&qword_254399C28);
  }
  return result;
}

unint64_t sub_24209FF88()
{
  unint64_t result;

  result = qword_254399C38;
  if (!qword_254399C38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMBundle, &type metadata for LLMBundle);
    atomic_store(result, (unint64_t *)&qword_254399C38);
  }
  return result;
}

void sub_24209FFC4()
{
  sub_2420A0228((unint64_t *)&qword_25719E830, &qword_25719E700, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
}

unint64_t sub_24209FFF4()
{
  unint64_t result;

  result = qword_254399C30;
  if (!qword_254399C30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMBundle, &type metadata for LLMBundle);
    atomic_store(result, (unint64_t *)&qword_254399C30);
  }
  return result;
}

unint64_t sub_2420A0030(uint64_t a1)
{
  unint64_t result;

  result = sub_242082C9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2420A0054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420A0068, (uint64_t (*)(void))sub_2420A00A4);
}

unint64_t sub_2420A0068()
{
  unint64_t result;

  result = qword_254397288;
  if (!qword_254397288)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionBundle, &type metadata for AssetBackedDiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_254397288);
  }
  return result;
}

unint64_t sub_2420A00A4()
{
  unint64_t result;

  result = qword_254397298;
  if (!qword_254397298)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionBundle, &type metadata for AssetBackedDiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_254397298);
  }
  return result;
}

void sub_2420A00E0()
{
  sub_2420A0228(&qword_25719E838, &qword_25719E760, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
}

unint64_t sub_2420A0110()
{
  unint64_t result;

  result = qword_254397290;
  if (!qword_254397290)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionBundle, &type metadata for AssetBackedDiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_254397290);
  }
  return result;
}

unint64_t sub_2420A014C(uint64_t a1)
{
  unint64_t result;

  result = sub_24209FAD8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2420A0170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420A0184, (uint64_t (*)(void))sub_2420A01C0);
}

unint64_t sub_2420A0184()
{
  unint64_t result;

  result = qword_25719E840;
  if (!qword_25719E840)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionBundle, &type metadata for DiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_25719E840);
  }
  return result;
}

unint64_t sub_2420A01C0()
{
  unint64_t result;

  result = qword_25719E848;
  if (!qword_25719E848)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionBundle, &type metadata for DiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_25719E848);
  }
  return result;
}

void sub_2420A01FC()
{
  sub_2420A0228(&qword_25719E850, &qword_25719E7B8, (uint64_t)&protocol conformance descriptor for ResourceBundleIdentifier<A>);
}

void sub_2420A0228(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_24208C304(a2);
    atomic_store(MEMORY[0x2426A40E0](a3, v5), a1);
  }
  sub_24207F428();
}

unint64_t sub_2420A0268()
{
  unint64_t result;

  result = qword_25719E858;
  if (!qword_25719E858)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionBundle, &type metadata for DiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_25719E858);
  }
  return result;
}

uint64_t *sub_2420A02AC(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for AssetBackedSanitizerBundle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void type metadata accessor for AssetBackedSanitizerBundle()
{
  sub_242082F08();
}

uint64_t destroy for SanitizerBundle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_242079824(a1 + 16);
}

void _s12ModelCatalog26AssetBackedSanitizerBundleVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  sub_24207F4E0();
}

void _s12ModelCatalog26AssetBackedSanitizerBundleVwca_0(_QWORD *a1, _QWORD *a2)
{
  a1[1] = sub_2420A2258(a1, a2);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  sub_2420A02AC(a1 + 2, a2 + 2);
  sub_242097A00();
}

void _s12ModelCatalog26AssetBackedSanitizerBundleVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  sub_242079824(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_24207F428();
}

uint64_t _s12ModelCatalog26AssetBackedSanitizerBundleVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2420977CC(v2);
}

uint64_t sub_2420A0594(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for SanitizerBundle()
{
  sub_242082F08();
}

void *initializeWithTake for AssetBackedLLMBundle(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

void type metadata accessor for AssetBackedLLMBundle()
{
  sub_242082F08();
}

void _s12ModelCatalog20AssetBackedLLMBundleVwxx_0()
{
  uint64_t v0;

  sub_2420A25E0();
  sub_242079824(v0 + 16);
  sub_242079824(v0 + 56);
  if (*(_QWORD *)(v0 + 120))
    sub_242079824(v0 + 96);
  if (*(_QWORD *)(v0 + 160))
    sub_2420A2154(v0 + 136);
  else
    sub_24207F428();
}

void _s12ModelCatalog20AssetBackedLLMBundleVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2420A1A54(a1, a2);
  sub_2420A2450();
  v4 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(v2 + 80) = v4;
  sub_2420A1E4C(v2 + 56, v3 + 56, v4);
  v5 = v2 + 96;
  v6 = v3 + 96;
  v7 = *(_QWORD *)(v3 + 120);
  if (v7)
  {
    v8 = *(_QWORD *)(v3 + 128);
    *(_QWORD *)(v2 + 120) = v7;
    *(_QWORD *)(v2 + 128) = v8;
    sub_2420A1E4C(v5, v6, v7);
  }
  else
  {
    sub_2420A20A4(v5, v6);
  }
  v9 = v2 + 136;
  v10 = v3 + 136;
  v11 = *(_QWORD *)(v3 + 160);
  if (v11)
  {
    v12 = *(_QWORD *)(v3 + 168);
    *(_QWORD *)(v2 + 160) = v11;
    *(_QWORD *)(v2 + 168) = v12;
    sub_2420A1E4C(v9, v10, v11);
  }
  else
  {
    sub_2420A20A4(v9, v10);
  }
  sub_24207F4E0();
}

void _s12ModelCatalog20AssetBackedLLMBundleVwca_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  a1[1] = sub_2420A2258(a1, a2);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  sub_2420A02AC(a1 + 2, a2 + 2);
  v4 = sub_2420A02AC(a1 + 7, a2 + 7);
  v6 = a2[15];
  if (a1[15])
  {
    if (v6)
    {
      v7 = (uint64_t)sub_2420A24D4(a1 + 12);
      goto LABEL_8;
    }
    sub_2420A2200();
  }
  else if (v6)
  {
    a1[15] = v6;
    a1[16] = a2[16];
    v7 = sub_2420A20F8((uint64_t)v4, v5, v6);
    goto LABEL_8;
  }
  sub_2420A26CC();
LABEL_8:
  v9 = a2[20];
  if (!a1[20])
  {
    if (v9)
    {
      a1[20] = v9;
      a1[21] = a2[21];
      sub_2420A20F8(v7, v8, v9);
      goto LABEL_15;
    }
LABEL_14:
    sub_2420A26CC();
    goto LABEL_15;
  }
  if (!v9)
  {
    sub_2420A2200();
    goto LABEL_14;
  }
  sub_2420A24D4(a1 + 17);
LABEL_15:
  sub_242097A00();
}

void _s12ModelCatalog20AssetBackedLLMBundleVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  sub_2420A200C(a1, a2);
  sub_242079824(v2 + 16);
  sub_2420A26B0();
  sub_242079824(v2 + 56);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v3 + 72);
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(v3 + 88);
  if (*(_QWORD *)(v2 + 120))
    sub_2420A2200();
  v4 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v2 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v2 + 112) = v4;
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v3 + 128);
  if (*(_QWORD *)(v2 + 160))
    sub_2420A2200();
  v5 = *(_OWORD *)(v3 + 152);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(v3 + 136);
  *(_OWORD *)(v2 + 152) = v5;
  *(_QWORD *)(v2 + 168) = *(_QWORD *)(v3 + 168);
  sub_242097A00();
}

uint64_t _s12ModelCatalog20AssetBackedLLMBundleVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 176))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2420977CC(v2);
}

uint64_t sub_2420A088C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for LLMBundle()
{
  sub_242082F08();
}

void *initializeWithTake for AssetBackedDiffusionBundle(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

void type metadata accessor for AssetBackedDiffusionBundle()
{
  sub_242082F08();
}

void _s12ModelCatalog26AssetBackedDiffusionBundleVwxx_0()
{
  uint64_t v0;

  sub_2420A25E0();
  sub_242079824(v0 + 16);
  if (*(_QWORD *)(v0 + 80))
    sub_2420A2154(v0 + 56);
  else
    sub_24207F428();
}

void _s12ModelCatalog26AssetBackedDiffusionBundleVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2420A1A54(a1, a2);
  sub_2420A2450();
  v4 = v2 + 56;
  v5 = v3 + 56;
  v6 = *(_QWORD *)(v3 + 80);
  if (v6)
  {
    v7 = *(_QWORD *)(v3 + 88);
    *(_QWORD *)(v2 + 80) = v6;
    *(_QWORD *)(v2 + 88) = v7;
    sub_2420A1E4C(v4, v5, v6);
  }
  else
  {
    sub_2420A20A4(v4, v5);
  }
  sub_24207F4E0();
}

void _s12ModelCatalog26AssetBackedDiffusionBundleVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)(a1 + 8) = sub_2420A2258((_QWORD *)a1, (_QWORD *)a2);
  swift_bridgeObjectRetain();
  sub_242097830();
  sub_2420A02AC((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  v4 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 80) = v4;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 56, a2 + 56);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 56);
    v6 = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v5;
    *(_OWORD *)(a1 + 72) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_242079824(a1 + 56);
    goto LABEL_7;
  }
  sub_2420A24D4((uint64_t *)(a1 + 56));
LABEL_8:
  sub_242097A00();
}

void _s12ModelCatalog26AssetBackedDiffusionBundleVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  sub_2420A200C(a1, a2);
  sub_242079824(v2 + 16);
  sub_2420A26B0();
  if (*(_QWORD *)(v2 + 80))
    sub_2420A2200();
  v4 = *(_OWORD *)(v3 + 72);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(v2 + 72) = v4;
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(v3 + 88);
  sub_242097A00();
}

uint64_t _s12ModelCatalog26AssetBackedDiffusionBundleVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2420977CC(v2);
}

uint64_t sub_2420A0ADC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for DiffusionBundle()
{
  sub_242082F08();
}

ValueMetadata *type metadata accessor for DiffusionBundle.CodingKeys()
{
  return &type metadata for DiffusionBundle.CodingKeys;
}

uint64_t _s12ModelCatalog12PreconditionV16PreconditionTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2420977CC((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2420977CC((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2420977CC((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return sub_2420977CC(v8);
}

uint64_t _s12ModelCatalog15DiffusionBundleV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2420A0C20 + 4 * byte_24214C1BA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2420A0C54 + 4 * byte_24214C1B5[v4]))();
}

uint64_t sub_2420A0C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420A0C60);
  return result;
}

_BYTE *sub_2420A0C68(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420A0C70);
  return sub_242097B10((_BYTE *)a1, a2 + 2);
}

ValueMetadata *type metadata accessor for AssetBackedDiffusionBundle.CodingKeys()
{
  return &type metadata for AssetBackedDiffusionBundle.CodingKeys;
}

ValueMetadata *type metadata accessor for LLMBundle.CodingKeys()
{
  return &type metadata for LLMBundle.CodingKeys;
}

uint64_t _s12ModelCatalog9LLMBundleV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2420977CC((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2420977CC((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2420977CC((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return sub_2420977CC(v8);
}

uint64_t _s12ModelCatalog9LLMBundleV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2420A0D78 + 4 * byte_24214C1C4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2420A0DAC + 4 * byte_24214C1BF[v4]))();
}

uint64_t sub_2420A0DB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420A0DB8);
  return result;
}

_BYTE *sub_2420A0DC0(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420A0DC8);
  return sub_242097B10((_BYTE *)a1, a2 + 4);
}

ValueMetadata *type metadata accessor for AssetBackedLLMBundle.CodingKeys()
{
  return &type metadata for AssetBackedLLMBundle.CodingKeys;
}

ValueMetadata *type metadata accessor for SanitizerBundle.CodingKeys()
{
  return &type metadata for SanitizerBundle.CodingKeys;
}

uint64_t _s12ModelCatalog15SanitizerBundleV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2420977CC((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2420977CC((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2420977CC((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return sub_2420977CC(v8);
}

uint64_t _s12ModelCatalog15SanitizerBundleV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2420A0ED0 + 4 * byte_24214C1CE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2420A0F04 + 4 * byte_24214C1C9[v4]))();
}

uint64_t sub_2420A0F08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420A0F10);
  return result;
}

_BYTE *sub_2420A0F18(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420A0F20);
  return sub_242097B10((_BYTE *)a1, a2 + 1);
}

ValueMetadata *type metadata accessor for AssetBackedSanitizerBundle.CodingKeys()
{
  return &type metadata for AssetBackedSanitizerBundle.CodingKeys;
}

unint64_t sub_2420A0F44()
{
  unint64_t result;

  result = qword_25719E860;
  if (!qword_25719E860)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CA98, &type metadata for AssetBackedSanitizerBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E860);
  }
  return result;
}

unint64_t sub_2420A0F84()
{
  unint64_t result;

  result = qword_25719E868;
  if (!qword_25719E868)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CB50, &type metadata for SanitizerBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E868);
  }
  return result;
}

unint64_t sub_2420A0FC4()
{
  unint64_t result;

  result = qword_25719E870;
  if (!qword_25719E870)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CC08, &type metadata for AssetBackedLLMBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E870);
  }
  return result;
}

unint64_t sub_2420A1004()
{
  unint64_t result;

  result = qword_25719E878;
  if (!qword_25719E878)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CCC0, &type metadata for LLMBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E878);
  }
  return result;
}

unint64_t sub_2420A1044()
{
  unint64_t result;

  result = qword_25719E880;
  if (!qword_25719E880)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CD78, &type metadata for AssetBackedDiffusionBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E880);
  }
  return result;
}

unint64_t sub_2420A1084()
{
  unint64_t result;

  result = qword_25719E888;
  if (!qword_25719E888)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CE30, &type metadata for DiffusionBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E888);
  }
  return result;
}

unint64_t sub_2420A10C4()
{
  unint64_t result;

  result = qword_25719E890;
  if (!qword_25719E890)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CDA0, &type metadata for DiffusionBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E890);
  }
  return result;
}

unint64_t sub_2420A1104()
{
  unint64_t result;

  result = qword_25719E898;
  if (!qword_25719E898)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CDC8, &type metadata for DiffusionBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E898);
  }
  return result;
}

unint64_t sub_2420A1144()
{
  unint64_t result;

  result = qword_25719E8A0;
  if (!qword_25719E8A0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CCE8, &type metadata for AssetBackedDiffusionBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8A0);
  }
  return result;
}

unint64_t sub_2420A1184()
{
  unint64_t result;

  result = qword_25719E8A8;
  if (!qword_25719E8A8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CD10, &type metadata for AssetBackedDiffusionBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8A8);
  }
  return result;
}

unint64_t sub_2420A11C4()
{
  unint64_t result;

  result = qword_25719E8B0;
  if (!qword_25719E8B0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CC30, &type metadata for LLMBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8B0);
  }
  return result;
}

unint64_t sub_2420A1204()
{
  unint64_t result;

  result = qword_25719E8B8;
  if (!qword_25719E8B8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CC58, &type metadata for LLMBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8B8);
  }
  return result;
}

unint64_t sub_2420A1244()
{
  unint64_t result;

  result = qword_25719E8C0;
  if (!qword_25719E8C0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CB78, &type metadata for AssetBackedLLMBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8C0);
  }
  return result;
}

unint64_t sub_2420A1284()
{
  unint64_t result;

  result = qword_25719E8C8;
  if (!qword_25719E8C8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CBA0, &type metadata for AssetBackedLLMBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8C8);
  }
  return result;
}

unint64_t sub_2420A12C4()
{
  unint64_t result;

  result = qword_25719E8D0;
  if (!qword_25719E8D0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CAC0, &type metadata for SanitizerBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8D0);
  }
  return result;
}

unint64_t sub_2420A1304()
{
  unint64_t result;

  result = qword_25719E8D8;
  if (!qword_25719E8D8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CAE8, &type metadata for SanitizerBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8D8);
  }
  return result;
}

unint64_t sub_2420A1344()
{
  unint64_t result;

  result = qword_25719E8E0;
  if (!qword_25719E8E0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CA08, &type metadata for AssetBackedSanitizerBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8E0);
  }
  return result;
}

unint64_t sub_2420A1384()
{
  unint64_t result;

  result = qword_25719E8E8;
  if (!qword_25719E8E8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214CA30, &type metadata for AssetBackedSanitizerBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E8E8);
  }
  return result;
}

void sub_2420A13C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_2420A2330(a1, a2, a3);
  sub_2420A262C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_24207F428();
}

unint64_t sub_2420A13EC()
{
  unint64_t result;

  result = qword_25719E8F0;
  if (!qword_25719E8F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionBundle, &type metadata for DiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_25719E8F0);
  }
  return result;
}

unint64_t sub_2420A1428()
{
  unint64_t result;

  result = qword_25719E8F8;
  if (!qword_25719E8F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionBundle, &type metadata for AssetBackedDiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_25719E8F8);
  }
  return result;
}

unint64_t sub_2420A1464()
{
  unint64_t result;

  result = qword_25719E900;
  if (!qword_25719E900)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMBundle, &type metadata for LLMBundle);
    atomic_store(result, (unint64_t *)&qword_25719E900);
  }
  return result;
}

unint64_t sub_2420A14A0()
{
  unint64_t result;

  result = qword_25719E908;
  if (!qword_25719E908)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMBundle, &type metadata for AssetBackedLLMBundle);
    atomic_store(result, (unint64_t *)&qword_25719E908);
  }
  return result;
}

unint64_t sub_2420A14DC()
{
  unint64_t result;

  result = qword_25719E910;
  if (!qword_25719E910)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBundle, &type metadata for SanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_25719E910);
  }
  return result;
}

unint64_t sub_2420A1518()
{
  unint64_t result;

  result = qword_25719E918;
  if (!qword_25719E918)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBundle, &type metadata for AssetBackedSanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_25719E918);
  }
  return result;
}

void sub_2420A1554(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_2420A2330(a1, a2, a3);
  sub_2420A262C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_24207F428();
}

unint64_t sub_2420A1580()
{
  unint64_t result;

  result = qword_25719E920;
  if (!qword_25719E920)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedDiffusionBundle, &type metadata for AssetBackedDiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_25719E920);
  }
  return result;
}

unint64_t sub_2420A15BC()
{
  unint64_t result;

  result = qword_25719E928;
  if (!qword_25719E928)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for DiffusionBundle, &type metadata for DiffusionBundle);
    atomic_store(result, (unint64_t *)&qword_25719E928);
  }
  return result;
}

unint64_t sub_2420A15F8()
{
  unint64_t result;

  result = qword_25719E930;
  if (!qword_25719E930)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedLLMBundle, &type metadata for AssetBackedLLMBundle);
    atomic_store(result, (unint64_t *)&qword_25719E930);
  }
  return result;
}

unint64_t sub_2420A1634()
{
  unint64_t result;

  result = qword_25719E938;
  if (!qword_25719E938)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMBundle, &type metadata for LLMBundle);
    atomic_store(result, (unint64_t *)&qword_25719E938);
  }
  return result;
}

unint64_t sub_2420A1670()
{
  unint64_t result;

  result = qword_25719E940;
  if (!qword_25719E940)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetBackedSanitizerBundle, &type metadata for AssetBackedSanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_25719E940);
  }
  return result;
}

unint64_t sub_2420A16AC()
{
  unint64_t result;

  result = qword_25719E948;
  if (!qword_25719E948)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for SanitizerBundle, &type metadata for SanitizerBundle);
    atomic_store(result, (unint64_t *)&qword_25719E948);
  }
  return result;
}

uint64_t sub_2420A1758(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242079800(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_2420A177C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

char *sub_2420A178C@<X0>(unint64_t a1@<X8>)
{
  int64_t v1;

  return sub_24210BF10((char *)(a1 > 1), v1, 1);
}

uint64_t sub_2420A17A4()
{
  return swift_dynamicCast();
}

char *sub_2420A17AC@<X0>(uint64_t a1@<X8>)
{
  return sub_24210BF10(0, a1 + 1, 1);
}

uint64_t sub_2420A17C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420A17D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_2420A17E8()
{
  return sub_242132D14();
}

uint64_t sub_2420A17F8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_2420A1824(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242079800(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_2420A1848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2420A1858()
{
  return sub_242132D14();
}

uint64_t sub_2420A1880()
{
  return sub_2421327D4();
}

char *sub_2420A1898()
{
  int64_t v0;

  return sub_24210BF10(0, v0, 0);
}

char *sub_2420A18B0()
{
  int64_t v0;

  return sub_24210BF10(0, v0, 0);
}

uint64_t sub_2420A18C8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char *, uint64_t, uint64_t);

  return v4((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t sub_2420A18EC()
{
  return sub_242132CF0();
}

void sub_2420A18F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_24207EA48(v9, (uint64_t)&a9);
}

uint64_t sub_2420A1904()
{
  return sub_242132DB0();
}

uint64_t sub_2420A1918()
{
  return swift_dynamicCast();
}

void sub_2420A192C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v3;
  v5 = v0 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v1;
  *(_QWORD *)(v5 + 40) = v2;
}

void sub_2420A1944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v3;
  v5 = v0 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v1;
  *(_QWORD *)(v5 + 40) = v2;
}

_QWORD *sub_2420A195C()
{
  _QWORD *v0;

  return sub_242079800(v0, v0[3]);
}

uint64_t sub_2420A197C()
{
  return swift_willThrow();
}

uint64_t sub_2420A1984()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420A1990()
{
  return sub_242132CC0();
}

uint64_t sub_2420A19A0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420A19B0()
{
  return sub_2421327D4();
}

uint64_t sub_2420A19C0()
{
  return sub_2421323FC();
}

uint64_t sub_2420A19D0()
{
  return sub_242132C30();
}

uint64_t sub_2420A19E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(a1, v2, v1);
}

uint64_t sub_2420A1A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_2420A1A1C()
{
  return sub_2421327EC();
}

void sub_2420A1A44(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_2420A0228(a1, v3, a3);
}

uint64_t sub_2420A1A4C()
{
  uint64_t *v0;

  return sub_2420797C0(v0);
}

uint64_t sub_2420A1A54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return swift_bridgeObjectRetain();
}

void *sub_2420A1A84(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD8uLL);
}

void sub_2420A1A8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_2420A13C0(a1, a2, v2);
}

void sub_2420A1A94()
{
  uint64_t v0;
  uint64_t v1;

  sub_24207EA48(v0 + 16, v1 - 128);
}

uint64_t sub_2420A1AA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242079800(a1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 8) + 24))(v2);
}

void sub_2420A1AC4(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  sub_24207EA48(v1, (uint64_t)va);
}

uint64_t _s12ModelCatalog15SanitizerBundleV2idAA08ResourceD10IdentifierVyACGvg_0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_2420A1ADC()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_2420AD16C(v0, v1);
}

uint64_t sub_2420A1AF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242079800(a1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 8) + 24))(v2);
}

void sub_2420A1B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12)
{
  uint64_t v12;

  sub_24210D280(v12, &a12);
}

void sub_2420A1B40(_OWORD *a1@<X8>)
{
  uint64_t v1;

  sub_24210D280(v1, a1);
}

uint64_t sub_2420A1B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_2420A1B58(_OWORD *a1@<X8>)
{
  uint64_t v1;

  sub_24210D280(v1, a1);
}

uint64_t sub_2420A1B60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420A1B68(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420A1B7C()
{
  return sub_242132C60();
}

uint64_t sub_2420A1BA0()
{
  return sub_242132C60();
}

uint64_t sub_2420A1BC4()
{
  return sub_242132C60();
}

uint64_t sub_2420A1BE8()
{
  return sub_242132C60();
}

uint64_t sub_2420A1C0C(uint64_t a1)
{
  sub_242079824(a1);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2420A1C20(uint64_t a1)
{
  sub_242079824(a1);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2420A1C34@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char *, uint64_t, uint64_t);

  return v4((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t sub_2420A1C58@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char *, uint64_t, uint64_t);

  return v4((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t sub_2420A1C7C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char *, uint64_t, uint64_t);

  return v4((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t sub_2420A1CA0()
{
  return swift_bridgeObjectRetain();
}

void sub_2420A1CA8(unint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  a1[1] = (a2 - 32) | 0x8000000000000000;
}

uint64_t sub_2420A1CBC()
{
  return sub_2421323D8();
}

uint64_t sub_2420A1CDC()
{
  return sub_242132CF0();
}

uint64_t sub_2420A1CFC(uint64_t a1)
{
  return sub_242079824(a1);
}

__n128 sub_2420A1D14(__n128 *a1)
{
  return a1[4];
}

uint64_t sub_2420A1D3C()
{
  uint64_t v0;

  sub_242079824(v0 - 168);
  return sub_242079824(v0 - 128);
}

uint64_t sub_2420A1D54()
{
  return sub_242132C30();
}

uint64_t sub_2420A1D9C()
{
  return sub_2421326FC();
}

uint64_t sub_2420A1DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_2420A1DAC()
{
  return sub_242132C60();
}

uint64_t sub_2420A1DC8(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420A1DD8()
{
  return sub_242132C60();
}

void sub_2420A1DF4(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
  sub_24210B0B0(a3 > 1, a1, 1, a2);
}

void sub_2420A1E04(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
  sub_24210B09C(a3 > 1, a1, 1, a2);
}

uint64_t sub_2420A1E14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_24210C624(a1, a2, a3, v3, v4);
}

void sub_2420A1E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B0B0(a1, a2, 1, v2);
}

void sub_2420A1E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24210B0B0(0, 1, 1, a4);
}

void sub_2420A1E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24210B09C(0, 1, 1, a4);
}

uint64_t sub_2420A1E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (**(uint64_t (***)(void))(a3 - 8))();
}

uint64_t sub_2420A1E80()
{
  return sub_242132DA4();
}

uint64_t sub_2420A1E8C()
{
  return sub_2421327EC();
}

uint64_t *sub_2420A1EA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return sub_24207F280((uint64_t *)(v1 - 128));
}

uint64_t sub_2420A1EB4()
{
  return sub_242132C60();
}

uint64_t sub_2420A1EDC()
{
  return 0x646F6D5F65736162;
}

uint64_t sub_2420A1EFC()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2420A1F04()
{
  return sub_242132DA4();
}

uint64_t sub_2420A1F1C(uint64_t a1, ...)
{
  uint64_t (*v1)(char *);
  va_list va;

  va_start(va, a1);
  return v1(va);
}

void sub_2420A1F24(uint64_t a1, uint64_t *a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_24207E9D0((uint64_t)va, a2);
}

void sub_2420A1F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24207EA48(v2, a2);
}

uint64_t sub_2420A1F34(uint64_t a1)
{
  return sub_242098904(a1);
}

uint64_t sub_2420A1F3C()
{
  return sub_2421326FC();
}

_QWORD *sub_2420A1F44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;

  sub_242079E50((__int128 *)(v0 - 168), v0 - 128);
  v1 = *(_QWORD *)(v0 - 104);
  result = sub_242079800((_QWORD *)(v0 - 128), v1);
  *(_QWORD *)(v0 - 144) = v1;
  return result;
}

void sub_2420A1F84(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t sub_2420A1FA4()
{
  return sub_242132AD4();
}

uint64_t sub_2420A1FAC()
{
  return sub_2421327EC();
}

void sub_2420A1FB4()
{
  STACK[0x250] = 0;
  STACK[0x258] = 0xE000000000000000;
}

void sub_2420A1FC8()
{
  STACK[0x210] = 0;
  STACK[0x218] = 0xE000000000000000;
}

_QWORD *sub_2420A1FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;

  sub_242079824(v1 - 128);
  v2 = *(_QWORD *)(v0 + 80);
  result = sub_242079800((_QWORD *)(v0 + 56), v2);
  *(_QWORD *)(v1 - 104) = v2;
  return result;
}

uint64_t sub_2420A200C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2420A2024()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;

  sub_242079E50((__int128 *)(v0 - 152), v0 - 112);
  v1 = *(_QWORD *)(v0 - 88);
  result = sub_242079800((_QWORD *)(v0 - 112), v1);
  *(_QWORD *)(v0 - 128) = v1;
  return result;
}

uint64_t sub_2420A2054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(a1, v2, v1);
}

uint64_t sub_2420A206C(uint64_t a1)
{
  return sub_242098904(a1);
}

__n128 sub_2420A20A4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return result;
}

uint64_t sub_2420A20B8(uint64_t result, int a2)
{
  *(_QWORD *)(result + 8) = (a2 - 1);
  return result;
}

void sub_2420A20C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24207EA48(v2, a2);
}

uint64_t sub_2420A20CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  return sub_242079E50(&a12, (uint64_t)&a34);
}

void sub_2420A20D8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_24207E9D0((uint64_t)va, a2);
}

uint64_t sub_2420A20E0()
{
  return sub_24207E964();
}

uint64_t sub_2420A20EC()
{
  return sub_242132D74();
}

uint64_t sub_2420A20F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (**(uint64_t (***)(uint64_t, uint64_t))(a3 - 8))(v3, v4);
}

uint64_t sub_2420A210C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242079800(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_2420A2130(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242079800(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_2420A2154(uint64_t a1)
{
  return sub_242079824(a1);
}

void sub_2420A215C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_24207EA48(v1 + 16, a1);
}

uint64_t sub_2420A2168()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420A2180()
{
  return sub_242132AD4();
}

uint64_t sub_2420A2194()
{
  return sub_242132AD4();
}

uint64_t sub_2420A21B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

uint64_t sub_2420A21C0()
{
  return swift_bridgeObjectRetain();
}

__n128 sub_2420A21CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,__int128 a35)
{
  return (__n128)a35;
}

uint64_t sub_2420A2200()
{
  uint64_t v0;

  return sub_242079824(v0);
}

uint64_t sub_2420A2208()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420A2210()
{
  return sub_2421327EC();
}

uint64_t sub_2420A2238()
{
  uint64_t v0;
  uint64_t v1;

  sub_2420967B0(v1 - 176);
  sub_242079824(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420A2258(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return a2[1];
}

uint64_t sub_2420A2268(__int128 *a1)
{
  uint64_t v1;

  return sub_242079E50(a1, v1 - 136);
}

uint64_t sub_2420A2270()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2420A2288()
{
  uint64_t v0;

  return v0;
}

uint64_t *sub_2420A22B8()
{
  uint64_t v0;

  return sub_24207F280((uint64_t *)(v0 - 112));
}

BOOL sub_2420A22C0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL sub_2420A22D8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_2420A22F0()
{
  uint64_t v0;

  return sub_242079824(*(_QWORD *)(v0 + 8));
}

uint64_t sub_2420A22F8()
{
  uint64_t v0;

  return sub_24209F920(v0 + 784);
}

unint64_t sub_2420A2300()
{
  return 0xD000000000000033;
}

void sub_2420A2318(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_24207E9D0(v2 - 168, a2);
}

uint64_t *sub_2420A2320()
{
  uint64_t v0;

  return sub_24207F280((uint64_t *)(v0 - 168));
}

void sub_2420A2328(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_2420A1554(a1, v3 - 168, a3);
}

uint64_t sub_2420A2330(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2420797C0(a3);
}

uint64_t sub_2420A2340()
{
  uint64_t v0;

  return v0;
}

void sub_2420A2358(unint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0x210] = a1;
  STACK[0x218] = (v1 - 32) | 0x8000000000000000;
}

void sub_2420A2370(unint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0x250] = a1;
  STACK[0x258] = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_2420A2388()
{
  return swift_bridgeObjectRelease();
}

void *sub_2420A23A0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char __src)
{
  return memcpy(&a9, &__src, 0xB0uLL);
}

void *sub_2420A23B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char __src)
{
  return memcpy(&a9, &__src, 0x60uLL);
}

uint64_t sub_2420A23C0()
{
  return 0;
}

_QWORD *sub_2420A23D8(_QWORD *a1)
{
  uint64_t v1;

  return sub_242079800(a1, v1);
}

void sub_2420A23F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24207EA48(v2, a2);
}

uint64_t sub_2420A23F8()
{
  return 0;
}

void sub_2420A2410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 1;
}

uint64_t sub_2420A2450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

void sub_2420A2460()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *(_QWORD *)(v0 + 968) = *v1;
  *(_QWORD *)(v0 + 976) = v2;
  *(_BYTE *)(v0 + 784) = 0;
}

void sub_2420A2474()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t sub_2420A2488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  return sub_242079E50(&a12, (uint64_t)&a38);
}

uint64_t sub_2420A2494()
{
  uint64_t v0;

  sub_242079E50((__int128 *)(v0 - 176), v0 - 120);
  return v0 - 136;
}

void sub_2420A24B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 168);
  *(_QWORD *)(v0 - 136) = *(_QWORD *)(v0 - 176);
  *(_QWORD *)(v0 - 128) = v1;
  *(_BYTE *)(v0 - 65) = 1;
}

uint64_t sub_2420A24CC()
{
  return swift_bridgeObjectRelease();
}

uint64_t *sub_2420A24D4(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2420A02AC(a1, v1);
}

_QWORD *sub_2420A24DC(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_242079800((uint64_t *)va, v1);
}

uint64_t sub_2420A24E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10)
{
  uint64_t v10;

  return sub_242079E50(&a10, v10 - 144);
}

void sub_2420A24F4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  sub_24207E9D0((uint64_t)&a47, a2);
}

uint64_t sub_2420A24FC(uint64_t a1)
{
  return sub_24209F128(a1);
}

void sub_2420A2510()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
}

uint64_t sub_2420A251C()
{
  return sub_242132D74();
}

void sub_2420A2528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B09C(a1, a2, 1, v2);
}

void sub_2420A2534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B0B0(a1, a2, 1, v2);
}

void sub_2420A2540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B09C(a1, a2, 1, v2);
}

double sub_2420A254C()
{
  return 0.0;
}

double sub_2420A2560()
{
  return 0.0;
}

_QWORD *sub_2420A2574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;

  v2 = *(_QWORD *)(v0 + 40);
  result = sub_242079800((_QWORD *)(v0 + 16), v2);
  *(_QWORD *)(v1 - 104) = v2;
  return result;
}

_QWORD *sub_2420A2598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;

  v2 = *(_QWORD *)(v0 + 40);
  result = sub_242079800((_QWORD *)(v0 + 16), v2);
  *(_QWORD *)(v1 - 88) = v2;
  return result;
}

_QWORD *sub_2420A25BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;

  v2 = *(_QWORD *)(v0 + 40);
  result = sub_242079800((_QWORD *)(v0 + 16), v2);
  *(_QWORD *)(v1 - 88) = v2;
  return result;
}

uint64_t sub_2420A25E0()
{
  return swift_bridgeObjectRelease();
}

void sub_2420A25EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_2420A13C0(v3 + 416, v3 + 192, a3);
}

uint64_t sub_2420A25F8()
{
  uint64_t v0;

  return sub_242079E50((__int128 *)(v0 - 168), v0 - 128);
}

uint64_t sub_2420A2604()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2420A260C()
{
  uint64_t v0;

  return sub_242079824(v0 - 128);
}

double sub_2420A2618()
{
  return 0.0;
}

uint64_t sub_2420A262C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_2420A264C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420A2654()
{
  return swift_bridgeObjectRelease();
}

void sub_2420A265C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 384);
  *(_QWORD *)(v1 - 184) = *(_QWORD *)(v0 + 376);
  *(_QWORD *)(v1 - 176) = v2;
  *(_BYTE *)(v0 + 192) = 1;
}

uint64_t sub_2420A267C()
{
  return sub_242132D80();
}

uint64_t sub_2420A2688()
{
  return swift_bridgeObjectRelease();
}

double sub_2420A2690()
{
  uint64_t v0;
  _OWORD *v1;
  double result;

  v1 = (_OWORD *)(v0 - 144);
  *(_QWORD *)(v0 - 112) = 0;
  result = 0.0;
  *v1 = 0u;
  v1[1] = 0u;
  return result;
}

uint64_t *sub_2420A26A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
  return sub_24207F280((uint64_t *)(v1 - 152));
}

__n128 sub_2420A26B0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)(v0 + 16) = result;
  *(_OWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  return result;
}

uint64_t sub_2420A26C4()
{
  return swift_bridgeObjectRelease();
}

__n128 sub_2420A26CC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(__n128 *)v0 = result;
  *(_OWORD *)(v0 + 16) = v3;
  return result;
}

double sub_2420A26E0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 88) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

void sub_2420A26F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 1;
}

void sub_2420A2708(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  sub_24207E9D0((uint64_t)&a35, a2);
}

uint64_t sub_2420A2738()
{
  return sub_2421327EC();
}

double sub_2420A2740()
{
  return 0.0;
}

void sub_2420A2754(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  sub_2420A13C0((uint64_t)&a41, a2, a3);
}

BOOL sub_2420A275C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[10];

  v12 = sub_2420797C0(&qword_25719E980);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[7] = a1;
  v20[8] = a2;
  v20[9] = a3;
  v20[4] = a4;
  v20[5] = a5;
  v20[6] = a6;
  v20[2] = AssetSpecificationVersion.number.getter();
  v20[3] = v15;
  v20[0] = AssetSpecificationVersion.number.getter();
  v20[1] = v16;
  v17 = sub_24213260C();
  sub_24207E8A8((uint64_t)v14, 1, 1, v17);
  sub_2420A2FF8();
  v18 = sub_242132A50();
  sub_2420A3034((uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18 == -1;
}

BOOL sub_2420A2884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v8 = sub_2420797C0(&qword_25719E980);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[2] = a1;
  v14[3] = a2;
  v14[0] = a3;
  v14[1] = a4;
  v11 = sub_24213260C();
  sub_24207E8A8((uint64_t)v10, 1, 1, v11);
  sub_2420A2FF8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_242132A50();
  sub_2420A3034((uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 == -1;
}

ModelCatalog::AssetVersion __swiftcall AssetVersion.init(versionString:)(ModelCatalog::AssetVersion versionString)
{
  ModelCatalog::AssetVersion *v1;

  *v1 = versionString;
  return versionString;
}

uint64_t AssetVersion.number.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static AssetVersion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_242132D14();
}

BOOL sub_2420A29F8(uint64_t *a1, uint64_t *a2)
{
  return sub_2420A2884(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_2420A2A0C(uint64_t *a1, uint64_t *a2)
{
  return sub_2420A2A20(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_2420A2A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return !sub_2420A2884(a3, a4, a1, a2);
}

BOOL sub_2420A2A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return !sub_2420A275C(a4, a5, a6, a1, a2, a3);
}

BOOL sub_2420A2A94(uint64_t *a1, uint64_t *a2)
{
  return sub_2420A2AC4(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_2420A2AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return !sub_2420A275C(a1, a2, a3, a4, a5, a6);
}

BOOL sub_2420A2AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return !sub_2420A2884(a1, a2, a3, a4);
}

BOOL sub_2420A2AE0(uint64_t *a1, uint64_t *a2)
{
  return sub_2420A2AF4(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_2420A2AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2420A2884(a3, a4, a1, a2);
}

BOOL sub_2420A2B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2420A275C(a4, a5, a6, a1, a2, a3);
}

void sub_2420A2B38()
{
  sub_242113E5C();
}

uint64_t AssetSpecificationVersion.major.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AssetSpecificationVersion.minor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t AssetSpecificationVersion.patch.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

ModelCatalog::AssetSpecificationVersion __swiftcall AssetSpecificationVersion.init(major:minor:patch:)(Swift::UInt major, Swift::UInt minor, Swift::UInt patch)
{
  Swift::UInt *v3;
  ModelCatalog::AssetSpecificationVersion result;

  *v3 = major;
  v3[1] = minor;
  v3[2] = patch;
  result.patch = patch;
  result.minor = minor;
  result.major = major;
  return result;
}

uint64_t AssetSpecificationVersion.number.getter()
{
  uint64_t v1;

  v1 = sub_2420A3078();
  sub_2420A3088();
  sub_2420A3078();
  sub_2421327EC();
  swift_bridgeObjectRelease();
  sub_2420A3088();
  sub_2420A3078();
  sub_2421327EC();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL static AssetSpecificationVersion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_2420A2C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2420A2D0C(a1, a2, a3, (uint64_t (*)(void))sub_2420A2C40, (uint64_t (*)(void))sub_2420A2C7C);
}

unint64_t sub_2420A2C40()
{
  unint64_t result;

  result = qword_25719E950;
  if (!qword_25719E950)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetVersion, &type metadata for AssetVersion);
    atomic_store(result, (unint64_t *)&qword_25719E950);
  }
  return result;
}

unint64_t sub_2420A2C7C()
{
  unint64_t result;

  result = qword_25719E958;
  if (!qword_25719E958)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetVersion, &type metadata for AssetVersion);
    atomic_store(result, (unint64_t *)&qword_25719E958);
  }
  return result;
}

unint64_t sub_2420A2CBC()
{
  unint64_t result;

  result = qword_25719E960;
  if (!qword_25719E960)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetVersion, &type metadata for AssetVersion);
    atomic_store(result, (unint64_t *)&qword_25719E960);
  }
  return result;
}

uint64_t sub_2420A2CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2420A2D0C(a1, a2, a3, (uint64_t (*)(void))sub_2420A2D3C, (uint64_t (*)(void))sub_2420A2D78);
}

uint64_t sub_2420A2D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2420A2D3C()
{
  unint64_t result;

  result = qword_25719E968;
  if (!qword_25719E968)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSpecificationVersion, &type metadata for AssetSpecificationVersion);
    atomic_store(result, (unint64_t *)&qword_25719E968);
  }
  return result;
}

unint64_t sub_2420A2D78()
{
  unint64_t result;

  result = qword_25719E970;
  if (!qword_25719E970)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSpecificationVersion, &type metadata for AssetSpecificationVersion);
    atomic_store(result, (unint64_t *)&qword_25719E970);
  }
  return result;
}

unint64_t sub_2420A2DBC()
{
  unint64_t result;

  result = qword_25719E978;
  if (!qword_25719E978)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSpecificationVersion, &type metadata for AssetSpecificationVersion);
    atomic_store(result, (unint64_t *)&qword_25719E978);
  }
  return result;
}

uint64_t sub_2420A2DF8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2420A2E28(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2420A275C);
}

uint64_t sub_2420A2E04(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2420A2E28(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2420A2A54);
}

uint64_t sub_2420A2E10(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2420A2E28(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2420A2AA8);
}

uint64_t sub_2420A2E1C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2420A2E28(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2420A2B10);
}

uint64_t sub_2420A2E28(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_2420A2E48()
{
  return sub_242113E2C();
}

_QWORD *initializeBufferWithCopyOfBuffer for AssetVersion(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AssetVersion(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CatalogIndex(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for AssetVersion(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetVersion(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetVersion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetVersion()
{
  return &type metadata for AssetVersion;
}

__n128 initializeWithTake for Platform(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AssetSpecificationVersion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AssetSpecificationVersion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AssetSpecificationVersion()
{
  return &type metadata for AssetSpecificationVersion;
}

unint64_t sub_2420A2FF8()
{
  unint64_t result;

  result = qword_2543979D0;
  if (!qword_2543979D0)
  {
    result = MEMORY[0x2426A40E0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2543979D0);
  }
  return result;
}

uint64_t sub_2420A3034(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2420797C0(&qword_25719E980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2420A3078()
{
  return sub_242132D08();
}

uint64_t sub_2420A3088()
{
  return sub_2421327EC();
}

uint64_t sub_2420A3098(uint64_t a1)
{
  return sub_2420A3110(a1, qword_2543A65D0);
}

uint64_t sub_2420A30B4(uint64_t a1)
{
  return sub_2420A3110(a1, qword_2543A6570);
}

uint64_t sub_2420A30D8(uint64_t a1)
{
  return sub_2420A3110(a1, qword_2543A65B0);
}

uint64_t sub_2420A30F0(uint64_t a1)
{
  return sub_2420A3110(a1, qword_2543A6598);
}

uint64_t sub_2420A3110(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_24213263C();
  sub_24207F2BC(v3, a2);
  sub_24207BF18(v3, (uint64_t)a2);
  return sub_242132624();
}

uint64_t sub_2420A3184(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;

  v22 = MEMORY[0x24BEE4AF8];
  v18 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v19 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v19)
      goto LABEL_29;
    v14 = *(_QWORD *)(v18 + 8 * v10);
    if (!v14)
      break;
LABEL_18:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_19:
    v16 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v17 = v16[1];
    v21[0] = *v16;
    v21[1] = v17;
    swift_bridgeObjectRetain();
    a1(&v20, v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v20)
    {
      MEMORY[0x2426A37BC](result);
      if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2421328C4();
      sub_2421328D0();
      result = sub_2421328B8();
    }
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v19)
    goto LABEL_29;
  v14 = *(_QWORD *)(v18 + 8 * v15);
  if (v14)
    goto LABEL_17;
  v15 = v10 + 2;
  if (v10 + 2 >= v19)
    goto LABEL_29;
  v14 = *(_QWORD *)(v18 + 8 * v15);
  if (v14)
    goto LABEL_17;
  v15 = v10 + 3;
  if (v10 + 3 >= v19)
    goto LABEL_29;
  v14 = *(_QWORD *)(v18 + 8 * v15);
  if (v14)
    goto LABEL_17;
  v15 = v10 + 4;
  if (v10 + 4 >= v19)
  {
LABEL_29:
    swift_release();
    return v22;
  }
  v14 = *(_QWORD *)(v18 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v10 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v19)
      goto LABEL_29;
    v14 = *(_QWORD *)(v18 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t RequestDownloadProgressInformation.resourceIDs.getter()
{
  return swift_bridgeObjectRetain();
}

double RequestDownloadProgressInformation.progress.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void RequestDownloadProgressInformation.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t RequestDownloadProgressInformation.bytesCompleted.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t RequestDownloadProgressInformation.totalBytes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t static Catalog.requestDownload(for:on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = v3;
  v8 = sub_2420797C0(&qword_25719E988);
  MEMORY[0x24BDAC7A8](v8);
  sub_24207F540();
  v13 = v11 - v10;
  v35 = a2;
  v36[0] = MEMORY[0x24BEE4B08];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v30[1] = v12;
    v31 = v11 - v10;
    v15 = a1 + 32;
    swift_bridgeObjectRetain();
    v16 = (_QWORD *)(a1 + 32);
    v17 = v14;
    do
    {
      sub_2420A3688((uint64_t)v36, v16);
      if (v4)
      {
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        __break(1u);
        return result;
      }
      v4 = 0;
      v16 += 5;
      --v17;
    }
    while (v17);
    v32 = v8;
    v33 = a1;
    v34 = a3;
    swift_bridgeObjectRelease();
    v30[0] = v36[0];
    v39 = MEMORY[0x24BEE4AF8];
    sub_24210BF10(0, v14, 0);
    v18 = v39;
    do
    {
      sub_24207986C(v15, (uint64_t)v36);
      v20 = v37;
      v19 = v38;
      sub_242079800(v36, v37);
      v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v19 + 8) + 24))(v20);
      v23 = v22;
      sub_242079824((uint64_t)v36);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_24210BF10(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v39;
      }
      v25 = *(_QWORD *)(v18 + 16);
      v24 = *(_QWORD *)(v18 + 24);
      if (v25 >= v24 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_24210BF10((char *)(v24 > 1), v25 + 1, 1);
        v18 = v39;
      }
      *(_QWORD *)(v18 + 16) = v25 + 1;
      v26 = v18 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v21;
      *(_QWORD *)(v26 + 40) = v23;
      v15 += 40;
      --v14;
    }
    while (v14);
    a1 = v33;
    v13 = v31;
    v8 = v32;
    v27 = v30[0];
  }
  else
  {
    v27 = MEMORY[0x24BEE4B08];
    v18 = MEMORY[0x24BEE4AF8];
  }
  MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
  v30[-4] = v35;
  v30[-3] = v18;
  v30[-2] = v27;
  v30[-1] = a1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v13, *MEMORY[0x24BEE6A10], v8);
  sub_242132930();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2420A3688(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  const char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;

  v3 = a2[3];
  v4 = a2[4];
  sub_242079800(a2, v3);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 48))(&v39, v3, v4);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (sub_2421327E0())
  {
    v6 = (void *)sub_242132768();
    v7 = (void *)sub_242132768();
    v8 = objc_msgSend(v5, sel_downloadStatusForSubscriber_subscriptionName_, v6, v7);

    UAFSubscriptionDownloadStatus.assetSubscriptionStatus()((unint64_t)v8, &v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    switch(v42)
    {
      case 4:
        if (qword_254399A70 != -1)
          swift_once();
        v9 = sub_24213263C();
        sub_24207BF18(v9, (uint64_t)qword_2543A6598);
        sub_24207986C((uint64_t)a2, (uint64_t)&v35);
        v10 = sub_242132618();
        v11 = sub_242132990();
        if (!os_log_type_enabled(v10, v11))
          goto LABEL_23;
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v38 = v13;
        *(_DWORD *)v12 = 136315138;
        v14 = v36;
        v15 = v37;
        sub_242079800(&v35, v36);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 48))(&v39, v14, v15);
        v16 = v40;
        v17 = v41;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v39 = sub_24212F968(v16, v17, &v38);
        sub_242132A38();
        swift_bridgeObjectRelease();
        sub_242079824((uint64_t)&v35);
        v18 = "Skipping unknown subscription %s";
        goto LABEL_22;
      case 6:
        goto LABEL_8;
      case 7:
        if (qword_254399A70 != -1)
          swift_once();
        v25 = sub_24213263C();
        sub_24207BF18(v25, (uint64_t)qword_2543A6598);
        sub_24207986C((uint64_t)a2, (uint64_t)&v35);
        v10 = sub_242132618();
        v11 = sub_242132990();
        if (!os_log_type_enabled(v10, v11))
          goto LABEL_23;
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v38 = v13;
        *(_DWORD *)v12 = 136315138;
        v26 = v36;
        v27 = v37;
        sub_242079800(&v35, v36);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v27 + 48))(&v39, v26, v27);
        v28 = v40;
        v29 = v41;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v39 = sub_24212F968(v28, v29, &v38);
        sub_242132A38();
        swift_bridgeObjectRelease();
        sub_242079824((uint64_t)&v35);
        v18 = "Non network error ocurred for %s";
        goto LABEL_22;
      case 8:
        if (qword_254399A70 != -1)
          swift_once();
        v30 = sub_24213263C();
        sub_24207BF18(v30, (uint64_t)qword_2543A6598);
        sub_24207986C((uint64_t)a2, (uint64_t)&v35);
        v10 = sub_242132618();
        v11 = sub_242132990();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          v13 = swift_slowAlloc();
          v38 = v13;
          *(_DWORD *)v12 = 136315138;
          v31 = v36;
          v32 = v37;
          sub_242079800(&v35, v36);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 48))(&v39, v31, v32);
          v33 = v40;
          v34 = v41;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v39 = sub_24212F968(v33, v34, &v38);
          sub_242132A38();
          swift_bridgeObjectRelease();
          sub_242079824((uint64_t)&v35);
          v18 = "Network error ocurred for %s";
LABEL_22:
          _os_log_impl(&dword_242074000, v10, v11, v18, v12, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2426A4194](v13, -1, -1);
          MEMORY[0x2426A4194](v12, -1, -1);
        }
        else
        {
LABEL_23:
          sub_242079824((uint64_t)&v35);
        }

        break;
      default:
        v23 = a2[3];
        v24 = a2[4];
        sub_242079800(a2, v23);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v24 + 48))(&v39, v23, v24);
        sub_242076F38((uint64_t)&v35, (uint64_t)&v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_8:
    if (qword_254399A70 != -1)
      swift_once();
    v19 = sub_24213263C();
    sub_24207BF18(v19, (uint64_t)qword_2543A6598);
    v20 = sub_242132618();
    v21 = sub_242132990();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_242074000, v20, v21, "Skipping unmanaged subscription", v22, 2u);
      MEMORY[0x2426A4194](v22, -1, -1);
    }

  }
}

void sub_2420A3D10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t i;
  BOOL v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(unint64_t, char *, uint64_t);
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  int64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  id v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  unint64_t v79;
  uint64_t aBlock;
  uint64_t v81;
  void *v82;
  void *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  char v90;

  v65 = a5;
  v71 = a1;
  v70 = sub_2420797C0(&qword_25719E9A8);
  v64 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v63 = v7;
  v62 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2421329CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2421329C0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_2421326D8();
  MEMORY[0x24BDAC7A8](v13);
  v14 = MEMORY[0x24BEE4AF8];
  v66 = a4;
  if (a2)
  {
    v67 = a2;
  }
  else
  {
    v79 = sub_2420A65B4();
    *(_QWORD *)&v87 = 0;
    *((_QWORD *)&v87 + 1) = 0xE000000000000000;
    sub_242132AD4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v87 = 0xD000000000000028;
    *((_QWORD *)&v87 + 1) = 0x80000002421396F0;
    aBlock = sub_2421328DC();
    sub_242132D08();
    sub_2421327EC();
    swift_bridgeObjectRelease();
    v78 = *((_QWORD *)&v87 + 1);
    sub_2421326CC();
    *(_QWORD *)&v87 = v14;
    sub_2420A65F0();
    sub_2420797C0(&qword_254399D38);
    sub_2420A6630();
    sub_242132A68();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5750], v8);
    v15 = (void *)sub_2421329D8();
    a4 = v66;
    v67 = v15;
  }
  v16 = (void *)objc_opt_self();
  v17 = a2;
  v69 = objc_msgSend(v16, sel_sharedManager);
  v18 = swift_allocObject();
  v19 = *(_QWORD *)(a4 + 16);
  v68 = v18;
  *(_QWORD *)(v18 + 16) = v19;
  v20 = *(_QWORD *)(a4 + 56);
  v60 = a4 + 56;
  v21 = 1 << *(_BYTE *)(a4 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v61 = (unint64_t)(v21 + 63) >> 6;
  swift_bridgeObjectRetain();
  v24 = 0;
  v25 = 0;
  if (!v23)
    goto LABEL_8;
LABEL_7:
  v77 = (v23 - 1) & v23;
  v78 = v24;
  for (i = __clz(__rbit64(v23)) | (v24 << 6); ; i = __clz(__rbit64(v29)) + (v28 << 6))
  {
    v31 = *(_QWORD *)(a4 + 48) + 56 * i;
    v33 = *(_OWORD *)(v31 + 16);
    v32 = *(_OWORD *)(v31 + 32);
    v34 = *(_OWORD *)v31;
    v90 = *(_BYTE *)(v31 + 48);
    v88 = v33;
    v89 = v32;
    v87 = v34;
    sub_242079DC0((uint64_t)&v87);
    sub_242079DC0((uint64_t)&v87);
    v35 = swift_bridgeObjectRetain();
    v36 = sub_2420A4550(v35, (uint64_t)&v87);
    v37 = *(_QWORD *)(v36 + 16);
    v79 = v25;
    if (v37)
    {
      v86 = MEMORY[0x24BEE4AF8];
      sub_24210BF10(0, v37, 0);
      v38 = v36 + 32;
      v39 = v86;
      do
      {
        sub_24207986C(v38, (uint64_t)&aBlock);
        v41 = v83;
        v40 = v84;
        sub_242079800(&aBlock, (uint64_t)v83);
        v42 = (*(uint64_t (**)(void *))(v40[1] + 24))(v41);
        v44 = v43;
        sub_242079824((uint64_t)&aBlock);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24210BF10(0, *(_QWORD *)(v39 + 16) + 1, 1);
          v39 = v86;
        }
        v46 = *(_QWORD *)(v39 + 16);
        v45 = *(_QWORD *)(v39 + 24);
        if (v46 >= v45 >> 1)
        {
          sub_24210BF10((char *)(v45 > 1), v46 + 1, 1);
          v39 = v86;
        }
        *(_QWORD *)(v39 + 16) = v46 + 1;
        v47 = v39 + 16 * v46;
        *(_QWORD *)(v47 + 32) = v42;
        *(_QWORD *)(v47 + 40) = v44;
        v38 += 40;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v39 = MEMORY[0x24BEE4AF8];
    }
    v75 = (void *)sub_242132768();
    v74 = *((_QWORD *)&v88 + 1);
    v76 = v88;
    swift_bridgeObjectRetain();
    sub_242079E08((uint64_t)&v87);
    v48 = v64;
    v72 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
    v49 = v62;
    v50 = v71;
    v51 = v70;
    v72(v62, v71, v70);
    v52 = (*(unsigned __int8 *)(v48 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v39;
    v54 = *(void (**)(unint64_t, char *, uint64_t))(v48 + 32);
    v54(v53 + v52, v49, v51);
    v84 = sub_2420A682C;
    v85 = v53;
    aBlock = MEMORY[0x24BDAC760];
    v81 = 1107296256;
    v82 = sub_2420A48E0;
    v83 = &unk_251326848;
    v55 = _Block_copy(&aBlock);
    v56 = (uint64_t)v67;
    v73 = v67;
    swift_release();
    v72(v49, v50, v51);
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v68;
    v54(v57 + v52, v49, v51);
    v84 = sub_2420A68F4;
    v85 = v57;
    aBlock = MEMORY[0x24BDAC760];
    v81 = 1107296256;
    v82 = sub_242129EF0;
    v83 = &unk_251326898;
    v58 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v59 = v75;
    sub_2420A691C((uint64_t)v75, v76, v74, 0, v56, (uint64_t)v55, (uint64_t)v58, v69);
    swift_bridgeObjectRelease();
    _Block_release(v58);
    _Block_release(v55);

    a4 = v66;
    v24 = v78;
    v25 = v79;
    v23 = v77;
    if (v77)
      goto LABEL_7;
LABEL_8:
    v27 = __OFADD__(v24, 1);
    v28 = v24 + 1;
    if (v27)
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v28 >= v61)
      goto LABEL_34;
    v29 = *(_QWORD *)(v60 + 8 * v28);
    if (!v29)
      break;
LABEL_18:
    v77 = (v29 - 1) & v29;
    v78 = v28;
  }
  v30 = v28 + 1;
  if (v28 + 1 >= v61)
    goto LABEL_34;
  v29 = *(_QWORD *)(v60 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v28 + 2;
  if (v28 + 2 >= v61)
    goto LABEL_34;
  v29 = *(_QWORD *)(v60 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v28 + 3;
  if (v28 + 3 >= v61)
  {
LABEL_34:
    swift_release();
    *(_QWORD *)(swift_allocObject() + 16) = a4;
    swift_bridgeObjectRetain();
    sub_24213290C();

    swift_release();
    return;
  }
  v29 = *(_QWORD *)(v60 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v61)
      goto LABEL_34;
    v29 = *(_QWORD *)(v60 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_2420A4550(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  int v16;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v24 = *(_QWORD *)(result + 16);
  if (!v24)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    sub_242079E08(a2);
    return v3;
  }
  v4 = 0;
  v5 = result + 32;
  v22 = MEMORY[0x24BEE4AF8];
  v23 = result;
  while (v4 < *(_QWORD *)(result + 16))
  {
    sub_24207986C(v5, (uint64_t)&v31);
    v6 = v32;
    v7 = v33;
    sub_242079800(&v31, v32);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v7 + 48))(&v25, v6, v7);
    v8 = v26;
    v9 = v27;
    v10 = v28;
    v11 = v29;
    v12 = v30;
    v13 = (_QWORD)v25 == *(_QWORD *)a2 && *((_QWORD *)&v25 + 1) == *(_QWORD *)(a2 + 8);
    if (!v13 && (sub_242132D14() & 1) == 0
      || (v8 == *(_QWORD *)(a2 + 16) ? (v14 = v9 == *(_QWORD *)(a2 + 24)) : (v14 = 0),
          !v14 && (sub_242132D14() & 1) == 0
       || (v10 == *(_QWORD *)(a2 + 32) ? (v15 = v11 == *(_QWORD *)(a2 + 40)) : (v15 = 0),
           !v15 && (sub_242132D14() & 1) == 0)))
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    v16 = *(unsigned __int8 *)(a2 + 48);
    if (v12 == 10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16 == 10)
        goto LABEL_28;
    }
    else
    {
      if (v16 == 10)
        goto LABEL_23;
      sub_242107AB8(v12);
      v18 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
      {
LABEL_28:
        sub_242079E50(&v31, (uint64_t)&v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_24210BF9C(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v19 = v34;
        v21 = *(_QWORD *)(v34 + 16);
        v20 = *(_QWORD *)(v34 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_24210BF9C(v20 > 1, v21 + 1, 1);
          v19 = v34;
        }
        *(_QWORD *)(v19 + 16) = v21 + 1;
        v22 = v19;
        sub_242079E50(&v25, v19 + 40 * v21 + 32);
        goto LABEL_25;
      }
    }
LABEL_24:
    sub_242079824((uint64_t)&v31);
LABEL_25:
    ++v4;
    v5 += 40;
    result = v23;
    if (v24 == v4)
    {
      v3 = v34;
      goto LABEL_33;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2420A47C4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v13[3];
  _BYTE v14[8];
  id v15;
  id v16;

  v4 = sub_2420797C0(&qword_25719E9C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  objc_msgSend(a1, sel_completedPercent);
  v9 = v8;
  UAFSubscriptionDownloadStatus.assetSubscriptionStatus()((unint64_t)objc_msgSend(a1, sel_downloadStatus), v14);
  v10 = objc_msgSend(a1, sel_completedBytes);
  v11 = objc_msgSend(a1, sel_totalBytes);
  v13[1] = a2;
  v13[2] = v9;
  v15 = v10;
  v16 = v11;
  sub_2420797C0(&qword_25719E9A8);
  sub_242132918();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_2420A48E0(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_2420A4930(uint64_t a1)
{
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = (uint64_t *)(a1 + 16);
  result = swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    *v2 = v6;
    if (v6 <= 0)
    {
      sub_2420797C0(&qword_25719E9A8);
      return sub_242132924();
    }
  }
  return result;
}

void sub_2420A49A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_2420797C0(&qword_25719E9B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BEE69B0])
  {
    if (qword_254399A70 != -1)
      swift_once();
    v7 = sub_24213263C();
    sub_24207BF18(v7, (uint64_t)qword_2543A6598);
    swift_bridgeObjectRetain_n();
    v8 = sub_242132618();
    v9 = sub_2421329A8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v31 = v11;
      *(_DWORD *)v10 = 136315138;
      sub_2420A69CC();
      swift_bridgeObjectRetain();
      v12 = sub_242132954();
      v14 = v13;
      swift_bridgeObjectRelease();
      v30 = sub_24212F968(v12, v14, &v31);
      sub_242132A38();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v15 = "Finish request download for %s";
LABEL_11:
      _os_log_impl(&dword_242074000, v8, v9, v15, v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426A4194](v11, -1, -1);
      MEMORY[0x2426A4194](v10, -1, -1);

      return;
    }
LABEL_12:

    swift_bridgeObjectRelease_n();
    return;
  }
  if (v6 == *MEMORY[0x24BEE69B8])
  {
    if (qword_254399A70 != -1)
      swift_once();
    v16 = sub_24213263C();
    sub_24207BF18(v16, (uint64_t)qword_2543A6598);
    swift_bridgeObjectRetain_n();
    v8 = sub_242132618();
    v9 = sub_242132984();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v31 = v11;
      *(_DWORD *)v10 = 136315138;
      sub_2420A69CC();
      swift_bridgeObjectRetain();
      v17 = sub_242132954();
      v19 = v18;
      swift_bridgeObjectRelease();
      v30 = sub_24212F968(v17, v19, &v31);
      sub_242132A38();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v15 = "Cancelled download request updates for %s";
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (qword_254399A70 != -1)
    swift_once();
  v20 = sub_24213263C();
  sub_24207BF18(v20, (uint64_t)qword_2543A6598);
  swift_bridgeObjectRetain_n();
  v21 = sub_242132618();
  v22 = sub_24213299C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v31 = v29;
    *(_DWORD *)v23 = 136315138;
    v28 = v23 + 4;
    sub_2420A69CC();
    swift_bridgeObjectRetain();
    v24 = sub_242132954();
    v26 = v25;
    swift_bridgeObjectRelease();
    v30 = sub_24212F968(v24, v26, &v31);
    sub_242132A38();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_242074000, v21, v22, "Unexpected termination while requesting download %s", v23, 0xCu);
    v27 = v29;
    swift_arrayDestroy();
    MEMORY[0x2426A4194](v27, -1, -1);
    MEMORY[0x2426A4194](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static Catalog.monitorUpdates(for:on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_2420797C0(&qword_254399A10);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_24207F540();
  v4 = v3 - v2;
  sub_2420797C0(&qword_2543999F8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE6A10], v0);
  return sub_242132930();
}

void sub_2420A4F9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  _QWORD v44[2];
  void *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;

  v51 = a1;
  v5 = sub_2421329CC();
  v49 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_2421329C0();
  MEMORY[0x24BDAC7A8](v47);
  v48 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2421326D8();
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  v52 = a2;
  if (v10)
  {
    v45 = (void *)v5;
    v58[0] = MEMORY[0x24BEE4AF8];
    sub_24210BF10(0, v10, 0);
    v12 = a2 + 32;
    v13 = v58[0];
    v14 = v10;
    do
    {
      sub_24207986C(v12, (uint64_t)&v53);
      v15 = v55;
      v16 = v56;
      sub_242079800(&v53, v55);
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 24))(v15);
      v19 = v18;
      sub_242079824((uint64_t)&v53);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24210BF10(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v58[0];
      }
      v21 = *(_QWORD *)(v13 + 16);
      v20 = *(_QWORD *)(v13 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_24210BF10((char *)(v20 > 1), v21 + 1, 1);
        v13 = v58[0];
      }
      *(_QWORD *)(v13 + 16) = v21 + 1;
      v22 = v13 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
      v12 += 40;
      --v14;
    }
    while (v14);
    v5 = (uint64_t)v45;
    v11 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  v23 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (a3)
  {
    v24 = a3;
  }
  else
  {
    v44[1] = sub_2420A65B4();
    v53 = 0;
    v54 = 0xE000000000000000;
    v45 = 0;
    sub_242132AD4();
    swift_bridgeObjectRelease();
    v53 = 0xD000000000000027;
    v54 = 0x80000002421396C0;
    v58[0] = sub_2421328DC();
    sub_242132D08();
    sub_2421327EC();
    swift_bridgeObjectRelease();
    sub_2421326CC();
    v53 = v11;
    sub_2420A65F0();
    sub_2420797C0(&qword_254399D38);
    sub_2420A6630();
    sub_242132A68();
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v50, *MEMORY[0x24BEE5750], v5);
    v25 = sub_2421329D8();
    a3 = v45;
    v24 = (void *)v25;
  }
  v26 = v52;
  if (v10)
  {
    v27 = v52 + 32;
    v28 = a3;
    swift_bridgeObjectRetain();
    v29 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_24207986C(v27, (uint64_t)v58);
      v30 = v59;
      v31 = v60;
      sub_242079800(v58, v59);
      (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v31 + 48))(&v53, v30, v31);
      v32 = v56;
      v33 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242079824((uint64_t)v58);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24210B184(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
        v29 = v37;
      }
      v35 = *(_QWORD *)(v29 + 16);
      v34 = *(_QWORD *)(v29 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_24210B184(v34 > 1, v35 + 1, 1, v29);
        v29 = v38;
      }
      *(_QWORD *)(v29 + 16) = v35 + 1;
      v36 = v29 + 16 * v35;
      *(_QWORD *)(v36 + 32) = v32;
      *(_QWORD *)(v36 + 40) = v33;
      v27 += 40;
      --v10;
    }
    while (v10);
    v26 = v52;
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = a3;
    v29 = MEMORY[0x24BEE4AF8];
  }
  v40 = sub_2420AA3D4(v29);
  MEMORY[0x24BDAC7A8](v40);
  v44[-4] = v23;
  v44[-3] = v24;
  v44[-2] = v51;
  v44[-1] = v26;
  v41 = sub_2420A3184((void (*)(uint64_t *__return_ptr, _QWORD *))sub_2420A6720, (uint64_t)&v44[-6], v40);
  swift_bridgeObjectRelease();
  v42 = (_QWORD *)swift_allocObject();
  v42[2] = v13;
  v42[3] = v41;
  v42[4] = v23;
  v43 = v23;
  sub_2420797C0(&qword_254399A18);
  sub_24213290C();

}

void sub_2420A54B4(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[6];

  v20 = a2;
  v21 = a5;
  v8 = sub_2420797C0(&qword_254399A18);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_242132768();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v19[1] = a3;
  v13(v11, a3, v8);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v14, v11, v8);
  *(_QWORD *)(v16 + v15) = a4;
  aBlock[4] = sub_2420A67D0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_242129EF0;
  aBlock[3] = &unk_2513267F8;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  v18 = objc_msgSend(a1, sel_observeAssetSet_queue_handler_, v12, v20, v17);
  _Block_release(v17);

  if (!v18)
    sub_242132924();
  *v21 = v18;
}

uint64_t sub_2420A565C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[2];

  v3 = sub_2420797C0(&qword_254399A78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = a2;
  swift_bridgeObjectRetain();
  sub_2420797C0(&qword_254399A18);
  sub_242132918();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2420A5708(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t i;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v8 = sub_2420797C0(&qword_25719E9A0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 != *MEMORY[0x24BEE69B0])
  {
    if (v12 != *MEMORY[0x24BEE69B8])
    {
      if (qword_254399A70 != -1)
        swift_once();
      v19 = sub_24213263C();
      sub_24207BF18(v19, (uint64_t)qword_2543A6598);
      swift_bridgeObjectRetain();
      v20 = sub_242132618();
      v21 = sub_24213299C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v22 = 134217984;
        v28 = *(_QWORD *)(a2 + 16);
        sub_242132A38();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_242074000, v20, v21, "Unexpected termination while monitoring updates for %ld resources", v22, 0xCu);
        MEMORY[0x2426A4194](v22, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      goto LABEL_18;
    }
    if (qword_254399A70 != -1)
      swift_once();
    v18 = sub_24213263C();
    sub_24207BF18(v18, (uint64_t)qword_2543A6598);
    swift_bridgeObjectRetain();
    v14 = sub_242132618();
    v15 = sub_2421329A8();
    if (!os_log_type_enabled(v14, v15))
      goto LABEL_11;
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 134217984;
    v28 = *(_QWORD *)(a2 + 16);
    sub_242132A38();
    swift_bridgeObjectRelease();
    v17 = "Cancelled monitoring updates for %ld resources";
    goto LABEL_10;
  }
  if (qword_254399A70 != -1)
    goto LABEL_30;
  while (1)
  {
    v13 = sub_24213263C();
    sub_24207BF18(v13, (uint64_t)qword_2543A6598);
    swift_bridgeObjectRetain();
    v14 = sub_242132618();
    v15 = sub_24213299C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134217984;
      v28 = *(_QWORD *)(a2 + 16);
      sub_242132A38();
      swift_bridgeObjectRelease();
      v17 = "Finish/error monitoring updates for %ld resources";
LABEL_10:
      _os_log_impl(&dword_242074000, v14, v15, v17, v16, 0xCu);
      MEMORY[0x2426A4194](v16, -1, -1);

    }
    else
    {
LABEL_11:

      swift_bridgeObjectRelease();
    }
LABEL_18:
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_242132BA0();
      if (!v23)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v23 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v23)
        return swift_bridgeObjectRelease();
    }
    if (v23 >= 1)
      break;
    __break(1u);
LABEL_30:
    swift_once();
  }
  for (i = 0; i != v23; ++i)
  {
    if ((a3 & 0xC000000000000001) != 0)
    {
      v25 = MEMORY[0x2426A3A14](i, a3);
    }
    else
    {
      v25 = *(_QWORD *)(a3 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    objc_msgSend(a4, sel_removeObserver_, v25);
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t static Catalog.generativeExperiencesReadinessNotificationName.getter()
{
  return 0xD000000000000037;
}

void static Catalog.notifyGenerativeExperiencesReady()()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (notify_post("com.apple.modelcatalog.generative-experiences-readiness"))
  {
    if (qword_254399A70 != -1)
      swift_once();
    v0 = sub_24213263C();
    sub_24207BF18(v0, (uint64_t)qword_2543A6598);
    oslog = sub_242132618();
    v1 = sub_24213299C();
    if (os_log_type_enabled(oslog, v1))
    {
      v2 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v2 = 67109120;
      sub_242132A38();
      _os_log_impl(&dword_242074000, oslog, v1, "Failed to post generative experience ready notification: %u", v2, 8u);
      MEMORY[0x2426A4194](v2, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t static Catalog.monitorGenerativeExperiencesReadiness(on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_2420797C0(&qword_2543979E8);
  MEMORY[0x24BDAC7A8](v0);
  sub_24207F540();
  (*(void (**)(uint64_t, _QWORD))(v3 + 104))(v2 - v1, *MEMORY[0x24BEE6A10]);
  return sub_242132930();
}

void sub_2420A5D3C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSObject *v18;
  _QWORD v19[2];
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];
  int out_token;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2420797C0(&qword_2543979F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = sub_2421329CC();
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2421329C0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_2421326D8();
  MEMORY[0x24BDAC7A8](v11);
  if (a2)
  {
    v12 = a2;
    v13 = a2;
  }
  else
  {
    v21 = sub_2420A65B4();
    sub_2421326CC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    v19[1] = sub_2420A65F0();
    sub_2420797C0(&qword_254399D38);
    v20 = 0;
    sub_2420A6630();
    sub_242132A68();
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v9, *MEMORY[0x24BEE5750], v23);
    v13 = v20;
    v12 = (void *)sub_2421329D8();
  }
  out_token = -1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_2420A66B4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2420A6104;
  aBlock[3] = &unk_25132A6F8;
  v16 = _Block_copy(aBlock);
  v17 = v13;
  v18 = v12;
  swift_release();
  notify_register_dispatch("com.apple.modelcatalog.generative-experiences-readiness", &out_token, v18, v16);
  _Block_release(v16);

  LODWORD(v16) = out_token;
  *(_DWORD *)(swift_allocObject() + 16) = (_DWORD)v16;
  sub_24213290C();

}

uint64_t sub_2420A6068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE v5[16];

  v0 = sub_2420797C0(&qword_25719E998);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5[15] = 1;
  sub_2420797C0(&qword_2543979F0);
  sub_242132918();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2420A6104(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_2420A6140(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;

  v4 = sub_2420797C0(&qword_25719E990);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x24BEE69B0])
  {
    if (qword_254399A70 != -1)
      swift_once();
    v9 = sub_24213263C();
    sub_24207BF18(v9, (uint64_t)qword_2543A6598);
    v10 = sub_242132618();
    v11 = sub_24213299C();
    if (!os_log_type_enabled(v10, v11))
      goto LABEL_12;
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = "Finish/error monitoring generative experiences readiness";
LABEL_11:
    _os_log_impl(&dword_242074000, v10, v11, v13, v12, 2u);
    MEMORY[0x2426A4194](v12, -1, -1);
LABEL_12:

    return notify_cancel(a2);
  }
  if (v8 == *MEMORY[0x24BEE69B8])
  {
    if (qword_254399A70 != -1)
      swift_once();
    v14 = sub_24213263C();
    sub_24207BF18(v14, (uint64_t)qword_2543A6598);
    v10 = sub_242132618();
    v11 = sub_242132984();
    if (!os_log_type_enabled(v10, v11))
      goto LABEL_12;
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = "Cancelled monitoring generative experiences readiness";
    goto LABEL_11;
  }
  if (qword_254399A70 != -1)
    swift_once();
  v15 = sub_24213263C();
  sub_24207BF18(v15, (uint64_t)qword_2543A6598);
  v16 = sub_242132618();
  v17 = sub_24213299C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_242074000, v16, v17, "Unexpected termination while monitoring generative experiences readiness", v18, 2u);
    MEMORY[0x2426A4194](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return notify_cancel(a2);
}

void sub_2420A63F8(uint64_t a1)
{
  uint64_t v1;

  sub_2420A3D10(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_2420A6404(uint64_t a1)
{
  uint64_t v1;

  sub_2420A4F9C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_2420A640C(uint64_t a1)
{
  uint64_t v1;

  sub_2420A5D3C(a1, *(void **)(v1 + 16));
}

uint64_t destroy for RequestDownloadProgressInformation()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RequestDownloadProgressInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RequestDownloadProgressInformation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for RequestDownloadProgressInformation(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RequestDownloadProgressInformation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestDownloadProgressInformation(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestDownloadProgressInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestDownloadProgressInformation()
{
  return &type metadata for RequestDownloadProgressInformation;
}

unint64_t sub_2420A65B4()
{
  unint64_t result;

  result = qword_254399D50[0];
  if (!qword_254399D50[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_254399D50);
  }
  return result;
}

unint64_t sub_2420A65F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254399D48;
  if (!qword_254399D48)
  {
    v1 = sub_2421329C0();
    result = MEMORY[0x2426A40E0](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_254399D48);
  }
  return result;
}

unint64_t sub_2420A6630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254399D40;
  if (!qword_254399D40)
  {
    v1 = sub_24208C304(&qword_254399D38);
    result = MEMORY[0x2426A40E0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254399D40);
  }
  return result;
}

uint64_t sub_2420A6674()
{
  uint64_t v0;

  sub_2420797C0(&qword_2543979F0);
  sub_2420A6A34();
  sub_2420A6A50(v0);
  return sub_2420A6A20();
}

uint64_t sub_2420A66B4()
{
  sub_2420797C0(&qword_2543979F0);
  return sub_2420A6068();
}

uint64_t sub_2420A66F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2420A6704()
{
  return swift_release();
}

uint64_t sub_2420A670C()
{
  return sub_2420A6A2C();
}

uint64_t sub_2420A6718(uint64_t a1)
{
  uint64_t v1;

  return sub_2420A6140(a1, *(_DWORD *)(v1 + 16));
}

void sub_2420A6720(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_2420A54B4(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_2420A673C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2420A6770(uint64_t a1)
{
  uint64_t v1;

  return sub_2420A5708(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_2420A677C()
{
  uint64_t v0;

  sub_2420797C0(&qword_254399A18);
  sub_2420A6A34();
  sub_2420A6A50(v0);
  swift_bridgeObjectRelease();
  return sub_2420A6A20();
}

uint64_t sub_2420A67D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_2420797C0(&qword_254399A18) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_2420A565C(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2420A6814()
{
  return sub_2420A6A2C();
}

uint64_t sub_2420A6820()
{
  return sub_2420A6870((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2420A682C(void *a1)
{
  uint64_t v1;

  sub_2420797C0(&qword_25719E9A8);
  sub_2420A6A5C();
  return sub_2420A47C4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2420A6864()
{
  return sub_2420A6870((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2420A6870(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = sub_2420797C0(&qword_25719E9A8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  a1(*(_QWORD *)(v1 + 16));
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v1 + v5, v3);
  return swift_deallocObject();
}

uint64_t sub_2420A68F4()
{
  uint64_t v0;

  sub_2420797C0(&qword_25719E9A8);
  sub_2420A6A5C();
  return sub_2420A4930(*(_QWORD *)(v0 + 16));
}

void sub_2420A691C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v14;

  v14 = (id)sub_242132768();
  objc_msgSend(a8, sel_updateAssetsForSubscriber_subscriptionName_policies_queue_detailedProgress_completion_, a1, v14, a4, a5, a6, a7);

}

uint64_t sub_2420A69A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2420A69C4(uint64_t a1)
{
  sub_2420A49A4(a1);
}

unint64_t sub_2420A69CC()
{
  unint64_t result;

  result = qword_25719E9B8;
  if (!qword_25719E9B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSubscription, &type metadata for AssetSubscription);
    atomic_store(result, (unint64_t *)&qword_25719E9B8);
  }
  return result;
}

uint64_t sub_2420A6A20()
{
  return swift_deallocObject();
}

uint64_t sub_2420A6A2C()
{
  return swift_deallocObject();
}

uint64_t sub_2420A6A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v2 + v1);
}

uint64_t AJAXConfiguration.init(url:modelName:endPromptToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  _QWORD *v15;

  v12 = sub_24209745C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = sub_2420802B8();
  v14 = (_QWORD *)(a6 + *(int *)(result + 20));
  *v14 = a2;
  v14[1] = a3;
  v15 = (_QWORD *)(a6 + *(int *)(result + 24));
  *v15 = a4;
  v15[1] = a5;
  return result;
}

uint64_t type metadata accessor for AJAXConfiguration()
{
  uint64_t result;

  result = qword_2543971D8;
  if (!qword_2543971D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AJAXConfiguration.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_24209745C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AJAXConfiguration.modelName.getter()
{
  uint64_t v0;

  sub_2420802B8();
  sub_24207F720();
  return v0;
}

uint64_t AJAXConfiguration.endPromptToken.getter()
{
  uint64_t v0;

  sub_2420802B8();
  sub_24207F720();
  return v0;
}

uint64_t sub_2420A6BAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D614E6C65646F6DLL && a2 == 0xE900000000000065;
    if (v6 || (sub_242132D14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x706D6F7250646E65 && a2 == 0xEE006E656B6F5474)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_242132D14();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_2420A6D18()
{
  sub_242132D74();
  sub_242132D80();
  return sub_242132D98();
}

uint64_t sub_2420A6D5C(char a1)
{
  if (!a1)
    return 7107189;
  if (a1 == 1)
    return 0x6D614E6C65646F6DLL;
  return 0x706D6F7250646E65;
}

uint64_t sub_2420A6DBC()
{
  return sub_2420A6D18();
}

uint64_t sub_2420A6DC4()
{
  sub_242132D74();
  sub_242132D80();
  return sub_242132D98();
}

uint64_t sub_2420A6E04()
{
  char *v0;

  return sub_2420A6D5C(*v0);
}

uint64_t sub_2420A6E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420A6BAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420A6E30()
{
  sub_2420A6FE4();
  return sub_242132DBC();
}

uint64_t sub_2420A6E58()
{
  sub_2420A6FE4();
  return sub_242132DC8();
}

uint64_t AJAXConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_2420797C0(&qword_25719E9C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24207F540();
  v7 = v6 - v5;
  sub_242079800(a1, a1[3]);
  sub_2420A6FE4();
  sub_242132DB0();
  sub_24213251C();
  sub_2420A7D98(&qword_25719E9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_242132CF0();
  if (!v1)
  {
    sub_2420802B8();
    sub_2420AA14C();
    sub_2420AA14C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_2420A6FE4()
{
  unint64_t result;

  result = qword_25719E9D0;
  if (!qword_25719E9D0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214D424, &type metadata for AJAXConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719E9D0);
  }
  return result;
}

void AJAXConfiguration.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_242097180();
  v3 = v2;
  v20 = v4;
  v21 = sub_24213251C();
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  sub_2420AA0C4();
  v22 = v6;
  v23 = sub_2420797C0(&qword_25719E9E0);
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  sub_24207F540();
  v10 = v9 - v8;
  v11 = sub_2420802B8();
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v12);
  sub_2420AA064();
  sub_242079800(v3, v3[3]);
  sub_2420A6FE4();
  sub_242132DA4();
  if (v0)
  {
    sub_2420AA21C();
  }
  else
  {
    v24 = v7;
    sub_2420A7D98(&qword_25719E9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_242132C60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v22, v21);
    v13 = sub_242132C3C();
    v14 = (uint64_t *)(v1 + *(int *)(v11 + 20));
    *v14 = v13;
    v14[1] = v15;
    v16 = sub_242132C3C();
    v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v23);
    v19 = (uint64_t *)(v1 + *(int *)(v11 + 24));
    *v19 = v16;
    v19[1] = v18;
    sub_2420A726C(v1, v20);
    sub_2420AA21C();
    sub_2420A72B0(v1);
  }
  sub_2420970A0();
}

uint64_t sub_2420A726C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AJAXConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2420A72B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AJAXConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2420A72EC()
{
  AJAXConfiguration.init(from:)();
}

uint64_t sub_2420A7300(_QWORD *a1)
{
  return AJAXConfiguration.encode(to:)(a1);
}

id sub_2420A7314()
{
  id v0;
  id result;
  uint64_t v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  result = sub_2420A9358(0xD00000000000001BLL, 0x80000002421397C0);
  if (!result)
  {
    sub_2420A8E20();
    swift_allocError();
    *(_QWORD *)v2 = 0xD000000000000037;
    *(_QWORD *)(v2 + 8) = 0x80000002421397E0;
    *(_BYTE *)(v2 + 16) = 0;
    return (id)swift_willThrow();
  }
  return result;
}

void overrideAJAX(configuration:forResource:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;

  sub_242097180();
  v3 = v2;
  sub_2420AA224();
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v4);
  sub_24207F540();
  sub_2420797C0(&qword_2543971E8);
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v5);
  sub_24207F540();
  v8 = v7 - v6;
  sub_2420802B8();
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v9);
  sub_2420AA064();
  sub_2420AA144(v3);
  sub_2420AA0A4();
  if (v10)
  {
    sub_24207E9D0(v8, &qword_2543971E8);
    v11 = sub_2420A7314();
    if (!v0)
    {
      v12 = v11;
      v13 = (void *)sub_2420AA1BC();
      objc_msgSend(v12, sel_removeObjectForKey_, v13);

    }
  }
  else
  {
    sub_2420A7610(v8, v1);
    sub_2420AA22C();
    sub_242097BC8();
    sub_2420AA248();
    sub_2420A7D98(&qword_25719E9F0, (uint64_t (*)(uint64_t))type metadata accessor for AJAXConfiguration, (uint64_t)&protocol conformance descriptor for AJAXConfiguration);
    sub_2421323FC();
    if (v0)
    {
      sub_2420AA200();
      swift_release();
    }
    else
    {
      swift_release();
      sub_2421327A4();
      sub_24213278C();
      v15 = v14;
      v16 = sub_2420A7314();
      if (v15)
      {
        v17 = sub_242132768();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = 0;
      }
      v18 = (void *)sub_2420AA1BC();
      objc_msgSend(v16, sel_setObject_forKey_, v17, v18);

      swift_unknownObjectRelease();
      sub_2420AA1F4();
      sub_2420AA200();
    }
  }
  sub_2420970A0();
}

uint64_t sub_2420A75C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2420797C0(&qword_2543971E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2420A7610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AJAXConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id ajaxConfiguration(forResource:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id result;
  uint64_t v8;

  sub_2420797C0(&qword_2543971E8);
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v6);
  sub_2420AA184();
  result = overriddenAJAXConfiguration(forResource:)(v3);
  if (!v2)
  {
    v8 = sub_2420802B8();
    if (sub_2420801D0(v3, 1, v8) == 1)
    {
      sub_24207E9D0(v3, &qword_2543971E8);
      return (id)defaultAJAXConfirguration(for:)(a1, a2);
    }
    else
    {
      sub_2420A7610(v3, a2);
      return (id)sub_24207E8A8(a2, 0, 1, v8);
    }
  }
  return result;
}

id overriddenAJAXConfiguration(forResource:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id result;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_2420802B8();
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420AA184();
  result = sub_2420A7314();
  if (!v1)
  {
    v7 = result;
    v8 = (void *)sub_242132768();
    v9 = objc_msgSend(v7, sel_stringForKey_, v8);

    if (v9)
    {
      v10 = sub_242132780();
      v12 = v11;

      sub_2421323F0();
      sub_242097BC8();
      sub_2421323E4();
      v13 = sub_2420A78A8(v10, v12);
      v15 = v14;
      sub_2420A7D98(&qword_25719E9F8, (uint64_t (*)(uint64_t))type metadata accessor for AJAXConfiguration, (uint64_t)&protocol conformance descriptor for AJAXConfiguration);
      sub_2421323D8();
      sub_24207BED4(v13, v15);
      sub_242097A18();
      sub_2420A7610(v2, a1);
      v16 = a1;
      v17 = 0;
    }
    else
    {
      v16 = a1;
      v17 = 1;
    }
    return (id)sub_24207E8A8(v16, v17, 1, v4);
  }
  return result;
}

uint64_t sub_2420A78A8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_2420797C0(&qword_25719EA40);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_24207E9D0((uint64_t)v14, &qword_25719EA48);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_242132B28();
      }
      if (v2)
        v4 = (char *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_QWORD *)v2;
    }
    v6 = MEMORY[0x2426A34BC](v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_242132804();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = MEMORY[0x2426A34A4](v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_2420A9A58();
    __asm { BR              X12 }
  }
  sub_242079E50(v14, (uint64_t)v17);
  sub_242079800(v17, v17[3]);
  sub_242132480();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  sub_242079824((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

void sub_2420A7D98(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2426A40E0](a3, v5), a1);
  }
  sub_24207F428();
}

uint64_t sub_2420A7DD4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _OWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _OWORD v46[2];
  uint64_t v47;
  __int128 v48;
  uint64_t v49;

  v1 = a1;
  sub_24210D280(*a1, &v48);
  v2 = v49;
  sub_24207E9D0((uint64_t)&v48, &qword_25719F010);
  if (v2)
  {
    sub_2420797C0(&qword_25719EA20);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_24214D280;
    sub_2420797C0(&qword_25719EA28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242145B80;
    *(_QWORD *)(inited + 32) = 1953722211;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    sub_2420797C0(&qword_25719EA30);
    v5 = swift_initStackObject();
    *(_OWORD *)(v5 + 16) = xmmword_24214D290;
    *(_QWORD *)(v5 + 32) = 0x6C62616568636163;
    *(_QWORD *)(v5 + 40) = 0xE900000000000065;
    v6 = MEMORY[0x24BEE1328];
    *(_BYTE *)(v5 + 48) = 1;
    *(_QWORD *)(v5 + 72) = v6;
    *(_QWORD *)(v5 + 80) = 0xD000000000000012;
    *(_QWORD *)(v5 + 88) = 0x8000000242139880;
    *(_BYTE *)(v5 + 96) = 0;
    *(_QWORD *)(v5 + 120) = v6;
    *(_QWORD *)(v5 + 128) = 0xD000000000000013;
    *(_QWORD *)(v5 + 136) = 0x80000002421398A0;
    *(_BYTE *)(v5 + 144) = 0;
    *(_QWORD *)(v5 + 168) = v6;
    strcpy((char *)(v5 + 176), "onDeviceMemory");
    *(_QWORD *)(v5 + 216) = MEMORY[0x24BEE1768];
    *(_BYTE *)(v5 + 191) = -18;
    *(_QWORD *)(v5 + 192) = 0;
    v7 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = sub_242132708();
    *(_QWORD *)(inited + 56) = 0xD000000000000011;
    *(_QWORD *)(inited + 64) = 0x80000002421398C0;
    v8 = swift_initStackObject();
    *(_OWORD *)(v8 + 16) = xmmword_24214D280;
    *(_QWORD *)(v8 + 32) = 25705;
    *(_QWORD *)(v8 + 40) = 0xE200000000000000;
    *(_QWORD *)(v8 + 72) = v7;
    *(_QWORD *)(v8 + 48) = 2019650145;
    *(_QWORD *)(v8 + 56) = 0xE400000000000000;
    *(_QWORD *)(inited + 72) = sub_242132708();
    sub_2420797C0(&qword_25719EA00);
    *(_QWORD *)(v3 + 32) = sub_242132708();
    v49 = sub_2420797C0(&qword_25719EA38);
    *(_QWORD *)&v48 = v3;
    return sub_24207658C((uint64_t)&v48);
  }
  v10 = *v1;
  v11 = *v1 + 64;
  v12 = 1 << *(_BYTE *)(*v1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(*v1 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain();
  v16 = 0;
  v43 = v11;
  v44 = v10;
  v41 = v1;
  v42 = v15;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v16 << 6);
LABEL_26:
    v22 = *v1;
    if (*(_QWORD *)(*v1 + 16))
    {
      v23 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v18);
      v25 = *v23;
      v24 = v23[1];
      swift_bridgeObjectRetain();
      v26 = sub_242079780();
      if ((v27 & 1) != 0
        && (sub_2420A99D4(*(_QWORD *)(v22 + 56) + 32 * v26, (uint64_t)&v48),
            v28 = sub_2420797C0(&qword_25719EA00),
            (swift_dynamicCast() & 1) != 0))
      {
        v47 = *(_QWORD *)&v46[0];
        sub_2420A7DD4(&v47);
        v49 = v28;
        *(_QWORD *)&v48 = v47;
        sub_242079DB0(&v48, v46);
        swift_isUniquelyReferenced_nonNull_native();
        v29 = *v1;
        v45 = (_QWORD *)*v1;
        *v1 = 0x8000000000000000;
        v30 = sub_242079780();
        if (__OFADD__(*(_QWORD *)(v29 + 16), (v31 & 1) == 0))
          goto LABEL_42;
        v32 = v30;
        v33 = v31;
        sub_2420797C0(&qword_25719D8E8);
        if ((sub_242132B40() & 1) != 0)
        {
          v34 = sub_242079780();
          if ((v33 & 1) != (v35 & 1))
            goto LABEL_45;
          v32 = v34;
        }
        if ((v33 & 1) != 0)
        {
          v36 = (_OWORD *)(v45[7] + 32 * v32);
          sub_242079824((uint64_t)v36);
          sub_242079DB0(v46, v36);
        }
        else
        {
          v45[(v32 >> 6) + 8] |= 1 << v32;
          v37 = (_QWORD *)(v45[6] + 16 * v32);
          *v37 = v25;
          v37[1] = v24;
          sub_242079DB0(v46, (_OWORD *)(v45[7] + 32 * v32));
          v38 = v45[2];
          v39 = __OFADD__(v38, 1);
          v40 = v38 + 1;
          if (v39)
            goto LABEL_43;
          v45[2] = v40;
          swift_bridgeObjectRetain();
        }
        v1 = v41;
        *v41 = (uint64_t)v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v43;
        v10 = v44;
        v15 = v42;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  v19 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v19 >= v15)
    return swift_release();
  v20 = *(_QWORD *)(v11 + 8 * v19);
  ++v16;
  if (v20)
    goto LABEL_25;
  v16 = v19 + 1;
  if (v19 + 1 >= v15)
    return swift_release();
  v20 = *(_QWORD *)(v11 + 8 * v16);
  if (v20)
    goto LABEL_25;
  v16 = v19 + 2;
  if (v19 + 2 >= v15)
    return swift_release();
  v20 = *(_QWORD *)(v11 + 8 * v16);
  if (v20)
    goto LABEL_25;
  v16 = v19 + 3;
  if (v19 + 3 >= v15)
    return swift_release();
  v20 = *(_QWORD *)(v11 + 8 * v16);
  if (v20)
    goto LABEL_25;
  v16 = v19 + 4;
  if (v19 + 4 >= v15)
    return swift_release();
  v20 = *(_QWORD *)(v11 + 8 * v16);
  if (v20)
  {
LABEL_25:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_26;
  }
  v21 = v19 + 5;
  if (v21 >= v15)
    return swift_release();
  v20 = *(_QWORD *)(v11 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v15)
      return swift_release();
    v20 = *(_QWORD *)(v11 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_242132D38();
  __break(1u);
  return result;
}

void forceAJAX(configuration:forResourceBundle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  objc_class *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 *v61;
  void *v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD v108[5];
  char *v109;
  id v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  __int128 v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;

  sub_242097180();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v119 = v27;
  v130 = *MEMORY[0x24BDAC8D0];
  sub_2420AA224();
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v28);
  sub_2420AA0C4();
  v118 = v29;
  sub_2420797C0(&qword_2543971E8);
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v30);
  sub_2420AA19C();
  v120 = v31 - v32;
  v34 = MEMORY[0x24BDAC7A8](v33);
  v121 = (uint64_t)v108 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)v108 - v36;
  v38 = sub_2420802B8();
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v39);
  sub_2420AA19C();
  v42 = v40 - v41;
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)v108 - v44;
  type metadata accessor for CatalogClient();
  sub_242079F48();
  v46 = CatalogClient.init()();
  v47 = sub_24207C274(v26, v24);
  if (v20)
    goto LABEL_2;
  v48 = (void *)v47;
  v112 = v37;
  v115 = v26;
  v116 = v24;
  v117 = v46;
  v113 = v42;
  v114 = v45;
  sub_2420AA250();

  if (!v126)
  {
    sub_2420AA1EC(v49, &qword_25719D980);
    v127 = 0;
    v128 = 0xE000000000000000;
    sub_242132AD4();
    swift_bridgeObjectRelease();
    v127 = 0xD000000000000010;
    v128 = 0x8000000242139740;
    sub_2421327EC();
    sub_2420AA088();
    v53 = v127;
    v54 = v128;
    sub_2420A8E20();
    v55 = sub_2420970E4();
    *v56 = v53;
    v56[1] = v54;
    sub_2420A17F8(v55, (uint64_t)v56);
LABEL_2:
    swift_release();
    goto LABEL_16;
  }
  sub_242079E50(&v125, (uint64_t)&v127);
  v50 = (objc_class *)type metadata accessor for ResourceBundleContainer();
  sub_24207EA48((uint64_t)&v127, (uint64_t)&v125);
  v51 = static ResourceBundleContainer.from(resourceBundle:)();
  v52 = v115;
  v57 = (char *)v51;
  sub_2420AA1EC(v51, &qword_25719D980);
  v58 = OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_assetBacked;
  if ((v57[OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_assetBacked] & 1) != 0)
  {
    *(_QWORD *)&v125 = 0;
    *((_QWORD *)&v125 + 1) = 0xE000000000000000;
    sub_242132AD4();
    sub_2421327EC();
    sub_2421327EC();
    v59 = v125;
    sub_2420A8E20();
    v60 = sub_2420970E4();
    *v61 = v59;
    sub_2420A17F8(v60, (uint64_t)v61);

LABEL_14:
    sub_2420AA15C();
LABEL_15:
    sub_242079824((uint64_t)&v127);
    goto LABEL_16;
  }
  v62 = (void *)objc_opt_self();
  v63 = (uint64_t *)&v57[OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleData];
  v111 = v57;
  v64 = *(_QWORD *)&v57[OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleData];
  v65 = v63[1];
  sub_24207BE90(*v63, v65);
  v66 = (void *)sub_2421325A0();
  sub_24207BED4(v64, v65);
  *(_QWORD *)&v125 = 0;
  v110 = v62;
  v67 = sub_2420AA1D4(v62, sel_JSONObjectWithData_options_error_);

  if (!v67)
  {
    v78 = (id)v125;
LABEL_18:
    sub_24213248C();

    swift_willThrow();
    sub_2420AA108();
    sub_2420AA008();
    goto LABEL_15;
  }
  v68 = (id)v125;
  sub_242132A5C();
  swift_unknownObjectRelease();
  sub_2420797C0(&qword_25719EA00);
  if (!swift_dynamicCast())
  {
    sub_2420A8E20();
    v79 = sub_2420970E4();
    *v80 = 0xD00000000000001CLL;
    v80[1] = 0x8000000242139760;
    sub_2420A17F8(v79, (uint64_t)v80);
    sub_2420AA008();
    goto LABEL_14;
  }
  v122 = v123;
  sub_2420A7DD4(&v122);
  v69 = (void *)sub_2421326E4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v125 = 0;
  v70 = sub_2420AA1D4(v110, sel_dataWithJSONObject_options_error_);

  v71 = (id)v125;
  if (!v70)
  {
    v78 = v71;
    goto LABEL_18;
  }
  v72 = sub_2421325AC();
  v74 = v73;

  v75 = *(_QWORD *)&v111[OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleType];
  v76 = *(_QWORD *)&v111[OBJC_IVAR____TtC12ModelCatalog23ResourceBundleContainer_resourceBundleType + 8];
  LODWORD(v110) = v111[v58];
  objc_allocWithZone(v50);
  sub_24207BE90(v72, v74);
  swift_bridgeObjectRetain();
  v77 = ResourceBundleContainer.init(resourceBundleData:resourceBundleType:assetBacked:)(v72, v74, v75, v76, (char)v110);
  sub_2420AA250();
  if (!v124)
  {
    sub_24207E9D0((uint64_t)&v123, &qword_25719D980);
    sub_2420A8E20();
    v81 = sub_2420970E4();
    *v82 = 0xD000000000000030;
    v82[1] = 0x8000000242139780;
    sub_2420A17F8(v81, (uint64_t)v82);

    sub_2420AA15C();
    sub_2420AA008();
    sub_2420AA07C();
    goto LABEL_15;
  }
  sub_242079E50(&v123, (uint64_t)&v125);

  v83 = v119;
  sub_24207C738((uint64_t)&v125);
  v84 = (uint64_t)v112;
  sub_2420AA144(v83);
  sub_2420AA0A4();
  if (v85)
  {
    sub_242079824((uint64_t)&v125);
    sub_2420AA07C();
    sub_2420AA15C();
    sub_2420AA008();

    sub_24207E9D0(v84, &qword_2543971E8);
    goto LABEL_15;
  }
  v108[2] = v77;
  v108[3] = v72;
  v108[4] = v74;
  v116 = 0;
  sub_2420A7610(v84, (uint64_t)v114);
  sub_242079800(&v127, v129);
  v86 = sub_2420AA0D8();
  v115 = *(_QWORD *)(v86 + 16);
  v108[1] = v86;
  if (!v115)
  {
LABEL_40:
    sub_2420AA15C();
    sub_2420AA1E0();
    sub_2420AA008();
    sub_2420AA0EC();
    sub_2420AA208();
    sub_242079824((uint64_t)&v125);
    sub_2420AA100((uint64_t)&a15);
    goto LABEL_15;
  }
  v87 = (_QWORD *)(v86 + 32);
  v119 = 1;
  v109 = "urce bundle data";
  v110 = (id)0x80000002421397C0;
  v88 = (uint64_t)v114;
  while (1)
  {
    v89 = v121;
    sub_2420A726C(v88, v121);
    sub_24207E8A8(v89, 0, 1, v38);
    sub_242079800(v87, v87[3]);
    sub_2420AA120();
    v90 = v120;
    sub_2420AA144(v89);
    sub_2420AA0A4();
    if (!v85)
      break;
    sub_24207E9D0(v90, &qword_2543971E8);
    objc_allocWithZone(MEMORY[0x24BDBCF50]);
    v91 = sub_2420A9358(0xD00000000000001BLL, (uint64_t)v110);
    if (!v91)
    {
      sub_2420A8E20();
      v104 = sub_2420970E4();
      sub_2420AA014(v104, v105, (uint64_t)"Unable to access \"com.apple.modelcatalog.ajax\" defaults");
      goto LABEL_44;
    }
    v92 = v91;
    v93 = (void *)sub_242132768();
    sub_2420AA1C8((uint64_t)v93, sel_removeObjectForKey_);

    v94 = v121;
LABEL_36:
    sub_24207E9D0(v94, &qword_2543971E8);
    swift_bridgeObjectRelease();
    v103 = v119;
    if (v115 == v119)
      goto LABEL_40;
    v87 += 5;
    ++v119;
    v88 = (uint64_t)v114;
    if (__OFADD__(v103, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
  }
  sub_2420A7610(v90, v113);
  sub_2420AA22C();
  sub_242097BC8();
  sub_2420AA248();
  sub_2420A7D98(&qword_25719E9F0, (uint64_t (*)(uint64_t))type metadata accessor for AJAXConfiguration, (uint64_t)&protocol conformance descriptor for AJAXConfiguration);
  v95 = v116;
  v96 = sub_2421323FC();
  v116 = v95;
  if (v95)
  {
    sub_2420AA100((uint64_t)&a14);
    sub_242097A18();
    goto LABEL_44;
  }
  v97 = v96;
  sub_242097A18();
  sub_2421327A4();
  v112 = (char *)v97;
  sub_24213278C();
  v99 = v98;
  objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v100 = sub_2420AA164((uint64_t)v109);
  if (v100)
  {
    v101 = v100;
    if (v99)
    {
      sub_2420AA114();
      sub_242079EE0();
    }
    v102 = (void *)sub_242132768();
    sub_2420AA134((uint64_t)v102, sel_setObject_forKey_);

    swift_unknownObjectRelease();
    sub_2420AA174();
    sub_2420AA100((uint64_t)&a14);
    v94 = v121;
    goto LABEL_36;
  }
  sub_2420A8E20();
  v106 = sub_2420970E4();
  sub_2420AA014(v106, v107, (uint64_t)"Unable to access \"com.apple.modelcatalog.ajax\" defaults");
  sub_2420AA100((uint64_t)&a14);
  sub_242079EE0();
  sub_2420AA174();
LABEL_44:
  sub_24207E9D0(v121, &qword_2543971E8);
  sub_2420AA008();
  sub_2420AA108();
  sub_2420AA1E0();
  swift_bridgeObjectRelease();
  sub_2420AA0EC();
  sub_2420AA208();
  sub_242079824((uint64_t)&v125);
  sub_2420AA100((uint64_t)&a15);
  sub_242079824((uint64_t)&v127);
LABEL_16:
  sub_2420970A0();
}

unint64_t sub_2420A8E20()
{
  unint64_t result;

  result = qword_25719EC10;
  if (!qword_25719EC10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CatalogErrors.SideloadError, &type metadata for CatalogErrors.SideloadError);
    atomic_store(result, (unint64_t *)&qword_25719EC10);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> unforceAJAX(forResourceBundle:)(Swift::String forResourceBundle)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;

  sub_242097180();
  v4 = v3;
  v6 = v5;
  sub_2420AA224();
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v7);
  sub_2420AA0C4();
  v8 = sub_2420802B8();
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v9);
  sub_2420AA064();
  sub_2420797C0(&qword_2543971E8);
  sub_2420A9FF8();
  MEMORY[0x24BDAC7A8](v10);
  sub_2420AA19C();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v43 - v15;
  type metadata accessor for CatalogClient();
  sub_242079F48();
  v17 = CatalogClient.init()();
  v18 = sub_24207C274(v6, v4);
  if (v1)
    goto LABEL_2;
  v19 = (void *)v18;
  v52 = v16;
  v53 = v17;
  v50 = v2;
  v51 = v13;
  ResourceBundleContainer.toResourceBundle()();

  if (!v55)
  {
    sub_24207E9D0((uint64_t)&v54, &qword_25719D980);
    v56 = 0;
    v57 = 0xE000000000000000;
    sub_242132AD4();
    swift_bridgeObjectRelease();
    v56 = 0xD000000000000010;
    v57 = 0x8000000242139740;
    sub_2421327EC();
    sub_2420AA088();
    v20 = v56;
    v21 = v57;
    sub_2420A8E20();
    v22 = sub_2420970E4();
    *v23 = v20;
    v23[1] = v21;
    sub_2420A17F8(v22, (uint64_t)v23);
LABEL_2:
    swift_release();
    goto LABEL_24;
  }
  sub_242079E50(&v54, (uint64_t)&v56);

  sub_242079800(&v56, v58);
  v24 = sub_2420AA0D8();
  v49 = *(_QWORD *)(v24 + 16);
  if (!v49)
    goto LABEL_23;
  v43 = v24;
  v44 = v8;
  v25 = v24 + 32;
  v26 = 1;
  v45 = "urce bundle data";
  v46 = 0x80000002421397C0;
  v27 = (uint64_t)v52;
  while (1)
  {
    sub_24207EA48(v25, (uint64_t)&v54);
    sub_24207E8A8(v27, 1, 1, v8);
    sub_242079800(&v54, v55);
    v28 = sub_2420AA120();
    v29 = v51;
    sub_2420AA144(v27);
    if (sub_2420801D0(v29, 1, v8) == 1)
    {
      sub_2420AA234(v29);
      objc_allocWithZone(MEMORY[0x24BDBCF50]);
      v30 = sub_2420A9358(0xD00000000000001BLL, v46);
      if (!v30)
        goto LABEL_20;
      v31 = v30;
      v32 = (void *)sub_2420AA114();
      sub_2420AA1C8((uint64_t)v32, sel_removeObjectForKey_);

      sub_2420AA234(v27);
      sub_242079EE0();
      sub_242079824((uint64_t)&v54);
      if (v49 == v26)
        goto LABEL_23;
      goto LABEL_17;
    }
    v48 = v28;
    sub_2420A7610(v29, v50);
    sub_2420AA22C();
    sub_242097BC8();
    sub_2420AA248();
    sub_2420A7D98(&qword_25719E9F0, (uint64_t (*)(uint64_t))type metadata accessor for AJAXConfiguration, (uint64_t)&protocol conformance descriptor for AJAXConfiguration);
    sub_2421323FC();
    v34 = v33;
    swift_release();
    sub_2421327A4();
    v47 = v34;
    sub_24213278C();
    v36 = v35;
    objc_allocWithZone(MEMORY[0x24BDBCF50]);
    v37 = sub_2420AA164((uint64_t)v45);
    if (!v37)
      break;
    v38 = v37;
    if (v36)
    {
      sub_2420AA114();
      sub_242079EE0();
    }
    v39 = (void *)sub_242132768();
    sub_2420AA134((uint64_t)v39, sel_setObject_forKey_);

    swift_unknownObjectRelease();
    sub_2420AA23C();
    sub_2420AA214();
    sub_2420AA234((uint64_t)v52);
    swift_bridgeObjectRelease();
    sub_242079824((uint64_t)&v54);
    if (v49 == v26)
      goto LABEL_23;
    v27 = (uint64_t)v52;
    v8 = v44;
LABEL_17:
    v25 += 40;
    if (__OFADD__(v26++, 1))
    {
      __break(1u);
LABEL_20:
      sub_2420A8E20();
      sub_2420970E4();
      sub_2420AA040(v41, (uint64_t)"Unable to access \"com.apple.modelcatalog.ajax\" defaults");
      goto LABEL_22;
    }
  }
  sub_2420A8E20();
  sub_2420970E4();
  sub_2420AA040(v42, (uint64_t)"Unable to access \"com.apple.modelcatalog.ajax\" defaults");
  sub_2420AA214();
  sub_242079EE0();
  sub_2420AA23C();
  v27 = (uint64_t)v52;
LABEL_22:
  sub_24207E9D0(v27, &qword_2543971E8);
  sub_242079EE0();
  sub_242079824((uint64_t)&v54);
LABEL_23:
  swift_bridgeObjectRelease();
  swift_release();
  sub_242079824((uint64_t)&v56);
LABEL_24:
  sub_2420970A0();
}

id sub_2420A9358(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_242132768();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t *initializeBufferWithCopyOfBuffer for AJAXConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24213251C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AJAXConfiguration(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24213251C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AJAXConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_24213251C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AJAXConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_24213251C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AJAXConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_24213251C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for AJAXConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_24213251C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AJAXConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2420A96DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_24209745C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_2420801D0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AJAXConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2420A9760(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_24209745C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_24207E8A8(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2420A97D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24213251C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AJAXConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2420A9894 + 4 * byte_24214D2B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2420A98C8 + 4 * byte_24214D2B0[v4]))();
}

uint64_t sub_2420A98C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420A98D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420A98D8);
  return result;
}

uint64_t sub_2420A98E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420A98ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2420A98F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420A98F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AJAXConfiguration.CodingKeys()
{
  return &type metadata for AJAXConfiguration.CodingKeys;
}

unint64_t sub_2420A9918()
{
  unint64_t result;

  result = qword_25719EA08;
  if (!qword_25719EA08)
  {
    result = MEMORY[0x2426A40E0](&unk_24214D3FC, &type metadata for AJAXConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EA08);
  }
  return result;
}

unint64_t sub_2420A9958()
{
  unint64_t result;

  result = qword_25719EA10;
  if (!qword_25719EA10)
  {
    result = MEMORY[0x2426A40E0](&unk_24214D36C, &type metadata for AJAXConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EA10);
  }
  return result;
}

unint64_t sub_2420A9998()
{
  unint64_t result;

  result = qword_25719EA18;
  if (!qword_25719EA18)
  {
    result = MEMORY[0x2426A40E0](&unk_24214D394, &type metadata for AJAXConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EA18);
  }
  return result;
}

uint64_t sub_2420A99D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_2420A9A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  _QWORD v6[2];

  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_2420A9DEC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_2420A9FDC, (uint64_t)v5, a1, a2);
}

void sub_2420A9A58()
{
  __asm { BR              X11 }
}

_QWORD *sub_2420A9AB8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v4;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = sub_2420A9EF8((uint64_t)&v7, v3, v2, BYTE6(a1));
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v1 = v7;
  v1[1] = v6;
  return result;
}

uint64_t sub_2420A9CF8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_242132528();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x2426A3468]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x2426A3480]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2420A9D6C(uint64_t result)
{
  char v1;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_242132AE0();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_2420A9DEC(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  if (a3)
  {
    v6 = a4 - a3;
    v7 = a3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  result = a1(&v9, v7, v6);
  if (!v4)
    return (_QWORD *)v9;
  return result;
}

char *sub_2420A9E4C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_24213242C();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_242132444();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_242132438();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

_QWORD *sub_2420A9EF8(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a1, a1 + a4);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

_QWORD *sub_2420A9F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_2420A9A10(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

_QWORD *sub_2420A9F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_2420A9F3C(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_2420A9F88(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24207BED4(a1, a2);
  return a1;
}

uint64_t sub_2420A9F9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2420A9D6C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_2420A9FDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2420A9F9C(a1, a2);
}

void sub_2420AA008()
{
  uint64_t v0;

}

uint64_t sub_2420AA014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a2 = 0xD000000000000037;
  *(_QWORD *)(a2 + 8) = (a3 - 32) | 0x8000000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(v3 - 272) = a1;
  return swift_willThrow();
}

uint64_t sub_2420AA040@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)a1 = 0xD000000000000037;
  *(_QWORD *)(a1 + 8) = (a2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_2420AA07C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_24207BED4(v1, v0);
}

uint64_t sub_2420AA088()
{
  return sub_2421327EC();
}

uint64_t sub_2420AA0A4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2420801D0(v0, 1, v1);
}

uint64_t sub_2420AA0D8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(v0, v1);
}

uint64_t sub_2420AA0EC()
{
  uint64_t v0;

  return sub_24207BED4(*(_QWORD *)(v0 - 344), *(_QWORD *)(v0 - 336));
}

uint64_t sub_2420AA100@<X0>(uint64_t a1@<X8>)
{
  return sub_2420A72B0(*(_QWORD *)(a1 - 256));
}

uint64_t sub_2420AA108()
{
  return swift_release();
}

uint64_t sub_2420AA114()
{
  return sub_242132768();
}

uint64_t sub_2420AA120()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v0, v1);
}

id sub_2420AA134(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v3, v4);
}

uint64_t sub_2420AA144(uint64_t a1)
{
  uint64_t v1;

  return sub_2420A75C8(a1, v1);
}

uint64_t sub_2420AA14C()
{
  return sub_242132CCC();
}

uint64_t sub_2420AA15C()
{
  return swift_release();
}

id sub_2420AA164@<X0>(uint64_t a1@<X8>)
{
  return sub_2420A9358(0xD00000000000001BLL, a1 | 0x8000000000000000);
}

uint64_t sub_2420AA174()
{
  unint64_t v0;
  uint64_t v1;

  return sub_24207BED4(*(_QWORD *)(v1 - 304), v0);
}

uint64_t sub_2420AA1AC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 88) + 8))(v0, *(_QWORD *)(v1 - 96));
}

uint64_t sub_2420AA1BC()
{
  return sub_242132768();
}

id sub_2420AA1C8(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_2420AA1D4(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2, 0);
}

void sub_2420AA1E0()
{
  uint64_t v0;

}

void sub_2420AA1EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_24207E9D0(v2 - 176, a2);
}

uint64_t sub_2420AA1F4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_24207BED4(v1, v0);
}

uint64_t sub_2420AA200()
{
  uint64_t v0;

  return sub_2420A72B0(v0);
}

uint64_t sub_2420AA208()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420AA214()
{
  uint64_t v0;

  return sub_2420A72B0(*(_QWORD *)(v0 - 200));
}

uint64_t sub_2420AA21C()
{
  uint64_t v0;

  return sub_242079824(v0);
}

uint64_t sub_2420AA224()
{
  return sub_2421327B0();
}

uint64_t sub_2420AA22C()
{
  return sub_242132414();
}

void sub_2420AA234(uint64_t a1)
{
  uint64_t *v1;

  sub_24207E9D0(a1, v1);
}

uint64_t sub_2420AA23C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_24207BED4(v0, *(_QWORD *)(v1 - 224));
}

uint64_t sub_2420AA248()
{
  return sub_242132408();
}

void sub_2420AA250()
{
  ResourceBundleContainer.toResourceBundle()();
}

uint64_t sub_2420AA25C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_2420C0610();
  v2 = sub_242132960();
  v11 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v4 += 24;
      swift_bridgeObjectRetain();
      sub_24207688C((uint64_t)&v10, v5, v6, v7);
      swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    v8 = v2;
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_2420AA31C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  int v11;

  sub_2420C064C();
  v2 = sub_242132960();
  v9 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 32;
    do
    {
      v5 = *(_OWORD *)(a1 + v4 + 16);
      v10[0] = *(_OWORD *)(a1 + v4);
      v10[1] = v5;
      v11 = *(_DWORD *)(a1 + v4 + 32);
      sub_242079E68((uint64_t)v10);
      sub_242076A7C((uint64_t)&v8, (uint64_t)v10);
      swift_bridgeObjectRelease();
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    v6 = v2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_2420AA3D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_242132960();
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_24207F5FC();
      sub_242076DC4(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    sub_242097384();
    return v10;
  }
  else
  {
    v7 = v2;
    sub_242097384();
  }
  return v7;
}

uint64_t ResourceBundleIdentifier.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void static ResourceConfiguration.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  int v15;
  char v16;
  char v18;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  char v32;
  char v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int16 v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int16 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int16 v82;

  v2 = sub_2420C1928(a1);
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *(_QWORD *)(v5 + 32);
  v8 = *(_QWORD *)(v5 + 40);
  v66 = *(_QWORD **)(v5 + 48);
  v65 = *(unsigned __int8 *)(v5 + 56);
  v64 = *(_QWORD *)(v5 + 72);
  v62 = *(unsigned __int8 *)(v5 + 80);
  v60 = *(_QWORD *)(v5 + 96);
  v53 = *(_QWORD *)(v5 + 88);
  v54 = *(_QWORD *)(v5 + 104);
  v55 = *(_QWORD *)(v5 + 112);
  v56 = *(_QWORD *)(v5 + 120);
  v57 = *(_QWORD *)(v5 + 128);
  v58 = *(_QWORD *)(v5 + 136);
  v59 = *(_WORD *)(v5 + 144);
  v42 = *(_QWORD *)(v5 + 152);
  v44 = *(_QWORD *)(v5 + 160);
  v40 = *(_QWORD *)(v5 + 168);
  v38 = *(_QWORD *)(v5 + 176);
  v10 = *(_QWORD *)(v4 + 16);
  v9 = *(_QWORD *)(v4 + 24);
  v11 = *(_QWORD *)(v4 + 32);
  v12 = *(_QWORD *)(v4 + 40);
  v13 = *(_QWORD **)(v4 + 48);
  v14 = v2 == *(_QWORD *)v4 && v3 == *(_QWORD *)(v4 + 8);
  v15 = *(unsigned __int8 *)(v4 + 56);
  v63 = *(_QWORD *)(v4 + 72);
  v61 = *(unsigned __int8 *)(v4 + 80);
  v52 = *(_QWORD *)(v4 + 96);
  v45 = *(_QWORD *)(v4 + 88);
  v46 = *(_QWORD *)(v4 + 104);
  v47 = *(_QWORD *)(v4 + 112);
  v48 = *(_QWORD *)(v4 + 120);
  v49 = *(_QWORD *)(v4 + 128);
  v50 = *(_QWORD *)(v4 + 136);
  v51 = *(_WORD *)(v4 + 144);
  v41 = *(_QWORD *)(v4 + 152);
  v43 = *(_QWORD *)(v4 + 160);
  v39 = *(_QWORD *)(v4 + 168);
  v37 = *(_QWORD *)(v4 + 176);
  if (!v14)
  {
    sub_242079EB8();
    sub_2420C0C70();
    if ((v16 & 1) == 0)
      goto LABEL_40;
  }
  if (v1 != v10 || v6 != v9)
  {
    sub_242079EB8();
    sub_2420C0C70();
    if ((v18 & 1) == 0)
      goto LABEL_40;
  }
  if (v7 != v11 || v8 != v12)
  {
    sub_242079EB8();
    sub_2420C0C70();
    if ((v20 & 1) == 0)
      goto LABEL_40;
  }
  sub_2420AD16C(v66, v13);
  sub_2420C0C70();
  if ((v21 & 1) == 0)
    goto LABEL_40;
  if (((v65 ^ v15) & 1) != 0)
    goto LABEL_40;
  sub_2420AD224();
  if ((v22 & 1) == 0)
    goto LABEL_40;
  if (v64)
  {
    if (!v63)
      goto LABEL_40;
    sub_2420AD5FC(v64, v63);
    sub_2420C0C70();
    if ((v23 & 1) == 0)
      goto LABEL_40;
  }
  else if (v63)
  {
    goto LABEL_40;
  }
  if (((v62 ^ v61) & 1) != 0)
    goto LABEL_40;
  if (v60)
  {
    v25 = v53;
    v24 = v54;
    v67 = v53;
    v68 = v60;
    v27 = v55;
    v26 = v56;
    v69 = v54;
    v70 = v55;
    v29 = v57;
    v28 = v58;
    v71 = v56;
    v72 = v57;
    v73 = v58;
    v30 = v59;
    v74 = v59;
    v31 = v52;
    if (v52)
    {
      sub_2420C0F00();
      sub_2420C0B64();
      sub_2420977E0();
      sub_24207F5FC();
      static AssetSubscriptionInformation.== infix(_:_:)();
      v33 = v32;
      sub_24207F700();
      sub_242097268();
      sub_242097578();
      sub_242084E14(v53, v60);
      if ((v33 & 1) == 0)
        goto LABEL_40;
      goto LABEL_30;
    }
    sub_2420C0F00();
LABEL_39:
    v67 = v25;
    v68 = v60;
    v69 = v24;
    v70 = v27;
    v71 = v26;
    v72 = v29;
    v73 = v28;
    v74 = v30;
    v75 = v45;
    v76 = v31;
    v77 = v46;
    v78 = v47;
    v79 = v48;
    v80 = v49;
    v81 = v50;
    v82 = v51;
    sub_242084D88(v45, v31);
    sub_2420AD34C(&v67);
    goto LABEL_40;
  }
  v30 = v59;
  v29 = v57;
  v28 = v58;
  v27 = v55;
  v26 = v56;
  v25 = v53;
  v24 = v54;
  v31 = v52;
  if (v52)
    goto LABEL_39;
LABEL_30:
  if (v44)
  {
    if (!v43)
      goto LABEL_40;
    if (v42 != v41 || v44 != v43)
    {
      sub_242079EB8();
      sub_2420C0C70();
      if ((v35 & 1) == 0)
        goto LABEL_40;
    }
  }
  else if (v43)
  {
    goto LABEL_40;
  }
  if (v40)
  {
    if (!v39 || !sub_2420AD3DC(v40, v39))
      goto LABEL_40;
  }
  else if (v39)
  {
    goto LABEL_40;
  }
  if (v38 && v37)
  {
    sub_242097744();
    v36 = sub_242097198();
    sub_2420AD3F0(v36, v37);
    sub_242097830();
    sub_24207F78C();
  }
LABEL_40:
  sub_242097670();
}

void sub_2420AA850()
{
  sub_2420AB928();
}

void sub_2420AA86C()
{
  sub_2420AB928();
}

void sub_2420AA888()
{
  sub_2420AB928();
}

void sub_2420AA8A4()
{
  sub_2420AB928();
}

void sub_2420AA8C0()
{
  sub_2420AA8D4();
}

void sub_2420AA8D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v3);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    v5 = v10[1];
    if (v10[0] == 0xD000000000000013 && (sub_2420C0B54(), v6) || (sub_2420C098C() & 1) != 0)
    {
      sub_242097098(v2, v10);
    }
    else
    {
      sub_2420C0940();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      sub_2420970E4();
      *v7 = v2;
      v7[1] = v5;
      sub_2420C1024();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AAA10()
{
  sub_2420AAA24();
}

void sub_2420AAA24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v3);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    if (v10[0] == 0xD00000000000001BLL && (sub_2420C0B54(), v5) || (sub_2420C0E0C(), (sub_2420C098C() & 1) != 0))
    {
      sub_242097098(v2, v10);
    }
    else
    {
      sub_2420C0940();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      v6 = sub_2420970E4();
      sub_2420C1308(v6, v7);
      sub_2420C1024();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AAB54()
{
  sub_2420AAB68();
}

void sub_2420AAB68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v3);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    if (v10[0] == 0xD000000000000016 && (sub_2420C0B54(), v5) || (sub_2420C0E0C(), (sub_2420C098C() & 1) != 0))
    {
      sub_242097098(v2, v10);
    }
    else
    {
      sub_2420C0940();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      v6 = sub_2420970E4();
      sub_2420C1308(v6, v7);
      sub_2420C1024();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AAC98()
{
  sub_2420AACAC();
}

void sub_2420AACAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[56];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v4);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    sub_2420C17C0();
    v6 = v6 && v2 == 0xEB00000000726574;
    if (v6 || (sub_2420C098C() & 1) != 0)
    {
      sub_242097098(v3, v10);
    }
    else
    {
      sub_2420C0B64();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      sub_2420970E4();
      *v7 = 0x6C69466567616D49;
      v7[1] = v2;
      sub_242097B04();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AAE00()
{
  sub_2420AAE14();
}

void sub_2420AAE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[56];
  uint64_t v12;

  sub_242097180();
  sub_2420C0998(v4);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v11, &v12);
    sub_2420C17C0();
    v6 = v6 && v2 == 0xEE007265746E6961;
    if (v6 || (sub_2420C098C() & 1) != 0)
    {
      sub_242097098(v3, v11);
    }
    else
    {
      sub_2420C0B64();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      v7 = sub_2420970E4();
      sub_2420C17AC(v7, v8);
      sub_242097108(v9, v10);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AAF68()
{
  sub_2420AAF7C();
}

void sub_2420AAF7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v3);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    if (v10[0] == 0xD000000000000011 && (sub_2420C0B54(), v5) || (sub_2420C0E0C(), (sub_2420C098C() & 1) != 0))
    {
      sub_242097098(v2, v10);
    }
    else
    {
      sub_2420C0940();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      v6 = sub_2420970E4();
      sub_2420C1308(v6, v7);
      sub_2420C1024();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AB0AC()
{
  sub_2420AB0C0();
}

void sub_2420AB0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[56];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v4);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    sub_2420C17C0();
    v6 = v6 && v2 == 0xEB0000000072656CLL;
    if (v6 || (sub_2420C1890(), (sub_2420C098C() & 1) != 0))
    {
      sub_242097098(v3, v10);
    }
    else
    {
      sub_2420C0B64();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      sub_2420970E4();
      *v7 = 0x6163536567616D49;
      v7[1] = v2;
      sub_242097B04();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AB208()
{
  sub_2420AB21C();
}

void sub_2420AB21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[56];
  uint64_t v12;

  sub_242097180();
  sub_2420C0998(v4);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v11, &v12);
    sub_2420C17C0();
    v6 = v6 && v2 == 0xEE007265746E656DLL;
    if (v6 || (sub_2420C1890(), (sub_2420C098C() & 1) != 0))
    {
      sub_242097098(v3, v11);
    }
    else
    {
      sub_2420C0B64();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      v7 = sub_2420970E4();
      sub_2420C17AC(v7, v8);
      sub_242097108(v9, v10);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AB364()
{
  sub_2420AB928();
}

void sub_2420AB380()
{
  sub_2420AB928();
}

void sub_2420AB39C()
{
  sub_2420AB928();
}

void sub_2420AB3B8()
{
  sub_2420AB3CC();
}

void sub_2420AB3CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v3);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    if (v10[0] == 0xD000000000000017 && (sub_2420C0B54(), v5) || (sub_2420C0E0C(), (sub_2420C098C() & 1) != 0))
    {
      sub_242097098(v2, v10);
    }
    else
    {
      sub_2420C0940();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      v6 = sub_2420970E4();
      sub_2420C1308(v6, v7);
      sub_2420C1024();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AB4FC()
{
  sub_2420AB510();
}

void sub_2420AB510()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v3);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    if (v10[0] == 0xD00000000000001DLL && (sub_2420C0B54(), v5) || (sub_2420C0E0C(), (sub_2420C098C() & 1) != 0))
    {
      sub_242097098(v2, v10);
    }
    else
    {
      sub_2420C0940();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      v6 = sub_2420970E4();
      sub_2420C1308(v6, v7);
      sub_2420C1024();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AB640()
{
  sub_2420AB928();
}

void sub_2420AB65C()
{
  sub_2420AB928();
}

void sub_2420AB678()
{
  sub_2420AB68C();
}

void sub_2420AB68C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v3);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    if (v10[0] == 0xD000000000000012 && (sub_2420C0B54(), v5) || (sub_2420C0E0C(), (sub_2420C098C() & 1) != 0))
    {
      sub_242097098(v2, v10);
    }
    else
    {
      sub_2420C0940();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      v6 = sub_2420970E4();
      sub_2420C1308(v6, v7);
      sub_2420C1024();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AB7BC()
{
  sub_2420AB7D0();
}

void sub_2420AB7D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;

  sub_242097180();
  sub_2420C0998(v3);
  sub_2420797C0(&qword_254399A48);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C07F0();
  sub_2420C07D8();
  if (!v0)
  {
    sub_2420C0980();
    sub_2420C07C0();
    sub_2420C0D84();
    sub_242097098(v10, &v11);
    v5 = v10[1];
    if (v10[0] == 0xD000000000000013 && (sub_2420C0B54(), v6) || (sub_2420C098C() & 1) != 0)
    {
      sub_242097098(v2, v10);
    }
    else
    {
      sub_2420C0940();
      sub_2420C0974();
      sub_2420C0CEC();
      sub_242084DD8();
      sub_2420970E4();
      *v7 = v2;
      v7[1] = v5;
      sub_2420C1024();
      sub_242097108(v8, v9);
      sub_2420C0CF4();
    }
    sub_2420C0844();
  }
  sub_242079824(v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AB90C()
{
  sub_2420AB928();
}

void sub_2420AB928()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_242097180();
  sub_2420C1770(v3, v4);
  sub_2420797C0(&qword_254399A48);
  sub_2420C14D0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)v1[4];
  sub_2420C0920(v1, v1[3]);
  sub_2420C11A8();
  if (!v0)
  {
    sub_2420C1744();
    sub_2420C1408();
    sub_242097098(&v10, &v12);
    sub_2420C14B0();
    sub_24209796C((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_242097098(v8, &v11);
  }
  sub_242079824((uint64_t)v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420ABA18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[216];
  uint64_t v12;

  sub_242097180();
  sub_2420C1770(v3, v4);
  sub_2420797C0(&qword_254399A48);
  sub_2420C14D0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)v1[4];
  sub_2420C0920(v1, v1[3]);
  sub_2420C11A8();
  if (!v0)
  {
    sub_2420C1744();
    sub_2420C1408();
    sub_242097098(&v10, &v12);
    sub_2420C14B0();
    sub_24209796C((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    memcpy(v8, v11, 0xD8uLL);
  }
  sub_242079824((uint64_t)v1);
  sub_2420C0AD0();
  sub_2420970A0();
}

void ConfigurationBasedResource.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[40];
  uint64_t v16;
  uint64_t v17;

  sub_242097180();
  v14 = v4;
  v6 = v5;
  v12 = v8;
  v13 = v7;
  v11 = *(_QWORD *)(v7 - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v9);
  sub_242097548();
  v17 = sub_2420797C0(&qword_254399A48);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v10);
  sub_2420C0CFC();
  sub_2420C0920(v6, v6[3]);
  sub_242132DA4();
  if (!v0)
  {
    sub_2420B24F0();
    sub_242132C60();
    sub_242097098(v15, &v16);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 32))(v15, v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v12, v1, v13);
  }
  sub_242079824((uint64_t)v6);
  sub_2420A1EC0();
  sub_2420970A0();
}

void sub_2420ABC74()
{
  sub_2420ABC88();
}

void sub_2420ABC88()
{
  const void *v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  sub_242097180();
  v2 = v0;
  v4 = v3;
  sub_2420797C0(&qword_2543979A0);
  sub_2420C1180();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420C0920(v4, v4[3]);
  sub_2420C0C08();
  sub_242097098(&v9, v2);
  sub_2420B252C();
  sub_2420C12C4();
  sub_2420C0CCC((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_2420C12B8();
  sub_2420970A0();
}

void ConfigurationBasedResource.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[24];

  sub_242097180();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_2420797C0(&qword_2543979A0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_2420AA184();
  sub_2420C0920(v6, v6[3]);
  sub_2420C1574();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 24))(v10, v4, v2);
  sub_242097098(&v9, v10);
  sub_2420B252C();
  sub_242132CF0();
  sub_2420B2568((uint64_t)v10);
  sub_2420C0CCC(v0, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_2420C1458();
  sub_2420970A0();
}

void sub_2420ABE28(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, uint64_t a8@<X8>)
{
  const void *v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  sub_2420C0934(a1, v8, a2, a3, a4, a5, a6, a7, v10, v11);
  sub_2420C169C((uint64_t)&v12);
  sub_2420C1448();
  if (v13 && *(_QWORD *)(v13 + 16))
  {
    sub_2420C1134(v13);
  }
  else
  {
    *(_DWORD *)(a8 + 7) = 0;
    *(_QWORD *)a8 = 0;
  }
  sub_2420C0B48();
}

uint64_t ManagedResource<>.cost.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;

  sub_2420C194C(a1, a2, a3);
  v5 = sub_242097198();
  result = sub_2420C0F2C(v5);
  if (v11)
  {
    if (*(_QWORD *)(v11 + 16))
    {
      v7 = *(_QWORD *)(v11 + 72);
      v8 = *(_BYTE *)(v11 + 80);
      v9 = *(_BYTE *)(v11 + 81);
      v10 = *(_BYTE *)(v11 + 82);
      result = sub_242097830();
      *(_QWORD *)a4 = v7;
      *(_BYTE *)(a4 + 8) = v8;
      *(_BYTE *)(a4 + 9) = v9;
      *(_BYTE *)(a4 + 10) = v10;
      return result;
    }
    result = sub_242097830();
  }
  *(_DWORD *)(a4 + 7) = 0;
  *(_QWORD *)a4 = 0;
  return result;
}

uint64_t sub_2420ABF10()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 72))
    v1 = *(_QWORD *)(v0 + 72);
  else
    v1 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  return v1;
}

void ManagedResource<>.runtimeInformation.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_2420C194C(a1, a2, a3);
  v3 = sub_2420A1CA0();
  sub_2420C0F2C(v3);
  sub_242097AA8();
}

uint64_t sub_2420ABF7C()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t ManagedResource<>.dependencies.getter()
{
  return MEMORY[0x24BEE4AF8];
}

#error "2420ABFF4: call analysis failed (funcsize=46)"

#error "2420AC0B4: call analysis failed (funcsize=48)"

void sub_2420AC118()
{
  uint64_t v0;
  void *v1;

  v1 = sub_2420C0A9C();
  sub_2420C0864(v1);
  *(_QWORD *)(v0 + 184) = sub_2420C0DC4();
  sub_242097A00();
}

void ManagedResource<>.executionContexts.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *a1 = ManagedResource<>.executionContexts.getter(a2, a2, a4);
  sub_24207F428();
}

void sub_2420AC184()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t sub_2420AC1A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void CatalogResource<>.id.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_2420C0A70(a1, a2, a3, a4);
  v4 = sub_242097198();
  sub_2420C0F2C(v4);
  sub_24207F648();
  sub_242097AA8();
}

uint64_t sub_2420AC1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;

  sub_2420C0C54();
  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(v1 + 16))
    {
      sub_2420A1CA0();
      sub_2420C0BB4();
      sub_2420C0EC8();
      do
      {
        v4 = *(_QWORD *)(v2 + 16);
        v3 = *(_QWORD *)(v2 + 24);
        sub_24207F5FC();
        if (v4 >= v3 >> 1)
          sub_2420C0DB4((char *)(v3 > 1));
        sub_2420C0B2C();
      }
      while (!v5);
      sub_2420C1888();
    }
  }
  else
  {
    v2 = MEMORY[0x24BEE4AF8];
  }
  return sub_2420C0A54(v2);
}

uint64_t CatalogResource<>.inferenceProviders.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD v9[24];

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 24))(v9, a1, a3);
  v3 = v9[9];
  sub_2420A1CA0();
  sub_2420B2568((uint64_t)v9);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    if (*(_QWORD *)(v3 + 16))
    {
      sub_2420C0BB4();
      sub_2420C0EC8();
      do
      {
        v6 = *(_QWORD *)(v4 + 16);
        v5 = *(_QWORD *)(v4 + 24);
        sub_24207F5FC();
        if (v6 >= v5 >> 1)
          sub_2420C0DB4((char *)(v5 > 1));
        sub_2420C0B2C();
      }
      while (!v7);
    }
    swift_bridgeObjectRelease();
  }
  return sub_2420AA25C(v4);
}

uint64_t sub_2420AC36C()
{
  return swift_bridgeObjectRetain();
}

void CatalogResource<>.dependentResourceIDs.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_2420C0A70(a1, a2, a3, a4);
  v4 = sub_2420A1CA0();
  sub_2420C0F2C(v4);
  sub_242097AA8();
}

uint64_t _s12ModelCatalog21ResourceConfigurationV13preconditionsSayAA12PreconditionVGvg_0()
{
  return swift_bridgeObjectRetain();
}

void CatalogResource<>.preconditions.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_2420C0A70(a1, a2, a3, a4);
  v4 = sub_2420A1CA0();
  sub_2420C0F2C(v4);
  sub_242097AA8();
}

uint64_t sub_2420AC3D4()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 56) & 1;
}

uint64_t CatalogResource<>.sideloaded.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unsigned __int8 v6;

  v4 = sub_2420C0A70(a1, a2, a3, a4);
  sub_2420C0F2C((uint64_t)v4);
  return v6;
}

uint64_t sub_2420AC404()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 80) & 1;
}

uint64_t CatalogResource<>.assetBacked.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unsigned __int8 v6;

  v4 = sub_2420C0A70(a1, a2, a3, a4);
  sub_2420C0F2C((uint64_t)v4);
  return v6;
}

uint64_t sub_2420AC434()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 168))
    v1 = *(_QWORD *)(v0 + 168);
  else
    v1 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  return v1;
}

void CatalogResource<>.tags.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_2420C0A70(a1, a2, a3, a4);
  v4 = sub_2420A1CA0();
  sub_2420C0F2C(v4);
  sub_242097AA8();
}

void sub_2420AC4A0()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 176))
  {
    if (qword_25719D8C0 != -1)
      swift_once();
    sub_2420A1CA0();
  }
  swift_bridgeObjectRetain();
  sub_24207F428();
}

void CatalogResource<>.platforms.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  sub_2420C0A70(a1, a2, a3, a4);
  v4 = sub_2420A1CA0();
  sub_2420C0F2C(v4);
  if (!v5)
  {
    if (qword_25719D8C0 != -1)
      swift_once();
    sub_2420A1CA0();
  }
  sub_242097AA8();
}

void sub_2420AC568(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2420AC5A8()
{
  sub_2420C0EA0();
  return sub_24209773C();
}

uint64_t sub_2420AC614()
{
  return sub_2421327D4();
}

void sub_2420AC630(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2420AC66C()
{
  sub_2420C0EA0();
  return sub_24209773C();
}

uint64_t sub_2420AC6D0(uint64_t a1, uint64_t a2)
{
  return sub_2420ACA70(a1, a2, (void (*)(uint64_t))sub_242086B54);
}

uint64_t sub_2420AC6DC()
{
  sub_2421327D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420AC710(uint64_t a1, uint64_t a2)
{
  return sub_2420ACA70(a1, a2, (void (*)(uint64_t))sub_24208621C);
}

uint64_t sub_2420AC71C(uint64_t a1, uint64_t a2)
{
  return sub_2420ACA70(a1, a2, (void (*)(uint64_t))sub_242087B3C);
}

void sub_2420AC728(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2420AC760()
{
  sub_2420C0EA0();
  return sub_24209773C();
}

uint64_t sub_2420AC7B4(uint64_t a1, uint64_t a2)
{
  return sub_2420ACA70(a1, a2, (void (*)(uint64_t))sub_24208A3D8);
}

void sub_2420AC7C0()
{
  sub_24207F6D8();
  __asm { BR              X10 }
}

uint64_t sub_2420AC804()
{
  sub_24207F6D8();
  sub_2420C0EA0();
  return sub_24209773C();
}

void sub_2420AC8BC()
{
  sub_242132D80();
  sub_24207F428();
}

uint64_t sub_2420AC8DC(uint64_t a1, char a2)
{
  if (!a2)
    sub_2420C1568();
  sub_2420C0EA0();
  return sub_24209773C();
}

uint64_t sub_2420AC94C()
{
  sub_2420C0EA0();
  return sub_24209773C();
}

void sub_2420AC9B4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2420AC9F8()
{
  sub_2420C0EA0();
  return sub_24209773C();
}

uint64_t sub_2420ACA70(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  sub_2421327D4();
  return sub_24209773C();
}

void sub_2420ACAAC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420ACAD0();
}

void sub_2420ACAC8()
{
  sub_242097AA8();
}

void sub_2420ACAD0()
{
  sub_242132B94();
  __break(1u);
}

void sub_2420ACB28()
{
  sub_242132B94();
  __break(1u);
}

__n128 *sub_2420ACB80()
{
  uint64_t v0;
  __n128 *v1;
  void *v2;
  const void *v3;
  _BYTE v5[176];

  sub_2420C1530();
  sub_2420797C0(&qword_254397800);
  v1 = (__n128 *)sub_2420C0D6C();
  v1[4].n128_u64[0] = sub_2420C12EC(v1, (__n128)xmmword_24214D280);
  v1[2].n128_u64[0] = sub_24207F538();
  memcpy(v5, (const void *)(v0 + 48), sizeof(v5));
  v2 = (void *)sub_24207F648();
  memcpy(v2, v3, 0xB0uLL);
  sub_2420C03EC();
  return v1;
}

uint64_t sub_2420ACC18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  const void *v4;
  _BYTE v6[176];

  sub_2420797C0(&qword_254397800);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24214D280;
  *(_QWORD *)(v1 + 56) = &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase;
  *(_QWORD *)(v1 + 64) = sub_2420C02AC();
  v2 = swift_allocObject();
  v3 = (void *)(v2 + 16);
  *(_QWORD *)(v1 + 32) = v2;
  v4 = (const void *)(v0 + 64);
  memcpy(v6, v4, sizeof(v6));
  memcpy(v3, v4, 0xB0uLL);
  sub_2420C03EC();
  return v1;
}

void LLMAdapter.dependencies.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2420C0DE8();
  sub_2420C1758();
  sub_2420797C0(&qword_254397800);
  *(_OWORD *)(sub_2420C0D6C() + 16) = xmmword_24214D280;
  v0 = sub_2420C11C0();
  v1 = sub_2420C1040(v0);
  sub_2420C172C(*(_QWORD *)(*(_QWORD *)(v1 + 8) + 8));
  sub_2420C14C0();
  sub_2420973B4();
}

void sub_2420ACD34(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, uint64_t a8@<X8>)
{
  const void *v8;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  char v18;

  v10 = sub_2420C0934(a1, v8, a2, a3, a4, a5, a6, a7, v17, v18);
  sub_2420ABE28(v10, v11, v12, v13, v14, v15, v16, a8);
  sub_242097AA8();
}

void sub_2420ACD64(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420ABF10();
  sub_242097AA8();
}

void sub_2420ACD88(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420ABF7C();
  sub_242097AA8();
}

void sub_2420ACDAC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  v8 = sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_2420ABF94(v8);
  sub_242097AA8();
}

void sub_2420ACDD0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420ACDF4();
}

void sub_2420ACDEC()
{
  sub_242097AA8();
}

void sub_2420ACDF4()
{
  sub_242132B94();
  __break(1u);
}

void sub_2420ACE4C()
{
  sub_242132B94();
  __break(1u);
}

void sub_2420ACEA4()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  char v14;

  sub_2420C1530();
  sub_2420797C0(&qword_254397800);
  v0 = (__n128 *)sub_2420C0D6C();
  v0[4].n128_u64[0] = sub_2420C12EC(v0, (__n128)xmmword_24214D280);
  v1 = sub_24207F538();
  v0[2].n128_u64[0] = v1;
  v9 = sub_2420C1654(v1, v2, v3, v4, v5, v6, v7, v8, v13, v14);
  sub_2420C1724(v9, v10);
  v11 = (void *)sub_24207F648();
  sub_2420C1724(v11, v12);
  sub_2420C0254();
  sub_2420C171C();
}

__n128 *sub_2420ACF2C()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  void *v11;
  const void *v12;
  uint64_t v14;
  char v15;

  sub_2420C1530();
  sub_2420797C0(&qword_254397800);
  v0 = (__n128 *)sub_2420C0D6C();
  v0[4].n128_u64[0] = sub_2420C12EC(v0, (__n128)xmmword_24214D280);
  v1 = sub_24207F538();
  v0[2].n128_u64[0] = v1;
  v9 = sub_2420C1654(v1, v2, v3, v4, v5, v6, v7, v8, v14, v15);
  sub_2420C1704(v9, v10);
  v11 = (void *)sub_24207F648();
  sub_2420C1704(v11, v12);
  sub_2420C0134();
  return v0;
}

void LLMModel.dependencies.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2420C0DE8();
  sub_2420C1758();
  sub_2420797C0(&qword_254397800);
  *(_OWORD *)(sub_2420C0D6C() + 16) = xmmword_24214D280;
  v0 = sub_2420C11C0();
  v1 = sub_2420C1040(v0);
  sub_2420C172C(*(_QWORD *)(v1 + 8));
  sub_2420C14C0();
  sub_2420973B4();
}

void sub_2420AD020(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420AC184();
  sub_242097AA8();
}

void sub_2420AD044(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420AC1FC();
  sub_242097AA8();
}

void sub_2420AD068(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420AC36C();
  sub_242097AA8();
}

void sub_2420AD08C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  _s12ModelCatalog21ResourceConfigurationV13preconditionsSayAA12PreconditionVGvg_0();
  sub_242097AA8();
}

void sub_2420AD0B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420AC3D4();
  sub_242097AA8();
}

void sub_2420AD0D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420AC404();
  sub_242097AA8();
}

void sub_2420AD100(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420AC434();
  sub_242097AA8();
}

void sub_2420AD124(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0878(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420AC4A0();
  sub_242097AA8();
}

void sub_2420AD148(void **a1)
{
  void *v1;

  v1 = *a1;
  swift_bridgeObjectRelease();
  sub_2420C13B8(v1);
}

void sub_2420AD16C(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  BOOL v10;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0),
        (v5 || (sub_242079EB8(), sub_2420C0C70(), (v6 & 1) != 0)) && v2 != 1))
  {
    v7 = a2 + 7;
    v8 = a1 + 7;
    v9 = 1;
    while (v9 < v2)
    {
      v10 = *(v8 - 1) == *(v7 - 1) && *v8 == *v7;
      if (v10 || (sub_242079EB8() & 1) != 0)
      {
        ++v9;
        v7 += 2;
        v8 += 2;
        if (v2 != v9)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_242097A00();
  }
}

void sub_2420AD224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v16;

  sub_2420C0C54();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16) && v2 && v0 != v1)
  {
    v3 = (unsigned __int8 *)(v0 + 32);
    v4 = (unsigned __int8 *)(v1 + 32);
    do
    {
      v6 = *v3++;
      v5 = v6;
      if (v6)
      {
        if (v5 == 1)
        {
          v7 = 0xD000000000000025;
          v8 = 0x8000000242133F70;
        }
        else
        {
          v8 = 0x8000000242133FA0;
          v7 = 0xD000000000000013;
        }
      }
      else
      {
        v7 = 0xD00000000000002CLL;
        v8 = 0x8000000242133F40;
      }
      v10 = *v4++;
      v9 = v10;
      v11 = 0xD000000000000025;
      if (v10 == 1)
      {
        v12 = 0x8000000242133F70;
      }
      else
      {
        v11 = 0xD000000000000013;
        v12 = 0x8000000242133FA0;
      }
      if (v9)
        v13 = v11;
      else
        v13 = 0xD00000000000002CLL;
      if (v9)
        v14 = v12;
      else
        v14 = 0x8000000242133F40;
      if (v7 == v13 && v8 == v14)
      {
        sub_2420A1EFC();
      }
      else
      {
        v16 = sub_242079EB8();
        sub_242097384();
        sub_242097830();
        if ((v16 & 1) == 0)
          break;
      }
      --v2;
    }
    while (v2);
  }
  sub_2420C1074();
}

uint64_t *sub_2420AD34C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[8];
  v3 = a1[9];
  sub_242084E14(*a1, a1[1]);
  sub_242084E14(v2, v3);
  return a1;
}

BOOL sub_2420AD3DC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

void sub_2420AD3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
    __asm { BR              X10 }
  sub_242097670();
}

uint64_t sub_2420AD5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t result;
  uint64_t v30;
  int v31;
  char v32;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  int v40;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    v4 = a1;
    if (a1 != a2)
    {
      v5 = 0;
      do
      {
        v6 = *(unsigned __int8 *)(v4 + v5 + 48);
        v7 = *(_QWORD *)(v4 + v5 + 56);
        v8 = *(_QWORD *)(v4 + v5 + 64);
        v9 = *(_QWORD *)(v4 + v5 + 72);
        v10 = *(unsigned __int8 *)(v4 + v5 + 80);
        v11 = *(unsigned __int8 *)(v4 + v5 + 81);
        v12 = *(unsigned __int8 *)(v4 + v5 + 82);
        v13 = *(unsigned __int8 *)(v3 + v5 + 48);
        v15 = *(_QWORD *)(v3 + v5 + 56);
        v14 = *(_QWORD *)(v3 + v5 + 64);
        v16 = *(_QWORD *)(v3 + v5 + 72);
        v17 = *(unsigned __int8 *)(v3 + v5 + 80);
        v18 = *(unsigned __int8 *)(v3 + v5 + 81);
        v19 = *(_QWORD *)(v4 + v5 + 32) == *(_QWORD *)(v3 + v5 + 32)
           && *(_QWORD *)(v4 + v5 + 40) == *(_QWORD *)(v3 + v5 + 40);
        v20 = *(unsigned __int8 *)(v3 + v5 + 82);
        if (!v19)
        {
          v39 = *(unsigned __int8 *)(v3 + v5 + 81);
          v40 = *(unsigned __int8 *)(v3 + v5 + 80);
          v38 = *(_QWORD *)(v4 + v5 + 72);
          v36 = *(unsigned __int8 *)(v4 + v5 + 80);
          v37 = *(unsigned __int8 *)(v3 + v5 + 82);
          v35 = *(unsigned __int8 *)(v4 + v5 + 81);
          v21 = *(unsigned __int8 *)(v4 + v5 + 82);
          v22 = *(_QWORD *)(v3 + v5 + 72);
          v23 = *(_QWORD *)(v4 + v5 + 56);
          v24 = *(_QWORD *)(v4 + v5 + 64);
          v25 = *(_QWORD *)(v3 + v5 + 64);
          v26 = *(_QWORD *)(v3 + v5 + 56);
          v27 = sub_242132D14();
          v15 = v26;
          v14 = v25;
          v8 = v24;
          v7 = v23;
          v16 = v22;
          v12 = v21;
          v11 = v35;
          v10 = v36;
          v20 = v37;
          v9 = v38;
          v18 = v39;
          v17 = v40;
          v4 = a1;
          v3 = a2;
          if ((v27 & 1) == 0)
            return 0;
        }
        if (v6 == 2)
        {
          if (v13 != 2)
            return 0;
        }
        else
        {
          result = 0;
          if (v13 == 2 || ((((v6 & 1) == 0) ^ v13) & 1) == 0)
            return result;
        }
        if (v8)
        {
          if (!v14)
            return 0;
          if (v7 != v15 || v8 != v14)
          {
            v30 = v16;
            v31 = v12;
            v32 = sub_242132D14();
            result = 0;
            if ((v32 & 1) == 0)
              return result;
            if (v9 != v30)
              return result;
            if (((v10 ^ v17) & 1) != 0)
              return result;
            if (((v11 ^ v18) & 1) != 0)
              return result;
            v4 = a1;
            v3 = a2;
            if (((v31 ^ v20) & 1) != 0)
              return result;
            goto LABEL_32;
          }
        }
        else if (v14)
        {
          return 0;
        }
        result = 0;
        if (v9 != v16 || ((v10 ^ v17) & 1) != 0 || ((v11 ^ v18) & 1) != 0 || ((v12 ^ v20) & 1) != 0)
          return result;
LABEL_32:
        v5 += 56;
        --v2;
      }
      while (v2);
    }
  }
  return 1;
}

void CatalogErrors.SerializationError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420C0DE8();
  sub_2420C15BC();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_2420C0A1C();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_2420C0A38();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420C1210();
  sub_2420C10C8();
  sub_2420802AC();
  sub_24213272C();
  sub_2420C1958();
  sub_2420C105C();
  sub_2420C141C();
  sub_2420C1498();
  sub_2420C09A8();
  sub_2420973B4();
}

uint64_t sub_2420AD8CC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000242139D20 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000242139D40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_242132D14();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2420AD9B4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 0xD000000000000011;
}

unint64_t sub_2420AD9F4()
{
  char *v0;

  return sub_2420AD9B4(*v0);
}

uint64_t sub_2420AD9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420AD8CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420ADA20()
{
  sub_2420BA3AC();
  return sub_242132DBC();
}

uint64_t sub_2420ADA48()
{
  sub_2420BA3AC();
  return sub_242132DC8();
}

void sub_2420ADA74()
{
  sub_2420B7CF8();
}

uint64_t sub_2420ADA94()
{
  sub_2420BA3E8();
  return sub_242132DBC();
}

uint64_t sub_2420ADABC()
{
  sub_2420BA3E8();
  return sub_242132DC8();
}

uint64_t sub_2420ADAE4()
{
  sub_2420BA424();
  return sub_242132DBC();
}

uint64_t sub_2420ADB0C()
{
  sub_2420BA424();
  return sub_242132DC8();
}

void CatalogErrors.SerializationError.encode(to:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_242097180();
  sub_2420797C0(&qword_25719EA68);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_242097548();
  sub_2420797C0(&qword_25719EA70);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420C0CFC();
  v6 = *(_QWORD *)(sub_2420797C0(&qword_25719EA78) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_2420C1248();
  sub_2420BA3AC();
  sub_2420C13E0();
  if ((v0 & 1) != 0)
  {
    sub_2420C18D0();
    sub_2420C0BFC();
    sub_2420C0F9C();
    v4 = sub_2420C16D0();
  }
  else
  {
    sub_2420BA424();
    sub_2420C0BFC();
    sub_2420C0F9C();
    v4 = sub_2420C16E4();
  }
  sub_24209796C(v4, v5);
  sub_2420C0BD4(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_2420C12B8();
  sub_2420970A0();
}

void CatalogErrors.SerializationError.init(from:)()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_242097180();
  v3 = v2;
  v26 = v4;
  v29 = sub_2420797C0(&qword_25719EA98);
  v28 = *(_QWORD *)(v29 - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420C0E1C(v6, v23);
  v27 = sub_2420797C0(&qword_25719EAA0);
  sub_2420C15E4();
  MEMORY[0x24BDAC7A8](v7);
  sub_2420C0D14();
  v8 = sub_2420797C0(&qword_25719EAA8);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242079800(v3, v3[3]);
  sub_2420BA3AC();
  sub_242097874();
  if (v0)
    goto LABEL_10;
  v12 = sub_2420C1090();
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v8;
  if (!v13)
  {
LABEL_8:
    v21 = v30;
    sub_2420C15B4();
    sub_2420970E4();
    sub_2420797C0(&qword_25719EAB0);
    sub_2420C15C4((uint64_t)&type metadata for CatalogErrors.SerializationError);
    v22 = sub_2420C0E38();
    sub_2420C1374(v22, *MEMORY[0x24BEE26D0]);
    sub_2420C170C();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v14);
    v3 = v25;
LABEL_10:
    sub_242079824((uint64_t)v3);
    goto LABEL_11;
  }
  sub_2420C0EDC(v12, v13);
  v16 = v15;
  v18 = v17;
  sub_242097578();
  if (v16 != v18 >> 1)
  {
    v14 = v8;
    goto LABEL_8;
  }
  if ((v1 & 1) != 0)
  {
    LODWORD(v27) = v1;
    sub_2420C18D0();
    sub_2420C0FA4();
    v19 = sub_2420C139C();
    v20 = v30;
    v24 = v19;
    sub_2420C0C30();
  }
  else
  {
    sub_2420BA424();
    sub_2420C0F7C();
    v24 = sub_2420C1360();
    sub_2420C0B6C(v18, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    v20 = v30;
  }
  sub_2420C0E48();
  sub_2420C0BD4(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  sub_2420C1858();
LABEL_11:
  sub_2420C1458();
  sub_2420970A0();
}

void sub_2420ADF68()
{
  CatalogErrors.SerializationError.init(from:)();
}

void sub_2420ADF7C()
{
  CatalogErrors.SerializationError.encode(to:)();
}

void CatalogErrors.ConfigurationError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420C0DE8();
  sub_2420C15BC();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_2420C0A1C();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_2420C0A38();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420972E4();
  sub_242132738();
  sub_24213272C();
  sub_242132720();
  sub_2420802AC();
  sub_24213272C();
  sub_2420C1278();
  sub_242132720();
  sub_2420C105C();
  sub_242132750();
  sub_2420C1498();
  sub_2420C09A8();
  sub_2420973B4();
}

uint64_t sub_2420AE080(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000242139D60)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_242132D14();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_2420AE104()
{
  return 0xD000000000000014;
}

uint64_t sub_2420AE120(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242132D14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2420AE1E4(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_2420AE200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420AE080(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2420AE228()
{
  sub_2420BA460();
  return sub_242132DBC();
}

uint64_t sub_2420AE250()
{
  sub_2420BA460();
  return sub_242132DC8();
}

uint64_t sub_2420AE278()
{
  char *v0;

  return sub_2420AE1E4(*v0);
}

uint64_t sub_2420AE280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420AE120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420AE2A4()
{
  sub_2420BA49C();
  return sub_242132DBC();
}

uint64_t sub_2420AE2CC()
{
  sub_2420BA49C();
  return sub_242132DC8();
}

void CatalogErrors.ConfigurationError.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_242097180();
  v12 = v1;
  v4 = v3;
  v14 = *(_QWORD *)(sub_2420797C0(&qword_25719EAB8) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(sub_2420797C0(&qword_25719EAC0) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v8);
  sub_2420AA184();
  v9 = *v0;
  v11[1] = v0[2];
  v11[2] = v9;
  v11[0] = v0[3];
  sub_242079800(v4, v4[3]);
  sub_2420BA460();
  sub_2420C0C08();
  sub_2420BA49C();
  sub_242132C84();
  v10 = v12;
  sub_242132CCC();
  if (!v10)
    sub_242132CCC();
  sub_2420C0B6C((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  sub_2420C0CCC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  sub_2420C0AD0();
  sub_2420970A0();
}

void CatalogErrors.ConfigurationError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;

  sub_242097180();
  v5 = v4;
  v31 = v6;
  sub_2420797C0(&qword_25719EAD8);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v7);
  sub_2420C0D14();
  v8 = sub_2420797C0(&qword_25719EAE0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_2420AA184();
  sub_242079800(v5, v5[3]);
  sub_2420BA460();
  sub_242132DA4();
  if (v1)
    goto LABEL_6;
  v30 = v5;
  v32 = v9;
  v10 = sub_242132C6C();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = v8;
  v13 = v2;
  if (!v11
    || (sub_2420C0590(1, v11, v10, v10 + 32, 0, (2 * v11) | 1),
        v15 = v14,
        v17 = v16,
        sub_2420A1B60(),
        v15 != v17 >> 1))
  {
    v18 = sub_2420C15B4();
    sub_2420970E4();
    v20 = v19;
    sub_2420797C0(&qword_25719EAB0);
    *v20 = &type metadata for CatalogErrors.ConfigurationError;
    sub_242132BF4();
    sub_2420C0E38();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
    sub_242097610();
    swift_unknownObjectRelease();
    v21 = sub_2420C0EB4();
    v22(v21);
    v5 = v30;
LABEL_6:
    v28 = (uint64_t)v5;
    goto LABEL_7;
  }
  sub_2420BA49C();
  sub_242132BE8();
  v29 = sub_2420C1738();
  v24 = v23;
  v25 = sub_2420C1738();
  v27 = v26;
  sub_2420C0B6C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_2420C0E48();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v13, v12);
  v28 = (uint64_t)v30;
  *v31 = v29;
  v31[1] = v24;
  v31[2] = v25;
  v31[3] = v27;
LABEL_7:
  sub_242079824(v28);
  sub_2420C0AD0();
  sub_2420970A0();
}

void sub_2420AE724()
{
  CatalogErrors.ConfigurationError.init(from:)();
}

void sub_2420AE738()
{
  CatalogErrors.ConfigurationError.encode(to:)();
}

void CatalogErrors.RequestResourceError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420C0DE8();
  sub_2420C15BC();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_2420C0A1C();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_2420C0A38();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420C1210();
  sub_2420C10C8();
  sub_2420802AC();
  sub_24213272C();
  sub_2420C1958();
  sub_2420C105C();
  sub_2420C141C();
  sub_2420C1498();
  sub_2420C09A8();
  sub_2420973B4();
}

uint64_t sub_2420AE82C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000242139D80 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000242139DA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_242132D14();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2420AE918(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0xD00000000000001ALL;
}

unint64_t sub_2420AE954()
{
  char *v0;

  return sub_2420AE918(*v0);
}

uint64_t sub_2420AE95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420AE82C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420AE980()
{
  sub_2420BA4D8();
  return sub_242132DBC();
}

uint64_t sub_2420AE9A8()
{
  sub_2420BA4D8();
  return sub_242132DC8();
}

uint64_t sub_2420AE9D0()
{
  sub_2420BA514();
  return sub_242132DBC();
}

uint64_t sub_2420AE9F8()
{
  sub_2420BA514();
  return sub_242132DC8();
}

uint64_t sub_2420AEA20()
{
  sub_2420BA550();
  return sub_242132DBC();
}

uint64_t sub_2420AEA48()
{
  sub_2420BA550();
  return sub_242132DC8();
}

void CatalogErrors.RequestResourceError.encode(to:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_242097180();
  sub_2420797C0(&qword_25719EAE8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_242097548();
  sub_2420797C0(&qword_25719EAF0);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420C0CFC();
  v6 = *(_QWORD *)(sub_2420797C0(&qword_25719EAF8) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v3);
  sub_2420C1248();
  sub_2420BA4D8();
  sub_2420C13E0();
  if ((v0 & 1) != 0)
  {
    sub_2420C18C4();
    sub_2420C0BFC();
    sub_2420C0F9C();
    v4 = sub_2420C16D0();
  }
  else
  {
    sub_2420BA550();
    sub_2420C0BFC();
    sub_2420C0F9C();
    v4 = sub_2420C16E4();
  }
  sub_24209796C(v4, v5);
  sub_2420C0BD4(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_2420C12B8();
  sub_2420970A0();
}

void CatalogErrors.RequestResourceError.init(from:)()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_242097180();
  v3 = v2;
  v26 = v4;
  v29 = sub_2420797C0(&qword_25719EB18);
  v28 = *(_QWORD *)(v29 - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420C0E1C(v6, v23);
  v27 = sub_2420797C0(&qword_25719EB20);
  sub_2420C15E4();
  MEMORY[0x24BDAC7A8](v7);
  sub_2420C0D14();
  v8 = sub_2420797C0(&qword_25719EB28);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242079800(v3, v3[3]);
  sub_2420BA4D8();
  sub_242097874();
  if (v0)
    goto LABEL_10;
  v12 = sub_2420C1090();
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v8;
  if (!v13)
  {
LABEL_8:
    v21 = v30;
    sub_2420C15B4();
    sub_2420970E4();
    sub_2420797C0(&qword_25719EAB0);
    sub_2420C15C4((uint64_t)&type metadata for CatalogErrors.RequestResourceError);
    v22 = sub_2420C0E38();
    sub_2420C1374(v22, *MEMORY[0x24BEE26D0]);
    sub_2420C170C();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v14);
    v3 = v25;
LABEL_10:
    sub_242079824((uint64_t)v3);
    goto LABEL_11;
  }
  sub_2420C0EDC(v12, v13);
  v16 = v15;
  v18 = v17;
  sub_242097578();
  if (v16 != v18 >> 1)
  {
    v14 = v8;
    goto LABEL_8;
  }
  if ((v1 & 1) != 0)
  {
    LODWORD(v27) = v1;
    sub_2420C18C4();
    sub_2420C0FA4();
    v19 = sub_2420C139C();
    v20 = v30;
    v24 = v19;
    sub_2420C0C30();
  }
  else
  {
    sub_2420BA550();
    sub_2420C0F7C();
    v24 = sub_2420C1360();
    sub_2420C0B6C(v18, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    v20 = v30;
  }
  sub_2420C0E48();
  sub_2420C0BD4(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  sub_2420C1858();
LABEL_11:
  sub_2420C1458();
  sub_2420970A0();
}

void sub_2420AEE88()
{
  CatalogErrors.RequestResourceError.init(from:)();
}

void sub_2420AEE9C()
{
  CatalogErrors.RequestResourceError.encode(to:)();
}

uint64_t CatalogErrors.SideloadError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420C15BC();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v0);
  sub_2420C0A1C();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_2420C0A38();
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v2);
  sub_2420C158C();
  sub_2420C10C8();
  sub_2420802AC();
  sub_24213272C();
  sub_242097A28();
  sub_242132720();
  sub_2420C105C();
  sub_2420C141C();
  sub_2420C1498();
  return sub_2420C09A8();
}

uint64_t sub_2420AEFD4(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v6;

  if (a1 == 0xD00000000000001DLL && a2 == 0x8000000242139DC0 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x5364696C61766E69 && a2 == 0xEF64616F6C656469;
    if (v5 || (sub_242132D14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000242139DE0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v6 = sub_242132D14();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_2420AF144(char a1)
{
  if (!a1)
    return 0xD00000000000001DLL;
  if (a1 == 1)
    return 0x5364696C61766E69;
  return 0xD000000000000010;
}

uint64_t sub_2420AF1B0()
{
  return sub_242132D80();
}

uint64_t sub_2420AF1D4()
{
  return 12383;
}

void sub_2420AF1E0(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_242079EB8();
    sub_242097384();
  }
  sub_24207F428();
}

uint64_t sub_2420AF240()
{
  char *v0;

  return sub_2420AF144(*v0);
}

uint64_t sub_2420AF248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420AEFD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420AF26C()
{
  sub_2420BA58C();
  return sub_242132DBC();
}

uint64_t sub_2420AF294()
{
  sub_2420BA58C();
  return sub_242132DC8();
}

void sub_2420AF2BC(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_2420AF1E0(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_2420AF2E4()
{
  sub_2420BA640();
  return sub_242132DBC();
}

uint64_t sub_2420AF30C()
{
  sub_2420BA640();
  return sub_242132DC8();
}

uint64_t sub_2420AF334()
{
  sub_2420BA604();
  return sub_242132DBC();
}

uint64_t sub_2420AF35C()
{
  sub_2420BA604();
  return sub_242132DC8();
}

uint64_t sub_2420AF384()
{
  sub_2420BA5C8();
  return sub_242132DBC();
}

uint64_t sub_2420AF3AC()
{
  sub_2420BA5C8();
  return sub_242132DC8();
}

void CatalogErrors.SideloadError.encode(to:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_242097180();
  v36 = v2;
  v5 = v4;
  v6 = sub_2420797C0(&qword_25719EB30);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v7);
  sub_2420AA0C4();
  v29 = v8;
  v9 = sub_2420797C0(&qword_25719EB38);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v10);
  sub_2420C0CFC();
  v26 = *(_QWORD *)(sub_2420797C0(&qword_25719EB40) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v11);
  sub_2420C0D14();
  v12 = sub_2420797C0(&qword_25719EB48);
  v34 = *(_QWORD *)(v12 - 8);
  v35 = v12;
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v1[1];
  v32 = *v1;
  v33 = v16;
  v17 = *((unsigned __int8 *)v1 + 16);
  sub_242079800(v5, v5[3]);
  sub_2420BA58C();
  sub_242132DB0();
  if (v17)
  {
    if (v17 == 1)
    {
      sub_2420C18B8();
      v18 = v35;
      sub_2420C0BFC();
      sub_2420C0F9C();
      v19 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
      v20 = v3;
    }
    else
    {
      sub_2420C178C();
      v24 = v29;
      v18 = v35;
      sub_2420C0BFC();
      sub_2420C0F9C();
      v19 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8);
      v20 = v24;
    }
    sub_2420C0CCC(v20, v19);
    v23 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v21 = (uint64_t)v15;
    v22 = v18;
  }
  else
  {
    sub_2420BA640();
    sub_2420C0BFC();
    sub_2420C0F9C();
    sub_2420C1750(v0, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    v21 = sub_242097A28();
  }
  v23(v21, v22);
  sub_2420C1458();
  sub_2420970A0();
}

void CatalogErrors.SideloadError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;

  sub_242097180();
  v4 = v3;
  v40 = v5;
  v39 = *(_QWORD *)(sub_2420797C0(&qword_25719EB70) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v6);
  sub_2420C0E1C(v7, v35);
  v38 = *(_QWORD *)(sub_2420797C0(&qword_25719EB78) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v8);
  sub_2420AA0C4();
  v41 = v9;
  v10 = sub_2420797C0(&qword_25719EB80);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_2420AA184();
  v12 = sub_2420797C0((uint64_t *)&unk_25719EB88);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_242097560();
  v44 = v4;
  sub_2420A23D8(v4);
  sub_2420BA58C();
  sub_242132DA4();
  if (v0)
  {
    v14 = (uint64_t)v4;
LABEL_11:
    sub_242079824(v14);
    goto LABEL_12;
  }
  v36 = v11;
  v37 = v13;
  v15 = sub_242132C6C();
  v16 = *(_QWORD *)(v15 + 16);
  v17 = v12;
  if (!v16)
  {
    v14 = (uint64_t)v4;
LABEL_10:
    v26 = sub_2420C15B4();
    sub_2420970E4();
    v28 = v27;
    sub_2420797C0(&qword_25719EAB0);
    *v28 = &type metadata for CatalogErrors.SideloadError;
    sub_242132BF4();
    sub_2420C0E38();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    sub_2420C170C();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v2, v17);
    goto LABEL_11;
  }
  v18 = *(unsigned __int8 *)(v15 + 32);
  sub_2420C0590(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    v14 = (uint64_t)v4;
    v17 = v12;
    goto LABEL_10;
  }
  v45 = v18;
  if (v18)
  {
    if (v18 == 1)
    {
      sub_2420C18B8();
      sub_2420C0BE0();
      v23 = sub_2420C17CC();
      v24 = (uint64_t)v4;
      v25 = v13;
      v31 = v30;
      sub_2420C1750(v41, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
    }
    else
    {
      sub_2420C178C();
      sub_2420C0BE0();
      v24 = (uint64_t)v4;
      v25 = v13;
      v29 = sub_2420C1714();
      v34 = v33;
      v42 = v29;
      sub_2420C0B6C(v43, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
      v23 = v42;
      v31 = v34;
    }
  }
  else
  {
    sub_2420BA640();
    sub_2420C0BE0();
    v23 = sub_2420C17CC();
    v25 = v13;
    v31 = v32;
    sub_2420C0CD4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    v24 = (uint64_t)v44;
  }
  sub_2420C1440();
  sub_242097598(v22, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
  *(_QWORD *)v40 = v23;
  *(_QWORD *)(v40 + 8) = v31;
  *(_BYTE *)(v40 + 16) = v45;
  sub_242079824(v24);
LABEL_12:
  sub_242097A70();
  sub_2420970A0();
}

void sub_2420AFA84()
{
  CatalogErrors.SideloadError.init(from:)();
}

void sub_2420AFA98()
{
  CatalogErrors.SideloadError.encode(to:)();
}

void InferenceProvider.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void InferenceProvider.hostedOnServer.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  BOOL v5;

  if (*((_BYTE *)v0 + 16) == 2)
  {
    v1 = *v0;
    v2 = v0[1];
    if (v1 != 0xD00000000000001ALL || (sub_2420C11E0(), !v5))
    {
      sub_242079EB8();
      sub_2420C0C70();
      if ((v3 & 1) == 0)
      {
        if (v1 != 0xD00000000000001BLL || (sub_2420C11E0(), !v5))
        {
          sub_242079EB8();
          sub_2420C0C70();
          if ((v4 & 1) == 0)
          {
            v5 = v1 == 2019650145 && v2 == 0xE400000000000000;
            if (!v5 && (sub_242079EB8() & 1) == 0)
            {
              if (v1 != 0xD000000000000011 || (sub_2420C11E0(), !v5))
              {
                if ((sub_242079EB8() & 1) == 0)
                {
                  if (v1 != 0xD00000000000001BLL || (sub_2420C11E0(), !v5))
                    sub_242079EB8();
                }
              }
            }
          }
        }
      }
    }
  }
  sub_242097A00();
}

ModelCatalog::InferenceProvider __swiftcall InferenceProvider.init(id:hostedOnServerOverride:)(Swift::String id, Swift::Bool_optional hostedOnServerOverride)
{
  uint64_t v2;
  ModelCatalog::InferenceProvider result;

  *(Swift::String *)v2 = id;
  *(Swift::Bool_optional *)(v2 + 16) = hostedOnServerOverride;
  result.id = id;
  result.hostedOnServerOverride = hostedOnServerOverride;
  return result;
}

void static InferenceProvider.TokenGenerationInference.getter(uint64_t a1@<X8>)
{
  sub_2420C0AEC(a1);
}

void static InferenceProvider.VisualGenerationInference.getter(uint64_t a1@<X8>)
{
  sub_2420C0AEC(a1);
}

void static InferenceProvider.AJAXInferenceProvider.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 2019650145;
  *(_QWORD *)(a1 + 8) = 0xE400000000000000;
  *(_BYTE *)(a1 + 16) = 2;
}

void static InferenceProvider.PrivateMLClient.getter(uint64_t a1@<X8>)
{
  sub_2420C0AEC(a1);
}

void static InferenceProvider.SafetyGenerationInference.getter(uint64_t a1@<X8>)
{
  sub_2420C0AEC(a1);
}

void InferenceProvider.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_24207F5FC();
  sub_2420C0FDC();
  sub_24207F700();
  if (v1 != 2)
    sub_242132D8C();
  sub_242132D8C();
  sub_242097A00();
}

void static InferenceProvider.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = sub_2420C10D0(a1);
  if (v1 != *v3 || v2 != v3[1])
  {
    sub_242079EB8();
    sub_2420C0C70();
  }
  sub_24207F428();
}

uint64_t sub_2420AFD74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000242139E00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_242132D14();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2420AFE48(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000016;
  else
    return 25705;
}

uint64_t sub_2420AFE78()
{
  char *v0;

  return sub_2420AFE48(*v0);
}

uint64_t sub_2420AFE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420AFD74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420AFEA4()
{
  sub_2420BA67C();
  return sub_242132DBC();
}

uint64_t sub_2420AFECC()
{
  sub_2420BA67C();
  return sub_242132DC8();
}

void InferenceProvider.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_242097180();
  v3 = v2;
  v5 = *(_QWORD *)(sub_2420797C0(&qword_254399200) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C1344();
  sub_242079800(v3, v3[3]);
  sub_2420BA67C();
  sub_2420C1574();
  sub_2420C17F8();
  sub_242132CCC();
  if (!v0)
    sub_242132C9C();
  sub_2420C0B6C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_2420A1EC0();
  sub_2420970A0();
}

void InferenceProvider.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2420974F0();
  sub_242097744();
  sub_2420C0C98();
  sub_24207F78C();
  if (v1 != 2)
    sub_2420C0BC8();
  sub_2420C12A4();
  sub_242079F68();
  sub_2420C0B1C();
}

void InferenceProvider.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  sub_242097180();
  a22 = v25;
  a23 = v26;
  v28 = v27;
  v30 = v29;
  sub_2420797C0(&qword_254399050);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420C0AA8();
  sub_2420BA67C();
  sub_2420C0D60();
  if (v23)
  {
    sub_24209769C();
  }
  else
  {
    a13 = 0;
    v34 = sub_242097498();
    v36 = v35;
    a12 = 1;
    sub_242097464();
    v37 = sub_242132C0C();
    sub_24209796C((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    *(_QWORD *)v30 = v34;
    *(_QWORD *)(v30 + 8) = v36;
    *(_BYTE *)(v30 + 16) = v37;
    sub_242079824(v28);
    sub_242097578();
  }
  sub_242097664();
  sub_2420970A0();
}

void sub_2420B0148(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  InferenceProvider.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_2420B0174()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2420976A4();
  sub_242097744();
  sub_2420C0C98();
  sub_24207F78C();
  if (v1 != 2)
    sub_2420C0BC8();
  sub_2420C12A4();
  sub_242079F68();
  sub_2420C0B1C();
}

#error "2420B01D4: call analysis failed (funcsize=5)"

void sub_2420B01E0()
{
  InferenceProvider.encode(to:)();
}

void sub_2420B01F4()
{
  qword_25719EA50 = (uint64_t)&unk_2513220B0;
}

ModelCatalog::Platform __swiftcall Platform.init(platformType:version:)(ModelCatalog::Platform::PlatformType platformType, Swift::String version)
{
  uint64_t v2;
  ModelCatalog::Platform result;

  *(_BYTE *)v2 = *(_BYTE *)platformType;
  *(Swift::String *)(v2 + 8) = version;
  result.version = version;
  result.platformType = platformType;
  return result;
}

void ResourceConfiguration.resourceType.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void ResourceConfiguration.sourceName.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void ResourceConfiguration.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t ResourceConfiguration.dependentResourceIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResourceConfiguration.sideloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t ResourceConfiguration.runtimeInformation.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResourceConfiguration.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ResourceConfiguration.assetSubscriptionInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 104);
  v5 = *(_QWORD *)(v1 + 112);
  v6 = *(_QWORD *)(v1 + 120);
  v7 = *(_QWORD *)(v1 + 128);
  v8 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(v1 + 144);
  return sub_242084D88(v2, v3);
}

void ResourceConfiguration.hostedInAsset.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t ResourceConfiguration.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResourceConfiguration.platforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResourceConfiguration.init(resourceType:id:dependentResourceIDs:preconditions:runtimeInformation:assetBacked:assetSubscriptionInformation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __int128 *a10)
{
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v18 = *a10;
  v19 = a10[1];
  v20 = a10[2];
  v21 = *((_QWORD *)a10 + 6);
  v22 = *((_WORD *)a10 + 28);
  if (qword_25719D8C0 != -1)
  {
    v28 = a7;
    sub_2420C1428();
    v20 = v25;
    v19 = v26;
    v18 = v27;
    a7 = v28;
  }
  v23 = qword_25719EA50;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0xE000000000000000;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_BYTE *)(a9 + 56) = 1;
  *(_QWORD *)(a9 + 64) = a6;
  *(_QWORD *)(a9 + 72) = a7;
  *(_BYTE *)(a9 + 80) = a8 & 1;
  *(_OWORD *)(a9 + 88) = v18;
  *(_OWORD *)(a9 + 104) = v19;
  *(_OWORD *)(a9 + 120) = v20;
  *(_QWORD *)(a9 + 136) = v21;
  *(_WORD *)(a9 + 144) = v22;
  *(_QWORD *)(a9 + 152) = 0;
  *(_QWORD *)(a9 + 160) = 0;
  *(_QWORD *)(a9 + 168) = 0;
  *(_QWORD *)(a9 + 176) = v23;
  return swift_bridgeObjectRetain();
}

uint64_t ResourceConfiguration.init(resourceType:sourceName:id:dependentResourceIDs:preconditions:runtimeInformation:assetBacked:assetSubscriptionInformation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __n128 a10, __n128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_2420C147C();
  sub_2420C10E4();
  v38 = sub_2420C1964(a30);
  if (qword_25719D8C0 != -1)
  {
    v44 = v36;
    v45 = v37;
    v43 = v35;
    sub_2420C1428();
    v40 = a9;
    v39 = a10;
    v38 = a11;
    v35 = v43;
    v36 = v44;
    v37 = v45;
  }
  sub_2420C0B74(v38, v39, v40, qword_25719EA50, v31, v32, v33, v34, v35, v36, v37);
  *(_QWORD *)(v30 + 168) = 0;
  *(_QWORD *)(v30 + 176) = v41;
  return sub_2420C0DCC();
}

uint64_t ResourceConfiguration.init(resourceType:sourceName:id:dependentResourceIDs:preconditions:runtimeInformation:assetBacked:assetSubscriptionInformation:tags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __n128 a10, __n128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_2420C147C();
  sub_2420C10E4();
  v38 = sub_2420C1964(a30);
  if (qword_25719D8C0 != -1)
  {
    v46 = v37;
    v44 = v35;
    v45 = v36;
    sub_2420C1428();
    v40 = a9;
    v39 = a10;
    v38 = a11;
    v35 = v44;
    v36 = v45;
    v37 = v46;
  }
  sub_2420C0B74(v38, v39, v40, qword_25719EA50, v31, v32, v33, v34, v35, v36, v37);
  *(_QWORD *)(v30 + 168) = v42;
  *(_QWORD *)(v30 + 176) = v41;
  return sub_2420C0DCC();
}

__n128 ResourceConfiguration.init(resourceType:sourceName:id:dependentResourceIDs:preconditions:runtimeInformation:assetBacked:assetSubscriptionInformation:tags:platforms:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  __int128 v14;
  uint64_t v15;
  __int16 v16;
  __n128 result;

  v14 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 88) = *(_OWORD *)a12;
  v15 = *(_QWORD *)(a12 + 48);
  v16 = *(_WORD *)(a12 + 56);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = 1;
  *(_QWORD *)(a9 + 64) = a8;
  *(_QWORD *)(a9 + 72) = a10;
  *(_BYTE *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 104) = v14;
  result = *(__n128 *)(a12 + 32);
  *(__n128 *)(a9 + 120) = result;
  *(_QWORD *)(a9 + 136) = v15;
  *(_WORD *)(a9 + 144) = v16;
  *(_QWORD *)(a9 + 152) = 0;
  *(_QWORD *)(a9 + 160) = 0;
  *(_QWORD *)(a9 + 168) = a13;
  *(_QWORD *)(a9 + 176) = a14;
  return result;
}

uint64_t ResourceConfiguration.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1[6];
  v4 = v1[9];
  v6 = v1[12];
  v7 = v1[20];
  v8 = v1[21];
  v9 = v1[22];
  sub_242097744();
  sub_2420C0CE4();
  sub_24207F78C();
  sub_242079ED8();
  sub_2420C18B0();
  sub_242079F20();
  sub_2420977E0();
  sub_2420C1604();
  sub_242097268();
  sub_2420C180C();
  sub_2420BA1EC(a1, v3);
  swift_bridgeObjectRelease();
  sub_2420C0D2C();
  sub_2420C13B0();
  sub_2420BA150();
  sub_2420A1B60();
  sub_2420C0D2C();
  if (v4)
  {
    sub_2420C0B64();
    sub_2420BA000(a1, v4);
    sub_242097578();
  }
  sub_2420C0D2C();
  if (v6)
  {
    sub_2420C0D2C();
    AssetSubscriptionInformation.hash(into:)();
    if (v7)
      goto LABEL_5;
  }
  else
  {
    sub_2420C0D2C();
    if (v7)
    {
LABEL_5:
      sub_2420C0D2C();
      sub_242079ED8();
      sub_2420C18B0();
      sub_242079F20();
      if (v8)
        goto LABEL_6;
LABEL_10:
      sub_2420C0D2C();
      if (v9)
        goto LABEL_7;
      return sub_2420C0D2C();
    }
  }
  sub_2420C0D2C();
  if (!v8)
    goto LABEL_10;
LABEL_6:
  sub_2420C0D2C();
  sub_24207F5FC();
  sub_2420B9FB8();
  sub_24207F700();
  if (v9)
  {
LABEL_7:
    sub_2420C0D2C();
    sub_242097744();
    sub_2420B9EC4();
    return swift_bridgeObjectRelease();
  }
  return sub_2420C0D2C();
}

uint64_t sub_2420B07A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 0x656372756F736572 && a2 == 0xEC00000065707954;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x614E656372756F73 && a2 == 0xEA0000000000656DLL;
    if (v6 || (sub_242132D14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 25705 && a2 == 0xE200000000000000;
      if (v7 || (sub_242132D14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000242139E20 || (sub_242132D14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x64616F6C65646973 && a2 == 0xEA00000000006465;
        if (v8 || (sub_242132D14() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x69646E6F63657270 && a2 == 0xED0000736E6F6974;
          if (v9 || (sub_242132D14() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x8000000242139860 || (sub_242132D14() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = a1 == 0x6361427465737361 && a2 == 0xEB0000000064656BLL;
            if (v10 || (sub_242132D14() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000242139E40 || (sub_242132D14() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              v11 = a1 == 0x6E49646574736F68 && a2 == 0xED00007465737341;
              if (v11 || (sub_242132D14() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                v12 = a1 == 1936154996 && a2 == 0xE400000000000000;
                if (v12 || (sub_242132D14() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else if (a1 == 0x6D726F6674616C70 && a2 == 0xE900000000000073)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else
                {
                  v14 = sub_242132D14();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 11;
                  else
                    return 12;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2420B0CB4()
{
  return 12;
}

uint64_t sub_2420B0CBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2420B0CF8 + 4 * byte_24214D4AC[a1]))(0x656372756F736572, 0xEC00000065707954);
}

uint64_t sub_2420B0CF8()
{
  return 0x614E656372756F73;
}

uint64_t sub_2420B0D1C()
{
  return 25705;
}

unint64_t sub_2420B0D28()
{
  return 0xD000000000000014;
}

uint64_t sub_2420B0DDC()
{
  return 0x6E49646574736F68;
}

uint64_t sub_2420B0E00()
{
  return 1936154996;
}

uint64_t sub_2420B0E10()
{
  return 0x6D726F6674616C70;
}

uint64_t sub_2420B0E2C()
{
  unsigned __int8 *v0;

  return sub_2420B0CBC(*v0);
}

uint64_t sub_2420B0E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B07A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420B0E58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2420B0CB4();
  *a1 = result;
  return result;
}

uint64_t sub_2420B0E7C()
{
  sub_2420BA6B8();
  return sub_242132DBC();
}

uint64_t sub_2420B0EA4()
{
  sub_2420BA6B8();
  return sub_242132DC8();
}

void ResourceConfiguration.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_242097180();
  v5 = v4;
  sub_2420797C0(&qword_254397988);
  sub_2420C0898();
  MEMORY[0x24BDAC7A8](v6);
  sub_242097548();
  sub_242079800(v5, v5[3]);
  sub_2420BA6B8();
  sub_242132DB0();
  sub_242132CCC();
  if (!v0)
  {
    sub_2420C15D4();
    sub_2420C15D4();
    sub_2420797C0(&qword_254399CD8);
    sub_2420BA820((unint64_t *)&unk_254397970, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_242132CF0();
    sub_2420C163C();
    sub_2420C1624();
    sub_2420C160C(&qword_254397960, v7, (uint64_t (*)(void))sub_2420BA6F4, MEMORY[0x24BEE12A0]);
    sub_2420C11F0();
    sub_242132CF0();
    sub_2420C1624();
    sub_2420C160C(&qword_254397968, v8, (uint64_t (*)(void))sub_2420BA730, MEMORY[0x24BEE12A0]);
    sub_2420C11F0();
    sub_242132CC0();
    sub_2420C163C();
    sub_2420BA76C();
    sub_2420C13C0();
    sub_242132C90();
    sub_2420C1624();
    sub_2420C160C(&qword_2543991E8, v9, (uint64_t (*)(void))sub_2420BA7A8, MEMORY[0x24BEE12A0]);
    sub_2420C13C0();
    sub_2420C1624();
    sub_2420C160C(&qword_2543991F0, v10, (uint64_t (*)(void))sub_2420BA7E4, MEMORY[0x24BEE12A0]);
    sub_242132CC0();
  }
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  sub_2420970A0();
}

void ResourceConfiguration.hashValue.getter()
{
  uint64_t v0;

  v0 = sub_2420974F0();
  sub_2420C1944(v0);
  sub_242079F68();
  sub_24209725C();
}

void ResourceConfiguration.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  _QWORD v56[7];
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int16 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[7];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int16 v92;
  int v93;
  __int16 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  int v101;
  __int16 v102;
  _BYTE v103[7];
  _DWORD v104[3];

  sub_242097180();
  v2 = v1;
  v4 = v3;
  v5 = sub_2420797C0(&qword_254399A30);
  MEMORY[0x24BDAC7A8](v5);
  sub_242097560();
  sub_2420A23D8(v2);
  sub_2420BA6B8();
  sub_2420A1E80();
  if (v0)
  {
    v7 = 0;
    v8 = 0;
  }
  else
  {
    v6 = v4;
    v15 = sub_2420C0E8C();
    v17 = v16;
    sub_242097464();
    v51 = v17;
    v38 = sub_2420C0E8C();
    LOBYTE(v73) = 2;
    v19 = v18;
    sub_242097464();
    v50 = v19;
    v37 = sub_2420C0E8C();
    v21 = v20;
    sub_2420797C0(&qword_254399CD8);
    LOBYTE(v56[0]) = 3;
    sub_2420BA820(&qword_254399A08, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    v23 = v22;
    sub_2420C13B0();
    sub_2420C16C8();
    v49 = v21;
    if (v23)
    {
      sub_2420C08AC();
      sub_242097630();
      sub_242097718();
      sub_2420A1B60();
      v7 = 0;
      v8 = 7;
    }
    else
    {
      v24 = v73;
      LOBYTE(v73) = 4;
      sub_2420C13B0();
      v36 = sub_2420C131C();
      sub_2420797C0(&qword_254399CC8);
      sub_2420BA964(&qword_2543999F0, &qword_254399CC8, (uint64_t (*)(void))sub_2420BA874, MEMORY[0x24BEE12D0]);
      sub_2420C16C8();
      sub_2420797C0(&qword_254399CD0);
      LOBYTE(v56[0]) = 6;
      sub_2420BA964(&qword_254399A00, &qword_254399CD0, (uint64_t (*)(void))sub_2420BA8B0, MEMORY[0x24BEE12D0]);
      v26 = v25;
      v53 = v73;
      sub_242097198();
      sub_2420C1008();
      if (!v26)
      {
        v27 = v73;
        LOBYTE(v73) = 7;
        v52 = v27;
        swift_bridgeObjectRetain();
        v35 = sub_2420C131C();
        LOBYTE(v56[0]) = 8;
        sub_2420BA8EC();
        sub_2420C1008();
        v54 = 1;
        v28 = v73;
        LOBYTE(v73) = 9;
        v45 = v28;
        v46 = v74;
        v47 = v75;
        v48 = v78;
        v42 = v76;
        v43 = v77;
        v41 = v79;
        v44 = v80;
        sub_242084D88(v28, v74);
        v34 = sub_242132C00();
        v40 = v29;
        sub_2420797C0(&qword_254399E70);
        LOBYTE(v56[0]) = 10;
        sub_2420BA964((unint64_t *)&unk_254399B28, &qword_254399E70, (uint64_t (*)(void))sub_2420BA928, MEMORY[0x24BEE12D0]);
        v31 = v30;
        swift_bridgeObjectRetain();
        sub_2420C1008();
        if (v31)
        {
          sub_2420C08AC();
          sub_2420C17A4();
          sub_2420C0B04();
          sub_242097630();
          sub_242097718();
          sub_24209779C();
          sub_242097964();
          sub_2420C11D8();
          sub_242097B84();
          v12 = 0;
          v13 = 1;
        }
        else
        {
          sub_2420797C0(&qword_254399E78);
          v99 = 11;
          sub_2420BA964(&qword_254399B38, &qword_254399E78, (uint64_t (*)(void))sub_2420BA9BC, MEMORY[0x24BEE12D0]);
          v33 = v32;
          v39 = v73;
          sub_2420C13B0();
          sub_2420C1008();
          if (!v33)
          {
            sub_2420C08AC();
            v55 = v100;
            v56[0] = v15;
            v56[1] = v51;
            v56[2] = v38;
            v56[3] = v50;
            v56[4] = v37;
            v56[5] = v49;
            v56[6] = v24;
            v57 = v36 & 1;
            v58 = v53;
            v59 = v52;
            v60 = v35 & 1;
            v61 = v45;
            v62 = v46;
            v63 = v47;
            v64 = v42;
            v65 = v43;
            v66 = v48;
            v67 = v41;
            v68 = v44;
            v69 = v34;
            v70 = v40;
            v71 = v39;
            v72 = v100;
            sub_242084C9C((uint64_t)v56);
            sub_2420A1B60();
            sub_242079F20();
            sub_242084E14(v45, v46);
            sub_242097630();
            sub_242097268();
            sub_242097830();
            sub_242097578();
            sub_2420A1B60();
            sub_242079F20();
            sub_242097098(v6, v56);
            sub_242097734();
            v73 = v15;
            v74 = v51;
            v75 = v38;
            v76 = v50;
            v77 = v37;
            v78 = v49;
            v79 = v24;
            LOBYTE(v80) = v36 & 1;
            *(_DWORD *)((char *)&v80 + 1) = v104[0];
            HIDWORD(v80) = *(_DWORD *)((char *)v104 + 3);
            v81 = v53;
            v82 = v52;
            v83 = v35 & 1;
            *(_DWORD *)v84 = *(_DWORD *)v103;
            *(_DWORD *)&v84[3] = *(_DWORD *)&v103[3];
            v85 = v45;
            v86 = v46;
            v87 = v47;
            v88 = v42;
            v89 = v43;
            v90 = v48;
            v91 = v41;
            v92 = v44;
            v93 = v101;
            v94 = v102;
            v95 = v34;
            v96 = v40;
            v97 = v39;
            v98 = v55;
            sub_2420B2568((uint64_t)&v73);
            goto LABEL_24;
          }
          sub_2420C08AC();
          sub_2420C17A4();
          swift_bridgeObjectRelease();
          sub_2420C0B04();
          sub_242097630();
          sub_242097718();
          sub_24209779C();
          sub_242097964();
          sub_2420C11D8();
          sub_242097B84();
          v13 = 1;
          v12 = 1;
        }
        sub_242097734();
        LOBYTE(v14) = 1;
        v9 = 1;
        v10 = 1;
        v11 = 1;
        v7 = 1;
        goto LABEL_15;
      }
      sub_2420C08AC();
      sub_242097630();
      sub_242097718();
      sub_24209779C();
      sub_2420A1B60();
      sub_2420C11D8();
      v7 = 0;
      v8 = 47;
    }
  }
  sub_242097734();
  v9 = (v8 >> 2) & 1;
  v10 = (v8 >> 3) & 1;
  v11 = (v8 >> 5) & 1;
  if ((v8 & 1) == 0)
  {
    v12 = 0;
    v13 = 0;
    v54 = 0;
    if ((v8 & 2) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
  v54 = 0;
  v13 = 0;
  v12 = 0;
  v14 = (v8 >> 1) & 1;
LABEL_15:
  sub_242097630();
  if ((v14 & 1) == 0)
  {
LABEL_6:
    if (v9)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  sub_242097718();
  if ((v9 & 1) != 0)
  {
LABEL_7:
    sub_24209779C();
    if ((v10 & 1) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  if (!v10)
  {
LABEL_8:
    if (v11)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  sub_242097964();
  if ((v11 & 1) != 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  if (!v7)
  {
LABEL_10:
    if (v54)
      goto LABEL_11;
    goto LABEL_21;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  if ((v54 & 1) != 0)
  {
LABEL_11:
    sub_2420C0B04();
    if ((v13 & 1) == 0)
      goto LABEL_12;
    goto LABEL_22;
  }
LABEL_21:
  if (!v13)
  {
LABEL_12:
    if (!v12)
      goto LABEL_24;
    goto LABEL_23;
  }
LABEL_22:
  sub_2420C17A4();
  if ((v12 & 1) != 0)
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
  sub_242097664();
  sub_2420970A0();
}

void sub_2420B1B80(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ResourceConfiguration.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2420B1BAC()
{
  _BYTE v1[72];

  sub_242132D74();
  ResourceConfiguration.hash(into:)((uint64_t)v1);
  return sub_242132D98();
}

void sub_2420B1BE8()
{
  ResourceConfiguration.init(from:)();
}

void sub_2420B1BFC()
{
  ResourceConfiguration.encode(to:)();
}

void ResourceBase.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

ModelCatalog::ResourceBase __swiftcall ResourceBase.init(id:dependentResourceIDs:)(Swift::String id, Swift::OpaquePointer dependentResourceIDs)
{
  uint64_t v2;
  ModelCatalog::ResourceBase result;

  *(Swift::String *)v2 = id;
  *(Swift::OpaquePointer *)(v2 + 16) = dependentResourceIDs;
  result.id = id;
  result.dependentResourceIDs = dependentResourceIDs;
  return result;
}

uint64_t ResourceBase.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_24207F5FC();
  sub_2420C0FDC();
  sub_24207F700();
  sub_242097198();
  v0 = sub_24207F648();
  sub_2420BA1EC(v0, v1);
  return sub_2420C0D90();
}

void static ResourceBase.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_242079EB8() & 1) != 0)
  {
    v3 = (_QWORD *)sub_24207F648();
    sub_2420AD16C(v3, v4);
  }
  else
  {
    sub_24207F428();
  }
}

uint64_t sub_2420B1CDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000242139E20)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_242132D14();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2420B1DB0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 25705;
}

uint64_t sub_2420B1DE0()
{
  char *v0;

  return sub_2420B1DB0(*v0);
}

uint64_t sub_2420B1DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B1CDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420B1E0C()
{
  sub_2420BA9F8();
  return sub_242132DBC();
}

uint64_t sub_2420B1E34()
{
  sub_2420BA9F8();
  return sub_242132DC8();
}

void ResourceBase.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_242097180();
  v3 = v2;
  v5 = *(_QWORD *)(sub_2420797C0(&qword_25719EB98) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420972E4();
  sub_2420A23D8(v3);
  sub_2420BA9F8();
  sub_2420C0C1C();
  sub_2420C1278();
  sub_2420977A4();
  if (!v0)
  {
    sub_2420797C0(&qword_254399CD8);
    sub_2420BA820((unint64_t *)&unk_254397970, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2420C0EA8();
  }
  sub_2420C0B6C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_242097A70();
  sub_2420970A0();
}

void ResourceBase.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_2420974F0();
  sub_242097744();
  sub_2420C0C98();
  sub_24207F78C();
  v0 = sub_242097198();
  v8 = sub_2420C1654(v0, v1, v2, v3, v4, v5, v6, v7, v10, v11);
  sub_2420BA1EC((uint64_t)v8, v9);
  sub_242097830();
  sub_242079F68();
  sub_2420C0B1C();
}

void ResourceBase.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  sub_242097180();
  v3 = v2;
  v5 = v4;
  sub_2420797C0(&qword_25719EBA8);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420C0AA8();
  sub_2420BA9F8();
  sub_2420C0D60();
  if (v0)
  {
    sub_24209769C();
  }
  else
  {
    v9 = sub_242097498();
    v11 = v10;
    sub_2420797C0(&qword_254399CD8);
    sub_2420BA820(&qword_254399A08, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    v13 = v12;
    sub_2420C0B64();
    sub_2420C16C8();
    sub_24209796C((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    if (v13)
    {
      sub_242097578();
      sub_24209769C();
    }
    else
    {
      v14 = v15[1];
      *v5 = v9;
      v5[1] = v11;
      v5[2] = v14;
      sub_242097198();
      sub_242079824(v3);
      sub_242097830();
    }
    sub_242097578();
  }
  sub_242097664();
  sub_2420970A0();
}

void sub_2420B211C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ResourceBase.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2420B2148()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_242132D74();
  swift_bridgeObjectRetain();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2420BA1EC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_242132D98();
}

void sub_2420B21C8()
{
  ResourceBase.init(from:)();
}

void sub_2420B21DC()
{
  ResourceBase.encode(to:)();
}

void __swiftcall AssetSubscriptionInformation.init(subscriberID:subscriptionName:assetSetName:)(ModelCatalog::AssetSubscriptionInformation *__return_ptr retstr, Swift::String subscriberID, Swift::String subscriptionName, Swift::String assetSetName)
{
  retstr->subscriberID = subscriberID;
  retstr->subscriptionName = subscriptionName;
  retstr->assetSetName = assetSetName;
  retstr->ttl.value = 0;
  *(_WORD *)&retstr->ttl.is_nil = 2561;
}

void __swiftcall AssetSubscriptionInformation.init(subscriberID:subscriptionName:assetSetName:ttl:requestResourcesKey:)(ModelCatalog::AssetSubscriptionInformation *__return_ptr retstr, Swift::String subscriberID, Swift::String subscriptionName, Swift::String assetSetName, Swift::Int_optional ttl, ModelCatalog::RequestResourcesKey_optional requestResourcesKey)
{
  ModelCatalog::RequestResourcesKey v6;

  v6 = *(_BYTE *)requestResourcesKey.value;
  retstr->subscriberID = subscriberID;
  retstr->subscriptionName = subscriptionName;
  retstr->assetSetName = assetSetName;
  retstr->ttl.value = ttl.value;
  retstr->ttl.is_nil = ttl.is_nil;
  retstr->requestResourcesKey.value = v6;
}

void AssetSubscriptionInformation.subscriberID.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void AssetSubscriptionInformation.subscriptionName.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void AssetSubscriptionInformation.assetSetName.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t AssetSubscriptionInformation.ttl.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

void AssetSubscriptionInformation.requestResourcesKey.getter(_BYTE *a1@<X8>)
{
  sub_2420C1160(a1);
}

void AssetSubscriptionInformation.hash(into:)()
{
  uint64_t v0;
  int v1;
  int v2;

  sub_2420C0C54();
  v1 = *(unsigned __int8 *)(v0 + 56);
  v2 = *(unsigned __int8 *)(v0 + 57);
  sub_2420977E0();
  sub_2420C1604();
  sub_242097268();
  sub_2420C0B64();
  sub_2420C16F8();
  sub_2421327D4();
  sub_242097578();
  sub_2420C180C();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  sub_2420C1584();
  if (v1 != 1)
    sub_242132D80();
  sub_2420C1584();
  if (v2 != 10)
    sub_2420AC7C0();
}

void static AssetSubscriptionInformation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  char v16;
  BOOL v17;
  char v18;
  BOOL v19;
  char v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  sub_2420C0C7C();
  v2 = sub_2420C1928(v1);
  v7 = *(_QWORD *)(v5 + 24);
  v6 = *(_QWORD *)(v5 + 32);
  v8 = *(_QWORD *)(v5 + 40);
  v9 = *(_BYTE *)(v5 + 56);
  v25 = *(unsigned __int8 *)(v5 + 57);
  v10 = *(_QWORD *)(v4 + 16);
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v4 + 32);
  v13 = *(_QWORD *)(v4 + 40);
  v23 = *(_QWORD *)(v4 + 48);
  v24 = *(_QWORD *)(v5 + 48);
  v14 = *(unsigned __int8 *)(v4 + 56);
  v15 = v2 == *(_QWORD *)v4 && v3 == *(_QWORD *)(v4 + 8);
  v22 = *(unsigned __int8 *)(v4 + 57);
  if (v15 || (sub_242079EB8(), sub_2420C0C70(), (v16 & 1) != 0))
  {
    v17 = v0 == v10 && v7 == v11;
    if (v17 || (sub_2420C1278(), sub_242079EB8(), sub_2420C0C70(), (v18 & 1) != 0))
    {
      v19 = v6 == v12 && v8 == v13;
      if (v19 || (sub_242079EB8(), sub_2420C0C70(), (v20 & 1) != 0))
      {
        if ((v9 & 1) != 0)
        {
          if (!v14)
            goto LABEL_26;
          goto LABEL_23;
        }
        if (v24 == v23)
          v21 = v14;
        else
          v21 = 1;
        if ((v21 & 1) == 0)
        {
LABEL_23:
          if (v25 != 10 && v22 != 10)
            sub_242107AB8(v25);
        }
      }
    }
  }
LABEL_26:
  sub_2420C10AC();
}

unint64_t sub_2420B24B4()
{
  unint64_t result;

  result = qword_254399CA0;
  if (!qword_254399CA0)
  {
    result = MEMORY[0x2426A40E0](&unk_242150D00, &type metadata for ConfigurationBasedResourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399CA0);
  }
  return result;
}

unint64_t sub_2420B24F0()
{
  unint64_t result;

  result = qword_2543999A8;
  if (!qword_2543999A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceConfiguration, &type metadata for ResourceConfiguration);
    atomic_store(result, (unint64_t *)&qword_2543999A8);
  }
  return result;
}

unint64_t sub_2420B252C()
{
  unint64_t result;

  result = qword_254397908;
  if (!qword_254397908)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceConfiguration, &type metadata for ResourceConfiguration);
    atomic_store(result, (unint64_t *)&qword_254397908);
  }
  return result;
}

uint64_t sub_2420B2568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242084E14(v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2420B2658(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x6269726373627573 && a2 == 0xEC00000044497265;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000242139E60 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x7465537465737361 && a2 == 0xEC000000656D614ELL;
    if (v6 || (sub_242132D14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 7107700 && a2 == 0xE300000000000000;
      if (v7 || (sub_242132D14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x8000000242139E80)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_242132D14();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_2420B2880(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2420B28BC + 4 * byte_24214D4B8[a1]))(0x6269726373627573, 0xEC00000044497265);
}

unint64_t sub_2420B28BC()
{
  return 0xD000000000000010;
}

uint64_t sub_2420B28D8()
{
  return 0x7465537465737361;
}

uint64_t sub_2420B28F8()
{
  return 7107700;
}

unint64_t sub_2420B2908()
{
  return 0xD000000000000013;
}

uint64_t sub_2420B2928()
{
  unsigned __int8 *v0;

  return sub_2420B2880(*v0);
}

uint64_t sub_2420B2930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B2658(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420B2954()
{
  sub_2420BAA34();
  return sub_242132DBC();
}

uint64_t sub_2420B297C()
{
  sub_2420BAA34();
  return sub_242132DC8();
}

void AssetSubscriptionInformation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_242097180();
  v3 = v2;
  v4 = sub_2420797C0((uint64_t *)&unk_254397990);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C1344();
  sub_242079800(v3, v3[3]);
  sub_2420BAA34();
  sub_242132DB0();
  sub_2420C17F8();
  sub_2420C0F9C();
  if (!v0)
  {
    sub_2420977A4();
    sub_2420C1798();
    sub_2420977A4();
    sub_2420C182C();
    sub_2420C1820();
    sub_242132CB4();
    sub_2420BAA70();
    sub_2420C1820();
    sub_242132CC0();
  }
  sub_24209796C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_242097A70();
  sub_2420970A0();
}

void AssetSubscriptionInformation.hashValue.getter()
{
  sub_2420974F0();
  AssetSubscriptionInformation.hash(into:)();
  sub_242079F68();
  sub_2420C171C();
}

void AssetSubscriptionInformation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_242097180();
  v14 = v13;
  v16 = v15;
  sub_2420797C0((uint64_t *)&unk_254399A38);
  sub_2420C1180();
  MEMORY[0x24BDAC7A8](v17);
  sub_242079800(v14, v14[3]);
  sub_2420BAA34();
  sub_242132DA4();
  if (v12)
  {
    sub_24209769C();
  }
  else
  {
    v18 = sub_242097498();
    v20 = v19;
    v31 = v18;
    sub_242097464();
    v21 = sub_242097498();
    v32 = v22;
    v30 = v21;
    sub_2420C1798();
    sub_242097464();
    v29 = sub_242132C3C();
    sub_2420C182C();
    v24 = v23;
    sub_242097464();
    v25 = sub_242132C24();
    v27 = v26;
    v28 = v25;
    sub_2420BAAAC();
    sub_242132C30();
    sub_2420C0ADC();
    *(_QWORD *)v16 = v31;
    *(_QWORD *)(v16 + 8) = v20;
    *(_QWORD *)(v16 + 16) = v30;
    *(_QWORD *)(v16 + 24) = v32;
    *(_QWORD *)(v16 + 32) = v29;
    *(_QWORD *)(v16 + 40) = v24;
    *(_QWORD *)(v16 + 48) = v28;
    *(_BYTE *)(v16 + 56) = v27 & 1;
    *(_BYTE *)(v16 + 57) = a12;
    sub_242079824((uint64_t)v14);
    sub_242097268();
    sub_242097830();
    swift_bridgeObjectRelease();
  }
  sub_242097664();
  sub_2420970A0();
}

uint64_t sub_2420B2E04()
{
  sub_242132D74();
  AssetSubscriptionInformation.hash(into:)();
  return sub_242132D98();
}

void sub_2420B2E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  int vars8;

  AssetSubscriptionInformation.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE2(vars8), SHIBYTE(vars8));
}

void sub_2420B2E80()
{
  AssetSubscriptionInformation.encode(to:)();
}

uint64_t ManagedRuntimeInformation.inferenceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

void ManagedRuntimeInformation.instanceID.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void ManagedRuntimeInformation.cost.getter(uint64_t a1@<X8>)
{
  sub_2420C13F4(a1);
}

void __swiftcall ManagedRuntimeInformation.init(inferenceProvider:cost:)(ModelCatalog::ManagedRuntimeInformation *__return_ptr retstr, ModelCatalog::InferenceProvider inferenceProvider, ModelCatalog::CostProfile cost)
{
  uint64_t v3;

  sub_2420C18DC(inferenceProvider.id._countAndFlagsBits, (uint64_t)retstr);
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  sub_2420C13CC(v3);
}

void __swiftcall ManagedRuntimeInformation.init(inferenceProvider:cost:instanceID:)(ModelCatalog::ManagedRuntimeInformation *__return_ptr retstr, ModelCatalog::InferenceProvider inferenceProvider, ModelCatalog::CostProfile cost, Swift::String_optional instanceID)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2420C18DC(inferenceProvider.id._countAndFlagsBits, (uint64_t)retstr);
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v5;
  sub_2420C13CC(v6);
}

uint64_t ManagedRuntimeInformation.hash(into:)()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_2420C0B64();
  sub_2420C1814();
  if (v1 != 2)
    sub_242079F00();
  sub_242132D8C();
  sub_242097578();
  if (v2)
  {
    sub_242079F00();
    sub_2420977E0();
    sub_2420C1604();
    sub_242097268();
  }
  else
  {
    sub_242132D8C();
  }
  sub_242132D80();
  sub_2420C15FC();
  sub_2420C15F4();
  return sub_242132D8C();
}

void static ManagedRuntimeInformation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  char v14;

  sub_2420C0C7C();
  v1 = sub_2420C10D0(v0);
  v5 = *(unsigned __int8 *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  v8 = *(unsigned __int8 *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v10 = *(_QWORD *)(v3 + 32);
  v11 = v1 == *(_QWORD *)v3 && v2 == *(_QWORD *)(v3 + 8);
  if (v11
    || (v12 = *(_QWORD *)(v3 + 24),
        v13 = *(unsigned __int8 *)(v4 + 16),
        v14 = sub_242132D14(),
        v5 = v13,
        v9 = v12,
        (v14 & 1) != 0))
  {
    if (v5 == 2)
    {
      if (v8 != 2)
        goto LABEL_18;
    }
    else if (v8 == 2 || ((((v5 & 1) == 0) ^ v8) & 1) == 0)
    {
      goto LABEL_18;
    }
    if (v6 && v10 && (v7 != v9 || v6 != v10))
    {
      sub_242132D14();
      sub_2420C0C70();
    }
  }
LABEL_18:
  sub_2420C10AC();
}

uint64_t static CostProfile.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2
    && ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) == 0)
  {
    v2 = *(_BYTE *)(a2 + 10) ^ *(_BYTE *)(a1 + 10) ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2420B3178(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002421398C0 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x65636E6174736E69 && a2 == 0xEA00000000004449;
    if (v5 || (sub_242132D14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1953722211 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_242132D14();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_2420B32BC(char a1)
{
  if (!a1)
    return 0xD000000000000011;
  if (a1 == 1)
    return 0x65636E6174736E69;
  return 1953722211;
}

uint64_t sub_2420B3314()
{
  char *v0;

  return sub_2420B32BC(*v0);
}

uint64_t sub_2420B331C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B3178(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420B3340()
{
  sub_2420BAAE8();
  return sub_242132DBC();
}

uint64_t sub_2420B3368()
{
  sub_2420BAAE8();
  return sub_242132DC8();
}

void ManagedRuntimeInformation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_242097180();
  v3 = v2;
  v6 = *(_QWORD *)(sub_2420797C0((uint64_t *)&unk_254399208) - 8);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420972E4();
  sub_2420A23D8(v3);
  sub_2420BAAE8();
  sub_2420C0C1C();
  sub_2420BAB24();
  sub_242132CF0();
  if (v0)
  {
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  else
  {
    sub_2420C1820();
    sub_242132C90();
    sub_2420BAB60();
    sub_2420C0EA8();
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  sub_24209796C(v1, v5);
  sub_242097A70();
  sub_2420970A0();
}

void ManagedRuntimeInformation.hashValue.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  sub_2420C147C();
  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_2420974F0();
  sub_2420C0B64();
  sub_2420C1814();
  if (v1 != 2)
    sub_2420C0BC8();
  sub_242132D8C();
  sub_242097578();
  if (v2)
  {
    sub_242079F00();
    sub_2420977E0();
    sub_2420C1604();
    sub_242097268();
  }
  else
  {
    sub_242132D8C();
  }
  sub_242132D80();
  sub_2420C15FC();
  sub_2420C15F4();
  sub_2420C12A4();
  sub_242079F68();
  sub_2420C171C();
}

void ManagedRuntimeInformation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  sub_242097180();
  sub_2420C1680();
  sub_2420797C0(&qword_254399058);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420C0AA8();
  sub_2420BAAE8();
  sub_2420C0D60();
  if (v1)
  {
    sub_24209769C();
  }
  else
  {
    sub_2420BAB9C();
    sub_2420C1838();
    sub_242132C60();
    v7 = v20;
    v18 = v19;
    v22 = v21;
    LOBYTE(v19) = 1;
    sub_2420C0B64();
    v8 = sub_242132C00();
    v10 = v9;
    v16 = v8;
    sub_2420BABD8();
    sub_242097198();
    sub_2420C1838();
    v17 = v10;
    sub_242132C60();
    sub_24209796C((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v11 = v19;
    v12 = v20;
    v13 = BYTE1(v20);
    v14 = BYTE2(v20);
    *(_QWORD *)v2 = v18;
    *(_QWORD *)(v2 + 8) = v7;
    *(_BYTE *)(v2 + 16) = v22;
    v15 = v17;
    *(_QWORD *)(v2 + 24) = v16;
    *(_QWORD *)(v2 + 32) = v15;
    *(_QWORD *)(v2 + 40) = v11;
    *(_BYTE *)(v2 + 48) = v12;
    *(_BYTE *)(v2 + 49) = v13;
    *(_BYTE *)(v2 + 50) = v14;
    sub_242079824(v0);
    sub_242097268();
    swift_bridgeObjectRelease();
  }
  sub_242097A70();
  sub_2420970A0();
}

uint64_t sub_2420B37AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_242132D74();
  swift_bridgeObjectRetain();
  sub_2421327D4();
  if (v1 != 2)
    sub_242132D8C();
  sub_242132D8C();
  swift_bridgeObjectRelease();
  sub_242132D8C();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_2421327D4();
    swift_bridgeObjectRelease();
  }
  sub_242132D80();
  sub_242132D8C();
  sub_242132D8C();
  sub_242132D8C();
  return sub_242132D98();
}

void sub_2420B38D4()
{
  ManagedRuntimeInformation.init(from:)();
}

void sub_2420B38E8()
{
  ManagedRuntimeInformation.encode(to:)();
}

void ManagedResourceBase.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t ManagedResourceBase.runtimeInformation.getter()
{
  return swift_bridgeObjectRetain();
}

ModelCatalog::ManagedResourceBase __swiftcall ManagedResourceBase.init(id:dependentResourceIDs:runtimeInformation:)(Swift::String id, Swift::OpaquePointer dependentResourceIDs, Swift::OpaquePointer runtimeInformation)
{
  uint64_t v3;
  ModelCatalog::ManagedResourceBase result;

  *(Swift::String *)v3 = id;
  *(Swift::OpaquePointer *)(v3 + 16) = dependentResourceIDs;
  *(Swift::OpaquePointer *)(v3 + 24) = runtimeInformation;
  result.id = id;
  result.runtimeInformation = runtimeInformation;
  result.dependentResourceIDs = dependentResourceIDs;
  return result;
}

uint64_t ManagedResourceBase.preconditions.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t ManagedResourceBase.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  sub_24207F5FC();
  sub_2420C0FDC();
  sub_24207F700();
  sub_242079ED8();
  sub_2420BA1EC(a1, v3);
  sub_242079F20();
  sub_242097198();
  v4 = sub_24207F648();
  sub_2420BA000(v4, v5);
  return swift_bridgeObjectRelease();
}

void static ManagedResourceBase.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if ((v2 || (sub_242079EB8() & 1) != 0) && (sub_2420C187C(), (v3 & 1) != 0))
  {
    v4 = sub_24207F648();
    sub_2420AD5FC(v4, v5);
  }
  else
  {
    sub_242097A00();
  }
}

uint64_t sub_2420B3A14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000242139E20 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000242139860)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_242132D14();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2420B3B48(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 0xD000000000000014;
  return 0xD000000000000012;
}

uint64_t sub_2420B3BA0()
{
  char *v0;

  return sub_2420B3B48(*v0);
}

uint64_t sub_2420B3BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B3A14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420B3BCC()
{
  sub_2420BAC14();
  return sub_242132DBC();
}

uint64_t sub_2420B3BF4()
{
  sub_2420BAC14();
  return sub_242132DC8();
}

void ManagedResourceBase.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_242097180();
  v3 = v2;
  v4 = sub_2420797C0(&qword_25719EBB0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_2420972E4();
  sub_2420A23D8(v3);
  sub_2420BAC14();
  sub_2420C0C1C();
  sub_242132CCC();
  if (!v0)
  {
    sub_2420797C0(&qword_254399CD8);
    sub_2420BA820((unint64_t *)&unk_254397970, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2420C17E4();
    sub_2420C0EA8();
    sub_2420797C0(&qword_254399CD0);
    sub_2420BA964(&qword_254397968, &qword_254399CD0, (uint64_t (*)(void))sub_2420BA730, MEMORY[0x24BEE12A0]);
    sub_2420C17E4();
    sub_2420C0EA8();
  }
  sub_2420C0B6C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_242097A70();
  sub_2420970A0();
}

void ManagedResourceBase.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_2420974F0();
  sub_242097744();
  sub_2420C0C98();
  sub_24207F78C();
  v0 = sub_24207F5FC();
  sub_2420C1434(v0);
  sub_24207F700();
  v1 = sub_242097198();
  v9 = sub_2420C1654(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  sub_2420BA000((uint64_t)v9, v10);
  sub_242097830();
  sub_242079F68();
  sub_2420C0B1C();
}

void ManagedResourceBase.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_242097180();
  sub_2420C1680();
  sub_2420797C0((uint64_t *)&unk_25719EBC0);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v15);
  sub_242097560();
  sub_242079800(v10, v10[3]);
  sub_2420BAC14();
  sub_242097874();
  if (v11)
  {
    sub_24209769C();
  }
  else
  {
    LOBYTE(a10) = 0;
    v16 = sub_2420C1714();
    v18 = v17;
    v19 = v16;
    sub_2420797C0(&qword_254399CD8);
    sub_2420BA820(&qword_254399A08, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_242079ED8();
    sub_242132C60();
    sub_2420797C0(&qword_254399CD0);
    sub_2420BA964(&qword_254399A00, &qword_254399CD0, (uint64_t (*)(void))sub_2420BA8B0, MEMORY[0x24BEE12D0]);
    sub_242097198();
    sub_242132C60();
    sub_2420C0CD4(v13, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_242079ED8();
    sub_242097198();
    sub_242079F20();
    *v12 = v19;
    v12[1] = v18;
    v12[2] = a10;
    v12[3] = a10;
    sub_242079824((uint64_t)v10);
    sub_242097830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_2420A1EC0();
  sub_2420970A0();
}

void sub_2420B4000(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ManagedResourceBase.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2420B402C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_242132D74();
  swift_bridgeObjectRetain();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2420BA1EC((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2420BA000((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  return sub_242132D98();
}

void sub_2420B40C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ManagedResourceBase.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_2420B40DC()
{
  ManagedResourceBase.encode(to:)();
}

uint64_t ResourceBundleIdentifier.hash(into:)()
{
  sub_242097198();
  sub_2421327D4();
  return sub_2420C0D90();
}

uint64_t sub_2420B4128(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242132D14();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2420B4194()
{
  sub_242132D74();
  sub_242132D80();
  return sub_242132D98();
}

uint64_t sub_2420B41D4()
{
  return 25705;
}

uint64_t sub_2420B41E0()
{
  return _s12ModelCatalog0B8ResourcePAAE10sideloadedSbvg_0();
}

uint64_t sub_2420B41E8()
{
  return sub_2420B4194();
}

uint64_t sub_2420B41F4()
{
  return sub_2420AF1B0();
}

uint64_t sub_2420B4200()
{
  sub_242132D74();
  sub_2420AF1B0();
  return sub_242132D98();
}

uint64_t sub_2420B4240()
{
  return sub_2420B41D4();
}

uint64_t sub_2420B424C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B4128(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2420B427C()
{
  return sub_242085178();
}

uint64_t sub_2420B429C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s12ModelCatalog0B8ResourcePAAE10sideloadedSbvg_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2420B42CC(uint64_t a1)
{
  MEMORY[0x2426A40E0](&unk_242150710, a1);
  return sub_242132DBC();
}

uint64_t sub_2420B4300(uint64_t a1)
{
  MEMORY[0x2426A40E0](&unk_242150710, a1);
  return sub_242132DC8();
}

void ResourceBundleIdentifier.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_242097180();
  v1 = v0;
  v4 = type metadata accessor for ResourceBundleIdentifier.CodingKeys(255, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v3);
  MEMORY[0x2426A40E0](&unk_242150710, v4);
  sub_2420C16F8();
  v5 = sub_242132CFC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_242079800(v1, v1[3]);
  sub_2420C16F8();
  sub_242132DB0();
  sub_242132CCC();
  sub_2420C0BD4(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_2420C12B8();
  sub_2420970A0();
}

void ResourceBundleIdentifier.hashValue.getter()
{
  sub_2420974F0();
  ResourceBundleIdentifier.hash(into:)();
  sub_242079F68();
  sub_2420C0F24();
}

void ResourceBundleIdentifier.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_242097180();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  a10 = v25;
  v28 = type metadata accessor for ResourceBundleIdentifier.CodingKeys(255, v26, v27, v22);
  MEMORY[0x2426A40E0](&unk_242150710, v28);
  v29 = sub_242132C78();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&a9 - v31;
  sub_242079800(v24, v24[3]);
  sub_2420A1E80();
  if (!v20)
  {
    v33 = a10;
    v34 = sub_2420C1714();
    v36 = v35;
    sub_242097598((uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    *v33 = v34;
    v33[1] = v36;
  }
  sub_242079824((uint64_t)v24);
  sub_2420A1EC0();
  sub_2420970A0();
}

uint64_t sub_2420B4568()
{
  sub_242132D74();
  ResourceBundleIdentifier.hash(into:)();
  return sub_242132D98();
}

uint64_t static ResourceBundleIdentifier.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = sub_2420C10D0(a1);
  if (v1 == *v3 && v2 == v3[1])
    return _s12ModelCatalog0B8ResourcePAAE10sideloadedSbvg_0();
  else
    return sub_242079EB8();
}

#error "2420B45D8: call analysis failed (funcsize=7)"

void sub_2420B45E4()
{
  ResourceBundleIdentifier.encode(to:)();
}

void ResourceBundleIdentifier.description.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t static ResourceBundleIdentifier.== infix(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 == a2 && a1[1] == a3)
    return _s12ModelCatalog0B8ResourcePAAE10sideloadedSbvg_0();
  else
    return sub_242079EB8();
}

uint64_t static ResourceBundleIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*a3 == a1 && a3[1] == a2)
    return _s12ModelCatalog0B8ResourcePAAE10sideloadedSbvg_0();
  else
    return sub_242079EB8();
}

uint64_t sub_2420B4660@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return ResourceBundleIdentifier.init(stringLiteral:)(*a1, a1[1], a2);
}

uint64_t CatalogResource.dependentResourceIDs.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2420B4684()
{
  return CatalogResource.platforms.getter();
}

uint64_t sub_2420B4698()
{
  if (qword_25719D8C0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t CatalogResource.platforms.getter()
{
  if (qword_25719D8C0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420B4718(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242132D14();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2420B47C0()
{
  return 0x72756769666E6F63;
}

uint64_t sub_2420B47E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B4718(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2420B4810()
{
  sub_2420B24B4();
  return sub_242132DBC();
}

uint64_t sub_2420B4838()
{
  sub_2420B24B4();
  return sub_242132DC8();
}

uint64_t ResourceBase.inferenceProviders.getter()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t ResourceBase.preconditions.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2420B4884()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2420B4894()
{
  return sub_2420ABF7C();
}

uint64_t sub_2420B48A0()
{
  return sub_2420B4698();
}

uint64_t CostProfile.onDeviceMemory.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CostProfile.cacheable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t CostProfile.dynamicModeAllowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t CostProfile.energyEfficientMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

ModelCatalog::CostProfile __swiftcall CostProfile.init(onDeviceMemory:)(Swift::Int onDeviceMemory)
{
  uint64_t v1;
  ModelCatalog::CostProfile result;

  *(_QWORD *)v1 = onDeviceMemory;
  *(_WORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 10) = 0;
  result.onDeviceMemory = onDeviceMemory;
  return result;
}

ModelCatalog::CostProfile __swiftcall CostProfile.init(onDeviceMemory:cacheable:dynamicModeAllowed:energyEfficientMode:)(Swift::Int onDeviceMemory, Swift::Bool cacheable, Swift::Bool dynamicModeAllowed, Swift::Bool energyEfficientMode)
{
  uint64_t v4;
  ModelCatalog::CostProfile result;

  *(_QWORD *)v4 = onDeviceMemory;
  *(_BYTE *)(v4 + 8) = cacheable;
  *(_BYTE *)(v4 + 9) = dynamicModeAllowed;
  *(_BYTE *)(v4 + 10) = energyEfficientMode;
  result.onDeviceMemory = onDeviceMemory;
  result.cacheable = cacheable;
  return result;
}

void CostProfile.hash(into:)()
{
  sub_242132D80();
  sub_2420C15F4();
  sub_2420C15FC();
  sub_242132D8C();
  sub_24207F4E0();
}

uint64_t sub_2420B4938(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6563697665446E6FLL && a2 == 0xEE0079726F6D654DLL;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C62616568636163 && a2 == 0xE900000000000065;
    if (v6 || (sub_242132D14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000242139880 || (sub_242132D14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000002421398A0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_242132D14();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_2420B4B10()
{
  return 4;
}

uint64_t sub_2420B4B18(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2420B4B58 + 4 * byte_24214D4BD[a1]))(0x6563697665446E6FLL, 0xEE0079726F6D654DLL);
}

uint64_t sub_2420B4B58()
{
  return 0x6C62616568636163;
}

unint64_t sub_2420B4B74()
{
  return 0xD000000000000012;
}

unint64_t sub_2420B4B90()
{
  return 0xD000000000000013;
}

void sub_2420B4BB0()
{
  sub_2420976A4();
  sub_2420C0E70();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_2420B4BDC()
{
  unsigned __int8 *v0;

  return sub_2420B4B18(*v0);
}

uint64_t sub_2420B4BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B4938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420B4C08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2420B4B10();
  *a1 = result;
  return result;
}

uint64_t sub_2420B4C2C()
{
  sub_2420BAC5C();
  return sub_242132DBC();
}

uint64_t sub_2420B4C54()
{
  sub_2420BAC5C();
  return sub_242132DC8();
}

void CostProfile.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_242097180();
  v4 = v3;
  sub_2420797C0(&qword_2543991F8);
  sub_2420C14D0();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420972E4();
  sub_242079800(v4, v4[3]);
  sub_2420BAC5C();
  sub_242132DB0();
  sub_2420C1820();
  sub_242132CE4();
  if (!v0)
  {
    sub_2420C1030();
    sub_2420C1798();
    sub_2420C1030();
    sub_2420C182C();
    sub_2420C1030();
  }
  sub_2420C0B6C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_242097A70();
  sub_2420970A0();
}

void CostProfile.hashValue.getter()
{
  sub_2420974F0();
  sub_2420C0E70();
  sub_2420C15F4();
  sub_2420C15FC();
  sub_2420C1298();
  sub_242079F68();
  sub_2420C0E78();
}

void CostProfile.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;

  sub_242097180();
  a22 = v27;
  a23 = v28;
  sub_2420C1680();
  sub_2420797C0(&qword_254399048);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420C0AA8();
  sub_2420BAC5C();
  sub_2420C0D60();
  if (!v24)
  {
    a13 = 0;
    v32 = sub_242132C54();
    a12 = 1;
    v33 = sub_2420C1014();
    sub_2420C1798();
    a10 = sub_2420C1014();
    sub_2420C182C();
    v34 = sub_2420C1014();
    sub_242097598((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    *(_QWORD *)v25 = v32;
    *(_BYTE *)(v25 + 8) = v33 & 1;
    *(_BYTE *)(v25 + 9) = a10 & 1;
    *(_BYTE *)(v25 + 10) = v34 & 1;
  }
  sub_242079824(v23);
  sub_2420A1EC0();
  sub_2420970A0();
}

uint64_t sub_2420B4F2C()
{
  sub_242132D74();
  sub_242132D80();
  sub_242132D8C();
  sub_242132D8C();
  sub_242132D8C();
  return sub_242132D98();
}

#error "2420B4FB8: call analysis failed (funcsize=5)"

void sub_2420B4FC4()
{
  CostProfile.encode(to:)();
}

uint64_t sub_2420B4FD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = ManagedResource<>.executionContexts.getter(*(_QWORD *)(a2 + a1 - 24), a1, *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_2420B500C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return ManagedResource<>.executionContexts.setter(v0);
}

void ManagedResourceBase.cost.getter(uint64_t a1@<X8>)
{
  sub_2420C13F4(a1);
}

uint64_t ManagedResourceBase.executionContexts.getter()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2420B5064()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return ManagedResourceBase.executionContexts.setter(v0);
}

uint64_t (*ManagedResourceBase.executionContexts.modify(_QWORD *a1))()
{
  *a1 = MEMORY[0x24BEE4B08];
  return j__s12ModelCatalog34RequestDownloadProgressInformationVwxx;
}

uint64_t ManagedResourceBase.inferenceProviders.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;

  sub_2420C0C54();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    sub_2420A1CA0();
    sub_2420C0BB4();
    sub_2420C0EC8();
    do
    {
      v4 = *(_QWORD *)(v2 + 16);
      v3 = *(_QWORD *)(v2 + 24);
      sub_24207F5FC();
      if (v4 >= v3 >> 1)
        sub_2420C0DB4((char *)(v3 > 1));
      sub_2420C0B2C();
    }
    while (!v5);
    sub_2420C1888();
  }
  return sub_2420C0A54(v2);
}

uint64_t ManagedResourceBase.dependencies.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2420B5144()
{
  return ManagedResourceBase.executionContexts.setter();
}

uint64_t (*sub_2420B5158(_QWORD *a1))()
{
  *a1 = MEMORY[0x24BEE4B08];
  return j__s12ModelCatalog34RequestDownloadProgressInformationVwxx;
}

uint64_t sub_2420B5180()
{
  return sub_2420ABF7C();
}

uint64_t sub_2420B518C()
{
  return sub_2420B4698();
}

ModelCatalog::ResourceStatus_optional __swiftcall ResourceStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (ModelCatalog::ResourceStatus_optional)rawValue;
}

uint64_t ResourceStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void sub_2420B51B4()
{
  sub_242086278();
}

void sub_2420B51BC()
{
  sub_2420AC8BC();
}

void sub_2420B51C4()
{
  sub_242086418();
}

ModelCatalog::ResourceStatus_optional sub_2420B51CC(Swift::Int *a1)
{
  return ResourceStatus.init(rawValue:)(*a1);
}

void sub_2420B51D4(uint64_t *a1@<X8>)
{
  *a1 = ResourceStatus.rawValue.getter();
  sub_24207F428();
}

uint64_t sub_2420B51F4()
{
  sub_2420C0550();
  return sub_24213287C();
}

void RequestResourcesKey.usageKey.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_242132AD4();
  swift_bridgeObjectRelease();
  sub_242082F10();
  sub_2420C14A0();
  __asm { BR              X9 }
}

uint64_t sub_2420B52C4()
{
  uint64_t v1;

  sub_2420C14A0();
  sub_2420C164C();
  sub_24207F78C();
  return v1;
}

void static StatusResponse.supportsSecureCoding.getter()
{
  sub_242079EE8();
  sub_24207F4D4();
}

void static StatusResponse.supportsSecureCoding.setter(char a1)
{
  sub_242079EE8();
  byte_25719EA58 = a1;
  sub_24207F4D4();
}

void static StatusResponse.supportsSecureCoding.modify()
{
  sub_242079EE8();
  sub_24207F428();
}

void sub_2420B5464(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR___MCResourceStatus_status);
  v4 = (id)sub_2420C0FE4();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v3, v4);

}

void StatusResponse.__allocating_init(coder:)(void *a1)
{
  sub_24207F560();
  StatusResponse.init(coder:)(a1);
  sub_24207F428();
}

void StatusResponse.init(coder:)(void *a1)
{
  void *v1;
  _BYTE *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  v3 = v1;
  v4 = (void *)sub_2420C0FE4();
  v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  if ((unint64_t)v5 > 3)
  {
    __break(1u);
  }
  else
  {
    v3[OBJC_IVAR___MCResourceStatus_status] = (_BYTE)v5;

    v12.receiver = v3;
    v12.super_class = (Class)type metadata accessor for StatusResponse();
    sub_2420C1510((uint64_t)v12.super_class, sel_init, v6, v7, v8, v9, v10, v11, v12);

    sub_2420C0DFC();
  }
}

void StatusResponse.status.getter(_BYTE *a1@<X8>)
{
  sub_2420C1160(a1);
}

id StatusResponse.__allocating_init(status:)(_BYTE *a1)
{
  objc_class *v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v3 = sub_24207F560();
  v3[OBJC_IVAR___MCResourceStatus_status] = *a1;
  v11.receiver = v3;
  v11.super_class = v1;
  return sub_2420C1510((uint64_t)v3, sel_init, v4, v5, v6, v7, v8, v9, v11);
}

id StatusResponse.init(status:)(_BYTE *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1[OBJC_IVAR___MCResourceStatus_status] = *a1;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for StatusResponse();
  return sub_2420C1510((uint64_t)v9.super_class, sel_init, v2, v3, v4, v5, v6, v7, v9);
}

id StatusResponse.__allocating_init()()
{
  return objc_msgSend(sub_24207F560(), sel_init);
}

void StatusResponse.init()()
{
  sub_24207F778();
  __break(1u);
}

id StatusResponse.__deallocating_deinit(uint64_t a1)
{
  return sub_2420B668C(a1, type metadata accessor for StatusResponse);
}

void ExecutionContext.hash(into:)()
{
  uint64_t v0;
  int v1;
  __int16 v2;

  sub_2420C0DE8();
  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_WORD *)(v0 + 32);
  sub_24207F5FC();
  sub_2420C0FDC();
  if (v1 != 2)
    sub_242079F00();
  sub_242132D8C();
  sub_24207F700();
  if (v2 != 2)
  {
    sub_242079F00();
    sub_242132D80();
    sub_242132D8C();
    sub_242132D8C();
  }
  sub_242132D8C();
  sub_2420C0E70();
  sub_2420973B4();
}

void static ExecutionContext.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_2420C0C54();
  v1 = sub_2420C10D0(v0);
  if (v1 != *v3 || v2 != v3[1])
    sub_242132D14();
  sub_2420C1074();
}

void ExecutionContext.hashValue.getter()
{
  uint64_t v0;
  int v1;
  __int16 v2;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_WORD *)(v0 + 32);
  sub_2420974F0();
  sub_24207F5FC();
  sub_2420C0FDC();
  if (v1 != 2)
    sub_2420C0BC8();
  sub_2420C1298();
  sub_24207F700();
  if (v2 != 2)
  {
    sub_2420C0BC8();
    sub_2420C16B0();
    sub_2420C1158();
    sub_2420C1158();
  }
  sub_2420C1158();
  sub_2420C0E70();
  sub_242079F68();
  sub_2420C1190();
}

void sub_2420B5960()
{
  uint64_t v0;
  int v1;
  __int16 v2;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_WORD *)(v0 + 32);
  sub_2420976A4();
  sub_24207F5FC();
  sub_2420C0FDC();
  if (v1 != 2)
    sub_2420C0BC8();
  sub_2420C1298();
  sub_24207F700();
  if (v2 != 2)
  {
    sub_2420C0BC8();
    sub_2420C16B0();
    sub_2420C1158();
    sub_2420C1158();
  }
  sub_2420C1158();
  sub_2420C0E70();
  sub_242079F68();
  sub_2420C1190();
}

void static ResourceInformation.supportsSecureCoding.getter()
{
  sub_242079EE8();
  sub_24207F4D4();
}

void static ResourceInformation.supportsSecureCoding.setter(char a1)
{
  sub_242079EE8();
  byte_25719EA59 = a1;
  sub_24207F4D4();
}

void static ResourceInformation.supportsSecureCoding.modify()
{
  sub_242079EE8();
  sub_24207F428();
}

void sub_2420B5AEC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v2 = v1;
  sub_2420797C0((uint64_t *)&unk_254399E98);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420C158C();
  sub_2420BACB8(v1 + OBJC_IVAR___MCResourceInformation_location, v1);
  v5 = sub_24209745C();
  v6 = 0;
  if (sub_2420801D0(v1, 1, v5) != 1)
  {
    v6 = sub_2421324BC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v1, v5);
  }
  v7 = (void *)sub_2420C162C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v2 + OBJC_IVAR___MCResourceInformation_metadata))
    v8 = sub_2421326E4();
  else
    v8 = 0;
  v9 = (void *)sub_2420C162C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);
  swift_unknownObjectRelease();

  sub_24207F4E0();
}

void ResourceInformation.__allocating_init(coder:)(void *a1)
{
  sub_24207F560();
  ResourceInformation.init(coder:)(a1);
  sub_24207F428();
}

void ResourceInformation.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  objc_class *v18;
  objc_super v19;

  sub_2420797C0((uint64_t *)&unk_254399E98);
  sub_2420C08BC();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - v7;
  sub_24207F2FC(0, &qword_2543977E0);
  v9 = v1;
  v10 = sub_2421329F0();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = sub_24209745C();
    sub_24207E8A8((uint64_t)v6, 1, 1, v12);
    sub_2420BAD38();
    sub_242132BD0();

    if (sub_2420801D0((uint64_t)v6, 1, v12) == 1)
    {
      v13 = (uint64_t)v8;
      v14 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v6, v12);
      v13 = (uint64_t)v8;
      v14 = 0;
    }
    v15 = v12;
  }
  else
  {
    v15 = sub_24213251C();
    v13 = (uint64_t)v8;
    v14 = 1;
  }
  sub_24207E8A8(v13, v14, 1, v15);
  sub_2420966B8((uint64_t)v8, (uint64_t)&v9[OBJC_IVAR___MCResourceInformation_location], (uint64_t *)&unk_254399E98);
  sub_24207F2FC(0, (unint64_t *)&unk_254399958);
  v16 = sub_2421329FC();
  if (v16)
  {
    v17 = sub_2420B5ED8(v16);
    sub_24207F700();
  }
  else
  {
    v17 = 0;
  }
  *(_QWORD *)&v9[OBJC_IVAR___MCResourceInformation_metadata] = v17;

  v18 = (objc_class *)type metadata accessor for ResourceInformation();
  v19.receiver = v9;
  v19.super_class = v18;
  objc_msgSendSuper2(&v19, sel_init);

  sub_24207F4E0();
}

uint64_t sub_2420B5ED8(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t result;
  int64_t v20;
  _QWORD *v21;
  void *v22;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_242132A8C())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x24BEE4B00];
    if (v2)
      goto LABEL_4;
    goto LABEL_7;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_2420797C0(qword_254399F18);
  v3 = sub_242132BB8();
  if (v2)
  {
LABEL_4:
    v4 = sub_242132B64();
    v21 = 0;
    v5 = 0;
    v6 = 0;
    v7 = v4 | 0x8000000000000000;
    goto LABEL_11;
  }
LABEL_7:
  v8 = -1 << *(_BYTE *)(a1 + 32);
  v5 = ~v8;
  v21 = (_QWORD *)(a1 + 64);
  v9 = -v8;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v6 = v10 & *(_QWORD *)(a1 + 64);
  v7 = a1;
LABEL_11:
  v20 = (unint64_t)(v5 + 64) >> 6;
  swift_bridgeObjectRetain();
  if ((v7 & 0x8000000000000000) != 0)
  {
    if (sub_242132B7C())
    {
      sub_24207F2FC(0, (unint64_t *)&unk_254399958);
      swift_dynamicCast();
      swift_dynamicCast();
      v12 = v22;
LABEL_32:
      v12;
      result = sub_242132774();
      __break(1u);
      __break(1u);
      return result;
    }
  }
  else
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
LABEL_31:
      v12 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v11);
      v16 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v11);
      v17 = v12;
      v18 = v16;
      goto LABEL_32;
    }
    if (v20 > 1)
    {
      v13 = v21[1];
      v14 = 1;
      if (v13)
        goto LABEL_30;
      v14 = 2;
      if (v20 > 2)
      {
        v13 = v21[2];
        if (v13)
          goto LABEL_30;
        v14 = 3;
        if (v20 > 3)
        {
          v13 = v21[3];
          if (v13)
            goto LABEL_30;
          v14 = 4;
          if (v20 > 4)
          {
            v13 = v21[4];
            if (v13)
              goto LABEL_30;
            v14 = 5;
            if (v20 > 5)
            {
              v13 = v21[5];
              if (!v13)
              {
                v15 = 6;
                while (v15 < v20)
                {
                  v13 = v21[v15++];
                  if (v13)
                  {
                    v14 = v15 - 1;
                    goto LABEL_30;
                  }
                }
                goto LABEL_33;
              }
LABEL_30:
              v11 = __clz(__rbit64(v13)) + (v14 << 6);
              goto LABEL_31;
            }
          }
        }
      }
    }
  }
LABEL_33:
  sub_24207F380();
  return v3;
}

uint64_t ResourceInformation.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2420BACB8(v1 + OBJC_IVAR___MCResourceInformation_location, a1);
}

uint64_t ResourceInformation.metadata.getter()
{
  return swift_bridgeObjectRetain();
}

void ResourceInformation.__allocating_init(location:metadata:)()
{
  sub_2420C1758();
  sub_24207F560();
  ResourceInformation.init(location:metadata:)();
  sub_242097A00();
}

void ResourceInformation.init(location:metadata:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  sub_2420C1758();
  sub_2420BACB8(v3, (uint64_t)&v1[OBJC_IVAR___MCResourceInformation_location]);
  *(_QWORD *)&v1[OBJC_IVAR___MCResourceInformation_metadata] = v0;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for ResourceInformation();
  sub_2420C1510((uint64_t)v10.super_class, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_2420801DC(v2);
  sub_2420C0DFC();
}

void sub_2420B63D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  sub_2420C0DE8();
  sub_2420797C0((uint64_t *)&unk_254399E98);
  sub_2420C08BC();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2420C1330();
  swift_bridgeObjectRelease();
  v19 = 0xD000000000000017;
  v20 = 0x8000000242139A90;
  sub_2420BACB8(v0 + OBJC_IVAR___MCResourceInformation_location, (uint64_t)v3);
  v4 = sub_24209745C();
  if (sub_2420801D0((uint64_t)v3, 1, v4) == 1)
  {
    sub_2420801DC((uint64_t)v3);
  }
  else
  {
    sub_2421324B0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  sub_242097A28();
  sub_2421327EC();
  sub_24207F700();
  v5 = v19;
  v6 = v20;
  sub_24210B184(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v8 = v7;
  v10 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  if (v10 >= v9 >> 1)
  {
    sub_2420C1900(v9 > 1, v10 + 1);
    v8 = v17;
  }
  *(_QWORD *)(v8 + 16) = v10 + 1;
  v11 = v8 + 16 * v10;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v6;
  sub_2420C1330();
  swift_bridgeObjectRelease();
  v19 = 0xD000000000000017;
  v20 = 0x8000000242139AB0;
  if (!*(_QWORD *)(v0 + OBJC_IVAR___MCResourceInformation_metadata))
    sub_242132708();
  swift_bridgeObjectRetain();
  sub_2421326FC();
  sub_2421327EC();
  sub_242097384();
  sub_24207F700();
  v12 = v19;
  v13 = v20;
  v15 = *(_QWORD *)(v8 + 16);
  v14 = *(_QWORD *)(v8 + 24);
  if (v15 >= v14 >> 1)
  {
    sub_2420C1900(v14 > 1, v15 + 1);
    v8 = v18;
  }
  *(_QWORD *)(v8 + 16) = v15 + 1;
  v16 = v8 + 16 * v15;
  *(_QWORD *)(v16 + 32) = v12;
  *(_QWORD *)(v16 + 40) = v13;
  v19 = v8;
  sub_2420797C0(&qword_254399CD8);
  sub_2420A0228(&qword_25719EBD8, &qword_254399CD8, MEMORY[0x24BEE12B0]);
  sub_242132714();
  sub_24207F78C();
  sub_24207F648();
  sub_2420973B4();
}

void ResourceInformation.init()()
{
  sub_24207F778();
  __break(1u);
}

id ResourceInformation.__deallocating_deinit()
{
  return sub_2420B668C(0, type metadata accessor for ResourceInformation);
}

id sub_2420B668C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

#error "2420B6768: call analysis failed (funcsize=39)"

void TokenizerBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;
  uint64_t v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_242097334();
  a43 = v47;
  a44 = v48;
  sub_2420C0F34();
  sub_242097098(&a12, v46);
  sub_242097810();
  v49 = v49 && v45 == 0xE900000000000072;
  if (!v49)
  {
    sub_242097A28();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_2420C0AC8();
      sub_242097290();
      sub_242084DD8();
      v58 = sub_2420970E4();
      sub_242097720(v58, v59);
      sub_24209742C(v60, v61);
      goto LABEL_11;
    }
  }
  v50 = a21;
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v54 = sub_2420970E4();
    sub_242097580(v54, v55);
    *(_QWORD *)(v56 + 16) = v57;
    *(_QWORD *)(v56 + 24) = 0x8000000242138E30;
    sub_24207F5FC();
LABEL_11:
    v62 = sub_242097610();
    sub_2420C1394(v62, v63, v64);
    goto LABEL_12;
  }
  v52 = a16;
  v51 = a17;
  v53 = a18;
  sub_242097098(v44, v46);
  v44[23] = v52;
  v44[24] = v51;
  v44[25] = v53;
  v44[26] = v50;
  sub_24207F5FC();
  sub_242079ED8();
  sub_242079F18();
LABEL_12:
  sub_2420970F0();
}

#error "2420B68F0: call analysis failed (funcsize=5)"

void sub_2420B68FC()
{
  sub_2420ABA18();
}

uint64_t (*sub_2420B6918(_QWORD *a1))()
{
  const void *v1;
  _QWORD *v3;
  void *v4;

  v3 = malloc(0xE0uLL);
  *a1 = v3;
  v4 = memcpy(v3, v1, 0xD8uLL);
  v3[27] = sub_2420ABF94(v4);
  return sub_2420B6970;
}

uint64_t sub_2420B6974()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return _s12ModelCatalog21ResourceConfigurationV13preconditionsSayAA12PreconditionVGvg_0();
}

uint64_t sub_2420B69AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2420B7870((uint64_t (*)(void *))sub_2420C077C, a1);
}

#error "2420B6A38: call analysis failed (funcsize=41)"

void LLMAJAXModelBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  sub_242097334();
  a43 = v46;
  a44 = v47;
  sub_2420C0F34();
  sub_242097098(&a12, v45);
  if (a12 != 0x58414A412E4D4C4CLL || a13 != 0xE800000000000000)
  {
    sub_242097688();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_2420C0AC8();
      sub_242097290();
      sub_242084DD8();
      v57 = sub_2420970E4();
      sub_2420C198C(v57, v58);
      sub_24209742C(v59, v60);
      goto LABEL_11;
    }
  }
  v49 = a21;
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v53 = sub_2420970E4();
    sub_2420C198C(v53, v54);
    *(_QWORD *)(v56 + 16) = v55 + 5;
    *(_QWORD *)(v56 + 24) = 0x8000000242138E30;
    sub_24207F5FC();
LABEL_11:
    v61 = sub_242097610();
    sub_2420C1394(v61, v62, v63);
    goto LABEL_12;
  }
  v51 = a16;
  v50 = a17;
  v52 = a18;
  sub_242097098(v44, v45);
  v44[23] = v51;
  v44[24] = v50;
  v44[25] = v52;
  v44[26] = v49;
  sub_24207F5FC();
  sub_242079ED8();
  sub_242079F18();
LABEL_12:
  sub_2420970F0();
}

#error "2420B6BB4: call analysis failed (funcsize=5)"

void sub_2420B6BC0()
{
  sub_2420ABA18();
}

void LLMDraftModelBase.configuration.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  const void *v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  char v13[184];

  v8 = sub_2420C1654(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13[0]);
  memcpy(v8, v9, 0xB8uLL);
  v10 = (void *)sub_24207F648();
  memcpy(v10, v11, 0xB8uLL);
  sub_242084C9C((uint64_t)v13);
  sub_242097AA8();
}

#error "2420B6C98: call analysis failed (funcsize=41)"

void LLMDraftModelBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;
  uint64_t v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_242097334();
  a43 = v47;
  a44 = v48;
  sub_2420C0F34();
  sub_242097098(&a12, v46);
  sub_242097810();
  v49 = v49 && v45 == 0xEE006C65646F4D74;
  if (!v49)
  {
    sub_242097688();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_2420C0AC8();
      sub_242097290();
      sub_242084DD8();
      v58 = sub_2420970E4();
      sub_2420974FC(v58, v59);
      sub_24209742C(v61, v60 + 1);
      goto LABEL_11;
    }
  }
  v50 = a21;
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v54 = sub_2420970E4();
    sub_2420974FC(v54, v55);
    *(_QWORD *)(v56 + 16) = v57;
    *(_QWORD *)(v56 + 24) = 0x8000000242138E30;
    sub_24207F5FC();
LABEL_11:
    v62 = sub_242097610();
    sub_2420C1394(v62, v63, v64);
    goto LABEL_12;
  }
  v52 = a16;
  v51 = a17;
  v53 = a18;
  sub_242097098(v44, v46);
  v44[23] = v52;
  v44[24] = v51;
  v44[25] = v53;
  v44[26] = v50;
  sub_24207F5FC();
  sub_242079ED8();
  sub_242079F18();
LABEL_12:
  sub_2420970F0();
}

BOOL static LLMDraftModelBase.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;

  sub_2420C0DE8();
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v3 + 184);
  v5 = *(_QWORD *)(v3 + 192);
  static ResourceConfiguration.== infix(_:_:)(v0);
  result = 0;
  if ((v6 & 1) != 0)
  {
    v7 = v1 == v4 && v2 == v5;
    if (v7 || (sub_242079EB8() & 1) != 0)
    {
      sub_2420C187C();
      if ((v8 & 1) != 0)
      {
        v9 = sub_24207F648();
        if ((sub_2420AD5FC(v9, v10) & 1) != 0)
          return 1;
      }
    }
  }
  return result;
}

#error "2420B6EB0: call analysis failed (funcsize=5)"

void sub_2420B6EBC()
{
  sub_2420ABA18();
}

void sub_2420B6ED8()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  sub_2420ABC88();
}

void sub_2420B6F28(uint64_t a1@<X8>)
{
  const void *v1;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _BYTE __dst[216];

  v3 = memcpy(__dst, v1, sizeof(__dst));
  sub_2420ABE28(v3, v4, v5, v6, v7, v8, v9, a1);
}

uint64_t sub_2420B6F70()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2420ABF10();
}

uint64_t sub_2420B6FA8()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2420ABF7C();
}

uint64_t sub_2420B6FE0()
{
  const void *v0;
  void *v1;
  _BYTE __dst[216];

  v1 = memcpy(__dst, v0, sizeof(__dst));
  return sub_2420ABF94(v1);
}

uint64_t sub_2420B7018()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2420AC1A4();
}

uint64_t sub_2420B7050()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2420AC1FC();
}

uint64_t sub_2420B7088()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2420AC36C();
}

uint64_t sub_2420B70C0()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2420AC3D4() & 1;
}

uint64_t sub_2420B70FC()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2420AC404() & 1;
}

uint64_t sub_2420B7138()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2420AC434();
}

void sub_2420B7170()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  sub_2420AC4A0();
}

uint64_t sub_2420B71A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_2420B7870((uint64_t (*)(void *))sub_2420AC1A4, a1);
}

void LLMModelBase.tokenizer.getter()
{
  sub_2420C1558();
  __break(1u);
}

#error "2420B7278: call analysis failed (funcsize=41)"

void LLMModelBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;
  uint64_t v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_242097334();
  a43 = v47;
  a44 = v48;
  sub_2420C0F34();
  sub_242097098(&a12, v46);
  sub_242097810();
  v49 = v49 && v45 == 0xE90000000000006CLL;
  if (!v49)
  {
    sub_242097688();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_2420C0AC8();
      sub_242097290();
      sub_242084DD8();
      v58 = sub_2420970E4();
      sub_242097720(v58, v59);
      sub_24209742C(v60, v61);
      goto LABEL_11;
    }
  }
  v50 = a21;
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    v54 = sub_2420970E4();
    sub_242097580(v54, v55);
    *(_QWORD *)(v56 + 16) = v57;
    *(_QWORD *)(v56 + 24) = 0x8000000242138E30;
    sub_24207F5FC();
LABEL_11:
    v62 = sub_242097610();
    sub_2420C1394(v62, v63, v64);
    goto LABEL_12;
  }
  v52 = a16;
  v51 = a17;
  v53 = a18;
  sub_242097098(v44, v46);
  v44[23] = v52;
  v44[24] = v51;
  v44[25] = v53;
  v44[26] = v50;
  sub_24207F5FC();
  sub_242079ED8();
  sub_242079F18();
LABEL_12:
  sub_2420970F0();
}

void sub_2420B73EC()
{
  LLMModelBase.tokenizer.getter();
}

#error "2420B7400: call analysis failed (funcsize=5)"

void sub_2420B740C()
{
  sub_2420ABA18();
}

void sub_2420B7428()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  sub_2420ACE4C();
}

void LLMAdapterBase.llmModel.getter()
{
  sub_2420C1558();
  __break(1u);
}

uint64_t _s12ModelCatalog13TokenizerBaseV5innerAA015ManagedResourceD0Vvg_0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[23];
  v2 = v1[24];
  v4 = v1[25];
  v5 = v1[26];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  sub_2420A1CA0();
  return swift_bridgeObjectRetain();
}

#error "2420B7558: call analysis failed (funcsize=41)"

void LLMAdapterBase.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  sub_242097334();
  a43 = v48;
  a44 = v49;
  sub_2420C0F34();
  sub_242097098(&a12, v47);
  sub_242097810();
  v50 = v50 && v45 == 0xEB00000000726574;
  if (!v50)
  {
    sub_242097688();
    if ((sub_242079EB8() & 1) == 0)
    {
      sub_24207F5FC();
      sub_2420C0AC8();
      sub_242097290();
      sub_242084DD8();
      sub_2420970E4();
      *v58 = v46;
      v58[1] = v45;
      sub_242097B04();
      sub_24209742C(v59, v60);
      goto LABEL_11;
    }
  }
  v51 = a21;
  if (!a21 || !*(_QWORD *)(a21 + 16))
  {
    sub_242084DD8();
    sub_2420970E4();
    *v55 = v46;
    v55[1] = v45;
    sub_242097B04();
    *(_QWORD *)(v57 + 16) = v56 + 2;
    *(_QWORD *)(v57 + 24) = 0x8000000242138E30;
    sub_24207F5FC();
LABEL_11:
    v61 = sub_242097610();
    sub_2420C1394(v61, v62, v63);
    goto LABEL_12;
  }
  v53 = a16;
  v52 = a17;
  v54 = a18;
  sub_242097098(v44, v47);
  v44[23] = v53;
  v44[24] = v52;
  v44[25] = v54;
  v44[26] = v51;
  sub_24207F5FC();
  sub_242079ED8();
  sub_242079F18();
LABEL_12:
  sub_2420970F0();
}

void _s12ModelCatalog13TokenizerBaseV4hash4intoys6HasherVz_tF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 200);
  ResourceConfiguration.hash(into:)(a1);
  sub_2420C1388();
  sub_2420977E0();
  sub_2420A1CA0();
  sub_2420C0CE4();
  sub_24207F78C();
  sub_2420977E0();
  sub_2420BA1EC(a1, v3);
  sub_242097268();
  sub_2420A1CA0();
  sub_2420C190C(a1);
  sub_242097268();
  sub_24207F78C();
  sub_2420A1EFC();
  sub_24207F4E0();
}

void _s12ModelCatalog13TokenizerBaseV9hashValueSivg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[72];

  v0 = sub_2420974F0();
  sub_2420C1944(v0);
  sub_2420C1388();
  sub_24207F5FC();
  sub_2420A1CA0();
  sub_2420C0CE4();
  sub_24207F78C();
  v1 = sub_24207F5FC();
  sub_2420C1434(v1);
  sub_24207F700();
  sub_2420A1CA0();
  sub_2420C190C((uint64_t)v2);
  sub_24207F700();
  sub_24207F78C();
  sub_2420A1EFC();
  sub_242079F68();
  sub_2420C0E78();
}

void sub_2420B77D8()
{
  LLMAdapterBase.llmModel.getter();
}

#error "2420B77EC: call analysis failed (funcsize=5)"

void sub_2420B77F8()
{
  sub_2420ABA18();
}

void sub_2420B7814()
{
  const void *v0;
  _BYTE __dst[216];

  memcpy(__dst, v0, sizeof(__dst));
  sub_2420ACB28();
}

void sub_2420B784C(void **a1)
{
  void *v1;

  v1 = *a1;
  swift_bridgeObjectRelease();
  sub_2420C13B8(v1);
}

uint64_t sub_2420B7870@<X0>(uint64_t (*a1)(void *)@<X2>, uint64_t *a2@<X8>)
{
  const void *v2;
  void *v5;
  uint64_t result;
  uint64_t v7;
  _BYTE __dst[216];

  v5 = memcpy(__dst, v2, sizeof(__dst));
  result = a1(v5);
  *a2 = result;
  a2[1] = v7;
  return result;
}

void sub_2420B78BC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[72];

  v0 = sub_2420976A4();
  sub_2420C1944(v0);
  sub_2420C1388();
  sub_24207F5FC();
  sub_2420A1CA0();
  sub_2420C0CE4();
  sub_24207F78C();
  v1 = sub_24207F5FC();
  sub_2420C1434(v1);
  sub_24207F700();
  sub_2420A1CA0();
  sub_2420C190C((uint64_t)v2);
  sub_24207F700();
  sub_24207F78C();
  sub_2420A1EFC();
  sub_242079F68();
  sub_2420C0E78();
}

void *static Precondition.PreconditionType.allCases.getter()
{
  return &unk_2513217F0;
}

void Precondition.PreconditionType.usages.getter()
{
  uint64_t inited;

  sub_2420797C0(&qword_254399C48);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24214D280;
  sub_242082F10();
  sub_2420C164C();
  sub_24207F78C();
  *(_QWORD *)(inited + 32) = 3040109;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = 0x44454C42414E45;
  *(_QWORD *)(inited + 56) = 0xE700000000000000;
  sub_242132708();
  sub_2420C0B1C();
}

unint64_t Precondition.PreconditionType.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 == 1)
    v1 = 0xD000000000000025;
  if (*v0)
    return v1;
  else
    return 0xD00000000000002CLL;
}

ModelCatalog::Precondition::PreconditionType_optional __swiftcall Precondition.PreconditionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  ModelCatalog::Precondition::PreconditionType_optional result;

  sub_2420C14E0();
  v2 = sub_242097510();
  sub_242097384();
  v3 = 3;
  if (v2 < 3)
    v3 = v2;
  *v1 = v3;
  sub_242097A00();
  return result;
}

ModelCatalog::Precondition::PreconditionType_optional sub_2420B7AD0(Swift::String *a1)
{
  return Precondition.PreconditionType.init(rawValue:)(*a1);
}

void sub_2420B7ADC(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = Precondition.PreconditionType.rawValue.getter();
  a1[1] = v2;
  sub_24207F428();
}

void sub_2420B7AFC()
{
  sub_2420862A0();
}

uint64_t sub_2420B7B04(uint64_t a1)
{
  char *v1;

  return sub_2420AC8DC(a1, *v1);
}

void sub_2420B7B0C()
{
  sub_242086440();
}

void sub_2420B7B14(unsigned __int8 *a1, char *a2)
{
  sub_242107FD4(*a1, *a2);
}

uint64_t sub_2420B7B20()
{
  sub_2420C0514();
  return sub_242132888();
}

uint64_t sub_2420B7B7C()
{
  sub_2420C0514();
  return sub_242132870();
}

void sub_2420B7BC8(_QWORD *a1@<X8>)
{
  *a1 = &unk_2513217F0;
}

void Precondition.preconditionType.getter(_BYTE *a1@<X8>)
{
  sub_2420C1160(a1);
}

void static Precondition.aneHardwareEligible.getter(_BYTE *a1@<X8>)
{
  sub_2420C1160(a1);
}

void static Precondition.generativeExperiencesHardwareEligible.getter(_BYTE *a1@<X8>)
{
  sub_2420C1160(a1);
}

uint64_t Precondition.hash(into:)()
{
  sub_2420C0EA0();
  return sub_24209773C();
}

void static Precondition.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  sub_242107FD4(*a1, *a2);
}

uint64_t sub_2420B7C74(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000242139EA0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_242132D14();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_2420B7CF8()
{
  sub_2420974F0();
  sub_2420C16BC();
  sub_242079F68();
  sub_24209725C();
}

unint64_t sub_2420B7D1C()
{
  return 0xD000000000000010;
}

void sub_2420B7D38()
{
  sub_2420976A4();
  sub_2420C16BC();
  sub_242079F68();
  sub_24209725C();
}

uint64_t sub_2420B7D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B7C74(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2420B7D88()
{
  sub_2420BAD78();
  return sub_242132DBC();
}

uint64_t sub_2420B7DB0()
{
  sub_2420BAD78();
  return sub_242132DC8();
}

void Precondition.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_242097180();
  v3 = v2;
  sub_2420797C0(&qword_254397980);
  sub_2420C1180();
  MEMORY[0x24BDAC7A8](v4);
  sub_2420AA184();
  sub_242079800(v3, v3[3]);
  sub_2420BAD78();
  sub_2420C0C08();
  sub_2420BADB4();
  sub_242132CF0();
  sub_242097598(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_2420C12B8();
  sub_2420970A0();
}

void Precondition.hashValue.getter()
{
  sub_2420974F0();
  sub_242082F10();
  sub_2420C0EA0();
  sub_242097384();
  sub_242079F68();
  sub_24209725C();
}

void Precondition.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;

  sub_242097180();
  sub_2420C1680();
  sub_2420797C0(&qword_2543979D8);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v16);
  sub_2420C0AA8();
  sub_2420BAD78();
  sub_2420C0D60();
  if (!v14)
  {
    sub_2420BADF0();
    sub_2420C0854();
    sub_2420C0844();
    *v15 = a13;
  }
  sub_242079824(v13);
  sub_2420C0AD0();
  sub_2420970A0();
}

uint64_t sub_2420B7FD4()
{
  sub_242132D74();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  return sub_242132D98();
}

void sub_2420B8078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  Precondition.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_2420B808C()
{
  Precondition.encode(to:)();
}

ModelCatalog::Platform::PlatformType_optional __swiftcall Platform.PlatformType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  ModelCatalog::Platform::PlatformType_optional result;

  sub_2420C14E0();
  v2 = sub_242097510();
  sub_242097384();
  v3 = 6;
  if (v2 < 6)
    v3 = v2;
  *v1 = v3;
  sub_242097A00();
  return result;
}

void *static Platform.PlatformType.allCases.getter()
{
  return &unk_251326468;
}

uint64_t Platform.PlatformType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2420B811C + 4 * byte_24214D4CB[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_2420B811C()
{
  return 7565161;
}

uint64_t sub_2420B812C()
{
  return 0x736F63616DLL;
}

uint64_t sub_2420B8140()
{
  return 0x736F6863746177;
}

uint64_t sub_2420B8154()
{
  return 1936684660;
}

uint64_t sub_2420B8164()
{
  return 0x736F6E6F69736976;
}

ModelCatalog::Platform::PlatformType_optional sub_2420B817C(Swift::String *a1)
{
  return Platform.PlatformType.init(rawValue:)(*a1);
}

void sub_2420B8188(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = Platform.PlatformType.rawValue.getter();
  a1[1] = v2;
  sub_24207F428();
}

void sub_2420B81A8()
{
  sub_2420862AC();
}

void sub_2420B81B0(uint64_t a1)
{
  char *v1;

  sub_2420AC568(a1, *v1);
}

void sub_2420B81B8()
{
  sub_242086324();
}

void sub_2420B81C0()
{
  sub_24210798C();
}

uint64_t sub_2420B81CC()
{
  sub_2420C04D8();
  return sub_242132888();
}

uint64_t sub_2420B8228()
{
  sub_2420C04D8();
  return sub_242132870();
}

void sub_2420B8274(_QWORD *a1@<X8>)
{
  *a1 = &unk_251326468;
}

void Platform.platformType.getter(_BYTE *a1@<X8>)
{
  sub_2420C1160(a1);
}

void Platform.version.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t Platform.hash(into:)(uint64_t a1)
{
  char *v1;

  sub_2420AC568(a1, *v1);
  sub_24207F5FC();
  sub_2420C0FDC();
  return sub_2420C0D90();
}

void static Platform.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_24210798C();
  if ((v6 & 1) == 0 || (v2 == v4 ? (v7 = v3 == v5) : (v7 = 0), v7))
  {
    sub_242097A00();
  }
  else
  {
    sub_24207F648();
    sub_242132D14();
  }
}

uint64_t sub_2420B8350(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6D726F6674616C70 && a2 == 0xEC00000065707954;
  if (v2 || (sub_242132D14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242132D14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2420B8454(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F6973726576;
  else
    return 0x6D726F6674616C70;
}

uint64_t sub_2420B8494()
{
  char *v0;

  return sub_2420B8454(*v0);
}

uint64_t sub_2420B849C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2420B8350(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2420B84C0()
{
  sub_2420BAE2C();
  return sub_242132DBC();
}

uint64_t sub_2420B84E8()
{
  sub_2420BAE2C();
  return sub_242132DC8();
}

void Platform.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_242097180();
  v4 = v3;
  sub_2420797C0(&qword_254399218);
  sub_2420C15E4();
  MEMORY[0x24BDAC7A8](v5);
  sub_2420972E4();
  sub_2420A23D8(v4);
  sub_2420BAE2C();
  sub_2420C0C1C();
  sub_2420BAE68();
  sub_2420C0EA8();
  if (!v0)
    sub_2420977A4();
  sub_2420C0B6C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_242097A70();
  sub_2420970A0();
}

void Platform.hashValue.getter()
{
  char *v0;
  char v1;
  _BYTE v2[72];

  v1 = *v0;
  sub_2420974F0();
  sub_2420AC568((uint64_t)v2, v1);
  sub_242097744();
  sub_2420C0C98();
  sub_24207F78C();
  sub_242079F68();
  sub_2420C0B1C();
}

void Platform.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_242097180();
  sub_2420C1680();
  sub_2420797C0(&qword_254399B40);
  sub_242097518();
  MEMORY[0x24BDAC7A8](v16);
  sub_2420C0AA8();
  sub_2420BAE2C();
  sub_2420C0D60();
  if (!v14)
  {
    sub_2420BAEA4();
    sub_2420C0854();
    v17 = sub_242132C3C();
    v19 = v18;
    sub_2420C0844();
    *(_BYTE *)v15 = a13;
    *(_QWORD *)(v15 + 8) = v17;
    *(_QWORD *)(v15 + 16) = v19;
  }
  sub_242079824(v13);
  sub_2420C0AD0();
  sub_2420970A0();
}

uint64_t sub_2420B8734()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_242132D74();
  sub_2420AC568((uint64_t)v3, v1);
  swift_bridgeObjectRetain();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  return sub_242132D98();
}

void sub_2420B87A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  Platform.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_2420B87B8()
{
  Platform.encode(to:)();
}

void Tag.init(rawValue:)()
{
  BOOL *v0;
  uint64_t v1;

  sub_2420C14E0();
  v1 = sub_242097510();
  sub_242097384();
  *v0 = v1 != 0;
  sub_242097A00();
}

unint64_t Tag.rawValue.getter()
{
  sub_2420802AC();
  return 0xD000000000000020;
}

void sub_2420B8828()
{
  Tag.init(rawValue:)();
}

void sub_2420B8834(_QWORD *a1@<X8>)
{
  uint64_t v2;

  Tag.rawValue.getter();
  *a1 = 0xD000000000000020;
  a1[1] = v2;
  sub_24207F428();
}

uint64_t sub_2420B8868()
{
  sub_2420C049C();
  return sub_242132888();
}

uint64_t sub_2420B88C4()
{
  sub_2420C049C();
  return sub_242132870();
}

void static Catalog.requestResource(identifier:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  char v11;

  sub_2420C1168();
  sub_242079F48();
  CatalogClient.init()();
  v4 = sub_2420C1518();
  v6 = sub_24207C0DC(v4, v5);
  if (v1)
  {
    sub_2420C0F44();
  }
  else
  {
    v7 = (void *)v6;
    sub_24207F2FC(0, (unint64_t *)&unk_25719D970);
    v8 = v7;
    sub_2420C1764();
    sub_2420C0D78();
    sub_2420C1464();

    if ((v3 & 1) != 0)
    {
      sub_2420C0F44();

      *(_OWORD *)v0 = xmmword_242150D50;
      *(_BYTE *)(v0 + 16) = 0;
    }
    else
    {
      v9 = v7;
      sub_2420C1500();
      sub_2420C0D78();
      sub_2420C1464();

      v10 = v7;
      sub_2420C14F0();
      v11 = sub_2420C0D78();

      sub_2420C0F44();
      if ((v11 & 1) != 0)
      {
        *(_QWORD *)v0 = 0xD000000000000035;
        *(_QWORD *)(v0 + 8) = 0x8000000242139B80;
        *(_BYTE *)(v0 + 16) = v3;
      }
      else
      {
        sub_2420C1540(0xD000000000000029);
      }
    }
  }
  sub_2420C12D8();
}

void static Catalog.releaseResource(identifier:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  char v11;

  sub_2420C1168();
  sub_242079F48();
  CatalogClient.init()();
  v4 = sub_2420C1518();
  v6 = sub_24207C0F8(v4, v5);
  if (v1)
  {
    sub_2420C0F44();
  }
  else
  {
    v7 = (void *)v6;
    sub_24207F2FC(0, (unint64_t *)&unk_25719D970);
    v8 = v7;
    sub_2420C1764();
    sub_2420C0D78();
    sub_2420C1464();

    if ((v3 & 1) != 0)
    {
      sub_2420C0F44();

      *(_OWORD *)v0 = xmmword_242150D50;
      *(_BYTE *)(v0 + 16) = 0;
    }
    else
    {
      v9 = v7;
      sub_2420C1500();
      sub_2420C0D78();
      sub_2420C1464();

      v10 = v7;
      sub_2420C14F0();
      v11 = sub_2420C0D78();

      sub_2420C0F44();
      if ((v11 & 1) != 0)
      {
        *(_QWORD *)v0 = 0xD00000000000003FLL;
        *(_QWORD *)(v0 + 8) = 0x8000000242139C20;
        *(_BYTE *)(v0 + 16) = v3;
      }
      else
      {
        sub_2420C1540(0xD000000000000028);
      }
    }
  }
  sub_2420C12D8();
}

uint64_t static Catalog.modelManagerDefaultMemoryBudget.getter()
{
  return 2000000;
}

void ResourceStatusOutput.resourceID.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void ResourceStatusOutput.resourceType.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void ResourceStatusOutput.sourceName.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void ResourceStatusOutput.glyph.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t ResourceStatusOutput.percent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

void ResourceStatusOutput.version.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void ResourceStatusOutput.displayVersion.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

uint64_t ResourceStatusOutput.gmEssential.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t ResourceStatusOutput.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t sub_2420B8C84()
{
  uint64_t result;

  result = sub_242132708();
  qword_25719EA60 = result;
  return result;
}

uint64_t static ResourceStatusOutput.legend.getter()
{
  if (qword_25719D8C8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t ResourceStatusOutput.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v8 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 104);
  if ((*(_BYTE *)(v0 + 72) & 1) == 0)
  {
    v3 = round(*(double *)(v0 + 64) * 10.0) / 10.0;
    sub_2420797C0((uint64_t *)&unk_25719EBE8);
    v4 = sub_2420C0D6C();
    v5 = MEMORY[0x24BEE13C8];
    *(_OWORD *)(v4 + 16) = xmmword_24214D280;
    v6 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v4 + 56) = v5;
    *(_QWORD *)(v4 + 64) = v6;
    *(double *)(v4 + 32) = v3;
    sub_242132798();
  }
  MEMORY[0x2426A3774](32, 0xE100000000000000, 21);
  sub_242097464();
  sub_2420C168C();
  sub_2420A1B60();
  if (v1)
  {
    sub_2420A1B60();
    result = sub_2421327E0();
    if (!__OFSUB__(22, result))
      sub_2420C1660();
    __break(1u);
  }
  else
  {
    MEMORY[0x2426A3774](32, 0xE100000000000000, 11);
    sub_242097464();
    sub_2420C168C();
    sub_24207F78C();
    if (!v2)
    {
      sub_242132AD4();
      sub_24207F5FC();
      sub_242097830();
      sub_2420C0CA8();
      sub_2421327EC();
      swift_bridgeObjectRelease();
      sub_2420C0CA8();
      sub_2421327EC();
      sub_242079F20();
      sub_2420C0CA8();
      sub_2421327EC();
      sub_2420A1B60();
      sub_2420C0CA8();
      sub_2420C164C();
      sub_24207F78C();
      sub_2420C0CA8();
      sub_2420A1CA0();
      sub_2421327EC();
      sub_242097384();
      return v8;
    }
    sub_24207F78C();
    sub_2420C1278();
    result = sub_2421327E0();
    if (!__OFSUB__(12, result))
      sub_2420C1660();
  }
  __break(1u);
  return result;
}

void sub_2420B8F88(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t AssociatedConformanceWitness;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  void *v43;
  _QWORD v44[2];
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;

  v42 = a6;
  v41 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  v19 = *a2;
  v20 = *a3;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)(a5 + 8) + 56))(a4) & 1) != 0)
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 1;
    v25 = 0xE800000000000000;
    v26 = 0x64616F6C65646973;
    v27 = 0xA600000000000000;
    v28 = 0x8FB8EFB39CE2;
LABEL_15:
    v39 = v42;
    *v42 = v28;
    v39[1] = v27;
    v39[2] = v26;
    v39[3] = v25;
    v39[4] = v21;
    v39[5] = v22;
    v39[6] = v23;
    *((_BYTE *)v39 + 56) = v24;
    return;
  }
  if (v20)
  {
    v44[0] = v20;
    v29 = v43;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(a5 + 40))(v44, a4, a5);
    if (v29)
      goto LABEL_5;
LABEL_11:
    v43 = v29;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v16, AssociatedTypeWitness);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(v44, AssociatedTypeWitness, AssociatedConformanceWitness);
    v26 = v44[0];
    v25 = v44[1];
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 88))(&v46, AssociatedTypeWitness, AssociatedConformanceWitness);
    v22 = v47;
    if (v47)
      v21 = v46;
    else
      v21 = 0;
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, AssociatedTypeWitness);
    v24 = 0;
    v27 = 0xA300000000000000;
    v28 = 8756450;
    goto LABEL_15;
  }
  v29 = v43;
  (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  if (!v29)
    goto LABEL_11;
LABEL_5:
  v49 = v29;
  v30 = v29;
  sub_2420797C0((uint64_t *)&unk_254399A80);
  if (swift_dynamicCast())
  {
    if (v48 == 1)
    {
      sub_2420C0608();

      v32 = v40;
      v31 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, a1, a4);
      v43 = 0;
      if (v19 == 9)
      {
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 48))(v44, a4, a5);
        v33 = v32;
        v34 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
        if (!sub_2421327E0())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          (*(void (**)(char *, uint64_t))(v41 + 8))(v33, a4);
          v26 = 0;
          v25 = 0;
          v21 = 0;
          v22 = 0;
          v23 = 0;
          v24 = 1;
          v27 = 0xA400000000000000;
          v28 = 3046416368;
          goto LABEL_15;
        }
        v35 = (void *)sub_242132768();
        v36 = (void *)sub_242132768();
        v37 = objc_msgSend(v34, sel_downloadStatusForSubscriber_subscriptionName_, v35, v36);

        UAFSubscriptionDownloadStatus.assetSubscriptionStatus()((unint64_t)v37, &v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v41 + 8))(v40, a4);
        v19 = v45;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v32, a4);
      }
      __asm { BR              X10 }
    }
    sub_2420C0608();
  }

}

void sub_2420B9418()
{
  uint64_t v0;

  JUMPOUT(0x2420B930CLL);
}

void sub_2420B9448()
{
  uint64_t v0;

  JUMPOUT(0x2420B9470);
}

void sub_2420B947C()
{
  uint64_t v0;

  JUMPOUT(0x2420B930CLL);
}

void sub_2420B94AC()
{
  uint64_t v0;

  JUMPOUT(0x2420B90ACLL);
}

void sub_2420B94DC()
{
  uint64_t v0;

  JUMPOUT(0x2420B930CLL);
}

void CatalogResource.statusOutput(status:progress:assetLock:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  void (*v57)(char *, uint64_t, uint64_t);
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65[3];
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;

  sub_242097180();
  v63 = v2;
  v4 = v3;
  v56 = v5;
  v55 = v6;
  v8 = v7;
  v9 = *(_QWORD *)(v3 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v62) = *(unsigned __int8 *)MEMORY[0x24BDAC7A8](v11);
  v15 = *v14;
  v57 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v57((char *)&v50 - v16, v0, v17);
  sub_2420797C0(&qword_2543990D0);
  sub_2420C16F8();
  if (swift_dynamicCast())
  {
    v51 = v13;
    v52 = v0;
    sub_242079E50(&v68, (uint64_t)&v79);
    v18 = v80;
    v19 = v81;
    v20 = sub_242079800(&v79, v80);
    v64 = v62;
    v65[0] = v15;
    sub_2420B8F88((uint64_t)v20, &v64, v65, v18, v19, &v71);
    v21 = v71;
    v58 = v72;
    v59 = v74;
    v62 = v75;
    v22 = v77;
    v60 = v73;
    v61 = v76;
    v23 = v78;
    sub_242079824((uint64_t)&v79);
    if (v1)
    {
      v24 = sub_2420C1278();
      v25(v24);
      goto LABEL_9;
    }
    v53 = v23;
    v54 = v22;
    v13 = v51;
    v0 = v52;
    v27 = v61;
    v26 = v62;
    v29 = v59;
    v28 = v60;
    v30 = v58;
    v31 = v21;
  }
  else
  {
    v54 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0xA400000000000000;
    v53 = 1;
    v31 = 2728370160;
  }
  v52 = v31;
  v58 = v30;
  v59 = v29;
  v60 = v28;
  v61 = v27;
  v62 = v26;
  v32 = *(char **)(v9 + 8);
  v33 = sub_2420C1278();
  ((void (*)(uint64_t))v32)(v33);
  v57(v13, v0, v4);
  sub_2420797C0(&qword_25719EBF8);
  v34 = swift_dynamicCast();
  v35 = 0;
  v36 = v13;
  v37 = 0;
  v57 = 0;
  v38 = 0;
  if (v34)
  {
    sub_242079E50(&v79, (uint64_t)v65);
    v39 = v66;
    v40 = v67;
    sub_2420C1914();
    v41 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v40 + 24);
    v51 = v32;
    v41(&v68, v39, v40);
    v38 = v70;
    v57 = v69;
    sub_242079F18();
    sub_2420B2568((uint64_t)&v68);
    v42 = v66;
    v43 = v67;
    sub_2420C1914();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v43 + 24))(&v71, v42, v43);
    v32 = v51;
    v35 = v71;
    v37 = v72;
    sub_24207F5FC();
    sub_2420B2568((uint64_t)&v71);
    sub_242079824((uint64_t)v65);
  }
  ((void (*)(char *, uint64_t))v32)(v36, v4);
  v44 = v63;
  v45 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v63 + 72))(v4, v63) + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 24))(v4, v44);
  *(_QWORD *)(v8 + 8) = v46;
  *(_QWORD *)(v8 + 16) = v35;
  *(_QWORD *)(v8 + 24) = v37;
  *(_QWORD *)(v8 + 32) = v57;
  *(_QWORD *)(v8 + 40) = v38;
  v47 = v58;
  *(_QWORD *)(v8 + 48) = v52;
  *(_QWORD *)(v8 + 56) = v47;
  *(_QWORD *)(v8 + 64) = v55;
  *(_BYTE *)(v8 + 72) = v56 & 1;
  v48 = v59;
  *(_QWORD *)(v8 + 80) = v60;
  *(_QWORD *)(v8 + 88) = v48;
  v49 = v61;
  *(_QWORD *)(v8 + 96) = v62;
  *(_QWORD *)(v8 + 104) = v49;
  *(_BYTE *)(v8 + 112) = v45 != 0;
  *(_QWORD *)(v8 + 120) = v54;
  *(_BYTE *)(v8 + 128) = v53;
LABEL_9:
  sub_2420C1458();
  sub_2420970A0();
}

void sub_2420B98DC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0E50(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420ABF7C();
  sub_2420C1068();
}

void sub_2420B9900(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0E50(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420C16A8();
  sub_2420C1068();
}

void sub_2420B9938(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0E50(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420C16A8();
  sub_2420C1068();
}

void sub_2420B9970(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C0E50(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420C16A8();
  sub_2420C1068();
}

void sub_2420B99A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C1614(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420ABF7C();
  sub_2420C18A4();
}

void sub_2420B99CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_2420C1614(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_2420ACC18();
  sub_2420C18A4();
}

void sub_2420B99F0()
{
  const void *v0;
  _BYTE v1[88];

  sub_2420C1704(v1, v0);
  sub_2420ABF7C();
  sub_2420C0F24();
}

uint64_t sub_2420B9A20()
{
  const void *v0;
  _BYTE v2[104];

  sub_2420C1724(v2, v0);
  return sub_2420ABF7C();
}

void sub_2420B9A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C09C8(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C1000();
  sub_2420C0B48();
}

void sub_2420B9AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C09C8(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C1000();
  sub_2420C0B48();
}

void sub_2420B9AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C09C8(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420ABF7C();
  sub_2420C0B48();
}

void sub_2420B9CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C09C8(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C1000();
  sub_2420C0B48();
}

void sub_2420B9CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C09C8(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C1000();
  sub_2420C0B48();
}

void sub_2420B9D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C09C8(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C1000();
  sub_2420C0B48();
}

void sub_2420B9D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C09C8(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C1000();
  sub_2420C0B48();
}

void sub_2420B9D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C09C8(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C1000();
  sub_2420C0B48();
}

void sub_2420B9DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420ABF7C();
  sub_242097A7C();
}

void sub_2420B9E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_2420C0888(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_2420C0CDC();
  sub_242097A7C();
}

void sub_2420B9EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420C0DE8();
  v2 = v1;
  v3 = sub_2420C0E60();
  if (v0)
    ((void (*)(uint64_t))((char *)&loc_2420B9F20 + 4 * byte_24214D4D1[*(unsigned __int8 *)(v2 + 32)]))(v3);
  else
    sub_2420973B4();
}

void sub_2420B9FB8()
{
  uint64_t v0;

  sub_2420C0E60();
  for (; v0; --v0)
    sub_2420C0CE4();
  sub_242097A00();
}

uint64_t sub_2420BA000(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_242132D80();
  if (v3)
  {
    v5 = a2 + 82;
    do
    {
      v6 = *(unsigned __int8 *)(v5 - 34);
      v7 = *(_QWORD *)(v5 - 18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_2421327D4();
      if (v6 != 2)
        sub_242132D8C();
      sub_242132D8C();
      swift_bridgeObjectRelease();
      sub_242132D8C();
      if (v7)
      {
        swift_bridgeObjectRetain();
        sub_2421327D4();
        swift_bridgeObjectRelease();
      }
      sub_242132D80();
      sub_242132D8C();
      sub_242132D8C();
      sub_242132D8C();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 += 56;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_2420BA150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420C0DE8();
  v2 = v1;
  sub_2420C0E60();
  if (v0)
  {
    v3 = v2 + 32;
    do
    {
      ++v3;
      sub_2420C0CE4();
      sub_24207F78C();
      --v0;
    }
    while (v0);
  }
  sub_2420973B4();
}

void sub_2420BA1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  sub_2420C0E60();
  if (v2)
  {
    v4 = a2 + 40;
    do
    {
      sub_24207F5FC();
      sub_2420C0FDC();
      sub_24207F700();
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_24207F4E0();
}

int64_t sub_2420BA23C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2420BA320(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2420BA3A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_2420BA3AC()
{
  unint64_t result;

  result = qword_25719EA80;
  if (!qword_25719EA80)
  {
    result = MEMORY[0x2426A40E0](&unk_242150CB0, &type metadata for CatalogErrors.SerializationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EA80);
  }
  return result;
}

unint64_t sub_2420BA3E8()
{
  unint64_t result;

  result = qword_25719EA88;
  if (!qword_25719EA88)
  {
    result = MEMORY[0x2426A40E0](&unk_242150C60, &type metadata for CatalogErrors.SerializationError.FailedToDeserializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EA88);
  }
  return result;
}

unint64_t sub_2420BA424()
{
  unint64_t result;

  result = qword_25719EA90;
  if (!qword_25719EA90)
  {
    result = MEMORY[0x2426A40E0](&unk_242150C10, &type metadata for CatalogErrors.SerializationError.FailedToSerializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EA90);
  }
  return result;
}

unint64_t sub_2420BA460()
{
  unint64_t result;

  result = qword_25719EAC8;
  if (!qword_25719EAC8)
  {
    result = MEMORY[0x2426A40E0](&unk_242150BC0, &type metadata for CatalogErrors.ConfigurationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EAC8);
  }
  return result;
}

unint64_t sub_2420BA49C()
{
  unint64_t result;

  result = qword_25719EAD0;
  if (!qword_25719EAD0)
  {
    result = MEMORY[0x2426A40E0](&unk_242150B70, &type metadata for CatalogErrors.ConfigurationError.InvalidConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EAD0);
  }
  return result;
}

unint64_t sub_2420BA4D8()
{
  unint64_t result;

  result = qword_25719EB00;
  if (!qword_25719EB00)
  {
    result = MEMORY[0x2426A40E0](&unk_242150B20, &type metadata for CatalogErrors.RequestResourceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EB00);
  }
  return result;
}

unint64_t sub_2420BA514()
{
  unint64_t result;

  result = qword_25719EB08;
  if (!qword_25719EB08)
  {
    result = MEMORY[0x2426A40E0](&unk_242150AD0, &type metadata for CatalogErrors.RequestResourceError.UnableToSubscribeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EB08);
  }
  return result;
}

unint64_t sub_2420BA550()
{
  unint64_t result;

  result = qword_25719EB10;
  if (!qword_25719EB10)
  {
    result = MEMORY[0x2426A40E0](&unk_242150A80, &type metadata for CatalogErrors.RequestResourceError.UnknownRequestResourcesKeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EB10);
  }
  return result;
}

unint64_t sub_2420BA58C()
{
  unint64_t result;

  result = qword_25719EB50;
  if (!qword_25719EB50)
  {
    result = MEMORY[0x2426A40E0](&unk_242150A30, &type metadata for CatalogErrors.SideloadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EB50);
  }
  return result;
}

unint64_t sub_2420BA5C8()
{
  unint64_t result;

  result = qword_25719EB58;
  if (!qword_25719EB58)
  {
    result = MEMORY[0x2426A40E0](&unk_2421509E0, &type metadata for CatalogErrors.SideloadError.SideloadDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EB58);
  }
  return result;
}

unint64_t sub_2420BA604()
{
  unint64_t result;

  result = qword_25719EB60;
  if (!qword_25719EB60)
  {
    result = MEMORY[0x2426A40E0](&unk_242150990, &type metadata for CatalogErrors.SideloadError.InvalidSideloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EB60);
  }
  return result;
}

unint64_t sub_2420BA640()
{
  unint64_t result;

  result = qword_25719EB68;
  if (!qword_25719EB68)
  {
    result = MEMORY[0x2426A40E0](&unk_242150940, &type metadata for CatalogErrors.SideloadError.FailedToAccessSideloadStorageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EB68);
  }
  return result;
}

unint64_t sub_2420BA67C()
{
  unint64_t result;

  result = qword_254399AB8;
  if (!qword_254399AB8)
  {
    result = MEMORY[0x2426A40E0](&unk_2421508F0, &type metadata for InferenceProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399AB8);
  }
  return result;
}

unint64_t sub_2420BA6B8()
{
  unint64_t result;

  result = qword_254399C60;
  if (!qword_254399C60)
  {
    result = MEMORY[0x2426A40E0](&unk_2421508A0, &type metadata for ResourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399C60);
  }
  return result;
}

unint64_t sub_2420BA6F4()
{
  unint64_t result;

  result = qword_2543978F8;
  if (!qword_2543978F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Precondition, &type metadata for Precondition);
    atomic_store(result, (unint64_t *)&qword_2543978F8);
  }
  return result;
}

unint64_t sub_2420BA730()
{
  unint64_t result;

  result = qword_254397910;
  if (!qword_254397910)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ManagedRuntimeInformation, &type metadata for ManagedRuntimeInformation);
    atomic_store(result, (unint64_t *)&qword_254397910);
  }
  return result;
}

unint64_t sub_2420BA76C()
{
  unint64_t result;

  result = qword_254397918;
  if (!qword_254397918)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSubscriptionInformation, &type metadata for AssetSubscriptionInformation);
    atomic_store(result, (unint64_t *)&qword_254397918);
  }
  return result;
}

unint64_t sub_2420BA7A8()
{
  unint64_t result;

  result = qword_2543991B0;
  if (!qword_2543991B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Tag, &type metadata for Tag);
    atomic_store(result, (unint64_t *)&qword_2543991B0);
  }
  return result;
}

unint64_t sub_2420BA7E4()
{
  unint64_t result;

  result = qword_2543991D8;
  if (!qword_2543991D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Platform, &type metadata for Platform);
    atomic_store(result, (unint64_t *)&qword_2543991D8);
  }
  return result;
}

void sub_2420BA820(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_24208C304(&qword_254399CD8);
    v7 = a2;
    atomic_store(MEMORY[0x2426A40E0](a3, v6, &v7), a1);
  }
  sub_2420C0DFC();
}

unint64_t sub_2420BA874()
{
  unint64_t result;

  result = qword_254399998;
  if (!qword_254399998)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Precondition, &type metadata for Precondition);
    atomic_store(result, (unint64_t *)&qword_254399998);
  }
  return result;
}

unint64_t sub_2420BA8B0()
{
  unint64_t result;

  result = qword_2543999B8;
  if (!qword_2543999B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ManagedRuntimeInformation, &type metadata for ManagedRuntimeInformation);
    atomic_store(result, (unint64_t *)&qword_2543999B8);
  }
  return result;
}

unint64_t sub_2420BA8EC()
{
  unint64_t result;

  result = qword_2543999C0;
  if (!qword_2543999C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSubscriptionInformation, &type metadata for AssetSubscriptionInformation);
    atomic_store(result, (unint64_t *)&qword_2543999C0);
  }
  return result;
}

unint64_t sub_2420BA928()
{
  unint64_t result;

  result = qword_254399B10;
  if (!qword_254399B10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Tag, &type metadata for Tag);
    atomic_store(result, (unint64_t *)&qword_254399B10);
  }
  return result;
}

void sub_2420BA964(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  if (!*a1)
  {
    v7 = sub_24208C304(a2);
    v8 = a3();
    atomic_store(MEMORY[0x2426A40E0](a4, v7, &v8), a1);
  }
  sub_2420C0DFC();
}

unint64_t sub_2420BA9BC()
{
  unint64_t result;

  result = qword_254399B20;
  if (!qword_254399B20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Platform, &type metadata for Platform);
    atomic_store(result, (unint64_t *)&qword_254399B20);
  }
  return result;
}

unint64_t sub_2420BA9F8()
{
  unint64_t result;

  result = qword_25719EBA0;
  if (!qword_25719EBA0)
  {
    result = MEMORY[0x2426A40E0](&unk_242150850, &type metadata for ResourceBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EBA0);
  }
  return result;
}

unint64_t sub_2420BAA34()
{
  unint64_t result;

  result = qword_254399C88;
  if (!qword_254399C88)
  {
    result = MEMORY[0x2426A40E0](&unk_242150800, &type metadata for AssetSubscriptionInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399C88);
  }
  return result;
}

unint64_t sub_2420BAA70()
{
  unint64_t result;

  result = qword_254397A00;
  if (!qword_254397A00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for RequestResourcesKey, &type metadata for RequestResourcesKey);
    atomic_store(result, (unint64_t *)&qword_254397A00);
  }
  return result;
}

unint64_t sub_2420BAAAC()
{
  unint64_t result;

  result = qword_254399AD0;
  if (!qword_254399AD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for RequestResourcesKey, &type metadata for RequestResourcesKey);
    atomic_store(result, (unint64_t *)&qword_254399AD0);
  }
  return result;
}

unint64_t sub_2420BAAE8()
{
  unint64_t result;

  result = qword_254399AF0;
  if (!qword_254399AF0)
  {
    result = MEMORY[0x2426A40E0](&unk_2421507B0, &type metadata for ManagedRuntimeInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399AF0);
  }
  return result;
}

unint64_t sub_2420BAB24()
{
  unint64_t result;

  result = qword_2543990C8;
  if (!qword_2543990C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for InferenceProvider, &type metadata for InferenceProvider);
    atomic_store(result, (unint64_t *)&qword_2543990C8);
  }
  return result;
}

unint64_t sub_2420BAB60()
{
  unint64_t result;

  result = qword_2543990A0;
  if (!qword_2543990A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CostProfile, &type metadata for CostProfile);
    atomic_store(result, (unint64_t *)&qword_2543990A0);
  }
  return result;
}

unint64_t sub_2420BAB9C()
{
  unint64_t result;

  result = qword_254399040;
  if (!qword_254399040)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for InferenceProvider, &type metadata for InferenceProvider);
    atomic_store(result, (unint64_t *)&qword_254399040);
  }
  return result;
}

unint64_t sub_2420BABD8()
{
  unint64_t result;

  result = qword_254399038;
  if (!qword_254399038)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CostProfile, &type metadata for CostProfile);
    atomic_store(result, (unint64_t *)&qword_254399038);
  }
  return result;
}

unint64_t sub_2420BAC14()
{
  unint64_t result;

  result = qword_25719EBB8;
  if (!qword_25719EBB8)
  {
    result = MEMORY[0x2426A40E0](&unk_242150760, &type metadata for ManagedResourceBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EBB8);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleIdentifier.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2420C0688(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResourceBundleIdentifier.CodingKeys);
}

unint64_t sub_2420BAC5C()
{
  unint64_t result;

  result = qword_254399A90;
  if (!qword_254399A90)
  {
    result = MEMORY[0x2426A40E0](&unk_2421506C0, &type metadata for CostProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399A90);
  }
  return result;
}

uint64_t type metadata accessor for StatusResponse()
{
  return objc_opt_self();
}

uint64_t sub_2420BACB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2420797C0((uint64_t *)&unk_254399E98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ResourceInformation()
{
  uint64_t result;

  result = qword_2543998D0;
  if (!qword_2543998D0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2420BAD38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254397490;
  if (!qword_254397490)
  {
    v1 = sub_24213251C();
    result = MEMORY[0x2426A40E0](MEMORY[0x24BDCDB20], v1);
    atomic_store(result, (unint64_t *)&qword_254397490);
  }
  return result;
}

unint64_t sub_2420BAD78()
{
  unint64_t result;

  result = qword_254399978;
  if (!qword_254399978)
  {
    result = MEMORY[0x2426A40E0](&unk_242150670, &type metadata for Precondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399978);
  }
  return result;
}

unint64_t sub_2420BADB4()
{
  unint64_t result;

  result = qword_2543978F0;
  if (!qword_2543978F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Precondition.PreconditionType, &type metadata for Precondition.PreconditionType);
    atomic_store(result, (unint64_t *)&qword_2543978F0);
  }
  return result;
}

unint64_t sub_2420BADF0()
{
  unint64_t result;

  result = qword_2543979C0;
  if (!qword_2543979C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Precondition.PreconditionType, &type metadata for Precondition.PreconditionType);
    atomic_store(result, (unint64_t *)&qword_2543979C0);
  }
  return result;
}

unint64_t sub_2420BAE2C()
{
  unint64_t result;

  result = qword_254399E50;
  if (!qword_254399E50)
  {
    result = MEMORY[0x2426A40E0](&unk_242150620, &type metadata for Platform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399E50);
  }
  return result;
}

unint64_t sub_2420BAE68()
{
  unint64_t result;

  result = qword_2543991C8;
  if (!qword_2543991C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Platform.PlatformType, &type metadata for Platform.PlatformType);
    atomic_store(result, (unint64_t *)&qword_2543991C8);
  }
  return result;
}

unint64_t sub_2420BAEA4()
{
  unint64_t result;

  result = qword_254399B18;
  if (!qword_254399B18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Platform.PlatformType, &type metadata for Platform.PlatformType);
    atomic_store(result, (unint64_t *)&qword_254399B18);
  }
  return result;
}

unint64_t sub_2420BAEEC()
{
  unint64_t result;

  result = qword_25719EC08;
  if (!qword_25719EC08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CatalogErrors.RequestResourceError, &type metadata for CatalogErrors.RequestResourceError);
    atomic_store(result, (unint64_t *)&qword_25719EC08);
  }
  return result;
}

unint64_t sub_2420BAF30()
{
  unint64_t result;

  result = qword_2543977D8;
  if (!qword_2543977D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for InferenceProvider, &type metadata for InferenceProvider);
    atomic_store(result, (unint64_t *)&qword_2543977D8);
  }
  return result;
}

unint64_t sub_2420BAF70()
{
  unint64_t result;

  result = qword_25719EC20;
  if (!qword_25719EC20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceConfiguration, &type metadata for ResourceConfiguration);
    atomic_store(result, (unint64_t *)&qword_25719EC20);
  }
  return result;
}

unint64_t sub_2420BAFB0()
{
  unint64_t result;

  result = qword_25719EC28;
  if (!qword_25719EC28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceBase, &type metadata for ResourceBase);
    atomic_store(result, (unint64_t *)&qword_25719EC28);
  }
  return result;
}

unint64_t sub_2420BAFF0()
{
  unint64_t result;

  result = qword_25719EC30;
  if (!qword_25719EC30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for AssetSubscriptionInformation, &type metadata for AssetSubscriptionInformation);
    atomic_store(result, (unint64_t *)&qword_25719EC30);
  }
  return result;
}

unint64_t sub_2420BB030()
{
  unint64_t result;

  result = qword_25719EC38;
  if (!qword_25719EC38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ManagedRuntimeInformation, &type metadata for ManagedRuntimeInformation);
    atomic_store(result, (unint64_t *)&qword_25719EC38);
  }
  return result;
}

unint64_t sub_2420BB070()
{
  unint64_t result;

  result = qword_25719EC40;
  if (!qword_25719EC40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ManagedResourceBase, &type metadata for ManagedResourceBase);
    atomic_store(result, (unint64_t *)&qword_25719EC40);
  }
  return result;
}

void sub_2420BB0AC()
{
  JUMPOUT(0x2426A40E0);
}

void sub_2420BB0BC()
{
  JUMPOUT(0x2426A40E0);
}

uint64_t sub_2420BB0CC()
{
  return MEMORY[0x24BEE0D80];
}

void sub_2420BB0D8()
{
  JUMPOUT(0x2426A40E0);
}

uint64_t sub_2420BB0E8()
{
  return MEMORY[0x24BEE0D90];
}

uint64_t sub_2420BB0F4()
{
  return MEMORY[0x24BEE0D88];
}

void sub_2420BB100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420BB114, (uint64_t (*)(void))sub_2420BB150);
}

unint64_t sub_2420BB114()
{
  unint64_t result;

  result = qword_25719EC48;
  if (!qword_25719EC48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceBase, &type metadata for ResourceBase);
    atomic_store(result, (unint64_t *)&qword_25719EC48);
  }
  return result;
}

unint64_t sub_2420BB150()
{
  unint64_t result;

  result = qword_25719EC50;
  if (!qword_25719EC50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceBase, &type metadata for ResourceBase);
    atomic_store(result, (unint64_t *)&qword_25719EC50);
  }
  return result;
}

unint64_t sub_2420BB190()
{
  unint64_t result;

  result = qword_25719EC58;
  if (!qword_25719EC58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for CostProfile, &type metadata for CostProfile);
    atomic_store(result, (unint64_t *)&qword_25719EC58);
  }
  return result;
}

unint64_t sub_2420BB1CC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BB1F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BB1F0()
{
  unint64_t result;

  result = qword_25719EC60;
  if (!qword_25719EC60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ManagedResourceBase, &type metadata for ManagedResourceBase);
    atomic_store(result, (unint64_t *)&qword_25719EC60);
  }
  return result;
}

void sub_2420BB22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420BB240, (uint64_t (*)(void))sub_2420BB27C);
}

unint64_t sub_2420BB240()
{
  unint64_t result;

  result = qword_25719EC68;
  if (!qword_25719EC68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ManagedResourceBase, &type metadata for ManagedResourceBase);
    atomic_store(result, (unint64_t *)&qword_25719EC68);
  }
  return result;
}

unint64_t sub_2420BB27C()
{
  unint64_t result;

  result = qword_25719EC70;
  if (!qword_25719EC70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ManagedResourceBase, &type metadata for ManagedResourceBase);
    atomic_store(result, (unint64_t *)&qword_25719EC70);
  }
  return result;
}

unint64_t sub_2420BB2BC()
{
  unint64_t result;

  result = qword_25719EC78;
  if (!qword_25719EC78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceStatus, &type metadata for ResourceStatus);
    atomic_store(result, (unint64_t *)&qword_25719EC78);
  }
  return result;
}

unint64_t sub_2420BB2FC()
{
  unint64_t result;

  result = qword_2543977D0;
  if (!qword_2543977D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ExecutionContext, &type metadata for ExecutionContext);
    atomic_store(result, (unint64_t *)&qword_2543977D0);
  }
  return result;
}

unint64_t sub_2420BB338(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BB35C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BB35C()
{
  unint64_t result;

  result = qword_254397168;
  if (!qword_254397168)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerBase, &type metadata for TokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397168);
  }
  return result;
}

void sub_2420BB398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242096774, (uint64_t (*)(void))sub_242096B40);
}

unint64_t sub_2420BB3AC(uint64_t a1)
{
  unint64_t result;

  result = sub_242096734();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2420BB3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420BB3E4, (uint64_t (*)(void))sub_2420BB420);
}

unint64_t sub_2420BB3E4()
{
  unint64_t result;

  result = qword_254397128;
  if (!qword_254397128)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerBase, &type metadata for TokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397128);
  }
  return result;
}

unint64_t sub_2420BB420()
{
  unint64_t result;

  result = qword_254397140;
  if (!qword_254397140)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerBase, &type metadata for TokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397140);
  }
  return result;
}

unint64_t sub_2420BB460()
{
  unint64_t result;

  result = qword_254397138;
  if (!qword_254397138)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for TokenizerBase, &type metadata for TokenizerBase);
    atomic_store(result, (unint64_t *)&qword_254397138);
  }
  return result;
}

unint64_t sub_2420BB49C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BB4C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BB4C0()
{
  unint64_t result;

  result = qword_2543971D0;
  if (!qword_2543971D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAJAXModelBase, &type metadata for LLMAJAXModelBase);
    atomic_store(result, (unint64_t *)&qword_2543971D0);
  }
  return result;
}

void sub_2420BB4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420BB510, (uint64_t (*)(void))sub_2420BB54C);
}

unint64_t sub_2420BB510()
{
  unint64_t result;

  result = qword_25719EC88;
  if (!qword_25719EC88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAJAXModelBase, &type metadata for LLMAJAXModelBase);
    atomic_store(result, (unint64_t *)&qword_25719EC88);
  }
  return result;
}

unint64_t sub_2420BB54C()
{
  unint64_t result;

  result = qword_25719EC90;
  if (!qword_25719EC90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAJAXModelBase, &type metadata for LLMAJAXModelBase);
    atomic_store(result, (unint64_t *)&qword_25719EC90);
  }
  return result;
}

unint64_t sub_2420BB588(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BB5AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BB5AC()
{
  unint64_t result;

  result = qword_2543971C8;
  if (!qword_2543971C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAJAXModelBase, &type metadata for LLMAJAXModelBase);
    atomic_store(result, (unint64_t *)&qword_2543971C8);
  }
  return result;
}

unint64_t sub_2420BB5E8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BB60C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BB60C()
{
  unint64_t result;

  result = qword_2543971C0;
  if (!qword_2543971C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAJAXModelBase, &type metadata for LLMAJAXModelBase);
    atomic_store(result, (unint64_t *)&qword_2543971C0);
  }
  return result;
}

void sub_2420BB648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420BB65C, (uint64_t (*)(void))sub_2420BB698);
}

unint64_t sub_2420BB65C()
{
  unint64_t result;

  result = qword_254397198;
  if (!qword_254397198)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAJAXModelBase, &type metadata for LLMAJAXModelBase);
    atomic_store(result, (unint64_t *)&qword_254397198);
  }
  return result;
}

unint64_t sub_2420BB698()
{
  unint64_t result;

  result = qword_2543971B0;
  if (!qword_2543971B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAJAXModelBase, &type metadata for LLMAJAXModelBase);
    atomic_store(result, (unint64_t *)&qword_2543971B0);
  }
  return result;
}

unint64_t sub_2420BB6D8()
{
  unint64_t result;

  result = qword_2543971A8;
  if (!qword_2543971A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAJAXModelBase, &type metadata for LLMAJAXModelBase);
    atomic_store(result, (unint64_t *)&qword_2543971A8);
  }
  return result;
}

unint64_t sub_2420BB714(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BB738();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BB738()
{
  unint64_t result;

  result = qword_2543978C0;
  if (!qword_2543978C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelBase, &type metadata for LLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_2543978C0);
  }
  return result;
}

void sub_2420BB774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420968D0, (uint64_t (*)(void))sub_242096BB8);
}

unint64_t sub_2420BB788(uint64_t a1)
{
  unint64_t result;

  result = sub_242096890();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2420BB7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420BB7C0, (uint64_t (*)(void))sub_2420BB7FC);
}

unint64_t sub_2420BB7C0()
{
  unint64_t result;

  result = qword_254397890;
  if (!qword_254397890)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelBase, &type metadata for LLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_254397890);
  }
  return result;
}

unint64_t sub_2420BB7FC()
{
  unint64_t result;

  result = qword_2543978A8;
  if (!qword_2543978A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelBase, &type metadata for LLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_2543978A8);
  }
  return result;
}

unint64_t sub_2420BB83C()
{
  unint64_t result;

  result = qword_2543978A0;
  if (!qword_2543978A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMDraftModelBase, &type metadata for LLMDraftModelBase);
    atomic_store(result, (unint64_t *)&qword_2543978A0);
  }
  return result;
}

unint64_t sub_2420BB87C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BB8A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BB8A0()
{
  unint64_t result;

  result = qword_2543970E8;
  if (!qword_2543970E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543970E8);
  }
  return result;
}

void sub_2420BB8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_242096850, (uint64_t (*)(void))sub_242096B7C);
}

unint64_t sub_2420BB8F0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BB914();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BB914()
{
  unint64_t result;

  result = qword_2543970E0;
  if (!qword_2543970E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543970E0);
  }
  return result;
}

unint64_t sub_2420BB950(uint64_t a1)
{
  unint64_t result;

  result = sub_242096810();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2420BB974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420BB988, (uint64_t (*)(void))sub_2420BB9C4);
}

unint64_t sub_2420BB988()
{
  unint64_t result;

  result = qword_2543970B0;
  if (!qword_2543970B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543970B0);
  }
  return result;
}

unint64_t sub_2420BB9C4()
{
  unint64_t result;

  result = qword_2543970C8;
  if (!qword_2543970C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543970C8);
  }
  return result;
}

unint64_t sub_2420BBA04()
{
  unint64_t result;

  result = qword_2543970C0;
  if (!qword_2543970C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMModelBase, &type metadata for LLMModelBase);
    atomic_store(result, (unint64_t *)&qword_2543970C0);
  }
  return result;
}

unint64_t sub_2420BBA44(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BBA68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BBA68()
{
  unint64_t result;

  result = qword_254399BE8;
  if (!qword_254399BE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254399BE8);
  }
  return result;
}

void sub_2420BBAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420969E8, (uint64_t (*)(void))sub_242096BF4);
}

unint64_t sub_2420BBAB8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420BBADC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420BBADC()
{
  unint64_t result;

  result = qword_254399BE0;
  if (!qword_254399BE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254399BE0);
  }
  return result;
}

unint64_t sub_2420BBB18(uint64_t a1)
{
  unint64_t result;

  result = sub_242096910();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2420BBB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420BBB50, (uint64_t (*)(void))sub_2420BBB8C);
}

unint64_t sub_2420BBB50()
{
  unint64_t result;

  result = qword_254399BB0;
  if (!qword_254399BB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254399BB0);
  }
  return result;
}

unint64_t sub_2420BBB8C()
{
  unint64_t result;

  result = qword_254399BC8;
  if (!qword_254399BC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254399BC8);
  }
  return result;
}

unint64_t sub_2420BBBCC()
{
  unint64_t result;

  result = qword_254399BC0;
  if (!qword_254399BC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for LLMAdapterBase, &type metadata for LLMAdapterBase);
    atomic_store(result, (unint64_t *)&qword_254399BC0);
  }
  return result;
}

unint64_t sub_2420BBC0C()
{
  unint64_t result;

  result = qword_25719ECB8;
  if (!qword_25719ECB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Precondition.PreconditionType, &type metadata for Precondition.PreconditionType);
    atomic_store(result, (unint64_t *)&qword_25719ECB8);
  }
  return result;
}

void sub_2420BBC48()
{
  sub_2420A0228(&qword_25719ECC0, &qword_25719ECC8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2420BBC78()
{
  unint64_t result;

  result = qword_25719ECD0;
  if (!qword_25719ECD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Precondition, &type metadata for Precondition);
    atomic_store(result, (unint64_t *)&qword_25719ECD0);
  }
  return result;
}

unint64_t sub_2420BBCB8()
{
  unint64_t result;

  result = qword_25719ECD8;
  if (!qword_25719ECD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Platform.PlatformType, &type metadata for Platform.PlatformType);
    atomic_store(result, (unint64_t *)&qword_25719ECD8);
  }
  return result;
}

void sub_2420BBCF4()
{
  sub_2420A0228(&qword_25719ECE0, &qword_25719ECE8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2420BBD24()
{
  unint64_t result;

  result = qword_25719ECF0;
  if (!qword_25719ECF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Platform, &type metadata for Platform);
    atomic_store(result, (unint64_t *)&qword_25719ECF0);
  }
  return result;
}

unint64_t sub_2420BBD64()
{
  unint64_t result;

  result = qword_25719ECF8[0];
  if (!qword_25719ECF8[0])
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Tag, &type metadata for Tag);
    atomic_store(result, qword_25719ECF8);
  }
  return result;
}

uint64_t sub_2420BBDA8()
{
  return 24;
}

__n128 sub_2420BBDB4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_2420BBDC8(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4B08];
}

void type metadata accessor for CatalogErrors()
{
  sub_242082F08();
}

void initializeBufferWithCopyOfBuffer for CatalogErrors.SerializationError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2420BBF6C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_242097464);
}

uint64_t destroy for CatalogErrors.SerializationError()
{
  return sub_2420C0608();
}

void assignWithCopy for CatalogErrors.SerializationError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2420BBFA8(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_242097464);
}

__n128 initializeWithTake for InferenceProvider(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

void assignWithTake for CatalogErrors.SerializationError(uint64_t a1)
{
  sub_2420BBFE0(a1);
}

uint64_t sub_2420BBE40(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2420BBE48(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for CatalogErrors.SerializationError()
{
  sub_242082F08();
}

_QWORD *initializeWithCopy for CatalogErrors.ConfigurationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CatalogErrors.ConfigurationError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CatalogErrors.ConfigurationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for CatalogErrors.ConfigurationError()
{
  sub_242082F08();
}

void initializeBufferWithCopyOfBuffer for CatalogErrors.RequestResourceError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2420BBF6C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_2420C06F4);
}

void sub_2420BBF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_2420C1118(a1, a2, a3, a4);
  *(_QWORD *)v4 = v5;
  *(_QWORD *)(v4 + 8) = v6;
  *(_BYTE *)(v4 + 16) = v7;
  sub_242097A00();
}

void assignWithCopy for CatalogErrors.RequestResourceError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2420BBFA8(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_2420C06F4);
}

void sub_2420BBFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD))
{
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2420C0F4C(a1, a2, a3, a4);
  v9 = *v5;
  v10 = v5[1];
  v11 = *((unsigned __int8 *)v5 + 16);
  *v5 = v6;
  v5[1] = v7;
  *((_BYTE *)v5 + 16) = v8;
  v4(v9, v10, v11);
  sub_24207F4E0();
}

void sub_2420BBFE0(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v2 = sub_2420C1978(a1);
  *v1 = *v3;
  sub_2420C17D8(v2, v4, v5);
  sub_24207F428();
}

uint64_t _s12ModelCatalog13CatalogErrorsO18SerializationErrorOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return sub_2420977CC(*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 1)
    return sub_2420977CC(v3 ^ 0xFF);
  else
    return sub_2420977CC(-1);
}

uint64_t _s11AssetErrorsOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for CatalogErrors.RequestResourceError()
{
  sub_242082F08();
}

void initializeBufferWithCopyOfBuffer for CatalogErrors.SideloadError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2420BBF6C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_2420BC0A4);
}

uint64_t sub_2420BC0A4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for CatalogErrors.SideloadError(uint64_t a1)
{
  return sub_2420BC0CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2420BC0CC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

void assignWithCopy for CatalogErrors.SideloadError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2420BE02C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_2420BC0A4);
}

void assignWithTake for CatalogErrors.SideloadError(uint64_t a1)
{
  sub_2420BE070(a1);
}

uint64_t getEnumTagSinglePayload for CatalogErrors.SideloadError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CatalogErrors.SideloadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for CatalogErrors.SideloadError()
{
  sub_242082F08();
}

void sub_2420BC198(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_2420C1670(a1, a2);
  *(_BYTE *)(v2 + 16) = *(_BYTE *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_24207F428();
}

uint64_t assignWithCopy for InferenceProvider(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for InferenceProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InferenceProvider()
{
  sub_242082F08();
}

uint64_t destroy for ResourceConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResourceConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v9;
    v10 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v10;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v11;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
  }
  v12 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v12;
  v14 = *(_QWORD *)(a2 + 168);
  v13 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v14;
  *(_QWORD *)(a1 + 176) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResourceConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v4 = (_OWORD *)(a1 + 88);
  v5 = (__int128 *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = v7;
      *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
    }
    else
    {
      sub_242092660(a1 + 88);
      v10 = *(_OWORD *)(a2 + 104);
      v9 = *(_OWORD *)(a2 + 120);
      v11 = *v5;
      *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
      *(_OWORD *)(a1 + 104) = v10;
      *(_OWORD *)(a1 + 120) = v9;
      *v4 = v11;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v8 = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v8;
    *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *v5;
    v13 = *(_OWORD *)(a2 + 104);
    v14 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
    *(_OWORD *)(a1 + 104) = v13;
    *(_OWORD *)(a1 + 120) = v14;
    *v4 = v12;
  }
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResourceConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_5;
  v7 = *(_QWORD *)(a2 + 96);
  if (!v7)
  {
    sub_242092660(a1 + 88);
LABEL_5:
    v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
LABEL_6:
  v11 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for ResourceConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResourceConfiguration()
{
  sub_242082F08();
}

uint64_t destroy for ResourceBase()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s12ModelCatalog12ResourceBaseVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_2420C1670(a1, a2);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_24207F428();
}

_QWORD *assignWithCopy for ResourceBase(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResourceBase(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResourceBase(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResourceBase(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResourceBase()
{
  sub_242082F08();
}

uint64_t destroy for AssetSubscriptionInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssetSubscriptionInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetSubscriptionInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  return a1;
}

__n128 initializeWithTake for AssetSubscriptionInformation(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AssetSubscriptionInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetSubscriptionInformation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 58))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetSubscriptionInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 58) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 58) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetSubscriptionInformation()
{
  sub_242082F08();
}

uint64_t destroy for ManagedRuntimeInformation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManagedRuntimeInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManagedRuntimeInformation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

__n128 initializeWithTake for ManagedRuntimeInformation(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ManagedRuntimeInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedRuntimeInformation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 51))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedRuntimeInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 51) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ManagedRuntimeInformation()
{
  sub_242082F08();
}

uint64_t destroy for ManagedResourceBase()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ManagedResourceBase(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ManagedResourceBase(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ManagedResourceBase(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2420BD014(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for ManagedResourceBase()
{
  sub_242082F08();
}

uint64_t sub_2420BD058()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for ResourceBundleIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2420C0688(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResourceBundleIdentifier);
}

uint64_t dispatch thunk of AssetBackedResourceBundle.assetBackedResources.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CatalogResource.dependentResourceIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CatalogResource.preconditions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CatalogResource.sideloaded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CatalogResource.assetBacked.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CatalogResource.tags.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CatalogResource.platforms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ConfigurationBasedResource.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t initializeBufferWithCopyOfBuffer for CostProfile(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CostProfile(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 11))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CostProfile(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 11) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 11) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

void type metadata accessor for CostProfile()
{
  sub_242082F08();
}

uint64_t dispatch thunk of ManagedResource.cost.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ManagedResource.executionContexts.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ManagedResource.executionContexts.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

void type metadata accessor for ResourceStatus()
{
  sub_242082F08();
}

uint64_t method lookup function for StatusResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StatusResponse.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of StatusResponse.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t initializeWithCopy for ExecutionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExecutionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  return a1;
}

__n128 initializeWithTake for ExecutionContext(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ExecutionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecutionContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 36))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExecutionContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ExecutionContext()
{
  sub_242082F08();
}

uint64_t sub_2420BD398()
{
  return type metadata accessor for ResourceInformation();
}

void sub_2420BD3A0()
{
  unint64_t v0;

  sub_2420BD448();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ResourceInformation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResourceInformation.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ResourceInformation.__allocating_init(location:metadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_2420BD448()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543998C0)
  {
    sub_24213251C();
    v0 = sub_242132A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543998C0);
  }
}

void *initializeWithTake for TokenizerBase(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD8uLL);
}

void type metadata accessor for TokenizerBase()
{
  sub_242082F08();
}

void type metadata accessor for LLMAJAXModelBase()
{
  sub_242082F08();
}

void type metadata accessor for LLMDraftModelBase()
{
  sub_242082F08();
}

void type metadata accessor for LLMModelBase()
{
  sub_242082F08();
}

uint64_t dispatch thunk of LLMAdapter.llmModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t _s12ModelCatalog13TokenizerBaseVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24209773C();
}

void _s12ModelCatalog13TokenizerBaseVwcp_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_2420C0DE8();
  v2 = v1;
  sub_2420C1670(v3, v1);
  v5 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  v6 = *(_QWORD *)(v4 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v4 + 48);
  *(_BYTE *)(v0 + 56) = *(_BYTE *)(v4 + 56);
  v7 = *(_QWORD *)(v4 + 72);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v4 + 64);
  *(_QWORD *)(v0 + 72) = v7;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v4 + 80);
  v8 = *(_QWORD *)(v4 + 96);
  swift_bridgeObjectRetain();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420C0B64();
  if (v8)
  {
    *(_QWORD *)(v0 + 88) = v2[11];
    *(_QWORD *)(v0 + 96) = v8;
    v9 = v2[14];
    *(_QWORD *)(v0 + 104) = v2[13];
    *(_QWORD *)(v0 + 112) = v9;
    v10 = v2[16];
    *(_QWORD *)(v0 + 120) = v2[15];
    *(_QWORD *)(v0 + 128) = v10;
    sub_242097A94();
    sub_242097744();
    sub_24207F5FC();
    sub_242079ED8();
  }
  else
  {
    v11 = *(_OWORD *)(v2 + 13);
    *(_OWORD *)(v0 + 88) = *(_OWORD *)(v2 + 11);
    *(_OWORD *)(v0 + 104) = v11;
    *(_OWORD *)(v0 + 120) = *(_OWORD *)(v2 + 15);
    *(_OWORD *)(v0 + 130) = *(_OWORD *)((char *)v2 + 130);
  }
  v12 = v2[20];
  *(_QWORD *)(v0 + 152) = v2[19];
  *(_QWORD *)(v0 + 160) = v12;
  v13 = v2[22];
  *(_QWORD *)(v0 + 168) = v2[21];
  *(_QWORD *)(v0 + 176) = v13;
  v14 = v2[24];
  *(_QWORD *)(v0 + 184) = v2[23];
  *(_QWORD *)(v0 + 192) = v14;
  v16 = v2[25];
  v15 = v2[26];
  *(_QWORD *)(v0 + 200) = v16;
  *(_QWORD *)(v0 + 208) = v15;
  swift_bridgeObjectRetain();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242097198();
  sub_2420973B4();
}

void _s12ModelCatalog13TokenizerBaseVwca_0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v4 = (_OWORD *)(a1 + 88);
  v5 = (__int128 *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v6)
    {
      sub_242097AB4();
      swift_bridgeObjectRetain();
      sub_24207F700();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      sub_24207F78C();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      sub_24207F78C();
      sub_242097760();
    }
    else
    {
      sub_242092660(a1 + 88);
      v8 = *(_OWORD *)(a2 + 104);
      v7 = *(_OWORD *)(a2 + 120);
      v9 = *v5;
      *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
      *(_OWORD *)(a1 + 104) = v8;
      *(_OWORD *)(a1 + 120) = v7;
      *v4 = v9;
    }
  }
  else if (v6)
  {
    sub_242097AB4();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    sub_242097760();
    swift_bridgeObjectRetain();
    sub_242097744();
    sub_24207F5FC();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 104);
    v12 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
    *(_OWORD *)(a1 + 104) = v11;
    *(_OWORD *)(a1 + 120) = v12;
    *v4 = v10;
  }
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  sub_24207F78C();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  sub_242097830();
  sub_24207F4E0();
}

void _s12ModelCatalog13TokenizerBaseVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_5;
  v7 = *(_QWORD *)(a2 + 96);
  if (!v7)
  {
    sub_242092660(a1 + 88);
LABEL_5:
    v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 130) = *(_OWORD *)(a2 + 130);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  sub_242097A94();
LABEL_6:
  v11 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  sub_242097A00();
}

uint64_t _s12ModelCatalog13TokenizerBaseVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 216))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2420BDA4C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 216) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2420A20B8(result, a2);
    }
    *(_BYTE *)(result + 216) = 0;
    if (a2)
      return sub_2420A20B8(result, a2);
  }
  return result;
}

void type metadata accessor for LLMAdapterBase()
{
  sub_242082F08();
}

void type metadata accessor for Precondition()
{
  sub_242082F08();
}

void type metadata accessor for Precondition.PreconditionType()
{
  sub_242082F08();
}

uint64_t destroy for Platform()
{
  return swift_bridgeObjectRelease();
}

void _s12ModelCatalog8PlatformVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  sub_24207F428();
}

uint64_t assignWithCopy for Platform(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Platform(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Platform(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Platform(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Platform()
{
  sub_242082F08();
}

uint64_t getEnumTagSinglePayload for Platform.PlatformType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Platform.PlatformType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2420BDCFC + 4 * byte_24214D4DC[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2420BDD30 + 4 * byte_24214D4D7[v4]))();
}

uint64_t sub_2420BDD30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420BDD38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420BDD40);
  return result;
}

uint64_t sub_2420BDD4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420BDD54);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2420BDD58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420BDD60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Platform.PlatformType()
{
  sub_242082F08();
}

void type metadata accessor for Tag()
{
  sub_242082F08();
}

void type metadata accessor for Catalog()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.Tokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.LLM()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.LLM.AJAX()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.LLM.Model()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.LLM.Adapter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.LLM.DraftModel()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.LLM.ServerConfiguration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.Diffusion()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.Diffusion.Model()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.Diffusion.Adapter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.TokenInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.TokenOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.GenerativeFunctionOverrides()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.ModelConfigurationReplacement()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.Sanitizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.DisabledUseCaseList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.ImageFilter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.ImageInpainter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.ImageMagicCleanUp()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.ImageScaler()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.ImageSegmenter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Resource.HandwritingSynthesizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ResourceBundle()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Tokenizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.AJAX()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Model()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.Adapter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.DraftModel()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.LLM.ServerConfiguration()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Model()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Diffusion.Adapter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenInputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.TokenOutputDenyList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.GenerativeFunctionOverrides()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ModelConfigurationReplacement()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.Sanitizer()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.DisabledUseCaseList()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageFilter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageInpainter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageMagicCleanUp()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageScaler()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.ImageSegmenter()
{
  sub_242082F08();
}

void type metadata accessor for Catalog.HandwritingSynthesizer()
{
  sub_242082F08();
}

uint64_t dispatch thunk of ExplicityRequestible.explicitRequestUsage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void initializeBufferWithCopyOfBuffer for CatalogResourceResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2420BBF6C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_2420BDFD8);
}

uint64_t sub_2420BDFD8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for CatalogResourceResult(uint64_t a1)
{
  return sub_2420BE000(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2420BE000(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

void assignWithCopy for CatalogResourceResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2420BE02C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_2420BDFD8);
}

void sub_2420BE02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD))
{
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2420C0F4C(a1, a2, a3, a4);
  v9 = *v5;
  v10 = v5[1];
  *v5 = v6;
  v5[1] = v7;
  v11 = *((unsigned __int8 *)v5 + 16);
  *((_BYTE *)v5 + 16) = v8;
  v4(v9, v10, v11);
  sub_24207F4E0();
}

void assignWithTake for CatalogResourceResult(uint64_t a1)
{
  sub_2420BE070(a1);
}

void sub_2420BE070(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v2 = sub_2420C1978(a1);
  *v1 = *v3;
  sub_2420C17D8(v2, v4, v5);
  sub_24207F428();
}

uint64_t getEnumTagSinglePayload for CatalogResourceResult(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CatalogResourceResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2420BE120(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for CatalogResourceResult()
{
  sub_242082F08();
}

uint64_t destroy for ResourceStatusOutput()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResourceStatusOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResourceStatusOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v5 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v5;
  return a1;
}

void *initializeWithTake for ResourceStatusOutput(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x81uLL);
}

uint64_t assignWithTake for ResourceStatusOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResourceStatusOutput(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 129))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResourceStatusOutput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResourceStatusOutput()
{
  sub_242082F08();
}

ValueMetadata *type metadata accessor for Platform.CodingKeys()
{
  return &type metadata for Platform.CodingKeys;
}

ValueMetadata *type metadata accessor for Precondition.CodingKeys()
{
  return &type metadata for Precondition.CodingKeys;
}

uint64_t _s12ModelCatalog14ResourceStatusOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2420977CC(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2420977CC((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2420977CC((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2420977CC((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return sub_2420977CC(v8);
}

uint64_t _s12ModelCatalog14ResourceStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2420BE59C + 4 * byte_24214D4E6[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2420BE5D0 + 4 * byte_24214D4E1[v4]))();
}

uint64_t sub_2420BE5D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420BE5DCLL);
  return result;
}

_BYTE *sub_2420BE5E4(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420BE5ECLL);
  return sub_242097B10((_BYTE *)a1, a2 + 3);
}

ValueMetadata *type metadata accessor for CostProfile.CodingKeys()
{
  return &type metadata for CostProfile.CodingKeys;
}

uint64_t sub_2420BE60C()
{
  return swift_allocateGenericValueMetadata();
}

ValueMetadata *type metadata accessor for ManagedResourceBase.CodingKeys()
{
  return &type metadata for ManagedResourceBase.CodingKeys;
}

ValueMetadata *type metadata accessor for ManagedRuntimeInformation.CodingKeys()
{
  return &type metadata for ManagedRuntimeInformation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AssetSubscriptionInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetSubscriptionInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2420BE708 + 4 * byte_24214D4F0[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2420BE73C + 4 * byte_24214D4EB[v4]))();
}

uint64_t sub_2420BE73C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420BE744(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420BE74CLL);
  return result;
}

uint64_t sub_2420BE758(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420BE760);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2420BE764(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420BE76C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetSubscriptionInformation.CodingKeys()
{
  return &type metadata for AssetSubscriptionInformation.CodingKeys;
}

ValueMetadata *type metadata accessor for ResourceBase.CodingKeys()
{
  return &type metadata for ResourceBase.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ResourceConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ResourceConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_2420BE86C + 4 * byte_24214D4FA[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_2420BE8A0 + 4 * byte_24214D4F5[v4]))();
}

uint64_t sub_2420BE8A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420BE8A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420BE8B0);
  return result;
}

uint64_t sub_2420BE8BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420BE8C4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_2420BE8C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420BE8D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResourceConfiguration.CodingKeys()
{
  return &type metadata for ResourceConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProvider.CodingKeys()
{
  return &type metadata for InferenceProvider.CodingKeys;
}

uint64_t _s12ModelCatalog12PreconditionV16PreconditionTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2420BE948 + 4 * byte_24214D504[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2420BE97C + 4 * byte_24214D4FF[v4]))();
}

uint64_t sub_2420BE980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420BE988);
  return result;
}

_BYTE *sub_2420BE990(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420BE998);
  return sub_242097B10((_BYTE *)a1, a2 + 2);
}

ValueMetadata *type metadata accessor for CatalogErrors.SideloadError.CodingKeys()
{
  return &type metadata for CatalogErrors.SideloadError.CodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.SideloadError.FailedToAccessSideloadStorageCodingKeys()
{
  return &type metadata for CatalogErrors.SideloadError.FailedToAccessSideloadStorageCodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.SideloadError.InvalidSideloadCodingKeys()
{
  return &type metadata for CatalogErrors.SideloadError.InvalidSideloadCodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.SideloadError.SideloadDisabledCodingKeys()
{
  return &type metadata for CatalogErrors.SideloadError.SideloadDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.RequestResourceError.CodingKeys()
{
  return &type metadata for CatalogErrors.RequestResourceError.CodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.RequestResourceError.UnknownRequestResourcesKeyCodingKeys()
{
  return &type metadata for CatalogErrors.RequestResourceError.UnknownRequestResourcesKeyCodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.RequestResourceError.UnableToSubscribeCodingKeys()
{
  return &type metadata for CatalogErrors.RequestResourceError.UnableToSubscribeCodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.ConfigurationError.CodingKeys()
{
  return &type metadata for CatalogErrors.ConfigurationError.CodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.ConfigurationError.InvalidConfigurationCodingKeys()
{
  return &type metadata for CatalogErrors.ConfigurationError.InvalidConfigurationCodingKeys;
}

uint64_t _s12ModelCatalog8PlatformV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2420BEA84 + 4 * byte_24214D50E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2420BEAB8 + 4 * byte_24214D509[v4]))();
}

uint64_t sub_2420BEABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420BEAC4);
  return result;
}

_BYTE *sub_2420BEACC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420BEAD4);
  return sub_242097B10((_BYTE *)a1, a2 + 1);
}

ValueMetadata *type metadata accessor for CatalogErrors.SerializationError.CodingKeys()
{
  return &type metadata for CatalogErrors.SerializationError.CodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.SerializationError.FailedToSerializeCodingKeys()
{
  return &type metadata for CatalogErrors.SerializationError.FailedToSerializeCodingKeys;
}

ValueMetadata *type metadata accessor for CatalogErrors.SerializationError.FailedToDeserializeCodingKeys()
{
  return &type metadata for CatalogErrors.SerializationError.FailedToDeserializeCodingKeys;
}

uint64_t _s12ModelCatalog3TagOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return _s12ModelCatalog0B8ResourcePAAE11assetBackedSbvg_0();
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s12ModelCatalog3TagOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2420BEBA0 + 4 * byte_24214D513[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2420BEBC0 + 4 * byte_24214D518[v4]))();
}

_BYTE *sub_2420BEBA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2420BEBC0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2420BEBC8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2420BEBD0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2420BEBD8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2420BEBE0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ConfigurationBasedResourceCodingKeys()
{
  return &type metadata for ConfigurationBasedResourceCodingKeys;
}

unint64_t sub_2420BEC00()
{
  unint64_t result;

  result = qword_25719ED88;
  if (!qword_25719ED88)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F628, &type metadata for ConfigurationBasedResourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719ED88);
  }
  return result;
}

unint64_t sub_2420BEC40()
{
  unint64_t result;

  result = qword_25719ED90;
  if (!qword_25719ED90)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F6E0, &type metadata for CatalogErrors.SerializationError.FailedToDeserializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719ED90);
  }
  return result;
}

unint64_t sub_2420BEC80()
{
  unint64_t result;

  result = qword_25719ED98;
  if (!qword_25719ED98)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F798, &type metadata for CatalogErrors.SerializationError.FailedToSerializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719ED98);
  }
  return result;
}

unint64_t sub_2420BECC0()
{
  unint64_t result;

  result = qword_25719EDA0;
  if (!qword_25719EDA0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F850, &type metadata for CatalogErrors.SerializationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDA0);
  }
  return result;
}

unint64_t sub_2420BED00()
{
  unint64_t result;

  result = qword_25719EDA8;
  if (!qword_25719EDA8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F908, &type metadata for CatalogErrors.ConfigurationError.InvalidConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDA8);
  }
  return result;
}

unint64_t sub_2420BED40()
{
  unint64_t result;

  result = qword_25719EDB0;
  if (!qword_25719EDB0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F9C0, &type metadata for CatalogErrors.ConfigurationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDB0);
  }
  return result;
}

unint64_t sub_2420BED80()
{
  unint64_t result;

  result = qword_25719EDB8;
  if (!qword_25719EDB8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FA78, &type metadata for CatalogErrors.RequestResourceError.UnableToSubscribeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDB8);
  }
  return result;
}

unint64_t sub_2420BEDC0()
{
  unint64_t result;

  result = qword_25719EDC0;
  if (!qword_25719EDC0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FB30, &type metadata for CatalogErrors.RequestResourceError.UnknownRequestResourcesKeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDC0);
  }
  return result;
}

unint64_t sub_2420BEE00()
{
  unint64_t result;

  result = qword_25719EDC8;
  if (!qword_25719EDC8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FBE8, &type metadata for CatalogErrors.RequestResourceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDC8);
  }
  return result;
}

unint64_t sub_2420BEE40()
{
  unint64_t result;

  result = qword_25719EDD0;
  if (!qword_25719EDD0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FCA0, &type metadata for CatalogErrors.SideloadError.SideloadDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDD0);
  }
  return result;
}

unint64_t sub_2420BEE80()
{
  unint64_t result;

  result = qword_25719EDD8;
  if (!qword_25719EDD8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FD58, &type metadata for CatalogErrors.SideloadError.InvalidSideloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDD8);
  }
  return result;
}

unint64_t sub_2420BEEC0()
{
  unint64_t result;

  result = qword_25719EDE0;
  if (!qword_25719EDE0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FE10, &type metadata for CatalogErrors.SideloadError.FailedToAccessSideloadStorageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDE0);
  }
  return result;
}

unint64_t sub_2420BEF00()
{
  unint64_t result;

  result = qword_25719EDE8;
  if (!qword_25719EDE8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FEC8, &type metadata for CatalogErrors.SideloadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDE8);
  }
  return result;
}

unint64_t sub_2420BEF40()
{
  unint64_t result;

  result = qword_25719EDF0;
  if (!qword_25719EDF0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FF80, &type metadata for InferenceProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDF0);
  }
  return result;
}

unint64_t sub_2420BEF80()
{
  unint64_t result;

  result = qword_25719EDF8;
  if (!qword_25719EDF8)
  {
    result = MEMORY[0x2426A40E0](&unk_242150038, &type metadata for ResourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EDF8);
  }
  return result;
}

unint64_t sub_2420BEFC0()
{
  unint64_t result;

  result = qword_25719EE00;
  if (!qword_25719EE00)
  {
    result = MEMORY[0x2426A40E0](&unk_2421500F0, &type metadata for ResourceBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE00);
  }
  return result;
}

unint64_t sub_2420BF000()
{
  unint64_t result;

  result = qword_25719EE08;
  if (!qword_25719EE08)
  {
    result = MEMORY[0x2426A40E0](&unk_2421501A8, &type metadata for AssetSubscriptionInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE08);
  }
  return result;
}

unint64_t sub_2420BF040()
{
  unint64_t result;

  result = qword_25719EE10;
  if (!qword_25719EE10)
  {
    result = MEMORY[0x2426A40E0](&unk_242150260, &type metadata for ManagedRuntimeInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE10);
  }
  return result;
}

unint64_t sub_2420BF080()
{
  unint64_t result;

  result = qword_25719EE18;
  if (!qword_25719EE18)
  {
    result = MEMORY[0x2426A40E0](&unk_242150318, &type metadata for ManagedResourceBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE18);
  }
  return result;
}

void sub_2420BF0BC()
{
  JUMPOUT(0x2426A40E0);
}

unint64_t sub_2420BF0D0()
{
  unint64_t result;

  result = qword_25719EE20;
  if (!qword_25719EE20)
  {
    result = MEMORY[0x2426A40E0](&unk_242150488, &type metadata for CostProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE20);
  }
  return result;
}

unint64_t sub_2420BF110()
{
  unint64_t result;

  result = qword_25719EE28;
  if (!qword_25719EE28)
  {
    result = MEMORY[0x2426A40E0](&unk_242150540, &type metadata for Precondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE28);
  }
  return result;
}

unint64_t sub_2420BF150()
{
  unint64_t result;

  result = qword_25719EE30;
  if (!qword_25719EE30)
  {
    result = MEMORY[0x2426A40E0](&unk_2421505F8, &type metadata for Platform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE30);
  }
  return result;
}

unint64_t sub_2420BF190()
{
  unint64_t result;

  result = qword_254399E68;
  if (!qword_254399E68)
  {
    result = MEMORY[0x2426A40E0](&unk_242150568, &type metadata for Platform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399E68);
  }
  return result;
}

unint64_t sub_2420BF1D0()
{
  unint64_t result;

  result = qword_254399E60;
  if (!qword_254399E60)
  {
    result = MEMORY[0x2426A40E0](&unk_242150590, &type metadata for Platform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399E60);
  }
  return result;
}

unint64_t sub_2420BF210()
{
  unint64_t result;

  result = qword_254399988;
  if (!qword_254399988)
  {
    result = MEMORY[0x2426A40E0](&unk_2421504B0, &type metadata for Precondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399988);
  }
  return result;
}

unint64_t sub_2420BF250()
{
  unint64_t result;

  result = qword_254399980;
  if (!qword_254399980)
  {
    result = MEMORY[0x2426A40E0](&unk_2421504D8, &type metadata for Precondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399980);
  }
  return result;
}

unint64_t sub_2420BF290()
{
  unint64_t result;

  result = qword_254399AA8;
  if (!qword_254399AA8)
  {
    result = MEMORY[0x2426A40E0](&unk_2421503F8, &type metadata for CostProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399AA8);
  }
  return result;
}

unint64_t sub_2420BF2D0()
{
  unint64_t result;

  result = qword_254399AA0;
  if (!qword_254399AA0)
  {
    result = MEMORY[0x2426A40E0](&unk_242150420, &type metadata for CostProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399AA0);
  }
  return result;
}

void sub_2420BF30C()
{
  JUMPOUT(0x2426A40E0);
}

void sub_2420BF31C()
{
  JUMPOUT(0x2426A40E0);
}

unint64_t sub_2420BF330()
{
  unint64_t result;

  result = qword_25719EE38;
  if (!qword_25719EE38)
  {
    result = MEMORY[0x2426A40E0](&unk_242150288, &type metadata for ManagedResourceBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE38);
  }
  return result;
}

unint64_t sub_2420BF370()
{
  unint64_t result;

  result = qword_25719EE40;
  if (!qword_25719EE40)
  {
    result = MEMORY[0x2426A40E0](&unk_2421502B0, &type metadata for ManagedResourceBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE40);
  }
  return result;
}

unint64_t sub_2420BF3B0()
{
  unint64_t result;

  result = qword_254399B08;
  if (!qword_254399B08)
  {
    result = MEMORY[0x2426A40E0](&unk_2421501D0, &type metadata for ManagedRuntimeInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399B08);
  }
  return result;
}

unint64_t sub_2420BF3F0()
{
  unint64_t result;

  result = qword_254399B00;
  if (!qword_254399B00)
  {
    result = MEMORY[0x2426A40E0](&unk_2421501F8, &type metadata for ManagedRuntimeInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399B00);
  }
  return result;
}

unint64_t sub_2420BF430()
{
  unint64_t result;

  result = qword_254399C98;
  if (!qword_254399C98)
  {
    result = MEMORY[0x2426A40E0](&unk_242150118, &type metadata for AssetSubscriptionInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399C98);
  }
  return result;
}

unint64_t sub_2420BF470()
{
  unint64_t result;

  result = qword_254399C90;
  if (!qword_254399C90)
  {
    result = MEMORY[0x2426A40E0](&unk_242150140, &type metadata for AssetSubscriptionInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399C90);
  }
  return result;
}

unint64_t sub_2420BF4B0()
{
  unint64_t result;

  result = qword_25719EE48;
  if (!qword_25719EE48)
  {
    result = MEMORY[0x2426A40E0](&unk_242150060, &type metadata for ResourceBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE48);
  }
  return result;
}

unint64_t sub_2420BF4F0()
{
  unint64_t result;

  result = qword_25719EE50;
  if (!qword_25719EE50)
  {
    result = MEMORY[0x2426A40E0](&unk_242150088, &type metadata for ResourceBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE50);
  }
  return result;
}

unint64_t sub_2420BF530()
{
  unint64_t result;

  result = qword_254399C78;
  if (!qword_254399C78)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FFA8, &type metadata for ResourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399C78);
  }
  return result;
}

unint64_t sub_2420BF570()
{
  unint64_t result;

  result = qword_254399C70;
  if (!qword_254399C70)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FFD0, &type metadata for ResourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399C70);
  }
  return result;
}

unint64_t sub_2420BF5B0()
{
  unint64_t result;

  result = qword_254399AC8;
  if (!qword_254399AC8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FEF0, &type metadata for InferenceProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399AC8);
  }
  return result;
}

unint64_t sub_2420BF5F0()
{
  unint64_t result;

  result = qword_254399AC0;
  if (!qword_254399AC0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FF18, &type metadata for InferenceProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399AC0);
  }
  return result;
}

unint64_t sub_2420BF630()
{
  unint64_t result;

  result = qword_25719EE58;
  if (!qword_25719EE58)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FD80, &type metadata for CatalogErrors.SideloadError.FailedToAccessSideloadStorageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE58);
  }
  return result;
}

unint64_t sub_2420BF670()
{
  unint64_t result;

  result = qword_25719EE60;
  if (!qword_25719EE60)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FDA8, &type metadata for CatalogErrors.SideloadError.FailedToAccessSideloadStorageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE60);
  }
  return result;
}

unint64_t sub_2420BF6B0()
{
  unint64_t result;

  result = qword_25719EE68;
  if (!qword_25719EE68)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FCC8, &type metadata for CatalogErrors.SideloadError.InvalidSideloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE68);
  }
  return result;
}

unint64_t sub_2420BF6F0()
{
  unint64_t result;

  result = qword_25719EE70;
  if (!qword_25719EE70)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FCF0, &type metadata for CatalogErrors.SideloadError.InvalidSideloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE70);
  }
  return result;
}

unint64_t sub_2420BF730()
{
  unint64_t result;

  result = qword_25719EE78;
  if (!qword_25719EE78)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FC10, &type metadata for CatalogErrors.SideloadError.SideloadDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE78);
  }
  return result;
}

unint64_t sub_2420BF770()
{
  unint64_t result;

  result = qword_25719EE80;
  if (!qword_25719EE80)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FC38, &type metadata for CatalogErrors.SideloadError.SideloadDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE80);
  }
  return result;
}

unint64_t sub_2420BF7B0()
{
  unint64_t result;

  result = qword_25719EE88;
  if (!qword_25719EE88)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FE38, &type metadata for CatalogErrors.SideloadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE88);
  }
  return result;
}

unint64_t sub_2420BF7F0()
{
  unint64_t result;

  result = qword_25719EE90;
  if (!qword_25719EE90)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FE60, &type metadata for CatalogErrors.SideloadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE90);
  }
  return result;
}

unint64_t sub_2420BF830()
{
  unint64_t result;

  result = qword_25719EE98;
  if (!qword_25719EE98)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FAA0, &type metadata for CatalogErrors.RequestResourceError.UnknownRequestResourcesKeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EE98);
  }
  return result;
}

unint64_t sub_2420BF870()
{
  unint64_t result;

  result = qword_25719EEA0;
  if (!qword_25719EEA0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FAC8, &type metadata for CatalogErrors.RequestResourceError.UnknownRequestResourcesKeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEA0);
  }
  return result;
}

unint64_t sub_2420BF8B0()
{
  unint64_t result;

  result = qword_25719EEA8;
  if (!qword_25719EEA8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F9E8, &type metadata for CatalogErrors.RequestResourceError.UnableToSubscribeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEA8);
  }
  return result;
}

unint64_t sub_2420BF8F0()
{
  unint64_t result;

  result = qword_25719EEB0;
  if (!qword_25719EEB0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FA10, &type metadata for CatalogErrors.RequestResourceError.UnableToSubscribeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEB0);
  }
  return result;
}

unint64_t sub_2420BF930()
{
  unint64_t result;

  result = qword_25719EEB8;
  if (!qword_25719EEB8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FB58, &type metadata for CatalogErrors.RequestResourceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEB8);
  }
  return result;
}

unint64_t sub_2420BF970()
{
  unint64_t result;

  result = qword_25719EEC0;
  if (!qword_25719EEC0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214FB80, &type metadata for CatalogErrors.RequestResourceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEC0);
  }
  return result;
}

unint64_t sub_2420BF9B0()
{
  unint64_t result;

  result = qword_25719EEC8;
  if (!qword_25719EEC8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F878, &type metadata for CatalogErrors.ConfigurationError.InvalidConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEC8);
  }
  return result;
}

unint64_t sub_2420BF9F0()
{
  unint64_t result;

  result = qword_25719EED0;
  if (!qword_25719EED0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F8A0, &type metadata for CatalogErrors.ConfigurationError.InvalidConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EED0);
  }
  return result;
}

unint64_t sub_2420BFA30()
{
  unint64_t result;

  result = qword_25719EED8;
  if (!qword_25719EED8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F930, &type metadata for CatalogErrors.ConfigurationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EED8);
  }
  return result;
}

unint64_t sub_2420BFA70()
{
  unint64_t result;

  result = qword_25719EEE0;
  if (!qword_25719EEE0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F958, &type metadata for CatalogErrors.ConfigurationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEE0);
  }
  return result;
}

unint64_t sub_2420BFAB0()
{
  unint64_t result;

  result = qword_25719EEE8;
  if (!qword_25719EEE8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F708, &type metadata for CatalogErrors.SerializationError.FailedToSerializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEE8);
  }
  return result;
}

unint64_t sub_2420BFAF0()
{
  unint64_t result;

  result = qword_25719EEF0;
  if (!qword_25719EEF0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F730, &type metadata for CatalogErrors.SerializationError.FailedToSerializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEF0);
  }
  return result;
}

unint64_t sub_2420BFB30()
{
  unint64_t result;

  result = qword_25719EEF8;
  if (!qword_25719EEF8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F650, &type metadata for CatalogErrors.SerializationError.FailedToDeserializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EEF8);
  }
  return result;
}

unint64_t sub_2420BFB70()
{
  unint64_t result;

  result = qword_25719EF00;
  if (!qword_25719EF00)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F678, &type metadata for CatalogErrors.SerializationError.FailedToDeserializeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EF00);
  }
  return result;
}

unint64_t sub_2420BFBB0()
{
  unint64_t result;

  result = qword_25719EF08;
  if (!qword_25719EF08)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F7C0, &type metadata for CatalogErrors.SerializationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EF08);
  }
  return result;
}

unint64_t sub_2420BFBF0()
{
  unint64_t result;

  result = qword_25719EF10;
  if (!qword_25719EF10)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F7E8, &type metadata for CatalogErrors.SerializationError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25719EF10);
  }
  return result;
}

unint64_t sub_2420BFC30()
{
  unint64_t result;

  result = qword_254399CB8;
  if (!qword_254399CB8)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F598, &type metadata for ConfigurationBasedResourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399CB8);
  }
  return result;
}

unint64_t sub_2420BFC70()
{
  unint64_t result;

  result = qword_254399CB0;
  if (!qword_254399CB0)
  {
    result = MEMORY[0x2426A40E0](&unk_24214F5C0, &type metadata for ConfigurationBasedResourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254399CB0);
  }
  return result;
}

unint64_t sub_2420BFCAC()
{
  unint64_t result;

  result = qword_25719EF18;
  if (!qword_25719EF18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer, &type metadata for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF18);
  }
  return result;
}

unint64_t sub_2420BFCEC()
{
  unint64_t result;

  result = qword_25719EF20;
  if (!qword_25719EF20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.InstructServerTokenizer, &type metadata for Catalog.Tokenizer.InstructServerTokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF20);
  }
  return result;
}

unint64_t sub_2420BFD2C()
{
  unint64_t result;

  result = qword_25719EF28;
  if (!qword_25719EF28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer, &type metadata for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF28);
  }
  return result;
}

unint64_t sub_2420BFD6C()
{
  unint64_t result;

  result = qword_25719EF30;
  if (!qword_25719EF30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.AFMTextInstructEnglish49k, &type metadata for Catalog.Tokenizer.AFMTextInstructEnglish49k);
    atomic_store(result, (unint64_t *)&qword_25719EF30);
  }
  return result;
}

unint64_t sub_2420BFDAC()
{
  unint64_t result;

  result = qword_254397778;
  if (!qword_254397778)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.NLRouterTokenizer, &type metadata for Catalog.Tokenizer.NLRouterTokenizer);
    atomic_store(result, (unint64_t *)&qword_254397778);
  }
  return result;
}

unint64_t sub_2420BFDEC()
{
  unint64_t result;

  result = qword_25719EF40;
  if (!qword_25719EF40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF40);
  }
  return result;
}

unint64_t sub_2420BFE2C()
{
  unint64_t result;

  result = qword_25719EF48;
  if (!qword_25719EF48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV4, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV4);
    atomic_store(result, (unint64_t *)&qword_25719EF48);
  }
  return result;
}

unint64_t sub_2420BFE6C()
{
  unint64_t result;

  result = qword_25719EF50;
  if (!qword_25719EF50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV3, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV3);
    atomic_store(result, (unint64_t *)&qword_25719EF50);
  }
  return result;
}

unint64_t sub_2420BFEAC()
{
  unint64_t result;

  result = qword_25719EF58;
  if (!qword_25719EF58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerV2, &type metadata for Catalog.Tokenizer.CodeLMTokenizerV2);
    atomic_store(result, (unint64_t *)&qword_25719EF58);
  }
  return result;
}

unint64_t sub_2420BFEEC()
{
  unint64_t result;

  result = qword_25719EF60;
  if (!qword_25719EF60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer, &type metadata for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF60);
  }
  return result;
}

unint64_t sub_2420BFF2C()
{
  unint64_t result;

  result = qword_25719EF68;
  if (!qword_25719EF68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF68);
  }
  return result;
}

unint64_t sub_2420BFF6C()
{
  unint64_t result;

  result = qword_25719EF70;
  if (!qword_25719EF70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF70);
  }
  return result;
}

unint64_t sub_2420BFFAC()
{
  unint64_t result;

  result = qword_25719EF78;
  if (!qword_25719EF78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSmallV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMSmallV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF78);
  }
  return result;
}

unint64_t sub_2420BFFEC()
{
  unint64_t result;

  result = qword_25719EF80;
  if (!qword_25719EF80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer, &type metadata for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF80);
  }
  return result;
}

unint64_t sub_2420C002C()
{
  unint64_t result;

  result = qword_25719EF88;
  if (!qword_25719EF88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV3Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV3Tokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF88);
  }
  return result;
}

unint64_t sub_2420C006C()
{
  unint64_t result;

  result = qword_25719EF90;
  if (!qword_25719EF90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV2Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV2Tokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF90);
  }
  return result;
}

unint64_t sub_2420C00AC()
{
  unint64_t result;

  result = qword_25719EF98;
  if (!qword_25719EF98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMLargeV1Tokenizer, &type metadata for Catalog.Tokenizer.CodeLMLargeV1Tokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EF98);
  }
  return result;
}

uint64_t sub_2420C00EC()
{
  sub_242082FE4();
  swift_bridgeObjectRelease();
  sub_2420C1784();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2420C193C();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2420C0134()
{
  sub_2420C0DE8();
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420973B4();
}

unint64_t sub_2420C0184()
{
  unint64_t result;

  result = qword_25719EFA0;
  if (!qword_25719EFA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizerExperimental, &type metadata for Catalog.Tokenizer.CodeLMTokenizerExperimental);
    atomic_store(result, (unint64_t *)&qword_25719EFA0);
  }
  return result;
}

unint64_t sub_2420C01C4()
{
  unint64_t result;

  result = qword_25719EFA8;
  if (!qword_25719EFA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Tokenizer.CodeLMTokenizer, &type metadata for Catalog.Tokenizer.CodeLMTokenizer);
    atomic_store(result, (unint64_t *)&qword_25719EFA8);
  }
  return result;
}

uint64_t sub_2420C0204()
{
  sub_242082FE4();
  sub_2420C1784();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2420C193C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2420C0254()
{
  sub_2420C0DE8();
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420C0B64();
  sub_2420973B4();
}

unint64_t sub_2420C02AC()
{
  unint64_t result;

  result = qword_25719EFB0;
  if (!qword_25719EFB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.AFMTextInstruct3BBase, &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase);
    atomic_store(result, (unint64_t *)&qword_25719EFB0);
  }
  return result;
}

unint64_t sub_2420C02EC()
{
  unint64_t result;

  result = qword_25719EFB8;
  if (!qword_25719EFB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.InstructServerBase, &type metadata for Catalog.LLM.Model.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_25719EFB8);
  }
  return result;
}

unint64_t sub_2420C032C()
{
  unint64_t result;

  result = qword_25719EFC0;
  if (!qword_25719EFC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_25719EFC0);
  }
  return result;
}

uint64_t sub_2420C036C()
{
  sub_242082FE4();
  swift_bridgeObjectRelease();
  sub_2420C1784();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2420C193C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2420C03EC()
{
  sub_2420C0C7C();
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420C0B64();
  sub_2420C13B0();
  sub_2420C180C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2420C0F24();
}

unint64_t sub_2420C049C()
{
  unint64_t result;

  result = qword_254399B48;
  if (!qword_254399B48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Tag, &type metadata for Tag);
    atomic_store(result, (unint64_t *)&qword_254399B48);
  }
  return result;
}

unint64_t sub_2420C04D8()
{
  unint64_t result;

  result = qword_254399E40;
  if (!qword_254399E40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Platform.PlatformType, &type metadata for Platform.PlatformType);
    atomic_store(result, (unint64_t *)&qword_254399E40);
  }
  return result;
}

unint64_t sub_2420C0514()
{
  unint64_t result;

  result = qword_254399968;
  if (!qword_254399968)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Precondition.PreconditionType, &type metadata for Precondition.PreconditionType);
    atomic_store(result, (unint64_t *)&qword_254399968);
  }
  return result;
}

unint64_t sub_2420C0550()
{
  unint64_t result;

  result = qword_25719EFD8;
  if (!qword_25719EFD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ResourceStatus, &type metadata for ResourceStatus);
    atomic_store(result, (unint64_t *)&qword_25719EFD8);
  }
  return result;
}

uint64_t sub_2420C0590(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2420C0608()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_2420C0610()
{
  unint64_t result;

  result = qword_25719EFE0;
  if (!qword_25719EFE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for InferenceProvider, &type metadata for InferenceProvider);
    atomic_store(result, (unint64_t *)&qword_25719EFE0);
  }
  return result;
}

unint64_t sub_2420C064C()
{
  unint64_t result;

  result = qword_25719EFE8;
  if (!qword_25719EFE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for ExecutionContext, &type metadata for ExecutionContext);
    atomic_store(result, (unint64_t *)&qword_25719EFE8);
  }
  return result;
}

uint64_t sub_2420C0688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2426A408C](a1, v6, a5);
}

void sub_2420C06E0()
{
  sub_2420B6ED8();
}

uint64_t sub_2420C07C0()
{
  return sub_242132C60();
}

uint64_t sub_2420C07D8()
{
  return sub_242132DA4();
}

unint64_t sub_2420C07F0()
{
  _QWORD *v0;

  sub_242079800(v0, v0[3]);
  return sub_2420B24B4();
}

double sub_2420C0810()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 130) = 0u;
  return result;
}

uint64_t sub_2420C0844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2420C0854()
{
  return sub_242132C60();
}

void *sub_2420C0864(void *a1)
{
  _QWORD *v1;
  const void *v2;

  *v1 = a1;
  return memcpy(a1, v2, 0xB8uLL);
}

void *sub_2420C0878(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0xB8uLL);
}

void *sub_2420C0888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  const void *v9;

  return memcpy(&a9, v9, 0xB0uLL);
}

uint64_t sub_2420C08AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

int64_t sub_2420C08C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, __int16 a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v14 + 16) = v18;
  v21 = v14 + 40 * v13;
  *(_QWORD *)(v21 + 32) = v20;
  *(_QWORD *)(v21 + 40) = v17;
  *(_BYTE *)(v21 + 48) = a11;
  *(_QWORD *)(v21 + 56) = 0;
  *(_DWORD *)(v21 + 64) = 2;
  return sub_2420BA23C(v15, v16, a13 & 1, v19);
}

unint64_t sub_2420C0920(_QWORD *a1, uint64_t a2)
{
  sub_242079800(a1, a2);
  return sub_2420B24B4();
}

void *sub_2420C0934(int a1, const void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, a2, 0xB8uLL);
}

uint64_t sub_2420C0940()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 8) = 0;
  *(_QWORD *)(v0 + 16) = 0xE000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420C0974()
{
  return sub_242132AD4();
}

unint64_t sub_2420C0980()
{
  return sub_2420B24F0();
}

uint64_t sub_2420C098C()
{
  return sub_242132D14();
}

void sub_2420C0998(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
}

uint64_t sub_2420C09A8()
{
  return sub_2421327BC();
}

void *sub_2420C09C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  const void *v9;

  return memcpy(&a9, v9, 0xD0uLL);
}

uint64_t sub_2420C09F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420C0A1C()
{
  return sub_24213275C();
}

uint64_t sub_2420C0A38()
{
  return sub_242132744();
}

uint64_t sub_2420C0A54(uint64_t a1)
{
  return sub_2420AA25C(a1);
}

_QWORD *sub_2420C0A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 24))((uint64_t *)va, a1, a3);
}

uint64_t sub_2420C0A80(uint64_t a1)
{
  return sub_2420AA31C(a1);
}

void *sub_2420C0A9C()
{
  return malloc(0xC0uLL);
}

_QWORD *sub_2420C0AA8()
{
  _QWORD *v0;

  return sub_242079800(v0, v0[3]);
}

uint64_t sub_2420C0AC8()
{
  return sub_242132AD4();
}

uint64_t sub_2420C0ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void sub_2420C0AEC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 2;
}

uint64_t sub_2420C0B04()
{
  uint64_t v0;

  return sub_242084E14(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

void sub_2420C0B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v0 + 16) = v2;
  v7 = v0 + v6 * v3;
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v1;
  *(_BYTE *)(v7 + 48) = v5;
}

uint64_t sub_2420C0B64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420C0B6C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_2420C0B74(__n128 a1, __n128 a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)v11 = v19;
  *(_QWORD *)(v11 + 8) = v18;
  *(_QWORD *)(v11 + 16) = v17;
  *(_QWORD *)(v11 + 24) = v16;
  *(_QWORD *)(v11 + 32) = v15;
  *(_QWORD *)(v11 + 40) = a9;
  *(_QWORD *)(v11 + 48) = a10;
  *(_BYTE *)(v11 + 56) = 1;
  *(_QWORD *)(v11 + 64) = a11;
  *(_QWORD *)(v11 + 72) = v20;
  *(_BYTE *)(v11 + 80) = v14 & 1;
  *(__n128 *)(v11 + 88) = a1;
  *(__n128 *)(v11 + 104) = a2;
  *(__n128 *)(v11 + 120) = a3;
  *(_QWORD *)(v11 + 136) = v12;
  *(_WORD *)(v11 + 144) = v13;
  *(_QWORD *)(v11 + 152) = 0;
  *(_QWORD *)(v11 + 160) = 0;
}

char *sub_2420C0BB4()
{
  int64_t v0;

  return sub_24210BF2C(0, v0, 0);
}

uint64_t sub_2420C0BC8()
{
  return sub_242132D8C();
}

uint64_t sub_2420C0BD4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_2420C0BE0()
{
  return sub_242132BE8();
}

uint64_t sub_2420C0BFC()
{
  return sub_242132C84();
}

uint64_t sub_2420C0C08()
{
  return sub_242132DB0();
}

uint64_t sub_2420C0C1C()
{
  return sub_242132DB0();
}

uint64_t sub_2420C0C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v0, v1);
}

void *sub_2420C0C44(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char __src)
{
  void *v34;

  return memcpy(v34, &__src, 0xD8uLL);
}

uint64_t sub_2420C0C70()
{
  return 0;
}

uint64_t sub_2420C0C98()
{
  return sub_2421327D4();
}

uint64_t sub_2420C0CA8()
{
  return sub_2421327EC();
}

uint64_t sub_2420C0CCC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_2420C0CD4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

__n128 *sub_2420C0CDC()
{
  return sub_2420ACF2C();
}

uint64_t sub_2420C0CE4()
{
  return sub_2421327D4();
}

uint64_t sub_2420C0CEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420C0CF4()
{
  uint64_t v0;

  return sub_2420B2568(v0 + 24);
}

uint64_t sub_2420C0D2C()
{
  return sub_242132D8C();
}

uint64_t sub_2420C0D34()
{
  uint64_t v0;

  return sub_2420BA320(v0);
}

uint64_t sub_2420C0D60()
{
  return sub_242132DA4();
}

uint64_t sub_2420C0D6C()
{
  return swift_allocObject();
}

uint64_t sub_2420C0D78()
{
  return sub_242132A20();
}

uint64_t sub_2420C0D90()
{
  return swift_bridgeObjectRelease();
}

char *sub_2420C0D9C()
{
  int64_t v0;

  return sub_24210BF48(0, v0, 0);
}

char *sub_2420C0DB4(char *a1)
{
  int64_t v1;

  return sub_24210BF2C(a1, v1, 1);
}

uint64_t sub_2420C0DC4()
{
  return sub_2420ABF94();
}

uint64_t sub_2420C0DCC()
{
  return swift_bridgeObjectRetain();
}

void sub_2420C0E1C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2420C0E38()
{
  return sub_242132AF8();
}

uint64_t sub_2420C0E48()
{
  return swift_unknownObjectRelease();
}

void *sub_2420C0E50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0x108uLL);
}

uint64_t sub_2420C0E60()
{
  return sub_242132D80();
}

uint64_t sub_2420C0E70()
{
  return sub_242132D80();
}

uint64_t sub_2420C0E8C()
{
  return sub_242132C3C();
}

uint64_t sub_2420C0EA0()
{
  return sub_2421327D4();
}

uint64_t sub_2420C0EA8()
{
  return sub_242132CF0();
}

uint64_t sub_2420C0EB4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2420C0EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2420C0590(1, a2, v2, v2 + 32, 0, (2 * a2) | 1);
}

uint64_t sub_2420C0F00()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242084D88(v1, v0);
}

uint64_t sub_2420C0F2C(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_2420B2568((uint64_t)va);
}

uint64_t sub_2420C0F44()
{
  return swift_release();
}

uint64_t sub_2420C0F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD))
{
  return a4(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_2420C0F6C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2420C0F7C()
{
  return sub_242132BE8();
}

uint64_t sub_2420C0F9C()
{
  return sub_242132CCC();
}

uint64_t sub_2420C0FA4()
{
  return sub_242132BE8();
}

uint64_t sub_2420C0FDC()
{
  return sub_2421327D4();
}

uint64_t sub_2420C0FE4()
{
  return sub_242132768();
}

void sub_2420C1000()
{
  sub_2420ACEA4();
}

uint64_t sub_2420C1008()
{
  return sub_242132C30();
}

uint64_t sub_2420C1014()
{
  return sub_242132C48();
}

uint64_t sub_2420C1030()
{
  return sub_242132CD8();
}

uint64_t sub_2420C1040(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_2420C105C()
{
  return sub_24213272C();
}

uint64_t sub_2420C1090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 160) = v2;
  *(_QWORD *)(v5 - 152) = v0;
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 136) = v3;
  *(_QWORD *)(v5 - 88) = v4;
  return sub_242132C6C();
}

uint64_t sub_2420C10C8()
{
  return sub_242132738();
}

uint64_t sub_2420C10D0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

char *sub_2420C1108(char *a1)
{
  int64_t v1;

  return sub_24210BF48(a1, v1, 1);
}

uint64_t sub_2420C1118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD))
{
  return a4(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

void sub_2420C1134(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_BYTE *)(a1 + 80);
  v4 = *(_BYTE *)(a1 + 81);
  v5 = *(_BYTE *)(a1 + 82);
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 9) = v4;
  *(_BYTE *)(v1 + 10) = v5;
}

uint64_t sub_2420C1158()
{
  return sub_242132D8C();
}

void sub_2420C1160(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t sub_2420C1168()
{
  return type metadata accessor for CatalogClient();
}

uint64_t sub_2420C11A8()
{
  return sub_242132DA4();
}

uint64_t sub_2420C11C0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_2420C11D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420C11F0()
{
  uint64_t v0;

  return v0 - 152;
}

_QWORD *sub_2420C1248()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 112) = v1[1];
  *(_QWORD *)(v2 - 104) = v3;
  return sub_242079800(v0, v0[3]);
}

uint64_t sub_2420C1278()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2420C1298()
{
  return sub_242132D8C();
}

uint64_t sub_2420C12A4()
{
  return sub_242132D8C();
}

uint64_t _s12ModelCatalog12ResourceBaseV09dependentC3IDsSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420C12C4()
{
  return sub_242132CF0();
}

uint64_t sub_2420C12EC(__n128 *a1, __n128 a2)
{
  uint64_t (*v2)(void);
  unint64_t v3;

  a1[1] = a2;
  a1[3].n128_u64[1] = v3;
  return v2();
}

uint64_t _s12ModelCatalog14StatusResponseC6statusAcA08ResourceC0O_tcfCTj_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t _s12ModelCatalog14ResourceBundleP5rawIDSSvgTj_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void sub_2420C1308(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v3;
  a2[1] = v2;
}

uint64_t _s12ModelCatalog14ResourceBundleP2idAA0cD10IdentifierVyxGvgTj_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2420C131C()
{
  return sub_242132C48();
}

uint64_t sub_2420C1330()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
  return sub_242132AD4();
}

uint64_t sub_2420C1360()
{
  return sub_242132C3C();
}

uint64_t sub_2420C1374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_2420C1388()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_2420C1394(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_2420B2568((uint64_t)va);
}

uint64_t sub_2420C139C()
{
  return sub_242132C3C();
}

uint64_t sub_2420C13B0()
{
  return swift_bridgeObjectRetain();
}

void sub_2420C13B8(void *a1)
{
  free(a1);
}

uint64_t sub_2420C13C0()
{
  return sub_242132CC0();
}

void sub_2420C13CC(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;

  *(_QWORD *)(a1 + 40) = v1;
  *(_BYTE *)(a1 + 48) = v2;
  *(_BYTE *)(a1 + 49) = v3;
  *(_BYTE *)(a1 + 50) = v4;
}

uint64_t sub_2420C13E0()
{
  return sub_242132DB0();
}

void sub_2420C13F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
}

uint64_t sub_2420C1408()
{
  return sub_242132C60();
}

uint64_t sub_2420C141C()
{
  return sub_242132750();
}

uint64_t sub_2420C1428()
{
  return swift_once();
}

void sub_2420C1434(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  sub_2420BA1EC((uint64_t)va, v1);
}

uint64_t sub_2420C1440()
{
  return swift_unknownObjectRelease();
}

void sub_2420C1448()
{
  uint64_t *v0;
  uint64_t v1;

  sub_2420966B8(v1 - 32, v1 - 24, v0);
}

void sub_2420C1464()
{
  void *v0;

}

uint64_t sub_2420C1498()
{
  return sub_242132600();
}

uint64_t sub_2420C14B0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0 + 16);
}

uint64_t sub_2420C14C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_2420C14F0()
{
  return sub_242132A14();
}

uint64_t sub_2420C1500()
{
  return sub_242132A14();
}

id sub_2420C1510(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2);
}

uint64_t sub_2420C1518()
{
  uint64_t v0;

  return v0;
}

void sub_2420C1540(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = (v1 - 32) | 0x8000000000000000;
  *(_BYTE *)(v2 + 16) = 3;
}

uint64_t sub_2420C1558()
{
  return sub_242132B94();
}

uint64_t sub_2420C1574()
{
  return sub_242132DB0();
}

uint64_t sub_2420C1584()
{
  return sub_242132D8C();
}

uint64_t sub_2420C15B4()
{
  return sub_242132B04();
}

uint64_t sub_2420C15BC()
{
  return sub_24213260C();
}

uint64_t sub_2420C15C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_242132BF4();
}

uint64_t sub_2420C15D4()
{
  return sub_242132CCC();
}

uint64_t sub_2420C15F4()
{
  return sub_242132D8C();
}

uint64_t sub_2420C15FC()
{
  return sub_242132D8C();
}

uint64_t sub_2420C1604()
{
  return sub_2421327D4();
}

void sub_2420C160C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t *v4;

  sub_2420BA964(a1, v4, a3, a4);
}

void *sub_2420C1614(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0x118uLL);
}

uint64_t sub_2420C1624()
{
  uint64_t *v0;

  return sub_2420797C0(v0);
}

uint64_t sub_2420C162C()
{
  return sub_242132768();
}

uint64_t sub_2420C163C()
{
  return sub_242132CD8();
}

uint64_t sub_2420C164C()
{
  return sub_2421327EC();
}

char *sub_2420C1654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

void sub_2420C1660()
{
  JUMPOUT(0x2426A3774);
}

uint64_t sub_2420C1670(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;

  result = a2[1];
  *a1 = *a2;
  a1[1] = result;
  return result;
}

uint64_t sub_2420C168C()
{
  return sub_2421327EC();
}

void sub_2420C169C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_2420966B8(a1, v2 - 32, v1);
}

__n128 *sub_2420C16A8()
{
  return sub_2420ACB80();
}

uint64_t sub_2420C16B0()
{
  return sub_242132D80();
}

uint64_t sub_2420C16BC()
{
  return sub_242132D80();
}

uint64_t sub_2420C16C8()
{
  return sub_242132C60();
}

uint64_t sub_2420C16D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2420C16E4()
{
  uint64_t v0;

  return v0;
}

void *sub_2420C1704(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t sub_2420C170C()
{
  return swift_willThrow();
}

uint64_t sub_2420C1714()
{
  return sub_242132C3C();
}

void *sub_2420C1724(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t *sub_2420C172C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;

  *(_QWORD *)(v1 + 64) = a1;
  return sub_24207F280(v2);
}

uint64_t sub_2420C1738()
{
  return sub_242132C3C();
}

unint64_t sub_2420C1744()
{
  return sub_2420B24F0();
}

uint64_t sub_2420C1750@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_2420C1764()
{
  return sub_242132A14();
}

void sub_2420C1770(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 72) = a1;
  *(_QWORD *)(v2 + 8) = a2;
}

uint64_t sub_2420C1784()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_2420C178C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_2420BA5C8();
}

void sub_2420C1798()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
}

uint64_t sub_2420C17A4()
{
  return swift_bridgeObjectRelease();
}

void sub_2420C17AC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v3;
  a2[1] = v2;
}

uint64_t sub_2420C17C0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_2420C17CC()
{
  return sub_242132C3C();
}

uint64_t sub_2420C17D8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v4;

  *(_BYTE *)(v4 + 16) = v3;
  return a2(a1, a3);
}

uint64_t sub_2420C17E4()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_2420C17F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 0;
  return v0;
}

uint64_t sub_2420C180C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420C1814()
{
  return sub_2421327D4();
}

void sub_2420C182C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 3;
}

uint64_t sub_2420C1858()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 - 136);
  v4 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)v4 = *(_QWORD *)(v2 - 144);
  *(_QWORD *)(v4 + 8) = v0;
  *(_BYTE *)(v4 + 16) = v1;
  return sub_242079824(v3);
}

void sub_2420C187C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_2420AD16C(v0, v1);
}

uint64_t sub_2420C1888()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420C18B0()
{
  return sub_2421327D4();
}

unint64_t sub_2420C18B8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_2420BA604();
}

unint64_t sub_2420C18C4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_2420BA514();
}

unint64_t sub_2420C18D0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_2420BA3E8();
}

uint64_t sub_2420C18DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(result + 8);
  v3 = *(_BYTE *)(result + 16);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v3;
  return result;
}

void sub_2420C1900(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_24210B184(a1, a2, 1, v2);
}

uint64_t sub_2420C190C(uint64_t a1)
{
  uint64_t v1;

  return sub_2420BA000(a1, v1);
}

_QWORD *sub_2420C1914()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242079800((_QWORD *)(v0 + 120), v1);
}

uint64_t sub_2420C1920()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420C1928(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_2420C193C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2420C1944(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return ResourceConfiguration.hash(into:)((uint64_t)va);
}

_QWORD *sub_2420C194C(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return (*(_QWORD *(**)(uint64_t *__return_ptr))(a2 + 24))((uint64_t *)va);
}

uint64_t sub_2420C1958()
{
  return sub_242132720();
}

__n128 sub_2420C1964@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)a1;
}

uint64_t sub_2420C1978(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_2420C198C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v3;
  a2[1] = v2;
}

uint64_t sub_2420C19A0()
{
  uint64_t result;

  result = os_variant_has_internal_content();
  byte_2543A65C8 = result;
  return result;
}

uint64_t sub_2420C19C4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Utils()
{
  return objc_opt_self();
}

BOOL sub_2420C19F4()
{
  uint64_t v0;
  __int128 v2;
  uint64_t v3;
  _OWORD v4[2];

  sub_2421327F8();
  swift_getObjectType();
  OS_xpc_object.asAny.getter((uint64_t)&v2);
  v0 = v3;
  if (v3)
  {
    sub_242079DB0(&v2, v4);
    sub_2420A99D4((uint64_t)v4, (uint64_t)&v2);
    sub_24207658C((uint64_t)&v2);
    sub_242079824((uint64_t)v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_242079D74((uint64_t)&v2, &qword_25719F010);
  }
  return v0 != 0;
}

void OS_xpc_object.asAny.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t value;
  uint64_t v13;
  BOOL v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  const void *bytes_ptr;
  const void *v24;
  size_t length;
  size_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_2420797C0((uint64_t *)&unk_25719EFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x2426A42FC](v2);
  if (sub_24213266C() == v7)
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v11 = sub_2420C21A0();
LABEL_15:
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)a1 = v9;
    return;
  }
  if (sub_242132690() == v7)
  {
    value = xpc_int64_get_value(v2);
    v13 = MEMORY[0x24BEE4008];
LABEL_18:
    *(_QWORD *)(a1 + 24) = v13;
    *(_QWORD *)a1 = value;
    return;
  }
  if (sub_2421326B4() == v7)
  {
    value = xpc_uint64_get_value(v2);
    v13 = MEMORY[0x24BEE4568];
    goto LABEL_18;
  }
  if (sub_242132648() == v7)
  {
    v14 = xpc_BOOL_get_value(v2);
    *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE1328];
    *(_BYTE *)a1 = v14;
    return;
  }
  if (sub_24213269C() == v7)
  {
    v15 = xpc_double_get_value(v2);
    *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE13C8];
    *(double *)a1 = v15;
    return;
  }
  if (sub_2421326A8() == v7)
  {
    if (xpc_string_get_string_ptr(v2))
    {
      v16 = sub_2421327F8();
      v18 = MEMORY[0x24BEE0D00];
LABEL_23:
      *(_QWORD *)(a1 + 24) = v18;
      *(_QWORD *)a1 = v16;
      *(_QWORD *)(a1 + 8) = v17;
      return;
    }
  }
  else if (sub_242132678() == v7)
  {
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1880]), sel_initWithUUIDBytes_, xpc_uuid_get_bytes(v2));
    v20 = objc_msgSend(v19, sel_UUIDString);
    sub_242132780();

    sub_2421325E8();
    swift_bridgeObjectRelease();
    v21 = sub_2421325F4();
    if (sub_2420801D0((uint64_t)v6, 1, v21) != 1)
    {
      *(_QWORD *)(a1 + 24) = v21;
      v22 = sub_24207F280((uint64_t *)a1);
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v22, v6, v21);

      return;
    }

    sub_242079D74((uint64_t)v6, (uint64_t *)&unk_25719EFF0);
  }
  else
  {
    if (sub_242132660() == v7)
    {
      xpc_date_get_value_absolute();
      *(_QWORD *)(a1 + 24) = sub_2421325DC();
      sub_24207F280((uint64_t *)a1);
      sub_2421325D0();
      return;
    }
    if (sub_242132654() != v7)
    {
      if (sub_242132684() == v7)
      {
        v26 = sub_2420C1E38(v2);
        if (v26)
        {
          v9 = (id)v26;
          v10 = (uint64_t *)&unk_25719F000;
          goto LABEL_32;
        }
      }
      else if (sub_2421326C0() == v7)
      {
        v8 = sub_2420C2050(v2);
        if (v8)
        {
          v9 = (id)v8;
          v10 = &qword_25719EA00;
LABEL_32:
          v11 = sub_2420797C0(v10);
          goto LABEL_15;
        }
      }
      goto LABEL_33;
    }
    bytes_ptr = xpc_data_get_bytes_ptr(v2);
    if (bytes_ptr)
    {
      v24 = bytes_ptr;
      length = xpc_data_get_length(v2);
      v16 = MEMORY[0x2426A34E0](v24, length);
      v18 = MEMORY[0x24BDCDDE8];
      goto LABEL_23;
    }
  }
LABEL_33:
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
}

uint64_t sub_2420C1DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

size_t sub_2420C1E38(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t result;
  size_t v5;
  size_t v6;
  id v7;
  uint64_t ObjectType;
  unint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;

  v2 = MEMORY[0x2426A42FC]();
  if (v2 != sub_242132684())
    return 0;
  result = xpc_array_get_count(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    v5 = result;
    if (!result)
      return MEMORY[0x24BEE4AF8];
    v6 = 0;
    v3 = MEMORY[0x24BEE4AF8];
    do
    {
      v7 = xpc_array_get_value(a1, v6);
      ObjectType = swift_getObjectType();
      OS_xpc_object.asAny.getter(&v18, ObjectType);
      swift_unknownObjectRelease();
      if (v19)
      {
        sub_242079DB0(&v18, &v20);
        sub_2420A99D4((uint64_t)&v20, (uint64_t)&v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24210B248(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
          v3 = v14;
        }
        v10 = *(_QWORD *)(v3 + 16);
        v9 = *(_QWORD *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_24210B248(v9 > 1, v10 + 1, 1, v3);
          v3 = v15;
        }
        *(_QWORD *)(v3 + 16) = v10 + 1;
        sub_242079DB0(&v18, (_OWORD *)(v3 + 32 * v10 + 32));
        sub_242079824((uint64_t)&v20);
      }
      else
      {
        sub_242079D74((uint64_t)&v18, &qword_25719F010);
        v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
        v21 = sub_2420C21A0();
        *(_QWORD *)&v20 = v11;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24210B248(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
          v3 = v16;
        }
        v13 = *(_QWORD *)(v3 + 16);
        v12 = *(_QWORD *)(v3 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_24210B248(v12 > 1, v13 + 1, 1, v3);
          v3 = v17;
        }
        *(_QWORD *)(v3 + 16) = v13 + 1;
        sub_242079DB0(&v20, (_OWORD *)(v3 + 32 * v13 + 32));
      }
      ++v6;
    }
    while (v5 != v6);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2420C2050(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];
  uint64_t v10;

  v2 = MEMORY[0x2426A42FC]();
  if (v2 != sub_2421326C0())
    return 0;
  v10 = MEMORY[0x24BEE4B00];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = &v10;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_2420C21E8;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_2420C21FC;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2420C1DE8;
  aBlock[3] = &unk_25132A720;
  v6 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_dictionary_apply(a1, v6);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v3 = v10;
    swift_release();
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t sub_2420C21A0()
{
  unint64_t result;

  result = qword_25719F008;
  if (!qword_25719F008)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25719F008);
  }
  return result;
}

uint64_t sub_2420C21DC()
{
  return sub_2420A6A2C();
}

uint64_t sub_2420C21E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2420C19F4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2420C21F0()
{
  return sub_2420A6A2C();
}

uint64_t sub_2420C21FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_2420C2220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2420C2230()
{
  return swift_release();
}

uint64_t (*Catalog.Diffusion.Adapter.Animation.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.Animation.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 21);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131EB48);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131EAD0;
  v0[10] = &unk_25131EAF8;
  sub_24209725C();
}

uint64_t sub_2420C22E4(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v25 = result;
  v26 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v27 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  if (v6)
    goto LABEL_7;
LABEL_8:
  v9 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v9 >= v27)
    return 1;
  v10 = *(_QWORD *)(v26 + 8 * v9);
  v11 = v3 + 1;
  if (!v10)
  {
    v11 = v9 + 1;
    if (v9 + 1 >= v27)
      return 1;
    v10 = *(_QWORD *)(v26 + 8 * v11);
    if (!v10)
    {
      v11 = v9 + 2;
      if (v9 + 2 >= v27)
        return 1;
      v10 = *(_QWORD *)(v26 + 8 * v11);
      if (!v10)
      {
        v12 = v9 + 3;
        if (v12 < v27)
        {
          v10 = *(_QWORD *)(v26 + 8 * v12);
          if (v10)
          {
            v11 = v12;
            goto LABEL_21;
          }
          while (1)
          {
            v11 = v12 + 1;
            if (__OFADD__(v12, 1))
              break;
            if (v11 >= v27)
              return 1;
            v10 = *(_QWORD *)(v26 + 8 * v11);
            ++v12;
            if (v10)
              goto LABEL_21;
          }
LABEL_44:
          __break(1u);
          return result;
        }
        return 1;
      }
    }
  }
LABEL_21:
  v28 = (v10 - 1) & v10;
  v29 = v11;
  for (i = __clz(__rbit64(v10)) + (v11 << 6); ; i = __clz(__rbit64(v6)) | (v3 << 6))
  {
    v13 = *(_QWORD *)(result + 48) + 24 * i;
    v15 = *(_QWORD *)v13;
    v14 = *(_QWORD *)(v13 + 8);
    v16 = *(unsigned __int8 *)(v13 + 16);
    sub_242132D74();
    swift_bridgeObjectRetain_n();
    sub_2421327D4();
    swift_bridgeObjectRelease();
    if (v16 != 2)
      sub_242132D8C();
    sub_242132D8C();
    v17 = sub_242132D98();
    v18 = -1 << *(_BYTE *)(a2 + 32);
    v19 = v17 & ~v18;
    if (((*(_QWORD *)(v7 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      break;
    v20 = ~v18;
    v21 = *(_QWORD *)(a2 + 48);
    while (1)
    {
      v22 = v21 + 24 * v19;
      v23 = *(unsigned __int8 *)(v22 + 16);
      v24 = *(_QWORD *)v22 == v15 && *(_QWORD *)(v22 + 8) == v14;
      if (!v24 && (sub_242132D14() & 1) == 0)
        goto LABEL_36;
      if (v23 != 2)
        break;
      if (v16 == 2)
        goto LABEL_38;
LABEL_36:
      v19 = (v19 + 1) & v20;
      if (((*(_QWORD *)(v7 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_41;
    }
    if (v16 == 2 || ((v16 ^ ((v23 & 1) == 0)) & 1) == 0)
      goto LABEL_36;
LABEL_38:
    swift_bridgeObjectRelease();
    result = v25;
    v6 = v28;
    v3 = v29;
    if (!v28)
      goto LABEL_8;
LABEL_7:
    v28 = (v6 - 1) & v6;
    v29 = v3;
  }
LABEL_41:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2420C25AC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  __int16 v33;
  int v34;
  char v36;
  BOOL v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v52 = a2 + 56;
  v40 = result + 56;
  v41 = result;
  v39 = v8;
  if (v7)
    goto LABEL_7;
LABEL_8:
  v10 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_62;
  }
  if (v10 >= v8)
    return 1;
  v11 = *(_QWORD *)(v4 + 8 * v10);
  v12 = v3 + 1;
  if (!v11)
  {
    v12 = v10 + 1;
    if (v10 + 1 >= v8)
      return 1;
    v11 = *(_QWORD *)(v4 + 8 * v12);
    if (!v11)
    {
      v12 = v10 + 2;
      if (v10 + 2 >= v8)
        return 1;
      v11 = *(_QWORD *)(v4 + 8 * v12);
      if (!v11)
      {
        v13 = v10 + 3;
        if (v13 < v8)
        {
          v11 = *(_QWORD *)(v4 + 8 * v13);
          if (v11)
          {
            v12 = v13;
            goto LABEL_21;
          }
          while (1)
          {
            v12 = v13 + 1;
            if (__OFADD__(v13, 1))
              break;
            if (v12 >= v8)
              return 1;
            v11 = *(_QWORD *)(v4 + 8 * v12);
            ++v13;
            if (v11)
              goto LABEL_21;
          }
LABEL_62:
          __break(1u);
          return result;
        }
        return 1;
      }
    }
  }
LABEL_21:
  v42 = (v11 - 1) & v11;
  v43 = v12;
  for (i = __clz(__rbit64(v11)) + (v12 << 6); ; i = __clz(__rbit64(v7)) | (v3 << 6))
  {
    v14 = *(_QWORD *)(result + 48) + 40 * i;
    v16 = *(_QWORD *)v14;
    v15 = *(_QWORD *)(v14 + 8);
    v17 = *(unsigned __int8 *)(v14 + 16);
    v45 = *(unsigned __int8 *)(v14 + 33);
    v46 = *(unsigned __int8 *)(v14 + 32);
    v47 = *(unsigned __int8 *)(v14 + 34);
    v18 = *(_WORD *)(v14 + 32);
    v48 = *(_QWORD *)(v14 + 24);
    v49 = *(unsigned __int8 *)(v14 + 35);
    sub_242132D74();
    swift_bridgeObjectRetain_n();
    v53 = v16;
    v54 = v15;
    sub_2421327D4();
    v51 = v17;
    if (v17 != 2)
      sub_242132D8C();
    sub_242132D8C();
    swift_bridgeObjectRelease();
    v50 = v18;
    if (v18 != 2)
    {
      sub_242132D8C();
      sub_242132D80();
      sub_242132D8C();
      sub_242132D8C();
    }
    sub_242132D8C();
    sub_242132D80();
    v19 = sub_242132D98();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = v19 & ~v20;
    v22 = v16;
    v23 = v54;
    v24 = v17;
    if (((*(_QWORD *)(v52 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      break;
    v25 = ~v20;
    v26 = *(_QWORD *)(a2 + 48);
    while (1)
    {
      v27 = v26 + 40 * v21;
      v28 = *(unsigned __int8 *)(v27 + 16);
      v29 = *(_QWORD *)(v27 + 24);
      v30 = *(unsigned __int8 *)(v27 + 32);
      v31 = *(unsigned __int8 *)(v27 + 33);
      v32 = *(unsigned __int8 *)(v27 + 34);
      v33 = *(_WORD *)(v27 + 32);
      v34 = *(unsigned __int8 *)(v27 + 35);
      if (*(_QWORD *)v27 != v22 || *(_QWORD *)(v27 + 8) != v23)
      {
        v36 = sub_242132D14();
        v24 = v51;
        v22 = v53;
        v23 = v54;
        if ((v36 & 1) == 0)
          goto LABEL_54;
      }
      if (v28 == 2)
      {
        if (v24 != 2)
          goto LABEL_54;
      }
      else if (v24 == 2 || ((v24 ^ ((v28 & 1) == 0)) & 1) == 0)
      {
        goto LABEL_54;
      }
      if (v33 != 2)
        break;
      if (v50 == 2 && v34 == v49)
        goto LABEL_56;
LABEL_54:
      v21 = (v21 + 1) & v25;
      if (((*(_QWORD *)(v52 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_59;
    }
    v38 = v50 != 2 && v29 == v48;
    if (!v38 || ((v30 ^ v46) & 1) != 0 || ((v45 ^ v31) & 1) != 0 || ((v32 ^ v47) & 1) != 0 || v34 != v49)
      goto LABEL_54;
LABEL_56:
    swift_bridgeObjectRelease();
    v3 = v43;
    v2 = a2;
    v4 = v40;
    result = v41;
    v8 = v39;
    v7 = v42;
    if (!v42)
      goto LABEL_8;
LABEL_7:
    v42 = (v7 - 1) & v7;
    v43 = v3;
  }
LABEL_59:
  swift_bridgeObjectRelease();
  return 0;
}

void Catalog.Diffusion.Adapter.Animation.hashValue.getter()
{
  sub_2420C2AA8();
}

uint64_t (*sub_2420C29A8())()
{
  return nullsub_1;
}

void sub_2420C29E0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.Emoji.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.Emoji.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 17);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131E390);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131E318;
  v0[10] = &unk_25131E340;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.Emoji.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C2AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_2420EF554();
  v0 = sub_242132D74();
  sub_2420EF940(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  sub_2420EFC18();
  sub_2420EFE50();
}

void sub_2420C2ADC()
{
  sub_2420C2AE8();
}

void sub_2420C2AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_2420EF554();
  v0 = sub_242132D74();
  sub_2420EF940(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  sub_2420EFC18();
  sub_2420EFE50();
}

uint64_t (*Catalog.Diffusion.Adapter.Illustration.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.Illustration.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 24);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131D5F0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131D578;
  v0[10] = &unk_25131D5A0;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.Illustration.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C2BD0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.PersonalizedAnimation.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.PersonalizedAnimation.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 34);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131DFA0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131DF28;
  v0[10] = &unk_25131DF50;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.PersonalizedAnimation.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C2C98()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.PersonalizedEmoji.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.PersonalizedEmoji.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 30);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131D9E0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131D968;
  v0[10] = &unk_25131D990;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.PersonalizedEmoji.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C2D60()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.PersonalizedIllustration.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.PersonalizedIllustration.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 37);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131E198);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131E120;
  v0[10] = &unk_25131E148;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.PersonalizedIllustration.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C2E28()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.PersonalizedScribble.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.PersonalizedScribble.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF4E4();
  sub_242082E08(v1 + 39);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131DDA8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_25131DD58;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.PersonalizedScribble.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C2EE8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.PersonalizedSketch.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.PersonalizedSketch.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 31);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131DBD8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131DB60;
  v0[10] = &unk_25131DB88;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.PersonalizedSketch.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C2FB0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.Refiner.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.Refiner.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 19);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131E780);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131E708;
  v0[10] = &unk_25131E730;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.Refiner.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C3078()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.Scribble.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.Scribble.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF60();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131E950);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_25131E900;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.Scribble.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C3134()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.Sketch.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.Sketch.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 18);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131E588);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131E510;
  v0[10] = &unk_25131E538;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.Sketch.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C31FC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Adapter.SkinToneEmoji.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Adapter.SkinToneEmoji.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EFF60();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131D7E8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 250000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131D770;
  v0[10] = &unk_25131D798;
  sub_24209725C();
}

void Catalog.Diffusion.Adapter.SkinToneEmoji.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C32C0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Diffusion.Model.VisualGenerationBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Diffusion.Model.VisualGenerationBase.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4E4();
  sub_242082E08(v1 + 16);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131D498);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"visual-generation-inference");
  sub_2420EF3D4(v3, 1500000);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131D420;
  v0[10] = &unk_25131D448;
  sub_24209725C();
}

void Catalog.Diffusion.Model.VisualGenerationBase.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C3388()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.DisabledUseCaseList.All.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.DisabledUseCaseList.All.init()(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = 0xD000000000000024;
  *(_QWORD *)(a1 + 8) = 0x8000000242134120;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = &unk_2512FF8C8;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.DisabledUseCaseList.All.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C3420()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.GenerativeFunctionOverrides.All.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.GenerativeFunctionOverrides.All.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002FLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242134150;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.GenerativeFunctionOverrides.All.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C34A8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.HandwritingSynthesizer.HandwritingSynthesis.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.HandwritingSynthesizer.HandwritingSynthesis.init()(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = 0xD000000000000022;
  *(_QWORD *)(a1 + 8) = 0x8000000242134AD0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 100;
  *(_WORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 42) = 0;
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = &unk_251301E20;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.HandwritingSynthesizer.HandwritingSynthesis.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C3540()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.ImageFilter.Conditioning.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.ImageFilter.Conditioning.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002ELL;
  *(_QWORD *)(a1 + 8) = 0x80000002421348C0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.ImageFilter.Conditioning.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C35D0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.ImageFilter.Face2Word.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.ImageFilter.Face2Word.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002BLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242134920;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.ImageFilter.Face2Word.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C3660()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.ImageFilter.HolisticallyNestedEdgeDetector.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.ImageFilter.HolisticallyNestedEdgeDetector.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003DLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242134B00;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.ImageFilter.HolisticallyNestedEdgeDetector.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C36F0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.ImageInpainter.PhotosMagicClean.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.ImageInpainter.PhotosMagicClean.init()(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = 0xD000000000000030;
  *(_QWORD *)(a1 + 8) = 0x8000000242135200;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = &unk_2512FCF90;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.ImageInpainter.PhotosMagicClean.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C3780()
{
  sub_2420C2AE8();
}

void Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.explicitRequestUsage.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.executionContexts.setter(uint64_t a1)
{
  uint64_t v1;

  sub_2420C1784();
  *(_QWORD *)(v1 + 40) = a1;
  sub_24207F428();
}

uint64_t (*Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.dependentResourceIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.sideloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.platforms.getter()
{
  return swift_bridgeObjectRetain();
}

void Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.init()(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = 0xD000000000000028;
  *(_QWORD *)(a1 + 8) = 0x8000000242133AC0;
  *(_QWORD *)(a1 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(a1 + 24) = 0x8000000242139F00;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 32) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 40) = v1;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 55) = 0;
  *(_QWORD *)(a1 + 64) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 72) = &unk_2512FD340;
  *(_WORD *)(a1 + 80) = 256;
  sub_2420EFD84(a1);
}

void Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420C38DC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_2420C3908()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.ImageScaler.GenerativePlaygroundsUpscaler.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.ImageScaler.GenerativePlaygroundsUpscaler.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000028;
  *(_QWORD *)(a1 + 8) = 0x8000000242134AA0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.ImageScaler.GenerativePlaygroundsUpscaler.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C399C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.ImageSegmenter.ForegroundBackgroundSegmenter.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.ImageSegmenter.ForegroundBackgroundSegmenter.init()(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = 0xD00000000000003BLL;
  *(_QWORD *)(a1 + 8) = 0x80000002421349F0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = &unk_2512FD130;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.ImageSegmenter.ForegroundBackgroundSegmenter.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C3A2C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.Adapter.AnswerSynthesis.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Model.AFMTextInstruct3BBase.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4F4();
  sub_242082E08(v1 + 12);
  *(_QWORD *)(v0 + 16) = sub_2420D20F0((uint64_t)&unk_251309938);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EFE3C(v3, 0xBC50u);
  *(_BYTE *)(v0 + 42) = 1;
  Catalog.Tokenizer.AFMTextInstructEnglish49k.init()();
  sub_2420EFB00(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 160) = &unk_2513098C0;
  *(_QWORD *)(v0 + 168) = &unk_2513098E8;
  sub_24209725C();
}

void Catalog.LLM.Adapter.AnswerSynthesis.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF804();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130E0C8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130E048);
  v0[31] = v4;
  v0[32] = &unk_25130E078;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.AnswerSynthesis.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.AnswerSynthesis.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.AFMTextInstructEnglish49k.== infix(_:_:));
}

void Catalog.LLM.Adapter.AnswerSynthesis.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C3BD4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.AnswerSynthesisServer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Model.InstructServerBase.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5BC();
  sub_242082E08(v1 + 28);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513093E0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF9A0();
  *(_OWORD *)(v2 + 16) = xmmword_242145B80;
  *(_QWORD *)(v2 + 32) = v1;
  *(_QWORD *)(v2 + 40) = 0x80000002421335C0;
  v3 = sub_2420EF404(v2);
  sub_2420EF8E4(v3);
  sub_2420EFD40(MEMORY[0x24BEE4AF8]);
  v0[20] = v4;
  v0[21] = &unk_251309390;
  sub_2420EF6E4();
}

void Catalog.LLM.Adapter.AnswerSynthesisServer.init()(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2420EF610();
  sub_242082E08(v3);
  a1[2] = sub_2420D20F0((uint64_t)&unk_25130F890);
  sub_2420797C0(&qword_254397808);
  v4 = sub_2420EF9A0();
  *(_OWORD *)(v4 + 16) = xmmword_242145B80;
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = 0x80000002421335C0;
  v5 = sub_2420EF404(v4);
  sub_2420EF3E4(v5);
  sub_2420EF46C((uint64_t)&unk_25130F810);
  a1[31] = v6;
  a1[32] = &unk_25130F840;
  sub_2420EF6E4();
}

uint64_t Catalog.LLM.Adapter.AnswerSynthesisServer.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.AnswerSynthesisServer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void static Catalog.LLM.Model.InstructServerBase.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.InstructServerTokenizer.== infix(_:_:));
}

void sub_2420C3D40(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  int v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  char v86;
  __int128 v87;
  char v88;
  char v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  char v97;
  __int128 v98;
  char v99;
  char v100;
  __int128 v101;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v79 = *(_QWORD *)(a1 + 32);
  v78 = *(unsigned __int8 *)(a1 + 40);
  v77 = *(unsigned __int8 *)(a1 + 41);
  v76 = *(unsigned __int8 *)(a1 + 42);
  v70 = *(_QWORD *)(a1 + 72);
  v71 = *(_QWORD *)(a1 + 48);
  v69 = *(_QWORD *)(a1 + 80);
  v67 = *(_BYTE *)(a1 + 89);
  v68 = *(_BYTE *)(a1 + 88);
  v73 = *(_OWORD *)(a1 + 96);
  v74 = *(_OWORD *)(a1 + 56);
  v65 = *(_BYTE *)(a1 + 112);
  v66 = *(_BYTE *)(a1 + 90);
  v64 = *(_BYTE *)(a1 + 113);
  v72 = *(_OWORD *)(a1 + 120);
  v54 = *(_QWORD **)(a1 + 136);
  v52 = *(_QWORD *)(a1 + 144);
  HIDWORD(v50) = *(unsigned __int8 *)(a1 + 152);
  HIDWORD(v48) = *(unsigned __int8 *)(a1 + 153);
  sub_2420EFAE8();
  v9 = *(_QWORD *)(v7 + 16);
  v8 = *(_QWORD *)(v7 + 24);
  v10 = *(_QWORD *)(v7 + 32);
  v11 = *(unsigned __int8 *)(v7 + 40);
  v12 = *(unsigned __int8 *)(v7 + 41);
  v62 = *(_OWORD *)(v7 + 96);
  v63 = *(_OWORD *)(v7 + 56);
  v61 = *(_OWORD *)(v7 + 120);
  v15 = v13 == v14 && v5 == v6;
  v16 = *(unsigned __int8 *)(v7 + 42);
  v17 = *(_QWORD *)(v7 + 48);
  v18 = *(_QWORD *)(v7 + 72);
  v55 = *(_QWORD *)(v7 + 80);
  v56 = *(_BYTE *)(v7 + 88);
  v57 = *(_BYTE *)(v7 + 89);
  v58 = *(_BYTE *)(v7 + 90);
  v59 = *(_BYTE *)(v7 + 112);
  v60 = *(_BYTE *)(v7 + 113);
  v53 = *(_QWORD **)(v7 + 136);
  v51 = *(_QWORD *)(v7 + 144);
  LODWORD(v50) = *(unsigned __int8 *)(v7 + 152);
  LODWORD(v48) = *(unsigned __int8 *)(v7 + 153);
  v44 = *(_QWORD *)(v7 + 160);
  v38 = *(_QWORD *)(v7 + 168);
  if (!v15 && (sub_242079EB8() & 1) == 0)
    goto LABEL_19;
  if ((sub_2420C22E4(v3, v9) & 1) == 0)
    goto LABEL_19;
  if ((sub_2420C25AC(v4, v8) & 1) == 0)
    goto LABEL_19;
  if (v79 != v10)
    goto LABEL_19;
  if (((v78 ^ v11) & 1) != 0)
    goto LABEL_19;
  if (((v77 ^ v12) & 1) != 0)
    goto LABEL_19;
  if (((v76 ^ v16) & 1) != 0)
    goto LABEL_19;
  v91 = v71;
  v92 = v74;
  v93 = v70;
  v94 = v69;
  v95 = v68;
  v96 = v67;
  v97 = v66;
  v98 = v73;
  v99 = v65;
  v100 = v64;
  v101 = v72;
  v80 = v17;
  v81 = v63;
  v82 = v18;
  v83 = v55;
  v84 = v56;
  v85 = v57;
  v86 = v58;
  v87 = v62;
  v88 = v59;
  v89 = v60;
  v90 = v61;
  v19 = a3(&v91, &v80);
  if ((v19 & 1) == 0)
    goto LABEL_19;
  sub_2420EFCD4(v19, v20, v21, v22, v23, v24, v25, v26, v38, v41, v44, v46, v48, v50, v51, v52, v53, v54);
  if ((v27 & 1) != 0
    && (sub_2420EFCCC(), (v28 & 1) != 0)
    && (sub_2420EFA10(), (v37 & 1) == 0)
    && ((HIDWORD(v49) ^ v49) & 1) == 0
    && sub_2420EFCC4(v29, v30, v31, v32, v33, v34, v35, v36, v39, v42, v45, v47))
  {
    sub_2420EF780(v43, v40);
  }
  else
  {
LABEL_19:
    sub_242097670();
  }
}

void Catalog.LLM.Adapter.AnswerSynthesisServer.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4034()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.AutonamingMessages.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.AutonamingMessages.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF5CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130E968);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130E8C0);
  v0[31] = &unk_25130E8F0;
  v0[32] = &unk_25130E918;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.AutonamingMessages.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.AutonamingMessages.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.AutonamingMessages.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C410C()
{
  sub_242099AA8();
}

void Catalog.LLM.Adapter.BaseAdapter.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.LLM.Adapter.BaseAdapter.executionContexts.setter(uint64_t a1)
{
  uint64_t v1;

  sub_242082FE4();
  *(_QWORD *)(v1 + 24) = a1;
  sub_24207F428();
}

uint64_t (*Catalog.LLM.Adapter.BaseAdapter.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.BaseAdapter.llmModel.getter(void *a1@<X8>)
{
  uint64_t v2;

  sub_2420EF928(&v2);
  sub_2420EF928(a1);
  sub_2420D2734();
  sub_242097A7C();
}

uint64_t Catalog.LLM.Adapter.BaseAdapter.dependentResourceIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.LLM.Adapter.BaseAdapter.preconditions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.LLM.Adapter.BaseAdapter.sideloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t Catalog.LLM.Adapter.BaseAdapter.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 241);
}

uint64_t Catalog.LLM.Adapter.BaseAdapter.platforms.getter()
{
  return swift_bridgeObjectRetain();
}

void Catalog.LLM.Adapter.BaseAdapter.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF610();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_25130D710);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v4);
  sub_2420EF46C((uint64_t)&unk_25130D690);
  a1[31] = v5;
  a1[32] = &unk_25130D6C0;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.BaseAdapter.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.BaseAdapter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.BaseAdapter.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4288(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Catalog.LLM.Adapter.BaseAdapter.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_2420C42B0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.BulletsTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.BulletsTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF9E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130E398);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130E318);
  v0[31] = v4;
  v0[32] = &unk_25130E348;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.BulletsTransform.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.BulletsTransform.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.BulletsTransform.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C437C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ConciseTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ConciseTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF5E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130DA98);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130D9F0);
  v0[31] = &unk_25130DA20;
  v0[32] = &unk_25130DA48;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ConciseTone.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ConciseTone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ConciseTone.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4450()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.FactualConsistencyClassifier.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.FactualConsistencyClassifier.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4F4();
  sub_242082E08(v1 + 38);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251310730);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_251310688);
  v0[31] = &unk_2513106B8;
  v0[32] = &unk_2513106E0;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.FactualConsistencyClassifier.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.FactualConsistencyClassifier.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.FactualConsistencyClassifier.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4528()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.FriendlyTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.FriendlyTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF9CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130DB78);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130DAD0);
  v0[31] = &unk_25130DB00;
  v0[32] = &unk_25130DB28;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.FriendlyTone.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.FriendlyTone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.FriendlyTone.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C45FC()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.MagicRewrite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.MagicRewrite.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF9CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130DC58);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130DBB0);
  v0[31] = &unk_25130DBE0;
  v0[32] = &unk_25130DC08;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.MagicRewrite.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.MagicRewrite.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.MagicRewrite.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C46D0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.MailReply.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.MailReply.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EFF88();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251311DE0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_251311D60);
  v0[31] = &unk_25132A798;
  v0[32] = &unk_251311D90;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.MailReply.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.MailReply.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.MailReply.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C47A4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.MessagesReply.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.MessagesReply.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF9F4();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130DD38);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130DC90);
  v0[31] = &unk_25130DCC0;
  v0[32] = &unk_25130DCE8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.MessagesReply.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.MessagesReply.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.MessagesReply.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4878()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Model.PhotosMemoriesCreationBase.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF610();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251309B80);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"private-ml-client");
  sub_2420EF478(v4);
  Catalog.Tokenizer.AFMTextInstructEnglish49k.init()();
  sub_2420EFD40(MEMORY[0x24BEE4AF8]);
  a1[20] = v5;
  a1[21] = &unk_251309B30;
  sub_24209725C();
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFEFC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251311248);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF4D4(v3);
  sub_2420EF46C((uint64_t)&unk_2513111C8);
  v0[31] = v4;
  v0[32] = &unk_2513111F8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:));
}

void static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.AFMTextInstructEnglish49k.== infix(_:_:));
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C49E0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFEE8();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513117B8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF4D4(v3);
  sub_2420EF46C((uint64_t)&unk_251311738);
  v0[31] = v4;
  v0[32] = &unk_251311768;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4AB0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5BC();
  sub_242082E08(v1 + 53);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251311190);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF4D4(v3);
  sub_2420EF46C((uint64_t)&unk_251311110);
  v0[31] = v4;
  v0[32] = &unk_251311140;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4B80()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFEC0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513115B0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF4D4(v3);
  sub_2420EF46C((uint64_t)&unk_251311530);
  v0[31] = v4;
  v0[32] = &unk_251311560;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4C4C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF10();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251311918);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF4D4(v3);
  sub_2420EF46C((uint64_t)&unk_251311898);
  v0[31] = v4;
  v0[32] = &unk_2513118C8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4D18()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFE98();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251311A78);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF4D4(v3);
  sub_2420EF46C((uint64_t)&unk_2513119F8);
  v0[31] = v4;
  v0[32] = &unk_251311A28;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4DE4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5BC();
  sub_242082E08(v1 + 51);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513110C8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF4D4(v3);
  sub_2420EF46C((uint64_t)&unk_251311048);
  v0[31] = v4;
  v0[32] = &unk_251311078;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4EB4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFEFC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513113A8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF4D4(v3);
  sub_2420EF46C((uint64_t)&unk_251311328);
  v0[31] = v4;
  v0[32] = &unk_251311358;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.PhotosMemoriesCreationBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C4F80()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.Planner.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.Planner.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5BC();
  sub_242082E08(v1 + 31);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251311C80);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_251311C00);
  v0[31] = v4;
  v0[32] = &unk_251311C30;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.Planner.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.Planner.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.Planner.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5050()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PlannerV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PlannerV2.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000033);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251311F40);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_251311EC0);
  a1[31] = v4;
  a1[32] = &unk_251311EF0;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PlannerV2.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PlannerV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PlannerV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C512C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.PlannerV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.PlannerV3.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000033);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251312148);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_2513120C8);
  a1[31] = v4;
  a1[32] = &unk_2513120F8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.PlannerV3.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.PlannerV3.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.PlannerV3.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5208()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ProfessionalTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ProfessionalTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF9E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130E478);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130E3D0);
  v0[31] = &unk_25130E400;
  v0[32] = &unk_25130E428;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ProfessionalTone.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ProfessionalTone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ProfessionalTone.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C52DC()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ProofreadingReview.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ProofreadingReview.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF5CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130EA48);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130E9A0);
  v0[31] = &unk_25130E9D0;
  v0[32] = &unk_25130E9F8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ProofreadingReview.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ProofreadingReview.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ProofreadingReview.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C53B0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ResponseGeneration.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ResponseGeneration.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD00000000000003CLL);
  a1[2] = sub_2420D20F0((uint64_t)&unk_25130EBA8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_25130EB28);
  a1[31] = v4;
  a1[32] = &unk_25130EB58;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ResponseGeneration.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ResponseGeneration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ResponseGeneration.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C548C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ResponseGenerationV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ResponseGenerationV2.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD00000000000003FLL);
  a1[2] = sub_2420D20F0((uint64_t)&unk_25130F278);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_25130F1F8);
  a1[31] = v4;
  a1[32] = &unk_25130F228;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ResponseGenerationV2.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ResponseGenerationV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ResponseGenerationV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5568()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ResponseGenerationV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ResponseGenerationV3.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD00000000000003FLL);
  a1[2] = sub_2420D20F0((uint64_t)&unk_25130F480);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_25130F400);
  a1[31] = v4;
  a1[32] = &unk_25130F430;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ResponseGenerationV3.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ResponseGenerationV3.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ResponseGenerationV3.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5644()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.SafetyGuardrail.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.SafetyGuardrail.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF804();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130E228);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130E1A8);
  v0[31] = v4;
  v0[32] = &unk_25130E1D8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.SafetyGuardrail.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.SafetyGuardrail.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.SafetyGuardrail.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5710()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF4F4();
  sub_242082E08(v1 + 34);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251310F68);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_251310EE8);
  v0[31] = v4;
  v0[32] = &unk_251310F18;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C57E0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.SearchQueryUnderstandingServer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.SearchQueryUnderstandingServer.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EFED4();
  sub_242082E08(v2);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251310B40);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF9A0();
  *(_OWORD *)(v3 + 16) = xmmword_242145B80;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = 0x80000002421335C0;
  v4 = sub_2420EF404(v3);
  sub_2420EF3E4(v4);
  sub_2420EF46C((uint64_t)&unk_251310AC0);
  v0[31] = v5;
  v0[32] = &unk_251310AF0;
  sub_2420EF6E4();
}

uint64_t Catalog.LLM.Adapter.SearchQueryUnderstandingServer.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.SearchQueryUnderstandingServer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.SearchQueryUnderstandingServer.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C58B8()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerBulletsTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerBulletsTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF24();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130FEE8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_25130FE68);
  v0[31] = v4;
  v0[32] = &unk_25130FE98;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerBulletsTransform.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerBulletsTransform.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerBulletsTransform.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5984()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerConciseTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerConciseTone.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF610();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_25130E5D8);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v4);
  sub_2420EF46C((uint64_t)&unk_25130E558);
  a1[31] = v5;
  a1[32] = &unk_25130E588;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerConciseTone.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerConciseTone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerConciseTone.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5A58()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerFriendlyTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerFriendlyTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF7DC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130EDB0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_25130ED30);
  v0[31] = v4;
  v0[32] = &unk_25130ED60;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerFriendlyTone.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerFriendlyTone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerFriendlyTone.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5B24()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerMagicRewrite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerMagicRewrite.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF7DC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130EFB8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_25130EF38);
  v0[31] = v4;
  v0[32] = &unk_25130EF68;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerMagicRewrite.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerMagicRewrite.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerMagicRewrite.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5BF0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerMailReplyLongFormBasic.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerMailReplyLongFormBasic.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFED4();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251310938);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_2513108B8);
  v0[31] = v4;
  v0[32] = &unk_2513108E8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerMailReplyLongFormBasic.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerMailReplyLongFormBasic.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerMailReplyLongFormBasic.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5CBC()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5BC();
  sub_242082E08(v1 + 52);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251310D60);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_251310CE0);
  v0[31] = v4;
  v0[32] = &unk_251310D10;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5D8C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerMailReplyQA.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerMailReplyQA.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF7DC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130E7E0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_25130E760);
  v0[31] = v4;
  v0[32] = &unk_25130E790;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerMailReplyQA.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerMailReplyQA.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerMailReplyQA.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5E58()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerProfessionalTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerProfessionalTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF24();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513100F0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_251310070);
  v0[31] = v4;
  v0[32] = &unk_2513100A0;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerProfessionalTone.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerProfessionalTone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerProfessionalTone.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5F24()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerProofreadingReview.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerProofreadingReview.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF6BC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513102F8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_251310278);
  v0[31] = v4;
  v0[32] = &unk_2513102A8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerProofreadingReview.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerProofreadingReview.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerProofreadingReview.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C5FF0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerTablesTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerTablesTransform.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF610();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_25130FAB0);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v4);
  sub_2420EF46C((uint64_t)&unk_25130FA30);
  a1[31] = v5;
  a1[32] = &unk_25130FA60;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerTablesTransform.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerTablesTransform.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerTablesTransform.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C60C4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerTakeawaysTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerTakeawaysTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF6BC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251310500);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_251310480);
  v0[31] = v4;
  v0[32] = &unk_2513104B0;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerTakeawaysTransform.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerTakeawaysTransform.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerTakeawaysTransform.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C6190()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.ServerTextSummarizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.ServerTextSummarizer.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF4C();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130F688);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF3E4(v3);
  sub_2420EF46C((uint64_t)&unk_25130F608);
  v0[31] = v4;
  v0[32] = &unk_25130F638;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.ServerTextSummarizer.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.ServerTextSummarizer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.InstructServerBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.ServerTextSummarizer.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C625C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.Summarization.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.Summarization.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF9CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130DEC0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130DE18);
  v0[31] = &unk_25130DE48;
  v0[32] = &unk_25130DE70;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.Summarization.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.Summarization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.Summarization.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C6330()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.TablesTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.TablesTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF804();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130E2E0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130E260);
  v0[31] = v4;
  v0[32] = &unk_25130E290;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.TablesTransform.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.TablesTransform.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.TablesTransform.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C63FC()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Adapter.TakeawaysTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.TakeawaysTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130F118);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130F098);
  v0[31] = v4;
  v0[32] = &unk_25130F0C8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.TakeawaysTransform.hash(into:)()
{
  return sub_2420C6B34();
}

void static Catalog.LLM.Adapter.TakeawaysTransform.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void Catalog.LLM.Adapter.TakeawaysTransform.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C64C8()
{
  sub_242099AA8();
}

void Catalog.LLM.Adapter.UIPreviews.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.LLM.Adapter.UIPreviews.explicitRequestUsage.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.LLM.Adapter.UIPreviews.executionContexts.setter(uint64_t a1)
{
  uint64_t v1;

  sub_2420C1784();
  *(_QWORD *)(v1 + 40) = a1;
  sub_24207F428();
}

uint64_t (*Catalog.LLM.Adapter.UIPreviews.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Adapter.UIPreviews.cost.getter(uint64_t a1@<X8>)
{
  sub_2420C13F4(a1);
}

void Catalog.LLM.Adapter.UIPreviews.llmModel.getter(void *a1@<X8>)
{
  uint64_t v2;

  sub_2420EF928(&v2);
  sub_2420EF928(a1);
  sub_2420D2734();
  sub_242097A7C();
}

uint64_t Catalog.LLM.Adapter.UIPreviews.dependentResourceIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.LLM.Adapter.UIPreviews.sideloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 256);
}

uint64_t Catalog.LLM.Adapter.UIPreviews.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 257);
}

uint64_t Catalog.LLM.Adapter.UIPreviews.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.LLM.Adapter.UIPreviews.platforms.getter()
{
  return swift_bridgeObjectRetain();
}

void Catalog.LLM.Adapter.UIPreviews.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF4F4();
  sub_2420EF6F0(v1 + 19);
  *(_QWORD *)(v0 + 32) = sub_2420D20F0((uint64_t)&unk_25130D910);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EFA68(v3, 100000);
  Catalog.LLM.Model.AFMTextInstruct3BBase.init()();
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 240) = &unk_25130D8A8;
  *(_QWORD *)(v0 + 248) = v4;
  *(_WORD *)(v0 + 256) = v1;
  *(_QWORD *)(v0 + 264) = v4;
  *(_QWORD *)(v0 + 272) = &unk_25130D8D8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.UIPreviews.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  sub_2420977E0();
  sub_2420EFB9C();
  sub_242097268();
  sub_242097744();
  sub_2421327D4();
  sub_24207F78C();
  sub_24207F5FC();
  sub_2420D2568(a1, v3);
  sub_24207F700();
  sub_2420C13B0();
  sub_2420D2320(a1, v4);
  sub_2420A1B60();
  sub_2420EFC50();
  sub_2420EFA50();
  sub_2420EFC48();
  sub_2420EFA48();
  Catalog.LLM.Model.AFMTextInstruct3BBase.hash(into:)(a1);
  sub_2420C0B64();
  v5 = sub_2420EFDD0();
  sub_2420BA1EC(v5, v6);
  sub_242097578();
  sub_242079F18();
  sub_2420EF934();
  sub_242079EE0();
  sub_2420C0D2C();
  sub_242132D8C();
  sub_242097198();
  sub_2420EFDE8();
  sub_242097830();
  sub_242097198();
  sub_2420EFDDC();
  return swift_bridgeObjectRelease();
}

void static Catalog.LLM.Adapter.UIPreviews.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;

  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v58 = *(_QWORD *)(a1 + 48);
  v59 = *(_QWORD *)(a1 + 40);
  v57 = *(unsigned __int8 *)(a1 + 56);
  v55 = *(unsigned __int8 *)(a1 + 57);
  v53 = *(unsigned __int8 *)(a1 + 58);
  v51 = *(_QWORD **)(a1 + 240);
  v49 = *(_QWORD *)(a1 + 248);
  HIDWORD(v46) = *(unsigned __int8 *)(a1 + 256);
  HIDWORD(v45) = *(unsigned __int8 *)(a1 + 257);
  v43 = *(_QWORD *)(a1 + 264);
  v38 = *(_QWORD *)(a1 + 272);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v56 = *(unsigned __int8 *)(a2 + 56);
  v54 = *(unsigned __int8 *)(a2 + 57);
  v52 = *(unsigned __int8 *)(a2 + 58);
  v50 = *(_QWORD **)(a2 + 240);
  v48 = *(_QWORD *)(a2 + 248);
  LODWORD(v45) = *(unsigned __int8 *)(a2 + 257);
  v12 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  LODWORD(v46) = *(unsigned __int8 *)(a2 + 256);
  v41 = *(_QWORD *)(a2 + 264);
  v35 = *(_QWORD *)(a2 + 272);
  if (v12 || (sub_242079EB8() & 1) != 0)
  {
    v13 = v4 == v7 && v6 == v8;
    if ((v13 || (sub_242079EB8() & 1) != 0)
      && (sub_2420C22E4(v5, v10) & 1) != 0
      && (sub_2420C25AC(v59, v9) & 1) != 0
      && v58 == v11
      && ((v57 ^ v56) & 1) == 0
      && ((v55 ^ v54) & 1) == 0
      && ((v53 ^ v52) & 1) == 0)
    {
      static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:)(a1 + 64, a2 + 64);
      if ((v14 & 1) != 0)
      {
        sub_2420EFE0C(v14, v15, v16, v17, v18, v19, v20, v21, v33, v35, v38, v41, v43, v45, v46, v48, v49, v50, v51);
        if ((v22 & 1) != 0)
        {
          sub_2420EFDFC();
          if ((v23 & 1) != 0 && ((HIDWORD(v47) ^ v47) & 1) == 0)
          {
            sub_2420EFA10();
            if ((v32 & 1) == 0 && sub_2420EFDF4(v24, v25, v26, v27, v28, v29, v30, v31, v34, v36, v39, v42, v44))
              sub_2420AD3F0(v40, v37);
          }
        }
      }
    }
  }
}

void Catalog.LLM.Adapter.UIPreviews.hashValue.getter()
{
  _BYTE v0[72];

  sub_2420974F0();
  Catalog.LLM.Adapter.UIPreviews.hash(into:)((uint64_t)v0);
  sub_242079F68();
  sub_24209725C();
}

uint64_t (*sub_2420C69DC())()
{
  return nullsub_1;
}

void sub_2420C6A0C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Catalog.LLM.Adapter.UIPreviews.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2420C6A38()
{
  _BYTE v1[72];

  sub_242132D74();
  Catalog.LLM.Adapter.UIPreviews.hash(into:)((uint64_t)v1);
  return sub_242132D98();
}

uint64_t (*Catalog.LLM.Adapter.UrgencyClassification.executionContexts.modify())()
{
  return nullsub_1;
}

void _s12ModelCatalog0B0O9DiffusionO7AdapterO9AnimationV4costAA11CostProfileVvg_0(uint64_t a1@<X8>)
{
  sub_2420C13F4(a1);
}

void Catalog.LLM.Adapter.UrgencyClassification.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF7F0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25130FCE0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF394(v3);
  sub_2420EF5F4((uint64_t)&unk_25130FC38);
  v0[31] = &unk_25130FC68;
  v0[32] = &unk_25130FC90;
  sub_24209725C();
}

uint64_t Catalog.LLM.Adapter.UrgencyClassification.hash(into:)()
{
  return sub_2420C6B34();
}

uint64_t sub_2420C6B34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v8)(uint64_t);

  sub_2420A1A28();
  v2 = v1;
  v3 = v0[2];
  v4 = v0[3];
  sub_2420EFB64();
  v8 = v5;
  v6 = v0[28];
  sub_2420C180C();
  sub_2420EFDD0();
  sub_2421327D4();
  sub_242097400();
  sub_242079ED8();
  sub_2420D2568(v2, v3);
  sub_242079F20();
  sub_2420977E0();
  sub_2420D2320(v2, v4);
  sub_242097268();
  sub_2420EFC50();
  sub_2420EFD94();
  sub_2420EFD8C();
  sub_2420EFA50();
  v8(v2);
  sub_2420C13B0();
  sub_2420BA1EC(v2, v6);
  sub_2420A1B60();
  sub_242079F18();
  sub_2420EF934();
  sub_242079EE0();
  sub_2420C0D2C();
  sub_242132D8C();
  sub_24207F5FC();
  sub_2420EFDAC();
  sub_24207F700();
  sub_242097744();
  sub_2420EFDC4();
  return sub_2420EF75C();
}

void static Catalog.LLM.Adapter.UrgencyClassification.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C6C34(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static Catalog.LLM.Model.AFMTextInstruct3BBase.== infix(_:_:));
}

void sub_2420C6C34(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  int v53;
  int v54;
  int v55;
  int v56;

  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v55 = *(unsigned __int8 *)(a1 + 41);
  v56 = *(unsigned __int8 *)(a1 + 40);
  v54 = *(unsigned __int8 *)(a1 + 42);
  v51 = *(_QWORD **)(a1 + 224);
  HIDWORD(v46) = *(unsigned __int8 *)(a1 + 240);
  v43 = *(_QWORD *)(a1 + 248);
  v38 = *(_QWORD *)(a1 + 256);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(unsigned __int8 *)(a2 + 40);
  v12 = *(unsigned __int8 *)(a2 + 41);
  v53 = *(unsigned __int8 *)(a2 + 42);
  v49 = *(_QWORD *)(a1 + 232);
  v50 = *(_QWORD **)(a2 + 224);
  v48 = *(_QWORD *)(a2 + 232);
  HIDWORD(v45) = *(unsigned __int8 *)(a1 + 241);
  LODWORD(v46) = *(unsigned __int8 *)(a2 + 240);
  LODWORD(v45) = *(unsigned __int8 *)(a2 + 241);
  v13 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  v41 = *(_QWORD *)(a2 + 248);
  v35 = *(_QWORD *)(a2 + 256);
  if ((v13 || (sub_242079EB8() & 1) != 0)
    && (sub_2420C22E4(v5, v8) & 1) != 0
    && (sub_2420C25AC(v7, v9) & 1) != 0
    && v6 == v10
    && ((v56 ^ v11) & 1) == 0
    && ((v55 ^ v12) & 1) == 0
    && ((v54 ^ v53) & 1) == 0
    && (v14 = a3(a1 + 48, a2 + 48), (v14 & 1) != 0)
    && (sub_2420EFE0C(v14, v15, v16, v17, v18, v19, v20, v21, v33, v35, v38, v41, v43, v45, v46, v48, v49, v50, v51),
        (v22 & 1) != 0)
    && (sub_2420EFDFC(), (v23 & 1) != 0)
    && ((HIDWORD(v47) ^ v47) & 1) == 0
    && (sub_2420EFA10(), (v32 & 1) == 0)
    && sub_2420EFDF4(v24, v25, v26, v27, v28, v29, v30, v31, v34, v36, v39, v42, v44))
  {
    sub_2420EF730(v40, v37);
  }
  else
  {
    sub_2420EF8B0();
  }
}

void Catalog.LLM.Adapter.UrgencyClassification.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C6DC0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.DraftModel.AnswerSynthesis.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.AnswerSynthesis.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF7F0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251303968);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251303918;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.AnswerSynthesis.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C6E74()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.AnswerSynthesisServer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.AnswerSynthesisServer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF798(63, 0x8000000242134270, (uint64_t)&unk_2513056F8, a1);
}

void Catalog.LLM.DraftModel.AnswerSynthesisServer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C6ED4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.AutonamingMessages.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.AutonamingMessages.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF724();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251304668);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v4);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  a1[9] = &unk_2513045F0;
  a1[10] = &unk_251304618;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.AutonamingMessages.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C6F9C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.BulletsTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.BulletsTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF74();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251303ED8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251303E88;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.BulletsTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7050()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.CodeLM.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.CodeLM.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF4F4();
  sub_2420EF7B0(v1 + 14);
  v0[4] = sub_2420D20F0((uint64_t)&unk_251307BC8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF818(v3);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  v0[11] = v4;
  v0[12] = &unk_251307B78;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.CodeLM.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420C7104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2420EF980();
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v0 + 88);
  v2 = sub_242132D74();
  sub_2420EF940(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_2420EFC18();
  sub_242097A7C();
}

void sub_2420C71AC()
{
  sub_2420C71B8();
}

void sub_2420C71B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2420EF980();
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v0 + 88);
  v2 = sub_242132D74();
  sub_2420EF940(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_2420EFC18();
  sub_242097A7C();
}

uint64_t (*Catalog.LLM.DraftModel.CodeLMLargeV1.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.CodeLMLargeV1.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251302928);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_2513028F0;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.CodeLMLargeV1.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C72D4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.CodeLMLargeV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.CodeLMLargeV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251302AE0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251302AA8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.CodeLMLargeV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7388()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.CodeLMLargeV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.CodeLMLargeV3.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251302C98);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251302C60;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.CodeLMLargeV3.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C743C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.CodeLMSmallV1.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.CodeLMSmallV1.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251302E50);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251302E18;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.CodeLMSmallV1.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C74F0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.CodeLMSmallV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.CodeLMSmallV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251303008);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251302FD0;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.CodeLMSmallV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C75A4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.CodeLMSmallV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.CodeLMSmallV3.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5E0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513031C0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251303188;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.CodeLMSmallV3.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7658()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.CodeLMV1ANE3B.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.CodeLMV1ANE3B.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD00000000000002FLL);
  sub_2420EF600((uint64_t)"mc.CodeLMV1ANE3B");
  a1[4] = sub_2420D20F0((uint64_t)&unk_2513033A0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 40) = 0x80000002421335A0;
  v3 = sub_2420EF36C(v2);
  sub_2420EF818(v3);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  a1[11] = v4;
  a1[12] = &unk_251303350;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.CodeLMV1ANE3B.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420C7768()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.LLM.DraftModel.ConciseTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ConciseTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4F4();
  sub_242082E08(v1 + 26);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251302380);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251302308;
  v0[10] = &unk_251302330;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ConciseTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C782C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.FactualConsistencyClassifier.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.FactualConsistencyClassifier.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4F4();
  sub_242082E08(v1 + 44);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251306410);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251306398;
  v0[10] = &unk_2513063C0;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.FactualConsistencyClassifier.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C78EC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.FriendlyTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.FriendlyTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF5CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251302578);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251302500;
  v0[10] = &unk_251302528;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.FriendlyTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C79A8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.MagicRewrite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.MagicRewrite.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF5CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251302770);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_2513026F8;
  v0[10] = &unk_251302720;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.MagicRewrite.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7A64()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.MailReply.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.MailReply.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF804();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251307F98);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251307F20;
  v0[10] = &unk_251307F48;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.MailReply.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7B20()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.MessagesReply.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.MessagesReply.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4F4();
  sub_242082E08(v1 + 28);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513035A0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251303528;
  v0[10] = &unk_251303550;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.MessagesReply.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7BE0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF38();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513070D8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251307088;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7C94()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5BC();
  sub_242082E08(v1 + 63);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251307648);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_2513075F8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7D4C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF10();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251306F08);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251306EB8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7E00()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFE98();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251307478);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251307428;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7EB4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5BC();
  sub_242082E08(v1 + 65);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251307818);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_2513077C8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C7F6C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF610();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_2513079E8);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"private-ml-client");
  sub_2420EF478(v4);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  a1[9] = v5;
  a1[10] = &unk_251307998;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8028()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFEE8();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251306D38);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251306CE8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C80DC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF38();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513072A8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251307258;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8190()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.Planner.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.Planner.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF7DC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251307DA0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251307D50;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.Planner.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8244()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PlannerV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PlannerV2.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000039);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251308168);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  a1[9] = v4;
  a1[10] = &unk_251308118;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PlannerV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8308()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.PlannerV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.PlannerV3.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000039);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251308338);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  a1[9] = v4;
  a1[10] = &unk_2513082E8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.PlannerV3.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C83CC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ProfessionalTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ProfessionalTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EFF74();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513040D0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251304058;
  v0[10] = &unk_251304080;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ProfessionalTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8488()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ProofreadingReview.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ProofreadingReview.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF724();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251304860);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v4);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  a1[9] = &unk_2513047E8;
  a1[10] = &unk_251304810;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ProofreadingReview.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8550()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ResponseGeneration.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ResponseGeneration.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000042);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251304A30);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  a1[9] = v4;
  a1[10] = &unk_2513049E0;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ResponseGeneration.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8614()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ResponseGenerationV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ResponseGenerationV2.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000045);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251305170);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  a1[9] = v4;
  a1[10] = &unk_251305120;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ResponseGenerationV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C86D8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ResponseGenerationV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ResponseGenerationV3.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000045);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251305340);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  a1[9] = v4;
  a1[10] = &unk_2513052F0;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ResponseGenerationV3.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C879C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.SafetyGuardrail.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.SafetyGuardrail.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF7F0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251303B38);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251303AE8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.SafetyGuardrail.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8850()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF4F4();
  sub_242082E08(v1 + 40);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251306B68);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251306B18;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8908()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.SearchQueryUnderstandingServer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.SearchQueryUnderstandingServer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF798(73, 0x8000000242136400, (uint64_t)&unk_2513067B0, a1);
}

void Catalog.LLM.DraftModel.SearchQueryUnderstandingServer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8968()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerBulletsTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerBulletsTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFE84();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251305CA8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251305C58;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerBulletsTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8A1C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerConciseTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerConciseTone.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF610();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_2513042A0);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"private-ml-client");
  sub_2420EF478(v4);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  a1[9] = v5;
  a1[10] = &unk_251304250;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerConciseTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8AD8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerFriendlyTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerFriendlyTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF6BC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251304C00);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251304BB0;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerFriendlyTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8B8C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerMagicRewrite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerMagicRewrite.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF6BC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251304DD0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251304D80;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerMagicRewrite.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8C40()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFEC0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513065E0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251306590;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8CF4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF5BC();
  sub_242082E08(v1 + 58);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251306998);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251306948;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8DAC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerMailReplyQA.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerMailReplyQA.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF6BC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251304470);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251304420;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerMailReplyQA.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8E60()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerProfessionalTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerProfessionalTone.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFE84();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251305E78);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251305E28;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerProfessionalTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8F14()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerProofreadingReview.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerProofreadingReview.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFEAC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251306048);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251305FF8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerProofreadingReview.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C8FC8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerTablesTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerTablesTransform.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF610();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_2513058E0);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"private-ml-client");
  sub_2420EF478(v4);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  a1[9] = v5;
  a1[10] = &unk_251305890;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerTablesTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C9084()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerTakeawaysTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerTakeawaysTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFEAC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251306218);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_2513061C8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.ServerTakeawaysTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C9138()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.ServerTextSummarizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.ServerTextSummarizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF798(62, 0x8000000242136DD0, (uint64_t)&unk_251305510, a1);
}

void sub_2420C9180(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 16) = sub_2420EFA34(a1, a2, a3, a4);
  sub_2420797C0(&qword_254397808);
  v6 = sub_2420EF9A0();
  *(_OWORD *)(v6 + 16) = xmmword_242145B80;
  *(_QWORD *)(v6 + 32) = 0xD000000000000011;
  *(_QWORD *)(v6 + 40) = 0x80000002421335C0;
  *(_QWORD *)(v5 + 24) = sub_2420EF404(v6);
  *(_QWORD *)(v5 + 32) = 0;
  v7 = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(v5 + 39) = 0;
  *(_QWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 56) = v7;
  *(_WORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = v4;
  sub_2420EF6E4();
}

void Catalog.LLM.DraftModel.ServerTextSummarizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C9210()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.Summarization.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.Summarization.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF5CC();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251303798);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251303720;
  v0[10] = &unk_251303748;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.Summarization.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C92CC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.TablesTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.TablesTransform.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF7F0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251303D08);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v3);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_251303CB8;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.TablesTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C9380()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.TakeawaysTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.TakeawaysTransform.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF724();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251304FA0);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v4);
  sub_2420EF490(MEMORY[0x24BEE4AF8]);
  a1[9] = v5;
  a1[10] = &unk_251304F50;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.TakeawaysTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C9440()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.DraftModel.UIPreviews.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.UIPreviews.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF9E0();
  sub_2420EF6F0(v1);
  v0[4] = sub_2420D20F0((uint64_t)&unk_251302180);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF818(v3);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  v0[11] = v4;
  v0[12] = &unk_251302148;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.UIPreviews.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420C94F4()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.LLM.DraftModel.UrgencyClassification.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.DraftModel.UrgencyClassification.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF724();
  sub_242082E08(v2);
  a1[2] = sub_2420D20F0((uint64_t)&unk_251305AD8);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"token-generation-inference");
  sub_2420EF3BC(v4);
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  a1[9] = &unk_251305A60;
  a1[10] = &unk_251305A88;
  sub_24209725C();
}

void Catalog.LLM.DraftModel.UrgencyClassification.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420C95BC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.Model.AFMTextInstruct3BBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.AFMTextInstructEnglish49k.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420EF5BC();
  sub_242082E08(v1 + 26);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251320B10);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF9A0();
  *(_OWORD *)(v2 + 16) = xmmword_242145B80;
  *(_QWORD *)(v2 + 32) = v1 + 9;
  *(_QWORD *)(v2 + 40) = 0x80000002421335A0;
  *(_BYTE *)(v2 + 48) = 2;
  *(_QWORD *)(v2 + 56) = 0;
  *(_DWORD *)(v2 + 64) = 2;
  *(_QWORD *)(v2 + 72) = v1;
  *(_QWORD *)(v2 + 80) = 0x80000002421335C0;
  *(_BYTE *)(v2 + 88) = 2;
  *(_QWORD *)(v2 + 96) = 0;
  *(_DWORD *)(v2 + 104) = 2;
  v0[3] = sub_2420D1D58(v2);
  v0[4] = 10000;
  sub_2420EF9A8();
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251320A98;
  v0[10] = &unk_251320AC0;
  sub_2420EF6E4();
}

uint64_t Catalog.LLM.Model.AFMTextInstruct3BBase.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.AFMTextInstructEnglish49k.hash(into:));
}

void Catalog.LLM.Model.AFMTextInstruct3BBase.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C9704()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLM.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizer.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000027);
  sub_2420EF600((uint64_t)"mc.CodeLMTokenizer");
  a1[4] = sub_2420D20F0((uint64_t)&unk_2513202C0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 40) = 0x80000002421335A0;
  v3 = sub_2420EF36C(v2);
  sub_2420EF4BC(v3);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  a1[11] = v4;
  a1[12] = &unk_251320270;
  sub_24209725C();
}

void Catalog.LLM.Model.CodeLM.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_2420EF6D0();
  sub_2420EF7B0(v1);
  v0[4] = sub_2420D20F0((uint64_t)&unk_25130A1C8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF4A0(v3);
  Catalog.Tokenizer.CodeLMTokenizer.init()(v4);
  sub_2420EF74C(MEMORY[0x24BEE4AF8]);
  v0[24] = v5;
  v0[25] = &unk_25130A178;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeLM.hash(into:)(uint64_t a1)
{
  return sub_2420C9A30(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMTokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeLM.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C9C2C(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static Catalog.Tokenizer.CodeLMTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLM.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C98B4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMExperimental.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizerExperimental.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF4F4();
  *v0 = v1 + 14;
  v0[1] = 0x8000000242133860;
  v0[2] = v1 | 4;
  v0[3] = 0x8000000242139F60;
  v0[4] = sub_2420D20F0((uint64_t)&unk_251320C58);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF4BC(v3);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  v0[11] = v4;
  v0[12] = &unk_251320C08;
  sub_24209725C();
}

void Catalog.LLM.Model.CodeLMExperimental.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000023);
  sub_2420EF600((uint64_t)"mc.CodeLMExperimental");
  a1[4] = sub_2420D20F0((uint64_t)&unk_251309208);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 40) = 0x80000002421335A0;
  v3 = sub_2420EF36C(v2);
  sub_2420EF4A0(v3);
  Catalog.Tokenizer.CodeLMTokenizerExperimental.init()();
  sub_2420EF74C(MEMORY[0x24BEE4AF8]);
  a1[24] = v4;
  a1[25] = &unk_2513091B8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeLMExperimental.hash(into:)(uint64_t a1)
{
  return sub_2420C9A30(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMTokenizerExperimental.hash(into:));
}

uint64_t sub_2420C9A30(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v2 + 32);
  v4 = *(_QWORD *)(v2 + 40);
  sub_242097198();
  sub_2420EFDD0();
  sub_2421327D4();
  sub_242097830();
  sub_24207F5FC();
  sub_2421327D4();
  sub_24207F700();
  sub_2420977E0();
  sub_2420D2568(a1, v5);
  sub_242097268();
  sub_242079ED8();
  sub_2420D2320(a1, v4);
  sub_242079F20();
  sub_2420EFC50();
  sub_2420EFA48();
  sub_242132D8C();
  sub_242132D8C();
  a2(a1);
  sub_2420C180C();
  sub_2420EFDB8();
  sub_242097400();
  sub_242079F18();
  sub_2420EF934();
  sub_242079EE0();
  sub_2420C0D2C();
  sub_242132D8C();
  sub_242097198();
  sub_2420EFDE8();
  sub_242097830();
  sub_242097198();
  sub_2420EFDDC();
  return swift_bridgeObjectRelease();
}

void static Catalog.LLM.Model.CodeLMExperimental.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C9C2C(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static Catalog.Tokenizer.CodeLMTokenizerExperimental.== infix(_:_:));
}

void sub_2420C9C2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *, _QWORD *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[3];
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  __int128 v97;
  char v98;
  char v99;
  __int128 v100;
  _QWORD v101[3];
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  char v107;
  __int128 v108;
  char v109;
  char v110;
  __int128 v111;

  sub_2420EFD1C(a1);
  v6 = *(_QWORD *)(v4 + 24);
  v5 = *(_QWORD *)(v4 + 32);
  v88 = *(_QWORD *)(v4 + 48);
  v89 = *(_QWORD *)(v4 + 40);
  v87 = *(unsigned __int8 *)(v4 + 56);
  v86 = *(unsigned __int8 *)(v4 + 57);
  v85 = *(unsigned __int8 *)(v4 + 58);
  v77 = *(_QWORD *)(v4 + 72);
  v78 = *(_QWORD *)(v4 + 64);
  v82 = *(_QWORD *)(v4 + 80);
  v75 = *(_QWORD *)(v4 + 112);
  v76 = *(_QWORD *)(v4 + 104);
  v73 = *(_BYTE *)(v4 + 121);
  v74 = *(_BYTE *)(v4 + 120);
  v80 = *(_OWORD *)(v4 + 128);
  v81 = *(_OWORD *)(v4 + 88);
  v71 = *(_BYTE *)(v4 + 144);
  v72 = *(_BYTE *)(v4 + 122);
  v70 = *(_BYTE *)(v4 + 145);
  v79 = *(_OWORD *)(v4 + 152);
  v56 = *(_QWORD **)(v4 + 168);
  v54 = *(_QWORD *)(v4 + 176);
  HIDWORD(v52) = *(unsigned __int8 *)(v4 + 184);
  HIDWORD(v50) = *(unsigned __int8 *)(v4 + 185);
  sub_2420EFAE8();
  v68 = *(_OWORD *)(v9 + 128);
  v69 = *(_OWORD *)(v9 + 88);
  v67 = *(_OWORD *)(v9 + 152);
  v12 = v10 == v11 && v7 == v8;
  v14 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v9 + 24);
  v16 = *(_QWORD *)(v9 + 32);
  v15 = *(_QWORD *)(v9 + 40);
  v17 = *(_QWORD *)(v9 + 48);
  v18 = *(unsigned __int8 *)(v9 + 56);
  v19 = *(unsigned __int8 *)(v9 + 57);
  v84 = *(unsigned __int8 *)(v9 + 58);
  v57 = *(_QWORD *)(v9 + 64);
  v58 = *(_QWORD *)(v9 + 72);
  v59 = *(_QWORD *)(v9 + 80);
  v60 = *(_QWORD *)(v9 + 104);
  v61 = *(_QWORD *)(v9 + 112);
  v62 = *(_BYTE *)(v9 + 120);
  v63 = *(_BYTE *)(v9 + 121);
  v64 = *(_BYTE *)(v9 + 122);
  v65 = *(_BYTE *)(v9 + 144);
  v66 = *(_BYTE *)(v9 + 145);
  v55 = *(_QWORD **)(v9 + 168);
  v53 = *(_QWORD *)(v9 + 176);
  LODWORD(v52) = *(unsigned __int8 *)(v9 + 184);
  LODWORD(v50) = *(unsigned __int8 *)(v9 + 185);
  v46 = *(_QWORD *)(v9 + 192);
  v40 = *(_QWORD *)(v9 + 200);
  if (!v12 && (sub_242079EB8() & 1) == 0)
    goto LABEL_24;
  v20 = v3 == v14 && v6 == v13;
  if (!v20 && (sub_242079EB8() & 1) == 0)
    goto LABEL_24;
  if ((sub_2420C22E4(v5, v16) & 1) == 0)
    goto LABEL_24;
  if ((sub_2420C25AC(v89, v15) & 1) == 0)
    goto LABEL_24;
  if (v88 != v17)
    goto LABEL_24;
  if (((v87 ^ v18) & 1) != 0)
    goto LABEL_24;
  if (((v86 ^ v19) & 1) != 0)
    goto LABEL_24;
  if (((v85 ^ v84) & 1) != 0)
    goto LABEL_24;
  v101[0] = v78;
  v101[1] = v77;
  v102 = v81;
  v101[2] = v82;
  v103 = v76;
  v104 = v75;
  v105 = v74;
  v106 = v73;
  v107 = v72;
  v108 = v80;
  v109 = v71;
  v110 = v70;
  v111 = v79;
  v90[0] = v57;
  v90[1] = v58;
  v90[2] = v59;
  v91 = v69;
  v92 = v60;
  v93 = v61;
  v94 = v62;
  v95 = v63;
  v96 = v64;
  v97 = v68;
  v98 = v65;
  v99 = v66;
  v100 = v67;
  v21 = a3(v101, v90);
  if ((v21 & 1) == 0)
    goto LABEL_24;
  sub_2420EFCD4(v21, v22, v23, v24, v25, v26, v27, v28, v40, v43, v46, v48, v50, v52, v53, v54, v55, v56);
  if ((v29 & 1) != 0
    && (sub_2420EFCCC(), (v30 & 1) != 0)
    && (sub_2420EFA10(), (v39 & 1) == 0)
    && ((HIDWORD(v51) ^ v51) & 1) == 0
    && sub_2420EFCC4(v31, v32, v33, v34, v35, v36, v37, v38, v41, v44, v47, v49))
  {
    sub_2420EF780(v45, v42);
  }
  else
  {
LABEL_24:
    sub_242097670();
  }
}

void Catalog.LLM.Model.CodeLMExperimental.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420C9F68()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMLargeV1.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMLargeV1Tokenizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF434((uint64_t)&unk_25131EEE0, a1);
}

uint64_t Catalog.LLM.Model.CodeLMLargeV1.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2420EF54C((uint64_t)&unk_251308578, (uint64_t (*)(void))Catalog.Tokenizer.CodeLMLargeV1Tokenizer.init(), (uint64_t)&unk_251308540, a1);
}

uint64_t Catalog.LLM.Model.CodeLMLargeV1.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMLargeV1Tokenizer.hash(into:));
}

uint64_t sub_2420C9FE4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2420977E0();
  sub_2420EFB9C();
  sub_242097268();
  sub_2420C0B64();
  v3 = sub_2420EFDD0();
  sub_2420D2568(v3, v4);
  sub_242097578();
  sub_242097198();
  v5 = sub_24207F648();
  sub_2420D2320(v5, v6);
  sub_242097830();
  sub_2420EFC50();
  sub_2420EFA50();
  sub_2420EFC48();
  sub_2420EFA48();
  a2(a1);
  sub_2420C180C();
  sub_2420EFDB8();
  sub_242097400();
  sub_242079F18();
  sub_2420EF934();
  sub_242079EE0();
  sub_2420C0D2C();
  sub_242132D8C();
  sub_24207F5FC();
  sub_2420EFDAC();
  sub_24207F700();
  sub_242097744();
  sub_2420EFDC4();
  return swift_bridgeObjectRelease();
}

void static Catalog.LLM.Model.CodeLMLargeV1.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.CodeLMLargeV1Tokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMLargeV1.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CA1A4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMLargeV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMLargeV2Tokenizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF434((uint64_t)&unk_25131F098, a1);
}

uint64_t Catalog.LLM.Model.CodeLMLargeV2.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2420EF54C((uint64_t)&unk_251308738, (uint64_t (*)(void))Catalog.Tokenizer.CodeLMLargeV2Tokenizer.init(), (uint64_t)&unk_251308700, a1);
}

uint64_t sub_2420CA214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  *(_QWORD *)a5 = 0xD000000000000028;
  *(_QWORD *)(a5 + 8) = a1;
  *(_QWORD *)(a5 + 16) = sub_2420D20F0(a2);
  sub_2420797C0(&qword_254397808);
  v8 = sub_2420EF38C();
  *(_OWORD *)(v8 + 16) = xmmword_24214D280;
  *(_QWORD *)(v8 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v8 + 40) = 0x80000002421335A0;
  *(_QWORD *)(a5 + 24) = sub_2420EF36C(v8);
  *(_QWORD *)(a5 + 32) = 1590000;
  *(_WORD *)(a5 + 40) = 0;
  *(_BYTE *)(a5 + 42) = 0;
  result = a3();
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a5 + 136) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a5 + 144) = v10;
  *(_WORD *)(a5 + 152) = 256;
  *(_QWORD *)(a5 + 160) = v10;
  *(_QWORD *)(a5 + 168) = a4;
  return result;
}

uint64_t Catalog.LLM.Model.CodeLMLargeV2.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMLargeV2Tokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeLMLargeV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.CodeLMLargeV2Tokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMLargeV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CA2FC()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMLargeV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMLargeV3Tokenizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF434((uint64_t)&unk_25131F250, a1);
}

uint64_t Catalog.LLM.Model.CodeLMLargeV3.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2420EF54C((uint64_t)&unk_2513088F8, (uint64_t (*)(void))Catalog.Tokenizer.CodeLMLargeV3Tokenizer.init(), (uint64_t)&unk_2513088C0, a1);
}

uint64_t Catalog.LLM.Model.CodeLMLargeV3.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMLargeV3Tokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeLMLargeV3.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.CodeLMLargeV3Tokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMLargeV3.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CA39C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMSafetyGuardrail.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF464(53, 0x8000000242134660, (uint64_t)&unk_25131FEF8, a1);
}

void Catalog.LLM.Model.CodeLMSafetyGuardrail.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_2420EF9F4();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251309A50);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF69C(v3);
  Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.init()(v4);
  sub_2420EFB00(MEMORY[0x24BEE4AF8]);
  v0[20] = v5;
  v0[21] = &unk_251309A18;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeLMSafetyGuardrail.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeLMSafetyGuardrail.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMSafetyGuardrail.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CA49C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMSmallV1.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMSmallV1Tokenizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF434((uint64_t)&unk_25131F408, a1);
}

uint64_t Catalog.LLM.Model.CodeLMSmallV1.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2420EF54C((uint64_t)&unk_251308AB8, (uint64_t (*)(void))Catalog.Tokenizer.CodeLMSmallV1Tokenizer.init(), (uint64_t)&unk_251308A80, a1);
}

uint64_t Catalog.LLM.Model.CodeLMSmallV1.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMSmallV1Tokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeLMSmallV1.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.CodeLMSmallV1Tokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMSmallV1.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CA53C()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMSmallV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMSmallV2Tokenizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF434((uint64_t)&unk_25131F5C0, a1);
}

uint64_t Catalog.LLM.Model.CodeLMSmallV2.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2420EF54C((uint64_t)&unk_251308C78, (uint64_t (*)(void))Catalog.Tokenizer.CodeLMSmallV2Tokenizer.init(), (uint64_t)&unk_251308C40, a1);
}

uint64_t Catalog.LLM.Model.CodeLMSmallV2.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMSmallV2Tokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeLMSmallV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.CodeLMSmallV2Tokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMSmallV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CA5DC()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMSmallV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMSmallV3Tokenizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF434((uint64_t)&unk_25131F778, a1);
}

uint64_t Catalog.LLM.Model.CodeLMSmallV3.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2420EF54C((uint64_t)&unk_251308E38, (uint64_t (*)(void))Catalog.Tokenizer.CodeLMSmallV3Tokenizer.init(), (uint64_t)&unk_251308E00, a1);
}

uint64_t Catalog.LLM.Model.CodeLMSmallV3.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMSmallV3Tokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeLMSmallV3.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.CodeLMSmallV3Tokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMSmallV3.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CA67C()
{
  sub_242099AA8();
}

void Catalog.LLM.Model.CodeLMV1ANE3B.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.LLM.Model.CodeLMV1ANE3B.explicitRequestUsage.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.LLM.Model.CodeLMV1ANE3B.executionContexts.setter(uint64_t a1)
{
  uint64_t v1;

  sub_2420C1784();
  *(_QWORD *)(v1 + 40) = a1;
  sub_24207F428();
}

uint64_t (*Catalog.LLM.Model.CodeLMV1ANE3B.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD00000000000002ELL);
  sub_2420EF600((uint64_t)"mc.CodeLMV1ANE3BTokenizer");
  a1[4] = sub_2420D20F0((uint64_t)&unk_2513209A8);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 40) = 0x80000002421335A0;
  v3 = sub_2420EF36C(v2);
  sub_2420EF4BC(v3);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  a1[11] = v4;
  a1[12] = &unk_251320958;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeLMV1ANE3B.preconditions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.LLM.Model.CodeLMV1ANE3B.sideloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 184);
}

uint64_t Catalog.LLM.Model.CodeLMV1ANE3B.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 185);
}

uint64_t Catalog.LLM.Model.CodeLMV1ANE3B.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.LLM.Model.CodeLMV1ANE3B.platforms.getter()
{
  return swift_bridgeObjectRetain();
}

void Catalog.LLM.Model.CodeLMV1ANE3B.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_242082E08(0xD000000000000029);
  sub_2420EF600((uint64_t)"mc.CodeLMV1ANE3B");
  a1[4] = sub_2420D20F0((uint64_t)&unk_251309020);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 40) = 0x80000002421335A0;
  v3 = sub_2420EF36C(v2);
  sub_2420EF4A0(v3);
  Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.init()(v4);
  sub_2420EF74C(MEMORY[0x24BEE4AF8]);
  a1[24] = v5;
  a1[25] = &unk_251308FD0;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeLMV1ANE3B.hash(into:)(uint64_t a1)
{
  return sub_2420C9A30(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeLMV1ANE3B.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C9C2C(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMV1ANE3B.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CA8B0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Catalog.LLM.Model.CodeLMV1ANE3B.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_2420CA8DC()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizerV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF9B8();
  sub_242082E08(v2);
  sub_2420EF600((uint64_t)"mc.CodeLMTokenizerV2");
  v0[4] = sub_2420D20F0((uint64_t)&unk_2513203F0);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  *(_QWORD *)(v3 + 32) = v1 + 6;
  *(_QWORD *)(v3 + 40) = 0x80000002421335A0;
  v4 = sub_2420EF36C(v3);
  sub_2420EF4BC(v4);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  v0[11] = v5;
  v0[12] = &unk_2513203A0;
  sub_24209725C();
}

void Catalog.LLM.Model.CodeLMV2.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2420EF6D0();
  sub_2420EF658(v1);
  v0[2] = v3;
  v0[3] = v2 & 0xFFFF0000FFFFLL | 0xEB00000000320000;
  v0[4] = sub_2420D20F0((uint64_t)&unk_25130A308);
  sub_2420797C0(&qword_254397808);
  v4 = sub_2420EF38C();
  *(_OWORD *)(v4 + 16) = xmmword_24214D280;
  v5 = sub_2420EF34C(v4, (uint64_t)"token-generation-inference");
  sub_2420EF4A0(v5);
  Catalog.Tokenizer.CodeLMTokenizerV2.init()();
  sub_2420EF74C(MEMORY[0x24BEE4AF8]);
  v0[24] = v6;
  v0[25] = &unk_25130A2B8;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeLMV2.hash(into:)(uint64_t a1)
{
  return sub_2420C9A30(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMTokenizerV2.hash(into:));
}

void static Catalog.LLM.Model.CodeLMV2.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C9C2C(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static Catalog.Tokenizer.CodeLMTokenizerV2.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMV2.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CAA58()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizerV3.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF9B8();
  sub_242082E08(v2);
  sub_2420EF600((uint64_t)"mc.CodeLMTokenizerV3");
  v0[4] = sub_2420D20F0((uint64_t)&unk_2513205D8);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  *(_QWORD *)(v3 + 32) = v1 + 6;
  *(_QWORD *)(v3 + 40) = 0x80000002421335A0;
  v4 = sub_2420EF36C(v3);
  sub_2420EF4BC(v4);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  v0[11] = v5;
  v0[12] = &unk_251320588;
  sub_24209725C();
}

void Catalog.LLM.Model.CodeLMV3.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2420EF6D0();
  sub_2420EF658(v1);
  v0[2] = v3;
  v0[3] = v2 & 0xFFFF0000FFFFLL | 0xEB00000000330000;
  v0[4] = sub_2420D20F0((uint64_t)&unk_25130A4F0);
  sub_2420797C0(&qword_254397808);
  v4 = sub_2420EF38C();
  *(_OWORD *)(v4 + 16) = xmmword_24214D280;
  v5 = sub_2420EF34C(v4, (uint64_t)"token-generation-inference");
  sub_2420EF4A0(v5);
  Catalog.Tokenizer.CodeLMTokenizerV3.init()();
  sub_2420EF74C(MEMORY[0x24BEE4AF8]);
  v0[24] = v6;
  v0[25] = &unk_25130A4A0;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeLMV3.hash(into:)(uint64_t a1)
{
  return sub_2420C9A30(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMTokenizerV3.hash(into:));
}

void static Catalog.LLM.Model.CodeLMV3.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C9C2C(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static Catalog.Tokenizer.CodeLMTokenizerV3.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMV3.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CABD4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeLMV4.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizerV4.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF9B8();
  sub_242082E08(v2);
  sub_2420EF600((uint64_t)"mc.CodeLMTokenizerV4");
  v0[4] = sub_2420D20F0((uint64_t)&unk_2513207C0);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  *(_QWORD *)(v3 + 32) = v1 + 6;
  *(_QWORD *)(v3 + 40) = 0x80000002421335A0;
  v4 = sub_2420EF36C(v3);
  sub_2420EF4BC(v4);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  v0[11] = v5;
  v0[12] = &unk_251320770;
  sub_24209725C();
}

void Catalog.LLM.Model.CodeLMV4.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2420EF6D0();
  sub_2420EF658(v1);
  v0[2] = v3;
  v0[3] = v2 & 0xFFFF0000FFFFLL | 0xEB00000000340000;
  v0[4] = sub_2420D20F0((uint64_t)&unk_25130A6D8);
  sub_2420797C0(&qword_254397808);
  v4 = sub_2420EF38C();
  *(_OWORD *)(v4 + 16) = xmmword_24214D280;
  v5 = sub_2420EF34C(v4, (uint64_t)"token-generation-inference");
  sub_2420EF4A0(v5);
  Catalog.Tokenizer.CodeLMTokenizerV4.init()();
  sub_2420EF74C(MEMORY[0x24BEE4AF8]);
  v0[24] = v6;
  v0[25] = &unk_25130A688;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeLMV4.hash(into:)(uint64_t a1)
{
  return sub_2420C9A30(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeLMTokenizerV4.hash(into:));
}

void static Catalog.LLM.Model.CodeLMV4.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C9C2C(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static Catalog.Tokenizer.CodeLMTokenizerV4.== infix(_:_:));
}

void Catalog.LLM.Model.CodeLMV4.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CAD50()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.CodeSafetyGuardrail.executionContexts.modify())()
{
  return nullsub_1;
}

void _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V4costAA11CostProfileVvg_0(uint64_t a1@<X8>)
{
  sub_2420C13F4(a1);
}

void Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420EF5CC();
  sub_242082E08(v2);
  v0[2] = v1 | 5;
  v0[3] = 0x800000024213A020;
  v0[4] = sub_2420D20F0((uint64_t)&unk_25131FB40);
  sub_2420797C0(&qword_254397808);
  v3 = sub_2420EF38C();
  *(_OWORD *)(v3 + 16) = xmmword_24214D280;
  v4 = sub_2420EF34C(v3, (uint64_t)"token-generation-inference");
  sub_2420EF4BC(v4);
  sub_2420EF5AC(MEMORY[0x24BEE4AF8]);
  v0[11] = v5;
  v0[12] = &unk_25131FAF0;
  sub_24209725C();
}

uint64_t _s12ModelCatalog0B0O3LLMO0A0O6CodeLMV9tokenizerAC9TokenizerO0D11LMTokenizerVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v1 + 64);
  v2 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  v8 = *(_QWORD *)(v1 + 112);
  v9 = *(_BYTE *)(v1 + 120);
  v10 = *(_BYTE *)(v1 + 121);
  v11 = *(_BYTE *)(v1 + 122);
  v12 = *(_QWORD *)(v1 + 128);
  v13 = *(_QWORD *)(v1 + 136);
  v14 = *(_BYTE *)(v1 + 144);
  v15 = *(_BYTE *)(v1 + 145);
  v17 = *(_QWORD *)(v1 + 152);
  v16 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 57) = v10;
  *(_BYTE *)(a1 + 58) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 81) = v15;
  *(_QWORD *)(a1 + 88) = v17;
  *(_QWORD *)(a1 + 96) = v16;
  swift_bridgeObjectRetain();
  sub_2420A1CA0();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  return swift_bridgeObjectRetain();
}

void Catalog.LLM.Model.CodeSafetyGuardrail.init()(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD000000000000030);
  sub_2420EF600((uint64_t)"mc.CodeSafetyGuardrail");
  *(_QWORD *)(a1 + 32) = sub_2420D20F0((uint64_t)&unk_2513095E0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 40) = 0x80000002421335A0;
  v3 = sub_2420EF36C(v2);
  sub_2420EFA68(v3, 240000);
  Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.init()();
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 168) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 176) = v4;
  *(_WORD *)(a1 + 184) = 22;
  *(_QWORD *)(a1 + 192) = v4;
  *(_QWORD *)(a1 + 200) = &unk_251309590;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.CodeSafetyGuardrail.hash(into:)(uint64_t a1)
{
  return sub_2420C9A30(a1, (void (*)(uint64_t))Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.hash(into:));
}

void static Catalog.LLM.Model.CodeSafetyGuardrail.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C9C2C(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.CodeSafetyGuardrail.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CAFB0()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.InstructServerBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.InstructServerTokenizer.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF5BC();
  sub_242082E08(v1 + 33);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131F948);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF9A0();
  *(_OWORD *)(v2 + 16) = xmmword_242145B80;
  *(_QWORD *)(v2 + 32) = v1;
  *(_QWORD *)(v2 + 40) = 0x80000002421335C0;
  v0[3] = sub_2420EF404(v2);
  v0[4] = 0;
  sub_2420EF9A8();
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v3;
  v0[10] = &unk_25131F8F8;
  sub_2420EF6E4();
}

uint64_t Catalog.LLM.Model.InstructServerBase.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.InstructServerTokenizer.hash(into:));
}

void Catalog.LLM.Model.InstructServerBase.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CB08C()
{
  sub_242099AA8();
}

void Catalog.LLM.Model.NLRouterBase.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.LLM.Model.NLRouterBase.executionContexts.setter(uint64_t a1)
{
  uint64_t v1;

  sub_242082FE4();
  *(_QWORD *)(v1 + 24) = a1;
  sub_24207F428();
}

uint64_t (*Catalog.LLM.Model.NLRouterBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.NLRouterTokenizer.init()(_QWORD *a1@<X8>)
{
  sub_2420EF464(39, 0x8000000242135030, (uint64_t)&unk_251320228, a1);
}

void sub_2420CB120(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 16) = sub_2420EFA34(a1, a2, a3, a4);
  sub_2420797C0(&qword_254397808);
  v6 = sub_2420EF38C();
  *(_OWORD *)(v6 + 16) = xmmword_24214D280;
  *(_QWORD *)(v6 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v6 + 40) = 0x80000002421335A0;
  *(_QWORD *)(v5 + 24) = sub_2420EF36C(v6);
  *(_QWORD *)(v5 + 32) = 10000;
  *(_WORD *)(v5 + 40) = 1;
  *(_BYTE *)(v5 + 42) = 0;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 56) = v7;
  *(_WORD *)(v5 + 64) = 256;
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = v4;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.NLRouterBase.dependentResourceIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.LLM.Model.NLRouterBase.preconditions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.LLM.Model.NLRouterBase.sideloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t Catalog.LLM.Model.NLRouterBase.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 153);
}

uint64_t Catalog.LLM.Model.NLRouterBase.tags.getter()
{
  return swift_bridgeObjectRetain();
}

void Catalog.LLM.Model.NLRouterBase.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_2420EF6D0();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251308460);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF69C(v3);
  Catalog.Tokenizer.NLRouterTokenizer.init()(v4);
  sub_2420EFB00(MEMORY[0x24BEE4AF8]);
  v0[20] = v5;
  v0[21] = &unk_251308410;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.NLRouterBase.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.NLRouterTokenizer.hash(into:));
}

void static Catalog.LLM.Model.NLRouterBase.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.NLRouterTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.NLRouterBase.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CB280(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Catalog.LLM.Model.NLRouterBase.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_2420CB2AC()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.PhotosMemoriesCreationBase.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.LLM.Model.PhotosMemoriesCreationBase.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.AFMTextInstructEnglish49k.hash(into:));
}

void Catalog.LLM.Model.PhotosMemoriesCreationBase.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CB2F4()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.SafetyGuardrailLite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420EF9F4();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131FD40);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v0[3] = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  v0[4] = 10000;
  sub_2420EF9A8();
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_25131FCC8;
  v0[10] = &unk_25131FCF0;
  sub_24209725C();
}

void Catalog.LLM.Model.SafetyGuardrailLite.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EF4F4();
  sub_242082E08(v1 + 17);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513097E0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EF69C(v3);
  Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.init()();
  sub_2420EFB00(MEMORY[0x24BEE4AF8]);
  v0[20] = &unk_251309768;
  v0[21] = &unk_251309790;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.SafetyGuardrailLite.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.hash(into:));
}

void static Catalog.LLM.Model.SafetyGuardrailLite.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.SafetyGuardrailLite.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CB464()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242082E08(0xD00000000000003DLL);
  a1[2] = sub_2420D20F0((uint64_t)&unk_25130A088);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  *(_QWORD *)(v2 + 32) = 2019650145;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v3 = sub_2420EF36C(v2);
  sub_2420EF8E4(v3);
  sub_2420EFD40(MEMORY[0x24BEE4AF8]);
  a1[20] = v4;
  a1[21] = &unk_25130A038;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.InstructServerTokenizer.hash(into:));
}

void static Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.InstructServerTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CB540()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.SummarizationTextSummarizerBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.Model.SummarizationTextSummarizerBase.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EFF4C();
  sub_242082E08(v1);
  v0[2] = sub_2420D20F0((uint64_t)&unk_251309CB0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"private-ml-client");
  sub_2420EF8E4(v3);
  sub_2420EFD40(MEMORY[0x24BEE4AF8]);
  v0[20] = v4;
  v0[21] = &unk_251309C60;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.SummarizationTextSummarizerBase.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.InstructServerTokenizer.hash(into:));
}

void static Catalog.LLM.Model.SummarizationTextSummarizerBase.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.InstructServerTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.SummarizationTextSummarizerBase.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CB608()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.Model.VisualGenerationQueryHandlingLite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_2420EF4F4();
  sub_242082E08(v1 + 23);
  v0[2] = sub_2420D20F0((uint64_t)&unk_2513200F0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v0[3] = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  v0[4] = 0;
  sub_2420EF9A8();
  sub_2420EF3F4(MEMORY[0x24BEE4AF8]);
  v0[9] = &unk_251320078;
  v0[10] = &unk_2513200A0;
  sub_24209725C();
}

uint64_t _s12ModelCatalog0B0O3LLMO0A0O21AFMTextInstruct3BBaseV9tokenizerAC9TokenizerO0D18InstructEnglish49kVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v1 + 48);
  v2 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_BYTE *)(v1 + 88);
  v8 = *(_BYTE *)(v1 + 89);
  v9 = *(_BYTE *)(v1 + 90);
  v10 = *(_QWORD *)(v1 + 96);
  v11 = *(_QWORD *)(v1 + 104);
  v12 = *(_BYTE *)(v1 + 112);
  v13 = *(_BYTE *)(v1 + 113);
  v15 = *(_QWORD *)(v1 + 120);
  v14 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 41) = v8;
  *(_BYTE *)(a1 + 42) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_QWORD *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v14;
  swift_bridgeObjectRetain();
  sub_2420A1CA0();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  return swift_bridgeObjectRetain();
}

void Catalog.LLM.Model.VisualGenerationQueryHandlingLite.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2420EFF88();
  sub_242082E08(v1);
  *(_QWORD *)(v0 + 16) = sub_2420D20F0((uint64_t)&unk_251309EB0);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"token-generation-inference");
  sub_2420EFE3C(v3, 0xE360u);
  *(_BYTE *)(v0 + 42) = 0;
  Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.init()();
  sub_2420EFB00(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 160) = &unk_251309E38;
  *(_QWORD *)(v0 + 168) = &unk_251309E60;
  sub_24209725C();
}

uint64_t Catalog.LLM.Model.VisualGenerationQueryHandlingLite.hash(into:)(uint64_t a1)
{
  return sub_2420C9FE4(a1, (void (*)(uint64_t))Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.hash(into:));
}

void static Catalog.LLM.Model.VisualGenerationQueryHandlingLite.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_2420C3D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.== infix(_:_:));
}

void Catalog.LLM.Model.VisualGenerationQueryHandlingLite.hashValue.getter()
{
  sub_242099A40();
}

void sub_2420CB810()
{
  sub_242099AA8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.AnswerSynthesisServer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.AnswerSynthesisServer.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000037;
  *(_QWORD *)(a1 + 8) = 0x80000002421342F0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.AnswerSynthesisServer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CB8A4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.InstructServerBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.InstructServerBase.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002BLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242134B80;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.InstructServerBase.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CB92C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.NLRouterBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.NLRouterBase.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000021;
  *(_QWORD *)(a1 + 8) = 0x8000000242135000;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.NLRouterBase.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CB9B4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.OpenEndedTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.OpenEndedTone.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000036;
  *(_QWORD *)(a1 + 8) = 0x8000000242135060;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.OpenEndedTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBA3C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000045;
  *(_QWORD *)(a1 + 8) = 0x80000002421352E0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBAC4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000048;
  *(_QWORD *)(a1 + 8) = 0x80000002421353E0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBB54()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000031;
  *(_QWORD *)(a1 + 8) = 0x8000000242135430;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBBDC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000044;
  *(_QWORD *)(a1 + 8) = 0x8000000242135610;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBC64()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000047;
  *(_QWORD *)(a1 + 8) = 0x8000000242135700;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBCF4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000004ALL;
  *(_QWORD *)(a1 + 8) = 0x8000000242135840;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBD7C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000004DLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242135940;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBE0C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000042;
  *(_QWORD *)(a1 + 8) = 0x8000000242135AB0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBE94()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000045;
  *(_QWORD *)(a1 + 8) = 0x8000000242135BA0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBF24()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.Planner.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.Planner.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002ELL;
  *(_QWORD *)(a1 + 8) = 0x8000000242135CF0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.Planner.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CBFB4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PlannerV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PlannerV2.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000031;
  *(_QWORD *)(a1 + 8) = 0x8000000242135DA0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PlannerV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC03C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.PlannerV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.PlannerV3.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000031;
  *(_QWORD *)(a1 + 8) = 0x8000000242135E60;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.PlannerV3.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC0C4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ResponseGeneration.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ResponseGeneration.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003ALL;
  *(_QWORD *)(a1 + 8) = 0x8000000242136060;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ResponseGeneration.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC14C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ResponseGenerationV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ResponseGenerationV2.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003DLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242136130;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ResponseGenerationV2.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC1D4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ResponseGenerationV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ResponseGenerationV3.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003DLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242136200;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ResponseGenerationV3.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC25C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000041;
  *(_QWORD *)(a1 + 8) = 0x80000002421364A0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC2E4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerBulletsTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerBulletsTransform.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000038;
  *(_QWORD *)(a1 + 8) = 0x8000000242136580;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerBulletsTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC36C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerConciseTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerConciseTone.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000033;
  *(_QWORD *)(a1 + 8) = 0x8000000242136640;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerConciseTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC3FC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerFriendlyTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerFriendlyTone.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000034;
  *(_QWORD *)(a1 + 8) = 0x8000000242136700;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerFriendlyTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC48C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerMagicRewrite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerMagicRewrite.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000034;
  *(_QWORD *)(a1 + 8) = 0x80000002421367C0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerMagicRewrite.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC51C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000041;
  *(_QWORD *)(a1 + 8) = 0x80000002421368A0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC5A4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000043;
  *(_QWORD *)(a1 + 8) = 0x8000000242136990;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC62C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerMailReplyQA.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerMailReplyQA.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000034;
  *(_QWORD *)(a1 + 8) = 0x8000000242136A60;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerMailReplyQA.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC6B4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerProfessionalTone.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerProfessionalTone.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000038;
  *(_QWORD *)(a1 + 8) = 0x8000000242136B30;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerProfessionalTone.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC73C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerProofreadingReview.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerProofreadingReview.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003ALL;
  *(_QWORD *)(a1 + 8) = 0x8000000242136C00;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerProofreadingReview.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC7C4()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerTablesTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerTablesTransform.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000037;
  *(_QWORD *)(a1 + 8) = 0x8000000242136CC0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerTablesTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC854()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003ALL;
  *(_QWORD *)(a1 + 8) = 0x8000000242136D90;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC8DC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.ServerTextSummarizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.ServerTextSummarizer.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000036;
  *(_QWORD *)(a1 + 8) = 0x8000000242136E50;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.ServerTextSummarizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC96C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000036;
  *(_QWORD *)(a1 + 8) = 0x8000000242137230;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CC9F4()
{
  sub_2420C2AE8();
}

void Catalog.ModelConfigurationReplacement.All.id.getter()
{
  sub_242097198();
  sub_24207F648();
  sub_24207F428();
}

void Catalog.ModelConfigurationReplacement.All.executionContexts.setter(uint64_t a1)
{
  uint64_t v1;

  sub_242082FE4();
  *(_QWORD *)(v1 + 24) = a1;
  sub_24207F428();
}

uint64_t (*Catalog.ModelConfigurationReplacement.All.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.ModelConfigurationReplacement.All.dependentResourceIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.ModelConfigurationReplacement.All.preconditions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Catalog.ModelConfigurationReplacement.All.sideloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t Catalog.ModelConfigurationReplacement.All.assetBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t Catalog.ModelConfigurationReplacement.All.platforms.getter()
{
  return swift_bridgeObjectRetain();
}

void Catalog.ModelConfigurationReplacement.All.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000027;
  *(_QWORD *)(a1 + 8) = 0x8000000242134180;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.ModelConfigurationReplacement.All.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CCAEC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Catalog.ModelConfigurationReplacement.All.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_2420CCB14()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Sanitizer.TextModerationLM.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Sanitizer.TextModerationLM.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2420EF4E4();
  sub_242082E08(v1 + 12);
  v0[2] = sub_2420D20F0((uint64_t)&unk_25131ED08);
  sub_2420797C0(&qword_254397808);
  v2 = sub_2420EF38C();
  *(_OWORD *)(v2 + 16) = xmmword_24214D280;
  v3 = sub_2420EF34C(v2, (uint64_t)"safety-generation-inference");
  sub_2420EF478(v3);
  sub_2420EF484(MEMORY[0x24BEE4AF8]);
  v0[9] = v4;
  v0[10] = &unk_25131ECB8;
  sub_24209725C();
}

void Catalog.Sanitizer.TextModerationLM.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CCBCC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000035;
  *(_QWORD *)(a1 + 8) = 0x8000000242133720;
  *(_QWORD *)(a1 + 16) = 0xD000000000000024;
  *(_QWORD *)(a1 + 24) = 0x800000024213A060;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 32) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 40) = v1;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 55) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 64) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 72) = v2;
  *(_WORD *)(a1 + 80) = 256;
  sub_2420EFD84(a1);
}

void Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CCC70()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000039;
  *(_QWORD *)(a1 + 8) = 0x8000000242134CD0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CCD00()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000036;
  *(_QWORD *)(a1 + 8) = 0x8000000242134D50;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CCD90()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003BLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242134DD0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CCE20()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.MailReplySnippetInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.MailReplySnippetInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000031;
  *(_QWORD *)(a1 + 8) = 0x8000000242134E50;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.MailReplySnippetInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CCEB0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000031;
  *(_QWORD *)(a1 + 8) = 0x8000000242134F50;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CCF40()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000033;
  *(_QWORD *)(a1 + 8) = 0x8000000242135470;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CCFD0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003BLL;
  *(_QWORD *)(a1 + 8) = 0x80000002421354F0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD060()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003ALL;
  *(_QWORD *)(a1 + 8) = 0x8000000242135990;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD0F0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000039;
  *(_QWORD *)(a1 + 8) = 0x8000000242135BF0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD180()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000031;
  *(_QWORD *)(a1 + 8) = 0x8000000242136F70;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD210()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000037;
  *(_QWORD *)(a1 + 8) = 0x8000000242136FF0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD2A0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000037;
  *(_QWORD *)(a1 + 8) = 0x8000000242137070;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD330()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003BLL;
  *(_QWORD *)(a1 + 8) = 0x80000002421370F0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD3C0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003ALL;
  *(_QWORD *)(a1 + 8) = 0x8000000242137170;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD450()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000035;
  *(_QWORD *)(a1 + 8) = 0x8000000242137460;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD4E0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000030;
  *(_QWORD *)(a1 + 8) = 0x8000000242137510;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD568()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002BLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242137590;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD5F0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002CLL;
  *(_QWORD *)(a1 + 8) = 0x80000002421375F0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD678()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002CLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242137650;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD700()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002ELL;
  *(_QWORD *)(a1 + 8) = 0x80000002421376B0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD788()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000030;
  *(_QWORD *)(a1 + 8) = 0x8000000242137710;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD810()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000032;
  *(_QWORD *)(a1 + 8) = 0x8000000242137790;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD898()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002FLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242137810;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD920()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000032;
  *(_QWORD *)(a1 + 8) = 0x8000000242137880;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CD9A8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000036;
  *(_QWORD *)(a1 + 8) = 0x8000000242133760;
  *(_QWORD *)(a1 + 16) = 0xD000000000000025;
  *(_QWORD *)(a1 + 24) = 0x800000024213A090;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 32) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 40) = v1;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 55) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 64) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 72) = v2;
  *(_WORD *)(a1 + 80) = 256;
  sub_2420EFD84(a1);
}

void _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V2eeoiySbAG_AGtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;

  sub_2420EFD1C(a1);
  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_QWORD *)(v2 + 32);
  v58 = *(_QWORD *)(v2 + 48);
  v57 = *(unsigned __int8 *)(v2 + 56);
  v56 = *(unsigned __int8 *)(v2 + 57);
  v54 = *(unsigned __int8 *)(v2 + 58);
  v52 = *(_QWORD **)(v2 + 64);
  v50 = *(_QWORD *)(v2 + 72);
  HIDWORD(v48) = *(unsigned __int8 *)(v2 + 80);
  HIDWORD(v46) = *(unsigned __int8 *)(v2 + 81);
  sub_2420EFAE8();
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  v10 = *(_QWORD *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 48);
  v12 = *(unsigned __int8 *)(v7 + 56);
  v55 = *(unsigned __int8 *)(v7 + 57);
  v53 = *(unsigned __int8 *)(v7 + 58);
  v51 = *(_QWORD **)(v7 + 64);
  v49 = *(_QWORD *)(v7 + 72);
  LODWORD(v48) = *(unsigned __int8 *)(v7 + 80);
  LODWORD(v46) = *(unsigned __int8 *)(v7 + 81);
  v15 = v13 == v14 && v5 == v6;
  v42 = *(_QWORD *)(v7 + 88);
  v36 = *(_QWORD *)(v7 + 96);
  if ((v15 || (sub_242079EB8() & 1) != 0)
    && (v1 == v8 ? (v16 = v3 == v9) : (v16 = 0),
        (v16 || (sub_242079EB8() & 1) != 0)
     && (sub_2420C22E4(v4, v10) & 1) != 0
     && (v17 = sub_2420EFE78(), (v17 & 1) != 0)
     && v58 == v11
     && ((v57 ^ v12) & 1) == 0
     && ((v56 ^ v55) & 1) == 0
     && ((v54 ^ v53) & 1) == 0
     && (sub_2420EFCD4(v17, v18, v19, v20, v21, v22, v23, v24, v36, v39, v42, v44, v46, v48, v49, v50, v51, v52),
         (v25 & 1) != 0)
     && (sub_2420EFCCC(), (v26 & 1) != 0)
     && (sub_2420EFA10(), (v35 & 1) == 0)
     && ((HIDWORD(v47) ^ v47) & 1) == 0
     && sub_2420EFCC4(v27, v28, v29, v30, v31, v32, v33, v34, v37, v40, v43, v45)))
  {
    sub_2420EF730(v41, v38);
  }
  else
  {
    sub_2420EF8B0();
  }
}

void Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CDBC8()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003ALL;
  *(_QWORD *)(a1 + 8) = 0x8000000242134D10;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CDC58()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000037;
  *(_QWORD *)(a1 + 8) = 0x8000000242134D90;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CDCE8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003CLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242134E10;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CDD78()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000032;
  *(_QWORD *)(a1 + 8) = 0x8000000242134E90;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CDE08()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000032;
  *(_QWORD *)(a1 + 8) = 0x8000000242134F90;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CDE98()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000034;
  *(_QWORD *)(a1 + 8) = 0x80000002421354B0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CDF28()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003CLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242135530;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CDFB8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000037;
  *(_QWORD *)(a1 + 8) = 0x8000000242135750;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE048()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003BLL;
  *(_QWORD *)(a1 + 8) = 0x80000002421359D0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE0D8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003ALL;
  *(_QWORD *)(a1 + 8) = 0x8000000242135C30;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE168()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000032;
  *(_QWORD *)(a1 + 8) = 0x8000000242136FB0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE1F8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000038;
  *(_QWORD *)(a1 + 8) = 0x8000000242137030;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE288()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000038;
  *(_QWORD *)(a1 + 8) = 0x80000002421370B0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE318()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003CLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242137130;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE3A8()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000003BLL;
  *(_QWORD *)(a1 + 8) = 0x80000002421371B0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE438()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000031;
  *(_QWORD *)(a1 + 8) = 0x8000000242137550;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE4C0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002CLL;
  *(_QWORD *)(a1 + 8) = 0x80000002421375C0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE548()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002DLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242137620;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE5D0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002DLL;
  *(_QWORD *)(a1 + 8) = 0x8000000242137680;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE658()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD00000000000002FLL;
  *(_QWORD *)(a1 + 8) = 0x80000002421376E0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE6E0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000031;
  *(_QWORD *)(a1 + 8) = 0x8000000242137750;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE768()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000033;
  *(_QWORD *)(a1 + 8) = 0x80000002421377D0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE7F0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000030;
  *(_QWORD *)(a1 + 8) = 0x8000000242137840;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CE878()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0xD000000000000033;
  *(_QWORD *)(a1 + 8) = 0x80000002421378C0;
  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_2420EF3B4(a1);
}

void _s12ModelCatalog0B0O9DiffusionO7AdapterO9AnimationV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  int v49;
  int v50;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(unsigned __int8 *)(a1 + 40);
  v50 = *(unsigned __int8 *)(a1 + 41);
  v49 = *(unsigned __int8 *)(a1 + 42);
  v46 = *(_QWORD *)(a1 + 56);
  HIDWORD(v43) = *(unsigned __int8 *)(a1 + 64);
  HIDWORD(v42) = *(unsigned __int8 *)(a1 + 65);
  v40 = *(_QWORD *)(a1 + 72);
  v36 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(unsigned __int8 *)(a2 + 40);
  v8 = *(unsigned __int8 *)(a2 + 41);
  v9 = *(unsigned __int8 *)(a2 + 42);
  v47 = *(_QWORD **)(a2 + 48);
  v48 = *(_QWORD **)(a1 + 48);
  v45 = *(_QWORD *)(a2 + 56);
  LODWORD(v43) = *(unsigned __int8 *)(a2 + 64);
  LODWORD(v42) = *(unsigned __int8 *)(a2 + 65);
  v10 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  v38 = *(_QWORD *)(a2 + 72);
  v34 = *(_QWORD *)(a2 + 80);
  if ((v10 || (sub_242079EB8() & 1) != 0)
    && (sub_2420C22E4(v2, v5) & 1) != 0
    && (v11 = sub_2420EFE78(), (v11 & 1) != 0)
    && v3 == v6
    && ((v4 ^ v7) & 1) == 0
    && ((v50 ^ v8) & 1) == 0
    && ((v49 ^ v9) & 1) == 0
    && (sub_2420EFE0C(v11, v12, v13, v14, v15, v16, v17, v18, v32, v34, v36, v38, v40, v42, v43, v45, v46, v47, v48),
        (v19 & 1) != 0)
    && (sub_2420EFDFC(), (v20 & 1) != 0)
    && ((HIDWORD(v44) ^ v44) & 1) == 0
    && (sub_2420EFA10(), (v29 & 1) == 0)
    && sub_2420EFDF4(v21, v22, v23, v24, v25, v26, v27, v28, v33, v35, v37, v39, v41))
  {
    sub_2420EFBFC();
    sub_2420AD3F0(v30, v31);
  }
  else
  {
    sub_2420EFBFC();
  }
}

void Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEA64()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.AFMTextInstructEnglish49k.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.AFMTextInstructEnglish49k.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEA98()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.CodeLMLargeV1Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMLargeV1Tokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEACC()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.CodeLMLargeV2Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMLargeV2Tokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEB00()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.CodeLMLargeV3Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMLargeV3Tokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEB34()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEB68()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.CodeLMSmallV1Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMSmallV1Tokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEB9C()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.CodeLMSmallV2Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMSmallV2Tokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEBD0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.CodeLMSmallV3Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMSmallV3Tokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEC04()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizer.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CEC38()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizerExperimental.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizerExperimental.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CEC6C()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizerV2.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizerV2.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CECA0()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizerV3.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizerV3.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CECD4()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizerV4.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMTokenizerV4.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CED08()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CED3C()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V4hash4intoys6HasherVz_tF_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420A1A28();
  v2 = v1;
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[8];
  sub_2420C180C();
  sub_2421327D4();
  sub_242097400();
  sub_2420A1CA0();
  sub_2421327D4();
  swift_bridgeObjectRelease();
  sub_242097744();
  sub_2420D2568(v2, v3);
  sub_24207F78C();
  sub_242079ED8();
  sub_2420D2320(v2, v4);
  sub_242079F20();
  sub_242132D80();
  sub_2420EFD94();
  sub_2420EFD8C();
  sub_2420EFA50();
  sub_242079F18();
  sub_2420BA1EC(v2, v5);
  sub_242079EE0();
  sub_2420977E0();
  sub_2420BA150();
  sub_242097268();
  sub_2420EFC48();
  sub_2420EFA48();
  sub_2420A1CA0();
  sub_2420B9FB8();
  swift_bridgeObjectRelease();
  sub_2420A1CA0();
  sub_2420B9EC4();
  return sub_2420EF75C();
}

void Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.hashValue.getter()
{
  sub_2420C7104();
}

void sub_2420CEEAC()
{
  sub_2420C71B8();
}

uint64_t (*Catalog.Tokenizer.InstructServerTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.InstructServerTokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEEE0()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.NLRouterTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.NLRouterTokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEF14()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CEF48()
{
  sub_2420C2AE8();
}

uint64_t (*Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t _s12ModelCatalog0B0O9DiffusionO7AdapterO9AnimationV4hash4intoys6HasherVz_tF_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2420C0C7C();
  v2 = v1;
  v3 = v0[2];
  v4 = v0[3];
  sub_2420EFB64();
  v5 = v0[6];
  sub_242079ED8();
  sub_2421327D4();
  sub_242079F20();
  sub_2420C0B64();
  sub_2420D2568(v2, v3);
  sub_242097578();
  sub_2420C13B0();
  sub_2420D2320(v2, v4);
  sub_2420A1B60();
  sub_242132D80();
  sub_2420EFD94();
  sub_2420EFD8C();
  sub_2420EFA50();
  sub_242079F18();
  sub_2420BA1EC(v2, v5);
  sub_242079EE0();
  sub_2420977E0();
  sub_2420BA150();
  sub_242097268();
  sub_2420EFC48();
  sub_2420EFA48();
  sub_242097744();
  sub_2420B9FB8();
  sub_24207F78C();
  sub_2420A1CA0();
  sub_2420B9EC4();
  return swift_bridgeObjectRelease();
}

void Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.hashValue.getter()
{
  sub_2420C2AA8();
}

void sub_2420CF08C()
{
  sub_2420C2AE8();
}

void sub_2420CF098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  sub_2420797C0(&qword_254399938);
  v0 = sub_24207F538();
  *(_OWORD *)(v0 + 16) = xmmword_242150DA0;
  *(_QWORD *)(v0 + 56) = &type metadata for Catalog.Diffusion.Adapter.Animation;
  *(_QWORD *)(v0 + 64) = sub_2420D2844();
  *(_QWORD *)(v0 + 32) = sub_2420EF380();
  Catalog.Diffusion.Adapter.Animation.init()();
  *(_QWORD *)(v0 + 96) = &type metadata for Catalog.Diffusion.Adapter.Emoji;
  *(_QWORD *)(v0 + 104) = sub_2420D29D0();
  *(_QWORD *)(v0 + 72) = sub_2420EF380();
  Catalog.Diffusion.Adapter.Emoji.init()();
  *(_QWORD *)(v0 + 136) = &type metadata for Catalog.Diffusion.Adapter.Illustration;
  *(_QWORD *)(v0 + 144) = sub_2420D2B5C();
  *(_QWORD *)(v0 + 112) = sub_2420EF380();
  Catalog.Diffusion.Adapter.Illustration.init()();
  *(_QWORD *)(v0 + 176) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedAnimation;
  *(_QWORD *)(v0 + 184) = sub_2420D2CE8();
  *(_QWORD *)(v0 + 152) = sub_2420EF380();
  Catalog.Diffusion.Adapter.PersonalizedAnimation.init()();
  *(_QWORD *)(v0 + 216) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedEmoji;
  *(_QWORD *)(v0 + 224) = sub_2420D2E74();
  *(_QWORD *)(v0 + 192) = sub_2420EF380();
  Catalog.Diffusion.Adapter.PersonalizedEmoji.init()();
  *(_QWORD *)(v0 + 256) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedIllustration;
  *(_QWORD *)(v0 + 264) = sub_2420D3000();
  *(_QWORD *)(v0 + 232) = sub_2420EF380();
  Catalog.Diffusion.Adapter.PersonalizedIllustration.init()();
  *(_QWORD *)(v0 + 296) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedScribble;
  *(_QWORD *)(v0 + 304) = sub_2420D318C();
  *(_QWORD *)(v0 + 272) = sub_2420EF380();
  Catalog.Diffusion.Adapter.PersonalizedScribble.init()();
  *(_QWORD *)(v0 + 336) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedSketch;
  *(_QWORD *)(v0 + 344) = sub_2420D3318();
  *(_QWORD *)(v0 + 312) = sub_2420EF380();
  Catalog.Diffusion.Adapter.PersonalizedSketch.init()();
  *(_QWORD *)(v0 + 376) = &type metadata for Catalog.Diffusion.Adapter.Refiner;
  *(_QWORD *)(v0 + 384) = sub_2420D34A4();
  *(_QWORD *)(v0 + 352) = sub_2420EF380();
  Catalog.Diffusion.Adapter.Refiner.init()();
  *(_QWORD *)(v0 + 416) = &type metadata for Catalog.Diffusion.Adapter.Scribble;
  *(_QWORD *)(v0 + 424) = sub_2420D3630();
  *(_QWORD *)(v0 + 392) = sub_2420EF380();
  Catalog.Diffusion.Adapter.Scribble.init()();
  *(_QWORD *)(v0 + 456) = &type metadata for Catalog.Diffusion.Adapter.Sketch;
  *(_QWORD *)(v0 + 464) = sub_2420D37BC();
  *(_QWORD *)(v0 + 432) = sub_2420EF380();
  Catalog.Diffusion.Adapter.Sketch.init()();
  *(_QWORD *)(v0 + 496) = &type metadata for Catalog.Diffusion.Adapter.SkinToneEmoji;
  *(_QWORD *)(v0 + 504) = sub_2420D3948();
  *(_QWORD *)(v0 + 472) = sub_2420EF380();
  Catalog.Diffusion.Adapter.SkinToneEmoji.init()();
  *(_QWORD *)(v0 + 536) = &type metadata for Catalog.Diffusion.Model.VisualGenerationBase;
  *(_QWORD *)(v0 + 544) = sub_2420D3AD4();
  *(_QWORD *)(v0 + 512) = sub_2420EF380();
  Catalog.Diffusion.Model.VisualGenerationBase.init()();
  *(_QWORD *)(v0 + 576) = &type metadata for Catalog.DisabledUseCaseList.All;
  *(_QWORD *)(v0 + 584) = sub_2420D3C00();
  v1 = sub_2420EF380();
  *(_QWORD *)(v0 + 552) = v1;
  Catalog.DisabledUseCaseList.All.init()(v1 + 16);
  *(_QWORD *)(v0 + 616) = &type metadata for Catalog.GenerativeFunctionOverrides.All;
  *(_QWORD *)(v0 + 624) = sub_2420D3D2C();
  v2 = sub_2420EF380();
  *(_QWORD *)(v0 + 592) = v2;
  Catalog.GenerativeFunctionOverrides.All.init()(v2 + 16);
  *(_QWORD *)(v0 + 656) = &type metadata for Catalog.HandwritingSynthesizer.HandwritingSynthesis;
  *(_QWORD *)(v0 + 664) = sub_2420D3E58();
  v3 = sub_2420EF380();
  *(_QWORD *)(v0 + 632) = v3;
  Catalog.HandwritingSynthesizer.HandwritingSynthesis.init()(v3 + 16);
  *(_QWORD *)(v0 + 696) = &type metadata for Catalog.ImageFilter.Conditioning;
  *(_QWORD *)(v0 + 704) = sub_2420D3F84();
  v4 = sub_2420EF380();
  *(_QWORD *)(v0 + 672) = v4;
  Catalog.ImageFilter.Conditioning.init()(v4 + 16);
  *(_QWORD *)(v0 + 736) = &type metadata for Catalog.ImageFilter.Face2Word;
  *(_QWORD *)(v0 + 744) = sub_2420D40B0();
  v5 = sub_2420EF380();
  *(_QWORD *)(v0 + 712) = v5;
  Catalog.ImageFilter.Face2Word.init()(v5 + 16);
  *(_QWORD *)(v0 + 776) = &type metadata for Catalog.ImageFilter.HolisticallyNestedEdgeDetector;
  *(_QWORD *)(v0 + 784) = sub_2420D41DC();
  v6 = sub_2420EF380();
  *(_QWORD *)(v0 + 752) = v6;
  Catalog.ImageFilter.HolisticallyNestedEdgeDetector.init()(v6 + 16);
  *(_QWORD *)(v0 + 816) = &type metadata for Catalog.ImageInpainter.PhotosMagicClean;
  *(_QWORD *)(v0 + 824) = sub_2420D4308();
  v7 = sub_2420EF380();
  *(_QWORD *)(v0 + 792) = v7;
  Catalog.ImageInpainter.PhotosMagicClean.init()(v7 + 16);
  *(_QWORD *)(v0 + 856) = &type metadata for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp;
  *(_QWORD *)(v0 + 864) = sub_2420D4434();
  v8 = sub_24207F538();
  *(_QWORD *)(v0 + 832) = v8;
  Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.init()(v8 + 16);
  *(_QWORD *)(v0 + 896) = &type metadata for Catalog.ImageScaler.GenerativePlaygroundsUpscaler;
  *(_QWORD *)(v0 + 904) = sub_2420D4560();
  v9 = sub_2420EF380();
  *(_QWORD *)(v0 + 872) = v9;
  Catalog.ImageScaler.GenerativePlaygroundsUpscaler.init()(v9 + 16);
  *(_QWORD *)(v0 + 936) = &type metadata for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter;
  *(_QWORD *)(v0 + 944) = sub_2420D468C();
  v10 = sub_2420EF380();
  *(_QWORD *)(v0 + 912) = v10;
  Catalog.ImageSegmenter.ForegroundBackgroundSegmenter.init()(v10 + 16);
  *(_QWORD *)(v0 + 976) = &type metadata for Catalog.LLM.Adapter.AnswerSynthesis;
  *(_QWORD *)(v0 + 984) = sub_2420D48B8();
  *(_QWORD *)(v0 + 952) = sub_24207F538();
  Catalog.LLM.Adapter.AnswerSynthesis.init()();
  *(_QWORD *)(v0 + 1016) = &type metadata for Catalog.LLM.Adapter.AnswerSynthesisServer;
  *(_QWORD *)(v0 + 1024) = sub_2420D4AE4();
  v11 = sub_24207F538();
  *(_QWORD *)(v0 + 992) = v11;
  Catalog.LLM.Adapter.AnswerSynthesisServer.init()((_QWORD *)(v11 + 16));
  *(_QWORD *)(v0 + 1056) = &type metadata for Catalog.LLM.Adapter.AutonamingMessages;
  *(_QWORD *)(v0 + 1064) = sub_2420D4CD0();
  *(_QWORD *)(v0 + 1032) = sub_24207F538();
  Catalog.LLM.Adapter.AutonamingMessages.init()();
  *(_QWORD *)(v0 + 1096) = &type metadata for Catalog.LLM.Adapter.BaseAdapter;
  *(_QWORD *)(v0 + 1104) = sub_2420D4EBC();
  v12 = sub_24207F538();
  *(_QWORD *)(v0 + 1072) = v12;
  Catalog.LLM.Adapter.BaseAdapter.init()((_QWORD *)(v12 + 16));
  *(_QWORD *)(v0 + 1136) = &type metadata for Catalog.LLM.Adapter.BulletsTransform;
  *(_QWORD *)(v0 + 1144) = sub_2420D50A8();
  *(_QWORD *)(v0 + 1112) = sub_24207F538();
  Catalog.LLM.Adapter.BulletsTransform.init()();
  *(_QWORD *)(v0 + 1176) = &type metadata for Catalog.LLM.Adapter.ConciseTone;
  *(_QWORD *)(v0 + 1184) = sub_2420D5294();
  *(_QWORD *)(v0 + 1152) = sub_24207F538();
  Catalog.LLM.Adapter.ConciseTone.init()();
  *(_QWORD *)(v0 + 1216) = &type metadata for Catalog.LLM.Adapter.FactualConsistencyClassifier;
  *(_QWORD *)(v0 + 1224) = sub_2420D5480();
  *(_QWORD *)(v0 + 1192) = sub_24207F538();
  Catalog.LLM.Adapter.FactualConsistencyClassifier.init()();
  *(_QWORD *)(v0 + 1256) = &type metadata for Catalog.LLM.Adapter.FriendlyTone;
  *(_QWORD *)(v0 + 1264) = sub_2420D566C();
  *(_QWORD *)(v0 + 1232) = sub_24207F538();
  Catalog.LLM.Adapter.FriendlyTone.init()();
  *(_QWORD *)(v0 + 1296) = &type metadata for Catalog.LLM.Adapter.MagicRewrite;
  *(_QWORD *)(v0 + 1304) = sub_2420D5858();
  *(_QWORD *)(v0 + 1272) = sub_24207F538();
  Catalog.LLM.Adapter.MagicRewrite.init()();
  *(_QWORD *)(v0 + 1336) = &type metadata for Catalog.LLM.Adapter.MailReply;
  *(_QWORD *)(v0 + 1344) = sub_2420D5A44();
  *(_QWORD *)(v0 + 1312) = sub_24207F538();
  Catalog.LLM.Adapter.MailReply.init()();
  *(_QWORD *)(v0 + 1376) = &type metadata for Catalog.LLM.Adapter.MessagesReply;
  *(_QWORD *)(v0 + 1384) = sub_2420D5C30();
  *(_QWORD *)(v0 + 1352) = sub_24207F538();
  Catalog.LLM.Adapter.MessagesReply.init()();
  *(_QWORD *)(v0 + 1416) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration;
  *(_QWORD *)(v0 + 1424) = sub_2420D5E5C();
  *(_QWORD *)(v0 + 1392) = sub_24207F538();
  Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration.init()();
  *(_QWORD *)(v0 + 1456) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2;
  *(_QWORD *)(v0 + 1464) = sub_2420D6048();
  *(_QWORD *)(v0 + 1432) = sub_24207F538();
  Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2.init()();
  *(_QWORD *)(v0 + 1496) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits;
  *(_QWORD *)(v0 + 1504) = sub_2420D6234();
  *(_QWORD *)(v0 + 1472) = sub_24207F538();
  Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits.init()();
  *(_QWORD *)(v0 + 1536) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2;
  *(_QWORD *)(v0 + 1544) = sub_2420D6420();
  *(_QWORD *)(v0 + 1512) = sub_24207F538();
  Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2.init()();
  *(_QWORD *)(v0 + 1576) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding;
  *(_QWORD *)(v0 + 1584) = sub_2420D660C();
  *(_QWORD *)(v0 + 1552) = sub_24207F538();
  Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding.init()();
  *(_QWORD *)(v0 + 1616) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2;
  *(_QWORD *)(v0 + 1624) = sub_2420D67F8();
  *(_QWORD *)(v0 + 1592) = sub_24207F538();
  Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2.init()();
  *(_QWORD *)(v0 + 1656) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller;
  *(_QWORD *)(v0 + 1664) = sub_2420D69E4();
  *(_QWORD *)(v0 + 1632) = sub_24207F538();
  Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller.init()();
  *(_QWORD *)(v0 + 1696) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2;
  *(_QWORD *)(v0 + 1704) = sub_2420D6BD0();
  *(_QWORD *)(v0 + 1672) = sub_24207F538();
  Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2.init()();
  *(_QWORD *)(v0 + 1736) = &type metadata for Catalog.LLM.Adapter.Planner;
  *(_QWORD *)(v0 + 1744) = sub_2420D6DBC();
  *(_QWORD *)(v0 + 1712) = sub_24207F538();
  Catalog.LLM.Adapter.Planner.init()();
  *(_QWORD *)(v0 + 1776) = &type metadata for Catalog.LLM.Adapter.PlannerV2;
  *(_QWORD *)(v0 + 1784) = sub_2420D6FA8();
  v13 = sub_24207F538();
  *(_QWORD *)(v0 + 1752) = v13;
  Catalog.LLM.Adapter.PlannerV2.init()((_QWORD *)(v13 + 16));
  *(_QWORD *)(v0 + 1816) = &type metadata for Catalog.LLM.Adapter.PlannerV3;
  *(_QWORD *)(v0 + 1824) = sub_2420D7194();
  v14 = sub_24207F538();
  *(_QWORD *)(v0 + 1792) = v14;
  Catalog.LLM.Adapter.PlannerV3.init()((_QWORD *)(v14 + 16));
  *(_QWORD *)(v0 + 1856) = &type metadata for Catalog.LLM.Adapter.ProfessionalTone;
  *(_QWORD *)(v0 + 1864) = sub_2420D7380();
  *(_QWORD *)(v0 + 1832) = sub_24207F538();
  Catalog.LLM.Adapter.ProfessionalTone.init()();
  *(_QWORD *)(v0 + 1896) = &type metadata for Catalog.LLM.Adapter.ProofreadingReview;
  *(_QWORD *)(v0 + 1904) = sub_2420D756C();
  *(_QWORD *)(v0 + 1872) = sub_24207F538();
  Catalog.LLM.Adapter.ProofreadingReview.init()();
  *(_QWORD *)(v0 + 1936) = &type metadata for Catalog.LLM.Adapter.ResponseGeneration;
  *(_QWORD *)(v0 + 1944) = sub_2420D7758();
  v15 = sub_24207F538();
  *(_QWORD *)(v0 + 1912) = v15;
  Catalog.LLM.Adapter.ResponseGeneration.init()((_QWORD *)(v15 + 16));
  *(_QWORD *)(v0 + 1976) = &type metadata for Catalog.LLM.Adapter.ResponseGenerationV2;
  *(_QWORD *)(v0 + 1984) = sub_2420D7944();
  v16 = sub_24207F538();
  *(_QWORD *)(v0 + 1952) = v16;
  Catalog.LLM.Adapter.ResponseGenerationV2.init()((_QWORD *)(v16 + 16));
  *(_QWORD *)(v0 + 2016) = &type metadata for Catalog.LLM.Adapter.ResponseGenerationV3;
  *(_QWORD *)(v0 + 2024) = sub_2420D7B30();
  v17 = sub_24207F538();
  *(_QWORD *)(v0 + 1992) = v17;
  Catalog.LLM.Adapter.ResponseGenerationV3.init()((_QWORD *)(v17 + 16));
  *(_QWORD *)(v0 + 2056) = &type metadata for Catalog.LLM.Adapter.SafetyGuardrail;
  *(_QWORD *)(v0 + 2064) = sub_2420D7D1C();
  *(_QWORD *)(v0 + 2032) = sub_24207F538();
  Catalog.LLM.Adapter.SafetyGuardrail.init()();
  *(_QWORD *)(v0 + 2096) = &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice;
  *(_QWORD *)(v0 + 2104) = sub_2420D7F08();
  *(_QWORD *)(v0 + 2072) = sub_24207F538();
  Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice.init()();
  *(_QWORD *)(v0 + 2136) = &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingServer;
  *(_QWORD *)(v0 + 2144) = sub_2420D80F4();
  *(_QWORD *)(v0 + 2112) = sub_24207F538();
  Catalog.LLM.Adapter.SearchQueryUnderstandingServer.init()();
  *(_QWORD *)(v0 + 2176) = &type metadata for Catalog.LLM.Adapter.ServerBulletsTransform;
  *(_QWORD *)(v0 + 2184) = sub_2420D82E0();
  *(_QWORD *)(v0 + 2152) = sub_24207F538();
  Catalog.LLM.Adapter.ServerBulletsTransform.init()();
  *(_QWORD *)(v0 + 2216) = &type metadata for Catalog.LLM.Adapter.ServerConciseTone;
  *(_QWORD *)(v0 + 2224) = sub_2420D84CC();
  v18 = sub_24207F538();
  *(_QWORD *)(v0 + 2192) = v18;
  Catalog.LLM.Adapter.ServerConciseTone.init()((_QWORD *)(v18 + 16));
  *(_QWORD *)(v0 + 2256) = &type metadata for Catalog.LLM.Adapter.ServerFriendlyTone;
  *(_QWORD *)(v0 + 2264) = sub_2420D86B8();
  *(_QWORD *)(v0 + 2232) = sub_24207F538();
  Catalog.LLM.Adapter.ServerFriendlyTone.init()();
  *(_QWORD *)(v0 + 2296) = &type metadata for Catalog.LLM.Adapter.ServerMagicRewrite;
  *(_QWORD *)(v0 + 2304) = sub_2420D88A4();
  *(_QWORD *)(v0 + 2272) = sub_24207F538();
  Catalog.LLM.Adapter.ServerMagicRewrite.init()();
  *(_QWORD *)(v0 + 2336) = &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic;
  *(_QWORD *)(v0 + 2344) = sub_2420D8A90();
  *(_QWORD *)(v0 + 2312) = sub_24207F538();
  Catalog.LLM.Adapter.ServerMailReplyLongFormBasic.init()();
  *(_QWORD *)(v0 + 2376) = &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite;
  *(_QWORD *)(v0 + 2384) = sub_2420D8C7C();
  *(_QWORD *)(v0 + 2352) = sub_24207F538();
  Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite.init()();
  *(_QWORD *)(v0 + 2416) = &type metadata for Catalog.LLM.Adapter.ServerMailReplyQA;
  *(_QWORD *)(v0 + 2424) = sub_2420D8E68();
  *(_QWORD *)(v0 + 2392) = sub_24207F538();
  Catalog.LLM.Adapter.ServerMailReplyQA.init()();
  *(_QWORD *)(v0 + 2456) = &type metadata for Catalog.LLM.Adapter.ServerProfessionalTone;
  *(_QWORD *)(v0 + 2464) = sub_2420D9054();
  *(_QWORD *)(v0 + 2432) = sub_24207F538();
  Catalog.LLM.Adapter.ServerProfessionalTone.init()();
  *(_QWORD *)(v0 + 2496) = &type metadata for Catalog.LLM.Adapter.ServerProofreadingReview;
  *(_QWORD *)(v0 + 2504) = sub_2420D9240();
  *(_QWORD *)(v0 + 2472) = sub_24207F538();
  Catalog.LLM.Adapter.ServerProofreadingReview.init()();
  *(_QWORD *)(v0 + 2536) = &type metadata for Catalog.LLM.Adapter.ServerTablesTransform;
  *(_QWORD *)(v0 + 2544) = sub_2420D942C();
  v19 = sub_24207F538();
  *(_QWORD *)(v0 + 2512) = v19;
  Catalog.LLM.Adapter.ServerTablesTransform.init()((_QWORD *)(v19 + 16));
  *(_QWORD *)(v0 + 2576) = &type metadata for Catalog.LLM.Adapter.ServerTakeawaysTransform;
  *(_QWORD *)(v0 + 2584) = sub_2420D9618();
  *(_QWORD *)(v0 + 2552) = sub_24207F538();
  Catalog.LLM.Adapter.ServerTakeawaysTransform.init()();
  *(_QWORD *)(v0 + 2616) = &type metadata for Catalog.LLM.Adapter.ServerTextSummarizer;
  *(_QWORD *)(v0 + 2624) = sub_2420D9804();
  *(_QWORD *)(v0 + 2592) = sub_24207F538();
  Catalog.LLM.Adapter.ServerTextSummarizer.init()();
  *(_QWORD *)(v0 + 2656) = &type metadata for Catalog.LLM.Adapter.Summarization;
  *(_QWORD *)(v0 + 2664) = sub_2420D99F0();
  *(_QWORD *)(v0 + 2632) = sub_24207F538();
  Catalog.LLM.Adapter.Summarization.init()();
  *(_QWORD *)(v0 + 2696) = &type metadata for Catalog.LLM.Adapter.TablesTransform;
  *(_QWORD *)(v0 + 2704) = sub_2420D9BDC();
  *(_QWORD *)(v0 + 2672) = sub_24207F538();
  Catalog.LLM.Adapter.TablesTransform.init()();
  *(_QWORD *)(v0 + 2736) = &type metadata for Catalog.LLM.Adapter.TakeawaysTransform;
  *(_QWORD *)(v0 + 2744) = sub_2420D9DC8();
  *(_QWORD *)(v0 + 2712) = sub_24207F538();
  Catalog.LLM.Adapter.TakeawaysTransform.init()();
  *(_QWORD *)(v0 + 2776) = &type metadata for Catalog.LLM.Adapter.UIPreviews;
  *(_QWORD *)(v0 + 2784) = sub_2420D9FB4();
  *(_QWORD *)(v0 + 2752) = sub_24207F538();
  Catalog.LLM.Adapter.UIPreviews.init()();
  *(_QWORD *)(v0 + 2816) = &type metadata for Catalog.LLM.Adapter.UrgencyClassification;
  *(_QWORD *)(v0 + 2824) = sub_2420DA1A0();
  *(_QWORD *)(v0 + 2792) = sub_24207F538();
  Catalog.LLM.Adapter.UrgencyClassification.init()();
  *(_QWORD *)(v0 + 2856) = &type metadata for Catalog.LLM.DraftModel.AnswerSynthesis;
  *(_QWORD *)(v0 + 2864) = sub_2420DA32C();
  *(_QWORD *)(v0 + 2832) = sub_2420EF380();
  Catalog.LLM.DraftModel.AnswerSynthesis.init()();
  *(_QWORD *)(v0 + 2896) = &type metadata for Catalog.LLM.DraftModel.AnswerSynthesisServer;
  *(_QWORD *)(v0 + 2904) = sub_2420DA4B8();
  v20 = sub_2420EF380();
  *(_QWORD *)(v0 + 2872) = v20;
  Catalog.LLM.DraftModel.AnswerSynthesisServer.init()((_QWORD *)(v20 + 16));
  *(_QWORD *)(v0 + 2936) = &type metadata for Catalog.LLM.DraftModel.AutonamingMessages;
  *(_QWORD *)(v0 + 2944) = sub_2420DA644();
  v21 = sub_2420EF380();
  *(_QWORD *)(v0 + 2912) = v21;
  Catalog.LLM.DraftModel.AutonamingMessages.init()((_QWORD *)(v21 + 16));
  *(_QWORD *)(v0 + 2976) = &type metadata for Catalog.LLM.DraftModel.BulletsTransform;
  *(_QWORD *)(v0 + 2984) = sub_2420DA7D0();
  *(_QWORD *)(v0 + 2952) = sub_2420EF380();
  Catalog.LLM.DraftModel.BulletsTransform.init()();
  *(_QWORD *)(v0 + 3016) = &type metadata for Catalog.LLM.DraftModel.CodeLM;
  *(_QWORD *)(v0 + 3024) = sub_2420DA95C();
  *(_QWORD *)(v0 + 2992) = sub_24207F538();
  Catalog.LLM.DraftModel.CodeLM.init()();
  *(_QWORD *)(v0 + 3056) = &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV1;
  *(_QWORD *)(v0 + 3064) = sub_2420DAAE8();
  *(_QWORD *)(v0 + 3032) = sub_2420EF380();
  Catalog.LLM.DraftModel.CodeLMLargeV1.init()();
  *(_QWORD *)(v0 + 3096) = &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV2;
  *(_QWORD *)(v0 + 3104) = sub_2420DAC74();
  *(_QWORD *)(v0 + 3072) = sub_2420EF380();
  Catalog.LLM.DraftModel.CodeLMLargeV2.init()();
  *(_QWORD *)(v0 + 3136) = &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV3;
  *(_QWORD *)(v0 + 3144) = sub_2420DAE00();
  *(_QWORD *)(v0 + 3112) = sub_2420EF380();
  Catalog.LLM.DraftModel.CodeLMLargeV3.init()();
  *(_QWORD *)(v0 + 3176) = &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV1;
  *(_QWORD *)(v0 + 3184) = sub_2420DAF8C();
  *(_QWORD *)(v0 + 3152) = sub_2420EF380();
  Catalog.LLM.DraftModel.CodeLMSmallV1.init()();
  *(_QWORD *)(v0 + 3216) = &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV2;
  *(_QWORD *)(v0 + 3224) = sub_2420DB118();
  *(_QWORD *)(v0 + 3192) = sub_2420EF380();
  Catalog.LLM.DraftModel.CodeLMSmallV2.init()();
  *(_QWORD *)(v0 + 3256) = &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV3;
  *(_QWORD *)(v0 + 3264) = sub_2420DB2A4();
  *(_QWORD *)(v0 + 3232) = sub_2420EF380();
  Catalog.LLM.DraftModel.CodeLMSmallV3.init()();
  *(_QWORD *)(v0 + 3296) = &type metadata for Catalog.LLM.DraftModel.CodeLMV1ANE3B;
  *(_QWORD *)(v0 + 3304) = sub_2420DB430();
  v22 = sub_24207F538();
  *(_QWORD *)(v0 + 3272) = v22;
  Catalog.LLM.DraftModel.CodeLMV1ANE3B.init()((_QWORD *)(v22 + 16));
  *(_QWORD *)(v0 + 3336) = &type metadata for Catalog.LLM.DraftModel.ConciseTone;
  *(_QWORD *)(v0 + 3344) = sub_2420DB5BC();
  *(_QWORD *)(v0 + 3312) = sub_2420EF380();
  Catalog.LLM.DraftModel.ConciseTone.init()();
  *(_QWORD *)(v0 + 3376) = &type metadata for Catalog.LLM.DraftModel.FactualConsistencyClassifier;
  *(_QWORD *)(v0 + 3384) = sub_2420DB748();
  *(_QWORD *)(v0 + 3352) = sub_2420EF380();
  Catalog.LLM.DraftModel.FactualConsistencyClassifier.init()();
  *(_QWORD *)(v0 + 3416) = &type metadata for Catalog.LLM.DraftModel.FriendlyTone;
  *(_QWORD *)(v0 + 3424) = sub_2420DB8D4();
  *(_QWORD *)(v0 + 3392) = sub_2420EF380();
  Catalog.LLM.DraftModel.FriendlyTone.init()();
  *(_QWORD *)(v0 + 3456) = &type metadata for Catalog.LLM.DraftModel.MagicRewrite;
  *(_QWORD *)(v0 + 3464) = sub_2420DBA60();
  *(_QWORD *)(v0 + 3432) = sub_2420EF380();
  Catalog.LLM.DraftModel.MagicRewrite.init()();
  *(_QWORD *)(v0 + 3496) = &type metadata for Catalog.LLM.DraftModel.MailReply;
  *(_QWORD *)(v0 + 3504) = sub_2420DBBEC();
  *(_QWORD *)(v0 + 3472) = sub_2420EF380();
  Catalog.LLM.DraftModel.MailReply.init()();
  *(_QWORD *)(v0 + 3536) = &type metadata for Catalog.LLM.DraftModel.MessagesReply;
  *(_QWORD *)(v0 + 3544) = sub_2420DBD78();
  *(_QWORD *)(v0 + 3512) = sub_2420EF380();
  Catalog.LLM.DraftModel.MessagesReply.init()();
  *(_QWORD *)(v0 + 3576) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration;
  *(_QWORD *)(v0 + 3584) = sub_2420DBF04();
  *(_QWORD *)(v0 + 3552) = sub_2420EF380();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration.init()();
  *(_QWORD *)(v0 + 3616) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2;
  *(_QWORD *)(v0 + 3624) = sub_2420DC090();
  *(_QWORD *)(v0 + 3592) = sub_2420EF380();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2.init()();
  *(_QWORD *)(v0 + 3656) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits;
  *(_QWORD *)(v0 + 3664) = sub_2420DC21C();
  *(_QWORD *)(v0 + 3632) = sub_2420EF380();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits.init()();
  *(_QWORD *)(v0 + 3696) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2;
  *(_QWORD *)(v0 + 3704) = sub_2420DC3A8();
  *(_QWORD *)(v0 + 3672) = sub_2420EF380();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2.init()();
  *(_QWORD *)(v0 + 3736) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding;
  *(_QWORD *)(v0 + 3744) = sub_2420DC534();
  *(_QWORD *)(v0 + 3712) = sub_2420EF380();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding.init()();
  *(_QWORD *)(v0 + 3776) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2;
  *(_QWORD *)(v0 + 3784) = sub_2420DC6C0();
  v23 = sub_2420EF380();
  *(_QWORD *)(v0 + 3752) = v23;
  Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2.init()((_QWORD *)(v23 + 16));
  *(_QWORD *)(v0 + 3816) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller;
  *(_QWORD *)(v0 + 3824) = sub_2420DC84C();
  *(_QWORD *)(v0 + 3792) = sub_2420EF380();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller.init()();
  *(_QWORD *)(v0 + 3856) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2;
  *(_QWORD *)(v0 + 3864) = sub_2420DC9D8();
  *(_QWORD *)(v0 + 3832) = sub_2420EF380();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2.init()();
  *(_QWORD *)(v0 + 3896) = &type metadata for Catalog.LLM.DraftModel.Planner;
  *(_QWORD *)(v0 + 3904) = sub_2420DCB64();
  *(_QWORD *)(v0 + 3872) = sub_2420EF380();
  Catalog.LLM.DraftModel.Planner.init()();
  *(_QWORD *)(v0 + 3936) = &type metadata for Catalog.LLM.DraftModel.PlannerV2;
  *(_QWORD *)(v0 + 3944) = sub_2420DCCF0();
  v24 = sub_2420EF380();
  *(_QWORD *)(v0 + 3912) = v24;
  Catalog.LLM.DraftModel.PlannerV2.init()((_QWORD *)(v24 + 16));
  *(_QWORD *)(v0 + 3976) = &type metadata for Catalog.LLM.DraftModel.PlannerV3;
  *(_QWORD *)(v0 + 3984) = sub_2420DCE7C();
  v25 = sub_2420EF380();
  *(_QWORD *)(v0 + 3952) = v25;
  Catalog.LLM.DraftModel.PlannerV3.init()((_QWORD *)(v25 + 16));
  *(_QWORD *)(v0 + 4016) = &type metadata for Catalog.LLM.DraftModel.ProfessionalTone;
  *(_QWORD *)(v0 + 4024) = sub_2420DD008();
  *(_QWORD *)(v0 + 3992) = sub_2420EF380();
  Catalog.LLM.DraftModel.ProfessionalTone.init()();
  *(_QWORD *)(v0 + 4056) = &type metadata for Catalog.LLM.DraftModel.ProofreadingReview;
  *(_QWORD *)(v0 + 4064) = sub_2420DD194();
  v26 = sub_2420EF380();
  *(_QWORD *)(v0 + 4032) = v26;
  Catalog.LLM.DraftModel.ProofreadingReview.init()((_QWORD *)(v26 + 16));
  *(_QWORD *)(v0 + 4096) = &type metadata for Catalog.LLM.DraftModel.ResponseGeneration;
  *(_QWORD *)(v0 + 4104) = sub_2420DD320();
  v27 = sub_2420EF380();
  *(_QWORD *)(v0 + 4072) = v27;
  Catalog.LLM.DraftModel.ResponseGeneration.init()((_QWORD *)(v27 + 16));
  *(_QWORD *)(v0 + 4136) = &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV2;
  *(_QWORD *)(v0 + 4144) = sub_2420DD4AC();
  v28 = sub_2420EF380();
  *(_QWORD *)(v0 + 4112) = v28;
  Catalog.LLM.DraftModel.ResponseGenerationV2.init()((_QWORD *)(v28 + 16));
  *(_QWORD *)(v0 + 4176) = &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV3;
  *(_QWORD *)(v0 + 4184) = sub_2420DD638();
  v29 = sub_2420EF380();
  *(_QWORD *)(v0 + 4152) = v29;
  Catalog.LLM.DraftModel.ResponseGenerationV3.init()((_QWORD *)(v29 + 16));
  *(_QWORD *)(v0 + 4216) = &type metadata for Catalog.LLM.DraftModel.SafetyGuardrail;
  *(_QWORD *)(v0 + 4224) = sub_2420DD7C4();
  *(_QWORD *)(v0 + 4192) = sub_2420EF380();
  Catalog.LLM.DraftModel.SafetyGuardrail.init()();
  *(_QWORD *)(v0 + 4256) = &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice;
  *(_QWORD *)(v0 + 4264) = sub_2420DD950();
  *(_QWORD *)(v0 + 4232) = sub_2420EF380();
  Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice.init()();
  *(_QWORD *)(v0 + 4296) = &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer;
  *(_QWORD *)(v0 + 4304) = sub_2420DDADC();
  v30 = sub_2420EF380();
  *(_QWORD *)(v0 + 4272) = v30;
  Catalog.LLM.DraftModel.SearchQueryUnderstandingServer.init()((_QWORD *)(v30 + 16));
  *(_QWORD *)(v0 + 4336) = &type metadata for Catalog.LLM.DraftModel.ServerBulletsTransform;
  *(_QWORD *)(v0 + 4344) = sub_2420DDC68();
  *(_QWORD *)(v0 + 4312) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerBulletsTransform.init()();
  *(_QWORD *)(v0 + 4376) = &type metadata for Catalog.LLM.DraftModel.ServerConciseTone;
  *(_QWORD *)(v0 + 4384) = sub_2420DDDF4();
  v31 = sub_2420EF380();
  *(_QWORD *)(v0 + 4352) = v31;
  Catalog.LLM.DraftModel.ServerConciseTone.init()((_QWORD *)(v31 + 16));
  *(_QWORD *)(v0 + 4416) = &type metadata for Catalog.LLM.DraftModel.ServerFriendlyTone;
  *(_QWORD *)(v0 + 4424) = sub_2420DDF80();
  *(_QWORD *)(v0 + 4392) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerFriendlyTone.init()();
  *(_QWORD *)(v0 + 4456) = &type metadata for Catalog.LLM.DraftModel.ServerMagicRewrite;
  *(_QWORD *)(v0 + 4464) = sub_2420DE10C();
  *(_QWORD *)(v0 + 4432) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerMagicRewrite.init()();
  *(_QWORD *)(v0 + 4496) = &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic;
  *(_QWORD *)(v0 + 4504) = sub_2420DE298();
  *(_QWORD *)(v0 + 4472) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic.init()();
  *(_QWORD *)(v0 + 4536) = &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite;
  *(_QWORD *)(v0 + 4544) = sub_2420DE424();
  *(_QWORD *)(v0 + 4512) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite.init()();
  *(_QWORD *)(v0 + 4576) = &type metadata for Catalog.LLM.DraftModel.ServerMailReplyQA;
  *(_QWORD *)(v0 + 4584) = sub_2420DE5B0();
  *(_QWORD *)(v0 + 4552) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerMailReplyQA.init()();
  *(_QWORD *)(v0 + 4616) = &type metadata for Catalog.LLM.DraftModel.ServerProfessionalTone;
  *(_QWORD *)(v0 + 4624) = sub_2420DE73C();
  *(_QWORD *)(v0 + 4592) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerProfessionalTone.init()();
  *(_QWORD *)(v0 + 4656) = &type metadata for Catalog.LLM.DraftModel.ServerProofreadingReview;
  *(_QWORD *)(v0 + 4664) = sub_2420DE8C8();
  *(_QWORD *)(v0 + 4632) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerProofreadingReview.init()();
  *(_QWORD *)(v0 + 4696) = &type metadata for Catalog.LLM.DraftModel.ServerTablesTransform;
  *(_QWORD *)(v0 + 4704) = sub_2420DEA54();
  v32 = sub_2420EF380();
  *(_QWORD *)(v0 + 4672) = v32;
  Catalog.LLM.DraftModel.ServerTablesTransform.init()((_QWORD *)(v32 + 16));
  *(_QWORD *)(v0 + 4736) = &type metadata for Catalog.LLM.DraftModel.ServerTakeawaysTransform;
  *(_QWORD *)(v0 + 4744) = sub_2420DEBE0();
  *(_QWORD *)(v0 + 4712) = sub_2420EF380();
  Catalog.LLM.DraftModel.ServerTakeawaysTransform.init()();
  *(_QWORD *)(v0 + 4776) = &type metadata for Catalog.LLM.DraftModel.ServerTextSummarizer;
  *(_QWORD *)(v0 + 4784) = sub_2420DED6C();
  v33 = sub_2420EF380();
  *(_QWORD *)(v0 + 4752) = v33;
  Catalog.LLM.DraftModel.ServerTextSummarizer.init()((_QWORD *)(v33 + 16));
  *(_QWORD *)(v0 + 4816) = &type metadata for Catalog.LLM.DraftModel.Summarization;
  *(_QWORD *)(v0 + 4824) = sub_2420DEEF8();
  *(_QWORD *)(v0 + 4792) = sub_2420EF380();
  Catalog.LLM.DraftModel.Summarization.init()();
  *(_QWORD *)(v0 + 4856) = &type metadata for Catalog.LLM.DraftModel.TablesTransform;
  *(_QWORD *)(v0 + 4864) = sub_2420DF084();
  *(_QWORD *)(v0 + 4832) = sub_2420EF380();
  Catalog.LLM.DraftModel.TablesTransform.init()();
  *(_QWORD *)(v0 + 4896) = &type metadata for Catalog.LLM.DraftModel.TakeawaysTransform;
  *(_QWORD *)(v0 + 4904) = sub_2420DF210();
  v34 = sub_2420EF380();
  *(_QWORD *)(v0 + 4872) = v34;
  Catalog.LLM.DraftModel.TakeawaysTransform.init()((_QWORD *)(v34 + 16));
  *(_QWORD *)(v0 + 4936) = &type metadata for Catalog.LLM.DraftModel.UIPreviews;
  *(_QWORD *)(v0 + 4944) = sub_2420DF39C();
  *(_QWORD *)(v0 + 4912) = sub_24207F538();
  Catalog.LLM.DraftModel.UIPreviews.init()();
  *(_QWORD *)(v0 + 4976) = &type metadata for Catalog.LLM.DraftModel.UrgencyClassification;
  *(_QWORD *)(v0 + 4984) = sub_2420DF528();
  v35 = sub_2420EF380();
  *(_QWORD *)(v0 + 4952) = v35;
  Catalog.LLM.DraftModel.UrgencyClassification.init()((_QWORD *)(v35 + 16));
  *(_QWORD *)(v0 + 5016) = &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase;
  *(_QWORD *)(v0 + 5024) = sub_2420DF718();
  *(_QWORD *)(v0 + 4992) = sub_24207F538();
  Catalog.LLM.Model.AFMTextInstruct3BBase.init()();
  *(_QWORD *)(v0 + 5056) = &type metadata for Catalog.LLM.Model.CodeLM;
  *(_QWORD *)(v0 + 5064) = sub_2420DF944();
  *(_QWORD *)(v0 + 5032) = sub_24207F538();
  Catalog.LLM.Model.CodeLM.init()();
  *(_QWORD *)(v0 + 5096) = &type metadata for Catalog.LLM.Model.CodeLMExperimental;
  *(_QWORD *)(v0 + 5104) = sub_2420DFB70();
  v36 = sub_24207F538();
  *(_QWORD *)(v0 + 5072) = v36;
  Catalog.LLM.Model.CodeLMExperimental.init()((_QWORD *)(v36 + 16));
  *(_QWORD *)(v0 + 5136) = &type metadata for Catalog.LLM.Model.CodeLMLargeV1;
  *(_QWORD *)(v0 + 5144) = sub_2420DFD9C();
  v37 = sub_24207F538();
  *(_QWORD *)(v0 + 5112) = v37;
  Catalog.LLM.Model.CodeLMLargeV1.init()(v37 + 16);
  *(_QWORD *)(v0 + 5176) = &type metadata for Catalog.LLM.Model.CodeLMLargeV2;
  *(_QWORD *)(v0 + 5184) = sub_2420DFFC8();
  v38 = sub_24207F538();
  *(_QWORD *)(v0 + 5152) = v38;
  Catalog.LLM.Model.CodeLMLargeV2.init()(v38 + 16);
  *(_QWORD *)(v0 + 5216) = &type metadata for Catalog.LLM.Model.CodeLMLargeV3;
  *(_QWORD *)(v0 + 5224) = sub_2420E01F4();
  v39 = sub_24207F538();
  *(_QWORD *)(v0 + 5192) = v39;
  Catalog.LLM.Model.CodeLMLargeV3.init()(v39 + 16);
  *(_QWORD *)(v0 + 5256) = &type metadata for Catalog.LLM.Model.CodeLMSafetyGuardrail;
  *(_QWORD *)(v0 + 5264) = sub_2420E0420();
  *(_QWORD *)(v0 + 5232) = sub_24207F538();
  Catalog.LLM.Model.CodeLMSafetyGuardrail.init()();
  *(_QWORD *)(v0 + 5296) = &type metadata for Catalog.LLM.Model.CodeLMSmallV1;
  *(_QWORD *)(v0 + 5304) = sub_2420E064C();
  v40 = sub_24207F538();
  *(_QWORD *)(v0 + 5272) = v40;
  Catalog.LLM.Model.CodeLMSmallV1.init()(v40 + 16);
  *(_QWORD *)(v0 + 5336) = &type metadata for Catalog.LLM.Model.CodeLMSmallV2;
  *(_QWORD *)(v0 + 5344) = sub_2420E0878();
  v41 = sub_24207F538();
  *(_QWORD *)(v0 + 5312) = v41;
  Catalog.LLM.Model.CodeLMSmallV2.init()(v41 + 16);
  *(_QWORD *)(v0 + 5376) = &type metadata for Catalog.LLM.Model.CodeLMSmallV3;
  *(_QWORD *)(v0 + 5384) = sub_2420E0AA4();
  v42 = sub_24207F538();
  *(_QWORD *)(v0 + 5352) = v42;
  Catalog.LLM.Model.CodeLMSmallV3.init()(v42 + 16);
  *(_QWORD *)(v0 + 5416) = &type metadata for Catalog.LLM.Model.CodeLMV1ANE3B;
  *(_QWORD *)(v0 + 5424) = sub_2420E0CD0();
  v43 = sub_24207F538();
  *(_QWORD *)(v0 + 5392) = v43;
  Catalog.LLM.Model.CodeLMV1ANE3B.init()((_QWORD *)(v43 + 16));
  *(_QWORD *)(v0 + 5456) = &type metadata for Catalog.LLM.Model.CodeLMV2;
  *(_QWORD *)(v0 + 5464) = sub_2420E0EFC();
  *(_QWORD *)(v0 + 5432) = sub_24207F538();
  Catalog.LLM.Model.CodeLMV2.init()();
  *(_QWORD *)(v0 + 5496) = &type metadata for Catalog.LLM.Model.CodeLMV3;
  *(_QWORD *)(v0 + 5504) = sub_2420E1128();
  *(_QWORD *)(v0 + 5472) = sub_24207F538();
  Catalog.LLM.Model.CodeLMV3.init()();
  *(_QWORD *)(v0 + 5536) = &type metadata for Catalog.LLM.Model.CodeLMV4;
  *(_QWORD *)(v0 + 5544) = sub_2420E1354();
  *(_QWORD *)(v0 + 5512) = sub_24207F538();
  Catalog.LLM.Model.CodeLMV4.init()();
  *(_QWORD *)(v0 + 5576) = &type metadata for Catalog.LLM.Model.CodeSafetyGuardrail;
  *(_QWORD *)(v0 + 5584) = sub_2420E1580();
  v44 = sub_24207F538();
  *(_QWORD *)(v0 + 5552) = v44;
  Catalog.LLM.Model.CodeSafetyGuardrail.init()(v44 + 16);
  *(_QWORD *)(v0 + 5616) = &type metadata for Catalog.LLM.Model.InstructServerBase;
  *(_QWORD *)(v0 + 5624) = sub_2420E1770();
  *(_QWORD *)(v0 + 5592) = sub_24207F538();
  Catalog.LLM.Model.InstructServerBase.init()();
  *(_QWORD *)(v0 + 5656) = &type metadata for Catalog.LLM.Model.NLRouterBase;
  *(_QWORD *)(v0 + 5664) = sub_2420E199C();
  *(_QWORD *)(v0 + 5632) = sub_24207F538();
  Catalog.LLM.Model.NLRouterBase.init()();
  *(_QWORD *)(v0 + 5696) = &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase;
  *(_QWORD *)(v0 + 5704) = sub_2420E1B50();
  v45 = sub_24207F538();
  *(_QWORD *)(v0 + 5672) = v45;
  Catalog.LLM.Model.PhotosMemoriesCreationBase.init()((_QWORD *)(v45 + 16));
  *(_QWORD *)(v0 + 5736) = &type metadata for Catalog.LLM.Model.SafetyGuardrailLite;
  *(_QWORD *)(v0 + 5744) = sub_2420E1D7C();
  *(_QWORD *)(v0 + 5712) = sub_24207F538();
  Catalog.LLM.Model.SafetyGuardrailLite.init()();
  *(_QWORD *)(v0 + 5776) = &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase;
  *(_QWORD *)(v0 + 5784) = sub_2420E1F68();
  v46 = sub_24207F538();
  *(_QWORD *)(v0 + 5752) = v46;
  Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase.init()((_QWORD *)(v46 + 16));
  *(_QWORD *)(v0 + 5816) = &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerBase;
  *(_QWORD *)(v0 + 5824) = sub_2420E2154();
  *(_QWORD *)(v0 + 5792) = sub_24207F538();
  Catalog.LLM.Model.SummarizationTextSummarizerBase.init()();
  *(_QWORD *)(v0 + 5856) = &type metadata for Catalog.LLM.Model.VisualGenerationQueryHandlingLite;
  *(_QWORD *)(v0 + 5864) = sub_2420E2380();
  *(_QWORD *)(v0 + 5832) = sub_24207F538();
  Catalog.LLM.Model.VisualGenerationQueryHandlingLite.init()();
  *(_QWORD *)(v0 + 5896) = &type metadata for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer;
  *(_QWORD *)(v0 + 5904) = sub_2420E24AC();
  v47 = sub_2420EF380();
  *(_QWORD *)(v0 + 5872) = v47;
  Catalog.LLM.ServerConfiguration.AnswerSynthesisServer.init()(v47 + 16);
  *(_QWORD *)(v0 + 5936) = &type metadata for Catalog.LLM.ServerConfiguration.InstructServerBase;
  *(_QWORD *)(v0 + 5944) = sub_2420E25D8();
  v48 = sub_2420EF380();
  *(_QWORD *)(v0 + 5912) = v48;
  Catalog.LLM.ServerConfiguration.InstructServerBase.init()(v48 + 16);
  *(_QWORD *)(v0 + 5976) = &type metadata for Catalog.LLM.ServerConfiguration.NLRouterBase;
  *(_QWORD *)(v0 + 5984) = sub_2420E2704();
  v49 = sub_2420EF380();
  *(_QWORD *)(v0 + 5952) = v49;
  Catalog.LLM.ServerConfiguration.NLRouterBase.init()(v49 + 16);
  *(_QWORD *)(v0 + 6016) = &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedTone;
  *(_QWORD *)(v0 + 6024) = sub_2420E2830();
  v50 = sub_2420EF380();
  *(_QWORD *)(v0 + 5992) = v50;
  Catalog.LLM.ServerConfiguration.OpenEndedTone.init()(v50 + 16);
  *(_QWORD *)(v0 + 6056) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration;
  *(_QWORD *)(v0 + 6064) = sub_2420E295C();
  v51 = sub_2420EF380();
  *(_QWORD *)(v0 + 6032) = v51;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration.init()(v51 + 16);
  *(_QWORD *)(v0 + 6096) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2;
  *(_QWORD *)(v0 + 6104) = sub_2420E2A88();
  v52 = sub_2420EF380();
  *(_QWORD *)(v0 + 6072) = v52;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2.init()(v52 + 16);
  *(_QWORD *)(v0 + 6136) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase;
  *(_QWORD *)(v0 + 6144) = sub_2420E2BB4();
  v53 = sub_2420EF380();
  *(_QWORD *)(v0 + 6112) = v53;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase.init()(v53 + 16);
  *(_QWORD *)(v0 + 6176) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits;
  *(_QWORD *)(v0 + 6184) = sub_2420E2CE0();
  v54 = sub_2420EF380();
  *(_QWORD *)(v0 + 6152) = v54;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits.init()(v54 + 16);
  *(_QWORD *)(v0 + 6216) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2;
  *(_QWORD *)(v0 + 6224) = sub_2420E2E0C();
  v55 = sub_2420EF380();
  *(_QWORD *)(v0 + 6192) = v55;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2.init()(v55 + 16);
  *(_QWORD *)(v0 + 6256) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding;
  *(_QWORD *)(v0 + 6264) = sub_2420E2F38();
  v56 = sub_2420EF380();
  *(_QWORD *)(v0 + 6232) = v56;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding.init()(v56 + 16);
  *(_QWORD *)(v0 + 6296) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2;
  *(_QWORD *)(v0 + 6304) = sub_2420E3064();
  v57 = sub_2420EF380();
  *(_QWORD *)(v0 + 6272) = v57;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2.init()(v57 + 16);
  *(_QWORD *)(v0 + 6336) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller;
  *(_QWORD *)(v0 + 6344) = sub_2420E3190();
  v58 = sub_2420EF380();
  *(_QWORD *)(v0 + 6312) = v58;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller.init()(v58 + 16);
  *(_QWORD *)(v0 + 6376) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2;
  *(_QWORD *)(v0 + 6384) = sub_2420E32BC();
  v59 = sub_2420EF380();
  *(_QWORD *)(v0 + 6352) = v59;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2.init()(v59 + 16);
  *(_QWORD *)(v0 + 6416) = &type metadata for Catalog.LLM.ServerConfiguration.Planner;
  *(_QWORD *)(v0 + 6424) = sub_2420E33E8();
  v60 = sub_2420EF380();
  *(_QWORD *)(v0 + 6392) = v60;
  Catalog.LLM.ServerConfiguration.Planner.init()(v60 + 16);
  *(_QWORD *)(v0 + 6456) = &type metadata for Catalog.LLM.ServerConfiguration.PlannerV2;
  *(_QWORD *)(v0 + 6464) = sub_2420E3514();
  v61 = sub_2420EF380();
  *(_QWORD *)(v0 + 6432) = v61;
  Catalog.LLM.ServerConfiguration.PlannerV2.init()(v61 + 16);
  *(_QWORD *)(v0 + 6496) = &type metadata for Catalog.LLM.ServerConfiguration.PlannerV3;
  *(_QWORD *)(v0 + 6504) = sub_2420E3640();
  v62 = sub_2420EF380();
  *(_QWORD *)(v0 + 6472) = v62;
  Catalog.LLM.ServerConfiguration.PlannerV3.init()(v62 + 16);
  *(_QWORD *)(v0 + 6536) = &type metadata for Catalog.LLM.ServerConfiguration.ResponseGeneration;
  *(_QWORD *)(v0 + 6544) = sub_2420E376C();
  v63 = sub_2420EF380();
  *(_QWORD *)(v0 + 6512) = v63;
  Catalog.LLM.ServerConfiguration.ResponseGeneration.init()(v63 + 16);
  *(_QWORD *)(v0 + 6576) = &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV2;
  *(_QWORD *)(v0 + 6584) = sub_2420E3898();
  v64 = sub_2420EF380();
  *(_QWORD *)(v0 + 6552) = v64;
  Catalog.LLM.ServerConfiguration.ResponseGenerationV2.init()(v64 + 16);
  *(_QWORD *)(v0 + 6616) = &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV3;
  *(_QWORD *)(v0 + 6624) = sub_2420E39C4();
  v65 = sub_2420EF380();
  *(_QWORD *)(v0 + 6592) = v65;
  Catalog.LLM.ServerConfiguration.ResponseGenerationV3.init()(v65 + 16);
  *(_QWORD *)(v0 + 6656) = &type metadata for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer;
  *(_QWORD *)(v0 + 6664) = sub_2420E3AF0();
  v66 = sub_2420EF380();
  *(_QWORD *)(v0 + 6632) = v66;
  Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer.init()(v66 + 16);
  *(_QWORD *)(v0 + 6696) = &type metadata for Catalog.LLM.ServerConfiguration.ServerBulletsTransform;
  *(_QWORD *)(v0 + 6704) = sub_2420E3C1C();
  v67 = sub_2420EF380();
  *(_QWORD *)(v0 + 6672) = v67;
  Catalog.LLM.ServerConfiguration.ServerBulletsTransform.init()(v67 + 16);
  *(_QWORD *)(v0 + 6736) = &type metadata for Catalog.LLM.ServerConfiguration.ServerConciseTone;
  *(_QWORD *)(v0 + 6744) = sub_2420E3D48();
  v68 = sub_2420EF380();
  *(_QWORD *)(v0 + 6712) = v68;
  Catalog.LLM.ServerConfiguration.ServerConciseTone.init()(v68 + 16);
  *(_QWORD *)(v0 + 6776) = &type metadata for Catalog.LLM.ServerConfiguration.ServerFriendlyTone;
  *(_QWORD *)(v0 + 6784) = sub_2420E3E74();
  v69 = sub_2420EF380();
  *(_QWORD *)(v0 + 6752) = v69;
  Catalog.LLM.ServerConfiguration.ServerFriendlyTone.init()(v69 + 16);
  *(_QWORD *)(v0 + 6816) = &type metadata for Catalog.LLM.ServerConfiguration.ServerMagicRewrite;
  *(_QWORD *)(v0 + 6824) = sub_2420E3FA0();
  v70 = sub_2420EF380();
  *(_QWORD *)(v0 + 6792) = v70;
  Catalog.LLM.ServerConfiguration.ServerMagicRewrite.init()(v70 + 16);
  *(_QWORD *)(v0 + 6856) = &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic;
  *(_QWORD *)(v0 + 6864) = sub_2420E40CC();
  v71 = sub_2420EF380();
  *(_QWORD *)(v0 + 6832) = v71;
  Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic.init()(v71 + 16);
  *(_QWORD *)(v0 + 6896) = &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite;
  *(_QWORD *)(v0 + 6904) = sub_2420E41F8();
  v72 = sub_2420EF380();
  *(_QWORD *)(v0 + 6872) = v72;
  Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite.init()(v72 + 16);
  *(_QWORD *)(v0 + 6936) = &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyQA;
  *(_QWORD *)(v0 + 6944) = sub_2420E4324();
  v73 = sub_2420EF380();
  *(_QWORD *)(v0 + 6912) = v73;
  Catalog.LLM.ServerConfiguration.ServerMailReplyQA.init()(v73 + 16);
  *(_QWORD *)(v0 + 6976) = &type metadata for Catalog.LLM.ServerConfiguration.ServerProfessionalTone;
  *(_QWORD *)(v0 + 6984) = sub_2420E4450();
  v74 = sub_2420EF380();
  *(_QWORD *)(v0 + 6952) = v74;
  Catalog.LLM.ServerConfiguration.ServerProfessionalTone.init()(v74 + 16);
  *(_QWORD *)(v0 + 7016) = &type metadata for Catalog.LLM.ServerConfiguration.ServerProofreadingReview;
  *(_QWORD *)(v0 + 7024) = sub_2420E457C();
  v75 = sub_2420EF380();
  *(_QWORD *)(v0 + 6992) = v75;
  Catalog.LLM.ServerConfiguration.ServerProofreadingReview.init()(v75 + 16);
  *(_QWORD *)(v0 + 7056) = &type metadata for Catalog.LLM.ServerConfiguration.ServerTablesTransform;
  *(_QWORD *)(v0 + 7064) = sub_2420E46A8();
  v76 = sub_2420EF380();
  *(_QWORD *)(v0 + 7032) = v76;
  Catalog.LLM.ServerConfiguration.ServerTablesTransform.init()(v76 + 16);
  *(_QWORD *)(v0 + 7096) = &type metadata for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform;
  *(_QWORD *)(v0 + 7104) = sub_2420E47D4();
  v77 = sub_2420EF380();
  *(_QWORD *)(v0 + 7072) = v77;
  Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform.init()(v77 + 16);
  *(_QWORD *)(v0 + 7136) = &type metadata for Catalog.LLM.ServerConfiguration.ServerTextSummarizer;
  *(_QWORD *)(v0 + 7144) = sub_2420E4900();
  v78 = sub_2420EF380();
  *(_QWORD *)(v0 + 7112) = v78;
  Catalog.LLM.ServerConfiguration.ServerTextSummarizer.init()(v78 + 16);
  *(_QWORD *)(v0 + 7176) = &type metadata for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase;
  *(_QWORD *)(v0 + 7184) = sub_2420E4A2C();
  v79 = sub_2420EF380();
  *(_QWORD *)(v0 + 7152) = v79;
  Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase.init()(v79 + 16);
  *(_QWORD *)(v0 + 7216) = &type metadata for Catalog.ModelConfigurationReplacement.All;
  *(_QWORD *)(v0 + 7224) = sub_2420E4B58();
  v80 = sub_2420EF380();
  *(_QWORD *)(v0 + 7192) = v80;
  Catalog.ModelConfigurationReplacement.All.init()(v80 + 16);
  *(_QWORD *)(v0 + 7256) = &type metadata for Catalog.Sanitizer.TextModerationLM;
  *(_QWORD *)(v0 + 7264) = sub_2420E4CE4();
  *(_QWORD *)(v0 + 7232) = sub_2420EF380();
  Catalog.Sanitizer.TextModerationLM.init()();
  *(_QWORD *)(v0 + 7296) = &type metadata for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList;
  *(_QWORD *)(v0 + 7304) = sub_2420E4E10();
  v81 = sub_24207F538();
  *(_QWORD *)(v0 + 7272) = v81;
  Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList.init()(v81 + 16);
  *(_QWORD *)(v0 + 7336) = &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList;
  *(_QWORD *)(v0 + 7344) = sub_2420E4F3C();
  v82 = sub_2420EF380();
  *(_QWORD *)(v0 + 7312) = v82;
  Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList.init()(v82 + 16);
  *(_QWORD *)(v0 + 7376) = &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList;
  *(_QWORD *)(v0 + 7384) = sub_2420E5068();
  v83 = sub_2420EF380();
  *(_QWORD *)(v0 + 7352) = v83;
  Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList.init()(v83 + 16);
  *(_QWORD *)(v0 + 7416) = &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList;
  *(_QWORD *)(v0 + 7424) = sub_2420E5194();
  v84 = sub_2420EF380();
  *(_QWORD *)(v0 + 7392) = v84;
  Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList.init()(v84 + 16);
  *(_QWORD *)(v0 + 7456) = &type metadata for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList;
  *(_QWORD *)(v0 + 7464) = sub_2420E52C0();
  v85 = sub_2420EF380();
  *(_QWORD *)(v0 + 7432) = v85;
  Catalog.TokenInputDenyList.MailReplySnippetInputDenyList.init()(v85 + 16);
  *(_QWORD *)(v0 + 7496) = &type metadata for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList;
  *(_QWORD *)(v0 + 7504) = sub_2420E53EC();
  v86 = sub_2420EF380();
  *(_QWORD *)(v0 + 7472) = v86;
  Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList.init()(v86 + 16);
  *(_QWORD *)(v0 + 7536) = &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList;
  *(_QWORD *)(v0 + 7544) = sub_2420E5518();
  v87 = sub_2420EF380();
  *(_QWORD *)(v0 + 7512) = v87;
  Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList.init()(v87 + 16);
  *(_QWORD *)(v0 + 7576) = &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList;
  *(_QWORD *)(v0 + 7584) = sub_2420E5644();
  v88 = sub_2420EF380();
  *(_QWORD *)(v0 + 7552) = v88;
  Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList.init()(v88 + 16);
  *(_QWORD *)(v0 + 7616) = &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList;
  *(_QWORD *)(v0 + 7624) = sub_2420E5770();
  v89 = sub_2420EF380();
  *(_QWORD *)(v0 + 7592) = v89;
  Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList.init()(v89 + 16);
  *(_QWORD *)(v0 + 7656) = &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList;
  *(_QWORD *)(v0 + 7664) = sub_2420E589C();
  v90 = sub_2420EF380();
  *(_QWORD *)(v0 + 7632) = v90;
  Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList.init()(v90 + 16);
  *(_QWORD *)(v0 + 7696) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList;
  *(_QWORD *)(v0 + 7704) = sub_2420E59C8();
  v91 = sub_2420EF380();
  *(_QWORD *)(v0 + 7672) = v91;
  Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList.init()(v91 + 16);
  *(_QWORD *)(v0 + 7736) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList;
  *(_QWORD *)(v0 + 7744) = sub_2420E5AF4();
  v92 = sub_2420EF380();
  *(_QWORD *)(v0 + 7712) = v92;
  Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList.init()(v92 + 16);
  *(_QWORD *)(v0 + 7776) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList;
  *(_QWORD *)(v0 + 7784) = sub_2420E5C20();
  v93 = sub_2420EF380();
  *(_QWORD *)(v0 + 7752) = v93;
  Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList.init()(v93 + 16);
  *(_QWORD *)(v0 + 7816) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList;
  *(_QWORD *)(v0 + 7824) = sub_2420E5D4C();
  v94 = sub_2420EF380();
  *(_QWORD *)(v0 + 7792) = v94;
  Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList.init()(v94 + 16);
  *(_QWORD *)(v0 + 7856) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList;
  *(_QWORD *)(v0 + 7864) = sub_2420E5E78();
  v95 = sub_2420EF380();
  *(_QWORD *)(v0 + 7832) = v95;
  Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList.init()(v95 + 16);
  *(_QWORD *)(v0 + 7896) = &type metadata for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList;
  *(_QWORD *)(v0 + 7904) = sub_2420E5FA4();
  v96 = sub_2420EF380();
  *(_QWORD *)(v0 + 7872) = v96;
  Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList.init()(v96 + 16);
  *(_QWORD *)(v0 + 7936) = &type metadata for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList;
  *(_QWORD *)(v0 + 7944) = sub_2420E60D0();
  v97 = sub_2420EF380();
  *(_QWORD *)(v0 + 7912) = v97;
  Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList.init()(v97 + 16);
  *(_QWORD *)(v0 + 7976) = &type metadata for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList;
  *(_QWORD *)(v0 + 7984) = sub_2420E61FC();
  v98 = sub_2420EF380();
  *(_QWORD *)(v0 + 7952) = v98;
  Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList.init()(v98 + 16);
  *(_QWORD *)(v0 + 8016) = &type metadata for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList;
  *(_QWORD *)(v0 + 8024) = sub_2420E6328();
  v99 = sub_2420EF380();
  *(_QWORD *)(v0 + 7992) = v99;
  Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList.init()(v99 + 16);
  *(_QWORD *)(v0 + 8056) = &type metadata for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList;
  *(_QWORD *)(v0 + 8064) = sub_2420E6454();
  v100 = sub_2420EF380();
  *(_QWORD *)(v0 + 8032) = v100;
  Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList.init()(v100 + 16);
  *(_QWORD *)(v0 + 8096) = &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList;
  *(_QWORD *)(v0 + 8104) = sub_2420E6580();
  v101 = sub_2420EF380();
  *(_QWORD *)(v0 + 8072) = v101;
  Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList.init()(v101 + 16);
  *(_QWORD *)(v0 + 8136) = &type metadata for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList;
  *(_QWORD *)(v0 + 8144) = sub_2420E66AC();
  v102 = sub_2420EF380();
  *(_QWORD *)(v0 + 8112) = v102;
  Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList.init()(v102 + 16);
  *(_QWORD *)(v0 + 8176) = &type metadata for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList;
  *(_QWORD *)(v0 + 8184) = sub_2420E67D8();
  v103 = sub_2420EF380();
  *(_QWORD *)(v0 + 8152) = v103;
  Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList.init()(v103 + 16);
  *(_QWORD *)(v0 + 8216) = &type metadata for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList;
  *(_QWORD *)(v0 + 8224) = sub_2420E6904();
  v104 = sub_2420EF380();
  *(_QWORD *)(v0 + 0x2000) = v104;
  Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList.init()(v104 + 16);
  *(_QWORD *)(v0 + 8256) = &type metadata for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList;
  *(_QWORD *)(v0 + 8264) = sub_2420E6A30();
  v105 = sub_2420EF380();
  *(_QWORD *)(v0 + 8232) = v105;
  Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList.init()(v105 + 16);
  *(_QWORD *)(v0 + 8296) = &type metadata for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList;
  *(_QWORD *)(v0 + 8304) = sub_2420E6B5C();
  v106 = sub_24207F538();
  *(_QWORD *)(v0 + 8272) = v106;
  Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList.init()(v106 + 16);
  *(_QWORD *)(v0 + 8336) = &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList;
  *(_QWORD *)(v0 + 8344) = sub_2420E6C88();
  v107 = sub_2420EF380();
  *(_QWORD *)(v0 + 8312) = v107;
  Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.init()(v107 + 16);
  *(_QWORD *)(v0 + 8376) = &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList;
  *(_QWORD *)(v0 + 8384) = sub_2420E6DB4();
  v108 = sub_2420EF380();
  *(_QWORD *)(v0 + 8352) = v108;
  Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.init()(v108 + 16);
  *(_QWORD *)(v0 + 8416) = &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList;
  *(_QWORD *)(v0 + 8424) = sub_2420E6EE0();
  v109 = sub_2420EF380();
  *(_QWORD *)(v0 + 8392) = v109;
  Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.init()(v109 + 16);
  *(_QWORD *)(v0 + 8456) = &type metadata for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList;
  *(_QWORD *)(v0 + 8464) = sub_2420E700C();
  v110 = sub_2420EF380();
  *(_QWORD *)(v0 + 8432) = v110;
  Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.init()(v110 + 16);
  *(_QWORD *)(v0 + 8496) = &type metadata for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList;
  *(_QWORD *)(v0 + 8504) = sub_2420E7138();
  v111 = sub_2420EF380();
  *(_QWORD *)(v0 + 8472) = v111;
  Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.init()(v111 + 16);
  *(_QWORD *)(v0 + 8536) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList;
  *(_QWORD *)(v0 + 8544) = sub_2420E7264();
  v112 = sub_2420EF380();
  *(_QWORD *)(v0 + 8512) = v112;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.init()(v112 + 16);
  *(_QWORD *)(v0 + 8576) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList;
  *(_QWORD *)(v0 + 8584) = sub_2420E7390();
  v113 = sub_2420EF380();
  *(_QWORD *)(v0 + 8552) = v113;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.init()(v113 + 16);
  *(_QWORD *)(v0 + 8616) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList;
  *(_QWORD *)(v0 + 8624) = sub_2420E74BC();
  v114 = sub_2420EF380();
  *(_QWORD *)(v0 + 8592) = v114;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.init()(v114 + 16);
  *(_QWORD *)(v0 + 8656) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList;
  *(_QWORD *)(v0 + 8664) = sub_2420E75E8();
  v115 = sub_2420EF380();
  *(_QWORD *)(v0 + 8632) = v115;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.init()(v115 + 16);
  *(_QWORD *)(v0 + 8696) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList;
  *(_QWORD *)(v0 + 8704) = sub_2420E7714();
  v116 = sub_2420EF380();
  *(_QWORD *)(v0 + 8672) = v116;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.init()(v116 + 16);
  *(_QWORD *)(v0 + 8736) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList;
  *(_QWORD *)(v0 + 8744) = sub_2420E7840();
  v117 = sub_2420EF380();
  *(_QWORD *)(v0 + 8712) = v117;
  Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.init()(v117 + 16);
  *(_QWORD *)(v0 + 8776) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList;
  *(_QWORD *)(v0 + 8784) = sub_2420E796C();
  v118 = sub_2420EF380();
  *(_QWORD *)(v0 + 8752) = v118;
  Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.init()(v118 + 16);
  *(_QWORD *)(v0 + 8816) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList;
  *(_QWORD *)(v0 + 8824) = sub_2420E7A98();
  v119 = sub_2420EF380();
  *(_QWORD *)(v0 + 8792) = v119;
  Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.init()(v119 + 16);
  *(_QWORD *)(v0 + 8856) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList;
  *(_QWORD *)(v0 + 8864) = sub_2420E7BC4();
  v120 = sub_2420EF380();
  *(_QWORD *)(v0 + 8832) = v120;
  Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.init()(v120 + 16);
  *(_QWORD *)(v0 + 8896) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList;
  *(_QWORD *)(v0 + 8904) = sub_2420E7CF0();
  v121 = sub_2420EF380();
  *(_QWORD *)(v0 + 8872) = v121;
  Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.init()(v121 + 16);
  *(_QWORD *)(v0 + 8936) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList;
  *(_QWORD *)(v0 + 8944) = sub_2420E7E1C();
  v122 = sub_2420EF380();
  *(_QWORD *)(v0 + 8912) = v122;
  Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.init()(v122 + 16);
  *(_QWORD *)(v0 + 8976) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList;
  *(_QWORD *)(v0 + 8984) = sub_2420E7F48();
  v123 = sub_2420EF380();
  *(_QWORD *)(v0 + 8952) = v123;
  Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.init()(v123 + 16);
  *(_QWORD *)(v0 + 9016) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList;
  *(_QWORD *)(v0 + 9024) = sub_2420E8074();
  v124 = sub_2420EF380();
  *(_QWORD *)(v0 + 8992) = v124;
  Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.init()(v124 + 16);
  *(_QWORD *)(v0 + 9056) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList;
  *(_QWORD *)(v0 + 9064) = sub_2420E81A0();
  v125 = sub_2420EF380();
  *(_QWORD *)(v0 + 9032) = v125;
  Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.init()(v125 + 16);
  *(_QWORD *)(v0 + 9096) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList;
  *(_QWORD *)(v0 + 9104) = sub_2420E82CC();
  v126 = sub_2420EF380();
  *(_QWORD *)(v0 + 9072) = v126;
  Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.init()(v126 + 16);
  *(_QWORD *)(v0 + 9136) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList;
  *(_QWORD *)(v0 + 9144) = sub_2420E83F8();
  v127 = sub_2420EF380();
  *(_QWORD *)(v0 + 9112) = v127;
  Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.init()(v127 + 16);
  *(_QWORD *)(v0 + 9176) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList;
  *(_QWORD *)(v0 + 9184) = sub_2420E8524();
  v128 = sub_2420EF380();
  *(_QWORD *)(v0 + 9152) = v128;
  Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.init()(v128 + 16);
  *(_QWORD *)(v0 + 9216) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList;
  *(_QWORD *)(v0 + 9224) = sub_2420E8650();
  v129 = sub_2420EF380();
  *(_QWORD *)(v0 + 9192) = v129;
  Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.init()(v129 + 16);
  *(_QWORD *)(v0 + 9256) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList;
  *(_QWORD *)(v0 + 9264) = sub_2420E877C();
  v130 = sub_2420EF380();
  *(_QWORD *)(v0 + 9232) = v130;
  Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.init()(v130 + 16);
  *(_QWORD *)(v0 + 9296) = &type metadata for Catalog.Tokenizer.AFMTextInstructEnglish49k;
  *(_QWORD *)(v0 + 9304) = sub_2420E88CC();
  *(_QWORD *)(v0 + 9272) = sub_2420EF380();
  Catalog.Tokenizer.AFMTextInstructEnglish49k.init()();
  *(_QWORD *)(v0 + 9336) = &type metadata for Catalog.Tokenizer.CodeLMLargeV1Tokenizer;
  *(_QWORD *)(v0 + 9344) = sub_2420E8A1C();
  v131 = sub_2420EF380();
  *(_QWORD *)(v0 + 9312) = v131;
  Catalog.Tokenizer.CodeLMLargeV1Tokenizer.init()((_QWORD *)(v131 + 16));
  *(_QWORD *)(v0 + 9376) = &type metadata for Catalog.Tokenizer.CodeLMLargeV2Tokenizer;
  *(_QWORD *)(v0 + 9384) = sub_2420E8B6C();
  v132 = sub_2420EF380();
  *(_QWORD *)(v0 + 9352) = v132;
  Catalog.Tokenizer.CodeLMLargeV2Tokenizer.init()((_QWORD *)(v132 + 16));
  *(_QWORD *)(v0 + 9416) = &type metadata for Catalog.Tokenizer.CodeLMLargeV3Tokenizer;
  *(_QWORD *)(v0 + 9424) = sub_2420E8CBC();
  v133 = sub_2420EF380();
  *(_QWORD *)(v0 + 9392) = v133;
  Catalog.Tokenizer.CodeLMLargeV3Tokenizer.init()((_QWORD *)(v133 + 16));
  *(_QWORD *)(v0 + 9456) = &type metadata for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer;
  *(_QWORD *)(v0 + 9464) = sub_2420E8E0C();
  v134 = sub_2420EF380();
  *(_QWORD *)(v0 + 9432) = v134;
  Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.init()((_QWORD *)(v134 + 16));
  *(_QWORD *)(v0 + 9496) = &type metadata for Catalog.Tokenizer.CodeLMSmallV1Tokenizer;
  *(_QWORD *)(v0 + 9504) = sub_2420E8F5C();
  v135 = sub_2420EF380();
  *(_QWORD *)(v0 + 9472) = v135;
  Catalog.Tokenizer.CodeLMSmallV1Tokenizer.init()((_QWORD *)(v135 + 16));
  *(_QWORD *)(v0 + 9536) = &type metadata for Catalog.Tokenizer.CodeLMSmallV2Tokenizer;
  *(_QWORD *)(v0 + 9544) = sub_2420E90AC();
  v136 = sub_2420EF380();
  *(_QWORD *)(v0 + 9512) = v136;
  Catalog.Tokenizer.CodeLMSmallV2Tokenizer.init()((_QWORD *)(v136 + 16));
  *(_QWORD *)(v0 + 9576) = &type metadata for Catalog.Tokenizer.CodeLMSmallV3Tokenizer;
  *(_QWORD *)(v0 + 9584) = sub_2420E91FC();
  v137 = sub_2420EF380();
  *(_QWORD *)(v0 + 9552) = v137;
  Catalog.Tokenizer.CodeLMSmallV3Tokenizer.init()((_QWORD *)(v137 + 16));
  *(_QWORD *)(v0 + 9616) = &type metadata for Catalog.Tokenizer.CodeLMTokenizer;
  *(_QWORD *)(v0 + 9624) = sub_2420E934C();
  v138 = sub_24207F538();
  *(_QWORD *)(v0 + 9592) = v138;
  Catalog.Tokenizer.CodeLMTokenizer.init()((_QWORD *)(v138 + 16));
  *(_QWORD *)(v0 + 9656) = &type metadata for Catalog.Tokenizer.CodeLMTokenizerExperimental;
  *(_QWORD *)(v0 + 9664) = sub_2420E949C();
  *(_QWORD *)(v0 + 9632) = sub_24207F538();
  Catalog.Tokenizer.CodeLMTokenizerExperimental.init()();
  *(_QWORD *)(v0 + 9696) = &type metadata for Catalog.Tokenizer.CodeLMTokenizerV2;
  *(_QWORD *)(v0 + 9704) = sub_2420E95EC();
  *(_QWORD *)(v0 + 9672) = sub_24207F538();
  Catalog.Tokenizer.CodeLMTokenizerV2.init()();
  *(_QWORD *)(v0 + 9736) = &type metadata for Catalog.Tokenizer.CodeLMTokenizerV3;
  *(_QWORD *)(v0 + 9744) = sub_2420E973C();
  *(_QWORD *)(v0 + 9712) = sub_24207F538();
  Catalog.Tokenizer.CodeLMTokenizerV3.init()();
  *(_QWORD *)(v0 + 9776) = &type metadata for Catalog.Tokenizer.CodeLMTokenizerV4;
  *(_QWORD *)(v0 + 9784) = sub_2420E988C();
  *(_QWORD *)(v0 + 9752) = sub_24207F538();
  Catalog.Tokenizer.CodeLMTokenizerV4.init()();
  *(_QWORD *)(v0 + 9816) = &type metadata for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer;
  *(_QWORD *)(v0 + 9824) = sub_2420E99DC();
  v139 = sub_24207F538();
  *(_QWORD *)(v0 + 9792) = v139;
  Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.init()((_QWORD *)(v139 + 16));
  *(_QWORD *)(v0 + 9856) = &type metadata for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer;
  *(_QWORD *)(v0 + 9864) = sub_2420E9B2C();
  *(_QWORD *)(v0 + 9832) = sub_24207F538();
  Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.init()();
  *(_QWORD *)(v0 + 9896) = &type metadata for Catalog.Tokenizer.InstructServerTokenizer;
  *(_QWORD *)(v0 + 9904) = sub_2420E9C7C();
  *(_QWORD *)(v0 + 9872) = sub_2420EF380();
  Catalog.Tokenizer.InstructServerTokenizer.init()();
  *(_QWORD *)(v0 + 9936) = &type metadata for Catalog.Tokenizer.NLRouterTokenizer;
  *(_QWORD *)(v0 + 9944) = sub_2420E9DCC();
  v140 = sub_2420EF380();
  *(_QWORD *)(v0 + 9912) = v140;
  Catalog.Tokenizer.NLRouterTokenizer.init()((_QWORD *)(v140 + 16));
  *(_QWORD *)(v0 + 9976) = &type metadata for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer;
  *(_QWORD *)(v0 + 9984) = sub_2420E9F1C();
  *(_QWORD *)(v0 + 9952) = sub_2420EF380();
  Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.init()();
  *(_QWORD *)(v0 + 10016) = &type metadata for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer;
  *(_QWORD *)(v0 + 10024) = sub_2420EA06C();
  *(_QWORD *)(v0 + 9992) = sub_2420EF380();
  Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.init()();
  off_254397488 = (_UNKNOWN *)v0;
  sub_24207F428();
}

uint64_t static Catalog.resources.getter()
{
  if (qword_2543977C0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2420D1D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  __int16 v27;
  int v28;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = a1;
  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = MEMORY[0x24BEE4B08];
    goto LABEL_46;
  }
  sub_2420797C0(&qword_2543977E8);
  result = sub_242132AC8();
  v3 = result;
  v39 = *(_QWORD *)(v1 + 16);
  if (!v39)
    goto LABEL_46;
  v4 = 0;
  v49 = result + 56;
  v37 = v1;
  v38 = v1 + 32;
  v36 = result;
  while (1)
  {
    if (v4 >= *(_QWORD *)(v1 + 16))
    {
      __break(1u);
      goto LABEL_48;
    }
    v5 = (uint64_t *)(v38 + 40 * v4);
    v7 = *v5;
    v6 = v5[1];
    v8 = *((unsigned __int8 *)v5 + 16);
    v43 = *((unsigned __int8 *)v5 + 33);
    v44 = *((unsigned __int8 *)v5 + 32);
    v9 = *((unsigned __int8 *)v5 + 34);
    v10 = *((unsigned __int16 *)v5 + 16);
    v45 = v5[3];
    v46 = *((unsigned __int8 *)v5 + 35);
    sub_242132D74();
    swift_bridgeObjectRetain_n();
    v50 = v7;
    v51 = v6;
    sub_2421327D4();
    v48 = v8;
    if (v8 != 2)
      sub_242132D8C();
    v11 = v10 | (v9 << 16);
    sub_242132D8C();
    swift_bridgeObjectRelease();
    v47 = v11;
    if (v11 != 2)
    {
      sub_242132D8C();
      sub_242132D80();
      sub_242132D8C();
      sub_242132D8C();
    }
    sub_242132D8C();
    sub_242132D80();
    result = sub_242132D98();
    v12 = ~(-1 << *(_BYTE *)(v3 + 32));
    v13 = result & v12;
    v14 = (result & (unint64_t)v12) >> 6;
    v15 = *(_QWORD *)(v49 + 8 * v14);
    v16 = 1 << (result & v12);
    v17 = *(_QWORD *)(v3 + 48);
    if ((v16 & v15) == 0)
      break;
    v42 = v9;
    v40 = v11;
    v41 = v4;
    v19 = v50;
    v18 = v51;
    v20 = v48;
    while (1)
    {
      v21 = v17 + 40 * v13;
      result = *(_QWORD *)v21;
      v22 = *(unsigned __int8 *)(v21 + 16);
      v23 = *(_QWORD *)(v21 + 24);
      v24 = *(unsigned __int8 *)(v21 + 32);
      v25 = *(unsigned __int8 *)(v21 + 33);
      v26 = *(unsigned __int8 *)(v21 + 34);
      v27 = *(_WORD *)(v21 + 32);
      v28 = *(unsigned __int8 *)(v21 + 35);
      if (*(_QWORD *)v21 != v19 || *(_QWORD *)(v21 + 8) != v18)
      {
        result = sub_242132D14();
        v20 = v48;
        v19 = v50;
        v18 = v51;
        if ((result & 1) == 0)
          goto LABEL_37;
      }
      if (v22 == 2)
      {
        if (v20 != 2)
          goto LABEL_37;
      }
      else if (v20 == 2 || ((v20 ^ ((v22 & 1) == 0)) & 1) == 0)
      {
        goto LABEL_37;
      }
      if (v27 != 2)
        break;
      if (v47 == 2 && v28 == v46)
        goto LABEL_44;
LABEL_37:
      v13 = (v13 + 1) & v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v49 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if ((v15 & (1 << v13)) == 0)
      {
        v3 = v36;
        v1 = v37;
        v17 = *(_QWORD *)(v36 + 48);
        v4 = v41;
        v11 = v40;
        goto LABEL_40;
      }
    }
    v31 = v47 != 2 && v23 == v45;
    if (!v31 || ((v24 ^ v44) & 1) != 0 || ((v43 ^ v25) & 1) != 0 || ((v26 ^ v42) & 1) != 0 || v28 != v46)
      goto LABEL_37;
LABEL_44:
    result = swift_bridgeObjectRelease();
    v3 = v36;
    v1 = v37;
    v4 = v41;
LABEL_42:
    if (++v4 == v39)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  v19 = v50;
  v18 = v51;
  LOBYTE(v20) = v48;
LABEL_40:
  *(_QWORD *)(v49 + 8 * v14) = v16 | v15;
  v32 = v17 + 40 * v13;
  *(_QWORD *)v32 = v19;
  *(_QWORD *)(v32 + 8) = v18;
  *(_BYTE *)(v32 + 16) = v20;
  *(_QWORD *)(v32 + 24) = v45;
  *(_BYTE *)(v32 + 34) = BYTE2(v11);
  *(_WORD *)(v32 + 32) = v11;
  *(_BYTE *)(v32 + 35) = v46;
  v33 = *(_QWORD *)(v3 + 16);
  v34 = __OFADD__(v33, 1);
  v35 = v33 + 1;
  if (!v34)
  {
    *(_QWORD *)(v3 + 16) = v35;
    goto LABEL_42;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_2420D20F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = a1;
  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = MEMORY[0x24BEE4B08];
    goto LABEL_27;
  }
  sub_2420797C0(&qword_2543977F0);
  result = sub_242132AC8();
  v3 = result;
  v27 = *(_QWORD *)(v1 + 16);
  if (!v27)
    goto LABEL_27;
  v4 = 0;
  v5 = result + 56;
  v25 = result;
  v26 = v1 + 32;
  v24 = v1;
  while (1)
  {
    if (v4 >= *(_QWORD *)(v1 + 16))
    {
      __break(1u);
      goto LABEL_29;
    }
    v6 = (uint64_t *)(v26 + 24 * v4);
    v8 = *v6;
    v7 = v6[1];
    v9 = *((unsigned __int8 *)v6 + 16);
    sub_242132D74();
    swift_bridgeObjectRetain_n();
    sub_2421327D4();
    swift_bridgeObjectRelease();
    if (v9 != 2)
      sub_242132D8C();
    sub_242132D8C();
    result = sub_242132D98();
    v10 = v3;
    v11 = ~(-1 << *(_BYTE *)(v3 + 32));
    v12 = result & v11;
    v13 = (result & (unint64_t)v11) >> 6;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    v15 = 1 << (result & v11);
    v16 = *(_QWORD *)(v10 + 48);
    if ((v15 & v14) == 0)
      break;
    while (1)
    {
      v17 = v16 + 24 * v12;
      result = *(_QWORD *)v17;
      v18 = *(unsigned __int8 *)(v17 + 16);
      if (*(_QWORD *)v17 != v8 || *(_QWORD *)(v17 + 8) != v7)
      {
        result = sub_242132D14();
        if ((result & 1) == 0)
          goto LABEL_18;
      }
      if (v18 != 2)
        break;
      if (v9 == 2)
        goto LABEL_23;
LABEL_18:
      v12 = (v12 + 1) & v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
      v15 = 1 << v12;
      if ((v14 & (1 << v12)) == 0)
      {
        v1 = v24;
        v3 = v25;
        v16 = *(_QWORD *)(v25 + 48);
        goto LABEL_21;
      }
    }
    if (v9 == 2 || ((v9 ^ ((v18 & 1) == 0)) & 1) == 0)
      goto LABEL_18;
LABEL_23:
    result = swift_bridgeObjectRelease();
    v1 = v24;
    v3 = v25;
LABEL_24:
    if (++v4 == v27)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  v3 = v25;
LABEL_21:
  *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
  v20 = v16 + 24 * v12;
  *(_QWORD *)v20 = v8;
  *(_QWORD *)(v20 + 8) = v7;
  *(_BYTE *)(v20 + 16) = v9;
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
    goto LABEL_24;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2420D2320(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a2 + 56;
  sub_242132D98();
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 56);
  v18 = (unint64_t)(v3 + 63) >> 6;
  v20 = a2;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = *(_QWORD *)(v20 + 48) + 40 * i;
    v15 = *(unsigned __int8 *)(v14 + 16);
    v16 = *(_WORD *)(v14 + 32);
    sub_242132D74();
    swift_bridgeObjectRetain();
    sub_2421327D4();
    if (v15 != 2)
      sub_242132D8C();
    sub_242132D8C();
    if (v16 != 2)
    {
      sub_242132D8C();
      sub_242132D80();
      sub_242132D8C();
      sub_242132D8C();
    }
    sub_242132D8C();
    sub_242132D80();
    v17 = sub_242132D98();
    result = swift_bridgeObjectRelease();
    v7 ^= v17;
    if (v5)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v8++, 1))
      goto LABEL_23;
    if (v8 >= v18)
    {
LABEL_21:
      swift_release();
      return sub_242132D80();
    }
    v12 = *(_QWORD *)(v19 + 8 * v8);
    if (!v12)
      break;
LABEL_14:
    v5 = (v12 - 1) & v12;
  }
  v13 = v8 + 1;
  if (v8 + 1 >= v18)
    goto LABEL_21;
  v12 = *(_QWORD *)(v19 + 8 * v13);
  if (v12)
  {
    ++v8;
    goto LABEL_14;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v18)
      goto LABEL_21;
    v12 = *(_QWORD *)(v19 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_14;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2420D2568(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;

  sub_242132D98();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 24 * i + 16);
    sub_242132D74();
    swift_bridgeObjectRetain();
    sub_2421327D4();
    if (v16 != 2)
      sub_242132D8C();
    sub_242132D8C();
    v17 = sub_242132D98();
    result = swift_bridgeObjectRelease();
    v9 ^= v17;
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
      goto LABEL_21;
    if (v10 >= v7)
    {
LABEL_19:
      swift_release();
      return sub_242132D80();
    }
    v14 = *(_QWORD *)(v3 + 8 * v10);
    if (!v14)
      break;
LABEL_14:
    v6 = (v14 - 1) & v14;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_19;
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    ++v10;
    goto LABEL_14;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v7)
      goto LABEL_19;
    v14 = *(_QWORD *)(v3 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

void sub_2420D2734()
{
  sub_2420C0C7C();
  swift_bridgeObjectRetain();
  sub_242097198();
  sub_242097744();
  sub_24207F5FC();
  sub_242079ED8();
  sub_2420977E0();
  sub_242079F18();
  sub_2420C0B64();
  sub_2420C13B0();
  sub_2420C180C();
  sub_2420EFD9C();
  sub_2420EFC58();
  sub_2420EFAC8();
  sub_2420EFAE0();
  sub_2420C10AC();
}

unint64_t sub_2420D27C0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D27E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D27E4()
{
  unint64_t result;

  result = qword_25719F0E0;
  if (!qword_25719F0E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Animation, &type metadata for Catalog.Diffusion.Adapter.Animation);
    atomic_store(result, (unint64_t *)&qword_25719F0E0);
  }
  return result;
}

unint64_t sub_2420D2820(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2844();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2844()
{
  unint64_t result;

  result = qword_25719F0E8;
  if (!qword_25719F0E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Animation, &type metadata for Catalog.Diffusion.Adapter.Animation);
    atomic_store(result, (unint64_t *)&qword_25719F0E8);
  }
  return result;
}

void sub_2420D2880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D2894, (uint64_t (*)(void))sub_2420D28D0);
}

unint64_t sub_2420D2894()
{
  unint64_t result;

  result = qword_25719F0F0;
  if (!qword_25719F0F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Animation, &type metadata for Catalog.Diffusion.Adapter.Animation);
    atomic_store(result, (unint64_t *)&qword_25719F0F0);
  }
  return result;
}

unint64_t sub_2420D28D0()
{
  unint64_t result;

  result = qword_25719F0F8;
  if (!qword_25719F0F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Animation, &type metadata for Catalog.Diffusion.Adapter.Animation);
    atomic_store(result, (unint64_t *)&qword_25719F0F8);
  }
  return result;
}

unint64_t sub_2420D2910()
{
  unint64_t result;

  result = qword_25719F100;
  if (!qword_25719F100)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Animation, &type metadata for Catalog.Diffusion.Adapter.Animation);
    atomic_store(result, (unint64_t *)&qword_25719F100);
  }
  return result;
}

unint64_t sub_2420D294C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2970();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2970()
{
  unint64_t result;

  result = qword_25719F108;
  if (!qword_25719F108)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Emoji, &type metadata for Catalog.Diffusion.Adapter.Emoji);
    atomic_store(result, (unint64_t *)&qword_25719F108);
  }
  return result;
}

unint64_t sub_2420D29AC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D29D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D29D0()
{
  unint64_t result;

  result = qword_25719F110;
  if (!qword_25719F110)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Emoji, &type metadata for Catalog.Diffusion.Adapter.Emoji);
    atomic_store(result, (unint64_t *)&qword_25719F110);
  }
  return result;
}

void sub_2420D2A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D2A20, (uint64_t (*)(void))sub_2420D2A5C);
}

unint64_t sub_2420D2A20()
{
  unint64_t result;

  result = qword_25719F118;
  if (!qword_25719F118)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Emoji, &type metadata for Catalog.Diffusion.Adapter.Emoji);
    atomic_store(result, (unint64_t *)&qword_25719F118);
  }
  return result;
}

unint64_t sub_2420D2A5C()
{
  unint64_t result;

  result = qword_25719F120;
  if (!qword_25719F120)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Emoji, &type metadata for Catalog.Diffusion.Adapter.Emoji);
    atomic_store(result, (unint64_t *)&qword_25719F120);
  }
  return result;
}

unint64_t sub_2420D2A9C()
{
  unint64_t result;

  result = qword_25719F128;
  if (!qword_25719F128)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Emoji, &type metadata for Catalog.Diffusion.Adapter.Emoji);
    atomic_store(result, (unint64_t *)&qword_25719F128);
  }
  return result;
}

unint64_t sub_2420D2AD8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2AFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2AFC()
{
  unint64_t result;

  result = qword_25719F130;
  if (!qword_25719F130)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Illustration, &type metadata for Catalog.Diffusion.Adapter.Illustration);
    atomic_store(result, (unint64_t *)&qword_25719F130);
  }
  return result;
}

unint64_t sub_2420D2B38(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2B5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2B5C()
{
  unint64_t result;

  result = qword_25719F138;
  if (!qword_25719F138)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Illustration, &type metadata for Catalog.Diffusion.Adapter.Illustration);
    atomic_store(result, (unint64_t *)&qword_25719F138);
  }
  return result;
}

void sub_2420D2B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D2BAC, (uint64_t (*)(void))sub_2420D2BE8);
}

unint64_t sub_2420D2BAC()
{
  unint64_t result;

  result = qword_25719F140;
  if (!qword_25719F140)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Illustration, &type metadata for Catalog.Diffusion.Adapter.Illustration);
    atomic_store(result, (unint64_t *)&qword_25719F140);
  }
  return result;
}

unint64_t sub_2420D2BE8()
{
  unint64_t result;

  result = qword_25719F148;
  if (!qword_25719F148)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Illustration, &type metadata for Catalog.Diffusion.Adapter.Illustration);
    atomic_store(result, (unint64_t *)&qword_25719F148);
  }
  return result;
}

unint64_t sub_2420D2C28()
{
  unint64_t result;

  result = qword_25719F150;
  if (!qword_25719F150)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Illustration, &type metadata for Catalog.Diffusion.Adapter.Illustration);
    atomic_store(result, (unint64_t *)&qword_25719F150);
  }
  return result;
}

unint64_t sub_2420D2C64(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2C88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2C88()
{
  unint64_t result;

  result = qword_25719F158;
  if (!qword_25719F158)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedAnimation, &type metadata for Catalog.Diffusion.Adapter.PersonalizedAnimation);
    atomic_store(result, (unint64_t *)&qword_25719F158);
  }
  return result;
}

unint64_t sub_2420D2CC4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2CE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2CE8()
{
  unint64_t result;

  result = qword_25719F160;
  if (!qword_25719F160)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedAnimation, &type metadata for Catalog.Diffusion.Adapter.PersonalizedAnimation);
    atomic_store(result, (unint64_t *)&qword_25719F160);
  }
  return result;
}

void sub_2420D2D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D2D38, (uint64_t (*)(void))sub_2420D2D74);
}

unint64_t sub_2420D2D38()
{
  unint64_t result;

  result = qword_25719F168;
  if (!qword_25719F168)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedAnimation, &type metadata for Catalog.Diffusion.Adapter.PersonalizedAnimation);
    atomic_store(result, (unint64_t *)&qword_25719F168);
  }
  return result;
}

unint64_t sub_2420D2D74()
{
  unint64_t result;

  result = qword_25719F170;
  if (!qword_25719F170)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedAnimation, &type metadata for Catalog.Diffusion.Adapter.PersonalizedAnimation);
    atomic_store(result, (unint64_t *)&qword_25719F170);
  }
  return result;
}

unint64_t sub_2420D2DB4()
{
  unint64_t result;

  result = qword_25719F178;
  if (!qword_25719F178)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedAnimation, &type metadata for Catalog.Diffusion.Adapter.PersonalizedAnimation);
    atomic_store(result, (unint64_t *)&qword_25719F178);
  }
  return result;
}

unint64_t sub_2420D2DF0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2E14();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2E14()
{
  unint64_t result;

  result = qword_25719F180;
  if (!qword_25719F180)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedEmoji, &type metadata for Catalog.Diffusion.Adapter.PersonalizedEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F180);
  }
  return result;
}

unint64_t sub_2420D2E50(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2E74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2E74()
{
  unint64_t result;

  result = qword_25719F188;
  if (!qword_25719F188)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedEmoji, &type metadata for Catalog.Diffusion.Adapter.PersonalizedEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F188);
  }
  return result;
}

void sub_2420D2EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D2EC4, (uint64_t (*)(void))sub_2420D2F00);
}

unint64_t sub_2420D2EC4()
{
  unint64_t result;

  result = qword_25719F190;
  if (!qword_25719F190)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedEmoji, &type metadata for Catalog.Diffusion.Adapter.PersonalizedEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F190);
  }
  return result;
}

unint64_t sub_2420D2F00()
{
  unint64_t result;

  result = qword_25719F198;
  if (!qword_25719F198)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedEmoji, &type metadata for Catalog.Diffusion.Adapter.PersonalizedEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F198);
  }
  return result;
}

unint64_t sub_2420D2F40()
{
  unint64_t result;

  result = qword_25719F1A0;
  if (!qword_25719F1A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedEmoji, &type metadata for Catalog.Diffusion.Adapter.PersonalizedEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F1A0);
  }
  return result;
}

unint64_t sub_2420D2F7C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D2FA0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D2FA0()
{
  unint64_t result;

  result = qword_25719F1A8;
  if (!qword_25719F1A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedIllustration, &type metadata for Catalog.Diffusion.Adapter.PersonalizedIllustration);
    atomic_store(result, (unint64_t *)&qword_25719F1A8);
  }
  return result;
}

unint64_t sub_2420D2FDC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3000();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3000()
{
  unint64_t result;

  result = qword_25719F1B0;
  if (!qword_25719F1B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedIllustration, &type metadata for Catalog.Diffusion.Adapter.PersonalizedIllustration);
    atomic_store(result, (unint64_t *)&qword_25719F1B0);
  }
  return result;
}

void sub_2420D303C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3050, (uint64_t (*)(void))sub_2420D308C);
}

unint64_t sub_2420D3050()
{
  unint64_t result;

  result = qword_25719F1B8;
  if (!qword_25719F1B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedIllustration, &type metadata for Catalog.Diffusion.Adapter.PersonalizedIllustration);
    atomic_store(result, (unint64_t *)&qword_25719F1B8);
  }
  return result;
}

unint64_t sub_2420D308C()
{
  unint64_t result;

  result = qword_25719F1C0;
  if (!qword_25719F1C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedIllustration, &type metadata for Catalog.Diffusion.Adapter.PersonalizedIllustration);
    atomic_store(result, (unint64_t *)&qword_25719F1C0);
  }
  return result;
}

unint64_t sub_2420D30CC()
{
  unint64_t result;

  result = qword_25719F1C8;
  if (!qword_25719F1C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedIllustration, &type metadata for Catalog.Diffusion.Adapter.PersonalizedIllustration);
    atomic_store(result, (unint64_t *)&qword_25719F1C8);
  }
  return result;
}

unint64_t sub_2420D3108(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D312C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D312C()
{
  unint64_t result;

  result = qword_25719F1D0;
  if (!qword_25719F1D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedScribble, &type metadata for Catalog.Diffusion.Adapter.PersonalizedScribble);
    atomic_store(result, (unint64_t *)&qword_25719F1D0);
  }
  return result;
}

unint64_t sub_2420D3168(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D318C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D318C()
{
  unint64_t result;

  result = qword_25719F1D8;
  if (!qword_25719F1D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedScribble, &type metadata for Catalog.Diffusion.Adapter.PersonalizedScribble);
    atomic_store(result, (unint64_t *)&qword_25719F1D8);
  }
  return result;
}

void sub_2420D31C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D31DC, (uint64_t (*)(void))sub_2420D3218);
}

unint64_t sub_2420D31DC()
{
  unint64_t result;

  result = qword_25719F1E0;
  if (!qword_25719F1E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedScribble, &type metadata for Catalog.Diffusion.Adapter.PersonalizedScribble);
    atomic_store(result, (unint64_t *)&qword_25719F1E0);
  }
  return result;
}

unint64_t sub_2420D3218()
{
  unint64_t result;

  result = qword_25719F1E8;
  if (!qword_25719F1E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedScribble, &type metadata for Catalog.Diffusion.Adapter.PersonalizedScribble);
    atomic_store(result, (unint64_t *)&qword_25719F1E8);
  }
  return result;
}

unint64_t sub_2420D3258()
{
  unint64_t result;

  result = qword_25719F1F0;
  if (!qword_25719F1F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedScribble, &type metadata for Catalog.Diffusion.Adapter.PersonalizedScribble);
    atomic_store(result, (unint64_t *)&qword_25719F1F0);
  }
  return result;
}

unint64_t sub_2420D3294(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D32B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D32B8()
{
  unint64_t result;

  result = qword_25719F1F8;
  if (!qword_25719F1F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedSketch, &type metadata for Catalog.Diffusion.Adapter.PersonalizedSketch);
    atomic_store(result, (unint64_t *)&qword_25719F1F8);
  }
  return result;
}

unint64_t sub_2420D32F4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3318();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3318()
{
  unint64_t result;

  result = qword_25719F200;
  if (!qword_25719F200)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedSketch, &type metadata for Catalog.Diffusion.Adapter.PersonalizedSketch);
    atomic_store(result, (unint64_t *)&qword_25719F200);
  }
  return result;
}

void sub_2420D3354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3368, (uint64_t (*)(void))sub_2420D33A4);
}

unint64_t sub_2420D3368()
{
  unint64_t result;

  result = qword_25719F208;
  if (!qword_25719F208)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedSketch, &type metadata for Catalog.Diffusion.Adapter.PersonalizedSketch);
    atomic_store(result, (unint64_t *)&qword_25719F208);
  }
  return result;
}

unint64_t sub_2420D33A4()
{
  unint64_t result;

  result = qword_25719F210;
  if (!qword_25719F210)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedSketch, &type metadata for Catalog.Diffusion.Adapter.PersonalizedSketch);
    atomic_store(result, (unint64_t *)&qword_25719F210);
  }
  return result;
}

unint64_t sub_2420D33E4()
{
  unint64_t result;

  result = qword_25719F218;
  if (!qword_25719F218)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.PersonalizedSketch, &type metadata for Catalog.Diffusion.Adapter.PersonalizedSketch);
    atomic_store(result, (unint64_t *)&qword_25719F218);
  }
  return result;
}

unint64_t sub_2420D3420(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3444();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3444()
{
  unint64_t result;

  result = qword_25719F220;
  if (!qword_25719F220)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Refiner, &type metadata for Catalog.Diffusion.Adapter.Refiner);
    atomic_store(result, (unint64_t *)&qword_25719F220);
  }
  return result;
}

unint64_t sub_2420D3480(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D34A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D34A4()
{
  unint64_t result;

  result = qword_25719F228;
  if (!qword_25719F228)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Refiner, &type metadata for Catalog.Diffusion.Adapter.Refiner);
    atomic_store(result, (unint64_t *)&qword_25719F228);
  }
  return result;
}

void sub_2420D34E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D34F4, (uint64_t (*)(void))sub_2420D3530);
}

unint64_t sub_2420D34F4()
{
  unint64_t result;

  result = qword_25719F230;
  if (!qword_25719F230)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Refiner, &type metadata for Catalog.Diffusion.Adapter.Refiner);
    atomic_store(result, (unint64_t *)&qword_25719F230);
  }
  return result;
}

unint64_t sub_2420D3530()
{
  unint64_t result;

  result = qword_25719F238;
  if (!qword_25719F238)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Refiner, &type metadata for Catalog.Diffusion.Adapter.Refiner);
    atomic_store(result, (unint64_t *)&qword_25719F238);
  }
  return result;
}

unint64_t sub_2420D3570()
{
  unint64_t result;

  result = qword_25719F240;
  if (!qword_25719F240)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Refiner, &type metadata for Catalog.Diffusion.Adapter.Refiner);
    atomic_store(result, (unint64_t *)&qword_25719F240);
  }
  return result;
}

unint64_t sub_2420D35AC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D35D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D35D0()
{
  unint64_t result;

  result = qword_25719F248;
  if (!qword_25719F248)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Scribble, &type metadata for Catalog.Diffusion.Adapter.Scribble);
    atomic_store(result, (unint64_t *)&qword_25719F248);
  }
  return result;
}

unint64_t sub_2420D360C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3630();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3630()
{
  unint64_t result;

  result = qword_25719F250;
  if (!qword_25719F250)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Scribble, &type metadata for Catalog.Diffusion.Adapter.Scribble);
    atomic_store(result, (unint64_t *)&qword_25719F250);
  }
  return result;
}

void sub_2420D366C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3680, (uint64_t (*)(void))sub_2420D36BC);
}

unint64_t sub_2420D3680()
{
  unint64_t result;

  result = qword_25719F258;
  if (!qword_25719F258)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Scribble, &type metadata for Catalog.Diffusion.Adapter.Scribble);
    atomic_store(result, (unint64_t *)&qword_25719F258);
  }
  return result;
}

unint64_t sub_2420D36BC()
{
  unint64_t result;

  result = qword_25719F260;
  if (!qword_25719F260)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Scribble, &type metadata for Catalog.Diffusion.Adapter.Scribble);
    atomic_store(result, (unint64_t *)&qword_25719F260);
  }
  return result;
}

unint64_t sub_2420D36FC()
{
  unint64_t result;

  result = qword_25719F268;
  if (!qword_25719F268)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Scribble, &type metadata for Catalog.Diffusion.Adapter.Scribble);
    atomic_store(result, (unint64_t *)&qword_25719F268);
  }
  return result;
}

unint64_t sub_2420D3738(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D375C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D375C()
{
  unint64_t result;

  result = qword_25719F270;
  if (!qword_25719F270)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Sketch, &type metadata for Catalog.Diffusion.Adapter.Sketch);
    atomic_store(result, (unint64_t *)&qword_25719F270);
  }
  return result;
}

unint64_t sub_2420D3798(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D37BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D37BC()
{
  unint64_t result;

  result = qword_25719F278;
  if (!qword_25719F278)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Sketch, &type metadata for Catalog.Diffusion.Adapter.Sketch);
    atomic_store(result, (unint64_t *)&qword_25719F278);
  }
  return result;
}

void sub_2420D37F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D380C, (uint64_t (*)(void))sub_2420D3848);
}

unint64_t sub_2420D380C()
{
  unint64_t result;

  result = qword_25719F280;
  if (!qword_25719F280)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Sketch, &type metadata for Catalog.Diffusion.Adapter.Sketch);
    atomic_store(result, (unint64_t *)&qword_25719F280);
  }
  return result;
}

unint64_t sub_2420D3848()
{
  unint64_t result;

  result = qword_25719F288;
  if (!qword_25719F288)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Sketch, &type metadata for Catalog.Diffusion.Adapter.Sketch);
    atomic_store(result, (unint64_t *)&qword_25719F288);
  }
  return result;
}

unint64_t sub_2420D3888()
{
  unint64_t result;

  result = qword_25719F290;
  if (!qword_25719F290)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.Sketch, &type metadata for Catalog.Diffusion.Adapter.Sketch);
    atomic_store(result, (unint64_t *)&qword_25719F290);
  }
  return result;
}

unint64_t sub_2420D38C4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D38E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D38E8()
{
  unint64_t result;

  result = qword_25719F298;
  if (!qword_25719F298)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.SkinToneEmoji, &type metadata for Catalog.Diffusion.Adapter.SkinToneEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F298);
  }
  return result;
}

unint64_t sub_2420D3924(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3948();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3948()
{
  unint64_t result;

  result = qword_25719F2A0;
  if (!qword_25719F2A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.SkinToneEmoji, &type metadata for Catalog.Diffusion.Adapter.SkinToneEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F2A0);
  }
  return result;
}

void sub_2420D3984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3998, (uint64_t (*)(void))sub_2420D39D4);
}

unint64_t sub_2420D3998()
{
  unint64_t result;

  result = qword_25719F2A8;
  if (!qword_25719F2A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.SkinToneEmoji, &type metadata for Catalog.Diffusion.Adapter.SkinToneEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F2A8);
  }
  return result;
}

unint64_t sub_2420D39D4()
{
  unint64_t result;

  result = qword_25719F2B0;
  if (!qword_25719F2B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.SkinToneEmoji, &type metadata for Catalog.Diffusion.Adapter.SkinToneEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F2B0);
  }
  return result;
}

unint64_t sub_2420D3A14()
{
  unint64_t result;

  result = qword_25719F2B8;
  if (!qword_25719F2B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Adapter.SkinToneEmoji, &type metadata for Catalog.Diffusion.Adapter.SkinToneEmoji);
    atomic_store(result, (unint64_t *)&qword_25719F2B8);
  }
  return result;
}

unint64_t sub_2420D3A50(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3A74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3A74()
{
  unint64_t result;

  result = qword_25719F2C0;
  if (!qword_25719F2C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Model.VisualGenerationBase, &type metadata for Catalog.Diffusion.Model.VisualGenerationBase);
    atomic_store(result, (unint64_t *)&qword_25719F2C0);
  }
  return result;
}

unint64_t sub_2420D3AB0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3AD4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3AD4()
{
  unint64_t result;

  result = qword_254397748;
  if (!qword_254397748)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Model.VisualGenerationBase, &type metadata for Catalog.Diffusion.Model.VisualGenerationBase);
    atomic_store(result, (unint64_t *)&qword_254397748);
  }
  return result;
}

void sub_2420D3B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3B24, (uint64_t (*)(void))sub_2420D3B60);
}

unint64_t sub_2420D3B24()
{
  unint64_t result;

  result = qword_254397730;
  if (!qword_254397730)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Model.VisualGenerationBase, &type metadata for Catalog.Diffusion.Model.VisualGenerationBase);
    atomic_store(result, (unint64_t *)&qword_254397730);
  }
  return result;
}

unint64_t sub_2420D3B60()
{
  unint64_t result;

  result = qword_254397740;
  if (!qword_254397740)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Model.VisualGenerationBase, &type metadata for Catalog.Diffusion.Model.VisualGenerationBase);
    atomic_store(result, (unint64_t *)&qword_254397740);
  }
  return result;
}

unint64_t sub_2420D3BA0()
{
  unint64_t result;

  result = qword_254397738;
  if (!qword_254397738)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.Diffusion.Model.VisualGenerationBase, &type metadata for Catalog.Diffusion.Model.VisualGenerationBase);
    atomic_store(result, (unint64_t *)&qword_254397738);
  }
  return result;
}

unint64_t sub_2420D3BDC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3C00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3C00()
{
  unint64_t result;

  result = qword_25719F2C8;
  if (!qword_25719F2C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.DisabledUseCaseList.All, &type metadata for Catalog.DisabledUseCaseList.All);
    atomic_store(result, (unint64_t *)&qword_25719F2C8);
  }
  return result;
}

void sub_2420D3C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3C50, (uint64_t (*)(void))sub_2420D3C8C);
}

unint64_t sub_2420D3C50()
{
  unint64_t result;

  result = qword_25719F2D0;
  if (!qword_25719F2D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.DisabledUseCaseList.All, &type metadata for Catalog.DisabledUseCaseList.All);
    atomic_store(result, (unint64_t *)&qword_25719F2D0);
  }
  return result;
}

unint64_t sub_2420D3C8C()
{
  unint64_t result;

  result = qword_25719F2D8;
  if (!qword_25719F2D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.DisabledUseCaseList.All, &type metadata for Catalog.DisabledUseCaseList.All);
    atomic_store(result, (unint64_t *)&qword_25719F2D8);
  }
  return result;
}

unint64_t sub_2420D3CCC()
{
  unint64_t result;

  result = qword_25719F2E0;
  if (!qword_25719F2E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.DisabledUseCaseList.All, &type metadata for Catalog.DisabledUseCaseList.All);
    atomic_store(result, (unint64_t *)&qword_25719F2E0);
  }
  return result;
}

unint64_t sub_2420D3D08(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3D2C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3D2C()
{
  unint64_t result;

  result = qword_25719F2E8;
  if (!qword_25719F2E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.GenerativeFunctionOverrides.All, &type metadata for Catalog.GenerativeFunctionOverrides.All);
    atomic_store(result, (unint64_t *)&qword_25719F2E8);
  }
  return result;
}

void sub_2420D3D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3D7C, (uint64_t (*)(void))sub_2420D3DB8);
}

unint64_t sub_2420D3D7C()
{
  unint64_t result;

  result = qword_25719F2F0;
  if (!qword_25719F2F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.GenerativeFunctionOverrides.All, &type metadata for Catalog.GenerativeFunctionOverrides.All);
    atomic_store(result, (unint64_t *)&qword_25719F2F0);
  }
  return result;
}

unint64_t sub_2420D3DB8()
{
  unint64_t result;

  result = qword_25719F2F8;
  if (!qword_25719F2F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.GenerativeFunctionOverrides.All, &type metadata for Catalog.GenerativeFunctionOverrides.All);
    atomic_store(result, (unint64_t *)&qword_25719F2F8);
  }
  return result;
}

unint64_t sub_2420D3DF8()
{
  unint64_t result;

  result = qword_25719F300;
  if (!qword_25719F300)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.GenerativeFunctionOverrides.All, &type metadata for Catalog.GenerativeFunctionOverrides.All);
    atomic_store(result, (unint64_t *)&qword_25719F300);
  }
  return result;
}

unint64_t sub_2420D3E34(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3E58();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3E58()
{
  unint64_t result;

  result = qword_25719F308;
  if (!qword_25719F308)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.HandwritingSynthesizer.HandwritingSynthesis, &type metadata for Catalog.HandwritingSynthesizer.HandwritingSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F308);
  }
  return result;
}

void sub_2420D3E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3EA8, (uint64_t (*)(void))sub_2420D3EE4);
}

unint64_t sub_2420D3EA8()
{
  unint64_t result;

  result = qword_25719F310;
  if (!qword_25719F310)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.HandwritingSynthesizer.HandwritingSynthesis, &type metadata for Catalog.HandwritingSynthesizer.HandwritingSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F310);
  }
  return result;
}

unint64_t sub_2420D3EE4()
{
  unint64_t result;

  result = qword_25719F318;
  if (!qword_25719F318)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.HandwritingSynthesizer.HandwritingSynthesis, &type metadata for Catalog.HandwritingSynthesizer.HandwritingSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F318);
  }
  return result;
}

unint64_t sub_2420D3F24()
{
  unint64_t result;

  result = qword_25719F320;
  if (!qword_25719F320)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.HandwritingSynthesizer.HandwritingSynthesis, &type metadata for Catalog.HandwritingSynthesizer.HandwritingSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F320);
  }
  return result;
}

unint64_t sub_2420D3F60(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D3F84();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D3F84()
{
  unint64_t result;

  result = qword_25719F328;
  if (!qword_25719F328)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.Conditioning, &type metadata for Catalog.ImageFilter.Conditioning);
    atomic_store(result, (unint64_t *)&qword_25719F328);
  }
  return result;
}

void sub_2420D3FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D3FD4, (uint64_t (*)(void))sub_2420D4010);
}

unint64_t sub_2420D3FD4()
{
  unint64_t result;

  result = qword_25719F330;
  if (!qword_25719F330)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.Conditioning, &type metadata for Catalog.ImageFilter.Conditioning);
    atomic_store(result, (unint64_t *)&qword_25719F330);
  }
  return result;
}

unint64_t sub_2420D4010()
{
  unint64_t result;

  result = qword_25719F338;
  if (!qword_25719F338)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.Conditioning, &type metadata for Catalog.ImageFilter.Conditioning);
    atomic_store(result, (unint64_t *)&qword_25719F338);
  }
  return result;
}

unint64_t sub_2420D4050()
{
  unint64_t result;

  result = qword_25719F340;
  if (!qword_25719F340)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.Conditioning, &type metadata for Catalog.ImageFilter.Conditioning);
    atomic_store(result, (unint64_t *)&qword_25719F340);
  }
  return result;
}

unint64_t sub_2420D408C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D40B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D40B0()
{
  unint64_t result;

  result = qword_25719F348;
  if (!qword_25719F348)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.Face2Word, &type metadata for Catalog.ImageFilter.Face2Word);
    atomic_store(result, (unint64_t *)&qword_25719F348);
  }
  return result;
}

void sub_2420D40EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D4100, (uint64_t (*)(void))sub_2420D413C);
}

unint64_t sub_2420D4100()
{
  unint64_t result;

  result = qword_25719F350;
  if (!qword_25719F350)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.Face2Word, &type metadata for Catalog.ImageFilter.Face2Word);
    atomic_store(result, (unint64_t *)&qword_25719F350);
  }
  return result;
}

unint64_t sub_2420D413C()
{
  unint64_t result;

  result = qword_25719F358;
  if (!qword_25719F358)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.Face2Word, &type metadata for Catalog.ImageFilter.Face2Word);
    atomic_store(result, (unint64_t *)&qword_25719F358);
  }
  return result;
}

unint64_t sub_2420D417C()
{
  unint64_t result;

  result = qword_25719F360;
  if (!qword_25719F360)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.Face2Word, &type metadata for Catalog.ImageFilter.Face2Word);
    atomic_store(result, (unint64_t *)&qword_25719F360);
  }
  return result;
}

unint64_t sub_2420D41B8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D41DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D41DC()
{
  unint64_t result;

  result = qword_25719F368;
  if (!qword_25719F368)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.HolisticallyNestedEdgeDetector, &type metadata for Catalog.ImageFilter.HolisticallyNestedEdgeDetector);
    atomic_store(result, (unint64_t *)&qword_25719F368);
  }
  return result;
}

void sub_2420D4218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D422C, (uint64_t (*)(void))sub_2420D4268);
}

unint64_t sub_2420D422C()
{
  unint64_t result;

  result = qword_25719F370;
  if (!qword_25719F370)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.HolisticallyNestedEdgeDetector, &type metadata for Catalog.ImageFilter.HolisticallyNestedEdgeDetector);
    atomic_store(result, (unint64_t *)&qword_25719F370);
  }
  return result;
}

unint64_t sub_2420D4268()
{
  unint64_t result;

  result = qword_25719F378;
  if (!qword_25719F378)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.HolisticallyNestedEdgeDetector, &type metadata for Catalog.ImageFilter.HolisticallyNestedEdgeDetector);
    atomic_store(result, (unint64_t *)&qword_25719F378);
  }
  return result;
}

unint64_t sub_2420D42A8()
{
  unint64_t result;

  result = qword_25719F380;
  if (!qword_25719F380)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageFilter.HolisticallyNestedEdgeDetector, &type metadata for Catalog.ImageFilter.HolisticallyNestedEdgeDetector);
    atomic_store(result, (unint64_t *)&qword_25719F380);
  }
  return result;
}

unint64_t sub_2420D42E4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4308();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4308()
{
  unint64_t result;

  result = qword_25719F388;
  if (!qword_25719F388)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageInpainter.PhotosMagicClean, &type metadata for Catalog.ImageInpainter.PhotosMagicClean);
    atomic_store(result, (unint64_t *)&qword_25719F388);
  }
  return result;
}

void sub_2420D4344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D4358, (uint64_t (*)(void))sub_2420D4394);
}

unint64_t sub_2420D4358()
{
  unint64_t result;

  result = qword_25719F390;
  if (!qword_25719F390)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageInpainter.PhotosMagicClean, &type metadata for Catalog.ImageInpainter.PhotosMagicClean);
    atomic_store(result, (unint64_t *)&qword_25719F390);
  }
  return result;
}

unint64_t sub_2420D4394()
{
  unint64_t result;

  result = qword_25719F398;
  if (!qword_25719F398)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageInpainter.PhotosMagicClean, &type metadata for Catalog.ImageInpainter.PhotosMagicClean);
    atomic_store(result, (unint64_t *)&qword_25719F398);
  }
  return result;
}

unint64_t sub_2420D43D4()
{
  unint64_t result;

  result = qword_25719F3A0;
  if (!qword_25719F3A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageInpainter.PhotosMagicClean, &type metadata for Catalog.ImageInpainter.PhotosMagicClean);
    atomic_store(result, (unint64_t *)&qword_25719F3A0);
  }
  return result;
}

unint64_t sub_2420D4410(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4434();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4434()
{
  unint64_t result;

  result = qword_25719F3A8;
  if (!qword_25719F3A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp, &type metadata for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp);
    atomic_store(result, (unint64_t *)&qword_25719F3A8);
  }
  return result;
}

void sub_2420D4470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D4484, (uint64_t (*)(void))sub_2420D44C0);
}

unint64_t sub_2420D4484()
{
  unint64_t result;

  result = qword_25719F3B0;
  if (!qword_25719F3B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp, &type metadata for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp);
    atomic_store(result, (unint64_t *)&qword_25719F3B0);
  }
  return result;
}

unint64_t sub_2420D44C0()
{
  unint64_t result;

  result = qword_25719F3B8;
  if (!qword_25719F3B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp, &type metadata for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp);
    atomic_store(result, (unint64_t *)&qword_25719F3B8);
  }
  return result;
}

unint64_t sub_2420D4500()
{
  unint64_t result;

  result = qword_25719F3C0;
  if (!qword_25719F3C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp, &type metadata for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp);
    atomic_store(result, (unint64_t *)&qword_25719F3C0);
  }
  return result;
}

unint64_t sub_2420D453C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4560();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4560()
{
  unint64_t result;

  result = qword_25719F3C8;
  if (!qword_25719F3C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageScaler.GenerativePlaygroundsUpscaler, &type metadata for Catalog.ImageScaler.GenerativePlaygroundsUpscaler);
    atomic_store(result, (unint64_t *)&qword_25719F3C8);
  }
  return result;
}

void sub_2420D459C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D45B0, (uint64_t (*)(void))sub_2420D45EC);
}

unint64_t sub_2420D45B0()
{
  unint64_t result;

  result = qword_25719F3D0;
  if (!qword_25719F3D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageScaler.GenerativePlaygroundsUpscaler, &type metadata for Catalog.ImageScaler.GenerativePlaygroundsUpscaler);
    atomic_store(result, (unint64_t *)&qword_25719F3D0);
  }
  return result;
}

unint64_t sub_2420D45EC()
{
  unint64_t result;

  result = qword_25719F3D8;
  if (!qword_25719F3D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageScaler.GenerativePlaygroundsUpscaler, &type metadata for Catalog.ImageScaler.GenerativePlaygroundsUpscaler);
    atomic_store(result, (unint64_t *)&qword_25719F3D8);
  }
  return result;
}

unint64_t sub_2420D462C()
{
  unint64_t result;

  result = qword_25719F3E0;
  if (!qword_25719F3E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageScaler.GenerativePlaygroundsUpscaler, &type metadata for Catalog.ImageScaler.GenerativePlaygroundsUpscaler);
    atomic_store(result, (unint64_t *)&qword_25719F3E0);
  }
  return result;
}

unint64_t sub_2420D4668(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D468C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D468C()
{
  unint64_t result;

  result = qword_25719F3E8;
  if (!qword_25719F3E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter, &type metadata for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter);
    atomic_store(result, (unint64_t *)&qword_25719F3E8);
  }
  return result;
}

void sub_2420D46C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D46DC, (uint64_t (*)(void))sub_2420D4718);
}

unint64_t sub_2420D46DC()
{
  unint64_t result;

  result = qword_25719F3F0;
  if (!qword_25719F3F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter, &type metadata for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter);
    atomic_store(result, (unint64_t *)&qword_25719F3F0);
  }
  return result;
}

unint64_t sub_2420D4718()
{
  unint64_t result;

  result = qword_25719F3F8;
  if (!qword_25719F3F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter, &type metadata for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter);
    atomic_store(result, (unint64_t *)&qword_25719F3F8);
  }
  return result;
}

unint64_t sub_2420D4758()
{
  unint64_t result;

  result = qword_25719F400;
  if (!qword_25719F400)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter, &type metadata for Catalog.ImageSegmenter.ForegroundBackgroundSegmenter);
    atomic_store(result, (unint64_t *)&qword_25719F400);
  }
  return result;
}

unint64_t sub_2420D4798()
{
  unint64_t result;

  result = qword_25719F408;
  if (!qword_25719F408)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.AFMTextInstruct3BBase, &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase);
    atomic_store(result, (unint64_t *)&qword_25719F408);
  }
  return result;
}

unint64_t sub_2420D47D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D47F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D47F8()
{
  unint64_t result;

  result = qword_25719F410;
  if (!qword_25719F410)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesis, &type metadata for Catalog.LLM.Adapter.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F410);
  }
  return result;
}

unint64_t sub_2420D4834(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4858();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4858()
{
  unint64_t result;

  result = qword_25719F418;
  if (!qword_25719F418)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesis, &type metadata for Catalog.LLM.Adapter.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F418);
  }
  return result;
}

unint64_t sub_2420D4894(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D48B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D48B8()
{
  unint64_t result;

  result = qword_25719F420;
  if (!qword_25719F420)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesis, &type metadata for Catalog.LLM.Adapter.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F420);
  }
  return result;
}

void sub_2420D48F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D4908, (uint64_t (*)(void))sub_2420D4944);
}

unint64_t sub_2420D4908()
{
  unint64_t result;

  result = qword_25719F428;
  if (!qword_25719F428)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesis, &type metadata for Catalog.LLM.Adapter.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F428);
  }
  return result;
}

unint64_t sub_2420D4944()
{
  unint64_t result;

  result = qword_25719F430;
  if (!qword_25719F430)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesis, &type metadata for Catalog.LLM.Adapter.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F430);
  }
  return result;
}

unint64_t sub_2420D4984()
{
  unint64_t result;

  result = qword_25719F438;
  if (!qword_25719F438)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesis, &type metadata for Catalog.LLM.Adapter.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719F438);
  }
  return result;
}

unint64_t sub_2420D49C4()
{
  unint64_t result;

  result = qword_25719F440;
  if (!qword_25719F440)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.InstructServerBase, &type metadata for Catalog.LLM.Model.InstructServerBase);
    atomic_store(result, (unint64_t *)&qword_25719F440);
  }
  return result;
}

unint64_t sub_2420D4A00(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4A24();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4A24()
{
  unint64_t result;

  result = qword_25719F448;
  if (!qword_25719F448)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesisServer, &type metadata for Catalog.LLM.Adapter.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719F448);
  }
  return result;
}

unint64_t sub_2420D4A60(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4A84();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4A84()
{
  unint64_t result;

  result = qword_25719F450;
  if (!qword_25719F450)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesisServer, &type metadata for Catalog.LLM.Adapter.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719F450);
  }
  return result;
}

unint64_t sub_2420D4AC0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4AE4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4AE4()
{
  unint64_t result;

  result = qword_25719F458;
  if (!qword_25719F458)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesisServer, &type metadata for Catalog.LLM.Adapter.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719F458);
  }
  return result;
}

void sub_2420D4B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D4B34, (uint64_t (*)(void))sub_2420D4B70);
}

unint64_t sub_2420D4B34()
{
  unint64_t result;

  result = qword_25719F460;
  if (!qword_25719F460)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesisServer, &type metadata for Catalog.LLM.Adapter.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719F460);
  }
  return result;
}

unint64_t sub_2420D4B70()
{
  unint64_t result;

  result = qword_25719F468;
  if (!qword_25719F468)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesisServer, &type metadata for Catalog.LLM.Adapter.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719F468);
  }
  return result;
}

unint64_t sub_2420D4BB0()
{
  unint64_t result;

  result = qword_25719F470;
  if (!qword_25719F470)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AnswerSynthesisServer, &type metadata for Catalog.LLM.Adapter.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719F470);
  }
  return result;
}

unint64_t sub_2420D4BEC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4C10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4C10()
{
  unint64_t result;

  result = qword_25719F478;
  if (!qword_25719F478)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AutonamingMessages, &type metadata for Catalog.LLM.Adapter.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_25719F478);
  }
  return result;
}

unint64_t sub_2420D4C4C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4C70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4C70()
{
  unint64_t result;

  result = qword_25719F480;
  if (!qword_25719F480)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AutonamingMessages, &type metadata for Catalog.LLM.Adapter.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_25719F480);
  }
  return result;
}

unint64_t sub_2420D4CAC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4CD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4CD0()
{
  unint64_t result;

  result = qword_254397648;
  if (!qword_254397648)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AutonamingMessages, &type metadata for Catalog.LLM.Adapter.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_254397648);
  }
  return result;
}

void sub_2420D4D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D4D20, (uint64_t (*)(void))sub_2420D4D5C);
}

unint64_t sub_2420D4D20()
{
  unint64_t result;

  result = qword_254397630;
  if (!qword_254397630)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AutonamingMessages, &type metadata for Catalog.LLM.Adapter.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_254397630);
  }
  return result;
}

unint64_t sub_2420D4D5C()
{
  unint64_t result;

  result = qword_254397640;
  if (!qword_254397640)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AutonamingMessages, &type metadata for Catalog.LLM.Adapter.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_254397640);
  }
  return result;
}

unint64_t sub_2420D4D9C()
{
  unint64_t result;

  result = qword_254397638;
  if (!qword_254397638)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.AutonamingMessages, &type metadata for Catalog.LLM.Adapter.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_254397638);
  }
  return result;
}

unint64_t sub_2420D4DD8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4DFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4DFC()
{
  unint64_t result;

  result = qword_25719F488;
  if (!qword_25719F488)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BaseAdapter, &type metadata for Catalog.LLM.Adapter.BaseAdapter);
    atomic_store(result, (unint64_t *)&qword_25719F488);
  }
  return result;
}

unint64_t sub_2420D4E38(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4E5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4E5C()
{
  unint64_t result;

  result = qword_25719F490;
  if (!qword_25719F490)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BaseAdapter, &type metadata for Catalog.LLM.Adapter.BaseAdapter);
    atomic_store(result, (unint64_t *)&qword_25719F490);
  }
  return result;
}

unint64_t sub_2420D4E98(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4EBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4EBC()
{
  unint64_t result;

  result = qword_25719F498;
  if (!qword_25719F498)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BaseAdapter, &type metadata for Catalog.LLM.Adapter.BaseAdapter);
    atomic_store(result, (unint64_t *)&qword_25719F498);
  }
  return result;
}

void sub_2420D4EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D4F0C, (uint64_t (*)(void))sub_2420D4F48);
}

unint64_t sub_2420D4F0C()
{
  unint64_t result;

  result = qword_25719F4A0;
  if (!qword_25719F4A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BaseAdapter, &type metadata for Catalog.LLM.Adapter.BaseAdapter);
    atomic_store(result, (unint64_t *)&qword_25719F4A0);
  }
  return result;
}

unint64_t sub_2420D4F48()
{
  unint64_t result;

  result = qword_25719F4A8;
  if (!qword_25719F4A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BaseAdapter, &type metadata for Catalog.LLM.Adapter.BaseAdapter);
    atomic_store(result, (unint64_t *)&qword_25719F4A8);
  }
  return result;
}

unint64_t sub_2420D4F88()
{
  unint64_t result;

  result = qword_25719F4B0;
  if (!qword_25719F4B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BaseAdapter, &type metadata for Catalog.LLM.Adapter.BaseAdapter);
    atomic_store(result, (unint64_t *)&qword_25719F4B0);
  }
  return result;
}

unint64_t sub_2420D4FC4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D4FE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D4FE8()
{
  unint64_t result;

  result = qword_25719F4B8;
  if (!qword_25719F4B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BulletsTransform, &type metadata for Catalog.LLM.Adapter.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719F4B8);
  }
  return result;
}

unint64_t sub_2420D5024(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5048();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5048()
{
  unint64_t result;

  result = qword_25719F4C0;
  if (!qword_25719F4C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BulletsTransform, &type metadata for Catalog.LLM.Adapter.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719F4C0);
  }
  return result;
}

unint64_t sub_2420D5084(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D50A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D50A8()
{
  unint64_t result;

  result = qword_254397608;
  if (!qword_254397608)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BulletsTransform, &type metadata for Catalog.LLM.Adapter.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_254397608);
  }
  return result;
}

void sub_2420D50E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D50F8, (uint64_t (*)(void))sub_2420D5134);
}

unint64_t sub_2420D50F8()
{
  unint64_t result;

  result = qword_2543975F0;
  if (!qword_2543975F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BulletsTransform, &type metadata for Catalog.LLM.Adapter.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2543975F0);
  }
  return result;
}

unint64_t sub_2420D5134()
{
  unint64_t result;

  result = qword_254397600;
  if (!qword_254397600)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BulletsTransform, &type metadata for Catalog.LLM.Adapter.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_254397600);
  }
  return result;
}

unint64_t sub_2420D5174()
{
  unint64_t result;

  result = qword_2543975F8;
  if (!qword_2543975F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.BulletsTransform, &type metadata for Catalog.LLM.Adapter.BulletsTransform);
    atomic_store(result, (unint64_t *)&qword_2543975F8);
  }
  return result;
}

unint64_t sub_2420D51B0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D51D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D51D4()
{
  unint64_t result;

  result = qword_25719F4C8;
  if (!qword_25719F4C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ConciseTone, &type metadata for Catalog.LLM.Adapter.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719F4C8);
  }
  return result;
}

unint64_t sub_2420D5210(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5234();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5234()
{
  unint64_t result;

  result = qword_25719F4D0;
  if (!qword_25719F4D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ConciseTone, &type metadata for Catalog.LLM.Adapter.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719F4D0);
  }
  return result;
}

unint64_t sub_2420D5270(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5294();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5294()
{
  unint64_t result;

  result = qword_254397548;
  if (!qword_254397548)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ConciseTone, &type metadata for Catalog.LLM.Adapter.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_254397548);
  }
  return result;
}

void sub_2420D52D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D52E4, (uint64_t (*)(void))sub_2420D5320);
}

unint64_t sub_2420D52E4()
{
  unint64_t result;

  result = qword_254397530;
  if (!qword_254397530)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ConciseTone, &type metadata for Catalog.LLM.Adapter.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_254397530);
  }
  return result;
}

unint64_t sub_2420D5320()
{
  unint64_t result;

  result = qword_254397540;
  if (!qword_254397540)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ConciseTone, &type metadata for Catalog.LLM.Adapter.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_254397540);
  }
  return result;
}

unint64_t sub_2420D5360()
{
  unint64_t result;

  result = qword_254397538;
  if (!qword_254397538)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ConciseTone, &type metadata for Catalog.LLM.Adapter.ConciseTone);
    atomic_store(result, (unint64_t *)&qword_254397538);
  }
  return result;
}

unint64_t sub_2420D539C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D53C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D53C0()
{
  unint64_t result;

  result = qword_25719F4D8;
  if (!qword_25719F4D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FactualConsistencyClassifier, &type metadata for Catalog.LLM.Adapter.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719F4D8);
  }
  return result;
}

unint64_t sub_2420D53FC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5420();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5420()
{
  unint64_t result;

  result = qword_25719F4E0;
  if (!qword_25719F4E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FactualConsistencyClassifier, &type metadata for Catalog.LLM.Adapter.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719F4E0);
  }
  return result;
}

unint64_t sub_2420D545C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5480();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5480()
{
  unint64_t result;

  result = qword_25719F4E8;
  if (!qword_25719F4E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FactualConsistencyClassifier, &type metadata for Catalog.LLM.Adapter.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719F4E8);
  }
  return result;
}

void sub_2420D54BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D54D0, (uint64_t (*)(void))sub_2420D550C);
}

unint64_t sub_2420D54D0()
{
  unint64_t result;

  result = qword_25719F4F0;
  if (!qword_25719F4F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FactualConsistencyClassifier, &type metadata for Catalog.LLM.Adapter.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719F4F0);
  }
  return result;
}

unint64_t sub_2420D550C()
{
  unint64_t result;

  result = qword_25719F4F8;
  if (!qword_25719F4F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FactualConsistencyClassifier, &type metadata for Catalog.LLM.Adapter.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719F4F8);
  }
  return result;
}

unint64_t sub_2420D554C()
{
  unint64_t result;

  result = qword_25719F500;
  if (!qword_25719F500)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FactualConsistencyClassifier, &type metadata for Catalog.LLM.Adapter.FactualConsistencyClassifier);
    atomic_store(result, (unint64_t *)&qword_25719F500);
  }
  return result;
}

unint64_t sub_2420D5588(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D55AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D55AC()
{
  unint64_t result;

  result = qword_25719F508;
  if (!qword_25719F508)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FriendlyTone, &type metadata for Catalog.LLM.Adapter.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719F508);
  }
  return result;
}

unint64_t sub_2420D55E8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D560C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D560C()
{
  unint64_t result;

  result = qword_25719F510;
  if (!qword_25719F510)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FriendlyTone, &type metadata for Catalog.LLM.Adapter.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719F510);
  }
  return result;
}

unint64_t sub_2420D5648(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D566C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D566C()
{
  unint64_t result;

  result = qword_254397568;
  if (!qword_254397568)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FriendlyTone, &type metadata for Catalog.LLM.Adapter.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_254397568);
  }
  return result;
}

void sub_2420D56A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D56BC, (uint64_t (*)(void))sub_2420D56F8);
}

unint64_t sub_2420D56BC()
{
  unint64_t result;

  result = qword_254397550;
  if (!qword_254397550)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FriendlyTone, &type metadata for Catalog.LLM.Adapter.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_254397550);
  }
  return result;
}

unint64_t sub_2420D56F8()
{
  unint64_t result;

  result = qword_254397560;
  if (!qword_254397560)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FriendlyTone, &type metadata for Catalog.LLM.Adapter.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_254397560);
  }
  return result;
}

unint64_t sub_2420D5738()
{
  unint64_t result;

  result = qword_254397558;
  if (!qword_254397558)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.FriendlyTone, &type metadata for Catalog.LLM.Adapter.FriendlyTone);
    atomic_store(result, (unint64_t *)&qword_254397558);
  }
  return result;
}

unint64_t sub_2420D5774(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5798();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5798()
{
  unint64_t result;

  result = qword_25719F518;
  if (!qword_25719F518)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MagicRewrite, &type metadata for Catalog.LLM.Adapter.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F518);
  }
  return result;
}

unint64_t sub_2420D57D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D57F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D57F8()
{
  unint64_t result;

  result = qword_25719F520;
  if (!qword_25719F520)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MagicRewrite, &type metadata for Catalog.LLM.Adapter.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F520);
  }
  return result;
}

unint64_t sub_2420D5834(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5858();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5858()
{
  unint64_t result;

  result = qword_254397588;
  if (!qword_254397588)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MagicRewrite, &type metadata for Catalog.LLM.Adapter.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_254397588);
  }
  return result;
}

void sub_2420D5894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D58A8, (uint64_t (*)(void))sub_2420D58E4);
}

unint64_t sub_2420D58A8()
{
  unint64_t result;

  result = qword_254397570;
  if (!qword_254397570)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MagicRewrite, &type metadata for Catalog.LLM.Adapter.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_254397570);
  }
  return result;
}

unint64_t sub_2420D58E4()
{
  unint64_t result;

  result = qword_254397580;
  if (!qword_254397580)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MagicRewrite, &type metadata for Catalog.LLM.Adapter.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_254397580);
  }
  return result;
}

unint64_t sub_2420D5924()
{
  unint64_t result;

  result = qword_254397578;
  if (!qword_254397578)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MagicRewrite, &type metadata for Catalog.LLM.Adapter.MagicRewrite);
    atomic_store(result, (unint64_t *)&qword_254397578);
  }
  return result;
}

unint64_t sub_2420D5960(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5984();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5984()
{
  unint64_t result;

  result = qword_25719F528;
  if (!qword_25719F528)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MailReply, &type metadata for Catalog.LLM.Adapter.MailReply);
    atomic_store(result, (unint64_t *)&qword_25719F528);
  }
  return result;
}

unint64_t sub_2420D59C0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D59E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D59E4()
{
  unint64_t result;

  result = qword_25719F530;
  if (!qword_25719F530)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MailReply, &type metadata for Catalog.LLM.Adapter.MailReply);
    atomic_store(result, (unint64_t *)&qword_25719F530);
  }
  return result;
}

unint64_t sub_2420D5A20(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5A44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5A44()
{
  unint64_t result;

  result = qword_254397728;
  if (!qword_254397728)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MailReply, &type metadata for Catalog.LLM.Adapter.MailReply);
    atomic_store(result, (unint64_t *)&qword_254397728);
  }
  return result;
}

void sub_2420D5A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D5A94, (uint64_t (*)(void))sub_2420D5AD0);
}

unint64_t sub_2420D5A94()
{
  unint64_t result;

  result = qword_254397710;
  if (!qword_254397710)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MailReply, &type metadata for Catalog.LLM.Adapter.MailReply);
    atomic_store(result, (unint64_t *)&qword_254397710);
  }
  return result;
}

unint64_t sub_2420D5AD0()
{
  unint64_t result;

  result = qword_254397720;
  if (!qword_254397720)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MailReply, &type metadata for Catalog.LLM.Adapter.MailReply);
    atomic_store(result, (unint64_t *)&qword_254397720);
  }
  return result;
}

unint64_t sub_2420D5B10()
{
  unint64_t result;

  result = qword_254397718;
  if (!qword_254397718)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MailReply, &type metadata for Catalog.LLM.Adapter.MailReply);
    atomic_store(result, (unint64_t *)&qword_254397718);
  }
  return result;
}

unint64_t sub_2420D5B4C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5B70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5B70()
{
  unint64_t result;

  result = qword_25719F538;
  if (!qword_25719F538)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MessagesReply, &type metadata for Catalog.LLM.Adapter.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_25719F538);
  }
  return result;
}

unint64_t sub_2420D5BAC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5BD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5BD0()
{
  unint64_t result;

  result = qword_25719F540;
  if (!qword_25719F540)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MessagesReply, &type metadata for Catalog.LLM.Adapter.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_25719F540);
  }
  return result;
}

unint64_t sub_2420D5C0C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5C30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5C30()
{
  unint64_t result;

  result = qword_2543975A8;
  if (!qword_2543975A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MessagesReply, &type metadata for Catalog.LLM.Adapter.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_2543975A8);
  }
  return result;
}

void sub_2420D5C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D5C80, (uint64_t (*)(void))sub_2420D5CBC);
}

unint64_t sub_2420D5C80()
{
  unint64_t result;

  result = qword_254397590;
  if (!qword_254397590)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MessagesReply, &type metadata for Catalog.LLM.Adapter.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_254397590);
  }
  return result;
}

unint64_t sub_2420D5CBC()
{
  unint64_t result;

  result = qword_2543975A0;
  if (!qword_2543975A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MessagesReply, &type metadata for Catalog.LLM.Adapter.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_2543975A0);
  }
  return result;
}

unint64_t sub_2420D5CFC()
{
  unint64_t result;

  result = qword_254397598;
  if (!qword_254397598)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.MessagesReply, &type metadata for Catalog.LLM.Adapter.MessagesReply);
    atomic_store(result, (unint64_t *)&qword_254397598);
  }
  return result;
}

unint64_t sub_2420D5D3C()
{
  unint64_t result;

  result = qword_25719F548;
  if (!qword_25719F548)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Model.PhotosMemoriesCreationBase, &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase);
    atomic_store(result, (unint64_t *)&qword_25719F548);
  }
  return result;
}

unint64_t sub_2420D5D78(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5D9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5D9C()
{
  unint64_t result;

  result = qword_25719F550;
  if (!qword_25719F550)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_25719F550);
  }
  return result;
}

unint64_t sub_2420D5DD8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5DFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5DFC()
{
  unint64_t result;

  result = qword_25719F558;
  if (!qword_25719F558)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_25719F558);
  }
  return result;
}

unint64_t sub_2420D5E38(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5E5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5E5C()
{
  unint64_t result;

  result = qword_2543976E8;
  if (!qword_2543976E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_2543976E8);
  }
  return result;
}

void sub_2420D5E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D5EAC, (uint64_t (*)(void))sub_2420D5EE8);
}

unint64_t sub_2420D5EAC()
{
  unint64_t result;

  result = qword_2543976D0;
  if (!qword_2543976D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_2543976D0);
  }
  return result;
}

unint64_t sub_2420D5EE8()
{
  unint64_t result;

  result = qword_2543976E0;
  if (!qword_2543976E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_2543976E0);
  }
  return result;
}

unint64_t sub_2420D5F28()
{
  unint64_t result;

  result = qword_2543976D8;
  if (!qword_2543976D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration);
    atomic_store(result, (unint64_t *)&qword_2543976D8);
  }
  return result;
}

unint64_t sub_2420D5F64(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5F88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5F88()
{
  unint64_t result;

  result = qword_25719F560;
  if (!qword_25719F560)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719F560);
  }
  return result;
}

unint64_t sub_2420D5FC4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D5FE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D5FE8()
{
  unint64_t result;

  result = qword_25719F568;
  if (!qword_25719F568)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719F568);
  }
  return result;
}

unint64_t sub_2420D6024(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6048();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6048()
{
  unint64_t result;

  result = qword_25719F570;
  if (!qword_25719F570)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719F570);
  }
  return result;
}

void sub_2420D6084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D6098, (uint64_t (*)(void))sub_2420D60D4);
}

unint64_t sub_2420D6098()
{
  unint64_t result;

  result = qword_25719F578;
  if (!qword_25719F578)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719F578);
  }
  return result;
}

unint64_t sub_2420D60D4()
{
  unint64_t result;

  result = qword_25719F580;
  if (!qword_25719F580)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719F580);
  }
  return result;
}

unint64_t sub_2420D6114()
{
  unint64_t result;

  result = qword_25719F588;
  if (!qword_25719F588)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2);
    atomic_store(result, (unint64_t *)&qword_25719F588);
  }
  return result;
}

unint64_t sub_2420D6150(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6174();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6174()
{
  unint64_t result;

  result = qword_25719F590;
  if (!qword_25719F590)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_25719F590);
  }
  return result;
}

unint64_t sub_2420D61B0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D61D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D61D4()
{
  unint64_t result;

  result = qword_25719F598;
  if (!qword_25719F598)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_25719F598);
  }
  return result;
}

unint64_t sub_2420D6210(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6234();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6234()
{
  unint64_t result;

  result = qword_2543976C8;
  if (!qword_2543976C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_2543976C8);
  }
  return result;
}

void sub_2420D6270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D6284, (uint64_t (*)(void))sub_2420D62C0);
}

unint64_t sub_2420D6284()
{
  unint64_t result;

  result = qword_2543976B0;
  if (!qword_2543976B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_2543976B0);
  }
  return result;
}

unint64_t sub_2420D62C0()
{
  unint64_t result;

  result = qword_2543976C0;
  if (!qword_2543976C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_2543976C0);
  }
  return result;
}

unint64_t sub_2420D6300()
{
  unint64_t result;

  result = qword_2543976B8;
  if (!qword_2543976B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits);
    atomic_store(result, (unint64_t *)&qword_2543976B8);
  }
  return result;
}

unint64_t sub_2420D633C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6360();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6360()
{
  unint64_t result;

  result = qword_25719F5A0;
  if (!qword_25719F5A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719F5A0);
  }
  return result;
}

unint64_t sub_2420D639C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D63C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D63C0()
{
  unint64_t result;

  result = qword_25719F5A8;
  if (!qword_25719F5A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719F5A8);
  }
  return result;
}

unint64_t sub_2420D63FC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6420();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6420()
{
  unint64_t result;

  result = qword_25719F5B0;
  if (!qword_25719F5B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719F5B0);
  }
  return result;
}

void sub_2420D645C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D6470, (uint64_t (*)(void))sub_2420D64AC);
}

unint64_t sub_2420D6470()
{
  unint64_t result;

  result = qword_25719F5B8;
  if (!qword_25719F5B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719F5B8);
  }
  return result;
}

unint64_t sub_2420D64AC()
{
  unint64_t result;

  result = qword_25719F5C0;
  if (!qword_25719F5C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719F5C0);
  }
  return result;
}

unint64_t sub_2420D64EC()
{
  unint64_t result;

  result = qword_25719F5C8;
  if (!qword_25719F5C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2);
    atomic_store(result, (unint64_t *)&qword_25719F5C8);
  }
  return result;
}

unint64_t sub_2420D6528(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D654C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D654C()
{
  unint64_t result;

  result = qword_25719F5D0;
  if (!qword_25719F5D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_25719F5D0);
  }
  return result;
}

unint64_t sub_2420D6588(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D65AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D65AC()
{
  unint64_t result;

  result = qword_25719F5D8;
  if (!qword_25719F5D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_25719F5D8);
  }
  return result;
}

unint64_t sub_2420D65E8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D660C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D660C()
{
  unint64_t result;

  result = qword_254397708;
  if (!qword_254397708)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_254397708);
  }
  return result;
}

void sub_2420D6648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D665C, (uint64_t (*)(void))sub_2420D6698);
}

unint64_t sub_2420D665C()
{
  unint64_t result;

  result = qword_2543976F0;
  if (!qword_2543976F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_2543976F0);
  }
  return result;
}

unint64_t sub_2420D6698()
{
  unint64_t result;

  result = qword_254397700;
  if (!qword_254397700)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_254397700);
  }
  return result;
}

unint64_t sub_2420D66D8()
{
  unint64_t result;

  result = qword_2543976F8;
  if (!qword_2543976F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding);
    atomic_store(result, (unint64_t *)&qword_2543976F8);
  }
  return result;
}

unint64_t sub_2420D6714(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6738();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6738()
{
  unint64_t result;

  result = qword_25719F5E0;
  if (!qword_25719F5E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719F5E0);
  }
  return result;
}

unint64_t sub_2420D6774(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6798();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6798()
{
  unint64_t result;

  result = qword_25719F5E8;
  if (!qword_25719F5E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719F5E8);
  }
  return result;
}

unint64_t sub_2420D67D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D67F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D67F8()
{
  unint64_t result;

  result = qword_25719F5F0;
  if (!qword_25719F5F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719F5F0);
  }
  return result;
}

void sub_2420D6834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D6848, (uint64_t (*)(void))sub_2420D6884);
}

unint64_t sub_2420D6848()
{
  unint64_t result;

  result = qword_25719F5F8;
  if (!qword_25719F5F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719F5F8);
  }
  return result;
}

unint64_t sub_2420D6884()
{
  unint64_t result;

  result = qword_25719F600;
  if (!qword_25719F600)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719F600);
  }
  return result;
}

unint64_t sub_2420D68C4()
{
  unint64_t result;

  result = qword_25719F608;
  if (!qword_25719F608)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2);
    atomic_store(result, (unint64_t *)&qword_25719F608);
  }
  return result;
}

unint64_t sub_2420D6900(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6924();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6924()
{
  unint64_t result;

  result = qword_25719F610;
  if (!qword_25719F610)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_25719F610);
  }
  return result;
}

unint64_t sub_2420D6960(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6984();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6984()
{
  unint64_t result;

  result = qword_25719F618;
  if (!qword_25719F618)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_25719F618);
  }
  return result;
}

unint64_t sub_2420D69C0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D69E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D69E4()
{
  unint64_t result;

  result = qword_2543976A8;
  if (!qword_2543976A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_2543976A8);
  }
  return result;
}

void sub_2420D6A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D6A34, (uint64_t (*)(void))sub_2420D6A70);
}

unint64_t sub_2420D6A34()
{
  unint64_t result;

  result = qword_254397690;
  if (!qword_254397690)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_254397690);
  }
  return result;
}

unint64_t sub_2420D6A70()
{
  unint64_t result;

  result = qword_2543976A0;
  if (!qword_2543976A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_2543976A0);
  }
  return result;
}

unint64_t sub_2420D6AB0()
{
  unint64_t result;

  result = qword_254397698;
  if (!qword_254397698)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller);
    atomic_store(result, (unint64_t *)&qword_254397698);
  }
  return result;
}

unint64_t sub_2420D6AEC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6B10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6B10()
{
  unint64_t result;

  result = qword_25719F620;
  if (!qword_25719F620)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719F620);
  }
  return result;
}

unint64_t sub_2420D6B4C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6B70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6B70()
{
  unint64_t result;

  result = qword_25719F628;
  if (!qword_25719F628)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719F628);
  }
  return result;
}

unint64_t sub_2420D6BAC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6BD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6BD0()
{
  unint64_t result;

  result = qword_25719F630;
  if (!qword_25719F630)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719F630);
  }
  return result;
}

void sub_2420D6C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D6C20, (uint64_t (*)(void))sub_2420D6C5C);
}

unint64_t sub_2420D6C20()
{
  unint64_t result;

  result = qword_25719F638;
  if (!qword_25719F638)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719F638);
  }
  return result;
}

unint64_t sub_2420D6C5C()
{
  unint64_t result;

  result = qword_25719F640;
  if (!qword_25719F640)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719F640);
  }
  return result;
}

unint64_t sub_2420D6C9C()
{
  unint64_t result;

  result = qword_25719F648;
  if (!qword_25719F648)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2, &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2);
    atomic_store(result, (unint64_t *)&qword_25719F648);
  }
  return result;
}

unint64_t sub_2420D6CD8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6CFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6CFC()
{
  unint64_t result;

  result = qword_25719F650;
  if (!qword_25719F650)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Planner, &type metadata for Catalog.LLM.Adapter.Planner);
    atomic_store(result, (unint64_t *)&qword_25719F650);
  }
  return result;
}

unint64_t sub_2420D6D38(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6D5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6D5C()
{
  unint64_t result;

  result = qword_25719F658;
  if (!qword_25719F658)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Planner, &type metadata for Catalog.LLM.Adapter.Planner);
    atomic_store(result, (unint64_t *)&qword_25719F658);
  }
  return result;
}

unint64_t sub_2420D6D98(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6DBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6DBC()
{
  unint64_t result;

  result = qword_25719F660;
  if (!qword_25719F660)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Planner, &type metadata for Catalog.LLM.Adapter.Planner);
    atomic_store(result, (unint64_t *)&qword_25719F660);
  }
  return result;
}

void sub_2420D6DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D6E0C, (uint64_t (*)(void))sub_2420D6E48);
}

unint64_t sub_2420D6E0C()
{
  unint64_t result;

  result = qword_25719F668;
  if (!qword_25719F668)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Planner, &type metadata for Catalog.LLM.Adapter.Planner);
    atomic_store(result, (unint64_t *)&qword_25719F668);
  }
  return result;
}

unint64_t sub_2420D6E48()
{
  unint64_t result;

  result = qword_25719F670;
  if (!qword_25719F670)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Planner, &type metadata for Catalog.LLM.Adapter.Planner);
    atomic_store(result, (unint64_t *)&qword_25719F670);
  }
  return result;
}

unint64_t sub_2420D6E88()
{
  unint64_t result;

  result = qword_25719F678;
  if (!qword_25719F678)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Planner, &type metadata for Catalog.LLM.Adapter.Planner);
    atomic_store(result, (unint64_t *)&qword_25719F678);
  }
  return result;
}

unint64_t sub_2420D6EC4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6EE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6EE8()
{
  unint64_t result;

  result = qword_25719F680;
  if (!qword_25719F680)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV2, &type metadata for Catalog.LLM.Adapter.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719F680);
  }
  return result;
}

unint64_t sub_2420D6F24(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6F48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6F48()
{
  unint64_t result;

  result = qword_25719F688;
  if (!qword_25719F688)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV2, &type metadata for Catalog.LLM.Adapter.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719F688);
  }
  return result;
}

unint64_t sub_2420D6F84(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D6FA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D6FA8()
{
  unint64_t result;

  result = qword_25719F690;
  if (!qword_25719F690)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV2, &type metadata for Catalog.LLM.Adapter.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719F690);
  }
  return result;
}

void sub_2420D6FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D6FF8, (uint64_t (*)(void))sub_2420D7034);
}

unint64_t sub_2420D6FF8()
{
  unint64_t result;

  result = qword_25719F698;
  if (!qword_25719F698)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV2, &type metadata for Catalog.LLM.Adapter.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719F698);
  }
  return result;
}

unint64_t sub_2420D7034()
{
  unint64_t result;

  result = qword_25719F6A0;
  if (!qword_25719F6A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV2, &type metadata for Catalog.LLM.Adapter.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719F6A0);
  }
  return result;
}

unint64_t sub_2420D7074()
{
  unint64_t result;

  result = qword_25719F6A8;
  if (!qword_25719F6A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV2, &type metadata for Catalog.LLM.Adapter.PlannerV2);
    atomic_store(result, (unint64_t *)&qword_25719F6A8);
  }
  return result;
}

unint64_t sub_2420D70B0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D70D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D70D4()
{
  unint64_t result;

  result = qword_25719F6B0;
  if (!qword_25719F6B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV3, &type metadata for Catalog.LLM.Adapter.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719F6B0);
  }
  return result;
}

unint64_t sub_2420D7110(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7134();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7134()
{
  unint64_t result;

  result = qword_25719F6B8;
  if (!qword_25719F6B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV3, &type metadata for Catalog.LLM.Adapter.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719F6B8);
  }
  return result;
}

unint64_t sub_2420D7170(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7194();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7194()
{
  unint64_t result;

  result = qword_25719F6C0;
  if (!qword_25719F6C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV3, &type metadata for Catalog.LLM.Adapter.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719F6C0);
  }
  return result;
}

void sub_2420D71D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D71E4, (uint64_t (*)(void))sub_2420D7220);
}

unint64_t sub_2420D71E4()
{
  unint64_t result;

  result = qword_25719F6C8;
  if (!qword_25719F6C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV3, &type metadata for Catalog.LLM.Adapter.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719F6C8);
  }
  return result;
}

unint64_t sub_2420D7220()
{
  unint64_t result;

  result = qword_25719F6D0;
  if (!qword_25719F6D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV3, &type metadata for Catalog.LLM.Adapter.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719F6D0);
  }
  return result;
}

unint64_t sub_2420D7260()
{
  unint64_t result;

  result = qword_25719F6D8;
  if (!qword_25719F6D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.PlannerV3, &type metadata for Catalog.LLM.Adapter.PlannerV3);
    atomic_store(result, (unint64_t *)&qword_25719F6D8);
  }
  return result;
}

unint64_t sub_2420D729C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D72C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D72C0()
{
  unint64_t result;

  result = qword_25719F6E0;
  if (!qword_25719F6E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProfessionalTone, &type metadata for Catalog.LLM.Adapter.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719F6E0);
  }
  return result;
}

unint64_t sub_2420D72FC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7320();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7320()
{
  unint64_t result;

  result = qword_25719F6E8;
  if (!qword_25719F6E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProfessionalTone, &type metadata for Catalog.LLM.Adapter.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719F6E8);
  }
  return result;
}

unint64_t sub_2420D735C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7380();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7380()
{
  unint64_t result;

  result = qword_254397628;
  if (!qword_254397628)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProfessionalTone, &type metadata for Catalog.LLM.Adapter.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_254397628);
  }
  return result;
}

void sub_2420D73BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D73D0, (uint64_t (*)(void))sub_2420D740C);
}

unint64_t sub_2420D73D0()
{
  unint64_t result;

  result = qword_254397610;
  if (!qword_254397610)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProfessionalTone, &type metadata for Catalog.LLM.Adapter.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_254397610);
  }
  return result;
}

unint64_t sub_2420D740C()
{
  unint64_t result;

  result = qword_254397620;
  if (!qword_254397620)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProfessionalTone, &type metadata for Catalog.LLM.Adapter.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_254397620);
  }
  return result;
}

unint64_t sub_2420D744C()
{
  unint64_t result;

  result = qword_254397618;
  if (!qword_254397618)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProfessionalTone, &type metadata for Catalog.LLM.Adapter.ProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_254397618);
  }
  return result;
}

unint64_t sub_2420D7488(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D74AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D74AC()
{
  unint64_t result;

  result = qword_25719F6F0;
  if (!qword_25719F6F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProofreadingReview, &type metadata for Catalog.LLM.Adapter.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719F6F0);
  }
  return result;
}

unint64_t sub_2420D74E8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D750C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D750C()
{
  unint64_t result;

  result = qword_25719F6F8;
  if (!qword_25719F6F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProofreadingReview, &type metadata for Catalog.LLM.Adapter.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719F6F8);
  }
  return result;
}

unint64_t sub_2420D7548(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D756C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D756C()
{
  unint64_t result;

  result = qword_254397668;
  if (!qword_254397668)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProofreadingReview, &type metadata for Catalog.LLM.Adapter.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_254397668);
  }
  return result;
}

void sub_2420D75A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D75BC, (uint64_t (*)(void))sub_2420D75F8);
}

unint64_t sub_2420D75BC()
{
  unint64_t result;

  result = qword_254397650;
  if (!qword_254397650)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProofreadingReview, &type metadata for Catalog.LLM.Adapter.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_254397650);
  }
  return result;
}

unint64_t sub_2420D75F8()
{
  unint64_t result;

  result = qword_254397660;
  if (!qword_254397660)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProofreadingReview, &type metadata for Catalog.LLM.Adapter.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_254397660);
  }
  return result;
}

unint64_t sub_2420D7638()
{
  unint64_t result;

  result = qword_254397658;
  if (!qword_254397658)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ProofreadingReview, &type metadata for Catalog.LLM.Adapter.ProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_254397658);
  }
  return result;
}

unint64_t sub_2420D7674(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7698();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7698()
{
  unint64_t result;

  result = qword_25719F700;
  if (!qword_25719F700)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGeneration, &type metadata for Catalog.LLM.Adapter.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719F700);
  }
  return result;
}

unint64_t sub_2420D76D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D76F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D76F8()
{
  unint64_t result;

  result = qword_25719F708;
  if (!qword_25719F708)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGeneration, &type metadata for Catalog.LLM.Adapter.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719F708);
  }
  return result;
}

unint64_t sub_2420D7734(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7758();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7758()
{
  unint64_t result;

  result = qword_25719F710;
  if (!qword_25719F710)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGeneration, &type metadata for Catalog.LLM.Adapter.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719F710);
  }
  return result;
}

void sub_2420D7794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D77A8, (uint64_t (*)(void))sub_2420D77E4);
}

unint64_t sub_2420D77A8()
{
  unint64_t result;

  result = qword_25719F718;
  if (!qword_25719F718)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGeneration, &type metadata for Catalog.LLM.Adapter.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719F718);
  }
  return result;
}

unint64_t sub_2420D77E4()
{
  unint64_t result;

  result = qword_25719F720;
  if (!qword_25719F720)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGeneration, &type metadata for Catalog.LLM.Adapter.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719F720);
  }
  return result;
}

unint64_t sub_2420D7824()
{
  unint64_t result;

  result = qword_25719F728;
  if (!qword_25719F728)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGeneration, &type metadata for Catalog.LLM.Adapter.ResponseGeneration);
    atomic_store(result, (unint64_t *)&qword_25719F728);
  }
  return result;
}

unint64_t sub_2420D7860(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7884();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7884()
{
  unint64_t result;

  result = qword_25719F730;
  if (!qword_25719F730)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV2, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_25719F730);
  }
  return result;
}

unint64_t sub_2420D78C0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D78E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D78E4()
{
  unint64_t result;

  result = qword_25719F738;
  if (!qword_25719F738)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV2, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_25719F738);
  }
  return result;
}

unint64_t sub_2420D7920(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7944();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7944()
{
  unint64_t result;

  result = qword_25719F740;
  if (!qword_25719F740)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV2, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_25719F740);
  }
  return result;
}

void sub_2420D7980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D7994, (uint64_t (*)(void))sub_2420D79D0);
}

unint64_t sub_2420D7994()
{
  unint64_t result;

  result = qword_25719F748;
  if (!qword_25719F748)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV2, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_25719F748);
  }
  return result;
}

unint64_t sub_2420D79D0()
{
  unint64_t result;

  result = qword_25719F750;
  if (!qword_25719F750)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV2, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_25719F750);
  }
  return result;
}

unint64_t sub_2420D7A10()
{
  unint64_t result;

  result = qword_25719F758;
  if (!qword_25719F758)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV2, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV2);
    atomic_store(result, (unint64_t *)&qword_25719F758);
  }
  return result;
}

unint64_t sub_2420D7A4C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7A70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7A70()
{
  unint64_t result;

  result = qword_25719F760;
  if (!qword_25719F760)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV3, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_25719F760);
  }
  return result;
}

unint64_t sub_2420D7AAC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7AD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7AD0()
{
  unint64_t result;

  result = qword_25719F768;
  if (!qword_25719F768)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV3, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_25719F768);
  }
  return result;
}

unint64_t sub_2420D7B0C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7B30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7B30()
{
  unint64_t result;

  result = qword_25719F770;
  if (!qword_25719F770)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV3, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_25719F770);
  }
  return result;
}

void sub_2420D7B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D7B80, (uint64_t (*)(void))sub_2420D7BBC);
}

unint64_t sub_2420D7B80()
{
  unint64_t result;

  result = qword_25719F778;
  if (!qword_25719F778)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV3, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_25719F778);
  }
  return result;
}

unint64_t sub_2420D7BBC()
{
  unint64_t result;

  result = qword_25719F780;
  if (!qword_25719F780)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV3, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_25719F780);
  }
  return result;
}

unint64_t sub_2420D7BFC()
{
  unint64_t result;

  result = qword_25719F788;
  if (!qword_25719F788)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ResponseGenerationV3, &type metadata for Catalog.LLM.Adapter.ResponseGenerationV3);
    atomic_store(result, (unint64_t *)&qword_25719F788);
  }
  return result;
}

unint64_t sub_2420D7C38(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7C5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7C5C()
{
  unint64_t result;

  result = qword_25719F790;
  if (!qword_25719F790)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SafetyGuardrail, &type metadata for Catalog.LLM.Adapter.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_25719F790);
  }
  return result;
}

unint64_t sub_2420D7C98(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7CBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7CBC()
{
  unint64_t result;

  result = qword_25719F798;
  if (!qword_25719F798)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SafetyGuardrail, &type metadata for Catalog.LLM.Adapter.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_25719F798);
  }
  return result;
}

unint64_t sub_2420D7CF8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7D1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7D1C()
{
  unint64_t result;

  result = qword_2543975C8;
  if (!qword_2543975C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SafetyGuardrail, &type metadata for Catalog.LLM.Adapter.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2543975C8);
  }
  return result;
}

void sub_2420D7D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D7D6C, (uint64_t (*)(void))sub_2420D7DA8);
}

unint64_t sub_2420D7D6C()
{
  unint64_t result;

  result = qword_2543975B0;
  if (!qword_2543975B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SafetyGuardrail, &type metadata for Catalog.LLM.Adapter.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2543975B0);
  }
  return result;
}

unint64_t sub_2420D7DA8()
{
  unint64_t result;

  result = qword_2543975C0;
  if (!qword_2543975C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SafetyGuardrail, &type metadata for Catalog.LLM.Adapter.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2543975C0);
  }
  return result;
}

unint64_t sub_2420D7DE8()
{
  unint64_t result;

  result = qword_2543975B8;
  if (!qword_2543975B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SafetyGuardrail, &type metadata for Catalog.LLM.Adapter.SafetyGuardrail);
    atomic_store(result, (unint64_t *)&qword_2543975B8);
  }
  return result;
}

unint64_t sub_2420D7E24(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7E48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7E48()
{
  unint64_t result;

  result = qword_25719F7A0;
  if (!qword_25719F7A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_25719F7A0);
  }
  return result;
}

unint64_t sub_2420D7E84(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7EA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7EA8()
{
  unint64_t result;

  result = qword_25719F7A8;
  if (!qword_25719F7A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_25719F7A8);
  }
  return result;
}

unint64_t sub_2420D7EE4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D7F08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D7F08()
{
  unint64_t result;

  result = qword_25719F7B0;
  if (!qword_25719F7B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_25719F7B0);
  }
  return result;
}

void sub_2420D7F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D7F58, (uint64_t (*)(void))sub_2420D7F94);
}

unint64_t sub_2420D7F58()
{
  unint64_t result;

  result = qword_25719F7B8;
  if (!qword_25719F7B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_25719F7B8);
  }
  return result;
}

unint64_t sub_2420D7F94()
{
  unint64_t result;

  result = qword_25719F7C0;
  if (!qword_25719F7C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_25719F7C0);
  }
  return result;
}

unint64_t sub_2420D7FD4()
{
  unint64_t result;

  result = qword_25719F7C8;
  if (!qword_25719F7C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice);
    atomic_store(result, (unint64_t *)&qword_25719F7C8);
  }
  return result;
}

unint64_t sub_2420D8010(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8034();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8034()
{
  unint64_t result;

  result = qword_25719F7D0;
  if (!qword_25719F7D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_25719F7D0);
  }
  return result;
}

unint64_t sub_2420D8070(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8094();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8094()
{
  unint64_t result;

  result = qword_25719F7D8;
  if (!qword_25719F7D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_25719F7D8);
  }
  return result;
}

unint64_t sub_2420D80D0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D80F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D80F4()
{
  unint64_t result;

  result = qword_25719F7E0;
  if (!qword_25719F7E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_25719F7E0);
  }
  return result;
}

void sub_2420D8130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D8144, (uint64_t (*)(void))sub_2420D8180);
}

unint64_t sub_2420D8144()
{
  unint64_t result;

  result = qword_25719F7E8;
  if (!qword_25719F7E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_25719F7E8);
  }
  return result;
}

unint64_t sub_2420D8180()
{
  unint64_t result;

  result = qword_25719F7F0;
  if (!qword_25719F7F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_25719F7F0);
  }
  return result;
}

unint64_t sub_2420D81C0()
{
  unint64_t result;

  result = qword_25719F7F8;
  if (!qword_25719F7F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.SearchQueryUnderstandingServer, &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingServer);
    atomic_store(result, (unint64_t *)&qword_25719F7F8);
  }
  return result;
}

unint64_t sub_2420D81FC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8220();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8220()
{
  unint64_t result;

  result = qword_25719F800;
  if (!qword_25719F800)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerBulletsTransform, &type metadata for Catalog.LLM.Adapter.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719F800);
  }
  return result;
}

unint64_t sub_2420D825C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8280();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8280()
{
  unint64_t result;

  result = qword_25719F808;
  if (!qword_25719F808)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerBulletsTransform, &type metadata for Catalog.LLM.Adapter.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719F808);
  }
  return result;
}

unint64_t sub_2420D82BC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D82E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D82E0()
{
  unint64_t result;

  result = qword_25719F810;
  if (!qword_25719F810)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerBulletsTransform, &type metadata for Catalog.LLM.Adapter.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719F810);
  }
  return result;
}

void sub_2420D831C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D8330, (uint64_t (*)(void))sub_2420D836C);
}

unint64_t sub_2420D8330()
{
  unint64_t result;

  result = qword_25719F818;
  if (!qword_25719F818)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerBulletsTransform, &type metadata for Catalog.LLM.Adapter.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719F818);
  }
  return result;
}

unint64_t sub_2420D836C()
{
  unint64_t result;

  result = qword_25719F820;
  if (!qword_25719F820)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerBulletsTransform, &type metadata for Catalog.LLM.Adapter.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719F820);
  }
  return result;
}

unint64_t sub_2420D83AC()
{
  unint64_t result;

  result = qword_25719F828;
  if (!qword_25719F828)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerBulletsTransform, &type metadata for Catalog.LLM.Adapter.ServerBulletsTransform);
    atomic_store(result, (unint64_t *)&qword_25719F828);
  }
  return result;
}

unint64_t sub_2420D83E8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D840C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D840C()
{
  unint64_t result;

  result = qword_25719F830;
  if (!qword_25719F830)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerConciseTone, &type metadata for Catalog.LLM.Adapter.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719F830);
  }
  return result;
}

unint64_t sub_2420D8448(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D846C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D846C()
{
  unint64_t result;

  result = qword_25719F838;
  if (!qword_25719F838)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerConciseTone, &type metadata for Catalog.LLM.Adapter.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719F838);
  }
  return result;
}

unint64_t sub_2420D84A8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D84CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D84CC()
{
  unint64_t result;

  result = qword_25719F840;
  if (!qword_25719F840)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerConciseTone, &type metadata for Catalog.LLM.Adapter.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719F840);
  }
  return result;
}

void sub_2420D8508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D851C, (uint64_t (*)(void))sub_2420D8558);
}

unint64_t sub_2420D851C()
{
  unint64_t result;

  result = qword_25719F848;
  if (!qword_25719F848)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerConciseTone, &type metadata for Catalog.LLM.Adapter.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719F848);
  }
  return result;
}

unint64_t sub_2420D8558()
{
  unint64_t result;

  result = qword_25719F850;
  if (!qword_25719F850)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerConciseTone, &type metadata for Catalog.LLM.Adapter.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719F850);
  }
  return result;
}

unint64_t sub_2420D8598()
{
  unint64_t result;

  result = qword_25719F858;
  if (!qword_25719F858)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerConciseTone, &type metadata for Catalog.LLM.Adapter.ServerConciseTone);
    atomic_store(result, (unint64_t *)&qword_25719F858);
  }
  return result;
}

unint64_t sub_2420D85D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D85F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D85F8()
{
  unint64_t result;

  result = qword_25719F860;
  if (!qword_25719F860)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerFriendlyTone, &type metadata for Catalog.LLM.Adapter.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719F860);
  }
  return result;
}

unint64_t sub_2420D8634(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8658();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8658()
{
  unint64_t result;

  result = qword_25719F868;
  if (!qword_25719F868)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerFriendlyTone, &type metadata for Catalog.LLM.Adapter.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719F868);
  }
  return result;
}

unint64_t sub_2420D8694(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D86B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D86B8()
{
  unint64_t result;

  result = qword_25719F870;
  if (!qword_25719F870)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerFriendlyTone, &type metadata for Catalog.LLM.Adapter.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719F870);
  }
  return result;
}

void sub_2420D86F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D8708, (uint64_t (*)(void))sub_2420D8744);
}

unint64_t sub_2420D8708()
{
  unint64_t result;

  result = qword_25719F878;
  if (!qword_25719F878)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerFriendlyTone, &type metadata for Catalog.LLM.Adapter.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719F878);
  }
  return result;
}

unint64_t sub_2420D8744()
{
  unint64_t result;

  result = qword_25719F880;
  if (!qword_25719F880)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerFriendlyTone, &type metadata for Catalog.LLM.Adapter.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719F880);
  }
  return result;
}

unint64_t sub_2420D8784()
{
  unint64_t result;

  result = qword_25719F888;
  if (!qword_25719F888)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerFriendlyTone, &type metadata for Catalog.LLM.Adapter.ServerFriendlyTone);
    atomic_store(result, (unint64_t *)&qword_25719F888);
  }
  return result;
}

unint64_t sub_2420D87C0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D87E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D87E4()
{
  unint64_t result;

  result = qword_25719F890;
  if (!qword_25719F890)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMagicRewrite, &type metadata for Catalog.LLM.Adapter.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F890);
  }
  return result;
}

unint64_t sub_2420D8820(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8844();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8844()
{
  unint64_t result;

  result = qword_25719F898;
  if (!qword_25719F898)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMagicRewrite, &type metadata for Catalog.LLM.Adapter.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F898);
  }
  return result;
}

unint64_t sub_2420D8880(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D88A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D88A4()
{
  unint64_t result;

  result = qword_25719F8A0;
  if (!qword_25719F8A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMagicRewrite, &type metadata for Catalog.LLM.Adapter.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F8A0);
  }
  return result;
}

void sub_2420D88E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D88F4, (uint64_t (*)(void))sub_2420D8930);
}

unint64_t sub_2420D88F4()
{
  unint64_t result;

  result = qword_25719F8A8;
  if (!qword_25719F8A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMagicRewrite, &type metadata for Catalog.LLM.Adapter.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F8A8);
  }
  return result;
}

unint64_t sub_2420D8930()
{
  unint64_t result;

  result = qword_25719F8B0;
  if (!qword_25719F8B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMagicRewrite, &type metadata for Catalog.LLM.Adapter.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F8B0);
  }
  return result;
}

unint64_t sub_2420D8970()
{
  unint64_t result;

  result = qword_25719F8B8;
  if (!qword_25719F8B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMagicRewrite, &type metadata for Catalog.LLM.Adapter.ServerMagicRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F8B8);
  }
  return result;
}

unint64_t sub_2420D89AC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D89D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D89D0()
{
  unint64_t result;

  result = qword_25719F8C0;
  if (!qword_25719F8C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_25719F8C0);
  }
  return result;
}

unint64_t sub_2420D8A0C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8A30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8A30()
{
  unint64_t result;

  result = qword_25719F8C8;
  if (!qword_25719F8C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_25719F8C8);
  }
  return result;
}

unint64_t sub_2420D8A6C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8A90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8A90()
{
  unint64_t result;

  result = qword_25719F8D0;
  if (!qword_25719F8D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_25719F8D0);
  }
  return result;
}

void sub_2420D8ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D8AE0, (uint64_t (*)(void))sub_2420D8B1C);
}

unint64_t sub_2420D8AE0()
{
  unint64_t result;

  result = qword_25719F8D8;
  if (!qword_25719F8D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_25719F8D8);
  }
  return result;
}

unint64_t sub_2420D8B1C()
{
  unint64_t result;

  result = qword_25719F8E0;
  if (!qword_25719F8E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_25719F8E0);
  }
  return result;
}

unint64_t sub_2420D8B5C()
{
  unint64_t result;

  result = qword_25719F8E8;
  if (!qword_25719F8E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic);
    atomic_store(result, (unint64_t *)&qword_25719F8E8);
  }
  return result;
}

unint64_t sub_2420D8B98(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8BBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8BBC()
{
  unint64_t result;

  result = qword_25719F8F0;
  if (!qword_25719F8F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F8F0);
  }
  return result;
}

unint64_t sub_2420D8BF8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8C1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8C1C()
{
  unint64_t result;

  result = qword_25719F8F8;
  if (!qword_25719F8F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F8F8);
  }
  return result;
}

unint64_t sub_2420D8C58(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8C7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8C7C()
{
  unint64_t result;

  result = qword_25719F900;
  if (!qword_25719F900)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F900);
  }
  return result;
}

void sub_2420D8CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D8CCC, (uint64_t (*)(void))sub_2420D8D08);
}

unint64_t sub_2420D8CCC()
{
  unint64_t result;

  result = qword_25719F908;
  if (!qword_25719F908)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F908);
  }
  return result;
}

unint64_t sub_2420D8D08()
{
  unint64_t result;

  result = qword_25719F910;
  if (!qword_25719F910)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F910);
  }
  return result;
}

unint64_t sub_2420D8D48()
{
  unint64_t result;

  result = qword_25719F918;
  if (!qword_25719F918)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite, &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite);
    atomic_store(result, (unint64_t *)&qword_25719F918);
  }
  return result;
}

unint64_t sub_2420D8D84(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8DA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8DA8()
{
  unint64_t result;

  result = qword_25719F920;
  if (!qword_25719F920)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyQA, &type metadata for Catalog.LLM.Adapter.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_25719F920);
  }
  return result;
}

unint64_t sub_2420D8DE4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8E08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8E08()
{
  unint64_t result;

  result = qword_25719F928;
  if (!qword_25719F928)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyQA, &type metadata for Catalog.LLM.Adapter.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_25719F928);
  }
  return result;
}

unint64_t sub_2420D8E44(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8E68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8E68()
{
  unint64_t result;

  result = qword_25719F930;
  if (!qword_25719F930)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyQA, &type metadata for Catalog.LLM.Adapter.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_25719F930);
  }
  return result;
}

void sub_2420D8EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D8EB8, (uint64_t (*)(void))sub_2420D8EF4);
}

unint64_t sub_2420D8EB8()
{
  unint64_t result;

  result = qword_25719F938;
  if (!qword_25719F938)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyQA, &type metadata for Catalog.LLM.Adapter.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_25719F938);
  }
  return result;
}

unint64_t sub_2420D8EF4()
{
  unint64_t result;

  result = qword_25719F940;
  if (!qword_25719F940)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyQA, &type metadata for Catalog.LLM.Adapter.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_25719F940);
  }
  return result;
}

unint64_t sub_2420D8F34()
{
  unint64_t result;

  result = qword_25719F948;
  if (!qword_25719F948)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerMailReplyQA, &type metadata for Catalog.LLM.Adapter.ServerMailReplyQA);
    atomic_store(result, (unint64_t *)&qword_25719F948);
  }
  return result;
}

unint64_t sub_2420D8F70(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8F94();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8F94()
{
  unint64_t result;

  result = qword_25719F950;
  if (!qword_25719F950)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProfessionalTone, &type metadata for Catalog.LLM.Adapter.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719F950);
  }
  return result;
}

unint64_t sub_2420D8FD0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D8FF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D8FF4()
{
  unint64_t result;

  result = qword_25719F958;
  if (!qword_25719F958)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProfessionalTone, &type metadata for Catalog.LLM.Adapter.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719F958);
  }
  return result;
}

unint64_t sub_2420D9030(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9054();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9054()
{
  unint64_t result;

  result = qword_25719F960;
  if (!qword_25719F960)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProfessionalTone, &type metadata for Catalog.LLM.Adapter.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719F960);
  }
  return result;
}

void sub_2420D9090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D90A4, (uint64_t (*)(void))sub_2420D90E0);
}

unint64_t sub_2420D90A4()
{
  unint64_t result;

  result = qword_25719F968;
  if (!qword_25719F968)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProfessionalTone, &type metadata for Catalog.LLM.Adapter.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719F968);
  }
  return result;
}

unint64_t sub_2420D90E0()
{
  unint64_t result;

  result = qword_25719F970;
  if (!qword_25719F970)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProfessionalTone, &type metadata for Catalog.LLM.Adapter.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719F970);
  }
  return result;
}

unint64_t sub_2420D9120()
{
  unint64_t result;

  result = qword_25719F978;
  if (!qword_25719F978)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProfessionalTone, &type metadata for Catalog.LLM.Adapter.ServerProfessionalTone);
    atomic_store(result, (unint64_t *)&qword_25719F978);
  }
  return result;
}

unint64_t sub_2420D915C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9180();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9180()
{
  unint64_t result;

  result = qword_25719F980;
  if (!qword_25719F980)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProofreadingReview, &type metadata for Catalog.LLM.Adapter.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719F980);
  }
  return result;
}

unint64_t sub_2420D91BC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D91E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D91E0()
{
  unint64_t result;

  result = qword_25719F988;
  if (!qword_25719F988)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProofreadingReview, &type metadata for Catalog.LLM.Adapter.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719F988);
  }
  return result;
}

unint64_t sub_2420D921C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9240();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9240()
{
  unint64_t result;

  result = qword_25719F990;
  if (!qword_25719F990)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProofreadingReview, &type metadata for Catalog.LLM.Adapter.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719F990);
  }
  return result;
}

void sub_2420D927C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D9290, (uint64_t (*)(void))sub_2420D92CC);
}

unint64_t sub_2420D9290()
{
  unint64_t result;

  result = qword_25719F998;
  if (!qword_25719F998)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProofreadingReview, &type metadata for Catalog.LLM.Adapter.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719F998);
  }
  return result;
}

unint64_t sub_2420D92CC()
{
  unint64_t result;

  result = qword_25719F9A0;
  if (!qword_25719F9A0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProofreadingReview, &type metadata for Catalog.LLM.Adapter.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719F9A0);
  }
  return result;
}

unint64_t sub_2420D930C()
{
  unint64_t result;

  result = qword_25719F9A8;
  if (!qword_25719F9A8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerProofreadingReview, &type metadata for Catalog.LLM.Adapter.ServerProofreadingReview);
    atomic_store(result, (unint64_t *)&qword_25719F9A8);
  }
  return result;
}

unint64_t sub_2420D9348(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D936C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D936C()
{
  unint64_t result;

  result = qword_25719F9B0;
  if (!qword_25719F9B0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTablesTransform, &type metadata for Catalog.LLM.Adapter.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9B0);
  }
  return result;
}

unint64_t sub_2420D93A8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D93CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D93CC()
{
  unint64_t result;

  result = qword_25719F9B8;
  if (!qword_25719F9B8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTablesTransform, &type metadata for Catalog.LLM.Adapter.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9B8);
  }
  return result;
}

unint64_t sub_2420D9408(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D942C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D942C()
{
  unint64_t result;

  result = qword_25719F9C0;
  if (!qword_25719F9C0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTablesTransform, &type metadata for Catalog.LLM.Adapter.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9C0);
  }
  return result;
}

void sub_2420D9468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D947C, (uint64_t (*)(void))sub_2420D94B8);
}

unint64_t sub_2420D947C()
{
  unint64_t result;

  result = qword_25719F9C8;
  if (!qword_25719F9C8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTablesTransform, &type metadata for Catalog.LLM.Adapter.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9C8);
  }
  return result;
}

unint64_t sub_2420D94B8()
{
  unint64_t result;

  result = qword_25719F9D0;
  if (!qword_25719F9D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTablesTransform, &type metadata for Catalog.LLM.Adapter.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9D0);
  }
  return result;
}

unint64_t sub_2420D94F8()
{
  unint64_t result;

  result = qword_25719F9D8;
  if (!qword_25719F9D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTablesTransform, &type metadata for Catalog.LLM.Adapter.ServerTablesTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9D8);
  }
  return result;
}

unint64_t sub_2420D9534(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9558();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9558()
{
  unint64_t result;

  result = qword_25719F9E0;
  if (!qword_25719F9E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTakeawaysTransform, &type metadata for Catalog.LLM.Adapter.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9E0);
  }
  return result;
}

unint64_t sub_2420D9594(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D95B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D95B8()
{
  unint64_t result;

  result = qword_25719F9E8;
  if (!qword_25719F9E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTakeawaysTransform, &type metadata for Catalog.LLM.Adapter.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9E8);
  }
  return result;
}

unint64_t sub_2420D95F4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9618();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9618()
{
  unint64_t result;

  result = qword_25719F9F0;
  if (!qword_25719F9F0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTakeawaysTransform, &type metadata for Catalog.LLM.Adapter.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9F0);
  }
  return result;
}

void sub_2420D9654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D9668, (uint64_t (*)(void))sub_2420D96A4);
}

unint64_t sub_2420D9668()
{
  unint64_t result;

  result = qword_25719F9F8;
  if (!qword_25719F9F8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTakeawaysTransform, &type metadata for Catalog.LLM.Adapter.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_25719F9F8);
  }
  return result;
}

unint64_t sub_2420D96A4()
{
  unint64_t result;

  result = qword_25719FA00;
  if (!qword_25719FA00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTakeawaysTransform, &type metadata for Catalog.LLM.Adapter.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_25719FA00);
  }
  return result;
}

unint64_t sub_2420D96E4()
{
  unint64_t result;

  result = qword_25719FA08;
  if (!qword_25719FA08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTakeawaysTransform, &type metadata for Catalog.LLM.Adapter.ServerTakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_25719FA08);
  }
  return result;
}

unint64_t sub_2420D9720(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9744();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9744()
{
  unint64_t result;

  result = qword_25719FA10;
  if (!qword_25719FA10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTextSummarizer, &type metadata for Catalog.LLM.Adapter.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_25719FA10);
  }
  return result;
}

unint64_t sub_2420D9780(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D97A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D97A4()
{
  unint64_t result;

  result = qword_25719FA18;
  if (!qword_25719FA18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTextSummarizer, &type metadata for Catalog.LLM.Adapter.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_25719FA18);
  }
  return result;
}

unint64_t sub_2420D97E0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9804();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9804()
{
  unint64_t result;

  result = qword_25719FA20;
  if (!qword_25719FA20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTextSummarizer, &type metadata for Catalog.LLM.Adapter.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_25719FA20);
  }
  return result;
}

void sub_2420D9840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D9854, (uint64_t (*)(void))sub_2420D9890);
}

unint64_t sub_2420D9854()
{
  unint64_t result;

  result = qword_25719FA28;
  if (!qword_25719FA28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTextSummarizer, &type metadata for Catalog.LLM.Adapter.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_25719FA28);
  }
  return result;
}

unint64_t sub_2420D9890()
{
  unint64_t result;

  result = qword_25719FA30;
  if (!qword_25719FA30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTextSummarizer, &type metadata for Catalog.LLM.Adapter.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_25719FA30);
  }
  return result;
}

unint64_t sub_2420D98D0()
{
  unint64_t result;

  result = qword_25719FA38;
  if (!qword_25719FA38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.ServerTextSummarizer, &type metadata for Catalog.LLM.Adapter.ServerTextSummarizer);
    atomic_store(result, (unint64_t *)&qword_25719FA38);
  }
  return result;
}

unint64_t sub_2420D990C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9930();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9930()
{
  unint64_t result;

  result = qword_25719FA40;
  if (!qword_25719FA40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Summarization, &type metadata for Catalog.LLM.Adapter.Summarization);
    atomic_store(result, (unint64_t *)&qword_25719FA40);
  }
  return result;
}

unint64_t sub_2420D996C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9990();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9990()
{
  unint64_t result;

  result = qword_25719FA48;
  if (!qword_25719FA48)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Summarization, &type metadata for Catalog.LLM.Adapter.Summarization);
    atomic_store(result, (unint64_t *)&qword_25719FA48);
  }
  return result;
}

unint64_t sub_2420D99CC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D99F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D99F0()
{
  unint64_t result;

  result = qword_25719FA50;
  if (!qword_25719FA50)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Summarization, &type metadata for Catalog.LLM.Adapter.Summarization);
    atomic_store(result, (unint64_t *)&qword_25719FA50);
  }
  return result;
}

void sub_2420D9A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D9A40, (uint64_t (*)(void))sub_2420D9A7C);
}

unint64_t sub_2420D9A40()
{
  unint64_t result;

  result = qword_25719FA58;
  if (!qword_25719FA58)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Summarization, &type metadata for Catalog.LLM.Adapter.Summarization);
    atomic_store(result, (unint64_t *)&qword_25719FA58);
  }
  return result;
}

unint64_t sub_2420D9A7C()
{
  unint64_t result;

  result = qword_25719FA60;
  if (!qword_25719FA60)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Summarization, &type metadata for Catalog.LLM.Adapter.Summarization);
    atomic_store(result, (unint64_t *)&qword_25719FA60);
  }
  return result;
}

unint64_t sub_2420D9ABC()
{
  unint64_t result;

  result = qword_25719FA68;
  if (!qword_25719FA68)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.Summarization, &type metadata for Catalog.LLM.Adapter.Summarization);
    atomic_store(result, (unint64_t *)&qword_25719FA68);
  }
  return result;
}

unint64_t sub_2420D9AF8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9B1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9B1C()
{
  unint64_t result;

  result = qword_25719FA70;
  if (!qword_25719FA70)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TablesTransform, &type metadata for Catalog.LLM.Adapter.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_25719FA70);
  }
  return result;
}

unint64_t sub_2420D9B58(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9B7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9B7C()
{
  unint64_t result;

  result = qword_25719FA78;
  if (!qword_25719FA78)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TablesTransform, &type metadata for Catalog.LLM.Adapter.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_25719FA78);
  }
  return result;
}

unint64_t sub_2420D9BB8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9BDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9BDC()
{
  unint64_t result;

  result = qword_2543975E8;
  if (!qword_2543975E8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TablesTransform, &type metadata for Catalog.LLM.Adapter.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2543975E8);
  }
  return result;
}

void sub_2420D9C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D9C2C, (uint64_t (*)(void))sub_2420D9C68);
}

unint64_t sub_2420D9C2C()
{
  unint64_t result;

  result = qword_2543975D0;
  if (!qword_2543975D0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TablesTransform, &type metadata for Catalog.LLM.Adapter.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2543975D0);
  }
  return result;
}

unint64_t sub_2420D9C68()
{
  unint64_t result;

  result = qword_2543975E0;
  if (!qword_2543975E0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TablesTransform, &type metadata for Catalog.LLM.Adapter.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2543975E0);
  }
  return result;
}

unint64_t sub_2420D9CA8()
{
  unint64_t result;

  result = qword_2543975D8;
  if (!qword_2543975D8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TablesTransform, &type metadata for Catalog.LLM.Adapter.TablesTransform);
    atomic_store(result, (unint64_t *)&qword_2543975D8);
  }
  return result;
}

unint64_t sub_2420D9CE4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9D08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9D08()
{
  unint64_t result;

  result = qword_25719FA80;
  if (!qword_25719FA80)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TakeawaysTransform, &type metadata for Catalog.LLM.Adapter.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_25719FA80);
  }
  return result;
}

unint64_t sub_2420D9D44(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9D68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9D68()
{
  unint64_t result;

  result = qword_25719FA88;
  if (!qword_25719FA88)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TakeawaysTransform, &type metadata for Catalog.LLM.Adapter.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_25719FA88);
  }
  return result;
}

unint64_t sub_2420D9DA4(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9DC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9DC8()
{
  unint64_t result;

  result = qword_254397688;
  if (!qword_254397688)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TakeawaysTransform, &type metadata for Catalog.LLM.Adapter.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_254397688);
  }
  return result;
}

void sub_2420D9E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420D9E18, (uint64_t (*)(void))sub_2420D9E54);
}

unint64_t sub_2420D9E18()
{
  unint64_t result;

  result = qword_254397670;
  if (!qword_254397670)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TakeawaysTransform, &type metadata for Catalog.LLM.Adapter.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_254397670);
  }
  return result;
}

unint64_t sub_2420D9E54()
{
  unint64_t result;

  result = qword_254397680;
  if (!qword_254397680)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TakeawaysTransform, &type metadata for Catalog.LLM.Adapter.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_254397680);
  }
  return result;
}

unint64_t sub_2420D9E94()
{
  unint64_t result;

  result = qword_254397678;
  if (!qword_254397678)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.TakeawaysTransform, &type metadata for Catalog.LLM.Adapter.TakeawaysTransform);
    atomic_store(result, (unint64_t *)&qword_254397678);
  }
  return result;
}

unint64_t sub_2420D9ED0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9EF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9EF4()
{
  unint64_t result;

  result = qword_25719FA90;
  if (!qword_25719FA90)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UIPreviews, &type metadata for Catalog.LLM.Adapter.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_25719FA90);
  }
  return result;
}

unint64_t sub_2420D9F30(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9F54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9F54()
{
  unint64_t result;

  result = qword_25719FA98;
  if (!qword_25719FA98)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UIPreviews, &type metadata for Catalog.LLM.Adapter.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_25719FA98);
  }
  return result;
}

unint64_t sub_2420D9F90(uint64_t a1)
{
  unint64_t result;

  result = sub_2420D9FB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420D9FB4()
{
  unint64_t result;

  result = qword_25719FAA0;
  if (!qword_25719FAA0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UIPreviews, &type metadata for Catalog.LLM.Adapter.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_25719FAA0);
  }
  return result;
}

void sub_2420D9FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DA004, (uint64_t (*)(void))sub_2420DA040);
}

unint64_t sub_2420DA004()
{
  unint64_t result;

  result = qword_25719FAA8;
  if (!qword_25719FAA8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UIPreviews, &type metadata for Catalog.LLM.Adapter.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_25719FAA8);
  }
  return result;
}

unint64_t sub_2420DA040()
{
  unint64_t result;

  result = qword_25719FAB0;
  if (!qword_25719FAB0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UIPreviews, &type metadata for Catalog.LLM.Adapter.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_25719FAB0);
  }
  return result;
}

unint64_t sub_2420DA080()
{
  unint64_t result;

  result = qword_25719FAB8;
  if (!qword_25719FAB8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UIPreviews, &type metadata for Catalog.LLM.Adapter.UIPreviews);
    atomic_store(result, (unint64_t *)&qword_25719FAB8);
  }
  return result;
}

unint64_t sub_2420DA0BC(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA0E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA0E0()
{
  unint64_t result;

  result = qword_25719FAC0;
  if (!qword_25719FAC0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UrgencyClassification, &type metadata for Catalog.LLM.Adapter.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_25719FAC0);
  }
  return result;
}

unint64_t sub_2420DA11C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA140();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA140()
{
  unint64_t result;

  result = qword_25719FAC8;
  if (!qword_25719FAC8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UrgencyClassification, &type metadata for Catalog.LLM.Adapter.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_25719FAC8);
  }
  return result;
}

unint64_t sub_2420DA17C(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA1A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA1A0()
{
  unint64_t result;

  result = qword_25719FAD0;
  if (!qword_25719FAD0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UrgencyClassification, &type metadata for Catalog.LLM.Adapter.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_25719FAD0);
  }
  return result;
}

void sub_2420DA1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DA1F0, (uint64_t (*)(void))sub_2420DA22C);
}

unint64_t sub_2420DA1F0()
{
  unint64_t result;

  result = qword_25719FAD8;
  if (!qword_25719FAD8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UrgencyClassification, &type metadata for Catalog.LLM.Adapter.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_25719FAD8);
  }
  return result;
}

unint64_t sub_2420DA22C()
{
  unint64_t result;

  result = qword_25719FAE0;
  if (!qword_25719FAE0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UrgencyClassification, &type metadata for Catalog.LLM.Adapter.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_25719FAE0);
  }
  return result;
}

unint64_t sub_2420DA26C()
{
  unint64_t result;

  result = qword_25719FAE8;
  if (!qword_25719FAE8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.Adapter.UrgencyClassification, &type metadata for Catalog.LLM.Adapter.UrgencyClassification);
    atomic_store(result, (unint64_t *)&qword_25719FAE8);
  }
  return result;
}

unint64_t sub_2420DA2A8(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA2CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA2CC()
{
  unint64_t result;

  result = qword_25719FAF0;
  if (!qword_25719FAF0)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesis, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719FAF0);
  }
  return result;
}

unint64_t sub_2420DA308(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA32C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA32C()
{
  unint64_t result;

  result = qword_25719FAF8;
  if (!qword_25719FAF8)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesis, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719FAF8);
  }
  return result;
}

void sub_2420DA368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DA37C, (uint64_t (*)(void))sub_2420DA3B8);
}

unint64_t sub_2420DA37C()
{
  unint64_t result;

  result = qword_25719FB00;
  if (!qword_25719FB00)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesis, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719FB00);
  }
  return result;
}

unint64_t sub_2420DA3B8()
{
  unint64_t result;

  result = qword_25719FB08;
  if (!qword_25719FB08)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesis, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719FB08);
  }
  return result;
}

unint64_t sub_2420DA3F8()
{
  unint64_t result;

  result = qword_25719FB10;
  if (!qword_25719FB10)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesis, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesis);
    atomic_store(result, (unint64_t *)&qword_25719FB10);
  }
  return result;
}

unint64_t sub_2420DA434(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA458();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA458()
{
  unint64_t result;

  result = qword_25719FB18;
  if (!qword_25719FB18)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesisServer, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719FB18);
  }
  return result;
}

unint64_t sub_2420DA494(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA4B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA4B8()
{
  unint64_t result;

  result = qword_25719FB20;
  if (!qword_25719FB20)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesisServer, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719FB20);
  }
  return result;
}

void sub_2420DA4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242092570(a1, a2, a3, (uint64_t (*)(void))sub_2420DA508, (uint64_t (*)(void))sub_2420DA544);
}

unint64_t sub_2420DA508()
{
  unint64_t result;

  result = qword_25719FB28;
  if (!qword_25719FB28)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesisServer, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719FB28);
  }
  return result;
}

unint64_t sub_2420DA544()
{
  unint64_t result;

  result = qword_25719FB30;
  if (!qword_25719FB30)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesisServer, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719FB30);
  }
  return result;
}

unint64_t sub_2420DA584()
{
  unint64_t result;

  result = qword_25719FB38;
  if (!qword_25719FB38)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AnswerSynthesisServer, &type metadata for Catalog.LLM.DraftModel.AnswerSynthesisServer);
    atomic_store(result, (unint64_t *)&qword_25719FB38);
  }
  return result;
}

unint64_t sub_2420DA5C0(uint64_t a1)
{
  unint64_t result;

  result = sub_2420DA5E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2420DA5E4()
{
  unint64_t result;

  result = qword_25719FB40;
  if (!qword_25719FB40)
  {
    result = MEMORY[0x2426A40E0](&protocol conformance descriptor for Catalog.LLM.DraftModel.AutonamingMessages, &type metadata for Catalog.LLM.DraftModel.AutonamingMessages);
    atomic_store(result, (unint64_t *)&qword_25719FB40);
  }
  return result;
}

