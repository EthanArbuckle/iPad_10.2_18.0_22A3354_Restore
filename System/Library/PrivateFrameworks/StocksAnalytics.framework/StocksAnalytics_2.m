uint64_t storeEnumTagSinglePayload for ArticleScienceData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_1DC5C1334 + 4 * byte_1DC641CBF[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_1DC5C1368 + 4 * byte_1DC641CBA[v4]))();
}

uint64_t sub_1DC5C1368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C1370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5C1378);
  return result;
}

uint64_t sub_1DC5C1384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5C138CLL);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_1DC5C1390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C1398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleScienceData.CodingKeys()
{
  return &type metadata for ArticleScienceData.CodingKeys;
}

unint64_t sub_1DC5C13B8()
{
  unint64_t result;

  result = qword_1F036E880;
  if (!qword_1F036E880)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641E70, &type metadata for ArticleScienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E880);
  }
  return result;
}

unint64_t sub_1DC5C1400()
{
  unint64_t result;

  result = qword_1EDB0FC48;
  if (!qword_1EDB0FC48)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641DE0, &type metadata for ArticleScienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FC48);
  }
  return result;
}

unint64_t sub_1DC5C1448()
{
  unint64_t result;

  result = qword_1EDB0FC40;
  if (!qword_1EDB0FC40)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641E08, &type metadata for ArticleScienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FC40);
  }
  return result;
}

uint64_t sub_1DC5C148C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000022 && a2 == 0x80000001DC64D680 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64D6B0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DC64D6D0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001DC64D6F0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746165467377656ELL && a2 == 0xEE00727443657275 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DC64D720 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DC64D740 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DC64D760 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64D780 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DC64D7A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DC64D7D0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DC64D800 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64D820 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6154736B636F7473 && a2 == 0xEF65726F63536962 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DC64D840 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DC64D860 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64D880 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64D8A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64D8C0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DC64D8E0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DC64D900 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DC64D920 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64D940 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64D960 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64D980 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64D9A0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 25;
    else
      return 26;
  }
}

StocksAnalytics::LinkType_optional __swiftcall LinkType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  StocksAnalytics::LinkType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t LinkType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x72756F5361746164;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC5C1E74(char *a1, char *a2)
{
  return sub_1DC541C10(*a1, *a2);
}

unint64_t sub_1DC5C1E84()
{
  unint64_t result;

  result = qword_1F036E888;
  if (!qword_1F036E888)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for LinkType, &type metadata for LinkType);
    atomic_store(result, (unint64_t *)&qword_1F036E888);
  }
  return result;
}

uint64_t sub_1DC5C1EC8()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC5C1F4C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC5C1FAC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::LinkType_optional sub_1DC5C202C(Swift::String *a1)
{
  return LinkType.init(rawValue:)(*a1);
}

void sub_1DC5C2038(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E776F6E6B6E75;
  if (*v1)
    v2 = 0x72756F5361746164;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEA00000000006563;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC5C207C()
{
  sub_1DC5C21F0();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5C20D8()
{
  sub_1DC5C21F0();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for LinkType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5C2170 + 4 * byte_1DC641EED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5C21A4 + 4 * byte_1DC641EE8[v4]))();
}

uint64_t sub_1DC5C21A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C21AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5C21B4);
  return result;
}

uint64_t sub_1DC5C21C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5C21C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5C21CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C21D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LinkType()
{
  return &type metadata for LinkType;
}

unint64_t sub_1DC5C21F0()
{
  unint64_t result;

  result = qword_1F036E890;
  if (!qword_1F036E890)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for LinkType, &type metadata for LinkType);
    atomic_store(result, (unint64_t *)&qword_1F036E890);
  }
  return result;
}

uint64_t WatchedSymbolListData.symbols.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WatchedSymbolListData.symbols.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*WatchedSymbolListData.symbols.modify())()
{
  return nullsub_1;
}

StocksAnalytics::WatchedSymbolListData __swiftcall WatchedSymbolListData.init(symbols:)(StocksAnalytics::WatchedSymbolListData symbols)
{
  StocksAnalytics::WatchedSymbolListData *v1;

  v1->symbols._rawValue = symbols.symbols._rawValue;
  return symbols;
}

uint64_t sub_1DC5C227C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736C6F626D7973 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5C2310()
{
  sub_1DC4B73A4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5C2338()
{
  sub_1DC4B73A4();
  return sub_1DC62B610();
}

uint64_t WatchedSymbolListData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1DC4B7348(0, &qword_1EDB11960, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B73A4();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC4B72F4();
    sub_1DC4B7298(&qword_1EDB11898, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC5C24B8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return WatchedSymbolListData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for WatchedSymbolListData.CodingKeys()
{
  return &type metadata for WatchedSymbolListData.CodingKeys;
}

unint64_t sub_1DC5C24E0()
{
  unint64_t result;

  result = qword_1F036E898;
  if (!qword_1F036E898)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642154, &type metadata for WatchedSymbolListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E898);
  }
  return result;
}

uint64_t sub_1DC5C2524(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036E8A0, MEMORY[0x1E0CF8078]);
}

uint64_t static EditWatchListEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369150, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036E8A0, a1);
}

uint64_t sub_1DC5C2564(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036E8B8, MEMORY[0x1E0CF8380]);
}

uint64_t static EditWatchListEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369158, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036E8B8, a1);
}

uint64_t EditWatchListEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t EditWatchListEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EditWatchListEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EditWatchListEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t EditWatchListEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EditWatchListEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1DC5C2684()
{
  sub_1DC5C27E4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5C26AC()
{
  sub_1DC5C27E4();
  return sub_1DC62B610();
}

uint64_t EditWatchListEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5C2A00(0, &qword_1F036E8D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C27E4();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5C27E4()
{
  unint64_t result;

  result = qword_1F036E8D8;
  if (!qword_1F036E8D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64235C, &type metadata for EditWatchListEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E8D8);
  }
  return result;
}

uint64_t EditWatchListEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5C2A00(0, &qword_1F036E8E0, MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for EditWatchListEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C27E4();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    v15 = v19;
    v14 = v20;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_1DC5C2A70(v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5C2A00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5C27E4();
    v7 = a3(a1, &type metadata for EditWatchListEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for EditWatchListEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E9D0);
}

uint64_t sub_1DC5C2A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditWatchListEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5C2AB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditWatchListEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5C2AC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5C2A00(0, &qword_1F036E8D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C27E4();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC5C2BD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369150, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036E8A0, a1);
}

uint64_t sub_1DC5C2BFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369158, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036E8B8, a1);
}

uint64_t getEnumTagSinglePayload for EditWatchListEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C2C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t storeEnumTagSinglePayload for EditWatchListEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C2C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t type metadata accessor for EditWatchListEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E940);
}

uint64_t getEnumTagSinglePayload for EditWatchListEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C2C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for EditWatchListEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C2C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for EditWatchListEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5C2CD4 + 4 * byte_1DC6421D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5C2CF4 + 4 * byte_1DC6421D5[v4]))();
}

_BYTE *sub_1DC5C2CD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5C2CF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5C2CFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5C2D04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5C2D0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5C2D14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EditWatchListEvent.Model.CodingKeys()
{
  return &type metadata for EditWatchListEvent.Model.CodingKeys;
}

unint64_t sub_1DC5C2D34()
{
  unint64_t result;

  result = qword_1F036EA08;
  if (!qword_1F036EA08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642334, &type metadata for EditWatchListEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EA08);
  }
  return result;
}

unint64_t sub_1DC5C2D7C()
{
  unint64_t result;

  result = qword_1F036EA10;
  if (!qword_1F036EA10)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6422A4, &type metadata for EditWatchListEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EA10);
  }
  return result;
}

unint64_t sub_1DC5C2DC4()
{
  unint64_t result;

  result = qword_1F036EA18;
  if (!qword_1F036EA18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6422CC, &type metadata for EditWatchListEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EA18);
  }
  return result;
}

StocksAnalytics::ViewType_optional __swiftcall ViewType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ViewType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ViewType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684366694;
  if (*v0 != 1)
    v1 = 0x656C6369747261;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC5C2EB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC5419F8(*a1, *a2);
}

unint64_t sub_1DC5C2EC4()
{
  unint64_t result;

  result = qword_1F036EA20;
  if (!qword_1F036EA20)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewType, &type metadata for ViewType);
    atomic_store(result, (unint64_t *)&qword_1F036EA20);
  }
  return result;
}

uint64_t sub_1DC5C2F08()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC5C2FA0()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC5C3014()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ViewType_optional sub_1DC5C30A8(Swift::String *a1)
{
  return ViewType.init(rawValue:)(*a1);
}

void sub_1DC5C30B4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE400000000000000;
  v5 = 1684366694;
  if (v2 != 1)
  {
    v5 = 0x656C6369747261;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC5C310C()
{
  sub_1DC5C3270();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5C3168()
{
  sub_1DC5C3270();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for ViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5C3200 + 4 * byte_1DC6423B1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5C3234 + 4 * byte_1DC6423AC[v4]))();
}

uint64_t sub_1DC5C3234(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C323C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5C3244);
  return result;
}

uint64_t sub_1DC5C3250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5C3258);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5C325C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C3264(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1DC5C3270()
{
  unint64_t result;

  result = qword_1EDB11710;
  if (!qword_1EDB11710)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewType, &type metadata for ViewType);
    atomic_store(result, (unint64_t *)&qword_1EDB11710);
  }
  return result;
}

uint64_t sub_1DC5C32B4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036EA28, MEMORY[0x1E0CF8078]);
}

uint64_t static CreateWatchlistEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369160, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036EA28, a1);
}

uint64_t sub_1DC5C32F4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036EA40, MEMORY[0x1E0CF8380]);
}

uint64_t static CreateWatchlistEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369168, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036EA40, a1);
}

uint64_t CreateWatchlistEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t CreateWatchlistEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*CreateWatchlistEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t CreateWatchlistEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t CreateWatchlistEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t CreateWatchlistEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1DC5C3414()
{
  sub_1DC5C3574();
  return sub_1DC62B604();
}

uint64_t sub_1DC5C343C()
{
  sub_1DC5C3574();
  return sub_1DC62B610();
}

uint64_t CreateWatchlistEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5C3790(0, &qword_1F036EA58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C3574();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5C3574()
{
  unint64_t result;

  result = qword_1F036EA60;
  if (!qword_1F036EA60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642660, &type metadata for CreateWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EA60);
  }
  return result;
}

uint64_t CreateWatchlistEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Watchlist;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5C3790(0, &qword_1F036EA68, MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  Watchlist = type metadata accessor for CreateWatchlistEvent.Model(0);
  MEMORY[0x1E0C80A78](Watchlist);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C3574();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    v15 = v19;
    v14 = v20;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_1DC5C3800(v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5C3790(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5C3574();
    v7 = a3(a1, &type metadata for CreateWatchlistEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for CreateWatchlistEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036EB58);
}

uint64_t sub_1DC5C3800(uint64_t a1, uint64_t a2)
{
  uint64_t Watchlist;

  Watchlist = type metadata accessor for CreateWatchlistEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Watchlist - 8) + 32))(a2, a1, Watchlist);
  return a2;
}

uint64_t sub_1DC5C3844@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CreateWatchlistEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5C3858(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5C3790(0, &qword_1F036EA58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C3574();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC5C3968@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369160, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036EA28, a1);
}

uint64_t sub_1DC5C398C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369168, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036EA40, a1);
}

uint64_t getEnumTagSinglePayload for CreateWatchlistEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C39BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t storeEnumTagSinglePayload for CreateWatchlistEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C39D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t type metadata accessor for CreateWatchlistEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036EAC8);
}

uint64_t getEnumTagSinglePayload for CreateWatchlistEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C3A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for CreateWatchlistEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C3A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for CreateWatchlistEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5C3A64 + 4 * byte_1DC6424D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5C3A84 + 4 * byte_1DC6424D5[v4]))();
}

_BYTE *sub_1DC5C3A64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5C3A84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5C3A8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5C3A94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5C3A9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5C3AA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CreateWatchlistEvent.Model.CodingKeys()
{
  return &type metadata for CreateWatchlistEvent.Model.CodingKeys;
}

unint64_t sub_1DC5C3AC4()
{
  unint64_t result;

  result = qword_1F036EB90;
  if (!qword_1F036EB90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642638, &type metadata for CreateWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EB90);
  }
  return result;
}

unint64_t sub_1DC5C3B0C()
{
  unint64_t result;

  result = qword_1F036EB98;
  if (!qword_1F036EB98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6425A8, &type metadata for CreateWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EB98);
  }
  return result;
}

unint64_t sub_1DC5C3B54()
{
  unint64_t result;

  result = qword_1F036EBA0;
  if (!qword_1F036EBA0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6425D0, &type metadata for CreateWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EBA0);
  }
  return result;
}

void AudioControlMenuData.controlType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AudioControlMenuData.controlType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AudioControlMenuData.controlType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AudioControlMenuData __swiftcall AudioControlMenuData.init(controlType:)(StocksAnalytics::AudioControlMenuData controlType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)controlType.controlType;
  return controlType;
}

uint64_t sub_1DC5C3BCC()
{
  return 0x546C6F72746E6F63;
}

uint64_t sub_1DC5C3BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x546C6F72746E6F63 && a2 == 0xEB00000000657079)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5C3C98()
{
  sub_1DC5C3DEC();
  return sub_1DC62B604();
}

uint64_t sub_1DC5C3CC0()
{
  sub_1DC5C3DEC();
  return sub_1DC62B610();
}

uint64_t AudioControlMenuData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5C3FAC(0, &qword_1F036EBA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C3DEC();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5C3E30();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5C3DEC()
{
  unint64_t result;

  result = qword_1F036EBB0;
  if (!qword_1F036EBB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642838, &type metadata for AudioControlMenuData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EBB0);
  }
  return result;
}

unint64_t sub_1DC5C3E30()
{
  unint64_t result;

  result = qword_1F036EBB8;
  if (!qword_1F036EBB8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioControlType, &type metadata for AudioControlType);
    atomic_store(result, (unint64_t *)&qword_1F036EBB8);
  }
  return result;
}

uint64_t AudioControlMenuData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5C3FAC(0, &qword_1F036EBC0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C3DEC();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5C4008();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5C3FAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5C3DEC();
    v7 = a3(a1, &type metadata for AudioControlMenuData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5C4008()
{
  unint64_t result;

  result = qword_1F036EBC8;
  if (!qword_1F036EBC8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioControlType, &type metadata for AudioControlType);
    atomic_store(result, (unint64_t *)&qword_1F036EBC8);
  }
  return result;
}

unint64_t sub_1DC5C4050()
{
  unint64_t result;

  result = qword_1F036EBD0;
  if (!qword_1F036EBD0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioControlMenuData, &type metadata for AudioControlMenuData);
    atomic_store(result, (unint64_t *)&qword_1F036EBD0);
  }
  return result;
}

unint64_t sub_1DC5C4098()
{
  unint64_t result;

  result = qword_1F036EBD8;
  if (!qword_1F036EBD8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioControlMenuData, &type metadata for AudioControlMenuData);
    atomic_store(result, (unint64_t *)&qword_1F036EBD8);
  }
  return result;
}

uint64_t sub_1DC5C40DC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AudioControlMenuData.init(from:)(a1, a2);
}

uint64_t sub_1DC5C40F0(_QWORD *a1)
{
  return AudioControlMenuData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AudioControlMenuData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5C4150 + 4 * byte_1DC6426B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5C4184 + 4 * byte_1DC6426B0[v4]))();
}

uint64_t sub_1DC5C4184(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C418C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5C4194);
  return result;
}

uint64_t sub_1DC5C41A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5C41A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5C41AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C41B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioControlMenuData()
{
  return &type metadata for AudioControlMenuData;
}

uint64_t storeEnumTagSinglePayload for AudioControlMenuData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5C4210 + 4 * byte_1DC6426BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5C4230 + 4 * byte_1DC6426BF[v4]))();
}

_BYTE *sub_1DC5C4210(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5C4230(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5C4238(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5C4240(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5C4248(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5C4250(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AudioControlMenuData.CodingKeys()
{
  return &type metadata for AudioControlMenuData.CodingKeys;
}

unint64_t sub_1DC5C4270()
{
  unint64_t result;

  result = qword_1F036EBE0;
  if (!qword_1F036EBE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642810, &type metadata for AudioControlMenuData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EBE0);
  }
  return result;
}

unint64_t sub_1DC5C42B8()
{
  unint64_t result;

  result = qword_1F036EBE8;
  if (!qword_1F036EBE8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642780, &type metadata for AudioControlMenuData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EBE8);
  }
  return result;
}

unint64_t sub_1DC5C4300()
{
  unint64_t result;

  result = qword_1F036EBF0;
  if (!qword_1F036EBF0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6427A8, &type metadata for AudioControlMenuData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EBF0);
  }
  return result;
}

uint64_t sub_1DC5C4344(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036EBF8, MEMORY[0x1E0CF8078]);
}

uint64_t static SubscriptionResultEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369170, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036EBF8, a1);
}

uint64_t sub_1DC5C4384(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036EC10, MEMORY[0x1E0CF8380]);
}

uint64_t static SubscriptionResultEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369178, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036EC10, a1);
}

uint64_t SubscriptionResultEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SubscriptionResultEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SubscriptionResultEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SubscriptionResultEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036ECA0);
}

uint64_t SubscriptionResultEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.newsArticleData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.channelData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.feedData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.groupData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.purchaseSessionData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.purchaseData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.paywallData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.subscriptionResultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.subscriptionResultData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.subscriptionResultData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.storeKitErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.storeKitErrorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.storeKitErrorData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.adReferralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.adReferralData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.adReferralData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.campaignData.modify())()
{
  type metadata accessor for SubscriptionResultEvent(0);
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SubscriptionResultEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v6, v9);
  v10 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v6, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v6, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v6, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v6, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v6, v27);
}

uint64_t SubscriptionResultEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SubscriptionResultEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 20);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_1DC4D7808(v4, v5);
}

uint64_t type metadata accessor for SubscriptionResultEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036ED58);
}

uint64_t SubscriptionResultEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 24);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);
  return sub_1DC4D7808(v4, v5);
}

uint64_t SubscriptionResultEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t SubscriptionResultEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.paywallData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionResultEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t SubscriptionResultEvent.Model.subscriptionResultData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionResultEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t SubscriptionResultEvent.Model.storeKitErrorData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscriptionResultEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t SubscriptionResultEvent.Model.adReferralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1DC517D30(v4, v5);
}

uint64_t SubscriptionResultEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC537928(v4, v5);
}

__n128 SubscriptionResultEvent.Model.init(eventData:newsArticleData:channelData:feedData:groupData:purchaseSessionData:purchaseData:paywallData:subscriptionResultData:storeKitErrorData:adReferralData:campaignData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t *a12, __int128 *a13)
{
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 result;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  __int128 v55;

  v35 = a2[1];
  v36 = *a2;
  v34 = a2[2];
  v15 = *((_QWORD *)a2 + 6);
  v16 = *((_QWORD *)a2 + 7);
  v17 = *((_DWORD *)a2 + 16);
  v18 = *((_QWORD *)a3 + 2);
  v19 = *((_QWORD *)a3 + 3);
  v20 = *((_WORD *)a3 + 16);
  v37 = *a3;
  v38 = *a4;
  v21 = *((_QWORD *)a4 + 2);
  v40 = a5[1];
  v41 = *a5;
  v22 = *((_QWORD *)a5 + 4);
  v39 = *((_QWORD *)a5 + 5);
  v42 = a6[1];
  v43 = *a6;
  v45 = a7[1];
  v46 = *a7;
  v44 = *((_BYTE *)a7 + 16);
  v47 = *a8;
  v48 = *a10;
  v49 = *a11;
  v50 = a12[1];
  v51 = *a12;
  v54 = (__n128)a13[1];
  v55 = *a13;
  v52 = *((_QWORD *)a13 + 5);
  v53 = *((_QWORD *)a13 + 4);
  v23 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a1, v23);
  v24 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
  v25 = a9 + v24[5];
  *(_OWORD *)v25 = v36;
  *(_OWORD *)(v25 + 16) = v35;
  *(_OWORD *)(v25 + 32) = v34;
  *(_QWORD *)(v25 + 48) = v15;
  *(_QWORD *)(v25 + 56) = v16;
  *(_DWORD *)(v25 + 64) = v17;
  v26 = a9 + v24[6];
  *(_OWORD *)v26 = v37;
  *(_QWORD *)(v26 + 16) = v18;
  *(_QWORD *)(v26 + 24) = v19;
  *(_WORD *)(v26 + 32) = v20;
  v27 = a9 + v24[7];
  *(_OWORD *)v27 = v38;
  *(_QWORD *)(v27 + 16) = v21;
  v28 = a9 + v24[8];
  *(_OWORD *)v28 = v41;
  *(_OWORD *)(v28 + 16) = v40;
  *(_QWORD *)(v28 + 32) = v22;
  *(_QWORD *)(v28 + 40) = v39;
  v29 = (_QWORD *)(a9 + v24[9]);
  *v29 = v43;
  v29[1] = v42;
  v30 = a9 + v24[10];
  *(_QWORD *)v30 = v46;
  *(_QWORD *)(v30 + 8) = v45;
  *(_BYTE *)(v30 + 16) = v44;
  *(_BYTE *)(a9 + v24[11]) = v47;
  *(_BYTE *)(a9 + v24[12]) = v48;
  *(_BYTE *)(a9 + v24[13]) = v49;
  v31 = (_QWORD *)(a9 + v24[14]);
  *v31 = v51;
  v31[1] = v50;
  v32 = a9 + v24[15];
  result = v54;
  *(_OWORD *)v32 = v55;
  *(__n128 *)(v32 + 16) = v54;
  *(_QWORD *)(v32 + 32) = v53;
  *(_QWORD *)(v32 + 40) = v52;
  return result;
}

uint64_t sub_1DC5C571C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5C5754 + 4 * byte_1DC642890[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5C5754()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC5C5778()
{
  return 0x446C656E6E616863;
}

void sub_1DC5C5800()
{
  JUMPOUT(0x1DC5C5814);
}

unint64_t sub_1DC5C5820()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC5C583C()
{
  return 0x7272656665526461;
}

uint64_t sub_1DC5C5880()
{
  unsigned __int8 *v0;

  return sub_1DC5C571C(*v0);
}

uint64_t sub_1DC5C5888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5C9CDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5C58AC()
{
  sub_1DC5C5D64();
  return sub_1DC62B604();
}

uint64_t sub_1DC5C58D4()
{
  sub_1DC5C5D64();
  return sub_1DC62B610();
}

uint64_t SubscriptionResultEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  int v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int16 v16;
  __int128 v17;
  __int128 *v18;
  uint64_t v19;
  __int128 *v20;
  __int128 v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  int v37;

  v3 = v1;
  sub_1DC5C65D4(0, &qword_1F036EC30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C5D64();
  sub_1DC62B5F8();
  LOBYTE(v33) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *((_DWORD *)v11 + 16);
    v13 = v11[1];
    v33 = *v11;
    v34 = v13;
    v14 = v11[3];
    v35 = v11[2];
    v36 = v14;
    v37 = v12;
    v32 = 1;
    sub_1DC4C18E8();
    sub_1DC62B490();
    v15 = (__int128 *)(v3 + v10[6]);
    v16 = *((_WORD *)v15 + 16);
    v17 = v15[1];
    v33 = *v15;
    v34 = v17;
    LOWORD(v35) = v16;
    v32 = 2;
    sub_1DC4C8E84();
    sub_1DC62B490();
    v18 = (__int128 *)(v3 + v10[7]);
    v19 = *((_QWORD *)v18 + 2);
    v33 = *v18;
    *(_QWORD *)&v34 = v19;
    v32 = 3;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v20 = (__int128 *)(v3 + v10[8]);
    v21 = v20[1];
    v33 = *v20;
    v34 = v21;
    v35 = v20[2];
    v32 = 4;
    sub_1DC4C9004();
    sub_1DC62B490();
    v22 = (uint64_t *)(v3 + v10[9]);
    v24 = *v22;
    v23 = v22[1];
    *(_QWORD *)&v33 = v24;
    *((_QWORD *)&v33 + 1) = v23;
    v32 = 5;
    sub_1DC4FC754();
    sub_1DC62B4E4();
    v25 = (uint64_t *)(v3 + v10[10]);
    v26 = *v25;
    v27 = v25[1];
    LOBYTE(v25) = *((_BYTE *)v25 + 16);
    *(_QWORD *)&v33 = v26;
    *((_QWORD *)&v33 + 1) = v27;
    LOBYTE(v34) = (_BYTE)v25;
    v32 = 6;
    sub_1DC4FC8D4();
    sub_1DC62B4E4();
    LOBYTE(v33) = *(_BYTE *)(v3 + v10[11]);
    v32 = 7;
    sub_1DC4FCA54();
    sub_1DC62B4E4();
    LOBYTE(v33) = *(_BYTE *)(v3 + v10[12]);
    v32 = 8;
    sub_1DC53FEFC();
    sub_1DC62B4E4();
    LOBYTE(v33) = *(_BYTE *)(v3 + v10[13]);
    v32 = 9;
    sub_1DC51D5E0();
    sub_1DC62B490();
    v33 = *(_OWORD *)(v3 + v10[14]);
    v32 = 10;
    sub_1DC52234C();
    sub_1DC62B490();
    v28 = (__int128 *)(v3 + v10[15]);
    v29 = v28[1];
    v33 = *v28;
    v34 = v29;
    v35 = v28[2];
    v32 = 11;
    sub_1DC5371F4();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5C5D64()
{
  unint64_t result;

  result = qword_1F036EC38;
  if (!qword_1F036EC38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642BC4, &type metadata for SubscriptionResultEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EC38);
  }
  return result;
}

uint64_t SubscriptionResultEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char *v16;
  int *v17;
  int v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int16 v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  int *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  int v55;
  char v56;

  v5 = sub_1DC62ABA8();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5C65D4(0, &qword_1F036EC40, MEMORY[0x1E0DED048]);
  v45 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - v10;
  v50 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
  MEMORY[0x1E0C80A78](v50);
  v49 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC5C5D64();
  sub_1DC62B5E0();
  if (v2)
  {
    v48 = v2;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  }
  v43 = a2;
  v44 = v9;
  LOBYTE(v51) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v14 = v5;
  v16 = v49;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v49, v7, v5);
  v56 = 1;
  sub_1DC4C18A0();
  sub_1DC62B400();
  v17 = v50;
  v18 = v55;
  v19 = &v16[v50[5]];
  v20 = v52;
  *(_OWORD *)v19 = v51;
  *((_OWORD *)v19 + 1) = v20;
  v21 = v54;
  *((_OWORD *)v19 + 2) = v53;
  *((_OWORD *)v19 + 3) = v21;
  *((_DWORD *)v19 + 16) = v18;
  v56 = 2;
  sub_1DC4C8E40();
  sub_1DC62B400();
  v22 = v53;
  v23 = &v16[v17[6]];
  v24 = v52;
  *(_OWORD *)v23 = v51;
  *((_OWORD *)v23 + 1) = v24;
  *((_WORD *)v23 + 16) = v22;
  v56 = 3;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v25 = v52;
  v26 = &v16[v17[7]];
  *(_OWORD *)v26 = v51;
  *((_QWORD *)v26 + 2) = v25;
  v56 = 4;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v27 = &v16[v17[8]];
  v28 = v52;
  *(_OWORD *)v27 = v51;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v53;
  v56 = 5;
  sub_1DC4FC710();
  sub_1DC62B454();
  v29 = *((_QWORD *)&v51 + 1);
  v30 = &v16[v17[9]];
  *(_QWORD *)v30 = v51;
  *((_QWORD *)v30 + 1) = v29;
  v56 = 6;
  sub_1DC4FC890();
  sub_1DC62B454();
  v31 = *((_QWORD *)&v51 + 1);
  v32 = v52;
  v33 = &v16[v17[10]];
  *(_QWORD *)v33 = v51;
  *((_QWORD *)v33 + 1) = v31;
  v33[16] = v32;
  v56 = 7;
  sub_1DC4FCA10();
  sub_1DC62B454();
  v34 = v14;
  v16[v17[11]] = v51;
  v56 = 8;
  sub_1DC53FEB4();
  sub_1DC62B454();
  v16[v17[12]] = v51;
  v56 = 9;
  sub_1DC51D598();
  sub_1DC62B400();
  v48 = 0;
  v49[v50[13]] = v51;
  v56 = 10;
  sub_1DC522304();
  v35 = v48;
  sub_1DC62B400();
  v48 = v35;
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v45);
    v36 = 0;
  }
  else
  {
    *(_OWORD *)&v49[v50[14]] = v51;
    v56 = 11;
    sub_1DC5371B0();
    v39 = v48;
    sub_1DC62B400();
    v48 = v39;
    if (!v39)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v45);
      v40 = (uint64_t)v49;
      v41 = &v49[v50[15]];
      v42 = v52;
      *(_OWORD *)v41 = v51;
      *((_OWORD *)v41 + 1) = v42;
      *((_OWORD *)v41 + 2) = v53;
      sub_1DC5C6630(v40, v43);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      return sub_1DC5C6674(v40);
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v45);
    v36 = 1;
  }
  v37 = v49;
  v38 = v50;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v34);
  sub_1DC4D88E4(*(_QWORD *)&v37[v38[5]], *(_QWORD *)&v37[v38[5] + 8]);
  sub_1DC4D88E4(*(_QWORD *)&v37[v38[6]], *(_QWORD *)&v37[v38[6] + 8]);
  swift_bridgeObjectRelease();
  sub_1DC4CB1B4(*(_QWORD *)&v37[v38[8]], *(_QWORD *)&v37[v38[8] + 8], *(_QWORD *)&v37[v38[8] + 16]);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
    return sub_1DC519178(*(_QWORD *)&v37[v38[14]], *(_QWORD *)&v37[v38[14] + 8]);
  return result;
}

void sub_1DC5C65D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5C5D64();
    v7 = a3(a1, &type metadata for SubscriptionResultEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5C6630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionResultEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5C6674(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscriptionResultEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5C66B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscriptionResultEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5C66C4(_QWORD *a1)
{
  return SubscriptionResultEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5C66D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369170, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036EBF8, a1);
}

uint64_t sub_1DC5C66FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369178, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036EC10, a1);
}

uint64_t sub_1DC5C6720@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
  v11 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v7, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v7, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v7, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v7, v26);
  v27 = a2 + a1[15];
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v7, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscriptionResultEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for SubscriptionResultEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
}

uint64_t initializeWithCopy for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionResultEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C800C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C8354(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5C8698()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1F036EC28, (void (*)(void))sub_1DC53FEB4, (void (*)(void))sub_1DC53FEFC);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                        if (v11 <= 0x3F)
                          swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SubscriptionResultEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v12 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v12;
      v9[32] = v10[32];
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      v9[48] = v10[48];
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v14;
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_QWORD *)v18 + 1);
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = *((_QWORD *)v18 + 3);
      *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
      *((_QWORD *)v17 + 3) = v20;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
    }
    v22 = a3[7];
    v23 = a3[8];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *v24 = *v25;
    v26 = *((_QWORD *)v25 + 2);
    *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
    *((_QWORD *)v24 + 2) = v26;
    v27 = (char *)a1 + v23;
    v28 = (char *)a2 + v23;
    v29 = *(_QWORD *)((char *)a2 + v23 + 16);
    swift_bridgeObjectRetain();
    if (v29)
    {
      *v27 = *v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
      v30 = *((_QWORD *)v28 + 4);
      v31 = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 4) = v30;
      *((_QWORD *)v27 + 5) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v32 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v32;
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    }
    v33 = a3[9];
    v34 = a3[10];
    v35 = (_QWORD *)((char *)a1 + v33);
    v36 = (_QWORD *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (char *)a1 + v34;
    v39 = (char *)a2 + v34;
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v38[16] = v39[16];
    v41 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v41) = *((_BYTE *)a2 + v41);
    v42 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v43 = (char *)a1 + v42;
    v44 = (_OWORD *)((char *)a2 + v42);
    v45 = *(_QWORD *)((char *)a2 + v42 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v45 == 1)
    {
      *(_OWORD *)v43 = *v44;
    }
    else
    {
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *((_QWORD *)v43 + 1) = v45;
      swift_bridgeObjectRetain();
    }
    v46 = a3[15];
    v47 = (_QWORD *)((char *)a1 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    v49 = v48[1];
    if (v49)
    {
      *v47 = *v48;
      v47[1] = v49;
      v50 = v48[3];
      v47[2] = v48[2];
      v47[3] = v50;
      v51 = v48[5];
      v47[4] = v48[4];
      v47[5] = v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v52 = *((_OWORD *)v48 + 1);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v52;
      *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
    }
  }
  return a1;
}

uint64_t destroy for SubscriptionResultEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14] + 8) != 1)
    swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[15] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v11 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v12;
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
  }
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(v16 + 8);
  if (v17)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = v17;
    v18 = *(_QWORD *)(v16 + 24);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v15 + 24) = v18;
    *(_WORD *)(v15 + 32) = *(_WORD *)(v16 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v19;
    *(_WORD *)(v15 + 32) = *(_WORD *)(v16 + 32);
  }
  v20 = a3[7];
  v21 = a3[8];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v24 = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = v24;
  v25 = a1 + v21;
  v26 = a2 + v21;
  v27 = *(_QWORD *)(a2 + v21 + 16);
  swift_bridgeObjectRetain();
  if (v27)
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
    v28 = *(_QWORD *)(v26 + 32);
    v29 = *(_QWORD *)(v26 + 40);
    *(_QWORD *)(v25 + 32) = v28;
    *(_QWORD *)(v25 + 40) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v30 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v30;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  }
  v31 = a3[9];
  v32 = a3[10];
  v33 = (_QWORD *)(a1 + v31);
  v34 = (_QWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = a1 + v32;
  v37 = a2 + v32;
  v38 = *(_QWORD *)(v37 + 8);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_QWORD *)(v36 + 8) = v38;
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
  v39 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  v40 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v41 = a1 + v40;
  v42 = (_OWORD *)(a2 + v40);
  v43 = *(_QWORD *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v43 == 1)
  {
    *(_OWORD *)v41 = *v42;
  }
  else
  {
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *(_QWORD *)(v41 + 8) = v43;
    swift_bridgeObjectRetain();
  }
  v44 = a3[15];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = v46[1];
  if (v47)
  {
    *v45 = *v46;
    v45[1] = v47;
    v48 = v46[3];
    v45[2] = v46[2];
    v45[3] = v48;
    v49 = v46[5];
    v45[4] = v46[4];
    v45[5] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = *((_OWORD *)v46 + 1);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *((_OWORD *)v45 + 1) = v50;
    *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10)
  {
    if (v11)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v12 = *(_QWORD *)(v9 + 40);
      *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = v12;
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
      *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
      *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
      *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
    }
    else
    {
      sub_1DC5006BC(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v15 = *(_OWORD *)(v9 + 32);
      v14 = *(_OWORD *)(v9 + 48);
      v16 = *(_OWORD *)(v9 + 16);
      *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 32) = v15;
      *(_OWORD *)(v8 + 48) = v14;
      *(_OWORD *)(v8 + 16) = v16;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 40);
    *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = v13;
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
    *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
    *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
    *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v17 = *(_OWORD *)(v9 + 16);
    v18 = *(_OWORD *)(v9 + 32);
    v19 = *(_OWORD *)(v9 + 48);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v18;
    *(_OWORD *)(v8 + 48) = v19;
    *(_OWORD *)(v8 + 16) = v17;
  }
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = (__int128 *)(a2 + v20);
  v23 = *(_QWORD *)(a1 + v20 + 8);
  v24 = *(_QWORD *)(a2 + v20 + 8);
  if (v23)
  {
    if (v24)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_QWORD *)(v21 + 8) = *((_QWORD *)v22 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 16) = *((_QWORD *)v22 + 2);
      *(_QWORD *)(v21 + 24) = *((_QWORD *)v22 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v21 + 32) = *((_BYTE *)v22 + 32);
      *(_BYTE *)(v21 + 33) = *((_BYTE *)v22 + 33);
    }
    else
    {
      sub_1DC4DAE38(v21);
      v25 = *((_WORD *)v22 + 16);
      v26 = v22[1];
      *(_OWORD *)v21 = *v22;
      *(_OWORD *)(v21 + 16) = v26;
      *(_WORD *)(v21 + 32) = v25;
    }
  }
  else if (v24)
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = *((_QWORD *)v22 + 1);
    *(_QWORD *)(v21 + 16) = *((_QWORD *)v22 + 2);
    *(_QWORD *)(v21 + 24) = *((_QWORD *)v22 + 3);
    *(_BYTE *)(v21 + 32) = *((_BYTE *)v22 + 32);
    *(_BYTE *)(v21 + 33) = *((_BYTE *)v22 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *v22;
    v28 = v22[1];
    *(_WORD *)(v21 + 32) = *((_WORD *)v22 + 16);
    *(_OWORD *)v21 = v27;
    *(_OWORD *)(v21 + 16) = v28;
  }
  v29 = a3[7];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)v30 = *(_BYTE *)v31;
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[8];
  v33 = a1 + v32;
  v34 = (__int128 *)(a2 + v32);
  v35 = *(_QWORD *)(a1 + v32 + 16);
  v36 = *(_QWORD *)(a2 + v32 + 16);
  if (v35)
  {
    if (v36)
    {
      *(_BYTE *)v33 = *(_BYTE *)v34;
      *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
      *(_QWORD *)(v33 + 16) = *((_QWORD *)v34 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v33 + 24) = *((_DWORD *)v34 + 6);
      *(_DWORD *)(v33 + 28) = *((_DWORD *)v34 + 7);
      *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
      *(_QWORD *)(v33 + 40) = *((_QWORD *)v34 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v33);
      v38 = v34[1];
      v37 = v34[2];
      *(_OWORD *)v33 = *v34;
      *(_OWORD *)(v33 + 16) = v38;
      *(_OWORD *)(v33 + 32) = v37;
    }
  }
  else if (v36)
  {
    *(_BYTE *)v33 = *(_BYTE *)v34;
    *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
    *(_QWORD *)(v33 + 16) = *((_QWORD *)v34 + 2);
    *(_DWORD *)(v33 + 24) = *((_DWORD *)v34 + 6);
    *(_DWORD *)(v33 + 28) = *((_DWORD *)v34 + 7);
    *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
    *(_QWORD *)(v33 + 40) = *((_QWORD *)v34 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = *v34;
    v40 = v34[2];
    *(_OWORD *)(v33 + 16) = v34[1];
    *(_OWORD *)(v33 + 32) = v40;
    *(_OWORD *)v33 = v39;
  }
  v41 = a3[9];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[10];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_QWORD *)v45 = *(_QWORD *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v47 = a3[14];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = *(_QWORD *)(a1 + v47 + 8);
  v51 = *(_QWORD *)(a2 + v47 + 8);
  if (v50 == 1)
  {
    if (v51 != 1)
    {
      *v48 = *v49;
      v48[1] = v49[1];
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v51 == 1)
  {
    sub_1DC53BA54((uint64_t)v48);
LABEL_27:
    *(_OWORD *)v48 = *(_OWORD *)v49;
    goto LABEL_29;
  }
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_29:
  v52 = a3[15];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  v55 = *(_QWORD *)(a1 + v52 + 8);
  v56 = v54[1];
  if (v55)
  {
    if (v56)
    {
      *v53 = *v54;
      v53[1] = v54[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[2] = v54[2];
      v53[3] = v54[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[4] = v54[4];
      v53[5] = v54[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC53BA88((uint64_t)v53);
      v58 = *((_OWORD *)v54 + 1);
      v57 = *((_OWORD *)v54 + 2);
      *(_OWORD *)v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v58;
      *((_OWORD *)v53 + 2) = v57;
    }
  }
  else if (v56)
  {
    *v53 = *v54;
    v53[1] = v54[1];
    v53[2] = v54[2];
    v53[3] = v54[3];
    v53[4] = v54[4];
    v53[5] = v54[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v59 = *(_OWORD *)v54;
    v60 = *((_OWORD *)v54 + 2);
    *((_OWORD *)v53 + 1) = *((_OWORD *)v54 + 1);
    *((_OWORD *)v53 + 2) = v60;
    *(_OWORD *)v53 = v59;
  }
  return a1;
}

uint64_t initializeWithTake for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = a1 + v8;
  v14 = a2 + v8;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v20 = (_OWORD *)(a1 + v17);
  v21 = (__int128 *)(a2 + v17);
  v22 = *v21;
  v23 = v21[2];
  v20[1] = v21[1];
  v20[2] = v23;
  *v20 = v22;
  v24 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  v27 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v28 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  v29 = a3[15];
  v30 = (_OWORD *)(a1 + v29);
  v31 = (_OWORD *)(a2 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v30[2] = v31[2];
  return a1;
}

uint64_t assignWithTake for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8))
  {
    v10 = *(_QWORD *)(v9 + 8);
    if (v10)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v11;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
      *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
      *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
      *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
      goto LABEL_6;
    }
    sub_1DC5006BC(v8);
  }
  v12 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v12;
  *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
  v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
LABEL_6:
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  if (*(_QWORD *)(a1 + v14 + 8))
  {
    v17 = *(_QWORD *)(v16 + 8);
    if (v17)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = v17;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v16 + 24);
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v15 + 24) = v18;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
      *(_BYTE *)(v15 + 33) = *(_BYTE *)(v16 + 33);
      goto LABEL_11;
    }
    sub_1DC4DAE38(v15);
  }
  v19 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v19;
  *(_WORD *)(v15 + 32) = *(_WORD *)(v16 + 32);
LABEL_11:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = v24;
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  if (*(_QWORD *)(a1 + v25 + 16))
  {
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      *(_BYTE *)v26 = *(_BYTE *)v27;
      *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
      *(_QWORD *)(v26 + 16) = v28;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
      v29 = *(_QWORD *)(v27 + 40);
      *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
      *(_QWORD *)(v26 + 40) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1DC4CDAF4(v26);
  }
  v30 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v30;
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
LABEL_16:
  v31 = a3[9];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = a3[10];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a2 + v36 + 8);
  *(_QWORD *)v37 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v37 + 16) = *(_BYTE *)(v38 + 16);
  v40 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  v41 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v42 = a1 + v41;
  v43 = a2 + v41;
  if (*(_QWORD *)(a1 + v41 + 8) == 1)
  {
LABEL_19:
    *(_OWORD *)v42 = *(_OWORD *)v43;
    goto LABEL_21;
  }
  v44 = *(_QWORD *)(v43 + 8);
  if (v44 == 1)
  {
    sub_1DC53BA54(a1 + v41);
    goto LABEL_19;
  }
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_QWORD *)(v42 + 8) = v44;
  swift_bridgeObjectRelease();
LABEL_21:
  v45 = a3[15];
  v46 = a1 + v45;
  v47 = a2 + v45;
  if (!*(_QWORD *)(a1 + v45 + 8))
  {
LABEL_25:
    v51 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v51;
    *(_OWORD *)(v46 + 32) = *(_OWORD *)(v47 + 32);
    return a1;
  }
  v48 = *(_QWORD *)(v47 + 8);
  if (!v48)
  {
    sub_1DC53BA88(v46);
    goto LABEL_25;
  }
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_QWORD *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v47 + 24);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  *(_QWORD *)(v46 + 24) = v49;
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v47 + 40);
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
  *(_QWORD *)(v46 + 40) = v50;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionResultEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C9964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5C99F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5C9A6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1DC5C9B84 + 4 * byte_1DC6428A1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1DC5C9BB8 + 4 * byte_1DC64289C[v4]))();
}

uint64_t sub_1DC5C9BB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C9BC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5C9BC8);
  return result;
}

uint64_t sub_1DC5C9BD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5C9BDCLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1DC5C9BE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5C9BE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultEvent.Model.CodingKeys()
{
  return &type metadata for SubscriptionResultEvent.Model.CodingKeys;
}

unint64_t sub_1DC5C9C08()
{
  unint64_t result;

  result = qword_1F036EDB8;
  if (!qword_1F036EDB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642B9C, &type metadata for SubscriptionResultEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EDB8);
  }
  return result;
}

unint64_t sub_1DC5C9C50()
{
  unint64_t result;

  result = qword_1F036EDC0;
  if (!qword_1F036EDC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642B0C, &type metadata for SubscriptionResultEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EDC0);
  }
  return result;
}

unint64_t sub_1DC5C9C98()
{
  unint64_t result;

  result = qword_1F036EDC8;
  if (!qword_1F036EDC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642B34, &type metadata for SubscriptionResultEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EDC8);
  }
  return result;
}

uint64_t sub_1DC5C9CDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C5D0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64D9C0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64CB30 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7272656665526461 && a2 == 0xEE00617461446C61 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_1DC5CA244(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t FlushAnalyticsBatchesStartupTask.group.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  v4 = sub_1DC62AD28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DC5CA2A8()
{
  sub_1DC4C0864();
  swift_allocObject();
  return sub_1DC62AEB4();
}

uint64_t sub_1DC5CA2EC(uint64_t a1, uint64_t a2)
{
  return sub_1DC4B62C4(a1, a2);
}

uint64_t *sub_1DC5CA2F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  void *v50;
  id v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void *v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  char *v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  int v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  __int16 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t *v122;
  unint64_t v123;
  const char *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  int *v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  id v135;
  char *v136;
  uint64_t v137;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v139;
  unint64_t v140;
  uint64_t v141;
  id v142;
  char *v143;
  _QWORD *v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  _QWORD v187[48];
  id v188[50];

  v184 = a1;
  v188[48] = *(id *)MEMORY[0x1E0C80C00];
  sub_1DC5CC230();
  v151 = *(_QWORD *)(v1 - 8);
  v152 = v1;
  MEMORY[0x1E0C80A78](v1);
  v150 = (char *)&v140 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC62A05C();
  v155 = *(_QWORD *)(v3 - 8);
  v156 = v3;
  MEMORY[0x1E0C80A78](v3);
  v154 = (unint64_t *)((char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v163 = sub_1DC62ABC0();
  v161 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v162 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_1DC62A1C4();
  v177 = *(_QWORD *)(v175 - 8);
  MEMORY[0x1E0C80A78](v175);
  v160 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62ABA8();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670];
  v9 = *(_QWORD *)(v7 - 8);
  v172 = v7;
  v173 = v9;
  MEMORY[0x1E0C80A78](v7);
  v164 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for AppSessionEndEvent.Model(0);
  MEMORY[0x1E0C80A78](v153);
  v157 = (uint64_t)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC62A668();
  v169 = *(_QWORD *)(v12 - 8);
  v170 = v12;
  MEMORY[0x1E0C80A78](v12);
  v168 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1DC4BA670(0, &qword_1EDB0E8B0, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v167 = (char *)&v140 - v16;
  sub_1DC4BA670(0, &qword_1EDB0E228, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F58], v14);
  MEMORY[0x1E0C80A78](v17);
  v182 = (char *)&v140 - v18;
  sub_1DC4BA670(0, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v14);
  MEMORY[0x1E0C80A78](v19);
  v171 = (char *)&v140 - v20;
  v21 = sub_1DC62A1A0();
  v22 = *(_QWORD *)(v21 - 8);
  v178 = v21;
  v179 = v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v174 = (char *)&v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v166 = (char *)&v140 - v25;
  v181 = sub_1DC62A6C8();
  v176 = *(_QWORD *)(v181 - 8);
  MEMORY[0x1E0C80A78](v181);
  v180 = (char *)&v140 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5CC2A8();
  v165 = v27;
  v28 = MEMORY[0x1E0C80A78](v27);
  v159 = (char *)&v140 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v158 = (char *)&v140 - v31;
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v140 - v32;
  v34 = sub_1DC62A6B0();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v140 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1DC62ABCC();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v140 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1DC62AAA0())
    return (uint64_t *)MEMORY[0x1E0DEE9D8];
  v144 = v41;
  v145 = v39;
  v146 = v38;
  v147 = v37;
  v148 = v35;
  v149 = v34;
  v143 = v33;
  v42 = v184;
  sub_1DC62AADC();
  v44 = v43;
  swift_bridgeObjectRelease();
  if (v44)
    return (uint64_t *)MEMORY[0x1E0DEE9D8];
  sub_1DC62ABFC();
  swift_allocObject();
  v47 = sub_1DC62ABF0();
  v48 = v144;
  *v144 = sub_1DC5CB554;
  v48[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, unint64_t))(v145 + 104))(v48, *MEMORY[0x1E0DB2FF8], v146);
  sub_1DC62ABD8();
  v49 = (void *)objc_opt_self();
  sub_1DC62AAD0();
  sub_1DC5CC30C();
  v50 = (void *)sub_1DC62B148();
  swift_bridgeObjectRelease();
  v188[0] = 0;
  v45 = (uint64_t *)objc_msgSend(v49, sel_dataWithJSONObject_options_error_, v50, 0, v188);

  v51 = v188[0];
  if (!v45)
  {
    v57 = v51;
    sub_1DC62A104();

    swift_willThrow();
    goto LABEL_9;
  }
  v52 = (_QWORD *)sub_1DC62A14C();
  v54 = v53;

  sub_1DC4BA670(0, &qword_1EDB11828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC5CC374();
  v45 = (uint64_t *)v47;
  v55 = v183;
  sub_1DC62ABE4();
  v56 = v55;
  if (v55)
    goto LABEL_7;
  v142 = v49;
  v58 = (char *)v188[0];
  v59 = *((_QWORD *)v188[0] + 2);
  v144 = v52;
  if (!v59)
    goto LABEL_17;
  v140 = v54;
  v141 = v47;
  v183 = 0;
  v60 = (char *)v188[0]
      + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
  v146 = *(_QWORD *)(v176 + 72);
  swift_bridgeObjectRetain();
  v145 = 0x80000001DC64DA70;
  v61 = v147;
  while (1)
  {
    sub_1DC62A6BC();
    v62 = sub_1DC62A6A4();
    v64 = v63;
    (*(void (**)(char *, uint64_t))(v148 + 8))(v61, v149);
    if (v62 == 0xD000000000000012 && v64 == v145)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    v65 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v65 & 1) != 0)
      break;
    v60 += v146;
    if (!--v59)
    {
      swift_bridgeObjectRelease();
      v56 = v183;
      v54 = v140;
      v47 = v141;
      v52 = v144;
LABEL_17:
      v147 = v58;
      sub_1DC62AAAC();
      v66 = (void *)sub_1DC62B07C();
      swift_bridgeObjectRelease();
      v188[0] = 0;
      v45 = (uint64_t *)objc_msgSend(v142, sel_dataWithJSONObject_options_error_, v66, 0, v188);

      v67 = v188[0];
      if (v45)
      {
        v68 = sub_1DC62A14C();
        v70 = v69;

        sub_1DC5CC404();
        v45 = (uint64_t *)v47;
        sub_1DC62ABE4();
        if (v56)
        {
          sub_1DC547A3C(v68, v70);
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
        v146 = v70;
        v140 = v54;
        v141 = v47;
        v183 = 0;
        memcpy(v187, v188, sizeof(v187));
        v72 = *((_QWORD *)v147 + 2);
        v145 = v68;
        if (v72)
        {
          v73 = &v147[(*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80)];
          v74 = *(_QWORD *)(v176 + 72);
          v148 = *(_QWORD *)(v176 + 16);
          v149 = v74;
          swift_bridgeObjectRetain();
          v75 = MEMORY[0x1E0DEE9D8];
          v76 = v181;
          v77 = (uint64_t)v171;
          v78 = v180;
          while (1)
          {
            ((void (*)(char *, char *, uint64_t))v148)(v78, v73, v76);
            sub_1DC62A68C();
            v80 = v182;
            v81 = sub_1DC62A680();
            v82 = *(_QWORD *)(v81 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) != 1)
              break;
            sub_1DC5CC448((uint64_t)v80, &qword_1EDB0E228, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F58]);
            v83 = v168;
            sub_1DC62A698();
            v84 = v167;
            sub_1DC62A65C();
            v85 = (uint64_t)v84;
            (*(void (**)(char *, uint64_t))(v169 + 8))(v83, v170);
            v86 = v172;
            v87 = v173;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48))(v85, 1, v172) != 1)
            {
              sub_1DC62AB90();
              (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v85, v86);
              goto LABEL_33;
            }
            sub_1DC5CC448(v85, &qword_1EDB0E8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670]);
            v88 = 1;
LABEL_34:
            v89 = v178;
            v90 = v179;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v179 + 56))(v77, v88, 1, v178);
            (*(void (**)(char *, uint64_t))(v176 + 8))(v180, v181);
            v91 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v77, 1, v89);
            v92 = v177;
            if (v91 == 1)
            {
              sub_1DC5CC448(v77, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
              v79 = v175;
            }
            else
            {
              v93 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 32);
              v94 = v166;
              v93(v166, v77, v89);
              v93(v174, (uint64_t)v94, v89);
              v95 = v75;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v95 = sub_1DC525BBC(0, *(_QWORD *)(v75 + 16) + 1, 1, v75);
              v97 = *(_QWORD *)(v95 + 16);
              v96 = *(_QWORD *)(v95 + 24);
              v75 = v95;
              if (v97 >= v96 >> 1)
                v75 = sub_1DC525BBC(v96 > 1, v97 + 1, 1, v95);
              *(_QWORD *)(v75 + 16) = v97 + 1;
              v93((char *)(v75+ ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80))+ *(_QWORD *)(v179 + 72) * v97), (uint64_t)v174, v178);
              v79 = v175;
              v92 = v177;
            }
            v73 += v149;
            --v72;
            v76 = v181;
            v78 = v180;
            if (!v72)
            {
              swift_bridgeObjectRelease_n();
              v42 = v184;
              v98 = v143;
              goto LABEL_42;
            }
          }
          sub_1DC62A674();
          (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v81);
          v77 = (uint64_t)v171;
          sub_1DC62A17C();
LABEL_33:
          v88 = 0;
          goto LABEL_34;
        }
        swift_bridgeObjectRelease();
        v75 = MEMORY[0x1E0DEE9D8];
        v98 = v143;
        v79 = v175;
        v92 = v177;
LABEL_42:
        v99 = v165;
        v182 = &v98[*(int *)(v165 + 48)];
        sub_1DC5CB610(v98, v182, v42, v75);
        swift_bridgeObjectRelease();
        if ((sub_1DC62AAC4() & 1) != 0)
          v100 = 3;
        else
          v100 = 4;
        LODWORD(v176) = v100;
        v101 = v160;
        sub_1DC62A1B8();
        v102 = sub_1DC62A1AC();
        v180 = v103;
        v181 = v102;
        v104 = v98;
        (*(void (**)(char *, uint64_t))(v92 + 8))(v101, v79);
        v105 = v158;
        v106 = &v158[*(int *)(v99 + 48)];
        v107 = v178;
        v108 = v179;
        v109 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
        v109(v158, v104, v178);
        v109(v106, v182, v107);
        v177 = v187[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DC62AB9C();
        v110 = *(void (**)(char *, uint64_t))(v108 + 8);
        v110(v105, v107);
        v111 = v165;
        v181 = (uint64_t)&v105[*(int *)(v165 + 48)];
        v112 = v181;
        v109(v105, v104, v107);
        v113 = v182;
        v109((char *)v112, v182, v107);
        v114 = v159;
        v115 = &v159[*(int *)(v111 + 48)];
        v109(v159, v104, v107);
        v109(v115, v113, v107);
        v116 = v162;
        sub_1DC62ABB4();
        v110(v114, v107);
        v110((char *)v181, v107);
        v117 = v187[46];
        if (v187[46])
        {
          v118 = v187[45];
          v119 = v163;
          v120 = v161;
          v121 = v173;
          if ((v187[45] & 0xFF00) == 0x500)
          {
            v185 = 0;
            v186 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            v45 = &v185;
            sub_1DC62B2EC();
            swift_bridgeObjectRelease();
            sub_1DC5CC48C();
            swift_allocError();
            v123 = 0xD000000000000027;
            v124 = "Failed to find data for OrientationData";
            goto LABEL_53;
          }
          v126 = v187[47];
          if (v187[47])
          {
            v127 = v161;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1DC5CC4D0(v187);
            v128 = *(void (**)(uint64_t, char *, uint64_t))(v121 + 32);
            v129 = v157;
            v128(v157, v164, v172);
            v130 = v119;
            v131 = (int *)v153;
            (*(void (**)(uint64_t, char *, uint64_t))(v127 + 32))(v129 + *(int *)(v153 + 20), v116, v130);
            *(_QWORD *)(v129 + v131[6]) = v117;
            *(_WORD *)(v129 + v131[7]) = v118;
            *(_BYTE *)(v129 + v131[8]) = v176;
            *(_QWORD *)(v129 + v131[9]) = v126;
            sub_1DC62A08C();
            swift_allocObject();
            v132 = sub_1DC62A080();
            v133 = v154;
            *v154 = sub_1DC5CBFD4;
            v133[1] = 0;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v155 + 104))(v133, *MEMORY[0x1E0CAE148], v156);
            v45 = (uint64_t *)v132;
            sub_1DC62A068();
            sub_1DC4B6748(&qword_1EDB0FAE8, type metadata accessor for AppSessionEndEvent.Model, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent.Model);
            v134 = v183;
            sub_1DC62A074();
            if (!v134)
            {
              v135 = objc_allocWithZone((Class)sub_1DC62AA88());
              if (sub_1DC62AA94())
              {
                sub_1DC62AADC();
                sub_1DC62AAA0();
                type metadata accessor for AppSessionEndEvent(0);
                v183 = 0;
                sub_1DC4B6748(&qword_1EDB0FB90, type metadata accessor for AppSessionEndEvent, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent);
                v136 = v150;
                sub_1DC62A764();
                sub_1DC62A9C8();
                sub_1DC4BA670(0, &qword_1EDB11B58, (uint64_t (*)(uint64_t))sub_1DC5CC674, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
                v45 = (uint64_t *)swift_allocObject();
                *((_OWORD *)v45 + 1) = xmmword_1DC62C660;
                v137 = v152;
                v45[7] = v152;
                v45[8] = sub_1DC4B6748(&qword_1EDB0E720, (uint64_t (*)(uint64_t))sub_1DC5CC230, MEMORY[0x1E0CF8068]);
                boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45 + 4);
                (*(void (**)(uint64_t *, char *, uint64_t))(v151 + 32))(boxed_opaque_existential_1, v136, v137);
                sub_1DC547A3C((uint64_t)v144, v140);
                swift_release();
                swift_release();
                sub_1DC547A3C(v145, v146);
                sub_1DC547A80(v157, type metadata accessor for AppSessionEndEvent.Model);
                sub_1DC547A80((uint64_t)v143, (uint64_t (*)(_QWORD))sub_1DC5CC2A8);
                return v45;
              }
              v185 = 0;
              v186 = 0xE000000000000000;
              v45 = &v185;
              sub_1DC62B2EC();
              swift_bridgeObjectRelease();
              sub_1DC5CC48C();
              swift_allocError();
              *v139 = 0xD00000000000001CLL;
              v139[1] = 0x80000001DC64DB20;
              swift_willThrow();
            }
            sub_1DC547A3C((uint64_t)v144, v140);
            swift_release();
            swift_release();
            sub_1DC547A3C(v145, v146);
            sub_1DC547A80(v129, type metadata accessor for AppSessionEndEvent.Model);
          }
          else
          {
            v185 = 0;
            v186 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            v45 = &v185;
            sub_1DC62B2EC();
            swift_bridgeObjectRelease();
            sub_1DC5CC48C();
            swift_allocError();
            v123 = 0xD00000000000002CLL;
            v124 = "Failed to find data for WatchlistSummaryData";
LABEL_53:
            *v122 = v123;
            v122[1] = (unint64_t)(v124 - 32) | 0x8000000000000000;
            swift_willThrow();
            sub_1DC547A3C((uint64_t)v144, v140);
            swift_release();
            sub_1DC547A3C(v145, v146);
            sub_1DC5CC4D0(v187);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v120 + 8))(v116, v119);
            (*(void (**)(char *, uint64_t))(v121 + 8))(v164, v172);
          }
        }
        else
        {
          v185 = 0;
          v186 = 0xE000000000000000;
          v45 = &v185;
          sub_1DC62B2EC();
          swift_bridgeObjectRelease();
          sub_1DC5CC48C();
          swift_allocError();
          *v125 = 0xD00000000000002DLL;
          v125[1] = 0x80000001DC64DA90;
          swift_willThrow();
          sub_1DC547A3C((uint64_t)v144, v140);
          swift_release();
          sub_1DC547A3C(v145, v146);
          sub_1DC5CC4D0(v187);
          (*(void (**)(char *, uint64_t))(v161 + 8))(v116, v163);
          (*(void (**)(char *, uint64_t))(v173 + 8))(v164, v172);
        }
        sub_1DC547A80((uint64_t)v143, (uint64_t (*)(_QWORD))sub_1DC5CC2A8);
        return v45;
      }
      v71 = v67;
      swift_bridgeObjectRelease();
      sub_1DC62A104();

      swift_willThrow();
LABEL_7:
      sub_1DC547A3C((uint64_t)v52, v54);
LABEL_9:
      swift_release();
      return v45;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_23:
  sub_1DC547A3C((uint64_t)v144, v140);
  swift_release();
  return (uint64_t *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DC5CB554(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD v3[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC62B5D4();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_1DC62B52C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    return sub_1DC62A17C();
  }
  return result;
}

uint64_t sub_1DC5CB610(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  int v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;

  v48 = a1;
  v49 = a2;
  sub_1DC4BA670(0, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v44 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - v11;
  v13 = sub_1DC62A1A0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v46 = (char *)&v44 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v44 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v44 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v44 - v26;
  sub_1DC62AAB8();
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v29 = v28(v12, 1, v13);
  v45 = v17;
  if (v29 == 1)
  {
    sub_1DC62A194();
    sub_1DC5CC448((uint64_t)v12, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v27, v12, v13);
  }
  v30 = a4;
  sub_1DC5CB9BC(a4, v10);
  v31 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v31(v22, v27, v13);
  if (v28(v10, 1, v13) == 1)
  {
    v32 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v32(v25, v22, v13);
    sub_1DC5CC448((uint64_t)v10, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    v32 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v32(v25, v10, v13);
  }
  v33 = v47;
  sub_1DC5CBCC8(v30, v47);
  v34 = v45;
  v31(v45, v27, v13);
  v35 = v28(v33, 1, v13);
  v36 = v48;
  if (v35 == 1)
  {
    v37 = v34;
    v38 = v46;
    v32(v46, v37, v13);
    sub_1DC5CC448((uint64_t)v33, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v13);
    v38 = v46;
    v32(v46, v33, v13);
  }
  sub_1DC4B6748(&qword_1EDB0E568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  if ((sub_1DC62B0B8() & 1) != 0)
    v39 = v25;
  else
    v39 = v27;
  v31(v36, v39, v13);
  if ((sub_1DC62B0C4() & 1) != 0)
  {
    v40 = v49;
    v41 = v38;
  }
  else
  {
    v40 = v49;
    v41 = v36;
  }
  v31(v40, v41, v13);
  v42 = *(void (**)(char *, uint64_t))(v14 + 8);
  v42(v38, v13);
  v42(v25, v13);
  return ((uint64_t (*)(char *, uint64_t))v42)(v27, v13);
}

uint64_t sub_1DC5CB9BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);

  sub_1DC4BA670(0, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - v7;
  v9 = sub_1DC62A1A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v17(v8, 1, 1, v9);
    goto LABEL_7;
  }
  v30 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v33 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  v33(v8, a1 + v30, v9);
  v31 = a1;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v17(v8, 0, 1, v9);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v18(v8, 1, v9) == 1)
  {
LABEL_7:
    sub_1DC5CC448((uint64_t)v8, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v22 = a2;
    v23 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v22, v23, 1, v9);
  }
  v29 = a2;
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(v15, v8, v9);
  swift_bridgeObjectRetain();
  v20 = v16 - 1;
  if (v20)
  {
    v32 = *(_QWORD *)(v10 + 72);
    v25 = v31 + v32 + v30;
    while (1)
    {
      v33(v6, v25, v9);
      v17(v6, 0, 1, v9);
      if (v18(v6, 1, v9) == 1)
        break;
      v19(v13, v6, v9);
      sub_1DC4B6748(&qword_1EDB0E568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v26 = sub_1DC62B0B8();
      v27 = *(void (**)(char *, uint64_t))(v10 + 8);
      if ((v26 & 1) != 0)
      {
        v27(v15, v9);
        v19(v15, v13, v9);
      }
      else
      {
        v27(v13, v9);
      }
      v25 += v32;
      if (!--v20)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v17(v6, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_1DC5CC448((uint64_t)v6, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v21 = v29;
  v19(v29, v15, v9);
  v22 = v21;
  v23 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v22, v23, 1, v9);
}

uint64_t sub_1DC5CBCC8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);

  sub_1DC4BA670(0, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_1DC62A1A0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v34(v9, a1 + v31, v10);
  v32 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1DC5CC448((uint64_t)v9, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v30 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain();
  v21 = v17 - 1;
  if (v21)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v32 + v33 + v31;
    while (1)
    {
      v34(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      sub_1DC4B6748(&qword_1EDB0E568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v27 = sub_1DC62B0B8();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1DC5CC448((uint64_t)v7, &qword_1EDB0E570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v22 = v30;
  v20(v30, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t sub_1DC5CBFD4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  double v3;
  double v4;
  _BYTE v5[24];
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC62B5EC();
  result = sub_1DC62A188();
  v4 = v3 * 1000.0;
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 9.22337204e18)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
    sub_1DC62B538();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t FlushAnalyticsBatchesStartupTask.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  v2 = sub_1DC62AD28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return v0;
}

uint64_t FlushAnalyticsBatchesStartupTask.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  v2 = sub_1DC62AD28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t static StartupTaskGroup.flushAnalytics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDB0E8E8 != -1)
    swift_once();
  v2 = sub_1DC62AD28();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDB0E8D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1DC5CC210()
{
  return type metadata accessor for FlushAnalyticsBatchesStartupTask();
}

uint64_t method lookup function for FlushAnalyticsBatchesStartupTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlushAnalyticsBatchesStartupTask.run(launchOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

void sub_1DC5CC230()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E728)
  {
    type metadata accessor for AppSessionEndEvent(255);
    sub_1DC4B6748(&qword_1EDB0FB90, type metadata accessor for AppSessionEndEvent, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent);
    v0 = sub_1DC62A77C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E728);
  }
}

void sub_1DC5CC2A8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB0E4C8)
  {
    sub_1DC62A1A0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB0E4C8);
  }
}

void sub_1DC5CC30C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11820)
  {
    v0 = sub_1DC62B094();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11820);
  }
}

unint64_t sub_1DC5CC374()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_1EDB11830;
  if (!qword_1EDB11830)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F88];
    sub_1DC4BA670(255, &qword_1EDB11828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7F88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = v2;
    v4 = sub_1DC4B6748(&qword_1EDB0E680, v1, MEMORY[0x1E0CF7F98]);
    result = MEMORY[0x1DF0CC744](MEMORY[0x1E0DEAF40], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_1EDB11830);
  }
  return result;
}

unint64_t sub_1DC5CC404()
{
  unint64_t result;

  result = qword_1EDB0EC50;
  if (!qword_1EDB0EC50)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StocksSession, &type metadata for StocksSession);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC50);
  }
  return result;
}

uint64_t sub_1DC5CC448(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1DC4BA670(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1DC5CC48C()
{
  unint64_t result;

  result = qword_1EDB12A38;
  if (!qword_1EDB12A38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642CA0, &type metadata for FlushAnalyticsBatchesStartupTask.Errors);
    atomic_store(result, (unint64_t *)&qword_1EDB12A38);
  }
  return result;
}

_QWORD *sub_1DC5CC4D0(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = a1[38];
  v5 = a1[37];
  v3 = a1[39];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC5CC640(v5, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC5CC640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DC5CC674()
{
  unint64_t result;

  result = qword_1EDB0E890;
  if (!qword_1EDB0E890)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB0E890);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1DC5CC72C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1DC5CC750(uint64_t a1)
{
  return sub_1DC5CA2F4(a1);
}

ValueMetadata *type metadata accessor for FlushAnalyticsBatchesStartupTask.Errors()
{
  return &type metadata for FlushAnalyticsBatchesStartupTask.Errors;
}

uint64_t sub_1DC5CC778(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v9[7];
  char v10;

  v2 = sub_1DC62A2FC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC5CC8C8(&v10);
    v6 = v10;
    if (v10 != 12)
    {
      sub_1DC62A8A8();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(&v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v2);
      v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v8 = swift_allocObject();
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v3 + 32))(v8 + v7, &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
      *(_BYTE *)(v8 + v7 + v4) = v6;
      sub_1DC62AB48();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC5CC8C8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  char v9;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_1DC62A2FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x1E0DAE260])
  {
    v9 = 6;
LABEL_5:
    *a1 = v9;
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (v8 == *MEMORY[0x1E0DAE298])
  {
    v9 = 4;
    goto LABEL_5;
  }
  if (v8 == *MEMORY[0x1E0DAE2B0])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    sub_1DC5CD8C4();
    v12 = &v7[*(int *)(v11 + 48)];
    *a1 = 0;
  }
  else
  {
    if (v8 == *MEMORY[0x1E0DAE2A0])
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      sub_1DC5CD8C4();
      v12 = &v7[*(int *)(v13 + 48)];
      v14 = 2;
    }
    else if (v8 == *MEMORY[0x1E0DAE2B8])
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      sub_1DC5CD8C4();
      v12 = &v7[*(int *)(v15 + 48)];
      v14 = 1;
    }
    else if (v8 == *MEMORY[0x1E0DAE2C8])
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      sub_1DC5CD8C4();
      v12 = &v7[*(int *)(v16 + 48)];
      v14 = 3;
    }
    else
    {
      if (v8 != *MEMORY[0x1E0DAE238])
      {
        if (v8 == *MEMORY[0x1E0DAE290])
        {
          v9 = 7;
        }
        else if (v8 == *MEMORY[0x1E0DAE1F0])
        {
          v9 = 8;
        }
        else if (v8 == *MEMORY[0x1E0DAE270])
        {
          v9 = 9;
        }
        else if (v8 == *MEMORY[0x1E0DAE2D8])
        {
          v9 = 10;
        }
        else if (v8 == *MEMORY[0x1E0DAE280])
        {
          v9 = 11;
        }
        else
        {
          v9 = 12;
        }
        goto LABEL_5;
      }
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      sub_1DC5CD8C4();
      v12 = &v7[*(int *)(v17 + 48)];
      v14 = 5;
    }
    *a1 = v14;
  }
  v18 = sub_1DC62A260();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v12, v18);
  v19 = sub_1DC62AE0C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v7, v19);
}

id sub_1DC5CCB98(char *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  id result;
  void *v25;
  char *v26;
  char *v27;
  int v28;
  char *v29;
  unsigned __int8 *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _BOOL4 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  int v80;
  char *v81;
  int v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _OWORD v87[3];

  sub_1DC4BA670(0, &qword_1EDB0E578, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE220], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v83 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v86 = (char *)&v63 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v63 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v63 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v63 - v16;
  v18 = sub_1DC62A1A0();
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for NetworkEventData();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedNetworkReachability);
  if (!result)
    goto LABEL_54;
  v25 = result;
  if (objc_msgSend(result, sel_isNetworkReachableViaWiFi))
  {

    v82 = 1;
  }
  else
  {
    v81 = v17;
    v26 = v12;
    v27 = a1;
    v28 = a3;
    v29 = v20;
    v30 = (unsigned __int8 *)objc_msgSend(v25, sel_cellularRadioAccessTechnology);

    if ((unint64_t)(v30 - 1) > 0xC)
      v82 = 0;
    else
      v82 = byte_1DC642D82[(_QWORD)(v30 - 1)];
    v20 = v29;
    a3 = v28;
    a1 = v27;
    v12 = v26;
    v17 = v81;
  }
  sub_1DC62A2F0();
  result = (id)sub_1DC62A26C();
  v32 = v31 * 1000.0;
  if ((~COERCE__INT64(v31 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v32 <= -9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v32 >= 9.22337204e18)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  result = (id)sub_1DC62A2A8();
  v34 = v33 * 1000.0;
  if ((~COERCE__INT64(v33 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v34 >= 9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  result = (id)sub_1DC62A2B4();
  v36 = v35 * 1000.0;
  if ((~COERCE__INT64(v35 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v36 <= -9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v36 >= 9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  result = (id)sub_1DC62A2C0();
  v38 = v37 * 1000.0;
  if ((~COERCE__INT64(v37 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v38 >= 9.22337204e18)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  result = (id)sub_1DC62A284();
  v40 = v39 * 1000.0;
  if ((~COERCE__INT64(v39 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v40 <= -9.22337204e18)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v40 >= 9.22337204e18)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    return result;
  }
  v79 = v20;
  v80 = a3;
  v81 = a1;
  v78 = sub_1DC62A278();
  v77 = sub_1DC62A29C();
  v76 = sub_1DC62A2E4();
  sub_1DC62A2D8();
  v41 = sub_1DC62A260();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  if (v43(v17, 1, v41) == 1)
  {
    sub_1DC5CD870((uint64_t)v17);
    v75 = 0;
    v74 = 0;
  }
  else
  {
    v75 = sub_1DC62A224();
    v74 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v41);
  }
  sub_1DC62A2D8();
  v45 = v43(v15, 1, v41);
  if (v45 == 1)
  {
    sub_1DC5CD870((uint64_t)v15);
    v73 = 0;
  }
  else
  {
    v73 = sub_1DC62A254();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v41);
  }
  sub_1DC62A2D8();
  v46 = v43(v12, 1, v41);
  if (v46 == 1)
  {
    sub_1DC5CD870((uint64_t)v12);
    v72 = 0;
  }
  else
  {
    v72 = sub_1DC62A248();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v41);
  }
  sub_1DC62A2D8();
  v47 = (uint64_t)v86;
  v48 = v43(v86, 1, v41);
  v49 = (uint64_t)v83;
  if (v48 == 1)
  {
    sub_1DC5CD870(v47);
    v71 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v71 = sub_1DC62A23C();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v47, v41);
  }
  sub_1DC62A2D8();
  if (v43((char *)v49, 1, v41) == 1)
  {
    sub_1DC5CD870(v49);
    v86 = (char *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v86 = (char *)sub_1DC62A230();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v49, v41);
  }
  LODWORD(v83) = v46 == 1;
  v70 = v45 == 1;
  v66 = (uint64_t)v38;
  v65 = (uint64_t)v40;
  v69 = sub_1DC62A290();
  v68 = v50;
  v67 = sub_1DC62A2CC();
  v51 = &v23[v21[10]];
  v52 = (uint64_t *)&v23[v21[16]];
  v53 = &v23[v21[17]];
  v54 = v21[18];
  v64 = v21[19];
  v55 = &v23[v54];
  v63 = v21[20];
  v56 = (uint64_t *)&v23[v21[21]];
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v23, v79, v85);
  v23[v21[5]] = 2;
  *(_QWORD *)&v23[v21[6]] = (uint64_t)v32;
  *(_QWORD *)&v23[v21[7]] = (uint64_t)v34;
  *(_QWORD *)&v23[v21[8]] = (uint64_t)v36;
  *(_QWORD *)&v23[v21[9]] = v66;
  *(_QWORD *)v51 = v65;
  v51[8] = 0;
  *(_QWORD *)&v23[v21[11]] = v78;
  *(_QWORD *)&v23[v21[12]] = v77;
  *(_QWORD *)&v23[v21[13]] = v76;
  v23[v21[14]] = v80;
  v23[v21[15]] = v82;
  v57 = v74;
  *v52 = v75;
  v52[1] = v57;
  *(_QWORD *)v53 = v73;
  v53[8] = v70;
  *(_QWORD *)v55 = v72;
  v55[8] = (char)v83;
  *(_QWORD *)&v23[v64] = v71;
  *(_QWORD *)&v23[v63] = v86;
  v58 = v68;
  *v56 = v69;
  v56[1] = v58;
  v23[v21[22]] = v67 & 1;
  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB11B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v59 = sub_1DC62A818();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v60 + 104))(v62 + v61, *MEMORY[0x1E0CF8170], v59);
  sub_1DC4B6748(&qword_1EDB0F648, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventData, (uint64_t)&protocol conformance descriptor for NetworkEventData);
  sub_1DC62A7B8();
  swift_bridgeObjectRelease();
  sub_1DC547A80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
  type metadata accessor for TelemetryEvent(0);
  sub_1DC4B6748(&qword_1EDB0F208, type metadata accessor for TelemetryEvent, (uint64_t)&protocol conformance descriptor for TelemetryEvent);
  memset(v87, 0, 32);
  sub_1DC62A7D0();
  return (id)sub_1DC547A80((uint64_t)v87, (uint64_t (*)(_QWORD))sub_1DC4B2B78);
}

uint64_t sub_1DC5CD4C0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC5CD4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1DC62A1A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  sub_1DC62A194();
  sub_1DC62A860();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC5CD5C8()
{
  return sub_1DC62AD34();
}

uint64_t sub_1DC5CD5D0()
{
  return sub_1DC62AD58();
}

uint64_t sub_1DC5CD5D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;

  v0 = sub_1DC62A1A0();
  v12 = *(_QWORD *)(v0 - 8);
  v13 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC62A1C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62AB24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0CF8560], v7);
  sub_1DC62A1B8();
  sub_1DC62A1AC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1DC62A194();
  sub_1DC62A878();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1DC5CD754()
{
  uint64_t v0;

  return backgroundTask(withName:timeout:work:)(15.0, 0xD000000000000016, 0x80000001DC64DC20, (uint64_t)sub_1DC5CD934, v0);
}

uint64_t sub_1DC5CD780()
{
  return sub_1DC62AD58();
}

uint64_t sub_1DC5CD788()
{
  return sub_1DC62AD94();
}

uint64_t sub_1DC5CD790()
{
  return sub_1DC62AD34();
}

uint64_t sub_1DC5CD798()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC5CD7BC(uint64_t a1)
{
  return sub_1DC5CC778(a1);
}

uint64_t sub_1DC5CD7C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DC62A2FC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

id sub_1DC5CD828(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1DC62A2FC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DC5CCB98(a1, v1 + v4, *(unsigned __int8 *)(v1 + v4 + *(_QWORD *)(v3 + 64)));
}

uint64_t sub_1DC5CD870(uint64_t a1)
{
  uint64_t v2;

  sub_1DC4BA670(0, &qword_1EDB0E578, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE220], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC5CD8C4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB0E280)
  {
    sub_1DC62AE0C();
    sub_1DC62A260();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB0E280);
  }
}

uint64_t sub_1DC5CD934(uint64_t a1, uint64_t a2)
{
  return sub_1DC5CD4F4(a1, a2);
}

uint64_t sub_1DC5CD93C()
{
  swift_release();
  return swift_deallocObject();
}

void AdEngagementData.adEngagementType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdEngagementData.adEngagementType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdEngagementData.adEngagementType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdEngagementData __swiftcall AdEngagementData.init(adEngagementType:)(StocksAnalytics::AdEngagementData adEngagementType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)adEngagementType.adEngagementType;
  return adEngagementType;
}

unint64_t sub_1DC5CD994()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5CD9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5CDFFC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC5CD9D8()
{
  sub_1DC5CDB2C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5CDA00()
{
  sub_1DC5CDB2C();
  return sub_1DC62B610();
}

uint64_t AdEngagementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5CDCEC(0, &qword_1F036EDD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5CDB2C();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5CDB70();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5CDB2C()
{
  unint64_t result;

  result = qword_1F036EDD8;
  if (!qword_1F036EDD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642F14, &type metadata for AdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EDD8);
  }
  return result;
}

unint64_t sub_1DC5CDB70()
{
  unint64_t result;

  result = qword_1F036EDE0;
  if (!qword_1F036EDE0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdEngagementType, &type metadata for AdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1F036EDE0);
  }
  return result;
}

uint64_t AdEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5CDCEC(0, &qword_1F036EDE8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5CDB2C();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5CDD48();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5CDCEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5CDB2C();
    v7 = a3(a1, &type metadata for AdEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5CDD48()
{
  unint64_t result;

  result = qword_1F036EDF0;
  if (!qword_1F036EDF0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdEngagementType, &type metadata for AdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1F036EDF0);
  }
  return result;
}

uint64_t sub_1DC5CDD94@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1DC5CDDA8(_QWORD *a1)
{
  return AdEngagementData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AdEngagementData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC5CDE08 + 4 * byte_1DC642D95[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC5CDE3C + 4 * byte_1DC642D90[v4]))();
}

uint64_t sub_1DC5CDE3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5CDE44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5CDE4CLL);
  return result;
}

uint64_t sub_1DC5CDE58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5CDE60);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC5CDE64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5CDE6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementData()
{
  return &type metadata for AdEngagementData;
}

uint64_t storeEnumTagSinglePayload for AdEngagementData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5CDEC8 + 4 * byte_1DC642D9A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5CDEE8 + 4 * byte_1DC642D9F[v4]))();
}

_BYTE *sub_1DC5CDEC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5CDEE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5CDEF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5CDEF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5CDF00(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5CDF08(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementData.CodingKeys()
{
  return &type metadata for AdEngagementData.CodingKeys;
}

unint64_t sub_1DC5CDF28()
{
  unint64_t result;

  result = qword_1F036EDF8;
  if (!qword_1F036EDF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642EEC, &type metadata for AdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EDF8);
  }
  return result;
}

unint64_t sub_1DC5CDF70()
{
  unint64_t result;

  result = qword_1F036EE00;
  if (!qword_1F036EE00)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642E5C, &type metadata for AdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE00);
  }
  return result;
}

unint64_t sub_1DC5CDFB8()
{
  unint64_t result;

  result = qword_1F036EE08;
  if (!qword_1F036EE08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC642E84, &type metadata for AdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE08);
  }
  return result;
}

uint64_t sub_1DC5CDFFC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64DC40)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void OnboardingScreenData.onboardingScreenType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *OnboardingScreenData.onboardingScreenType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*OnboardingScreenData.onboardingScreenType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::OnboardingScreenData __swiftcall OnboardingScreenData.init(onboardingScreenType:)(StocksAnalytics::OnboardingScreenData onboardingScreenType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)onboardingScreenType.onboardingScreenType;
  return onboardingScreenType;
}

unint64_t sub_1DC5CE0B4()
{
  return 0xD000000000000014;
}

uint64_t sub_1DC5CE0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5CE71C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC5CE0F8()
{
  sub_1DC5CE24C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5CE120()
{
  sub_1DC5CE24C();
  return sub_1DC62B610();
}

uint64_t OnboardingScreenData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5CE40C(0, &qword_1F036EE10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5CE24C();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5CE290();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5CE24C()
{
  unint64_t result;

  result = qword_1F036EE18;
  if (!qword_1F036EE18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6430F8, &type metadata for OnboardingScreenData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE18);
  }
  return result;
}

unint64_t sub_1DC5CE290()
{
  unint64_t result;

  result = qword_1F036EE20;
  if (!qword_1F036EE20)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OnboardingScreenType, &type metadata for OnboardingScreenType);
    atomic_store(result, (unint64_t *)&qword_1F036EE20);
  }
  return result;
}

uint64_t OnboardingScreenData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5CE40C(0, &qword_1F036EE28, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5CE24C();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5CE468();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5CE40C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5CE24C();
    v7 = a3(a1, &type metadata for OnboardingScreenData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5CE468()
{
  unint64_t result;

  result = qword_1F036EE30;
  if (!qword_1F036EE30)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OnboardingScreenType, &type metadata for OnboardingScreenType);
    atomic_store(result, (unint64_t *)&qword_1F036EE30);
  }
  return result;
}

uint64_t sub_1DC5CE4B4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OnboardingScreenData.init(from:)(a1, a2);
}

uint64_t sub_1DC5CE4C8(_QWORD *a1)
{
  return OnboardingScreenData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5CE528 + 4 * byte_1DC642F75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5CE55C + 4 * byte_1DC642F70[v4]))();
}

uint64_t sub_1DC5CE55C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5CE564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5CE56CLL);
  return result;
}

uint64_t sub_1DC5CE578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5CE580);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5CE584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5CE58C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenData()
{
  return &type metadata for OnboardingScreenData;
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5CE5E8 + 4 * byte_1DC642F7A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5CE608 + 4 * byte_1DC642F7F[v4]))();
}

_BYTE *sub_1DC5CE5E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5CE608(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5CE610(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5CE618(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5CE620(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5CE628(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenData.CodingKeys()
{
  return &type metadata for OnboardingScreenData.CodingKeys;
}

unint64_t sub_1DC5CE648()
{
  unint64_t result;

  result = qword_1F036EE38;
  if (!qword_1F036EE38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6430D0, &type metadata for OnboardingScreenData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE38);
  }
  return result;
}

unint64_t sub_1DC5CE690()
{
  unint64_t result;

  result = qword_1F036EE40;
  if (!qword_1F036EE40)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC643040, &type metadata for OnboardingScreenData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE40);
  }
  return result;
}

unint64_t sub_1DC5CE6D8()
{
  unint64_t result;

  result = qword_1F036EE48;
  if (!qword_1F036EE48)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC643068, &type metadata for OnboardingScreenData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE48);
  }
  return result;
}

uint64_t sub_1DC5CE71C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64DC60)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t URLReferralData.referralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 56);
  v2 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 56) = v3;
  *(_QWORD *)(a1 + 64) = v2;
  *(_QWORD *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t URLReferralData.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  v5 = v1[13];
  v6 = v1[14];
  v7 = v1[15];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1DC537928(v2, v3);
}

uint64_t URLReferralData.adReferralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = *(_QWORD *)(v1 + 136);
  *a1 = v2;
  a1[1] = v3;
  return sub_1DC517D30(v2, v3);
}

uint64_t destroy for URLReferralData(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + 136);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for URLReferralData(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _OWORD *v13;
  uint64_t v14;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v6;
  v7 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v7;
  v8 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v8;
  v9 = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v9;
    v10 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v10;
    v11 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  }
  v13 = a2 + 16;
  v14 = a2[17];
  if (v14 == 1)
  {
    *(_OWORD *)(a1 + 128) = *v13;
  }
  else
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)v13;
    *(_QWORD *)(a1 + 136) = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for URLReferralData(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 10;
  v5 = a2 + 10;
  v6 = a2[11];
  if (a1[11])
  {
    if (v6)
    {
      a1[10] = a2[10];
      a1[11] = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC53BA88((uint64_t)(a1 + 10));
      v8 = *((_OWORD *)a2 + 6);
      v7 = *((_OWORD *)a2 + 7);
      *v4 = *v5;
      *((_OWORD *)a1 + 6) = v8;
      *((_OWORD *)a1 + 7) = v7;
    }
  }
  else if (v6)
  {
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *((_OWORD *)a2 + 7);
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 7) = v10;
    *v4 = v9;
  }
  v11 = a2[17];
  if (a1[17] != 1)
  {
    if (v11 != 1)
    {
      a1[16] = a2[16];
      a1[17] = a2[17];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DC53BA54((uint64_t)(a1 + 16));
    goto LABEL_13;
  }
  if (v11 == 1)
  {
LABEL_13:
    *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
    return a1;
  }
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

_QWORD *assignWithTake for URLReferralData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  if (a1[11])
  {
    v9 = a2[11];
    if (v9)
    {
      a1[10] = a2[10];
      a1[11] = v9;
      swift_bridgeObjectRelease();
      v10 = a2[13];
      a1[12] = a2[12];
      a1[13] = v10;
      swift_bridgeObjectRelease();
      v11 = a2[15];
      a1[14] = a2[14];
      a1[15] = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DC53BA88((uint64_t)(a1 + 10));
  }
  v12 = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 6) = v12;
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_6:
  v13 = a2 + 16;
  if (a1[17] != 1)
  {
    v14 = a2[17];
    if (v14 != 1)
    {
      a1[16] = *v13;
      a1[17] = v14;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DC53BA54((uint64_t)(a1 + 16));
  }
  *((_OWORD *)a1 + 8) = *(_OWORD *)v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for URLReferralData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLReferralData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for URLReferralData()
{
  return &type metadata for URLReferralData;
}

void SymbolChartData.symbolChartDateRange.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SymbolChartData.symbolChartDateRange.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SymbolChartData.symbolChartDateRange.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SymbolChartData __swiftcall SymbolChartData.init(symbolChartDateRange:)(StocksAnalytics::SymbolChartData symbolChartDateRange)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)symbolChartDateRange.symbolChartDateRange;
  return symbolChartDateRange;
}

unint64_t sub_1DC5CEE30()
{
  return 0xD000000000000014;
}

uint64_t sub_1DC5CEE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5CF520(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC5CEE74()
{
  sub_1DC5CEFC8();
  return sub_1DC62B604();
}

uint64_t sub_1DC5CEE9C()
{
  sub_1DC5CEFC8();
  return sub_1DC62B610();
}

uint64_t SymbolChartData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5CF188(0, &qword_1F036EE50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5CEFC8();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5CF00C();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5CEFC8()
{
  unint64_t result;

  result = qword_1F036EE58;
  if (!qword_1F036EE58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6432E0, &type metadata for SymbolChartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE58);
  }
  return result;
}

unint64_t sub_1DC5CF00C()
{
  unint64_t result;

  result = qword_1F036EE60;
  if (!qword_1F036EE60)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDateRange, &type metadata for SymbolChartDateRange);
    atomic_store(result, (unint64_t *)&qword_1F036EE60);
  }
  return result;
}

uint64_t SymbolChartData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5CF188(0, &qword_1F036EE68, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5CEFC8();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5CF1E4();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5CF188(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5CEFC8();
    v7 = a3(a1, &type metadata for SymbolChartData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5CF1E4()
{
  unint64_t result;

  result = qword_1F036EE70;
  if (!qword_1F036EE70)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDateRange, &type metadata for SymbolChartDateRange);
    atomic_store(result, (unint64_t *)&qword_1F036EE70);
  }
  return result;
}

unint64_t sub_1DC5CF22C()
{
  unint64_t result;

  result = qword_1F036EE78;
  if (!qword_1F036EE78)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartData, &type metadata for SymbolChartData);
    atomic_store(result, (unint64_t *)&qword_1F036EE78);
  }
  return result;
}

unint64_t sub_1DC5CF274()
{
  unint64_t result;

  result = qword_1F036EE80;
  if (!qword_1F036EE80)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartData, &type metadata for SymbolChartData);
    atomic_store(result, (unint64_t *)&qword_1F036EE80);
  }
  return result;
}

uint64_t sub_1DC5CF2B8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SymbolChartData.init(from:)(a1, a2);
}

uint64_t sub_1DC5CF2CC(_QWORD *a1)
{
  return SymbolChartData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SymbolChartData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1DC5CF32C + 4 * byte_1DC643169[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1DC5CF360 + 4 * asc_1DC643164[v4]))();
}

uint64_t sub_1DC5CF360(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5CF368(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5CF370);
  return result;
}

uint64_t sub_1DC5CF37C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5CF384);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1DC5CF388(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5CF390(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartData()
{
  return &type metadata for SymbolChartData;
}

uint64_t storeEnumTagSinglePayload for SymbolChartData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5CF3EC + 4 * byte_1DC64316E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5CF40C + 4 * byte_1DC643173[v4]))();
}

_BYTE *sub_1DC5CF3EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5CF40C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5CF414(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5CF41C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5CF424(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5CF42C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartData.CodingKeys()
{
  return &type metadata for SymbolChartData.CodingKeys;
}

unint64_t sub_1DC5CF44C()
{
  unint64_t result;

  result = qword_1F036EE88;
  if (!qword_1F036EE88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6432B8, &type metadata for SymbolChartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE88);
  }
  return result;
}

unint64_t sub_1DC5CF494()
{
  unint64_t result;

  result = qword_1F036EE90;
  if (!qword_1F036EE90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC643228, &type metadata for SymbolChartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE90);
  }
  return result;
}

unint64_t sub_1DC5CF4DC()
{
  unint64_t result;

  result = qword_1F036EE98;
  if (!qword_1F036EE98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC643250, &type metadata for SymbolChartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EE98);
  }
  return result;
}

uint64_t sub_1DC5CF520(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64DC80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t AppSessionEndEvent.Model.init(eventData:timedData:watchedSymbolListData:orientationData:viewEndData:watchlistSummaryData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int16 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  __int16 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v10 = *a3;
  v11 = *a4;
  v12 = *a5;
  v13 = *a6;
  v14 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  v15 = (int *)type metadata accessor for AppSessionEndEvent.Model(0);
  v16 = a7 + v15[5];
  v17 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  *(_QWORD *)(a7 + v15[6]) = v10;
  *(_WORD *)(a7 + v15[7]) = v11;
  *(_BYTE *)(a7 + v15[8]) = v12;
  *(_QWORD *)(a7 + v15[9]) = v13;
  return result;
}

uint64_t sub_1DC5CF664(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB0FA98, MEMORY[0x1E0CF8078]);
}

uint64_t static AppSessionEndEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E2E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FA98, a1);
}

uint64_t sub_1DC5CF6A4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB0FAB0, MEMORY[0x1E0CF8380]);
}

uint64_t static AppSessionEndEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0FAC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FAB0, a1);
}

uint64_t AppSessionEndEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AppSessionEndEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppSessionEndEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionEndEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for AppSessionEndEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t AppSessionEndEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.timedData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.watchedSymbolListData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.orientationData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.viewEndData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.watchlistSummaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionEndEvent.watchlistSummaryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.watchlistSummaryData.modify())()
{
  type metadata accessor for AppSessionEndEvent(0);
  return nullsub_1;
}

uint64_t AppSessionEndEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AppSessionEndEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
}

uint64_t AppSessionEndEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppSessionEndEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for AppSessionEndEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t AppSessionEndEvent.Model.watchedSymbolListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionEndEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionEndEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AppSessionEndEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionEndEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t AppSessionEndEvent.Model.watchlistSummaryData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 36));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC5CFE1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5CFE54 + 4 * byte_1DC643330[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5CFE54()
{
  return 0x74614464656D6974;
}

unint64_t sub_1DC5CFE68()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC5CFE88()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1DC5CFEAC()
{
  return 0x44646E4577656976;
}

unint64_t sub_1DC5CFECC()
{
  return 0xD000000000000014;
}

uint64_t sub_1DC5CFEE8()
{
  unsigned __int8 *v0;

  return sub_1DC5CFE1C(*v0);
}

uint64_t sub_1DC5CFEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5D1E84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5CFF14()
{
  sub_1DC5D0204();
  return sub_1DC62B604();
}

uint64_t sub_1DC5CFF3C()
{
  sub_1DC5D0204();
  return sub_1DC62B610();
}

uint64_t AppSessionEndEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  sub_1DC5D06E4(0, &qword_1EDB11A60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5D0204();
  sub_1DC62B5F8();
  LOBYTE(v13) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AppSessionEndEvent.Model(0);
    LOBYTE(v13) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v13 = *(_QWORD *)(v3 + v10[6]);
    HIBYTE(v12) = 2;
    sub_1DC4BF5A0();
    sub_1DC62B4E4();
    LOWORD(v13) = *(_WORD *)(v3 + v10[7]);
    HIBYTE(v12) = 3;
    sub_1DC4C0058();
    sub_1DC62B4E4();
    LOBYTE(v13) = *(_BYTE *)(v3 + v10[8]);
    HIBYTE(v12) = 4;
    sub_1DC4C0298();
    sub_1DC62B4E4();
    v13 = *(_QWORD *)(v3 + v10[9]);
    HIBYTE(v12) = 5;
    sub_1DC4BF7A8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5D0204()
{
  unint64_t result;

  result = qword_1EDB0FAD0;
  if (!qword_1EDB0FAD0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC643544, &type metadata for AppSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FAD0);
  }
  return result;
}

uint64_t AppSessionEndEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void (**v5)(char *, char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;

  v24 = a2;
  v3 = sub_1DC62ABC0();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC62ABA8();
  v5 = *(void (***)(char *, char *, uint64_t))(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5D06E4(0, &qword_1EDB11948, MEMORY[0x1E0DED048]);
  v29 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for AppSessionEndEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5D0204();
  v31 = v10;
  v14 = (uint64_t)v32;
  sub_1DC62B5E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = (int *)v11;
  v23 = v8;
  v32 = a1;
  v15 = v26;
  v16 = v27;
  LOBYTE(v34) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v28;
  sub_1DC62B454();
  v5[4](v13, v30, v17);
  LOBYTE(v34) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v18 = v25;
  sub_1DC62B454();
  v30 = (char *)v5;
  v19 = v18;
  v20 = v22;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v13[v22[5]], v19, v16);
  v33 = 2;
  sub_1DC4BF55C();
  sub_1DC62B454();
  *(_QWORD *)&v13[v20[6]] = v34;
  v33 = 3;
  sub_1DC4C0014();
  sub_1DC62B454();
  *(_WORD *)&v13[v20[7]] = v34;
  v33 = 4;
  sub_1DC4C0254();
  sub_1DC62B454();
  v13[v20[8]] = v34;
  v33 = 5;
  sub_1DC4BF764();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v31, v29);
  *(_QWORD *)&v13[v20[9]] = v34;
  sub_1DC5D0740((uint64_t)v13, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1DC5D0784((uint64_t)v13);
}

void sub_1DC5D06E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5D0204();
    v7 = a3(a1, &type metadata for AppSessionEndEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5D0740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5D0784(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5D07C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionEndEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5D07D4(_QWORD *a1)
{
  return AppSessionEndEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5D07E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E2E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FA98, a1);
}

uint64_t sub_1DC5D080C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0FAC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FAB0, a1);
}

uint64_t sub_1DC5D0830@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionEndEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5D13F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5D1588(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *initializeBufferWithCopyOfBuffer for AppSessionEndEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *(_WORD *)((char *)a1 + v12) = *(_WORD *)((char *)a2 + v12);
    v13 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_WORD *)(a1 + v11) = *(_WORD *)(a2 + v11);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_WORD *)(a1 + v11) = *(_WORD *)(a2 + v11);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5D1B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5D1C3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC5D1D2C + 4 * byte_1DC64333B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC5D1D60 + 4 * byte_1DC643336[v4]))();
}

uint64_t sub_1DC5D1D60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D1D68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5D1D70);
  return result;
}

uint64_t sub_1DC5D1D7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5D1D84);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC5D1D88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D1D90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppSessionEndEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionEndEvent.Model.CodingKeys;
}

unint64_t sub_1DC5D1DB0()
{
  unint64_t result;

  result = qword_1F036EEA0;
  if (!qword_1F036EEA0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64351C, &type metadata for AppSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EEA0);
  }
  return result;
}

unint64_t sub_1DC5D1DF8()
{
  unint64_t result;

  result = qword_1EDB0FAE0;
  if (!qword_1EDB0FAE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64348C, &type metadata for AppSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FAE0);
  }
  return result;
}

unint64_t sub_1DC5D1E40()
{
  unint64_t result;

  result = qword_1EDB0FAD8;
  if (!qword_1EDB0FAD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6434B4, &type metadata for AppSessionEndEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FAD8);
  }
  return result;
}

uint64_t sub_1DC5D1E84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BFD0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64DCA0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t static Settings.Analytics2.Debugging.sessionName.getter()
{
  return sub_1DC4B35EC(&qword_1EDB0E5E0);
}

uint64_t sub_1DC5D2160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[16];

  v0 = sub_1DC62A5D8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1DC62A5CC();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD))(v6 + 104))(&v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v8[15] = 0;
  sub_1DC4B43C0(0, &qword_1EDB0E668);
  swift_allocObject();
  result = sub_1DC62A608();
  qword_1EDB0E5C8 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.disableAnalytics.getter()
{
  return sub_1DC4B35EC(&qword_1EDB0E5D0);
}

uint64_t Settings.Analytics2.Debugging.Jitter.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1DC62A5CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  v9 = sub_1DC62A5A8();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t static Settings.Analytics2.Debugging.jitterOverrides.getter()
{
  return sub_1DC4B35EC(&qword_1EDB0E5F0);
}

uint64_t static Settings.Analytics2.Instrumentation.ads.getter()
{
  return sub_1DC4B35EC(&qword_1EDB0E238);
}

uint64_t sub_1DC5D23B4(uint64_t a1)
{
  return sub_1DC4B4F14(a1, 1, 0xD000000000000034, 0x80000001DC64DD90, &qword_1F036EEA8);
}

uint64_t static Settings.Analytics2.Debugging.Jitter.enablement.getter()
{
  return sub_1DC4B35EC(&qword_1F0369180);
}

uint64_t sub_1DC5D23F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1DC62A5CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4B43C0(0, &qword_1F036EED8);
  v5[3] = 0xC082C00000000000;
  v5[1] = 0;
  v5[2] = 0xFFEFFFFFFFFFFFFFLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1DC62A5F0();
  qword_1F036EEB0 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.Jitter.lowerBound.getter()
{
  return sub_1DC4B35EC(&qword_1F0369188);
}

uint64_t sub_1DC5D2508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1DC62A5CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4B43C0(0, &qword_1F036EED8);
  v5[2] = 0;
  v5[3] = 0x4082C00000000000;
  v5[1] = 0x7FEFFFFFFFFFFFFFLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1DC62A5F0();
  qword_1F036EEB8 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.Jitter.upperBound.getter()
{
  return sub_1DC4B35EC(&qword_1F0369190);
}

uint64_t Settings.Analytics2.Debugging.Jitter.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = sub_1DC62A5CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5);
  v8 = sub_1DC62A5A8();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v8;
}

uint64_t Settings.Analytics2.Debugging.Jitter.__deallocating_deinit()
{
  _s11TeaSettings0B0C15StocksAnalyticsE10Analytics2V9DebuggingV6JitterCfd_0();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for Settings.Analytics2()
{
  return &type metadata for Settings.Analytics2;
}

ValueMetadata *type metadata accessor for Settings.Analytics2.Debugging()
{
  return &type metadata for Settings.Analytics2.Debugging;
}

ValueMetadata *type metadata accessor for Settings.Analytics2.Instrumentation()
{
  return &type metadata for Settings.Analytics2.Instrumentation;
}

uint64_t sub_1DC5D2724()
{
  return type metadata accessor for Settings.Analytics2.Debugging.Jitter();
}

uint64_t sub_1DC5D272C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036EEE0, MEMORY[0x1E0CF8078]);
}

uint64_t static EOAFeedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369198, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036EEE0, a1);
}

uint64_t sub_1DC5D276C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036EEF8, MEMORY[0x1E0CF8380]);
}

uint64_t static EOAFeedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036EEF8, a1);
}

uint64_t EOAFeedViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t EOAFeedViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EOAFeedViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for EOAFeedViewEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for EOAFeedViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036EF80);
}

uint64_t EOAFeedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.timedData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.viewData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.feedData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.orientationData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.hostArticleViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleViewData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.hostArticleNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleNewsArticleData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.hostArticleChannelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleChannelData.modify())()
{
  type metadata accessor for EOAFeedViewEvent(0);
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for EOAFeedViewEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v2, v16);
  v17 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v2, v18);
}

uint64_t EOAFeedViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EOAFeedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for EOAFeedViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for EOAFeedViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F028);
}

uint64_t EOAFeedViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EOAFeedViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t EOAFeedViewEvent.Model.hostArticleViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 EOAFeedViewEvent.Model.init(eventData:timedData:viewData:feedData:orientationData:hostArticleViewData:hostArticleNewsArticleData:hostArticleChannelData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, __int16 *a5@<X4>, uint64_t *a6@<X5>, __int128 *a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 *v26;
  __n128 result;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unint64_t v44;
  unint64_t v45;
  __n128 v46;

  v12 = *a3;
  v13 = a3[1];
  v14 = *((_WORD *)a3 + 8);
  v15 = *a4;
  v16 = *((_QWORD *)a4 + 1);
  v17 = *((_QWORD *)a4 + 2);
  v28 = *a5;
  v29 = a6[1];
  v30 = *a6;
  v41 = *a7;
  v39 = *((_QWORD *)a7 + 3);
  v40 = *((_QWORD *)a7 + 2);
  v38 = *((_BYTE *)a7 + 32);
  v37 = *((_QWORD *)a7 + 5);
  v36 = *((_BYTE *)a7 + 48);
  v35 = *((_QWORD *)a7 + 7);
  v33 = *((_BYTE *)a7 + 65);
  v34 = *((_BYTE *)a7 + 64);
  v31 = *((_BYTE *)a7 + 67);
  v32 = *((_BYTE *)a7 + 66);
  v46 = *a8;
  v45 = a8[1].n128_u64[0];
  v44 = a8[1].n128_u64[1];
  v42 = a8[2].n128_u8[1];
  v43 = a8[2].n128_u8[0];
  v18 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)type metadata accessor for EOAFeedViewEvent.Model(0);
  v20 = a9 + v19[5];
  v21 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = a9 + v19[6];
  *(_QWORD *)v22 = v12;
  *(_QWORD *)(v22 + 8) = v13;
  *(_WORD *)(v22 + 16) = v14;
  v23 = a9 + v19[7];
  *(_BYTE *)v23 = v15;
  *(_QWORD *)(v23 + 8) = v16;
  *(_QWORD *)(v23 + 16) = v17;
  *(_WORD *)(a9 + v19[8]) = v28;
  v24 = (_QWORD *)(a9 + v19[9]);
  *v24 = v30;
  v24[1] = v29;
  v25 = a9 + v19[10];
  *(_OWORD *)v25 = v41;
  *(_QWORD *)(v25 + 16) = v40;
  *(_QWORD *)(v25 + 24) = v39;
  *(_BYTE *)(v25 + 32) = v38;
  *(_QWORD *)(v25 + 40) = v37;
  *(_BYTE *)(v25 + 48) = v36;
  *(_QWORD *)(v25 + 56) = v35;
  *(_BYTE *)(v25 + 64) = v34;
  *(_BYTE *)(v25 + 65) = v33;
  *(_BYTE *)(v25 + 66) = v32;
  *(_BYTE *)(v25 + 67) = v31;
  v26 = (__n128 *)(a9 + v19[11]);
  result = v46;
  *v26 = v46;
  v26[1].n128_u64[0] = v45;
  v26[1].n128_u64[1] = v44;
  v26[2].n128_u8[0] = v43;
  v26[2].n128_u8[1] = v42;
  return result;
}

uint64_t sub_1DC5D347C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5D34B4
                                                            + 4 * asc_1DC6435C0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5D34B4()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5D34C8()
{
  return 0x6174614477656976;
}

uint64_t sub_1DC5D34F0()
{
  return 0x7461746E6569726FLL;
}

unint64_t sub_1DC5D3514()
{
  return 0xD000000000000013;
}

unint64_t sub_1DC5D3530()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1DC5D3568()
{
  unsigned __int8 *v0;

  return sub_1DC5D347C(*v0);
}

uint64_t sub_1DC5D3570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5D6438(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5D3594()
{
  sub_1DC5D3990();
  return sub_1DC62B604();
}

uint64_t sub_1DC5D35BC()
{
  sub_1DC5D3990();
  return sub_1DC62B610();
}

uint64_t EOAFeedViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v3 = v1;
  sub_1DC5D4080(0, &qword_1F036EF10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5D3990();
  sub_1DC62B5F8();
  LOBYTE(v39) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for EOAFeedViewEvent.Model(0);
    LOBYTE(v39) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v39 = v12;
    *((_QWORD *)&v39 + 1) = v13;
    LOWORD(v40) = (_WORD)v11;
    v51 = 2;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v14 = (char *)(v3 + v10[7]);
    v15 = *v14;
    v17 = *((_QWORD *)v14 + 1);
    v16 = *((_QWORD *)v14 + 2);
    LOBYTE(v39) = v15;
    *((_QWORD *)&v39 + 1) = v17;
    v40 = v16;
    v51 = 3;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    LOWORD(v39) = *(_WORD *)(v3 + v10[8]);
    v51 = 4;
    sub_1DC4C0058();
    sub_1DC62B4E4();
    v18 = (uint64_t *)(v3 + v10[9]);
    v20 = *v18;
    v19 = v18[1];
    *(_QWORD *)&v39 = v20;
    *((_QWORD *)&v39 + 1) = v19;
    v51 = 5;
    sub_1DC4E656C();
    sub_1DC62B4E4();
    v21 = (__int128 *)(v3 + v10[10]);
    v22 = *v21;
    v23 = *((_QWORD *)v21 + 2);
    v24 = *((_QWORD *)v21 + 3);
    v25 = *((_BYTE *)v21 + 32);
    v26 = *((_QWORD *)v21 + 5);
    v27 = *((_BYTE *)v21 + 48);
    v28 = *((_QWORD *)v21 + 7);
    v29 = *((_BYTE *)v21 + 64);
    v30 = *((_BYTE *)v21 + 65);
    v31 = *((_BYTE *)v21 + 66);
    LOBYTE(v21) = *((_BYTE *)v21 + 67);
    v39 = v22;
    v40 = v23;
    v41 = v24;
    v42 = v25;
    v44 = v26;
    v45 = v27;
    v46 = v28;
    v47 = v29;
    v48 = v30;
    v49 = v31;
    v50 = (char)v21;
    v51 = 6;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v32 = (__int128 *)(v3 + v10[11]);
    v33 = *v32;
    v34 = *((_QWORD *)v32 + 2);
    v35 = *((_QWORD *)v32 + 3);
    v36 = *((_BYTE *)v32 + 32);
    LOBYTE(v32) = *((_BYTE *)v32 + 33);
    v39 = v33;
    v40 = v34;
    v41 = v35;
    v42 = v36;
    v43 = (char)v32;
    v51 = 7;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5D3990()
{
  unint64_t result;

  result = qword_1F036EF18;
  if (!qword_1F036EF18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64384C, &type metadata for EOAFeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036EF18);
  }
  return result;
}

uint64_t EOAFeedViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  __int16 v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;

  v47 = a2;
  v51 = sub_1DC62ABC0();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62ABA8();
  v50 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5D4080(0, &qword_1F036EF20, MEMORY[0x1E0DED048]);
  v48 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - v10;
  v52 = type metadata accessor for EOAFeedViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v52);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DC5D3990();
  v53 = v11;
  v15 = v55;
  sub_1DC62B5E0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  v55 = v9;
  LOBYTE(v56) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v16 = v48;
  sub_1DC62B454();
  (*(void (**)(char *, char *))(v50 + 32))(v13, v7);
  LOBYTE(v56) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v17 = v51;
  sub_1DC62B454();
  v18 = (int *)v52;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v13[*(int *)(v52 + 20)], v4, v17);
  v68 = 2;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v19 = *((_QWORD *)&v56 + 1);
  v20 = v57;
  v21 = &v13[v18[6]];
  *(_QWORD *)v21 = v56;
  *((_QWORD *)v21 + 1) = v19;
  *((_WORD *)v21 + 8) = v20;
  v68 = 3;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v22 = (uint64_t)v54;
  v23 = v18;
  v24 = *((_QWORD *)&v56 + 1);
  v25 = v57;
  v26 = &v13[v18[7]];
  *v26 = v56;
  *((_QWORD *)v26 + 1) = v24;
  *((_QWORD *)v26 + 2) = v25;
  v68 = 4;
  sub_1DC4C0014();
  sub_1DC62B454();
  v27 = v55;
  *(_WORD *)&v13[v23[8]] = v56;
  v68 = 5;
  sub_1DC4E6528();
  sub_1DC62B454();
  v28 = *((_QWORD *)&v56 + 1);
  v29 = &v13[v23[9]];
  *(_QWORD *)v29 = v56;
  *((_QWORD *)v29 + 1) = v28;
  v68 = 6;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v30 = v57;
  v31 = v58;
  v32 = v59;
  v33 = v61;
  v34 = v62;
  v35 = v63;
  v36 = v64;
  v37 = v65;
  v38 = v66;
  v39 = v67;
  v40 = &v13[v23[10]];
  *(_OWORD *)v40 = v56;
  *((_QWORD *)v40 + 2) = v30;
  *((_QWORD *)v40 + 3) = v31;
  v40[32] = v32;
  *((_QWORD *)v40 + 5) = v33;
  v40[48] = v34;
  *((_QWORD *)v40 + 7) = v35;
  v40[64] = v36;
  v40[65] = v37;
  v40[66] = v38;
  v40[67] = v39;
  v68 = 7;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v53, v16);
  v41 = v57;
  v42 = v58;
  v43 = v59;
  v44 = v60;
  v45 = &v13[v23[11]];
  *(_OWORD *)v45 = v56;
  *((_QWORD *)v45 + 2) = v41;
  *((_QWORD *)v45 + 3) = v42;
  v45[32] = v43;
  v45[33] = v44;
  sub_1DC5D40DC((uint64_t)v13, v47);
  __swift_destroy_boxed_opaque_existential_1(v22);
  return sub_1DC5D4120((uint64_t)v13);
}

void sub_1DC5D4080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5D3990();
    v7 = a3(a1, &type metadata for EOAFeedViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5D40DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EOAFeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5D4120(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EOAFeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5D415C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EOAFeedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5D4170(_QWORD *a1)
{
  return EOAFeedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5D4184@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369198, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036EEE0, a1);
}

uint64_t sub_1DC5D41A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036EEF8, a1);
}

uint64_t sub_1DC5D41CC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v4, v17);
  v18 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v4, v19);
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAFeedViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for EOAFeedViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAFeedViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5D51A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for EOAFeedViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5D53BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5D55D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAFeedViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    *v17 = *v18;
    v19 = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    *((_QWORD *)v17 + 2) = v19;
    v20 = a3[9];
    *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[10];
    v25 = a3[11];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = *((_QWORD *)v27 + 3);
    *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 3) = v29;
    v26[32] = v27[32];
    v26[48] = v27[48];
    *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
    *((_QWORD *)v26 + 7) = *((_QWORD *)v27 + 7);
    *((_DWORD *)v26 + 16) = *((_DWORD *)v27 + 16);
    v30 = (char *)a1 + v25;
    v31 = (char *)a2 + v25;
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = *((_QWORD *)v31 + 3);
    *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
    *((_QWORD *)v30 + 3) = v33;
    v30[32] = v31[32];
    v30[33] = v31[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  v19 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[10];
  v24 = a3[11];
  v25 = a1 + v23;
  v26 = a2 + v23;
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  v28 = *(_QWORD *)(v26 + 24);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 24) = v28;
  *(_BYTE *)(v25 + 32) = *(_BYTE *)(v26 + 32);
  *(_BYTE *)(v25 + 48) = *(_BYTE *)(v26 + 48);
  *(_QWORD *)(v25 + 40) = *(_QWORD *)(v26 + 40);
  *(_QWORD *)(v25 + 56) = *(_QWORD *)(v26 + 56);
  *(_DWORD *)(v25 + 64) = *(_DWORD *)(v26 + 64);
  v29 = a1 + v24;
  v30 = a2 + v24;
  v31 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_QWORD *)(v29 + 8) = v31;
  v32 = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 24) = v32;
  *(_BYTE *)(v29 + 32) = *(_BYTE *)(v30 + 32);
  *(_BYTE *)(v29 + 33) = *(_BYTE *)(v30 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_BYTE *)(a1 + v17);
  v19 = (_BYTE *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 32) = *(_BYTE *)(v25 + 32);
  v26 = *(_QWORD *)(v25 + 40);
  *(_BYTE *)(v24 + 48) = *(_BYTE *)(v25 + 48);
  *(_QWORD *)(v24 + 40) = v26;
  *(_QWORD *)(v24 + 56) = *(_QWORD *)(v25 + 56);
  *(_BYTE *)(v24 + 64) = *(_BYTE *)(v25 + 64);
  *(_BYTE *)(v24 + 65) = *(_BYTE *)(v25 + 65);
  *(_BYTE *)(v24 + 66) = *(_BYTE *)(v25 + 66);
  *(_BYTE *)(v24 + 67) = *(_BYTE *)(v25 + 67);
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_QWORD *)v28 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v28 + 32) = *(_BYTE *)(v29 + 32);
  *(_BYTE *)(v28 + 33) = *(_BYTE *)(v29 + 33);
  return a1;
}

uint64_t initializeWithTake for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  v17 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[10];
  v19 = a3[11];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_DWORD *)(v20 + 64) = *(_DWORD *)(v21 + 64);
  v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  v23 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v23;
  v24 = a1 + v19;
  v25 = a2 + v19;
  *(_WORD *)(v24 + 32) = *(_WORD *)(v25 + 32);
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  return a1;
}

uint64_t assignWithTake for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = v19;
  *(_QWORD *)(v16 + 16) = v18;
  swift_bridgeObjectRelease();
  v20 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25 + 8);
  *(_QWORD *)v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(v26 + 8) = v28;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v27 + 24);
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_QWORD *)(v26 + 24) = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + 32) = *(_BYTE *)(v27 + 32);
  *(_QWORD *)(v26 + 40) = *(_QWORD *)(v27 + 40);
  *(_BYTE *)(v26 + 48) = *(_BYTE *)(v27 + 48);
  *(_QWORD *)(v26 + 56) = *(_QWORD *)(v27 + 56);
  *(_BYTE *)(v26 + 64) = *(_BYTE *)(v27 + 64);
  *(_BYTE *)(v26 + 65) = *(_BYTE *)(v27 + 65);
  *(_BYTE *)(v26 + 66) = *(_BYTE *)(v27 + 66);
  *(_BYTE *)(v26 + 67) = *(_BYTE *)(v27 + 67);
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(v32 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_QWORD *)(v31 + 8) = v33;
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v32 + 24);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  *(_QWORD *)(v31 + 24) = v34;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v31 + 32) = *(_BYTE *)(v32 + 32);
  *(_BYTE *)(v31 + 33) = *(_BYTE *)(v32 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAFeedViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5D6074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EOAFeedViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5D612C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5D61D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EOAFeedViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC5D62E0 + 4 * byte_1DC6435CD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC5D6314 + 4 * byte_1DC6435C8[v4]))();
}

uint64_t sub_1DC5D6314(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D631C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5D6324);
  return result;
}

uint64_t sub_1DC5D6330(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5D6338);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC5D633C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D6344(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EOAFeedViewEvent.Model.CodingKeys()
{
  return &type metadata for EOAFeedViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC5D6364()
{
  unint64_t result;

  result = qword_1F036F078;
  if (!qword_1F036F078)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC643824, &type metadata for EOAFeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F078);
  }
  return result;
}

unint64_t sub_1DC5D63AC()
{
  unint64_t result;

  result = qword_1F036F080;
  if (!qword_1F036F080)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC643794, &type metadata for EOAFeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F080);
  }
  return result;
}

unint64_t sub_1DC5D63F4()
{
  unint64_t result;

  result = qword_1F036F088;
  if (!qword_1F036F088)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6437BC, &type metadata for EOAFeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F088);
  }
  return result;
}

uint64_t sub_1DC5D6438(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C120 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DC64C140 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C160)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

StocksAnalytics::StartMethod_optional __swiftcall StartMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::StartMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1DC5D67F4(char *a1)
{
  sub_1DC545EF8(*a1);
}

unint64_t sub_1DC5D6804()
{
  unint64_t result;

  result = qword_1F036F090;
  if (!qword_1F036F090)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StartMethod, &type metadata for StartMethod);
    atomic_store(result, (unint64_t *)&qword_1F036F090);
  }
  return result;
}

uint64_t sub_1DC5D6848()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DC62B5B0();
  sub_1DC602ACC((uint64_t)v3, v1);
  return sub_1DC62B5C8();
}

void sub_1DC5D688C(uint64_t a1)
{
  char *v1;

  sub_1DC602ACC(a1, *v1);
}

uint64_t sub_1DC5D6894()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DC62B5B0();
  sub_1DC602ACC((uint64_t)v3, v1);
  return sub_1DC62B5C8();
}

StocksAnalytics::StartMethod_optional sub_1DC5D68D4(Swift::String *a1)
{
  return StartMethod.init(rawValue:)(*a1);
}

uint64_t sub_1DC5D68E0()
{
  sub_1DC4B5900();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for StartMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DC5D6988 + 4 * byte_1DC6438AB[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DC5D69BC + 4 * byte_1DC6438A6[v4]))();
}

uint64_t sub_1DC5D69BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D69C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5D69CCLL);
  return result;
}

uint64_t sub_1DC5D69D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5D69E0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DC5D69E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D69EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartMethod()
{
  return &type metadata for StartMethod;
}

uint64_t sub_1DC5D6A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  sub_1DC5D6A80(v0 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig);
  v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate;
  v2 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DC5D6A78()
{
  return type metadata accessor for RollingTimestampConfigurationProvider();
}

uint64_t sub_1DC5D6A80(uint64_t a1)
{
  uint64_t v2;

  sub_1DC4B44DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

StocksAnalytics::PaidSubscriptionStatus_optional __swiftcall PaidSubscriptionStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::PaidSubscriptionStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PaidSubscriptionStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5D6B44 + 4 * byte_1DC643A70[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5D6B44()
{
  return 0x6C61697274;
}

uint64_t sub_1DC5D6B58()
{
  return 0x6269726373627573;
}

unint64_t sub_1DC5D6B74()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC5D6B90()
{
  return 0x6373627553746F6ELL;
}

void sub_1DC5D6BB4(char *a1)
{
  sub_1DC543174(*a1);
}

unint64_t sub_1DC5D6BC4()
{
  unint64_t result;

  result = qword_1F036F098;
  if (!qword_1F036F098)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriptionStatus, &type metadata for PaidSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1F036F098);
  }
  return result;
}

void sub_1DC5D6C08()
{
  char *v0;

  sub_1DC602144(*v0);
}

void sub_1DC5D6C10()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5D6C4C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5D6CD0(uint64_t a1)
{
  char *v1;

  sub_1DC603970(a1, *v1);
}

StocksAnalytics::PaidSubscriptionStatus_optional sub_1DC5D6CD8(Swift::String *a1)
{
  return PaidSubscriptionStatus.init(rawValue:)(*a1);
}

uint64_t sub_1DC5D6CE4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5D6D14 + 4 * byte_1DC643A7A[*v0]))();
}

void sub_1DC5D6D14(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61697274;
  a1[1] = 0xE500000000000000;
}

void sub_1DC5D6D2C(_QWORD *a1@<X8>)
{
  *a1 = 0x6269726373627573;
  a1[1] = 0xEA00000000006465;
}

void sub_1DC5D6D4C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001DC64BA50;
}

void sub_1DC5D6D6C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "notSubscribed");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1DC5D6D94()
{
  sub_1DC5D6F08();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5D6DF0()
{
  sub_1DC5D6F08();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for PaidSubscriptionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5D6E88 + 4 * byte_1DC643A84[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5D6EBC + 4 * byte_1DC643A7F[v4]))();
}

uint64_t sub_1DC5D6EBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D6EC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5D6ECCLL);
  return result;
}

uint64_t sub_1DC5D6ED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5D6EE0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5D6EE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D6EEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriptionStatus()
{
  return &type metadata for PaidSubscriptionStatus;
}

unint64_t sub_1DC5D6F08()
{
  unint64_t result;

  result = qword_1EDB10A38;
  if (!qword_1EDB10A38)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriptionStatus, &type metadata for PaidSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB10A38);
  }
  return result;
}

id SessionObserver.__allocating_init(sessionManager:watchlistManager:cloudContext:userContext:client:kind:appConfigurationManager:appIntentExecutionTypeProvider:)(uint64_t a1, _QWORD *a2, void *a3, _QWORD *a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  id v17;
  id v18;

  v17 = objc_allocWithZone(v8);
  v18 = sub_1DC5D83F0(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();

  return v18;
}

BOOL static SessionObserverKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SessionObserverKind.hash(into:)()
{
  return sub_1DC62B5BC();
}

uint64_t SessionObserverKind.hashValue.getter()
{
  sub_1DC62B5B0();
  sub_1DC62B5BC();
  return sub_1DC62B5C8();
}

uint64_t SessionObserver.window.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_window;
  swift_beginAccess();
  return MEMORY[0x1DF0CC840](v1);
}

void sub_1DC5D70B4(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v2 = v1;
  sub_1DC4BD5A4();

}

void (*SessionObserver.window.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_window;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1DF0CC840](v5);
  return sub_1DC5D7190;
}

void sub_1DC5D7190(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    sub_1DC4BD5A4();
  }
  free(v3);
}

id SessionObserver.init(sessionManager:watchlistManager:cloudContext:userContext:client:kind:appConfigurationManager:appIntentExecutionTypeProvider:)(uint64_t a1, _QWORD *a2, void *a3, _QWORD *a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  id v9;

  v9 = sub_1DC5D83F0(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();

  return v9;
}

uint64_t sub_1DC5D7240(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  __int128 v4;
  __int128 v5;

  v2 = result;
  switch(a2)
  {
    case 0:
    case 3:
      return result;
    case 1:
      Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      sub_1DC5D73F0(v2);

      type metadata accessor for AppSessionStartEvent(0);
      sub_1DC4BA75C((unint64_t *)&qword_1EDB102C8, 255, type metadata accessor for AppSessionStartEvent, (uint64_t)&protocol conformance descriptor for AppSessionStartEvent);
      v4 = 0u;
      v5 = 0u;
      sub_1DC62A7D0();
      sub_1DC4B2B3C((uint64_t)&v4);
      type metadata accessor for AppSessionEndEvent(0);
      sub_1DC4BA75C(&qword_1EDB0FB90, 255, type metadata accessor for AppSessionEndEvent, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent);
      result = sub_1DC62A7C4();
      break;
    case 2:
      type metadata accessor for AppSessionEndEvent(0);
      sub_1DC4BA75C(&qword_1EDB0FB90, 255, type metadata accessor for AppSessionEndEvent, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent);
      v4 = 0u;
      v5 = 0u;
      sub_1DC62A7D0();
      result = sub_1DC4B2B3C((uint64_t)&v4);
      break;
    default:
      result = sub_1DC62B37C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1DC5D73F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD v40[2];
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, unint64_t, uint64_t);
  uint64_t v54;
  __int128 v55;
  uint64_t v56;

  v52 = a1;
  sub_1DC4B2D78(0, &qword_1EDB0E6A8, (void (*)(void))sub_1DC4BF7EC);
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x1E0C80A78](v2);
  v49 = (char *)v40 - v3;
  sub_1DC4B2D78(0, &qword_1EDB0E248, (void (*)(void))sub_1DC4BF5E4);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)v40 - v5;
  v6 = sub_1DC62A548();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v40 - v11;
  v45 = v1;
  v13 = (_QWORD *)(v1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_watchlistManager);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_watchlistManager), *(_QWORD *)(v1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_watchlistManager + 24));
  sub_1DC62A3C8();
  v44 = sub_1DC62A53C();
  *(_QWORD *)&v55 = *(_QWORD *)(v7 + 8);
  ((void (*)(char *, uint64_t))v55)(v12, v6);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  v14 = sub_1DC62A3E0();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v56 = MEMORY[0x1E0DEE9D8];
    sub_1DC4BEAA8(0, v15, 0);
    v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v43 = v14;
    v17 = v14 + v16;
    v18 = *(_QWORD *)(v7 + 72);
    v53 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v54 = v18;
    do
    {
      v53(v10, v17, v6);
      v19 = sub_1DC62A530();
      v20 = sub_1DC62A53C();
      ((void (*)(char *, uint64_t))v55)(v10, v6);
      v21 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC4BEAA8(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v56;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1DC4BEAA8(v22 > 1, v23 + 1, 1);
        v21 = v56;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      v24 = v21 + 16 * v23;
      *(_BYTE *)(v24 + 32) = (v19 ^ 1) & 1;
      *(_QWORD *)(v24 + 40) = v20;
      v17 += v54;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v25 = v44;
  v56 = v44;
  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB11B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v27 = v26;
  v28 = sub_1DC62A818();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v40[1] = ((v30 + 32) & ~v30) + *(_QWORD *)(v29 + 72);
  v31 = (v30 + 32) & ~v30;
  v53 = (void (*)(char *, unint64_t, uint64_t))v31;
  v54 = v30 | 7;
  v43 = v27;
  v32 = swift_allocObject();
  v55 = xmmword_1DC62C660;
  *(_OWORD *)(v32 + 16) = xmmword_1DC62C660;
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 104);
  v41 = *MEMORY[0x1E0CF8168];
  v33 = v41;
  v42 = v28;
  v34(v32 + v31, v41, v28);
  sub_1DC4BF5E4();
  sub_1DC62A7B8();
  swift_bridgeObjectRelease();
  v56 = v25;
  v35 = v46;
  sub_1DC62A71C();
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v55;
  v34((uint64_t)v53 + v36, v33, v28);
  sub_1DC62A86C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
  v56 = v21;
  sub_1DC4BF7EC();
  sub_1DC62A7B8();
  v56 = v21;
  v37 = v49;
  sub_1DC62A71C();
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v55;
  v34((uint64_t)v53 + v38, v41, v42);
  sub_1DC62A86C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v37, v51);
}

id SessionObserver.__deallocating_deinit()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v2, sel_endGeneratingDeviceOrientationNotifications);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id SessionObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SessionObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1DC5D7B98()
{
  swift_getObjectType();
  return sub_1DC62A578();
}

uint64_t sub_1DC5D7BDC()
{
  swift_getObjectType();
  return sub_1DC62A584();
}

uint64_t sub_1DC5D7C38()
{
  swift_getObjectType();
  return sub_1DC62A560();
}

uint64_t SessionObserver.watchlistManagerWatchlistsDidChange(_:)()
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v1 = v0;
  sub_1DC62AB48();
  return swift_release();
}

uint64_t SessionObserver.watchlistManager(_:observedChanges:in:)()
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v1 = v0;
  sub_1DC62AB48();
  return swift_release();
}

uint64_t sub_1DC5D7D6C()
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v1 = v0;
  sub_1DC62AB48();
  return swift_release();
}

Swift::Void __swiftcall SessionObserver.sceneDidEnterBackground()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1DC62A8A8();
  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB11B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = sub_1DC62A818();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E0CF8168], v0);
  sub_1DC5D8940();
  sub_1DC62AB60();
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1DC5D7EE4()
{
  swift_getObjectType();
  return sub_1DC62AD34();
}

uint64_t sub_1DC5D7F0C()
{
  swift_getObjectType();
  return sub_1DC62AD58();
}

uint64_t sub_1DC5D7F54()
{
  swift_getObjectType();
  return sub_1DC62AD58();
}

uint64_t sub_1DC5D7F98()
{
  swift_getObjectType();
  return sub_1DC62AD34();
}

uint64_t SessionObserver.processURL(for:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB0E8F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - v6, a1, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, v4);
  v1;
  sub_1DC62A854();
  swift_release();
  return sub_1DC58EA10();
}

uint64_t sub_1DC5D80D8(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB0E8F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v8 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - v6, a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, v7, v4);
  v8;
  sub_1DC62A854();
  swift_release();
  return sub_1DC58EA10();
}

uint64_t _s15StocksAnalytics15SessionObserverC8patternsSay13TeaFoundation17URLHandlerPatternVGvg_0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(void);
  char *v9;
  char *v10;
  unint64_t v11;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1DC4BA670(0, &qword_1EDB11B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1DC62ADE8();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DC62C660;
  sub_1DC4BA670(0, &qword_1EDB11B68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3FB0], v0);
  v2 = sub_1DC62ADD0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DC63A0E0;
  v7 = (char *)(v6 + v5);
  *(_QWORD *)v7 = 0x6E676961706D6163;
  *((_QWORD *)v7 + 1) = 0xEB0000000064695FLL;
  v8 = *(void (**)(void))(v3 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v8)(v7, *MEMORY[0x1E0DB3F90], v2);
  strcpy(&v7[v4], "campaign_type");
  *(_WORD *)&v7[v4 + 14] = -4864;
  v8();
  v9 = &v7[2 * v4];
  *(_QWORD *)v9 = 0x6576697461657263;
  *((_QWORD *)v9 + 1) = 0xEB0000000064695FLL;
  v8();
  v10 = &v7[3 * v4];
  *(_QWORD *)v10 = 0x695F656372756F73;
  *((_QWORD *)v10 + 1) = 0xE900000000000064;
  v8();
  v11 = sub_1DC5B1A30(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1DF0CBBA4](42, 0xE100000000000000, 0, 0, 0, 0, 0, 0, v6, v11);
  return v1;
}

id sub_1DC5D83F0(uint64_t a1, _QWORD *a2, void *a3, _QWORD *a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  char v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  objc_class *ObjectType;
  int v36;
  id v37;
  uint64_t v38;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  v17 = *a6;
  v36 = *a6;
  swift_unknownObjectWeakInit();
  sub_1DC4BAC88((uint64_t)a2, (uint64_t)&v8[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_watchlistManager]);
  *(_QWORD *)&v8[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager] = a1;
  v18 = v8;
  swift_retain();
  *(_QWORD *)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_tracker] = sub_1DC62A8A8();
  *(_QWORD *)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext] = a3;
  sub_1DC4BE3AC((uint64_t)a4, (uint64_t)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext]);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_client] = a5;
  v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_kind] = v17;
  sub_1DC4BAC88(a7, (uint64_t)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager]);
  v38 = a8;
  sub_1DC4BAC88(a8, (uint64_t)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appIntentExecutionTypeProvider]);
  v19 = a3;
  v37 = a5;

  v39.receiver = v18;
  v39.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v39, sel_init);
  sub_1DC4BD8EC();
  sub_1DC62A8A8();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1DC62AB54();
  swift_release();
  swift_release();
  swift_release_n();
  v21 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v21, sel_beginGeneratingDeviceOrientationNotifications);

  sub_1DC4BD5A4();
  v22 = (void *)objc_opt_self();
  v23 = objc_msgSend(v22, sel_defaultCenter);
  objc_msgSend(v23, sel_addObserver_selector_name_object_, v20, sel_pushOrientationData, *MEMORY[0x1E0DC4960], 0);

  sub_1DC4BDF3C();
  *(_QWORD *)(swift_allocObject() + 16) = v20;
  v24 = v20;
  sub_1DC62A854();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v24;
  v25 = v24;
  sub_1DC62A854();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v25;
  v26 = v25;
  sub_1DC62A854();
  swift_release();
  sub_1DC4BD5A4();
  v27 = objc_msgSend(v22, sel_defaultCenter);
  v28 = (void *)sub_1DC62B0DC();
  objc_msgSend(v27, sel_addObserver_selector_name_object_, v26, sel_offerDidChange_, v28, 0);

  __swift_project_boxed_opaque_existential_1(a4, a4[3]);
  sub_1DC4BA75C(&qword_1EDB0F450, v29, (uint64_t (*)(uint64_t))type metadata accessor for SessionObserver, (uint64_t)&protocol conformance descriptor for SessionObserver);
  v30 = v26;
  sub_1DC62A434();

  _s15StocksAnalytics15SessionObserverC21identificationService_15didChangeUserIDy0A4Core014IdentificationF4Type_p_SStF_0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC4BA75C(&qword_1EDB0F448, v31, (uint64_t (*)(uint64_t))type metadata accessor for SessionObserver, (uint64_t)&protocol conformance descriptor for SessionObserver);
  v32 = v30;
  sub_1DC62A3D4();

  if (v36)
  {
    v33 = v37;
  }
  else
  {
    swift_allocObject();
    swift_unknownObjectUnownedInit();
    swift_retain();
    swift_retain();
    sub_1DC62AB54();
    swift_release();
    swift_release_n();
    v33 = v32;
    sub_1DC62A8C0();

    swift_release();
  }

  __swift_destroy_boxed_opaque_existential_1(v38);
  __swift_destroy_boxed_opaque_existential_1(a7);
  sub_1DC4BE354((uint64_t)a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v32;
}

uint64_t sub_1DC5D88FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC5D8920(uint64_t a1)
{
  return sub_1DC5D73F0(a1);
}

unint64_t sub_1DC5D8940()
{
  unint64_t result;

  result = qword_1EDB0E2A0;
  if (!qword_1EDB0E2A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewEndData, &type metadata for ViewEndData);
    atomic_store(result, (unint64_t *)&qword_1EDB0E2A0);
  }
  return result;
}

unint64_t sub_1DC5D8990()
{
  unint64_t result;

  result = qword_1F036F0B8;
  if (!qword_1F036F0B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SessionObserverKind, &type metadata for SessionObserverKind);
    atomic_store(result, (unint64_t *)&qword_1F036F0B8);
  }
  return result;
}

uint64_t sub_1DC5D89D4(uint64_t a1, uint64_t a2)
{
  return sub_1DC4BA75C(&qword_1EDB0E2D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for SessionObserver, (uint64_t)&protocol conformance descriptor for SessionObserver);
}

uint64_t sub_1DC5D8A00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_window;
  swift_beginAccess();
  result = MEMORY[0x1DF0CC840](v3);
  *a2 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for SessionObserverKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5D8AA4 + 4 * byte_1DC643BB9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5D8AD8 + 4 * byte_1DC643BB4[v4]))();
}

uint64_t sub_1DC5D8AD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D8AE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5D8AE8);
  return result;
}

uint64_t sub_1DC5D8AF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5D8AFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5D8B00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D8B08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t method lookup function for SessionObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionObserver.__allocating_init(sessionManager:watchlistManager:cloudContext:userContext:client:kind:appConfigurationManager:appIntentExecutionTypeProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB0E8F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1DC5D8BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB0E8F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1DC4C7390(a1, *(_QWORD *)(v1 + 16), v1 + ((v4 + 24) & ~v4));
}

uint64_t sub_1DC5D8C10()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC5D8C34()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC5D8C58(uint64_t result, uint64_t a2)
{
  return sub_1DC5D7240(result, a2);
}

StocksAnalytics::AppIntentType_optional __swiftcall AppIntentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AppIntentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AppIntentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5D8D04 + 4 * byte_1DC643DB0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5D8D04()
{
  return 0x626D79536E65706FLL;
}

uint64_t sub_1DC5D8D20()
{
  return 0x637461576E65706FLL;
}

unint64_t sub_1DC5D8D44()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5D8D60()
{
  return 0x697472416E65706FLL;
}

void sub_1DC5D8D80(char *a1)
{
  sub_1DC5458FC(*a1);
}

unint64_t sub_1DC5D8D90()
{
  unint64_t result;

  result = qword_1F036F0F8;
  if (!qword_1F036F0F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AppIntentType, &type metadata for AppIntentType);
    atomic_store(result, (unint64_t *)&qword_1F036F0F8);
  }
  return result;
}

void sub_1DC5D8DD4()
{
  char *v0;

  sub_1DC60222C(*v0);
}

void sub_1DC5D8DDC()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5D8E18()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5D8EA8(uint64_t a1)
{
  char *v1;

  sub_1DC603068(a1, *v1);
}

StocksAnalytics::AppIntentType_optional sub_1DC5D8EB0(Swift::String *a1)
{
  return AppIntentType.init(rawValue:)(*a1);
}

uint64_t sub_1DC5D8EBC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5D8EEC + 4 * byte_1DC643DBA[*v0]))();
}

void sub_1DC5D8EEC(_QWORD *a1@<X8>)
{
  *a1 = 0x626D79536E65706FLL;
  a1[1] = 0xEA00000000006C6FLL;
}

void sub_1DC5D8F0C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "openWatchlist");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1DC5D8F34(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001DC64BA80;
}

void sub_1DC5D8F54(_QWORD *a1@<X8>)
{
  *a1 = 0x697472416E65706FLL;
  a1[1] = 0xEB00000000656C63;
}

uint64_t sub_1DC5D8F78()
{
  sub_1DC5D90EC();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5D8FD4()
{
  sub_1DC5D90EC();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AppIntentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5D906C + 4 * byte_1DC643DC4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5D90A0 + 4 * byte_1DC643DBF[v4]))();
}

uint64_t sub_1DC5D90A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D90A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5D90B0);
  return result;
}

uint64_t sub_1DC5D90BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5D90C4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5D90C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5D90D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppIntentType()
{
  return &type metadata for AppIntentType;
}

unint64_t sub_1DC5D90EC()
{
  unint64_t result;

  result = qword_1F036F100;
  if (!qword_1F036F100)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AppIntentType, &type metadata for AppIntentType);
    atomic_store(result, (unint64_t *)&qword_1F036F100);
  }
  return result;
}

uint64_t sub_1DC5D9130()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A788();
  __swift_allocate_value_buffer(v0, qword_1F036F108);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F036F108);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static InterstitialAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F108, a1);
}

uint64_t sub_1DC5D91D0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A998();
  __swift_allocate_value_buffer(v0, qword_1F036F120);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F036F120);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static InterstitialAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F120, a1);
}

uint64_t InterstitialAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t InterstitialAdImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*InterstitialAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for InterstitialAdImpressionEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for InterstitialAdImpressionEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F1A8);
}

uint64_t InterstitialAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.timedData.modify())()
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adUserData.modify())()
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adPlacementData.modify())()
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adFeedData.modify())()
{
  type metadata accessor for InterstitialAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for InterstitialAdImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
}

uint64_t InterstitialAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t InterstitialAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for InterstitialAdImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for InterstitialAdImpressionEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F248);
}

uint64_t InterstitialAdImpressionEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t InterstitialAdImpressionEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent.Model(0) + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t InterstitialAdImpressionEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t InterstitialAdImpressionEvent.Model.init(eventData:timedData:adUserData:adPlacementData:adFeedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _QWORD *v20;

  v9 = *a3;
  v10 = a3[1];
  v11 = *a4;
  v12 = a4[1];
  v13 = *a5;
  v14 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a6, a1, v14);
  v15 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  v16 = a6 + v15[5];
  v17 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  v19 = (_QWORD *)(a6 + v15[6]);
  *v19 = v9;
  v19[1] = v10;
  v20 = (_QWORD *)(a6 + v15[7]);
  *v20 = v11;
  v20[1] = v12;
  *(_BYTE *)(a6 + v15[8]) = v13;
  return result;
}

uint64_t sub_1DC5D9914()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5D9948 + 4 * byte_1DC643EF0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5D9948()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5D995C()
{
  return 0x6144726573556461;
}

uint64_t sub_1DC5D99AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5DB870(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5D99D0()
{
  sub_1DC5D9C84();
  return sub_1DC62B604();
}

uint64_t sub_1DC5D99F8()
{
  sub_1DC5D9C84();
  return sub_1DC62B610();
}

uint64_t InterstitialAdImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v1;
  sub_1DC5DA160(0, &qword_1F036F138, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5D9C84();
  sub_1DC62B5F8();
  LOBYTE(v20) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + v10[6]);
    v13 = *v11;
    v12 = v11[1];
    v20 = v13;
    v21 = v12;
    v19 = 2;
    sub_1DC4C0710();
    sub_1DC62B4E4();
    v14 = (uint64_t *)(v3 + v10[7]);
    v16 = *v14;
    v15 = v14[1];
    v20 = v16;
    v21 = v15;
    v19 = 3;
    sub_1DC4D6C74();
    sub_1DC62B4E4();
    LOBYTE(v20) = *(_BYTE *)(v3 + v10[8]);
    v19 = 4;
    sub_1DC4C07B0();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5D9C84()
{
  unint64_t result;

  result = qword_1F036F140;
  if (!qword_1F036F140)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6440FC, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F140);
  }
  return result;
}

uint64_t InterstitialAdImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v26 = a2;
  v29 = sub_1DC62ABC0();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v28 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v31 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5DA160(0, &qword_1F036F148, MEMORY[0x1E0DED048]);
  v32 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - v8;
  v10 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5D9C84();
  v33 = v9;
  v13 = (uint64_t)v34;
  sub_1DC62B5E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v4;
  v25 = v7;
  v34 = a1;
  v14 = v28;
  v15 = v29;
  LOBYTE(v35) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v30;
  v16 = v31;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v12, v16, v17);
  LOBYTE(v35) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v12[v10[5]], v14, v15);
  v37 = 2;
  sub_1DC4C06CC();
  sub_1DC62B454();
  v18 = v36;
  v19 = &v12[v10[6]];
  *(_QWORD *)v19 = v35;
  *((_QWORD *)v19 + 1) = v18;
  v37 = 3;
  sub_1DC4D6C30();
  sub_1DC62B454();
  v20 = v36;
  v21 = &v12[v10[7]];
  *(_QWORD *)v21 = v35;
  *((_QWORD *)v21 + 1) = v20;
  v37 = 4;
  sub_1DC4C076C();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v32);
  v12[v10[8]] = v35;
  sub_1DC5DA1BC((uint64_t)v12, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1DC5DA200((uint64_t)v12);
}

void sub_1DC5DA160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5D9C84();
    v7 = a3(a1, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5DA1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5DA200(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5DA23C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InterstitialAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5DA250(_QWORD *a1)
{
  return InterstitialAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5DA264@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F108, a1);
}

uint64_t sub_1DC5DA288@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F120, a1);
}

uint64_t sub_1DC5DA2AC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for InterstitialAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for InterstitialAdImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterstitialAdImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5DAC78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for InterstitialAdImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5DADC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5DAF0C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for InterstitialAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (_QWORD *)((char *)a1 + v13);
    v18 = (_QWORD *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterstitialAdImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5DB4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for InterstitialAdImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5DB58C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5DB634()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InterstitialAdImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5DB718 + 4 * byte_1DC643EFA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5DB74C + 4 * byte_1DC643EF5[v4]))();
}

uint64_t sub_1DC5DB74C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5DB754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5DB75CLL);
  return result;
}

uint64_t sub_1DC5DB768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5DB770);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5DB774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5DB77C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterstitialAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1DC5DB79C()
{
  unint64_t result;

  result = qword_1F036F290;
  if (!qword_1F036F290)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6440D4, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F290);
  }
  return result;
}

unint64_t sub_1DC5DB7E4()
{
  unint64_t result;

  result = qword_1F036F298;
  if (!qword_1F036F298)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644044, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F298);
  }
  return result;
}

unint64_t sub_1DC5DB82C()
{
  unint64_t result;

  result = qword_1F036F2A0;
  if (!qword_1F036F2A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64406C, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F2A0);
  }
  return result;
}

uint64_t sub_1DC5DB870(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

StocksAnalytics::MediaUserAction_optional __swiftcall MediaUserAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::MediaUserAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaUserAction.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5DBB60 + 4 * byte_1DC64414C[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5DBB60()
{
  return 0x616C506F54706174;
}

uint64_t sub_1DC5DBB7C()
{
  return 2036427888;
}

uint64_t sub_1DC5DBB8C()
{
  return 0x6573756170;
}

uint64_t sub_1DC5DBBA0()
{
  return 0x656D75736572;
}

uint64_t sub_1DC5DBBB4()
{
  return 0x64656C696166;
}

uint64_t sub_1DC5DBBC8()
{
  return 0x6168436465657073;
}

uint64_t sub_1DC5DBBE8()
{
  return 0x6B63614270696B73;
}

uint64_t sub_1DC5DBC00()
{
  return 0x77726F4670696B73;
}

void sub_1DC5DBC20(char *a1)
{
  sub_1DC545038(*a1);
}

unint64_t sub_1DC5DBC30()
{
  unint64_t result;

  result = qword_1F036F2A8;
  if (!qword_1F036F2A8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaUserAction, &type metadata for MediaUserAction);
    atomic_store(result, (unint64_t *)&qword_1F036F2A8);
  }
  return result;
}

uint64_t sub_1DC5DBC74()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DC62B5B0();
  sub_1DC6029B8((uint64_t)v3, v1);
  return sub_1DC62B5C8();
}

void sub_1DC5DBCB8(uint64_t a1)
{
  char *v1;

  sub_1DC6029B8(a1, *v1);
}

uint64_t sub_1DC5DBCC0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DC62B5B0();
  sub_1DC6029B8((uint64_t)v3, v1);
  return sub_1DC62B5C8();
}

StocksAnalytics::MediaUserAction_optional sub_1DC5DBD00(Swift::String *a1)
{
  return MediaUserAction.init(rawValue:)(*a1);
}

uint64_t sub_1DC5DBD0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MediaUserAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC5DBD30()
{
  sub_1DC5DBEA4();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5DBD8C()
{
  sub_1DC5DBEA4();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for MediaUserAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1DC5DBE24 + 4 * byte_1DC64415A[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1DC5DBE58 + 4 * byte_1DC644155[v4]))();
}

uint64_t sub_1DC5DBE58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5DBE60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5DBE68);
  return result;
}

uint64_t sub_1DC5DBE74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5DBE7CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1DC5DBE80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5DBE88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaUserAction()
{
  return &type metadata for MediaUserAction;
}

unint64_t sub_1DC5DBEA4()
{
  unint64_t result;

  result = qword_1F036F2B0;
  if (!qword_1F036F2B0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaUserAction, &type metadata for MediaUserAction);
    atomic_store(result, (unint64_t *)&qword_1F036F2B0);
  }
  return result;
}

uint64_t sub_1DC5DBEE8()
{
  uint64_t result;
  uint64_t v1;
  unint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;

  result = sub_1DC62A0A4();
  if (result)
  {
    v1 = result;
    *(_QWORD *)&v19 = 0xD000000000000012;
    *((_QWORD *)&v19 + 1) = 0x80000001DC64E240;
    sub_1DC62B2BC();
    if (*(_QWORD *)(v1 + 16) && (v2 = sub_1DC5B34B4((uint64_t)v18), (v3 & 1) != 0))
    {
      sub_1DC5B4B44(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v19);
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    sub_1DC5B45C4((uint64_t)v18);
    if (*((_QWORD *)&v20 + 1))
    {
      v4 = swift_dynamicCast();
      if (v4)
        v5 = v16;
      else
        v5 = 0;
      if (v4)
        v6 = v17;
      else
        v6 = 0;
    }
    else
    {
      sub_1DC4B2B3C((uint64_t)&v19);
      v5 = 0;
      v6 = 0;
    }
    *(_QWORD *)&v19 = 0x6E676961706D6163;
    *((_QWORD *)&v19 + 1) = 0xEA00000000004449;
    sub_1DC62B2BC();
    if (*(_QWORD *)(v1 + 16) && (v7 = sub_1DC5B34B4((uint64_t)v18), (v8 & 1) != 0))
    {
      sub_1DC5B4B44(*(_QWORD *)(v1 + 56) + 32 * v7, (uint64_t)&v19);
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    sub_1DC5B45C4((uint64_t)v18);
    if (*((_QWORD *)&v20 + 1))
    {
      v9 = swift_dynamicCast();
      if (v9)
        v10 = v16;
      else
        v10 = 0;
      if (v9)
        v11 = v17;
      else
        v11 = 0;
    }
    else
    {
      sub_1DC4B2B3C((uint64_t)&v19);
      v10 = 0;
      v11 = 0;
    }
    sub_1DC62B2BC();
    if (*(_QWORD *)(v1 + 16) && (v12 = sub_1DC5B34B4((uint64_t)v18), (v13 & 1) != 0))
    {
      sub_1DC5B4B44(*(_QWORD *)(v1 + 56) + 32 * v12, (uint64_t)&v19);
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    swift_bridgeObjectRelease();
    v14 = swift_allocObject();
    sub_1DC5B45C4((uint64_t)v18);
    if (*((_QWORD *)&v20 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
        goto LABEL_35;
    }
    else
    {
      sub_1DC4B2B3C((uint64_t)&v19);
    }
    *(_BYTE *)(v14 + 16) = 2;
LABEL_35:
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v5;
    v15[3] = v6;
    v15[4] = v10;
    v15[5] = v11;
    v15[6] = v14;
    swift_retain();
    sub_1DC62A854();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC5DC1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v22[4];
  char v23;

  sub_1DC5DC478();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = *(_BYTE *)(a6 + 16);
  v22[0] = a2;
  v22[1] = a3;
  v22[2] = a4;
  v22[3] = a5;
  v23 = v16;
  sub_1DC5DC4D0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC62A71C();
  sub_1DC4BDCC8();
  v17 = sub_1DC62A818();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x1E0CF8168], v17);
  sub_1DC62A980();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1DC5DC424()
{
  return swift_deallocObject();
}

uint64_t sub_1DC5DC434()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC5DC468(uint64_t a1)
{
  uint64_t *v1;

  return sub_1DC5DC1D4(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_1DC5DC478()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6A0)
  {
    sub_1DC5DC4D0();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6A0);
  }
}

unint64_t sub_1DC5DC4D0()
{
  unint64_t result;

  result = qword_1EDB101D0;
  if (!qword_1EDB101D0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AmsMarketingItemData, &type metadata for AmsMarketingItemData);
    atomic_store(result, (unint64_t *)&qword_1EDB101D0);
  }
  return result;
}

StocksAnalytics::DeviceOrientation_optional __swiftcall DeviceOrientation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::DeviceOrientation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1DC5DC56C(char *a1)
{
  sub_1DC544644(*a1);
}

unint64_t sub_1DC5DC57C()
{
  unint64_t result;

  result = qword_1F036F2B8;
  if (!qword_1F036F2B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DeviceOrientation, &type metadata for DeviceOrientation);
    atomic_store(result, (unint64_t *)&qword_1F036F2B8);
  }
  return result;
}

void sub_1DC5DC5C0()
{
  char *v0;

  sub_1DC6033A0(0, *v0);
}

void sub_1DC5DC5CC(uint64_t a1)
{
  char *v1;

  sub_1DC6026C4(a1, *v1);
}

void sub_1DC5DC5D4(uint64_t a1)
{
  char *v1;

  sub_1DC6033A0(a1, *v1);
}

StocksAnalytics::DeviceOrientation_optional sub_1DC5DC5DC(Swift::String *a1)
{
  return DeviceOrientation.init(rawValue:)(*a1);
}

uint64_t sub_1DC5DC5E8()
{
  sub_1DC4B619C();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for DeviceOrientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DC5DC690 + 4 * byte_1DC64429C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DC5DC6C4 + 4 * byte_1DC644297[v4]))();
}

uint64_t sub_1DC5DC6C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5DC6CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5DC6D4);
  return result;
}

uint64_t sub_1DC5DC6E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5DC6E8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DC5DC6EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5DC6F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceOrientation()
{
  return &type metadata for DeviceOrientation;
}

uint64_t HeartbeatData.userID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.userID.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatData.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  v4 = sub_1DC62A1A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for HeartbeatData()
{
  uint64_t result;

  result = qword_1EDB11F68;
  if (!qword_1EDB11F68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t HeartbeatData.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  v4 = sub_1DC62A1A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*HeartbeatData.timestamp.modify())()
{
  type metadata accessor for HeartbeatData();
  return nullsub_1;
}

uint64_t HeartbeatData.eventID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.eventID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.eventID.modify())()
{
  type metadata accessor for HeartbeatData();
  return nullsub_1;
}

uint64_t HeartbeatData.osVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.osVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.osVersion.modify())()
{
  type metadata accessor for HeartbeatData();
  return nullsub_1;
}

uint64_t HeartbeatData.osBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.osBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.osBundleVersion.modify())()
{
  type metadata accessor for HeartbeatData();
  return nullsub_1;
}

uint64_t HeartbeatData.init(userID:timestamp:eventID:osVersion:osBundleVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  *a9 = a1;
  a9[1] = a2;
  v17 = (int *)type metadata accessor for HeartbeatData();
  v18 = (char *)a9 + v17[5];
  v19 = sub_1DC62A1A0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a3, v19);
  v21 = (_QWORD *)((char *)a9 + v17[6]);
  *v21 = a4;
  v21[1] = a5;
  v22 = (_QWORD *)((char *)a9 + v17[7]);
  *v22 = a6;
  v22[1] = a7;
  v23 = (_QWORD *)((char *)a9 + v17[8]);
  *v23 = a8;
  v23[1] = a10;
  return result;
}

uint64_t sub_1DC5DCB20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5DCB4C + 4 * byte_1DC6443D0[*v0]))(0x444972657375, 0xE600000000000000);
}

uint64_t sub_1DC5DCB4C()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1DC5DCB6C()
{
  return 0x4449746E657665;
}

uint64_t sub_1DC5DCB84()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_1DC5DCBA0()
{
  return 0x656C646E7542736FLL;
}

uint64_t sub_1DC5DCBC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5DDB10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5DCBE8()
{
  sub_1DC5DCE28();
  return sub_1DC62B604();
}

uint64_t sub_1DC5DCC10()
{
  sub_1DC5DCE28();
  return sub_1DC62B610();
}

uint64_t HeartbeatData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1DC5DD234(0, &qword_1EDB11FE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5DCE28();
  sub_1DC62B5F8();
  v9[15] = 0;
  sub_1DC62B4B4();
  if (!v1)
  {
    type metadata accessor for HeartbeatData();
    v9[14] = 1;
    sub_1DC62A1A0();
    sub_1DC4B6748(&qword_1EDB0E560, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1DC62B4E4();
    v9[13] = 2;
    sub_1DC62B4B4();
    v9[12] = 3;
    sub_1DC62B4B4();
    v9[11] = 4;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5DCE28()
{
  unint64_t result;

  result = qword_1EDB11F48;
  if (!qword_1EDB11F48)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644584, &type metadata for HeartbeatData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11F48);
  }
  return result;
}

uint64_t HeartbeatData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v31 = a2;
  v3 = sub_1DC62A1A0();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5DD234(0, &qword_1F036F2C0, MEMORY[0x1E0DED048]);
  v34 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - v8;
  v10 = (int *)type metadata accessor for HeartbeatData();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5DCE28();
  v35 = v9;
  v13 = (uint64_t)v36;
  sub_1DC62B5E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = v7;
  v36 = a1;
  v14 = v32;
  v15 = v33;
  v41 = 0;
  v16 = v34;
  *v12 = sub_1DC62B424();
  v12[1] = v17;
  v40 = 1;
  sub_1DC4B6748(&qword_1F036A630, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v12 + v10[5], v5, v15);
  v39 = 2;
  v18 = sub_1DC62B424();
  v19 = (uint64_t *)((char *)v12 + v10[6]);
  *v19 = v18;
  v19[1] = v20;
  v38 = 3;
  v21 = sub_1DC62B424();
  v22 = (uint64_t *)((char *)v12 + v10[7]);
  *v22 = v21;
  v22[1] = v23;
  v37 = 4;
  v24 = sub_1DC62B424();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v16);
  v27 = (uint64_t *)((char *)v12 + v10[8]);
  *v27 = v24;
  v27[1] = v26;
  sub_1DC55B098((uint64_t)v12, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_1DC5DD290((uint64_t)v12);
}

void sub_1DC5DD234(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5DCE28();
    v7 = a3(a1, &type metadata for HeartbeatData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5DD290(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5DD2CC()
{
  return sub_1DC4B6748(&qword_1F036C968, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatData, (uint64_t)&protocol conformance descriptor for HeartbeatData);
}

uint64_t sub_1DC5DD2F8()
{
  return sub_1DC4B6748(&qword_1EDB11F60, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatData, (uint64_t)&protocol conformance descriptor for HeartbeatData);
}

uint64_t sub_1DC5DD324@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HeartbeatData.init(from:)(a1, a2);
}

uint64_t sub_1DC5DD338(_QWORD *a1)
{
  return HeartbeatData.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartbeatData(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62A1A0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for HeartbeatData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for HeartbeatData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC62A1A0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for HeartbeatData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC62A1A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for HeartbeatData(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC62A1A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for HeartbeatData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC62A1A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5DD7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC62A1A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for HeartbeatData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5DD880(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC62A1A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC5DD8F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62A1A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HeartbeatData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5DD9B8 + 4 * byte_1DC6443DA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5DD9EC + 4 * byte_1DC6443D5[v4]))();
}

uint64_t sub_1DC5DD9EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5DD9F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5DD9FCLL);
  return result;
}

uint64_t sub_1DC5DDA08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5DDA10);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5DDA14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5DDA1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeartbeatData.CodingKeys()
{
  return &type metadata for HeartbeatData.CodingKeys;
}

unint64_t sub_1DC5DDA3C()
{
  unint64_t result;

  result = qword_1F036F2C8;
  if (!qword_1F036F2C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64455C, &type metadata for HeartbeatData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F2C8);
  }
  return result;
}

unint64_t sub_1DC5DDA84()
{
  unint64_t result;

  result = qword_1EDB11F58;
  if (!qword_1EDB11F58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6444CC, &type metadata for HeartbeatData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11F58);
  }
  return result;
}

unint64_t sub_1DC5DDACC()
{
  unint64_t result;

  result = qword_1EDB11F50;
  if (!qword_1EDB11F50)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6444F4, &type metadata for HeartbeatData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11F50);
  }
  return result;
}

uint64_t sub_1DC5DDB10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449746E657665 && a2 == 0xE700000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C646E7542736FLL && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DC5DDD58(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036F2D0, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioControlMenuEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F2D0, a1);
}

uint64_t sub_1DC5DDD98(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036F2E8, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioControlMenuEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F2E8, a1);
}

uint64_t AudioControlMenuEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AudioControlMenuEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioControlMenuEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AudioControlMenuEngagementEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F378);
}

uint64_t AudioControlMenuEngagementEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.newsArticleData.modify())()
{
  type metadata accessor for AudioControlMenuEngagementEvent(0);
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.channelData.modify())()
{
  type metadata accessor for AudioControlMenuEngagementEvent(0);
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.groupData.modify())()
{
  type metadata accessor for AudioControlMenuEngagementEvent(0);
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.feedData.modify())()
{
  type metadata accessor for AudioControlMenuEngagementEvent(0);
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.trackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.trackData.modify())()
{
  type metadata accessor for AudioControlMenuEngagementEvent(0);
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.audioControlMenuData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.audioControlMenuData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.audioControlMenuData.modify())()
{
  type metadata accessor for AudioControlMenuEngagementEvent(0);
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.viewData.modify())()
{
  type metadata accessor for AudioControlMenuEngagementEvent(0);
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.articleScienceData.modify())()
{
  type metadata accessor for AudioControlMenuEngagementEvent(0);
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioControlMenuEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
}

uint64_t AudioControlMenuEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioControlMenuEngagementEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AudioControlMenuEngagementEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F428);
}

uint64_t AudioControlMenuEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioControlMenuEngagementEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t AudioControlMenuEngagementEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AudioControlMenuEngagementEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioControlMenuEngagementEvent.Model.audioControlMenuData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t AudioControlMenuEngagementEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AudioControlMenuEngagementEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 48);
  v4 = *(_OWORD *)(v3 + 144);
  v5 = *(_OWORD *)(v3 + 176);
  v31 = *(_OWORD *)(v3 + 160);
  v32 = v5;
  v6 = *(_OWORD *)(v3 + 80);
  v7 = *(_OWORD *)(v3 + 112);
  v27 = *(_OWORD *)(v3 + 96);
  v8 = v27;
  v28 = v7;
  v9 = *(_OWORD *)(v3 + 112);
  v10 = *(_OWORD *)(v3 + 144);
  v29 = *(_OWORD *)(v3 + 128);
  v11 = v29;
  v30 = v10;
  v12 = *(_OWORD *)(v3 + 48);
  v13 = *(_OWORD *)(v3 + 80);
  v25 = *(_OWORD *)(v3 + 64);
  v14 = v25;
  v26 = v13;
  v15 = *(_OWORD *)(v3 + 16);
  v16 = *(_OWORD *)(v3 + 48);
  v23 = *(_OWORD *)(v3 + 32);
  v17 = v23;
  v24 = v16;
  v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  v19 = v22[0];
  v22[1] = v18;
  v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v6;
  v33 = *(_QWORD *)(v3 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v15;
  return sub_1DC4F537C((uint64_t)v22);
}

__n128 AudioControlMenuEngagementEvent.Model.init(eventData:newsArticleData:channelData:groupData:feedData:trackData:audioControlMenuData:viewData:articleScienceData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, int *a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 result;
  char v30;
  char v31;
  __int128 v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  int v45;
  char v46;
  __int16 v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __n128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;

  v32 = *a2;
  v12 = *((_QWORD *)a2 + 2);
  v13 = *((_QWORD *)a2 + 3);
  v14 = *((_BYTE *)a2 + 32);
  v15 = *((_QWORD *)a2 + 5);
  v16 = *((_BYTE *)a2 + 48);
  v17 = *((_QWORD *)a2 + 7);
  v18 = *((_BYTE *)a2 + 64);
  v19 = *((_BYTE *)a2 + 65);
  v30 = *((_BYTE *)a2 + 67);
  v31 = *((_BYTE *)a2 + 66);
  v37 = *a3;
  v35 = *((_QWORD *)a3 + 3);
  v36 = *((_QWORD *)a3 + 2);
  v33 = *((_BYTE *)a3 + 33);
  v34 = *((_BYTE *)a3 + 32);
  v40 = a4[1];
  v41 = *a4;
  v38 = *((_QWORD *)a4 + 5);
  v39 = *((_QWORD *)a4 + 4);
  v43 = *a5;
  v42 = *((_QWORD *)a5 + 2);
  v44 = *((_BYTE *)a6 + 4);
  v45 = *a6;
  v48 = a8[1];
  v49 = *a8;
  v46 = *a7;
  v47 = *((_WORD *)a8 + 8);
  v60 = a10[10];
  v61 = a10[11];
  v62 = *((_QWORD *)a10 + 24);
  v56 = a10[6];
  v57 = a10[7];
  v58 = a10[8];
  v59 = a10[9];
  v52 = a10[2];
  v53 = a10[3];
  v54 = a10[4];
  v55 = a10[5];
  v50 = *a10;
  v51 = (__n128)a10[1];
  v20 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  v22 = a9 + v21[5];
  *(_OWORD *)v22 = v32;
  *(_QWORD *)(v22 + 16) = v12;
  *(_QWORD *)(v22 + 24) = v13;
  *(_BYTE *)(v22 + 32) = v14;
  *(_QWORD *)(v22 + 40) = v15;
  *(_BYTE *)(v22 + 48) = v16;
  *(_QWORD *)(v22 + 56) = v17;
  *(_BYTE *)(v22 + 64) = v18;
  *(_BYTE *)(v22 + 65) = v19;
  *(_BYTE *)(v22 + 66) = v31;
  *(_BYTE *)(v22 + 67) = v30;
  v23 = a9 + v21[6];
  *(_OWORD *)v23 = v37;
  *(_QWORD *)(v23 + 16) = v36;
  *(_QWORD *)(v23 + 24) = v35;
  *(_BYTE *)(v23 + 32) = v34;
  *(_BYTE *)(v23 + 33) = v33;
  v24 = a9 + v21[7];
  *(_OWORD *)v24 = v41;
  *(_OWORD *)(v24 + 16) = v40;
  *(_QWORD *)(v24 + 32) = v39;
  *(_QWORD *)(v24 + 40) = v38;
  v25 = a9 + v21[8];
  *(_OWORD *)v25 = v43;
  *(_QWORD *)(v25 + 16) = v42;
  v26 = a9 + v21[9];
  *(_DWORD *)v26 = v45;
  *(_BYTE *)(v26 + 4) = v44;
  *(_BYTE *)(a9 + v21[10]) = v46;
  v27 = a9 + v21[11];
  *(_QWORD *)v27 = v49;
  *(_QWORD *)(v27 + 8) = v48;
  *(_WORD *)(v27 + 16) = v47;
  v28 = a9 + v21[12];
  *(_OWORD *)(v28 + 160) = v60;
  *(_OWORD *)(v28 + 176) = v61;
  *(_QWORD *)(v28 + 192) = v62;
  *(_OWORD *)(v28 + 96) = v56;
  *(_OWORD *)(v28 + 112) = v57;
  *(_OWORD *)(v28 + 128) = v58;
  *(_OWORD *)(v28 + 144) = v59;
  *(_OWORD *)(v28 + 32) = v52;
  *(_OWORD *)(v28 + 48) = v53;
  *(_OWORD *)(v28 + 64) = v54;
  *(_OWORD *)(v28 + 80) = v55;
  result = v51;
  *(_OWORD *)v28 = v50;
  *(__n128 *)(v28 + 16) = v51;
  return result;
}

uint64_t sub_1DC5DEDE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5DEE1C + 4 * byte_1DC6445E0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5DEE1C()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC5DEE40()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC5DEE60()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC5DEE74()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC5DEED0()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC5DEEEC()
{
  unsigned __int8 *v0;

  return sub_1DC5DEDE4(*v0);
}

uint64_t sub_1DC5DEEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5E2744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5DEF18()
{
  sub_1DC5DF404();
  return sub_1DC62B604();
}

uint64_t sub_1DC5DEF40()
{
  sub_1DC5DF404();
  return sub_1DC62B610();
}

uint64_t AudioControlMenuEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 *v27;
  __int128 v28;
  __int128 *v29;
  uint64_t v30;
  int *v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v44[16];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;

  v3 = v1;
  sub_1DC5DFC1C(0, &qword_1F036F308, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v44[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5DF404();
  sub_1DC62B5F8();
  LOBYTE(v45) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v45 = v12;
    *(_QWORD *)&v46 = v13;
    *((_QWORD *)&v46 + 1) = v14;
    LOBYTE(v47) = v15;
    *((_QWORD *)&v47 + 1) = v16;
    LOBYTE(v48) = v17;
    *((_QWORD *)&v48 + 1) = v18;
    LOBYTE(v49) = v19;
    BYTE1(v49) = v20;
    BYTE2(v49) = v21;
    BYTE3(v49) = (_BYTE)v11;
    LOBYTE(v59) = 1;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[6]);
    v23 = *v22;
    v24 = *((_QWORD *)v22 + 2);
    v25 = *((_QWORD *)v22 + 3);
    v26 = *((_BYTE *)v22 + 32);
    LOBYTE(v22) = *((_BYTE *)v22 + 33);
    v45 = v23;
    *(_QWORD *)&v46 = v24;
    *((_QWORD *)&v46 + 1) = v25;
    LOBYTE(v47) = v26;
    BYTE1(v47) = (_BYTE)v22;
    LOBYTE(v59) = 2;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v27 = (__int128 *)(v3 + v10[7]);
    v28 = v27[1];
    v45 = *v27;
    v46 = v28;
    v47 = v27[2];
    LOBYTE(v59) = 3;
    sub_1DC4C9004();
    sub_1DC62B490();
    v29 = (__int128 *)(v3 + v10[8]);
    v30 = *((_QWORD *)v29 + 2);
    v45 = *v29;
    *(_QWORD *)&v46 = v30;
    LOBYTE(v59) = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v31 = (int *)(v3 + v10[9]);
    v32 = *v31;
    LOBYTE(v31) = *((_BYTE *)v31 + 4);
    LODWORD(v45) = v32;
    BYTE4(v45) = (_BYTE)v31;
    LOBYTE(v59) = 5;
    sub_1DC4C927C();
    sub_1DC62B4E4();
    LOBYTE(v45) = *(_BYTE *)(v3 + v10[10]);
    LOBYTE(v59) = 6;
    sub_1DC5C4098();
    sub_1DC62B4E4();
    v33 = (uint64_t *)(v3 + v10[11]);
    v34 = *v33;
    v35 = v33[1];
    LOWORD(v33) = *((_WORD *)v33 + 8);
    v59 = v34;
    v60 = v35;
    v61 = (__int16)v33;
    v58 = 7;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v36 = (__int128 *)(v3 + v10[12]);
    v37 = v36[11];
    v55 = v36[10];
    v56 = v37;
    v57 = *((_QWORD *)v36 + 24);
    v38 = v36[7];
    v51 = v36[6];
    v52 = v38;
    v39 = v36[9];
    v53 = v36[8];
    v54 = v39;
    v40 = v36[3];
    v47 = v36[2];
    v48 = v40;
    v41 = v36[5];
    v49 = v36[4];
    v50 = v41;
    v42 = *v36;
    v46 = v36[1];
    v45 = v42;
    v44[15] = 8;
    sub_1DC4F4918();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5DF404()
{
  unint64_t result;

  result = qword_1F036F310;
  if (!qword_1F036F310)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6448BC, &type metadata for AudioControlMenuEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F310);
  }
  return result;
}

uint64_t AudioControlMenuEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  int *v26;
  char *v27;
  __int128 v28;
  char v29;
  char v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char v36;
  char *v37;
  uint64_t v38;
  __int16 v39;
  char *v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  int *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char v68;

  v49 = a2;
  v4 = sub_1DC62ABA8();
  v51 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5DFC1C(0, &qword_1F036F318, MEMORY[0x1E0DED048]);
  v50 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v49 - v9;
  v54 = (int *)type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v54);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC5DF404();
  v52 = v10;
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  v14 = v8;
  LOBYTE(v55) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v50;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v12, v6, v4);
  v68 = 1;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v16 = (uint64_t)v53;
  v17 = v56;
  v18 = v57;
  v19 = *((_QWORD *)&v57 + 1);
  v20 = v58;
  v21 = *((_QWORD *)&v58 + 1);
  v22 = v59;
  v23 = BYTE1(v59);
  v24 = BYTE2(v59);
  v25 = BYTE3(v59);
  v26 = v54;
  v27 = &v12[v54[5]];
  *(_OWORD *)v27 = v55;
  *((_OWORD *)v27 + 1) = v17;
  v27[32] = v18;
  *((_QWORD *)v27 + 5) = v19;
  v27[48] = v20;
  *((_QWORD *)v27 + 7) = v21;
  v27[64] = v22;
  v27[65] = v23;
  v27[66] = v24;
  v27[67] = v25;
  v68 = 2;
  sub_1DC4C8E40();
  sub_1DC62B454();
  v28 = v56;
  v29 = v57;
  v30 = BYTE1(v57);
  v31 = &v12[v26[6]];
  *(_OWORD *)v31 = v55;
  *((_OWORD *)v31 + 1) = v28;
  v31[32] = v29;
  v31[33] = v30;
  v68 = 3;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v32 = &v12[v26[7]];
  v33 = v56;
  *(_OWORD *)v32 = v55;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v57;
  v68 = 4;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v34 = v56;
  v35 = &v12[v26[8]];
  *(_OWORD *)v35 = v55;
  *((_QWORD *)v35 + 2) = v34;
  v68 = 5;
  sub_1DC4C9238();
  sub_1DC62B454();
  v36 = BYTE4(v55);
  v37 = &v12[v26[9]];
  *(_DWORD *)v37 = v55;
  v37[4] = v36;
  v68 = 6;
  sub_1DC5C4050();
  sub_1DC62B454();
  v12[v26[10]] = v55;
  v68 = 7;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v38 = *((_QWORD *)&v55 + 1);
  v39 = v56;
  v40 = &v12[v54[11]];
  *(_QWORD *)v40 = v55;
  *((_QWORD *)v40 + 1) = v38;
  *((_WORD *)v40 + 8) = v39;
  v68 = 8;
  sub_1DC4F48D4();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v52, v15);
  v41 = &v12[v54[12]];
  v42 = v66;
  *((_OWORD *)v41 + 10) = v65;
  *((_OWORD *)v41 + 11) = v42;
  *((_QWORD *)v41 + 24) = v67;
  v43 = v62;
  *((_OWORD *)v41 + 6) = v61;
  *((_OWORD *)v41 + 7) = v43;
  v44 = v64;
  *((_OWORD *)v41 + 8) = v63;
  *((_OWORD *)v41 + 9) = v44;
  v45 = v58;
  *((_OWORD *)v41 + 2) = v57;
  *((_OWORD *)v41 + 3) = v45;
  v46 = v60;
  *((_OWORD *)v41 + 4) = v59;
  *((_OWORD *)v41 + 5) = v46;
  v47 = v56;
  *(_OWORD *)v41 = v55;
  *((_OWORD *)v41 + 1) = v47;
  sub_1DC5DFC78((uint64_t)v12, v49);
  __swift_destroy_boxed_opaque_existential_1(v16);
  return sub_1DC5DFCBC((uint64_t)v12);
}

void sub_1DC5DFC1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5DF404();
    v7 = a3(a1, &type metadata for AudioControlMenuEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5DFC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5DFCBC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5DFCF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioControlMenuEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5DFD0C(_QWORD *a1)
{
  return AudioControlMenuEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5DFD20@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F2D0, a1);
}

uint64_t sub_1DC5DFD44@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F2E8, a1);
}

uint64_t sub_1DC5DFD68@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioControlMenuEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for AudioControlMenuEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

uint64_t initializeWithCopy for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioControlMenuEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E103C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  v8 = v20;
                  v12 = *(_QWORD *)(v20 - 8);
                  v13 = a3[12];
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioControlMenuEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E12B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  v10 = v22;
                  v14 = *(_QWORD *)(v22 - 8);
                  v15 = a4[12];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5E1530()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1F036F300, (void (*)(void))sub_1DC5C4050, (void (*)(void))sub_1DC5C4098);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioControlMenuEngagementEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v10[48] = v11[48];
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    v14 = (char *)a1 + v9;
    v15 = (char *)a2 + v9;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *v19 = *v20;
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      *((_QWORD *)v19 + 2) = v21;
      *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
      v22 = *((_QWORD *)v20 + 5);
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 5) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v24;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    }
    v25 = a3[8];
    v26 = a3[9];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    *v27 = *v28;
    v29 = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
    *((_QWORD *)v27 + 2) = v29;
    v30 = (char *)a1 + v26;
    v31 = (char *)a2 + v26;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v33[16] = v34[16];
    v33[17] = v34[17];
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = *((_OWORD *)v38 + 1);
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v39;
    v40 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v40;
    *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
    *((_QWORD *)v37 + 10) = *((_QWORD *)v38 + 10);
    *(_OWORD *)(v37 + 88) = *(_OWORD *)(v38 + 88);
    *(_OWORD *)(v37 + 104) = *(_OWORD *)(v38 + 104);
    *((_DWORD *)v37 + 30) = *((_DWORD *)v38 + 30);
    *((_OWORD *)v37 + 8) = *((_OWORD *)v38 + 8);
    v37[144] = v38[144];
    *(_QWORD *)(v37 + 148) = *(_QWORD *)(v38 + 148);
    v41 = *((_OWORD *)v38 + 11);
    *((_OWORD *)v37 + 10) = *((_OWORD *)v38 + 10);
    *((_OWORD *)v37 + 11) = v41;
    *((_QWORD *)v37 + 24) = *((_QWORD *)v38 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v13 = a1 + v8;
  v14 = a2 + v8;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *(_BYTE *)v18 = *(_BYTE *)v19;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    *(_QWORD *)(v18 + 16) = v20;
    *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
    v21 = *(_QWORD *)(v19 + 40);
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    *(_QWORD *)(v18 + 40) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  v23 = a3[8];
  v24 = a3[9];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  v28 = a1 + v24;
  v29 = a2 + v24;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(v32 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_QWORD *)(v31 + 8) = v33;
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  *(_BYTE *)(v31 + 17) = *(_BYTE *)(v32 + 17);
  v34 = a3[12];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  v38 = *(_OWORD *)(v36 + 48);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(_OWORD *)(v35 + 48) = v38;
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
  *(_QWORD *)(v35 + 80) = *(_QWORD *)(v36 + 80);
  *(_OWORD *)(v35 + 88) = *(_OWORD *)(v36 + 88);
  *(_OWORD *)(v35 + 104) = *(_OWORD *)(v36 + 104);
  *(_DWORD *)(v35 + 120) = *(_DWORD *)(v36 + 120);
  *(_OWORD *)(v35 + 128) = *(_OWORD *)(v36 + 128);
  *(_BYTE *)(v35 + 144) = *(_BYTE *)(v36 + 144);
  *(_QWORD *)(v35 + 148) = *(_QWORD *)(v36 + 148);
  v39 = *(_OWORD *)(v36 + 176);
  *(_OWORD *)(v35 + 160) = *(_OWORD *)(v36 + 160);
  *(_OWORD *)(v35 + 176) = v39;
  *(_QWORD *)(v35 + 192) = *(_QWORD *)(v36 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_BYTE *)(v12 + 33) = *(_BYTE *)(v13 + 33);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (__int128 *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14 + 16);
  v18 = *(_QWORD *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
      *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
      *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
      *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
      *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v15);
      v20 = v16[1];
      v19 = v16[2];
      *(_OWORD *)v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_OWORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
    *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
    *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
    *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
    *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
    *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v16;
    v22 = v16[2];
    *(_OWORD *)(v15 + 16) = v16[1];
    *(_OWORD *)(v15 + 32) = v22;
    *(_OWORD *)v15 = v21;
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)(a2 + v29);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  *(_BYTE *)(v30 + 17) = *(_BYTE *)(v31 + 17);
  v32 = a3[12];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(a2 + v32 + 16);
  *(_QWORD *)(v33 + 24) = *(_QWORD *)(a2 + v32 + 24);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(a2 + v32 + 32);
  *(_QWORD *)(v33 + 40) = *(_QWORD *)(a2 + v32 + 40);
  *(_QWORD *)(v33 + 48) = *(_QWORD *)(a2 + v32 + 48);
  *(_QWORD *)(v33 + 56) = *(_QWORD *)(a2 + v32 + 56);
  *(_QWORD *)(v33 + 64) = *(_QWORD *)(a2 + v32 + 64);
  *(_QWORD *)(v33 + 72) = *(_QWORD *)(a2 + v32 + 72);
  *(_QWORD *)(v33 + 80) = *(_QWORD *)(a2 + v32 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
  *(_QWORD *)(v33 + 96) = *(_QWORD *)(v34 + 96);
  *(_QWORD *)(v33 + 104) = *(_QWORD *)(v34 + 104);
  *(_QWORD *)(v33 + 112) = *(_QWORD *)(v34 + 112);
  *(_DWORD *)(v33 + 120) = *(_DWORD *)(v34 + 120);
  *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
  *(_QWORD *)(v33 + 136) = *(_QWORD *)(v34 + 136);
  *(_BYTE *)(v33 + 144) = *(_BYTE *)(v34 + 144);
  *(_DWORD *)(v33 + 148) = *(_DWORD *)(v34 + 148);
  *(_DWORD *)(v33 + 152) = *(_DWORD *)(v34 + 152);
  *(_QWORD *)(v33 + 160) = *(_QWORD *)(v34 + 160);
  *(_QWORD *)(v33 + 168) = *(_QWORD *)(v34 + 168);
  *(_QWORD *)(v33 + 176) = *(_QWORD *)(v34 + 176);
  *(_QWORD *)(v33 + 184) = *(_QWORD *)(v34 + 184);
  *(_QWORD *)(v33 + 192) = *(_QWORD *)(v34 + 192);
  return a1;
}

uint64_t initializeWithTake for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = a1 + v8;
  v14 = a2 + v8;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_OWORD *)(a1 + v16);
  v19 = (__int128 *)(a2 + v16);
  v20 = v19[2];
  v21 = *v19;
  v18[1] = v19[1];
  v18[2] = v20;
  *v18 = v21;
  v22 = a1 + v17;
  v23 = (__int128 *)(a2 + v17);
  v24 = *v23;
  *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
  *(_OWORD *)v22 = v24;
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v29 = a3[11];
  v30 = a3[12];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_WORD *)(v31 + 16) = *(_WORD *)(v32 + 16);
  v33 = a1 + v30;
  v34 = a2 + v30;
  *(_QWORD *)(v33 + 192) = *(_QWORD *)(v34 + 192);
  v35 = *(_OWORD *)(v34 + 176);
  *(_OWORD *)(v33 + 160) = *(_OWORD *)(v34 + 160);
  *(_OWORD *)(v33 + 176) = v35;
  v36 = *(_OWORD *)(v34 + 144);
  *(_OWORD *)(v33 + 128) = *(_OWORD *)(v34 + 128);
  *(_OWORD *)(v33 + 144) = v36;
  v37 = *(_OWORD *)(v34 + 112);
  *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
  *(_OWORD *)(v33 + 112) = v37;
  v38 = *(_OWORD *)(v34 + 80);
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
  *(_OWORD *)(v33 + 80) = v38;
  v39 = *(_OWORD *)(v34 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 48) = v39;
  v40 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v40;
  return a1;
}

uint64_t assignWithTake for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_BYTE *)(v13 + 33) = *(_BYTE *)(v14 + 33);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (!*(_QWORD *)(a1 + v17 + 16))
    goto LABEL_5;
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    sub_1DC4CDAF4(v18);
LABEL_5:
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v18 = *(_BYTE *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  v21 = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[9];
  v29 = a3[10];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = v35;
  swift_bridgeObjectRelease();
  *(_WORD *)(v33 + 16) = *(_WORD *)(v34 + 16);
  v36 = a3[12];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  v40 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v40;
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(_QWORD *)(v37 + 80) = *(_QWORD *)(v38 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v37 + 88) = *(_OWORD *)(v38 + 88);
  *(_OWORD *)(v37 + 104) = *(_OWORD *)(v38 + 104);
  *(_DWORD *)(v37 + 120) = *(_DWORD *)(v38 + 120);
  *(_OWORD *)(v37 + 128) = *(_OWORD *)(v38 + 128);
  *(_BYTE *)(v37 + 144) = *(_BYTE *)(v38 + 144);
  *(_QWORD *)(v37 + 148) = *(_QWORD *)(v38 + 148);
  v41 = *(_OWORD *)(v38 + 176);
  *(_OWORD *)(v37 + 160) = *(_OWORD *)(v38 + 160);
  *(_OWORD *)(v37 + 176) = v41;
  *(_QWORD *)(v37 + 192) = *(_QWORD *)(v38 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioControlMenuEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E23E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioControlMenuEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E246C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5E24E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioControlMenuEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1DC5E25EC + 4 * byte_1DC6445EE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1DC5E2620 + 4 * byte_1DC6445E9[v4]))();
}

uint64_t sub_1DC5E2620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E2628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5E2630);
  return result;
}

uint64_t sub_1DC5E263C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5E2644);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1DC5E2648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E2650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioControlMenuEngagementEvent.Model.CodingKeys()
{
  return &type metadata for AudioControlMenuEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DC5E2670()
{
  unint64_t result;

  result = qword_1F036F480;
  if (!qword_1F036F480)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644894, &type metadata for AudioControlMenuEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F480);
  }
  return result;
}

unint64_t sub_1DC5E26B8()
{
  unint64_t result;

  result = qword_1F036F488;
  if (!qword_1F036F488)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644804, &type metadata for AudioControlMenuEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F488);
  }
  return result;
}

unint64_t sub_1DC5E2700()
{
  unint64_t result;

  result = qword_1F036F490;
  if (!qword_1F036F490)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64482C, &type metadata for AudioControlMenuEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F490);
  }
  return result;
}

uint64_t sub_1DC5E2744(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64E310 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C490)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

double static ArticleScienceData.empty.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 80) = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 148) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_QWORD *)(a1 + 192) = 0;
  return result;
}

uint64_t sub_1DC5E2B78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB11B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = sub_1DC62A818();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x1E0CF8168], v0);
  sub_1DC4BED40();
  sub_1DC62A980();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC5E2C64()
{
  uint64_t v0;
  uint64_t v1;

  sub_1DC4BE0D0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DC5E2CC4()
{
  sub_1DC4BE0D0();
  return sub_1DC5E2B78();
}

void SymbolPerfData.perfType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SymbolPerfData.perfType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SymbolPerfData.perfType.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC5E2D28()
{
  return 0x6570795466726570;
}

uint64_t sub_1DC5E2D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6570795466726570 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5E2DD4()
{
  sub_1DC5E2F28();
  return sub_1DC62B604();
}

uint64_t sub_1DC5E2DFC()
{
  sub_1DC5E2F28();
  return sub_1DC62B610();
}

uint64_t SymbolPerfData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5E30E8(0, &qword_1EDB11A18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E2F28();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5E2F6C();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5E2F28()
{
  unint64_t result;

  result = qword_1EDB0F1A8;
  if (!qword_1EDB0F1A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644A88, &type metadata for SymbolPerfData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F1A8);
  }
  return result;
}

unint64_t sub_1DC5E2F6C()
{
  unint64_t result;

  result = qword_1EDB10A40;
  if (!qword_1EDB10A40)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PerformanceDisplayType, &type metadata for PerformanceDisplayType);
    atomic_store(result, (unint64_t *)&qword_1EDB10A40);
  }
  return result;
}

uint64_t SymbolPerfData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5E30E8(0, &qword_1F036F498, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E2F28();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5E3144();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5E30E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5E2F28();
    v7 = a3(a1, &type metadata for SymbolPerfData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5E3144()
{
  unint64_t result;

  result = qword_1F036F4A0;
  if (!qword_1F036F4A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PerformanceDisplayType, &type metadata for PerformanceDisplayType);
    atomic_store(result, (unint64_t *)&qword_1F036F4A0);
  }
  return result;
}

uint64_t sub_1DC5E3188@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SymbolPerfData.init(from:)(a1, a2);
}

uint64_t sub_1DC5E319C(_QWORD *a1)
{
  return SymbolPerfData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SymbolPerfData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC5E31FC + 4 * byte_1DC644911[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC5E3230 + 4 * byte_1DC64490C[v4]))();
}

uint64_t sub_1DC5E3230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E3238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5E3240);
  return result;
}

uint64_t sub_1DC5E324C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5E3254);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5E3258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E3260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for SymbolPerfData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5E32AC + 4 * byte_1DC644916[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5E32CC + 4 * byte_1DC64491B[v4]))();
}

_BYTE *sub_1DC5E32AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5E32CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5E32D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5E32DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5E32E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5E32EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SymbolPerfData.CodingKeys()
{
  return &type metadata for SymbolPerfData.CodingKeys;
}

unint64_t sub_1DC5E330C()
{
  unint64_t result;

  result = qword_1F036F4A8;
  if (!qword_1F036F4A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644A60, &type metadata for SymbolPerfData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F4A8);
  }
  return result;
}

unint64_t sub_1DC5E3354()
{
  unint64_t result;

  result = qword_1EDB0F1B8;
  if (!qword_1EDB0F1B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6449D0, &type metadata for SymbolPerfData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F1B8);
  }
  return result;
}

unint64_t sub_1DC5E339C()
{
  unint64_t result;

  result = qword_1EDB0F1B0;
  if (!qword_1EDB0F1B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6449F8, &type metadata for SymbolPerfData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F1B0);
  }
  return result;
}

uint64_t sub_1DC5E33E0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036F4B0, MEMORY[0x1E0CF8078]);
}

uint64_t static TickerExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F4B0, a1);
}

uint64_t sub_1DC5E3420(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036F4C8, MEMORY[0x1E0CF8380]);
}

uint64_t static TickerExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F4C8, a1);
}

uint64_t TickerExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t TickerExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TickerExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TickerExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for TickerExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for TickerExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F550);
}

uint64_t TickerExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TickerExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TickerExposureEvent.timedData.modify())()
{
  type metadata accessor for TickerExposureEvent(0);
  return nullsub_1;
}

uint64_t TickerExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for TickerExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t TickerExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t TickerExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for TickerExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for TickerExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F5E0);
}

uint64_t TickerExposureEvent.Model.init(eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for TickerExposureEvent.Model(0) + 20);
  v8 = sub_1DC62ABC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t sub_1DC5E366C()
{
  sub_1DC5E3848();
  return sub_1DC62B604();
}

uint64_t sub_1DC5E3694()
{
  sub_1DC5E3848();
  return sub_1DC62B610();
}

uint64_t TickerExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1DC5E3B88(0, &qword_1F036F4E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E3848();
  sub_1DC62B5F8();
  v9[15] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v1)
  {
    type metadata accessor for TickerExposureEvent.Model(0);
    v9[14] = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5E3848()
{
  unint64_t result;

  result = qword_1F036F4E8;
  if (!qword_1F036F4E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644C80, &type metadata for TickerExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F4E8);
  }
  return result;
}

uint64_t TickerExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v23 = a2;
  v26 = sub_1DC62ABC0();
  v22 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC62ABA8();
  v24 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v27 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5E3B88(0, &qword_1F036F4F0, MEMORY[0x1E0DED048]);
  v29 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = type metadata accessor for TickerExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E3848();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v10;
  v20 = a1;
  v21 = v7;
  v14 = v24;
  v13 = v25;
  v15 = v26;
  v31 = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v16 = v27;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v16, v28);
  v30 = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v29);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v12[*(int *)(v19 + 20)], v13, v15);
  sub_1DC5E3BE4((uint64_t)v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_1DC5E3C28((uint64_t)v12);
}

void sub_1DC5E3B88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5E3848();
    v7 = a3(a1, &type metadata for TickerExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5E3BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TickerExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5E3C28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TickerExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5E3C64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TickerExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5E3C78(_QWORD *a1)
{
  return TickerExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5E3C8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F4B0, a1);
}

uint64_t sub_1DC5E3CB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F4C8, a1);
}

uint64_t getEnumTagSinglePayload for TickerExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E3CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t storeEnumTagSinglePayload for TickerExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E3D00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t getEnumTagSinglePayload for TickerExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E3D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t storeEnumTagSinglePayload for TickerExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E3D40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t storeEnumTagSinglePayload for TickerExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5E3DA0 + 4 * byte_1DC644AE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5E3DD4 + 4 * byte_1DC644AE0[v4]))();
}

uint64_t sub_1DC5E3DD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E3DDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5E3DE4);
  return result;
}

uint64_t sub_1DC5E3DF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5E3DF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5E3DFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E3E04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TickerExposureEvent.Model.CodingKeys()
{
  return &type metadata for TickerExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC5E3E24()
{
  unint64_t result;

  result = qword_1F036F618;
  if (!qword_1F036F618)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644C58, &type metadata for TickerExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F618);
  }
  return result;
}

unint64_t sub_1DC5E3E6C()
{
  unint64_t result;

  result = qword_1F036F620;
  if (!qword_1F036F620)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644BC8, &type metadata for TickerExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F620);
  }
  return result;
}

unint64_t sub_1DC5E3EB4()
{
  unint64_t result;

  result = qword_1F036F628;
  if (!qword_1F036F628)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644BF0, &type metadata for TickerExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F628);
  }
  return result;
}

uint64_t sub_1DC5E3EF8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036F630, MEMORY[0x1E0CF8078]);
}

uint64_t static SymbolChartDisplayErrorEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F630, a1);
}

uint64_t sub_1DC5E3F38(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036F648, MEMORY[0x1E0CF8380]);
}

uint64_t static SymbolChartDisplayErrorEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F648, a1);
}

uint64_t SymbolChartDisplayErrorEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SymbolChartDisplayErrorEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SymbolChartDisplayErrorEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolChartDisplayErrorEvent.symbolChartDisplayErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SymbolChartDisplayErrorEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F6D8);
}

uint64_t SymbolChartDisplayErrorEvent.symbolChartDisplayErrorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolChartDisplayErrorEvent.symbolChartDisplayErrorData.modify())()
{
  type metadata accessor for SymbolChartDisplayErrorEvent(0);
  return nullsub_1;
}

uint64_t SymbolChartDisplayErrorEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SymbolChartDisplayErrorEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolChartDisplayErrorEvent.symbolData.modify())()
{
  type metadata accessor for SymbolChartDisplayErrorEvent(0);
  return nullsub_1;
}

uint64_t SymbolChartDisplayErrorEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for SymbolChartDisplayErrorEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t SymbolChartDisplayErrorEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SymbolChartDisplayErrorEvent.Model.symbolChartDisplayErrorData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SymbolChartDisplayErrorEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F770);
}

uint64_t SymbolChartDisplayErrorEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SymbolChartDisplayErrorEvent.Model.init(eventData:symbolChartDisplayErrorData:symbolData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = *a2;
  v7 = *a3;
  v8 = a3[1];
  v9 = *((_BYTE *)a3 + 16);
  v10 = a3[3];
  v11 = a3[4];
  v12 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a4, a1, v12);
  result = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  *(_BYTE *)(a4 + *(int *)(result + 20)) = v6;
  v14 = a4 + *(int *)(result + 24);
  *(_QWORD *)v14 = v7;
  *(_QWORD *)(v14 + 8) = v8;
  *(_BYTE *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v10;
  *(_QWORD *)(v14 + 32) = v11;
  return result;
}

uint64_t sub_1DC5E43E0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001BLL;
  if (*v0 != 1)
    v1 = 0x61446C6F626D7973;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC5E4448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5E5A88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5E446C()
{
  sub_1DC5E4680();
  return sub_1DC62B604();
}

uint64_t sub_1DC5E4494()
{
  sub_1DC5E4680();
  return sub_1DC62B610();
}

uint64_t SymbolChartDisplayErrorEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v3 = v1;
  sub_1DC5E4998(0, &qword_1F036F668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E4680();
  sub_1DC62B5F8();
  LOBYTE(v18[0]) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
    LOBYTE(v18[0]) = *(_BYTE *)(v3 + *(int *)(v10 + 20));
    v22 = 1;
    sub_1DC4FBD2C();
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + *(int *)(v10 + 24));
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v16 = v11[3];
    v15 = v11[4];
    v18[0] = v12;
    v18[1] = v13;
    v19 = v14;
    v20 = v16;
    v21 = v15;
    v22 = 2;
    sub_1DC4C336C();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5E4680()
{
  unint64_t result;

  result = qword_1F036F670;
  if (!qword_1F036F670)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644EBC, &type metadata for SymbolChartDisplayErrorEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F670);
  }
  return result;
}

uint64_t SymbolChartDisplayErrorEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v22 = a2;
  v23 = sub_1DC62ABA8();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5E4998(0, &qword_1F036F678, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E4680();
  v24 = v8;
  v12 = v27;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  LOBYTE(v28) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v14 = v23;
  sub_1DC62B454();
  v27 = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v25, v14);
  v33 = 1;
  sub_1DC4FBCE4();
  sub_1DC62B454();
  v11[*(int *)(v9 + 20)] = v28;
  v33 = 2;
  sub_1DC4C3328();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v26);
  v15 = v29;
  v16 = v30;
  v17 = v31;
  v18 = v32;
  v19 = &v11[*(int *)(v9 + 24)];
  *(_QWORD *)v19 = v28;
  *((_QWORD *)v19 + 1) = v15;
  v19[16] = v16;
  *((_QWORD *)v19 + 3) = v17;
  *((_QWORD *)v19 + 4) = v18;
  sub_1DC5E49F4((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DC5E4A38((uint64_t)v11);
}

void sub_1DC5E4998(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5E4680();
    v7 = a3(a1, &type metadata for SymbolChartDisplayErrorEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5E49F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5E4A38(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5E4A74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolChartDisplayErrorEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5E4A88(_QWORD *a1)
{
  return SymbolChartDisplayErrorEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5E4A9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F630, a1);
}

uint64_t sub_1DC5E4AC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F648, a1);
}

uint64_t sub_1DC5E4AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolChartDisplayErrorEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolChartDisplayErrorEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E5174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SymbolChartDisplayErrorEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E5258(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5E5338()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1F036F660, (void (*)(void))sub_1DC4FBCE4, (void (*)(void))sub_1DC4FBD2C);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SymbolChartDisplayErrorEvent.Model(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    v9[16] = v10[16];
    v12 = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
    *((_QWORD *)v9 + 4) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SymbolChartDisplayErrorEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t assignWithTake for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolChartDisplayErrorEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E5760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolChartDisplayErrorEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5E57EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5E5868()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SymbolChartDisplayErrorEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5E5930 + 4 * byte_1DC644CD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5E5964 + 4 * byte_1DC644CD0[v4]))();
}

uint64_t sub_1DC5E5964(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E596C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5E5974);
  return result;
}

uint64_t sub_1DC5E5980(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5E5988);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5E598C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E5994(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDisplayErrorEvent.Model.CodingKeys()
{
  return &type metadata for SymbolChartDisplayErrorEvent.Model.CodingKeys;
}

unint64_t sub_1DC5E59B4()
{
  unint64_t result;

  result = qword_1F036F7B0;
  if (!qword_1F036F7B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644E94, &type metadata for SymbolChartDisplayErrorEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F7B0);
  }
  return result;
}

unint64_t sub_1DC5E59FC()
{
  unint64_t result;

  result = qword_1F036F7B8;
  if (!qword_1F036F7B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644E04, &type metadata for SymbolChartDisplayErrorEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F7B8);
  }
  return result;
}

unint64_t sub_1DC5E5A44()
{
  unint64_t result;

  result = qword_1F036F7C0;
  if (!qword_1F036F7C0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644E2C, &type metadata for SymbolChartDisplayErrorEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F7C0);
  }
  return result;
}

uint64_t sub_1DC5E5A88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DC64E3A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t StocksSession.sessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StocksSession.appSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StocksSession.userData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_DWORD *)(v1 + 64);
  v6 = *(_DWORD *)(v1 + 68);
  v7 = *(_DWORD *)(v1 + 72);
  v8 = *(_DWORD *)(v1 + 76);
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 36) = v6;
  *(_DWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 44) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.sessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  char v10;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 128);
  v4 = *(_WORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v6 = *(_QWORD *)(v1 + 152);
  v7 = *(_QWORD *)(v1 + 160);
  v8 = *(_QWORD *)(v1 + 168);
  v9 = *(_WORD *)(v1 + 176);
  v10 = *(_BYTE *)(v1 + 178);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 96);
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 112);
  *(_QWORD *)(a1 + 32) = v3;
  *(_WORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_WORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 82) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.appData.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[24];
  v3 = v1[25];
  v4 = v1[26];
  *a1 = v1[23];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.deviceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(v1 + 216);
  v2 = *(_QWORD *)(v1 + 224);
  v4 = *(_QWORD *)(v1 + 232);
  v5 = *(_QWORD *)(v1 + 240);
  v6 = *(_BYTE *)(v1 + 248);
  v7 = *(_QWORD *)(v1 + 256);
  v8 = *(_QWORD *)(v1 + 264);
  v9 = *(_QWORD *)(v1 + 272);
  v10 = *(_QWORD *)(v1 + 280);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void StocksSession.contentEnvironmentData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 288);
}

uint64_t StocksSession.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 296);
  v3 = *(_QWORD *)(v1 + 304);
  v4 = *(_QWORD *)(v1 + 312);
  v5 = *(_QWORD *)(v1 + 320);
  v6 = *(_QWORD *)(v1 + 328);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(v1 + 336);
  return sub_1DC5E5DF0(v2, v3, v4);
}

uint64_t sub_1DC5E5DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t StocksSession.debugData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 352);
  *a1 = *(_QWORD *)(v1 + 344);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void StocksSession.orientationData.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 360);
}

uint64_t StocksSession.watchedSymbolListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 368);
  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.watchlistSummaryData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 376);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC5E5E54(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5E5E8C + 4 * byte_1DC644F0C[a1]))(0x496E6F6973736573, 0xE900000000000044);
}

uint64_t sub_1DC5E5E8C()
{
  return 0x6973736553707061;
}

uint64_t sub_1DC5E5EAC()
{
  return 0x6174614472657375;
}

uint64_t sub_1DC5E5EC4()
{
  return 0x446E6F6973736573;
}

uint64_t sub_1DC5E5EE4()
{
  return 0x61746144707061;
}

uint64_t sub_1DC5E5EFC()
{
  return 0x6144656369766564;
}

unint64_t sub_1DC5E5F18()
{
  return 0xD000000000000016;
}

unint64_t sub_1DC5E5FA4()
{
  return 0xD000000000000014;
}

uint64_t sub_1DC5E5FC0()
{
  unsigned __int8 *v0;

  return sub_1DC5E5E54(*v0);
}

uint64_t sub_1DC5E5FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5E85C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5E5FEC()
{
  sub_1DC5E6794();
  return sub_1DC62B604();
}

uint64_t sub_1DC5E6014()
{
  sub_1DC5E6794();
  return sub_1DC62B610();
}

uint64_t StocksSession.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  int v82;
  char v83;

  sub_1DC5E780C(0, &qword_1F036F7C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v21 - v6;
  v8 = *v1;
  v67 = v1[1];
  v68 = v8;
  v9 = v1[2];
  v65 = v1[3];
  v66 = v9;
  v10 = v1[4];
  v63 = v1[5];
  v64 = v10;
  v82 = *((unsigned __int8 *)v1 + 48);
  v62 = v1[7];
  v61 = *((_DWORD *)v1 + 16);
  v11 = *((_DWORD *)v1 + 17);
  v60 = *((_DWORD *)v1 + 18);
  v12 = *((_DWORD *)v1 + 19);
  v59 = v1[10];
  v58 = v1[11];
  v45 = *((_DWORD *)v1 + 24);
  v46 = v1[13];
  v47 = v1[14];
  v56 = v1[15];
  v55 = v1[16];
  v54 = *((unsigned __int8 *)v1 + 136);
  v53 = *((unsigned __int8 *)v1 + 137);
  v52 = v1[18];
  v57 = *(_OWORD *)(v1 + 19);
  v51 = v1[21];
  v50 = *((unsigned __int8 *)v1 + 176);
  v49 = *((unsigned __int8 *)v1 + 177);
  v48 = *((unsigned __int8 *)v1 + 178);
  v41 = v1[23];
  v42 = v1[24];
  v43 = v1[25];
  v44 = v1[26];
  v32 = v1[27];
  v33 = v1[28];
  v34 = v1[29];
  v40 = v1[30];
  v39 = *((unsigned __int8 *)v1 + 248);
  v38 = v1[32];
  v37 = v1[33];
  v36 = v1[34];
  v35 = v1[35];
  v31 = *((unsigned __int8 *)v1 + 288);
  v25 = v1[37];
  v26 = v1[38];
  v30 = v1[39];
  v29 = v1[40];
  v28 = v1[41];
  v27 = *((unsigned __int8 *)v1 + 336);
  v23 = v1[43];
  v24 = v1[44];
  v22 = *((unsigned __int16 *)v1 + 180);
  v14 = v1[46];
  v13 = v1[47];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E6794();
  v15 = v4;
  sub_1DC62B5F8();
  LOBYTE(v70) = 0;
  v16 = v69;
  sub_1DC62B4B4();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17 = v82;
  v18 = v63;
  v19 = v64;
  LOBYTE(v70) = 1;
  sub_1DC62B478();
  v70 = v19;
  v71 = v18;
  LOBYTE(v72) = v17;
  v73 = v62;
  v74 = __PAIR64__(v11, v61);
  v75 = __PAIR64__(v12, v60);
  v76 = v59;
  *(_QWORD *)&v77 = v58;
  v83 = 2;
  sub_1DC4BEE98();
  sub_1DC62B4E4();
  v69 = v5;
  LODWORD(v70) = v45;
  v71 = v46;
  v72 = v47;
  v73 = v56;
  v74 = v55;
  LOBYTE(v75) = v54;
  BYTE1(v75) = v53;
  v76 = v52;
  v77 = v57;
  v78 = v51;
  v79 = v50;
  v80 = v49;
  v81 = v48;
  v83 = 3;
  sub_1DC4C0320();
  sub_1DC62B4E4();
  v70 = v41;
  v71 = v42;
  v72 = v43;
  v73 = v44;
  v83 = 4;
  sub_1DC4BF084();
  sub_1DC62B4E4();
  v70 = v32;
  v71 = v33;
  v72 = v34;
  v73 = v40;
  LOBYTE(v74) = v39;
  v75 = v38;
  v76 = v37;
  *(_QWORD *)&v77 = v36;
  *((_QWORD *)&v77 + 1) = v35;
  v83 = 5;
  sub_1DC4C05F0();
  sub_1DC62B4E4();
  LOBYTE(v70) = v31;
  v83 = 6;
  sub_1DC4BF45C();
  sub_1DC62B4E4();
  v70 = v25;
  v71 = v26;
  v72 = v30;
  v73 = v29;
  v74 = v28;
  LOBYTE(v75) = v27;
  v83 = 7;
  sub_1DC4BF200();
  sub_1DC62B490();
  v70 = v23;
  v71 = v24;
  v83 = 8;
  sub_1DC4BECFC();
  sub_1DC62B490();
  LOWORD(v70) = v22;
  v83 = 9;
  sub_1DC4C0058();
  sub_1DC62B490();
  v70 = v14;
  v83 = 10;
  sub_1DC4BF5A0();
  sub_1DC62B490();
  v70 = v13;
  v83 = 11;
  sub_1DC4BF7A8();
  sub_1DC62B490();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v5 + 8))(0, v15);
}

unint64_t sub_1DC5E6794()
{
  unint64_t result;

  result = qword_1EDB0EC38;
  if (!qword_1EDB0EC38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645078, &type metadata for StocksSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC38);
  }
  return result;
}

_QWORD *StocksSession.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[48];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  int v112;
  __int16 v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  char v120;
  int v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  _BYTE v132[7];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  _BYTE v138[7];
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  _BYTE v145[7];
  uint64_t v146;
  uint64_t v147;
  __int16 v148;
  int v149;
  __int16 v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  int v155;
  __int16 v156;
  _BYTE v157[7];
  _BYTE v158[7];
  _BYTE v159[12];
  int v160;
  __int16 v161;
  _DWORD v162[3];
  _QWORD *v163;

  sub_1DC5E780C(0, &qword_1EDB11900, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  v10 = a1[3];
  v163 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1DC5E6794();
  sub_1DC62B5E0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v163);
    return (_QWORD *)v86;
  }
  else
  {
    v68 = a2;
    LOBYTE(v93) = 0;
    v11 = sub_1DC62B424();
    v13 = v12;
    LOBYTE(v93) = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1DC62B3E8();
    v84 = v13;
    v67 = v14;
    LOBYTE(v92[0]) = 2;
    v16 = v15;
    sub_1DC4BEE54();
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v83 = v16;
    v66 = v93;
    v17 = v94;
    v65 = v95;
    v64 = v96;
    v18 = HIDWORD(v97);
    v62 = v98;
    v63 = v97;
    v19 = HIDWORD(v98);
    v61 = v99;
    v20 = v100;
    LOBYTE(v92[0]) = 3;
    sub_1DC4C02DC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v81 = v20;
    v82 = v17;
    v57 = v93;
    v21 = v95;
    v55 = v96;
    v56 = v94;
    v22 = v97;
    v53 = BYTE1(v98);
    v54 = v98;
    v52 = v99;
    v79 = v101;
    v80 = v100;
    v23 = v102;
    v59 = BYTE1(v103);
    v60 = v103;
    v58 = BYTE2(v103);
    LOBYTE(v92[0]) = 4;
    sub_1DC4BF040();
    v91 = v21;
    swift_bridgeObjectRetain();
    v78 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v77 = v23;
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v24 = v94;
    v50 = v95;
    v51 = v93;
    v25 = v96;
    LOBYTE(v92[0]) = 5;
    sub_1DC4C05AC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v76 = v25;
    v90 = v24;
    v26 = v94;
    v46 = v95;
    v47 = v93;
    v27 = v96;
    v45 = v97;
    v89 = v99;
    v48 = v100;
    v49 = v98;
    v28 = v101;
    LOBYTE(v92[0]) = 6;
    sub_1DC4BF418();
    v87 = v26;
    swift_bridgeObjectRetain();
    v88 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v86 = v28;
    LODWORD(v28) = v93;
    LOBYTE(v92[0]) = 7;
    sub_1DC4BF1BC();
    sub_1DC62B400();
    v44 = v28;
    LODWORD(v28) = v98;
    LOBYTE(v92[0]) = 8;
    v74 = v93;
    v75 = v94;
    v71 = v95;
    v72 = v96;
    v73 = v97;
    sub_1DC5E5DF0(v93, v94, v95);
    sub_1DC4BECB8();
    sub_1DC62B400();
    v70 = v28;
    v29 = v93;
    v30 = v94;
    LOBYTE(v92[0]) = 9;
    sub_1DC4C0014();
    v69 = v30;
    swift_bridgeObjectRetain();
    sub_1DC62B400();
    v43 = (unsigned __int16)v93;
    LOBYTE(v92[0]) = 10;
    sub_1DC4BF55C();
    sub_1DC62B400();
    v31 = v93;
    v153 = 11;
    sub_1DC4BF764();
    v85 = v31;
    swift_bridgeObjectRetain();
    sub_1DC62B400();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v42 = v154;
    v92[0] = v11;
    v92[1] = v84;
    v92[2] = v67;
    v92[3] = v83;
    v92[4] = v66;
    v92[5] = v82;
    LOBYTE(v92[6]) = v65;
    v92[7] = v64;
    v92[8] = __PAIR64__(v18, v63);
    v92[9] = __PAIR64__(v19, v62);
    v92[10] = v61;
    v92[11] = v81;
    LODWORD(v92[12]) = v57;
    v92[13] = v56;
    v92[14] = v91;
    v92[15] = v55;
    v92[16] = v78;
    LOBYTE(v92[17]) = v54;
    BYTE1(v92[17]) = v53;
    v92[18] = v52;
    v92[19] = v80;
    v92[20] = v79;
    v92[21] = v77;
    LOBYTE(v92[22]) = v60;
    BYTE1(v92[22]) = v59;
    BYTE2(v92[22]) = v58;
    v92[23] = v51;
    v92[24] = v90;
    v92[25] = v50;
    v92[26] = v76;
    v92[27] = v47;
    v92[28] = v87;
    v92[29] = v46;
    v92[30] = v88;
    LOBYTE(v92[31]) = v45;
    v92[32] = v49;
    v92[33] = v89;
    v92[34] = v48;
    v92[35] = v86;
    LOBYTE(v92[36]) = v44;
    v92[37] = v74;
    v92[38] = v75;
    v32 = v71;
    v92[39] = v71;
    v92[40] = v72;
    v92[41] = v73;
    LOBYTE(v92[42]) = v70;
    v41 = v29;
    v92[43] = v29;
    v92[44] = v69;
    LOWORD(v92[45]) = v43;
    v92[46] = v85;
    v92[47] = v154;
    sub_1DC5E7868(v92);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC5CC640(v74, v75, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v81;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v77;
    swift_bridgeObjectRelease();
    v35 = v79;
    swift_bridgeObjectRelease();
    v36 = v80;
    swift_bridgeObjectRelease();
    v37 = v78;
    swift_bridgeObjectRelease();
    v38 = v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v68, v92, 0x180uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v163);
    v93 = v11;
    v94 = v84;
    v95 = v67;
    v96 = v83;
    v97 = v66;
    v98 = v82;
    LOBYTE(v99) = v65;
    v100 = v64;
    v101 = __PAIR64__(v18, v63);
    v102 = __PAIR64__(v19, v62);
    v103 = v61;
    v104 = v33;
    v105 = v57;
    v106 = v56;
    v107 = v38;
    v108 = v55;
    v109 = v37;
    v110 = v54;
    v111 = v53;
    v114 = v52;
    v115 = v36;
    v116 = v35;
    v117 = v34;
    *(_DWORD *)((char *)&v99 + 1) = v162[0];
    HIDWORD(v99) = *(_DWORD *)((char *)v162 + 3);
    v112 = v160;
    v113 = v161;
    v118 = v60;
    v119 = v59;
    v120 = v58;
    v121 = *(_DWORD *)&v159[7];
    v122 = v159[11];
    v123 = v51;
    v124 = v90;
    v125 = v50;
    v126 = v76;
    v127 = v47;
    v128 = v87;
    v129 = v46;
    v130 = v88;
    v131 = v45;
    *(_DWORD *)&v132[3] = *(_DWORD *)&v159[3];
    *(_DWORD *)v132 = *(_DWORD *)v159;
    v133 = v49;
    v134 = v89;
    v135 = v48;
    v136 = v86;
    v137 = v44;
    *(_DWORD *)v138 = *(_DWORD *)v158;
    *(_DWORD *)&v138[3] = *(_DWORD *)&v158[3];
    v139 = v74;
    v140 = v75;
    v141 = v71;
    v142 = v72;
    v143 = v73;
    v144 = v70;
    *(_DWORD *)v145 = *(_DWORD *)v157;
    *(_DWORD *)&v145[3] = *(_DWORD *)&v157[3];
    v146 = v41;
    v147 = v69;
    v148 = v43;
    v149 = v155;
    v150 = v156;
    v151 = v85;
    v152 = v42;
    return sub_1DC5CC4D0(&v93);
  }
}

void sub_1DC5E780C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5E6794();
    v7 = a3(a1, &type metadata for StocksSession.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *sub_1DC5E7868(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = a1[37];
  v3 = a1[39];
  v4 = a1[38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC5E5DF0(v5, v4, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1DC5E79D4@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return StocksSession.init(from:)(a1, a2);
}

uint64_t sub_1DC5E79E8(_QWORD *a1)
{
  return StocksSession.encode(to:)(a1);
}

uint64_t destroy for StocksSession(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 312) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StocksSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_WORD *)(a1 + 177) = *(_WORD *)(a2 + 177);
  v12 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v12;
  v13 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v13;
  v14 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v14;
  v15 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v15;
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v16 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v16;
  v17 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v17;
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  v25 = a2 + 296;
  v24 = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 == 1)
  {
    v18 = *(_OWORD *)(v25 + 16);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)v25;
    *(_OWORD *)(a1 + 312) = v18;
    *(_OWORD *)(a1 + 321) = *(_OWORD *)(v25 + 25);
  }
  else
  {
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    *(_WORD *)(a1 + 297) = *(_WORD *)(v25 + 1);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = v24;
    v19 = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = v19;
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v20 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v20;
  *(_WORD *)(a1 + 360) = *(_WORD *)(a2 + 360);
  v22 = *(_QWORD *)(a2 + 368);
  v21 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = v22;
  *(_QWORD *)(a1 + 376) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StocksSession(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  *(_BYTE *)(a1 + 178) = *(_BYTE *)(a2 + 178);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  v4 = (__int128 *)(a1 + 296);
  v5 = (__int128 *)(a2 + 296);
  v6 = *(_QWORD *)(a2 + 312);
  if (*(_QWORD *)(a1 + 312) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 312);
      *(_OWORD *)(a1 + 321) = *(_OWORD *)(a2 + 321);
      *v4 = v7;
      *(_OWORD *)(a1 + 312) = v8;
    }
    else
    {
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      *(_BYTE *)(a1 + 297) = *(_BYTE *)(a2 + 297);
      *(_BYTE *)(a1 + 298) = *(_BYTE *)(a2 + 298);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1DC5E80BC(a1 + 296);
    v9 = *(_OWORD *)(a2 + 321);
    v10 = *(_OWORD *)(a2 + 312);
    *v4 = *v5;
    *(_OWORD *)(a1 + 312) = v10;
    *(_OWORD *)(a1 + 321) = v9;
  }
  else
  {
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    *(_BYTE *)(a1 + 297) = *(_BYTE *)(a2 + 297);
    *(_BYTE *)(a1 + 298) = *(_BYTE *)(a2 + 298);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  }
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 360) = *(_WORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC5E80BC(uint64_t a1)
{
  destroy for UserBundleSubscriptionContextData();
  return a1;
}

void *__swift_memcpy384_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x180uLL);
}

uint64_t assignWithTake for StocksSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_WORD *)(a1 + 177) = *(_WORD *)(a2 + 177);
  v11 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v15 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  if (*(_QWORD *)(a1 + 312) != 1)
  {
    v17 = *(_QWORD *)(a2 + 312);
    if (v17 != 1)
    {
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      *(_BYTE *)(a1 + 297) = *(_BYTE *)(a2 + 297);
      *(_BYTE *)(a1 + 298) = *(_BYTE *)(a2 + 298);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = v17;
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
      goto LABEL_6;
    }
    sub_1DC5E80BC(a1 + 296);
  }
  v18 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v18;
  *(_OWORD *)(a1 + 321) = *(_OWORD *)(a2 + 321);
LABEL_6:
  v20 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v20;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 360) = *(_WORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksSession(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 384))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StocksSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 376) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 384) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 384) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksSession()
{
  return &type metadata for StocksSession;
}

uint64_t storeEnumTagSinglePayload for StocksSession.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1DC5E8470 + 4 * byte_1DC644F1D[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1DC5E84A4 + 4 * byte_1DC644F18[v4]))();
}

uint64_t sub_1DC5E84A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E84AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5E84B4);
  return result;
}

uint64_t sub_1DC5E84C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5E84C8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1DC5E84CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E84D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StocksSession.CodingKeys()
{
  return &type metadata for StocksSession.CodingKeys;
}

unint64_t sub_1DC5E84F4()
{
  unint64_t result;

  result = qword_1F036F7D0;
  if (!qword_1F036F7D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645050, &type metadata for StocksSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F7D0);
  }
  return result;
}

unint64_t sub_1DC5E853C()
{
  unint64_t result;

  result = qword_1EDB0EC48;
  if (!qword_1EDB0EC48)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644FC0, &type metadata for StocksSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC48);
  }
  return result;
}

unint64_t sub_1DC5E8584()
{
  unint64_t result;

  result = qword_1EDB0EC40;
  if (!qword_1EDB0EC40)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC644FE8, &type metadata for StocksSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC40);
  }
  return result;
}

uint64_t sub_1DC5E85C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736553707061 && a2 == 0xEC00000044496E6FLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446E6F6973736573 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61746144707061 && a2 == 0xE700000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144656369766564 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64D300 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DC64C310 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446775626564 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BFD0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64DCA0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

StocksAnalytics::ExternalAnalyticsEventType_optional __swiftcall ExternalAnalyticsEventType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ExternalAnalyticsEventType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ExternalAnalyticsEventType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5E8B84 + 4 * byte_1DC6450D0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5E8B84()
{
  return 0x56656C6369747261;
}

uint64_t sub_1DC5E8BA4()
{
  return 0x656956616964656DLL;
}

uint64_t sub_1DC5E8BC0()
{
  return 0x6E65704F707061;
}

void sub_1DC5E8BD4(char *a1)
{
  sub_1DC546B90(*a1);
}

unint64_t sub_1DC5E8BE4()
{
  unint64_t result;

  result = qword_1F036F7D8;
  if (!qword_1F036F7D8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ExternalAnalyticsEventType, &type metadata for ExternalAnalyticsEventType);
    atomic_store(result, (unint64_t *)&qword_1F036F7D8);
  }
  return result;
}

void sub_1DC5E8C28()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5E8C74()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC5E8CEC()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5E8D28()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5E8D8C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5E8DD4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ExternalAnalyticsEventType_optional sub_1DC5E8E4C(Swift::String *a1)
{
  return ExternalAnalyticsEventType.init(rawValue:)(*a1);
}

uint64_t sub_1DC5E8E58()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5E8E88 + 4 * byte_1DC6450E0[*v0]))();
}

void sub_1DC5E8E88(_QWORD *a1@<X8>)
{
  *a1 = 0x56656C6369747261;
  a1[1] = 0xEB00000000776569;
}

void sub_1DC5E8EAC(_QWORD *a1@<X8>)
{
  *a1 = 0x656956616964656DLL;
  a1[1] = 0xE900000000000077;
}

void sub_1DC5E8ECC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6E65704F707061;
  a1[1] = v1;
}

uint64_t sub_1DC5E8EE4()
{
  sub_1DC5E9058();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5E8F40()
{
  sub_1DC5E9058();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsEventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC5E8FD8 + 4 * byte_1DC6450E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC5E900C + 4 * byte_1DC6450E4[v4]))();
}

uint64_t sub_1DC5E900C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E9014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5E901CLL);
  return result;
}

uint64_t sub_1DC5E9028(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5E9030);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5E9034(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E903C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsEventType()
{
  return &type metadata for ExternalAnalyticsEventType;
}

unint64_t sub_1DC5E9058()
{
  unint64_t result;

  result = qword_1F036F7E0;
  if (!qword_1F036F7E0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ExternalAnalyticsEventType, &type metadata for ExternalAnalyticsEventType);
    atomic_store(result, (unint64_t *)&qword_1F036F7E0);
  }
  return result;
}

StocksAnalytics::ListeningSource_optional __swiftcall ListeningSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ListeningSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ListeningSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5E9124 + 4 * byte_1DC64521C[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5E9124()
{
  return 0x7070416E69;
}

uint64_t sub_1DC5E9138()
{
  return 0x6C616E7265747865;
}

uint64_t sub_1DC5E9150()
{
  return 0x79616C50726163;
}

void sub_1DC5E9164(char *a1)
{
  sub_1DC5453C8(*a1);
}

unint64_t sub_1DC5E9174()
{
  unint64_t result;

  result = qword_1F036F7E8;
  if (!qword_1F036F7E8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ListeningSource, &type metadata for ListeningSource);
    atomic_store(result, (unint64_t *)&qword_1F036F7E8);
  }
  return result;
}

void sub_1DC5E91B8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5E9204()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC5E926C()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5E92A8()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5E92FC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5E9344()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ListeningSource_optional sub_1DC5E93AC(Swift::String *a1)
{
  return ListeningSource.init(rawValue:)(*a1);
}

uint64_t sub_1DC5E93B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5E93E8 + 4 * byte_1DC64522C[*v0]))();
}

void sub_1DC5E93E8(_QWORD *a1@<X8>)
{
  *a1 = 0x7070416E69;
  a1[1] = 0xE500000000000000;
}

void sub_1DC5E9400(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616E7265747865;
  a1[1] = 0xE800000000000000;
}

void sub_1DC5E941C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x79616C50726163;
  a1[1] = v1;
}

uint64_t sub_1DC5E9434()
{
  sub_1DC5E95A8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5E9490()
{
  sub_1DC5E95A8();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for ListeningSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC5E9528 + 4 * byte_1DC645235[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC5E955C + 4 * byte_1DC645230[v4]))();
}

uint64_t sub_1DC5E955C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E9564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5E956CLL);
  return result;
}

uint64_t sub_1DC5E9578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5E9580);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5E9584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5E958C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListeningSource()
{
  return &type metadata for ListeningSource;
}

unint64_t sub_1DC5E95A8()
{
  unint64_t result;

  result = qword_1F036F7F0;
  if (!qword_1F036F7F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ListeningSource, &type metadata for ListeningSource);
    atomic_store(result, (unint64_t *)&qword_1F036F7F0);
  }
  return result;
}

uint64_t sub_1DC5E95EC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036F7F8, MEMORY[0x1E0CF8078]);
}

uint64_t static SymbolRepositionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F7F8, a1);
}

uint64_t sub_1DC5E962C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036F810, MEMORY[0x1E0CF8380]);
}

uint64_t static SymbolRepositionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F810, a1);
}

uint64_t SymbolRepositionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SymbolRepositionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SymbolRepositionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolRepositionEvent.previousSymbolPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolRepositionEvent(0) + 20);
  sub_1DC5E971C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SymbolRepositionEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F898);
}

void sub_1DC5E971C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E7D0)
  {
    sub_1DC510CA0();
    sub_1DC510CE4();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E7D0);
  }
}

uint64_t SymbolRepositionEvent.previousSymbolPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolRepositionEvent(0) + 20);
  sub_1DC5E971C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolRepositionEvent.previousSymbolPositionData.modify())()
{
  type metadata accessor for SymbolRepositionEvent(0);
  return nullsub_1;
}

uint64_t SymbolRepositionEvent.newSymbolPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolRepositionEvent(0) + 24);
  sub_1DC5E971C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SymbolRepositionEvent.newSymbolPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolRepositionEvent(0) + 24);
  sub_1DC5E971C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolRepositionEvent.newSymbolPositionData.modify())()
{
  type metadata accessor for SymbolRepositionEvent(0);
  return nullsub_1;
}

uint64_t SymbolRepositionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for SymbolRepositionEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1DC5E971C();
  v7 = v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104);
  v9(v5, v2, v6);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(a1 + *(int *)(v4 + 24), v2, v7);
}

uint64_t SymbolRepositionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SymbolRepositionEvent.Model.previousSymbolPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolRepositionEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SymbolRepositionEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036F930);
}

uint64_t SymbolRepositionEvent.Model.newSymbolPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolRepositionEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SymbolRepositionEvent.Model.init(eventData:previousSymbolPositionData:newSymbolPositionData:)@<X0>(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t result;

  v6 = *a2;
  v7 = *a3;
  v8 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for SymbolRepositionEvent.Model(0);
  *(_DWORD *)(a4 + *(int *)(result + 20)) = v6;
  *(_DWORD *)(a4 + *(int *)(result + 24)) = v7;
  return result;
}

uint64_t sub_1DC5E9A44()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ALL;
  if (*v0 != 1)
    v1 = 0xD000000000000015;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC5E9AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5EAC2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5E9AD4()
{
  sub_1DC5E9CD4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5E9AFC()
{
  sub_1DC5E9CD4();
  return sub_1DC62B610();
}

uint64_t SymbolRepositionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  int v13;
  char v14;
  int v15;
  char v16;

  v3 = v1;
  sub_1DC5E9FE8(0, &qword_1F036F828, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E9CD4();
  sub_1DC62B5F8();
  v16 = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for SymbolRepositionEvent.Model(0);
    v15 = *(_DWORD *)(v3 + *(int *)(v10 + 20));
    v14 = 1;
    sub_1DC510CE4();
    sub_1DC62B4E4();
    v13 = *(_DWORD *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5E9CD4()
{
  unint64_t result;

  result = qword_1F036F830;
  if (!qword_1F036F830)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645500, &type metadata for SymbolRepositionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F830);
  }
  return result;
}

uint64_t SymbolRepositionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  char v30;
  char v31;
  char v32;

  v22 = a2;
  v3 = sub_1DC62ABA8();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5E9FE8(0, &qword_1F036F838, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for SymbolRepositionEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5E9CD4();
  v24 = v8;
  v12 = v27;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v9;
  v13 = v6;
  v14 = v11;
  v15 = v25;
  v32 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v16 = v23;
  sub_1DC62B454();
  v17 = v3;
  v18 = (uint64_t)v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v14, v16, v17);
  v31 = 1;
  sub_1DC510CA0();
  sub_1DC62B454();
  v19 = v27;
  *(_DWORD *)(v18 + *(int *)(v27 + 20)) = v29;
  v30 = 2;
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v26);
  *(_DWORD *)(v18 + *(int *)(v19 + 24)) = v28;
  sub_1DC5EA044(v18, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DC5EA088(v18);
}

void sub_1DC5E9FE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5E9CD4();
    v7 = a3(a1, &type metadata for SymbolRepositionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5EA044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolRepositionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5EA088(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SymbolRepositionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5EA0C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolRepositionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5EA0D8(_QWORD *a1)
{
  return SymbolRepositionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5EA0EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F7F8, a1);
}

uint64_t sub_1DC5EA110@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F810, a1);
}

uint64_t sub_1DC5EA134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC5E971C();
  v8 = v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104);
  v10(v6, v4, v7);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(a2 + *(int *)(a1 + 24), v4, v8);
}

char *initializeBufferWithCopyOfBuffer for SymbolRepositionEvent(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_1DC5E971C();
    v12 = v11;
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13(v9, v10, v11);
    v13(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v12);
  }
  return a1;
}

uint64_t destroy for SymbolRepositionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC5E971C();
  v7 = v6;
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v9(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + *(int *)(a2 + 24), v7);
}

uint64_t initializeWithCopy for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5E971C();
  v11 = v10;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12(v8, v9, v10);
  v12(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v11);
  return a1;
}

uint64_t assignWithCopy for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5E971C();
  v11 = v10;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v12(v8, v9, v10);
  v12(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v11);
  return a1;
}

uint64_t initializeWithTake for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5E971C();
  v11 = v10;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v12(v8, v9, v10);
  v12(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v11);
  return a1;
}

uint64_t assignWithTake for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5E971C();
  v11 = v10;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v12(v8, v9, v10);
  v12(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolRepositionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5EA5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC5E971C();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SymbolRepositionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5EA658(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC5E971C();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5EA6D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC5E971C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolRepositionEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t initializeWithCopy for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolRepositionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5EA988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SymbolRepositionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5EA9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DC5EAA10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SymbolRepositionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5EAAD4 + 4 * byte_1DC645355[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5EAB08 + 4 * byte_1DC645350[v4]))();
}

uint64_t sub_1DC5EAB08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5EAB10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5EAB18);
  return result;
}

uint64_t sub_1DC5EAB24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5EAB2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5EAB30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5EAB38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolRepositionEvent.Model.CodingKeys()
{
  return &type metadata for SymbolRepositionEvent.Model.CodingKeys;
}

unint64_t sub_1DC5EAB58()
{
  unint64_t result;

  result = qword_1F036F970;
  if (!qword_1F036F970)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6454D8, &type metadata for SymbolRepositionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F970);
  }
  return result;
}

unint64_t sub_1DC5EABA0()
{
  unint64_t result;

  result = qword_1F036F978;
  if (!qword_1F036F978)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645448, &type metadata for SymbolRepositionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F978);
  }
  return result;
}

unint64_t sub_1DC5EABE8()
{
  unint64_t result;

  result = qword_1F036F980;
  if (!qword_1F036F980)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645470, &type metadata for SymbolRepositionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F980);
  }
  return result;
}

uint64_t sub_1DC5EAC2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DC64E3C0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64E3E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t AdState.init(bannerState:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;

  v4 = sub_1DC62AF80();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if ((_DWORD)result == *MEMORY[0x1E0D527B8])
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 96))(a1, v4);
    result = __swift_destroy_boxed_opaque_existential_1(a1);
    v7 = 3;
  }
  else
  {
    if ((_DWORD)result != *MEMORY[0x1E0D52780])
    {
      if ((_DWORD)result != *MEMORY[0x1E0D527A8])
      {
        if ((_DWORD)result == *MEMORY[0x1E0D527B0])
        {
          v7 = 1;
          goto LABEL_10;
        }
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      }
      v7 = 0;
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 96))(a1, v4);
    v8 = sub_1DC62AF74();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
    v7 = 2;
  }
LABEL_10:
  *a2 = v7;
  return result;
}

BOOL BannerAdState.instrumentationAllowed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v11;

  v1 = sub_1DC62AF80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  v6 = v5;
  v7 = *MEMORY[0x1E0D527B8];
  if (v5 == *MEMORY[0x1E0D527B8])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else if (v5 == *MEMORY[0x1E0D52780])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    v8 = sub_1DC62AF74();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
  }
  else if (v5 != *MEMORY[0x1E0D527A8] && v5 != *MEMORY[0x1E0D527B0])
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v6 == v7;
}

uint64_t UserSegmentationSegmentSetData.init(setIDs:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t UserSegmentationSegmentSetData.setIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserSegmentationSegmentSetData.setIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*UserSegmentationSegmentSetData.setIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC5EB010()
{
  return 0x734449746573;
}

uint64_t sub_1DC5EB024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x734449746573 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5EB0B0()
{
  sub_1DC5EB224();
  return sub_1DC62B604();
}

uint64_t sub_1DC5EB0D8()
{
  sub_1DC5EB224();
  return sub_1DC62B610();
}

uint64_t UserSegmentationSegmentSetData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1DC5EB414(0, &qword_1EDB11AD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5EB224();
  sub_1DC62B5F8();
  v10[1] = v8;
  sub_1DC5EB268();
  sub_1DC4BB9BC(&qword_1EDB118A8, MEMORY[0x1E0DEDBD0], MEMORY[0x1E0DEAF10]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5EB224()
{
  unint64_t result;

  result = qword_1EDB11138;
  if (!qword_1EDB11138)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6456E4, &type metadata for UserSegmentationSegmentSetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11138);
  }
  return result;
}

void sub_1DC5EB268()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB118A0)
  {
    v0 = sub_1DC62B16C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB118A0);
  }
}

uint64_t UserSegmentationSegmentSetData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1DC5EB414(0, &qword_1F036F988, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5EB224();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5EB268();
    sub_1DC4BB9BC(&qword_1EDB118B0, MEMORY[0x1E0DEDBF8], MEMORY[0x1E0DEAF40]);
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5EB414(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5EB224();
    v7 = a3(a1, &type metadata for UserSegmentationSegmentSetData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5EB478@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return UserSegmentationSegmentSetData.init(from:)(a1, a2);
}

uint64_t sub_1DC5EB48C(_QWORD *a1)
{
  return UserSegmentationSegmentSetData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for UserSegmentationSegmentSetData()
{
  return &type metadata for UserSegmentationSegmentSetData;
}

uint64_t storeEnumTagSinglePayload for UserSegmentationSegmentSetData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5EB4F0 + 4 * byte_1DC645560[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5EB510 + 4 * byte_1DC645565[v4]))();
}

_BYTE *sub_1DC5EB4F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5EB510(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5EB518(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5EB520(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5EB528(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5EB530(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UserSegmentationSegmentSetData.CodingKeys()
{
  return &type metadata for UserSegmentationSegmentSetData.CodingKeys;
}

unint64_t sub_1DC5EB550()
{
  unint64_t result;

  result = qword_1F036F990;
  if (!qword_1F036F990)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6456BC, &type metadata for UserSegmentationSegmentSetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F990);
  }
  return result;
}

unint64_t sub_1DC5EB598()
{
  unint64_t result;

  result = qword_1EDB11148;
  if (!qword_1EDB11148)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64562C, &type metadata for UserSegmentationSegmentSetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11148);
  }
  return result;
}

unint64_t sub_1DC5EB5E0()
{
  unint64_t result;

  result = qword_1EDB11140;
  if (!qword_1EDB11140)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645654, &type metadata for UserSegmentationSegmentSetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11140);
  }
  return result;
}

uint64_t sub_1DC5EB624(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036F998, MEMORY[0x1E0CF8078]);
}

uint64_t static PersonalizedAdsEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03691F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F998, a1);
}

uint64_t sub_1DC5EB664(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036F9B0, MEMORY[0x1E0CF8380]);
}

uint64_t static PersonalizedAdsEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369200, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F9B0, a1);
}

uint64_t PersonalizedAdsEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t PersonalizedAdsEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PersonalizedAdsEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for PersonalizedAdsEngagementEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for PersonalizedAdsEngagementEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036FA40);
}

uint64_t PersonalizedAdsEngagementEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.timedData.modify())()
{
  type metadata accessor for PersonalizedAdsEngagementEvent(0);
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.userSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 24);
  sub_1DC5EB7D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_1DC5EB7D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036F9C8)
  {
    sub_1DC51DD54();
    sub_1DC51DD9C();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036F9C8);
  }
}

uint64_t PersonalizedAdsEngagementEvent.userSelectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 24);
  sub_1DC5EB7D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.userSelectionData.modify())()
{
  type metadata accessor for PersonalizedAdsEngagementEvent(0);
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for PersonalizedAdsEngagementEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1DC5EB7D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t PersonalizedAdsEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PersonalizedAdsEngagementEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for PersonalizedAdsEngagementEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for PersonalizedAdsEngagementEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036FAD8);
}

uint64_t PersonalizedAdsEngagementEvent.Model.userSelectionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.init(eventData:timedData:userSelectionData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a3;
  v8 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  v10 = a4 + *(int *)(v9 + 20);
  v11 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  *(_BYTE *)(a4 + *(int *)(v9 + 24)) = v7;
  return result;
}

uint64_t sub_1DC5EBA4C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x74614464656D6974;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC5EBAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5ECC38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5EBAD0()
{
  sub_1DC5EBCF4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5EBAF8()
{
  sub_1DC5EBCF4();
  return sub_1DC62B610();
}

uint64_t PersonalizedAdsEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];

  v3 = v1;
  sub_1DC5EC0A8(0, &qword_1F036F9D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5EBCF4();
  sub_1DC62B5F8();
  v12[15] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
    v12[14] = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v12[13] = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    v12[12] = 2;
    sub_1DC51DD9C();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5EBCF4()
{
  unint64_t result;

  result = qword_1F036F9D8;
  if (!qword_1F036F9D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645914, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036F9D8);
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v23 = a2;
  v26 = sub_1DC62ABC0();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v27 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5EC0A8(0, &qword_1F036F9E0, MEMORY[0x1E0DED048]);
  v29 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  v10 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5EBCF4();
  v30 = v9;
  v13 = (uint64_t)v31;
  sub_1DC62B5E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v4;
  v22 = v7;
  v14 = (uint64_t)v12;
  v31 = a1;
  v16 = v25;
  v15 = v26;
  v35 = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v27;
  v18 = v28;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v14, v17, v18);
  v34 = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v14 + *(int *)(v10 + 20), v16, v15);
  v32 = 2;
  sub_1DC51DD54();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v30, v29);
  *(_BYTE *)(v14 + *(int *)(v10 + 24)) = v33;
  sub_1DC5EC104(v14, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1DC5EC148(v14);
}

void sub_1DC5EC0A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5EBCF4();
    v7 = a3(a1, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5EC104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5EC148(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5EC184@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PersonalizedAdsEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5EC198(_QWORD *a1)
{
  return PersonalizedAdsEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5EC1AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03691F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036F998, a1);
}

uint64_t sub_1DC5EC1D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369200, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036F9B0, a1);
}

uint64_t sub_1DC5EC1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1DC5EB7D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for PersonalizedAdsEngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC5EB7D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1DC5EB7D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC5EB7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC5EB7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC5EB7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC5EB7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizedAdsEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5EC6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1DC5EB7D8();
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5EC768(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1DC5EB7D8();
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5EC808()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC5EB7D8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5EC8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 3)
    return v14 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5EC964(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t sub_1DC5ECA08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5ECAE0 + 4 * byte_1DC645745[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5ECB14 + 4 * byte_1DC645740[v4]))();
}

uint64_t sub_1DC5ECB14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5ECB1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5ECB24);
  return result;
}

uint64_t sub_1DC5ECB30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5ECB38);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5ECB3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5ECB44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsEngagementEvent.Model.CodingKeys()
{
  return &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DC5ECB64()
{
  unint64_t result;

  result = qword_1F036FB18;
  if (!qword_1F036FB18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6458EC, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FB18);
  }
  return result;
}

unint64_t sub_1DC5ECBAC()
{
  unint64_t result;

  result = qword_1F036FB20;
  if (!qword_1F036FB20)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64585C, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FB20);
  }
  return result;
}

unint64_t sub_1DC5ECBF4()
{
  unint64_t result;

  result = qword_1F036FB28;
  if (!qword_1F036FB28)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645884, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FB28);
  }
  return result;
}

uint64_t sub_1DC5ECC38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64E400)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

StocksAnalytics::PersonalizedAdsUserSelectionType_optional __swiftcall PersonalizedAdsUserSelectionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::PersonalizedAdsUserSelectionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PersonalizedAdsUserSelectionType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E49646574706FLL;
  if (*v0 != 1)
    v1 = 0x74754F646574706FLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC5ECE54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC542514(*a1, *a2);
}

unint64_t sub_1DC5ECE64()
{
  unint64_t result;

  result = qword_1F036FB30;
  if (!qword_1F036FB30)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PersonalizedAdsUserSelectionType, &type metadata for PersonalizedAdsUserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1F036FB30);
  }
  return result;
}

uint64_t sub_1DC5ECEA8()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC5ECF48()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC5ECFC4()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::PersonalizedAdsUserSelectionType_optional sub_1DC5ED060(Swift::String *a1)
{
  return PersonalizedAdsUserSelectionType.init(rawValue:)(*a1);
}

void sub_1DC5ED06C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x6E49646574706FLL;
  if (v2 != 1)
  {
    v5 = 0x74754F646574706FLL;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC5ED0CC()
{
  sub_1DC5ED240();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5ED128()
{
  sub_1DC5ED240();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsUserSelectionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5ED1C0 + 4 * byte_1DC645975[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5ED1F4 + 4 * byte_1DC645970[v4]))();
}

uint64_t sub_1DC5ED1F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5ED1FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5ED204);
  return result;
}

uint64_t sub_1DC5ED210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5ED218);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5ED21C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5ED224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionType()
{
  return &type metadata for PersonalizedAdsUserSelectionType;
}

unint64_t sub_1DC5ED240()
{
  unint64_t result;

  result = qword_1F036FB38;
  if (!qword_1F036FB38)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PersonalizedAdsUserSelectionType, &type metadata for PersonalizedAdsUserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1F036FB38);
  }
  return result;
}

uint64_t sub_1DC5ED284(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036FB40, MEMORY[0x1E0CF8078]);
}

uint64_t static MediaEngageCompleteEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369208, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036FB40, a1);
}

uint64_t sub_1DC5ED2C4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036FB58, MEMORY[0x1E0CF8380]);
}

uint64_t static MediaEngageCompleteEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369210, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036FB58, a1);
}

uint64_t MediaEngageCompleteEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t MediaEngageCompleteEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MediaEngageCompleteEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MediaEngageCompleteEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB10CD0);
}

uint64_t MediaEngageCompleteEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.newsArticleData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.groupData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.feedData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.mediaData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.viewData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.anfComponentData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.mediaEngagementCompletedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.mediaEngagementCompletedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.mediaEngagementCompletedData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.issueData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.channelData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.activeWatchlistData.modify())()
{
  type metadata accessor for MediaEngageCompleteEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MediaEngageCompleteEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v8, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v8, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v8, v25);
}

uint64_t MediaEngageCompleteEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MediaEngageCompleteEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MediaEngageCompleteEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12A98);
}

uint64_t MediaEngageCompleteEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t MediaEngageCompleteEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 32));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1DC517D30(v4, v5);
}

uint64_t MediaEngageCompleteEvent.Model.mediaEngagementCompletedData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  *a1 = *(_QWORD *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t MediaEngageCompleteEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 48));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

__n128 MediaEngageCompleteEvent.Model.init(eventData:newsArticleData:groupData:feedData:mediaData:viewData:anfComponentData:mediaEngagementCompletedData:issueData:channelData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __n128 *a11, char *a12)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  __n128 *v31;
  __n128 result;
  char v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  __int16 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  unint64_t v57;
  unint64_t v58;
  __n128 v59;
  char v60;

  v35 = *a2;
  v14 = *((_QWORD *)a2 + 2);
  v15 = *((_QWORD *)a2 + 3);
  v16 = *((_BYTE *)a2 + 32);
  v17 = *((_QWORD *)a2 + 5);
  v18 = *((_BYTE *)a2 + 48);
  v19 = *((_QWORD *)a2 + 7);
  v20 = *((_BYTE *)a2 + 64);
  v21 = *((_BYTE *)a2 + 65);
  v33 = *((_BYTE *)a2 + 67);
  v34 = *((_BYTE *)a2 + 66);
  v38 = a3[1];
  v39 = *a3;
  v36 = *((_QWORD *)a3 + 5);
  v37 = *((_QWORD *)a3 + 4);
  v41 = *a4;
  v40 = *((_QWORD *)a4 + 2);
  v45 = *((_QWORD *)a5 + 1);
  v44 = *((_QWORD *)a5 + 2);
  v43 = *((_DWORD *)a5 + 6);
  v42 = a5[28];
  v49 = *a6;
  v48 = a6[1];
  v46 = *a5;
  v47 = *((_WORD *)a6 + 8);
  v50 = a7[1];
  v51 = *a7;
  v54 = *a10;
  v52 = *a8;
  v53 = a10[1];
  v59 = *a11;
  v57 = a11[1].n128_u64[1];
  v58 = a11[1].n128_u64[0];
  v55 = a11[2].n128_u8[1];
  v56 = a11[2].n128_u8[0];
  v60 = *a12;
  v22 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
  v24 = a9 + v23[5];
  *(_QWORD *)(v24 + 16) = v14;
  *(_QWORD *)(v24 + 24) = v15;
  *(_BYTE *)(v24 + 32) = v16;
  *(_OWORD *)v24 = v35;
  *(_QWORD *)(v24 + 40) = v17;
  *(_BYTE *)(v24 + 48) = v18;
  *(_QWORD *)(v24 + 56) = v19;
  *(_BYTE *)(v24 + 64) = v20;
  *(_BYTE *)(v24 + 65) = v21;
  *(_BYTE *)(v24 + 66) = v34;
  *(_BYTE *)(v24 + 67) = v33;
  v25 = a9 + v23[6];
  *(_OWORD *)v25 = v39;
  *(_OWORD *)(v25 + 16) = v38;
  *(_QWORD *)(v25 + 32) = v37;
  *(_QWORD *)(v25 + 40) = v36;
  v26 = a9 + v23[7];
  *(_OWORD *)v26 = v41;
  *(_QWORD *)(v26 + 16) = v40;
  v27 = a9 + v23[8];
  *(_BYTE *)v27 = v46;
  *(_QWORD *)(v27 + 8) = v45;
  *(_QWORD *)(v27 + 16) = v44;
  *(_DWORD *)(v27 + 24) = v43;
  *(_BYTE *)(v27 + 28) = v42;
  v28 = a9 + v23[9];
  *(_QWORD *)v28 = v49;
  *(_QWORD *)(v28 + 8) = v48;
  *(_WORD *)(v28 + 16) = v47;
  v29 = (_QWORD *)(a9 + v23[10]);
  *v29 = v51;
  v29[1] = v50;
  *(_QWORD *)(a9 + v23[11]) = v52;
  v30 = (_QWORD *)(a9 + v23[12]);
  *v30 = v54;
  v30[1] = v53;
  v31 = (__n128 *)(a9 + v23[13]);
  result = v59;
  *v31 = v59;
  v31[1].n128_u64[0] = v58;
  v31[1].n128_u64[1] = v57;
  v31[2].n128_u8[0] = v56;
  v31[2].n128_u8[1] = v55;
  *(_BYTE *)(a9 + v23[14]) = v60;
  return result;
}

uint64_t sub_1DC5EE598(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5EE5D0 + 4 * byte_1DC645AA0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5EE5D0()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC5EE5F4()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC5EE608()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC5EE644()
{
  return 0xD000000000000010;
}

unint64_t sub_1DC5EE660()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1DC5EE6B8()
{
  return 0x7461446575737369;
}

uint64_t sub_1DC5EE6CC()
{
  unsigned __int8 *v0;

  return sub_1DC5EE598(*v0);
}

uint64_t sub_1DC5EE6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5F24E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5EE6F8()
{
  sub_1DC5EEBC0();
  return sub_1DC62B604();
}

uint64_t sub_1DC5EE720()
{
  sub_1DC5EEBC0();
  return sub_1DC62B610();
}

uint64_t MediaEngageCompleteEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v3 = v1;
  sub_1DC5EF428(0, &qword_1F036FB70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5EEBC0();
  sub_1DC62B5F8();
  LOBYTE(v42) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v42 = v12;
    *(_QWORD *)&v43 = v13;
    *((_QWORD *)&v43 + 1) = v14;
    LOBYTE(v44) = v15;
    *((_QWORD *)&v44 + 1) = v16;
    v45 = v17;
    v46 = v18;
    v47 = v19;
    v48 = v20;
    v49 = v21;
    v50 = (char)v11;
    v41 = 1;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[6]);
    v23 = v22[1];
    v42 = *v22;
    v43 = v23;
    v44 = v22[2];
    v41 = 2;
    sub_1DC4C9004();
    sub_1DC62B490();
    v24 = (__int128 *)(v3 + v10[7]);
    v25 = *((_QWORD *)v24 + 2);
    v42 = *v24;
    *(_QWORD *)&v43 = v25;
    v41 = 3;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v26 = (char *)(v3 + v10[8]);
    v27 = *v26;
    v28 = *((_QWORD *)v26 + 1);
    v29 = *((_QWORD *)v26 + 2);
    v30 = *((_DWORD *)v26 + 6);
    LOBYTE(v26) = v26[28];
    LOBYTE(v42) = v27;
    *((_QWORD *)&v42 + 1) = v28;
    *(_QWORD *)&v43 = v29;
    DWORD2(v43) = v30;
    BYTE12(v43) = (_BYTE)v26;
    v41 = 4;
    sub_1DC517060();
    sub_1DC62B4E4();
    v31 = (uint64_t *)(v3 + v10[9]);
    v32 = *v31;
    v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 8);
    *(_QWORD *)&v42 = v32;
    *((_QWORD *)&v42 + 1) = v33;
    LOWORD(v43) = (_WORD)v31;
    v41 = 5;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v42 = *(_OWORD *)(v3 + v10[10]);
    v41 = 6;
    sub_1DC4E4B34();
    sub_1DC62B490();
    *(_QWORD *)&v42 = *(_QWORD *)(v3 + v10[11]);
    v41 = 7;
    sub_1DC540EDC();
    sub_1DC62B4E4();
    v42 = *(_OWORD *)(v3 + v10[12]);
    v41 = 8;
    sub_1DC4C9674();
    sub_1DC62B490();
    v34 = (__int128 *)(v3 + v10[13]);
    v35 = *v34;
    v36 = *((_QWORD *)v34 + 2);
    v37 = *((_QWORD *)v34 + 3);
    v38 = *((_BYTE *)v34 + 32);
    LOBYTE(v34) = *((_BYTE *)v34 + 33);
    v42 = v35;
    *(_QWORD *)&v43 = v36;
    *((_QWORD *)&v43 + 1) = v37;
    LOBYTE(v44) = v38;
    BYTE1(v44) = (_BYTE)v34;
    v41 = 9;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    LOBYTE(v42) = *(_BYTE *)(v3 + v10[14]);
    v41 = 10;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5EEBC0()
{
  unint64_t result;

  result = qword_1F036FB78;
  if (!qword_1F036FB78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645DAC, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FB78);
  }
  return result;
}

uint64_t MediaEngageCompleteEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v16;
  char *v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char v35;
  char *v36;
  uint64_t v37;
  __int16 v38;
  char *v39;
  __int128 v40;
  char v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  int *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v48 = a2;
  v4 = sub_1DC62ABA8();
  v51 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5EF428(0, &qword_1F036FB80, MEMORY[0x1E0DED048]);
  v50 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v46 - v9;
  v11 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC5EEBC0();
  v49 = v10;
  sub_1DC62B5E0();
  v55 = v11;
  if (v2)
  {
    v53 = v2;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  }
  else
  {
    v47 = v8;
    LOBYTE(v56) = 0;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    sub_1DC62B454();
    v14 = v4;
    v17 = v54;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v6, v14);
    v65 = 1;
    sub_1DC4C18A0();
    sub_1DC62B454();
    v18 = v57;
    v19 = v58;
    v20 = *((_QWORD *)&v58 + 1);
    v21 = v59;
    v22 = v60;
    v23 = v61;
    v24 = v62;
    v25 = v63;
    v26 = v64;
    v27 = &v17[v11[5]];
    *(_OWORD *)v27 = v56;
    *((_OWORD *)v27 + 1) = v18;
    v27[32] = v19;
    *((_QWORD *)v27 + 5) = v20;
    v27[48] = v21;
    *((_QWORD *)v27 + 7) = v22;
    v27[64] = v23;
    v27[65] = v24;
    v27[66] = v25;
    v27[67] = v26;
    v65 = 2;
    sub_1DC4C8FC0();
    sub_1DC62B400();
    v28 = &v17[v11[6]];
    v29 = v57;
    *(_OWORD *)v28 = v56;
    *((_OWORD *)v28 + 1) = v29;
    *((_OWORD *)v28 + 2) = v58;
    v65 = 3;
    sub_1DC4BEF94();
    sub_1DC62B400();
    v30 = v57;
    v31 = &v17[v11[7]];
    *(_OWORD *)v31 = v56;
    *((_QWORD *)v31 + 2) = v30;
    v65 = 4;
    sub_1DC51701C();
    sub_1DC62B454();
    v32 = *((_QWORD *)&v56 + 1);
    v33 = v57;
    v34 = DWORD2(v57);
    v35 = BYTE12(v57);
    v36 = &v17[v11[8]];
    *v36 = v56;
    *((_QWORD *)v36 + 1) = v32;
    *((_QWORD *)v36 + 2) = v33;
    *((_DWORD *)v36 + 6) = v34;
    v36[28] = v35;
    v65 = 5;
    sub_1DC4BEDAC();
    sub_1DC62B454();
    v37 = *((_QWORD *)&v56 + 1);
    v38 = v57;
    v39 = &v17[v11[9]];
    *(_QWORD *)v39 = v56;
    *((_QWORD *)v39 + 1) = v37;
    *((_WORD *)v39 + 8) = v38;
    v65 = 6;
    sub_1DC4E4AEC();
    sub_1DC62B400();
    *(_OWORD *)&v17[v11[10]] = v56;
    v65 = 7;
    sub_1DC540E94();
    sub_1DC62B454();
    *(_QWORD *)&v17[v11[11]] = v56;
    v65 = 8;
    sub_1DC4C9630();
    sub_1DC62B400();
    *(_OWORD *)&v17[v11[12]] = v56;
    v65 = 9;
    sub_1DC4C8E40();
    sub_1DC62B454();
    v53 = 0;
    v40 = v57;
    v41 = v58;
    v42 = BYTE1(v58);
    v43 = &v54[v55[13]];
    *(_OWORD *)v43 = v56;
    *((_OWORD *)v43 + 1) = v40;
    v43[32] = v41;
    v43[33] = v42;
    v65 = 10;
    sub_1DC4C9930();
    v44 = v53;
    sub_1DC62B400();
    v53 = v44;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v50);
    v45 = (uint64_t)v54;
    if (v44)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v45, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v55;
      sub_1DC4CB1B4(*(_QWORD *)(v45 + v55[6]), *(_QWORD *)(v45 + v55[6] + 8), *(_QWORD *)(v45 + v55[6] + 16));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC519178(*(_QWORD *)(v45 + v16[10]), *(_QWORD *)(v45 + v16[10] + 8));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v54[v55[14]] = v56;
      sub_1DC5EF484(v45, v48);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      return sub_1DC5EF4C8(v45);
    }
  }
}

void sub_1DC5EF428(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5EEBC0();
    v7 = a3(a1, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5EF484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5EF4C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5EF504@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngageCompleteEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5EF518(_QWORD *a1)
{
  return MediaEngageCompleteEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5EF52C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369208, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036FB40, a1);
}

uint64_t sub_1DC5EF550@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369210, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036FB58, a1);
}

uint64_t sub_1DC5EF574@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v9, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v9, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v9, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaEngageCompleteEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for MediaEngageCompleteEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageCompleteEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5F0C58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MediaEngageCompleteEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5F0F5C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5F125C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E828, (void (*)(void))sub_1DC540E94, (void (*)(void))sub_1DC540EDC);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaEngageCompleteEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v10[48] = v11[48];
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    v14 = (char *)a1 + v9;
    v15 = (char *)a2 + v9;
    v16 = *(_QWORD *)((char *)a2 + v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16)
    {
      *v14 = *v15;
      *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
      *((_QWORD *)v14 + 2) = v16;
      *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
      v17 = *((_QWORD *)v15 + 5);
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      *((_QWORD *)v14 + 5) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v19 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v19;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    }
    v20 = a3[7];
    v21 = a3[8];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *v22 = *v23;
    v24 = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    *((_QWORD *)v22 + 2) = v24;
    v25 = (char *)a1 + v21;
    v26 = (char *)a2 + v21;
    *v25 = *v26;
    v27 = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    *((_QWORD *)v25 + 2) = v27;
    *((_DWORD *)v25 + 6) = *((_DWORD *)v26 + 6);
    v25[28] = v26[28];
    v28 = a3[9];
    v29 = a3[10];
    v30 = (char *)a1 + v28;
    v31 = (char *)a2 + v28;
    v30[16] = v31[16];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v30[17] = v31[17];
    v33 = (char *)a1 + v29;
    v34 = (_OWORD *)((char *)a2 + v29);
    v35 = *(_QWORD *)((char *)a2 + v29 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35 == 1)
    {
      *(_OWORD *)v33 = *v34;
    }
    else
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      swift_bridgeObjectRetain();
    }
    v36 = a3[12];
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    v37 = (_QWORD *)((char *)a1 + v36);
    v38 = (_QWORD *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = a3[13];
    v41 = a3[14];
    v42 = (char *)a1 + v40;
    v43 = (char *)a2 + v40;
    v44 = *((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *((_QWORD *)v42 + 1) = v44;
    v45 = *((_QWORD *)v43 + 3);
    *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
    *((_QWORD *)v42 + 3) = v45;
    v42[32] = v43[32];
    v42[33] = v43[33];
    *((_BYTE *)a1 + v41) = *((_BYTE *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 40) + 8) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v13 = a1 + v8;
  v14 = a2 + v8;
  v15 = *(_QWORD *)(a2 + v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(_BYTE *)v13 = *(_BYTE *)v14;
    *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
    *(_QWORD *)(v13 + 16) = v15;
    *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
    v16 = *(_QWORD *)(v14 + 40);
    *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
    *(_QWORD *)(v13 + 40) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v17;
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = v22;
  v23 = a1 + v19;
  v24 = a2 + v19;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
  *(_BYTE *)(v23 + 28) = *(_BYTE *)(v24 + 28);
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
  v30 = *(_QWORD *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_QWORD *)(v28 + 8) = v30;
  *(_BYTE *)(v28 + 17) = *(_BYTE *)(v29 + 17);
  v31 = a1 + v27;
  v32 = (_OWORD *)(a2 + v27);
  v33 = *(_QWORD *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33 == 1)
  {
    *(_OWORD *)v31 = *v32;
  }
  else
  {
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *(_QWORD *)(v31 + 8) = v33;
    swift_bridgeObjectRetain();
  }
  v34 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = a3[13];
  v39 = a3[14];
  v40 = a1 + v38;
  v41 = a2 + v38;
  v42 = *(_QWORD *)(v41 + 8);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_QWORD *)(v40 + 8) = v42;
  v43 = *(_QWORD *)(v41 + 24);
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(v41 + 16);
  *(_QWORD *)(v40 + 24) = v43;
  *(_BYTE *)(v40 + 32) = *(_BYTE *)(v41 + 32);
  *(_BYTE *)(v40 + 33) = *(_BYTE *)(v41 + 33);
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *(_QWORD *)(a1 + v11 + 16);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
      *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
      *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
      *(_QWORD *)(v12 + 40) = *((_QWORD *)v13 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v12);
      v17 = v13[1];
      v16 = v13[2];
      *(_OWORD *)v12 = *v13;
      *(_OWORD *)(v12 + 16) = v17;
      *(_OWORD *)(v12 + 32) = v16;
    }
  }
  else if (v15)
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
    *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
    *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
    *(_QWORD *)(v12 + 40) = *((_QWORD *)v13 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *v13;
    v19 = v13[2];
    *(_OWORD *)(v12 + 16) = v13[1];
    *(_OWORD *)(v12 + 32) = v19;
    *(_OWORD *)v12 = v18;
  }
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)(a2 + v23);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(a2 + v23 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(a2 + v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = *(_DWORD *)(v25 + 24);
  *(_BYTE *)(v24 + 28) = *(_BYTE *)(v25 + 28);
  *(_DWORD *)(v24 + 24) = v26;
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_QWORD *)v28 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
  *(_BYTE *)(v28 + 17) = *(_BYTE *)(v29 + 17);
  v30 = a3[10];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = *(_QWORD *)(a1 + v30 + 8);
  v34 = *(_QWORD *)(a2 + v30 + 8);
  if (v33 != 1)
  {
    if (v34 != 1)
    {
      *v31 = *v32;
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_1DC51BD60((uint64_t)v31);
    goto LABEL_13;
  }
  if (v34 == 1)
  {
LABEL_13:
    *(_OWORD *)v31 = *(_OWORD *)v32;
    goto LABEL_15;
  }
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
LABEL_15:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v35 = a3[12];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[13];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)(a2 + v38);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 32) = *(_BYTE *)(v40 + 32);
  *(_BYTE *)(v39 + 33) = *(_BYTE *)(v40 + 33);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = (_OWORD *)(a1 + v8);
  v14 = (__int128 *)(a2 + v8);
  v15 = v14[2];
  v16 = *v14;
  v13[1] = v14[1];
  v13[2] = v15;
  *v13 = v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v21 = (_OWORD *)(a1 + v18);
  v22 = (__int128 *)(a2 + v18);
  v23 = *v22;
  *(_OWORD *)((char *)v21 + 13) = *(__int128 *)((char *)v22 + 13);
  *v21 = v23;
  v24 = a3[9];
  v25 = a3[10];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  v28 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  v29 = a3[13];
  v30 = a3[14];
  v31 = a1 + v29;
  v32 = a2 + v29;
  v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(_WORD *)(v31 + 32) = *(_WORD *)(v32 + 32);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  return a1;
}

uint64_t assignWithTake for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (*(_QWORD *)(a1 + v12 + 16))
  {
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      *(_BYTE *)v13 = *(_BYTE *)v14;
      *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
      *(_QWORD *)(v13 + 16) = v15;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
      v16 = *(_QWORD *)(v14 + 40);
      *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
      *(_QWORD *)(v13 + 40) = v16;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DC4CDAF4(v13);
  }
  v17 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v17;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
LABEL_6:
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = v22;
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)(a2 + v23);
  v26 = *(_QWORD *)(a2 + v23 + 16);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(a2 + v23 + 8);
  *(_QWORD *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v24 + 24) = *(_DWORD *)(v25 + 24);
  *(_BYTE *)(v24 + 28) = *(_BYTE *)(v25 + 28);
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a2 + v27 + 8);
  *(_QWORD *)v28 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(v28 + 8) = v30;
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 16) = *(_WORD *)(v29 + 16);
  v31 = a3[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  if (*(_QWORD *)(a1 + v31 + 8) != 1)
  {
    v34 = v33[1];
    if (v34 != 1)
    {
      *v32 = *v33;
      v32[1] = v34;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DC51BD60((uint64_t)v32);
  }
  *(_OWORD *)v32 = *(_OWORD *)v33;
LABEL_11:
  v35 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[13];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a2 + v40 + 8);
  *(_QWORD *)v41 = *(_QWORD *)(a2 + v40);
  *(_QWORD *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(v42 + 24);
  *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
  *(_QWORD *)(v41 + 24) = v44;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 32) = *(_BYTE *)(v42 + 32);
  *(_BYTE *)(v41 + 33) = *(_BYTE *)(v42 + 33);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageCompleteEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5F2168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngageCompleteEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5F21F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5F2270()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaEngageCompleteEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1DC5F238C + 4 * byte_1DC645AB0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1DC5F23C0 + 4 * byte_1DC645AAB[v4]))();
}

uint64_t sub_1DC5F23C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F23C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5F23D0);
  return result;
}

uint64_t sub_1DC5F23DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5F23E4);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1DC5F23E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F23F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaEngageCompleteEvent.Model.CodingKeys()
{
  return &type metadata for MediaEngageCompleteEvent.Model.CodingKeys;
}

unint64_t sub_1DC5F2410()
{
  unint64_t result;

  result = qword_1F036FB88;
  if (!qword_1F036FB88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645D84, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FB88);
  }
  return result;
}

unint64_t sub_1DC5F2458()
{
  unint64_t result;

  result = qword_1F036FB90;
  if (!qword_1F036FB90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645CF4, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FB90);
  }
  return result;
}

unint64_t sub_1DC5F24A0()
{
  unint64_t result;

  result = qword_1F036FB98;
  if (!qword_1F036FB98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645D1C, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FB98);
  }
  return result;
}

uint64_t sub_1DC5F24E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C770 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DC64E420 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t MediaEngagementData.mediaTimePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MediaEngagementData.mediaTimePlayed.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MediaEngagementData.mediaTimePlayed.modify())()
{
  return nullsub_1;
}

void MediaEngagementData.mediaUserAction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *MediaEngagementData.mediaUserAction.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*MediaEngagementData.mediaUserAction.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementData.position.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 12);
}

uint64_t MediaEngagementData.position.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*MediaEngagementData.position.modify())()
{
  return nullsub_1;
}

void MediaEngagementData.mediaPlayMethod.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *MediaEngagementData.mediaPlayMethod.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MediaEngagementData.mediaPlayMethod.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementData.init(mediaTimePlayed:mediaUserAction:position:mediaPlayMethod:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, int a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  char v6;

  v5 = *a2;
  v6 = *a4;
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = v5;
  *(_DWORD *)(a5 + 12) = a3;
  *(_BYTE *)(a5 + 16) = v6;
  return result;
}

uint64_t sub_1DC5F2A50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5F2A8C + 4 * byte_1DC645E00[*v0]))(0x6D6954616964656DLL, 0xEF646579616C5065);
}

uint64_t sub_1DC5F2A8C()
{
  return 0x657355616964656DLL;
}

uint64_t sub_1DC5F2AB0()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_1DC5F2AC8()
{
  return 0x616C50616964656DLL;
}

uint64_t sub_1DC5F2AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5F321C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5F2B10()
{
  sub_1DC5F2D18();
  return sub_1DC62B604();
}

uint64_t sub_1DC5F2B38()
{
  sub_1DC5F2D18();
  return sub_1DC62B610();
}

uint64_t MediaEngagementData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  char v10;
  uint64_t v12;
  int v13;
  int v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  sub_1DC5F2F44(0, &qword_1F036FBA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  v9 = *(unsigned __int8 *)(v1 + 8);
  v13 = *(_DWORD *)(v1 + 12);
  v14 = v9;
  HIDWORD(v12) = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F2D18();
  sub_1DC62B5F8();
  v20 = 0;
  sub_1DC62B4FC();
  if (!v2)
  {
    v10 = BYTE4(v12);
    v19 = v14;
    v18 = 1;
    sub_1DC4E2214();
    sub_1DC62B4E4();
    v17 = 2;
    sub_1DC62B4F0();
    v16 = v10;
    v15 = 3;
    sub_1DC4E2258();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC5F2D18()
{
  unint64_t result;

  result = qword_1F036FBA8;
  if (!qword_1F036FBA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645F88, &type metadata for MediaEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FBA8);
  }
  return result;
}

uint64_t MediaEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  unsigned __int8 v21;
  char v22;

  sub_1DC5F2F44(0, &qword_1F036FBB0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F2D18();
  sub_1DC62B5E0();
  if (!v2)
  {
    v22 = 0;
    v10 = sub_1DC62B46C();
    v20 = 1;
    sub_1DC4E2610();
    sub_1DC62B454();
    v11 = v21;
    v19 = 2;
    v15 = sub_1DC62B460();
    v16 = v11;
    v17 = 3;
    sub_1DC4E2654();
    sub_1DC62B400();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v13 = v18;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v16;
    *(_DWORD *)(a2 + 12) = v15;
    *(_BYTE *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5F2F44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5F2D18();
    v7 = a3(a1, &type metadata for MediaEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5F2FA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1DC5F2FBC(_QWORD *a1)
{
  return MediaEngagementData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for MediaEngagementData(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    v3 = 3;
  else
    v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 16) < 3u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngagementData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementData()
{
  return &type metadata for MediaEngagementData;
}

uint64_t storeEnumTagSinglePayload for MediaEngagementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC5F30C4 + 4 * byte_1DC645E09[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC5F30F8 + 4 * byte_1DC645E04[v4]))();
}

uint64_t sub_1DC5F30F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F3100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5F3108);
  return result;
}

uint64_t sub_1DC5F3114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5F311CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5F3120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F3128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementData.CodingKeys()
{
  return &type metadata for MediaEngagementData.CodingKeys;
}

unint64_t sub_1DC5F3148()
{
  unint64_t result;

  result = qword_1F036FBB8;
  if (!qword_1F036FBB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645F60, &type metadata for MediaEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FBB8);
  }
  return result;
}

unint64_t sub_1DC5F3190()
{
  unint64_t result;

  result = qword_1F036FBC0;
  if (!qword_1F036FBC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645ED0, &type metadata for MediaEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FBC0);
  }
  return result;
}

unint64_t sub_1DC5F31D8()
{
  unint64_t result;

  result = qword_1F036FBC8;
  if (!qword_1F036FBC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC645EF8, &type metadata for MediaEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FBC8);
  }
  return result;
}

uint64_t sub_1DC5F321C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6954616964656DLL && a2 == 0xEF646579616C5065;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657355616964656DLL && a2 == 0xEF6E6F6974634172 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616C50616964656DLL && a2 == 0xEF646F6874654D79)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t ActionMethod.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t result;
  uint64_t v17;

  sub_1DC5F35E0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62AF50();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    sub_1DC5F3670(a1, (uint64_t)v6);
    v9 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v6, v7);
    if (v9 != *MEMORY[0x1E0DB9F20])
    {
      if (v9 == *MEMORY[0x1E0DB9EE0])
      {
        v10 = 3;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E0DB9ED8])
      {
        v10 = 2;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E0DB9F08] || v9 == *MEMORY[0x1E0DB9F18] || v9 == *MEMORY[0x1E0DB9F10])
      {
        v10 = 1;
        goto LABEL_4;
      }
      if (v9 != *MEMORY[0x1E0DB9EF8]
        && v9 != *MEMORY[0x1E0DB9F00]
        && v9 != *MEMORY[0x1E0DB9ED0]
        && v9 != *MEMORY[0x1E0DB9EF0])
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
      }
    }
  }
  v10 = 0;
LABEL_4:
  result = sub_1DC5F3634(a1);
  *a2 = v10;
  return result;
}

void sub_1DC5F35E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036FBD0)
  {
    sub_1DC62AF50();
    v0 = sub_1DC62B25C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036FBD0);
  }
}

uint64_t sub_1DC5F3634(uint64_t a1)
{
  uint64_t v2;

  sub_1DC5F35E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5F3670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC5F35E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

StocksAnalytics::ContentEnvironmentData __swiftcall ContentEnvironmentData.init(contentEnvironment:)(StocksAnalytics::ContentEnvironmentData contentEnvironment)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)contentEnvironment.contentEnvironment;
  return contentEnvironment;
}

void ContentEnvironmentData.contentEnvironment.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ContentEnvironmentData.contentEnvironment.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ContentEnvironmentData.contentEnvironment.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC5F36E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5F3A14(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC5F3710()
{
  sub_1DC4B693C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5F3738()
{
  sub_1DC4B693C();
  return sub_1DC62B610();
}

uint64_t ContentEnvironmentData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC4B68E0(0, &qword_1EDB11968, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B693C();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5F3898();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1DC5F3898()
{
  unint64_t result;

  result = qword_1EDB0FC70;
  if (!qword_1EDB0FC70)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ContentEnvironment, &type metadata for ContentEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EDB0FC70);
  }
  return result;
}

uint64_t sub_1DC5F38DC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ContentEnvironmentData.init(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for ContentEnvironmentData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC5F393C + 4 * byte_1DC645FE5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC5F3970 + 4 * byte_1DC645FE0[v4]))();
}

uint64_t sub_1DC5F3970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F3978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5F3980);
  return result;
}

uint64_t sub_1DC5F398C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5F3994);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5F3998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F39A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironmentData()
{
  return &type metadata for ContentEnvironmentData;
}

ValueMetadata *type metadata accessor for ContentEnvironmentData.CodingKeys()
{
  return &type metadata for ContentEnvironmentData.CodingKeys;
}

unint64_t sub_1DC5F39D0()
{
  unint64_t result;

  result = qword_1F036FBD8;
  if (!qword_1F036FBD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646144, &type metadata for ContentEnvironmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FBD8);
  }
  return result;
}

uint64_t sub_1DC5F3A14(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64E440)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

StocksAnalytics::AudioEngagementOrigin_optional __swiftcall AudioEngagementOrigin.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AudioEngagementOrigin_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AudioEngagementOrigin.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6369747261;
  if (*v0 != 1)
    v1 = 1684366694;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC5F3B44(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC54372C(*a1, *a2);
}

unint64_t sub_1DC5F3B54()
{
  unint64_t result;

  result = qword_1F036FBE0;
  if (!qword_1F036FBE0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementOrigin, &type metadata for AudioEngagementOrigin);
    atomic_store(result, (unint64_t *)&qword_1F036FBE0);
  }
  return result;
}

uint64_t sub_1DC5F3B98()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC5F3C30()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC5F3CA4()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::AudioEngagementOrigin_optional sub_1DC5F3D38(Swift::String *a1)
{
  return AudioEngagementOrigin.init(rawValue:)(*a1);
}

void sub_1DC5F3D44(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x656C6369747261;
  if (v2 != 1)
  {
    v5 = 1684366694;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC5F3D9C()
{
  sub_1DC5F3F10();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5F3DF8()
{
  sub_1DC5F3F10();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AudioEngagementOrigin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5F3E90 + 4 * byte_1DC6461C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5F3EC4 + 4 * byte_1DC6461C0[v4]))();
}

uint64_t sub_1DC5F3EC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F3ECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5F3ED4);
  return result;
}

uint64_t sub_1DC5F3EE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5F3EE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5F3EEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F3EF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOrigin()
{
  return &type metadata for AudioEngagementOrigin;
}

unint64_t sub_1DC5F3F10()
{
  unint64_t result;

  result = qword_1F036FBE8;
  if (!qword_1F036FBE8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementOrigin, &type metadata for AudioEngagementOrigin);
    atomic_store(result, (unint64_t *)&qword_1F036FBE8);
  }
  return result;
}

uint64_t sub_1DC5F3F54(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036FBF0, MEMORY[0x1E0CF8078]);
}

uint64_t static ConsentScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369218, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036FBF0, a1);
}

uint64_t sub_1DC5F3F94(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036FC08, MEMORY[0x1E0CF8380]);
}

uint64_t static ConsentScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369220, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036FC08, a1);
}

uint64_t ConsentScreenViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ConsentScreenViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ConsentScreenViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ConsentScreenViewEvent.consentScreenActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  sub_1DC5F4084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ConsentScreenViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036FC98);
}

void sub_1DC5F4084()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036FC20)
  {
    sub_1DC4F3B2C();
    sub_1DC4F3B74();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036FC20);
  }
}

uint64_t ConsentScreenViewEvent.consentScreenActionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  sub_1DC5F4084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ConsentScreenViewEvent.consentScreenActionData.modify())()
{
  type metadata accessor for ConsentScreenViewEvent(0);
  return nullsub_1;
}

uint64_t ConsentScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  sub_1DC5F4084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t ConsentScreenViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ConsentScreenViewEvent.Model.consentScreenActionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ConsentScreenViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ConsentScreenViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036FD28);
}

uint64_t ConsentScreenViewEvent.Model.init(eventData:consentScreenActionData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for ConsentScreenViewEvent.Model(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1DC5F4278()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC5F42BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5F50D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5F42E0()
{
  sub_1DC5F4498();
  return sub_1DC62B604();
}

uint64_t sub_1DC5F4308()
{
  sub_1DC5F4498();
  return sub_1DC62B610();
}

uint64_t ConsentScreenViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1DC5F4764(0, &qword_1F036FC28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F4498();
  sub_1DC62B5F8();
  v11[15] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v11[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for ConsentScreenViewEvent.Model(0) + 20));
    v11[13] = 1;
    sub_1DC4F3B74();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5F4498()
{
  unint64_t result;

  result = qword_1F036FC30;
  if (!qword_1F036FC30)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6464AC, &type metadata for ConsentScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FC30);
  }
  return result;
}

uint64_t ConsentScreenViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v21 = a2;
  v25 = sub_1DC62ABA8();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5F4764(0, &qword_1F036FC38, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F4498();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = a1;
  v20 = v6;
  v12 = (uint64_t)v11;
  v13 = v22;
  v28 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v23;
  v14 = v24;
  v16 = v25;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1DC4F3B2C();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v14);
  *(_BYTE *)(v12 + *(int *)(v9 + 20)) = v27;
  sub_1DC5F47C0(v12, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1DC5F4804(v12);
}

void sub_1DC5F4764(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5F4498();
    v7 = a3(a1, &type metadata for ConsentScreenViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5F47C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5F4804(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5F4840@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ConsentScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5F4854(_QWORD *a1)
{
  return ConsentScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5F4868@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369218, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036FBF0, a1);
}

uint64_t sub_1DC5F488C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369220, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036FC08, a1);
}

uint64_t sub_1DC5F48B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC5F4084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for ConsentScreenViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC5F4084();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC5F4084();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5F4084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5F4084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5F4084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5F4084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConsentScreenViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5F4C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC5F4084();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ConsentScreenViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5F4CA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC5F4084();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5F4D24()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC5F4084();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for ConsentScreenViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5F4DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ConsentScreenViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5F4E4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1DC5F4EC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ConsentScreenViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5F4F80 + 4 * byte_1DC6462F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5F4FB4 + 4 * byte_1DC6462F0[v4]))();
}

uint64_t sub_1DC5F4FB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F4FBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5F4FC4);
  return result;
}

uint64_t sub_1DC5F4FD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5F4FD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5F4FDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F4FE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for ConsentScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC5F5004()
{
  unint64_t result;

  result = qword_1F036FD60;
  if (!qword_1F036FD60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646484, &type metadata for ConsentScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FD60);
  }
  return result;
}

unint64_t sub_1DC5F504C()
{
  unint64_t result;

  result = qword_1F036FD68;
  if (!qword_1F036FD68)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6463F4, &type metadata for ConsentScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FD68);
  }
  return result;
}

unint64_t sub_1DC5F5094()
{
  unint64_t result;

  result = qword_1F036FD70;
  if (!qword_1F036FD70)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64641C, &type metadata for ConsentScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FD70);
  }
  return result;
}

uint64_t sub_1DC5F50D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DC64E460)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

StocksAnalytics::Milestone_optional __swiftcall Milestone.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::Milestone_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Milestone.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5F5250 + 4 * byte_1DC6464FC[*v0]))(1869768058, 0xE400000000000000);
}

uint64_t sub_1DC5F5250()
{
  return 7234932;
}

uint64_t sub_1DC5F5260()
{
  return 0x694679746E657774;
}

uint64_t sub_1DC5F5280()
{
  return 0x7974666966;
}

uint64_t sub_1DC5F5294()
{
  return 0x4679746E65766573;
}

uint64_t sub_1DC5F52B4()
{
  return 0x72646E7548656E6FLL;
}

void sub_1DC5F52D0(char *a1)
{
  sub_1DC541348(*a1);
}

unint64_t sub_1DC5F52E0()
{
  unint64_t result;

  result = qword_1F036FD78;
  if (!qword_1F036FD78)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for Milestone, &type metadata for Milestone);
    atomic_store(result, (unint64_t *)&qword_1F036FD78);
  }
  return result;
}

void sub_1DC5F5324()
{
  char *v0;

  sub_1DC602320(*v0);
}

void sub_1DC5F532C()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5F5360()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5F53F4(uint64_t a1)
{
  char *v1;

  sub_1DC603E50(a1, *v1);
}

StocksAnalytics::Milestone_optional sub_1DC5F53FC(Swift::String *a1)
{
  return Milestone.init(rawValue:)(*a1);
}

uint64_t sub_1DC5F5408()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5F5430 + 4 * byte_1DC646508[*v0]))();
}

void sub_1DC5F5430(_QWORD *a1@<X8>)
{
  *a1 = 7234932;
  a1[1] = 0xE300000000000000;
}

void sub_1DC5F5444(_QWORD *a1@<X8>)
{
  *a1 = 0x694679746E657774;
  a1[1] = 0xEA00000000006576;
}

void sub_1DC5F5468(_QWORD *a1@<X8>)
{
  *a1 = 0x7974666966;
  a1[1] = 0xE500000000000000;
}

void sub_1DC5F5480(_QWORD *a1@<X8>)
{
  *a1 = 0x4679746E65766573;
  a1[1] = 0xEB00000000657669;
}

void sub_1DC5F54A4(_QWORD *a1@<X8>)
{
  *a1 = 0x72646E7548656E6FLL;
  a1[1] = 0xEA00000000006465;
}

uint64_t sub_1DC5F54C4()
{
  sub_1DC5F5638();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5F5520()
{
  sub_1DC5F5638();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for Milestone(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC5F55B8 + 4 * byte_1DC646513[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC5F55EC + 4 * byte_1DC64650E[v4]))();
}

uint64_t sub_1DC5F55EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F55F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5F55FCLL);
  return result;
}

uint64_t sub_1DC5F5608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5F5610);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC5F5614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F561C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Milestone()
{
  return &type metadata for Milestone;
}

unint64_t sub_1DC5F5638()
{
  unint64_t result;

  result = qword_1F036FD80;
  if (!qword_1F036FD80)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for Milestone, &type metadata for Milestone);
    atomic_store(result, (unint64_t *)&qword_1F036FD80);
  }
  return result;
}

uint64_t SearchData.searchString.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchData.searchString.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchData.searchString.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SearchData __swiftcall SearchData.init(searchString:)(StocksAnalytics::SearchData searchString)
{
  StocksAnalytics::SearchData *v1;

  *v1 = searchString;
  return searchString;
}

uint64_t sub_1DC5F56F4()
{
  return 0x7453686372616573;
}

uint64_t sub_1DC5F5714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7453686372616573 && a2 == 0xEC000000676E6972)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5F57C0()
{
  sub_1DC5F5904();
  return sub_1DC62B604();
}

uint64_t sub_1DC5F57E8()
{
  sub_1DC5F5904();
  return sub_1DC62B610();
}

uint64_t SearchData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5F5A6C(0, &qword_1F036FD88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F5904();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5F5904()
{
  unint64_t result;

  result = qword_1F036FD90;
  if (!qword_1F036FD90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6467A0, &type metadata for SearchData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FD90);
  }
  return result;
}

uint64_t SearchData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC5F5A6C(0, &qword_1F036FD98, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F5904();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B424();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5F5A6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5F5904();
    v7 = a3(a1, &type metadata for SearchData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5F5AD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchData.init(from:)(a1, a2);
}

uint64_t sub_1DC5F5AE4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5F5A6C(0, &qword_1F036FD88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F5904();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for SearchData()
{
  return &type metadata for SearchData;
}

uint64_t storeEnumTagSinglePayload for SearchData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5F5C28 + 4 * byte_1DC646630[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5F5C48 + 4 * byte_1DC646635[v4]))();
}

_BYTE *sub_1DC5F5C28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5F5C48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5F5C50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5F5C58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5F5C60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5F5C68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchData.CodingKeys()
{
  return &type metadata for SearchData.CodingKeys;
}

unint64_t sub_1DC5F5C88()
{
  unint64_t result;

  result = qword_1F036FDA0;
  if (!qword_1F036FDA0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646778, &type metadata for SearchData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FDA0);
  }
  return result;
}

unint64_t sub_1DC5F5CD0()
{
  unint64_t result;

  result = qword_1F036FDA8;
  if (!qword_1F036FDA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6466E8, &type metadata for SearchData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FDA8);
  }
  return result;
}

unint64_t sub_1DC5F5D18()
{
  unint64_t result;

  result = qword_1F036FDB0;
  if (!qword_1F036FDB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646710, &type metadata for SearchData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FDB0);
  }
  return result;
}

uint64_t UserSegmentationTreatmentData.init(treatmentIDs:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t UserSegmentationTreatmentData.treatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserSegmentationTreatmentData.treatmentIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*UserSegmentationTreatmentData.treatmentIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC5F5DA4()
{
  return 0x6E656D7461657274;
}

uint64_t sub_1DC5F5DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656D7461657274 && a2 == 0xEC00000073444974)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5F5E70()
{
  sub_1DC5F5FE4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5F5E98()
{
  sub_1DC5F5FE4();
  return sub_1DC62B610();
}

uint64_t UserSegmentationTreatmentData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1DC5F61D4(0, &qword_1EDB11AC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F5FE4();
  sub_1DC62B5F8();
  v10[1] = v8;
  sub_1DC5F6028();
  sub_1DC4BB8F4(&qword_1EDB118C0, MEMORY[0x1E0DEDC68], MEMORY[0x1E0DEAF10]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5F5FE4()
{
  unint64_t result;

  result = qword_1EDB11108;
  if (!qword_1EDB11108)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646974, &type metadata for UserSegmentationTreatmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11108);
  }
  return result;
}

void sub_1DC5F6028()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB118B8)
  {
    v0 = sub_1DC62B16C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB118B8);
  }
}

uint64_t UserSegmentationTreatmentData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1DC5F61D4(0, &qword_1F036FDB8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F5FE4();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5F6028();
    sub_1DC4BB8F4(&qword_1EDB118C8, MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEAF40]);
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5F61D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5F5FE4();
    v7 = a3(a1, &type metadata for UserSegmentationTreatmentData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5F6238@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return UserSegmentationTreatmentData.init(from:)(a1, a2);
}

uint64_t sub_1DC5F624C(_QWORD *a1)
{
  return UserSegmentationTreatmentData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for UserSegmentationTreatmentData()
{
  return &type metadata for UserSegmentationTreatmentData;
}

uint64_t storeEnumTagSinglePayload for UserSegmentationTreatmentData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5F62B0 + 4 * byte_1DC6467F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5F62D0 + 4 * byte_1DC6467F5[v4]))();
}

_BYTE *sub_1DC5F62B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5F62D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5F62D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5F62E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5F62E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5F62F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UserSegmentationTreatmentData.CodingKeys()
{
  return &type metadata for UserSegmentationTreatmentData.CodingKeys;
}

unint64_t sub_1DC5F6310()
{
  unint64_t result;

  result = qword_1F036FDC0;
  if (!qword_1F036FDC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64694C, &type metadata for UserSegmentationTreatmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FDC0);
  }
  return result;
}

unint64_t sub_1DC5F6358()
{
  unint64_t result;

  result = qword_1EDB11118;
  if (!qword_1EDB11118)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6468BC, &type metadata for UserSegmentationTreatmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11118);
  }
  return result;
}

unint64_t sub_1DC5F63A0()
{
  unint64_t result;

  result = qword_1EDB11110;
  if (!qword_1EDB11110)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6468E4, &type metadata for UserSegmentationTreatmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11110);
  }
  return result;
}

_BYTE *WebSubscriptionData.init(webSubscriptionStatus:webSubscriptionChannelIDs:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

void WebSubscriptionData.webSubscriptionStatus.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *WebSubscriptionData.webSubscriptionStatus.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*WebSubscriptionData.webSubscriptionStatus.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionData.webSubscriptionChannelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionData.webSubscriptionChannelIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WebSubscriptionData.webSubscriptionChannelIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC5F645C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5F67D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5F6480()
{
  sub_1DC4B6F04();
  return sub_1DC62B604();
}

uint64_t sub_1DC5F64A8()
{
  sub_1DC4B6F04();
  return sub_1DC62B610();
}

uint64_t WebSubscriptionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  _QWORD v13[2];
  char v14;
  char v15;
  char v16;

  sub_1DC4B6E64(0, &qword_1F036FDC8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B6F04();
  sub_1DC62B5E0();
  if (!v2)
  {
    v15 = 0;
    sub_1DC5F669C();
    sub_1DC62B454();
    v10 = v16;
    sub_1DC4B72F4();
    v14 = 1;
    sub_1DC4B7298(&qword_1EDB11898, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1DC62B400();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DC5F669C()
{
  unint64_t result;

  result = qword_1F036FDD0;
  if (!qword_1F036FDD0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WebSubscriptionStatus, &type metadata for WebSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1F036FDD0);
  }
  return result;
}

uint64_t sub_1DC5F66E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebSubscriptionData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for WebSubscriptionData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WebSubscriptionData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WebSubscriptionData()
{
  return &type metadata for WebSubscriptionData;
}

ValueMetadata *type metadata accessor for WebSubscriptionData.CodingKeys()
{
  return &type metadata for WebSubscriptionData.CodingKeys;
}

unint64_t sub_1DC5F6790()
{
  unint64_t result;

  result = qword_1F036FDD8;
  if (!qword_1F036FDD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646B30, &type metadata for WebSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FDD8);
  }
  return result;
}

uint64_t sub_1DC5F67D4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64E480 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DC64E4A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

float PlaybackData.playbackSpeed.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void PlaybackData.playbackSpeed.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*PlaybackData.playbackSpeed.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PlaybackData __swiftcall PlaybackData.init(playbackSpeed:)(StocksAnalytics::PlaybackData playbackSpeed)
{
  StocksAnalytics::PlaybackData *v1;

  v1->playbackSpeed = playbackSpeed.playbackSpeed;
  return playbackSpeed;
}

uint64_t sub_1DC5F68E4()
{
  return 0x6B63616279616C70;
}

uint64_t sub_1DC5F6908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6B63616279616C70 && a2 == 0xED00006465657053)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5F69C0()
{
  sub_1DC5F6B00();
  return sub_1DC62B604();
}

uint64_t sub_1DC5F69E8()
{
  sub_1DC5F6B00();
  return sub_1DC62B610();
}

uint64_t PlaybackData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5F6C6C(0, &qword_1F036FDE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F6B00();
  sub_1DC62B5F8();
  sub_1DC62B4D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5F6B00()
{
  unint64_t result;

  result = qword_1F036FDE8;
  if (!qword_1F036FDE8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646D18, &type metadata for PlaybackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FDE8);
  }
  return result;
}

uint64_t PlaybackData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v13;

  sub_1DC5F6C6C(0, &qword_1F036FDF0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F6B00();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC62B448();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5F6C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5F6B00();
    v7 = a3(a1, &type metadata for PlaybackData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5F6CD0@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return PlaybackData.init(from:)(a1, a2);
}

uint64_t sub_1DC5F6CE4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5F6C6C(0, &qword_1F036FDE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F6B00();
  sub_1DC62B5F8();
  sub_1DC62B4D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for PlaybackData()
{
  return &type metadata for PlaybackData;
}

uint64_t storeEnumTagSinglePayload for PlaybackData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5F6E24 + 4 * byte_1DC646BA8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5F6E44 + 4 * byte_1DC646BAD[v4]))();
}

_BYTE *sub_1DC5F6E24(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5F6E44(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5F6E4C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5F6E54(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5F6E5C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5F6E64(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackData.CodingKeys()
{
  return &type metadata for PlaybackData.CodingKeys;
}

unint64_t sub_1DC5F6E84()
{
  unint64_t result;

  result = qword_1F036FDF8;
  if (!qword_1F036FDF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646CF0, &type metadata for PlaybackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FDF8);
  }
  return result;
}

unint64_t sub_1DC5F6ECC()
{
  unint64_t result;

  result = qword_1F036FE00;
  if (!qword_1F036FE00)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646C60, &type metadata for PlaybackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FE00);
  }
  return result;
}

unint64_t sub_1DC5F6F14()
{
  unint64_t result;

  result = qword_1F036FE08;
  if (!qword_1F036FE08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646C88, &type metadata for PlaybackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FE08);
  }
  return result;
}

StocksAnalytics::PaidSubscriberToSourceChannelMethod_optional __swiftcall PaidSubscriberToSourceChannelMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::PaidSubscriberToSourceChannelMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PaidSubscriberToSourceChannelMethod.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5F6FE0 + 4 * byte_1DC646D70[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5F6FE0()
{
  return 0x7070417377656ELL;
}

uint64_t sub_1DC5F6FF4()
{
  return 0x65726F7453707061;
}

uint64_t sub_1DC5F700C()
{
  return 0x6973626557627570;
}

void sub_1DC5F7028(char *a1)
{
  sub_1DC542284(*a1);
}

unint64_t sub_1DC5F7038()
{
  unint64_t result;

  result = qword_1F036FE10;
  if (!qword_1F036FE10)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriberToSourceChannelMethod, &type metadata for PaidSubscriberToSourceChannelMethod);
    atomic_store(result, (unint64_t *)&qword_1F036FE10);
  }
  return result;
}

void sub_1DC5F707C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5F70C8()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC5F7138()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5F7174()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5F71D0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5F7218()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::PaidSubscriberToSourceChannelMethod_optional sub_1DC5F7288(Swift::String *a1)
{
  return PaidSubscriberToSourceChannelMethod.init(rawValue:)(*a1);
}

uint64_t sub_1DC5F7294()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5F72C4 + 4 * byte_1DC646D80[*v0]))();
}

void sub_1DC5F72C4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x7070417377656ELL;
  a1[1] = v1;
}

void sub_1DC5F72DC(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F7453707061;
  a1[1] = 0xE800000000000000;
}

void sub_1DC5F72F8(_QWORD *a1@<X8>)
{
  *a1 = 0x6973626557627570;
  a1[1] = 0xEA00000000006574;
}

uint64_t sub_1DC5F7318()
{
  sub_1DC5F748C();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5F7374()
{
  sub_1DC5F748C();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for PaidSubscriberToSourceChannelMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC5F740C + 4 * byte_1DC646D89[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC5F7440 + 4 * byte_1DC646D84[v4]))();
}

uint64_t sub_1DC5F7440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F7448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5F7450);
  return result;
}

uint64_t sub_1DC5F745C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5F7464);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5F7468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5F7470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriberToSourceChannelMethod()
{
  return &type metadata for PaidSubscriberToSourceChannelMethod;
}

unint64_t sub_1DC5F748C()
{
  unint64_t result;

  result = qword_1EDB11308;
  if (!qword_1EDB11308)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriberToSourceChannelMethod, &type metadata for PaidSubscriberToSourceChannelMethod);
    atomic_store(result, (unint64_t *)&qword_1EDB11308);
  }
  return result;
}

uint64_t sub_1DC5F74D0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A788();
  __swift_allocate_value_buffer(v0, qword_1F036FE18);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F036FE18);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static VideoAdLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369228, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036FE18, a1);
}

uint64_t sub_1DC5F7570()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A998();
  __swift_allocate_value_buffer(v0, qword_1F036FE30);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F036FE30);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static VideoAdLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369230, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036FE30, a1);
}

uint64_t VideoAdLoadEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t VideoAdLoadEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*VideoAdLoadEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for VideoAdLoadEvent, (uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t type metadata accessor for VideoAdLoadEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036FEC8);
}

uint64_t VideoAdLoadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 20);
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.eventData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.userBundleSubscriptionContextData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.channelData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.videoAdData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adPlacementData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adFeedData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adGroupData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adLoadData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adLoadData.modify())()
{
  type metadata accessor for VideoAdLoadEvent(0);
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *Event;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for VideoAdLoadEvent(0);
  v5 = a1 + Event[5];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + Event[6];
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + Event[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + Event[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + Event[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + Event[10];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v12, v17);
  v18 = a1 + Event[11];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v12, v19);
  v20 = a1 + Event[12];
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
}

uint64_t VideoAdLoadEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for VideoAdLoadEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t type metadata accessor for VideoAdLoadEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036FF78);
}

uint64_t VideoAdLoadEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 24);
  v4 = *(_BYTE *)(v3 + 1);
  v5 = *(_BYTE *)(v3 + 2);
  v6 = *(_QWORD *)(v3 + 8);
  v7 = *(_QWORD *)(v3 + 32);
  v8 = *(_BYTE *)(v3 + 40);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_BYTE *)(a1 + 1) = v4;
  *(_BYTE *)(a1 + 2) = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdLoadEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t VideoAdLoadEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdLoadEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t VideoAdLoadEvent.Model.adLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for VideoAdLoadEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

__n128 VideoAdLoadEvent.Model.init(adUserData:eventData:userBundleSubscriptionContextData:channelData:videoAdData:adPlacementData:adFeedData:adGroupData:adLoadData:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, __n128 *a5@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>, uint64_t *a10)
{
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 *v24;
  __n128 result;
  _QWORD *v26;
  char *v27;
  __int128 v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;

  v12 = a1[1];
  v13 = *a3;
  v14 = a3[1];
  v15 = a3[2];
  v28 = *(_OWORD *)(a3 + 8);
  v16 = *((_QWORD *)a3 + 3);
  v17 = *((_QWORD *)a3 + 4);
  v18 = a3[40];
  v33 = *a4;
  v32 = *((_QWORD *)a4 + 2);
  v31 = *((_QWORD *)a4 + 3);
  v30 = *((_BYTE *)a4 + 32);
  v29 = *((_BYTE *)a4 + 33);
  v35 = *a5;
  v34 = a5[1].n128_u64[0];
  v37 = *a6;
  v36 = a6[1];
  v38 = *a7;
  v39 = *a8;
  v41 = *a10;
  v40 = *((_BYTE *)a10 + 8);
  *a9 = *a1;
  a9[1] = v12;
  v19 = (int *)type metadata accessor for VideoAdLoadEvent.Model(0);
  v20 = (char *)a9 + v19[5];
  v21 = sub_1DC62ABA8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = (char *)a9 + v19[6];
  *v22 = v13;
  v22[1] = v14;
  v22[2] = v15;
  *(_OWORD *)(v22 + 8) = v28;
  *((_QWORD *)v22 + 3) = v16;
  *((_QWORD *)v22 + 4) = v17;
  v22[40] = v18;
  v23 = (char *)a9 + v19[7];
  *(_OWORD *)v23 = v33;
  *((_QWORD *)v23 + 2) = v32;
  *((_QWORD *)v23 + 3) = v31;
  v23[32] = v30;
  v23[33] = v29;
  v24 = (__n128 *)((char *)a9 + v19[8]);
  result = v35;
  *v24 = v35;
  v24[1].n128_u64[0] = v34;
  v26 = (_QWORD *)((char *)a9 + v19[9]);
  *v26 = v37;
  v26[1] = v36;
  *((_BYTE *)a9 + v19[10]) = v38;
  *((_BYTE *)a9 + v19[11]) = v39;
  v27 = (char *)a9 + v19[12];
  *(_QWORD *)v27 = v41;
  v27[8] = v40;
  return result;
}

uint64_t sub_1DC5F8474(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5F84AC + 4 * byte_1DC646ED0[a1]))(0x6144726573556461, 0xEA00000000006174);
}

uint64_t sub_1DC5F84AC()
{
  return 0x746144746E657665;
}

unint64_t sub_1DC5F84C8()
{
  return 0xD000000000000021;
}

uint64_t sub_1DC5F84E4()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC5F8564()
{
  return 0x614464616F4C6461;
}

uint64_t sub_1DC5F8578()
{
  unsigned __int8 *v0;

  return sub_1DC5F8474(*v0);
}

uint64_t sub_1DC5F8580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5FB688(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5F85A4()
{
  sub_1DC5F89A4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5F85CC()
{
  sub_1DC5F89A4();
  return sub_1DC62B610();
}

uint64_t VideoAdLoadEvent.Model.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int *v11;
  char *v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _BYTE v29[24];
  __int128 v30;
  char v31;
  char v32;

  v3 = v1;
  sub_1DC5F8FFC(0, &qword_1F036FE58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v29[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5F89A4();
  sub_1DC62B5F8();
  v10 = v3[1];
  *(_QWORD *)v29 = *v3;
  *(_QWORD *)&v29[8] = v10;
  v32 = 0;
  sub_1DC4C0710();
  sub_1DC62B4E4();
  if (!v2)
  {
    v11 = (int *)type metadata accessor for VideoAdLoadEvent.Model(0);
    v29[0] = 1;
    sub_1DC62ABA8();
    sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
    sub_1DC62B4E4();
    v12 = (char *)v3 + v11[6];
    v13 = v12[1];
    v14 = v12[2];
    v15 = v12[40];
    v29[0] = *v12;
    v29[1] = v13;
    v29[2] = v14;
    *(_OWORD *)&v29[8] = *(_OWORD *)(v12 + 8);
    v30 = *(_OWORD *)(v12 + 24);
    v31 = v15;
    v32 = 2;
    sub_1DC4BF200();
    sub_1DC62B4E4();
    v16 = (char *)v3 + v11[7];
    v17 = *(_OWORD *)v16;
    v18 = *((_QWORD *)v16 + 2);
    v19 = *((_QWORD *)v16 + 3);
    v20 = v16[32];
    LOBYTE(v16) = v16[33];
    *(_OWORD *)v29 = v17;
    *(_QWORD *)&v29[16] = v18;
    *(_QWORD *)&v30 = v19;
    BYTE8(v30) = v20;
    BYTE9(v30) = (_BYTE)v16;
    v32 = 3;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v21 = (char *)v3 + v11[8];
    v22 = *((_QWORD *)v21 + 2);
    *(_OWORD *)v29 = *(_OWORD *)v21;
    *(_QWORD *)&v29[16] = v22;
    v32 = 4;
    sub_1DC55AAA0();
    sub_1DC62B490();
    v23 = (_QWORD *)((char *)v3 + v11[9]);
    v25 = *v23;
    v24 = v23[1];
    *(_QWORD *)v29 = v25;
    *(_QWORD *)&v29[8] = v24;
    v32 = 5;
    sub_1DC4D6C74();
    sub_1DC62B4E4();
    v29[0] = *((_BYTE *)v3 + v11[10]);
    v32 = 6;
    sub_1DC4C07B0();
    sub_1DC62B490();
    v29[0] = *((_BYTE *)v3 + v11[11]);
    v32 = 7;
    sub_1DC4D736C();
    sub_1DC62B490();
    v26 = (char *)v3 + v11[12];
    v27 = *(_QWORD *)v26;
    LOBYTE(v26) = v26[8];
    *(_QWORD *)v29 = v27;
    v29[8] = (_BYTE)v26;
    v32 = 8;
    sub_1DC5406D4();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5F89A4()
{
  unint64_t result;

  result = qword_1F036FE60;
  if (!qword_1F036FE60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647184, &type metadata for VideoAdLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FE60);
  }
  return result;
}

uint64_t VideoAdLoadEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  char v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _BYTE v42[24];
  __int128 v43;
  char v44;
  char v45;

  v36 = a2;
  v4 = sub_1DC62ABA8();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5F8FFC(0, &qword_1F036FE68, MEMORY[0x1E0DED048]);
  v37 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - v9;
  v41 = type metadata accessor for VideoAdLoadEvent.Model(0);
  MEMORY[0x1E0C80A78](v41);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC5F89A4();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v14 = v8;
  v45 = 0;
  sub_1DC4C06CC();
  v15 = v10;
  sub_1DC62B454();
  v16 = *(_QWORD *)&v42[8];
  *(_QWORD *)v12 = *(_QWORD *)v42;
  *((_QWORD *)v12 + 1) = v16;
  v42[0] = 1;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v17 = v39;
  sub_1DC62B454();
  v18 = (int *)v41;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v12[*(int *)(v41 + 20)], v6, v17);
  v45 = 2;
  sub_1DC4BF1BC();
  sub_1DC62B454();
  v19 = v42[1];
  v20 = v42[2];
  v21 = v44;
  v22 = &v12[v18[6]];
  *v22 = v42[0];
  v22[1] = v19;
  v22[2] = v20;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)&v42[8];
  *(_OWORD *)(v22 + 24) = v43;
  v22[40] = v21;
  v45 = 3;
  sub_1DC4C8E40();
  sub_1DC62B454();
  v23 = *(_QWORD *)&v42[16];
  v24 = v43;
  v25 = BYTE8(v43);
  v26 = BYTE9(v43);
  v27 = &v12[v18[7]];
  *(_OWORD *)v27 = *(_OWORD *)v42;
  *((_QWORD *)v27 + 2) = v23;
  *((_QWORD *)v27 + 3) = v24;
  v27[32] = v25;
  v27[33] = v26;
  v45 = 4;
  sub_1DC55AA58();
  sub_1DC62B400();
  v28 = (uint64_t)v40;
  v29 = *(_QWORD *)&v42[16];
  v30 = &v12[v18[8]];
  *(_OWORD *)v30 = *(_OWORD *)v42;
  *((_QWORD *)v30 + 2) = v29;
  v45 = 5;
  sub_1DC4D6C30();
  sub_1DC62B454();
  v31 = *(_QWORD *)&v42[8];
  v32 = &v12[v18[9]];
  *(_QWORD *)v32 = *(_QWORD *)v42;
  *((_QWORD *)v32 + 1) = v31;
  v45 = 6;
  sub_1DC4C076C();
  sub_1DC62B400();
  v12[v18[10]] = v42[0];
  v45 = 7;
  sub_1DC4D7328();
  sub_1DC62B400();
  v12[v18[11]] = v42[0];
  v45 = 8;
  sub_1DC54068C();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v37);
  v33 = v42[8];
  v34 = &v12[v18[12]];
  *(_QWORD *)v34 = *(_QWORD *)v42;
  v34[8] = v33;
  sub_1DC5F9058((uint64_t)v12, v36);
  __swift_destroy_boxed_opaque_existential_1(v28);
  return sub_1DC5F909C((uint64_t)v12);
}

void sub_1DC5F8FFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5F89A4();
    v7 = a3(a1, &type metadata for VideoAdLoadEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5F9058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoAdLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5F909C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoAdLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5F90D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5F90EC(_QWORD *a1)
{
  return VideoAdLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5F9100@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369228, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036FE18, a1);
}

uint64_t sub_1DC5F9124@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369230, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036FE30, a1);
}

uint64_t sub_1DC5F9148@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v13, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v13, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B6600();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for VideoAdLoadEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

uint64_t initializeWithCopy for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FA41C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B6600();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
                  v8 = v20;
                  v12 = *(_QWORD *)(v20 - 8);
                  v13 = a3[12];
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FA698(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B6600();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
                  v10 = v22;
                  v14 = *(_QWORD *)(v22 - 8);
                  v15 = a4[12];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5FA910()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1DC4B4B50(319, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  if (v0 <= 0x3F)
  {
    sub_1DC4B6600();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F036FE48, (void (*)(void))sub_1DC4BF1BC, (void (*)(void))sub_1DC4BF200);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1F036FE50, (void (*)(void))sub_1DC54068C, (void (*)(void))sub_1DC5406D4);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for VideoAdLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABA8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v4 + v13;
    v16 = (char *)a2 + v13;
    *v15 = *v16;
    *(_WORD *)(v15 + 1) = *(_WORD *)(v16 + 1);
    v17 = *((_QWORD *)v16 + 2);
    *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
    *((_QWORD *)v15 + 2) = v17;
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 4) = v18;
    v15[40] = v16[40];
    v19 = (char *)v4 + v14;
    v20 = (char *)a2 + v14;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
    *((_QWORD *)v19 + 3) = v22;
    v19[32] = v20[32];
    v19[33] = v20[33];
    v23 = a3[8];
    v24 = a3[9];
    v25 = (char *)v4 + v23;
    v26 = (char *)a2 + v23;
    *(_DWORD *)v25 = *(_DWORD *)v26;
    v27 = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    *((_QWORD *)v25 + 2) = v27;
    v28 = (_QWORD *)((char *)v4 + v24);
    v29 = (_QWORD *)((char *)a2 + v24);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
    v32 = a3[12];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VideoAdLoadEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VideoAdLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC62ABA8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *v14 = *v15;
  *(_WORD *)(v14 + 1) = *(_WORD *)(v15 + 1);
  v16 = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  *((_QWORD *)v14 + 2) = v16;
  v17 = *((_QWORD *)v15 + 4);
  *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
  *((_QWORD *)v14 + 4) = v17;
  v14[40] = v15[40];
  v18 = (char *)a1 + v13;
  v19 = (char *)a2 + v13;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = *((_QWORD *)v19 + 3);
  *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
  *((_QWORD *)v18 + 3) = v21;
  v18[32] = v19[32];
  v18[33] = v19[33];
  v22 = a3[8];
  v23 = a3[9];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  v26 = *((_QWORD *)v25 + 2);
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  *((_QWORD *)v24 + 2) = v26;
  v27 = (_QWORD *)((char *)a1 + v23);
  v28 = (_QWORD *)((char *)a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  v31 = a3[12];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VideoAdLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC62ABA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *v11 = *((_BYTE *)a2 + v10);
  v11[1] = *((_BYTE *)a2 + v10 + 1);
  v11[2] = *((_BYTE *)a2 + v10 + 2);
  *((_QWORD *)v11 + 1) = *(_QWORD *)((char *)a2 + v10 + 8);
  *((_QWORD *)v11 + 2) = *(_QWORD *)((char *)a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v11 + 3) = *((_QWORD *)v12 + 3);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[40] = v12[40];
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)((char *)a2 + v13);
  *((_QWORD *)v14 + 1) = *(_QWORD *)((char *)a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[32] = v15[32];
  v14[33] = v15[33];
  v16 = a3[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v22 = a3[12];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  return a1;
}

_OWORD *initializeWithTake for VideoAdLoadEvent.Model(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC62ABA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (_OWORD *)((char *)a1 + v10);
  v13 = (_OWORD *)((char *)a2 + v10);
  *(_OWORD *)((char *)v12 + 25) = *(_OWORD *)((char *)v13 + 25);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (char *)a1 + v11;
  v16 = (char *)a2 + v11;
  *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v18 = a3[8];
  v19 = a3[9];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v22 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  v23 = a3[12];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  return a1;
}

_QWORD *assignWithTake for VideoAdLoadEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DC62ABA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *v12 = *((_BYTE *)a2 + v11);
  v12[1] = *((_BYTE *)a2 + v11 + 1);
  v12[2] = *((_BYTE *)a2 + v11 + 2);
  v14 = *(_QWORD *)((char *)a2 + v11 + 16);
  *((_QWORD *)v12 + 1) = *(_QWORD *)((char *)a2 + v11 + 8);
  *((_QWORD *)v12 + 2) = v14;
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)v13 + 4);
  *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
  *((_QWORD *)v12 + 4) = v15;
  swift_bridgeObjectRelease();
  v12[40] = v13[40];
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)((char *)a2 + v16);
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)v18 + 3);
  *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
  *((_QWORD *)v17 + 3) = v20;
  swift_bridgeObjectRelease();
  v17[32] = v18[32];
  v17[33] = v18[33];
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v25 = *((_QWORD *)v23 + 1);
  v24 = *((_QWORD *)v23 + 2);
  *((_QWORD *)v22 + 1) = v25;
  *((_QWORD *)v22 + 2) = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  v32 = a3[12];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v34[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FB338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DC62ABA8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FB3C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1DC62ABA8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1DC5FB434()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1DC5FB530 + 4 * byte_1DC646EDE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1DC5FB564 + 4 * byte_1DC646ED9[v4]))();
}

uint64_t sub_1DC5FB564(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5FB56C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5FB574);
  return result;
}

uint64_t sub_1DC5FB580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5FB588);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1DC5FB58C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5FB594(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdLoadEvent.Model.CodingKeys;
}

unint64_t sub_1DC5FB5B4()
{
  unint64_t result;

  result = qword_1F036FFD0;
  if (!qword_1F036FFD0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64715C, &type metadata for VideoAdLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FFD0);
  }
  return result;
}

unint64_t sub_1DC5FB5FC()
{
  unint64_t result;

  result = qword_1F036FFD8;
  if (!qword_1F036FFD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6470CC, &type metadata for VideoAdLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FFD8);
  }
  return result;
}

unint64_t sub_1DC5FB644()
{
  unint64_t result;

  result = qword_1F036FFE0;
  if (!qword_1F036FFE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6470F4, &type metadata for VideoAdLoadEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036FFE0);
  }
  return result;
}

uint64_t sub_1DC5FB688(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6144726573556461 && a2 == 0xEA00000000006174;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DC64C310 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x614464616F4C6461 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

Swift::String_optional __swiftcall ExternalAnalyticsPanelIdProvider.panelIdentifier(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  v1 = 0;
  v2 = 0;
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t ExternalAnalyticsPanelIdProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExternalAnalyticsPanelIdProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DC5FBACC()
{
  return 0;
}

uint64_t dispatch thunk of ExternalAnalyticsPanelIdProviderType.panelIdentifier(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ExternalAnalyticsPanelIdProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExternalAnalyticsPanelIdProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DC5FBB0C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036FFE8, MEMORY[0x1E0CF8078]);
}

uint64_t static EditWatchlistNameEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369238, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036FFE8, a1);
}

uint64_t sub_1DC5FBB4C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0370000, MEMORY[0x1E0CF8380]);
}

uint64_t static EditWatchlistNameEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369240, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370000, a1);
}

uint64_t EditWatchlistNameEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t EditWatchlistNameEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EditWatchlistNameEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EditWatchlistNameEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t EditWatchlistNameEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EditWatchlistNameEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1DC5FBC6C()
{
  sub_1DC5FBDCC();
  return sub_1DC62B604();
}

uint64_t sub_1DC5FBC94()
{
  sub_1DC5FBDCC();
  return sub_1DC62B610();
}

uint64_t EditWatchlistNameEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5FBFE8(0, &qword_1F0370018, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5FBDCC();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5FBDCC()
{
  unint64_t result;

  result = qword_1F0370020;
  if (!qword_1F0370020)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6473F0, &type metadata for EditWatchlistNameEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370020);
  }
  return result;
}

uint64_t EditWatchlistNameEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5FBFE8(0, &qword_1F0370028, MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for EditWatchlistNameEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5FBDCC();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    v15 = v19;
    v14 = v20;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_1DC5FC058(v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5FBFE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5FBDCC();
    v7 = a3(a1, &type metadata for EditWatchlistNameEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for EditWatchlistNameEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370118);
}

uint64_t sub_1DC5FC058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditWatchlistNameEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5FC09C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditWatchlistNameEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5FC0B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5FBFE8(0, &qword_1F0370018, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5FBDCC();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC5FC1C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369238, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036FFE8, a1);
}

uint64_t sub_1DC5FC1E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369240, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370000, a1);
}

uint64_t getEnumTagSinglePayload for EditWatchlistNameEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FC214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t storeEnumTagSinglePayload for EditWatchlistNameEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FC22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t type metadata accessor for EditWatchlistNameEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370088);
}

uint64_t getEnumTagSinglePayload for EditWatchlistNameEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FC258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for EditWatchlistNameEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FC270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for EditWatchlistNameEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5FC2BC + 4 * byte_1DC647260[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5FC2DC + 4 * byte_1DC647265[v4]))();
}

_BYTE *sub_1DC5FC2BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5FC2DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5FC2E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5FC2EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5FC2F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5FC2FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EditWatchlistNameEvent.Model.CodingKeys()
{
  return &type metadata for EditWatchlistNameEvent.Model.CodingKeys;
}

unint64_t sub_1DC5FC31C()
{
  unint64_t result;

  result = qword_1F0370150;
  if (!qword_1F0370150)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6473C8, &type metadata for EditWatchlistNameEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370150);
  }
  return result;
}

unint64_t sub_1DC5FC364()
{
  unint64_t result;

  result = qword_1F0370158;
  if (!qword_1F0370158)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647338, &type metadata for EditWatchlistNameEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370158);
  }
  return result;
}

unint64_t sub_1DC5FC3AC()
{
  unint64_t result;

  result = qword_1F0370160;
  if (!qword_1F0370160)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647360, &type metadata for EditWatchlistNameEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370160);
  }
  return result;
}

uint64_t sub_1DC5FC3F0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0370168, MEMORY[0x1E0CF8078]);
}

uint64_t static AppReviewPromptRequestEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369248, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370168, a1);
}

uint64_t sub_1DC5FC430(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0370180, MEMORY[0x1E0CF8380]);
}

uint64_t static AppReviewPromptRequestEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369250, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370180, a1);
}

uint64_t AppReviewPromptRequestEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AppReviewPromptRequestEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppReviewPromptRequestEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppReviewPromptRequestEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t AppReviewPromptRequestEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppReviewPromptRequestEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1DC5FC550()
{
  sub_1DC5FC6B0();
  return sub_1DC62B604();
}

uint64_t sub_1DC5FC578()
{
  sub_1DC5FC6B0();
  return sub_1DC62B610();
}

uint64_t AppReviewPromptRequestEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5FC8CC(0, &qword_1F0370198, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5FC6B0();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5FC6B0()
{
  unint64_t result;

  result = qword_1F03701A0;
  if (!qword_1F03701A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6475D8, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03701A0);
  }
  return result;
}

uint64_t AppReviewPromptRequestEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5FC8CC(0, &qword_1F03701A8, MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5FC6B0();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    v15 = v19;
    v14 = v20;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_1DC5FC93C(v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5FC8CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5FC6B0();
    v7 = a3(a1, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for AppReviewPromptRequestEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370298);
}

uint64_t sub_1DC5FC93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5FC980@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppReviewPromptRequestEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5FC994(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5FC8CC(0, &qword_1F0370198, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5FC6B0();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC5FCAA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369248, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370168, a1);
}

uint64_t sub_1DC5FCAC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369250, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370180, a1);
}

uint64_t getEnumTagSinglePayload for AppReviewPromptRequestEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FCAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FCB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t type metadata accessor for AppReviewPromptRequestEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370208);
}

uint64_t getEnumTagSinglePayload for AppReviewPromptRequestEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FCB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FCB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5FCBA0 + 4 * byte_1DC647440[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5FCBC0 + 4 * byte_1DC647445[v4]))();
}

_BYTE *sub_1DC5FCBA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5FCBC0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5FCBC8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5FCBD0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5FCBD8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5FCBE0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppReviewPromptRequestEvent.Model.CodingKeys()
{
  return &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys;
}

unint64_t sub_1DC5FCC00()
{
  unint64_t result;

  result = qword_1F03702D0;
  if (!qword_1F03702D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6475B0, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03702D0);
  }
  return result;
}

unint64_t sub_1DC5FCC48()
{
  unint64_t result;

  result = qword_1F03702D8;
  if (!qword_1F03702D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647520, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03702D8);
  }
  return result;
}

unint64_t sub_1DC5FCC90()
{
  unint64_t result;

  result = qword_1F03702E0;
  if (!qword_1F03702E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647548, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03702E0);
  }
  return result;
}

StocksAnalytics::TrackVariant_optional __swiftcall TrackVariant.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::TrackVariant_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TrackVariant.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C706D6173;
  if (*v0 != 1)
    v1 = 1819047270;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC5FCD7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC545AC4(*a1, *a2);
}

unint64_t sub_1DC5FCD8C()
{
  unint64_t result;

  result = qword_1F03702E8;
  if (!qword_1F03702E8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TrackVariant, &type metadata for TrackVariant);
    atomic_store(result, (unint64_t *)&qword_1F03702E8);
  }
  return result;
}

uint64_t sub_1DC5FCDD0()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC5FCE64()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC5FCED4()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::TrackVariant_optional sub_1DC5FCF64(Swift::String *a1)
{
  return TrackVariant.init(rawValue:)(*a1);
}

void sub_1DC5FCF70(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x656C706D6173;
  if (v2 != 1)
  {
    v5 = 1819047270;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC5FCFC4()
{
  sub_1DC5FD138();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5FD020()
{
  sub_1DC5FD138();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for TrackVariant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5FD0B8 + 4 * byte_1DC64762D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5FD0EC + 4 * byte_1DC647628[v4]))();
}

uint64_t sub_1DC5FD0EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5FD0F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5FD0FCLL);
  return result;
}

uint64_t sub_1DC5FD108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5FD110);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5FD114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5FD11C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrackVariant()
{
  return &type metadata for TrackVariant;
}

unint64_t sub_1DC5FD138()
{
  unint64_t result;

  result = qword_1F03702F0;
  if (!qword_1F03702F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TrackVariant, &type metadata for TrackVariant);
    atomic_store(result, (unint64_t *)&qword_1F03702F0);
  }
  return result;
}

StocksAnalytics::AdJournalEntryStatus_optional __swiftcall AdJournalEntryStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AdJournalEntryStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdJournalEntryStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5FD204 + 4 * byte_1DC647750[*v0]))(0x64657461657263, 0xE700000000000000);
}

uint64_t sub_1DC5FD204()
{
  return 0x64656C696166;
}

uint64_t sub_1DC5FD218()
{
  return 0x676E69646E6570;
}

uint64_t sub_1DC5FD22C()
{
  return 0x6564726163736964;
}

void sub_1DC5FD270(char *a1)
{
  sub_1DC543E3C(*a1);
}

unint64_t sub_1DC5FD280()
{
  unint64_t result;

  result = qword_1F03702F8;
  if (!qword_1F03702F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryStatus, &type metadata for AdJournalEntryStatus);
    atomic_store(result, (unint64_t *)&qword_1F03702F8);
  }
  return result;
}

void sub_1DC5FD2C4()
{
  char *v0;

  sub_1DC602410(*v0);
}

void sub_1DC5FD2CC()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5FD308()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5FD388(uint64_t a1)
{
  char *v1;

  sub_1DC603634(a1, *v1);
}

StocksAnalytics::AdJournalEntryStatus_optional sub_1DC5FD390(Swift::String *a1)
{
  return AdJournalEntryStatus.init(rawValue:)(*a1);
}

uint64_t sub_1DC5FD39C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5FD3CC + 4 * byte_1DC64775C[*v0]))();
}

void sub_1DC5FD3CC(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

void sub_1DC5FD3E4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E69646E6570;
  a1[1] = v1;
}

void sub_1DC5FD3FC(_QWORD *a1@<X8>)
{
  *a1 = 0x6564726163736964;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1DC5FD444()
{
  sub_1DC5FD5B8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5FD4A0()
{
  sub_1DC5FD5B8();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC5FD538 + 4 * byte_1DC647767[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC5FD56C + 4 * byte_1DC647762[v4]))();
}

uint64_t sub_1DC5FD56C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5FD574(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5FD57CLL);
  return result;
}

uint64_t sub_1DC5FD588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5FD590);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC5FD594(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5FD59C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryStatus()
{
  return &type metadata for AdJournalEntryStatus;
}

unint64_t sub_1DC5FD5B8()
{
  unint64_t result;

  result = qword_1EDB101B0;
  if (!qword_1EDB101B0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryStatus, &type metadata for AdJournalEntryStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB101B0);
  }
  return result;
}

uint64_t sub_1DC5FD5FC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0370300, MEMORY[0x1E0CF8078]);
}

uint64_t static OutboundLinkTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369258, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370300, a1);
}

uint64_t sub_1DC5FD63C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0370318, MEMORY[0x1E0CF8380]);
}

uint64_t static OutboundLinkTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369260, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370318, a1);
}

uint64_t OutboundLinkTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t OutboundLinkTapEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*OutboundLinkTapEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t OutboundLinkTapEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OutboundLinkTapEvent(0) + 20);
  sub_1DC5FD72C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for OutboundLinkTapEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F03703A8);
}

void sub_1DC5FD72C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0370330)
  {
    sub_1DC535314();
    sub_1DC53535C();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0370330);
  }
}

uint64_t OutboundLinkTapEvent.linkData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OutboundLinkTapEvent(0) + 20);
  sub_1DC5FD72C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OutboundLinkTapEvent.linkData.modify())()
{
  type metadata accessor for OutboundLinkTapEvent(0);
  return nullsub_1;
}

uint64_t OutboundLinkTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for OutboundLinkTapEvent(0) + 20);
  sub_1DC5FD72C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t OutboundLinkTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t OutboundLinkTapEvent.Model.linkData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for OutboundLinkTapEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for OutboundLinkTapEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370438);
}

uint64_t OutboundLinkTapEvent.Model.init(eventData:linkData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for OutboundLinkTapEvent.Model(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1DC5FD920()
{
  _BYTE *v0;

  if (*v0)
    return 0x617461446B6E696CLL;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC5FD960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5FE768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5FD984()
{
  sub_1DC5FDB3C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5FD9AC()
{
  sub_1DC5FDB3C();
  return sub_1DC62B610();
}

uint64_t OutboundLinkTapEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1DC5FDE08(0, &qword_1F0370338, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5FDB3C();
  sub_1DC62B5F8();
  v11[15] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v11[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for OutboundLinkTapEvent.Model(0) + 20));
    v11[13] = 1;
    sub_1DC53535C();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5FDB3C()
{
  unint64_t result;

  result = qword_1F0370340;
  if (!qword_1F0370340)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647A4C, &type metadata for OutboundLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370340);
  }
  return result;
}

uint64_t OutboundLinkTapEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v21 = a2;
  v25 = sub_1DC62ABA8();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5FDE08(0, &qword_1F0370348, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for OutboundLinkTapEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5FDB3C();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = a1;
  v20 = v6;
  v12 = (uint64_t)v11;
  v13 = v22;
  v28 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v23;
  v14 = v24;
  v16 = v25;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1DC535314();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v14);
  *(_BYTE *)(v12 + *(int *)(v9 + 20)) = v27;
  sub_1DC5FDE64(v12, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1DC5FDEA8(v12);
}

void sub_1DC5FDE08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5FDB3C();
    v7 = a3(a1, &type metadata for OutboundLinkTapEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5FDE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OutboundLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5FDEA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OutboundLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5FDEE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OutboundLinkTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5FDEF8(_QWORD *a1)
{
  return OutboundLinkTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5FDF0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369258, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370300, a1);
}

uint64_t sub_1DC5FDF30@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369260, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370318, a1);
}

uint64_t sub_1DC5FDF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC5FD72C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for OutboundLinkTapEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC5FD72C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for OutboundLinkTapEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC5FD72C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5FD72C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5FD72C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5FD72C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5FD72C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OutboundLinkTapEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FE2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC5FD72C();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for OutboundLinkTapEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FE34C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC5FD72C();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5FE3C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC5FD72C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for OutboundLinkTapEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FE458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OutboundLinkTapEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5FE4DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1DC5FE554()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OutboundLinkTapEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5FE610 + 4 * byte_1DC647895[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5FE644 + 4 * byte_1DC647890[v4]))();
}

uint64_t sub_1DC5FE644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5FE64C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5FE654);
  return result;
}

uint64_t sub_1DC5FE660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5FE668);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5FE66C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5FE674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OutboundLinkTapEvent.Model.CodingKeys()
{
  return &type metadata for OutboundLinkTapEvent.Model.CodingKeys;
}

unint64_t sub_1DC5FE694()
{
  unint64_t result;

  result = qword_1F0370470;
  if (!qword_1F0370470)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647A24, &type metadata for OutboundLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370470);
  }
  return result;
}

unint64_t sub_1DC5FE6DC()
{
  unint64_t result;

  result = qword_1F0370478;
  if (!qword_1F0370478)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647994, &type metadata for OutboundLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370478);
  }
  return result;
}

unint64_t sub_1DC5FE724()
{
  unint64_t result;

  result = qword_1F0370480;
  if (!qword_1F0370480)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6479BC, &type metadata for OutboundLinkTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370480);
  }
  return result;
}

uint64_t sub_1DC5FE768(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC5FE864(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0370488, MEMORY[0x1E0CF8078]);
}

uint64_t static MediaViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370488, a1);
}

uint64_t sub_1DC5FE8A4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F03704A0, MEMORY[0x1E0CF8380]);
}

uint64_t static MediaViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369270, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F03704A0, a1);
}

uint64_t MediaViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t MediaViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MediaViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for MediaViewEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for MediaViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12B50);
}

uint64_t MediaViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.timedData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.newsArticleData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.groupData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.feedData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.mediaData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.viewData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.anfComponentData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.galleryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.galleryData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.issueData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.channelData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaViewEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaViewEvent.activeWatchlistData.modify())()
{
  type metadata accessor for MediaViewEvent(0);
  return nullsub_1;
}

uint64_t MediaViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MediaViewEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v10, v27);
}

uint64_t MediaViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MediaViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for MediaViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for MediaViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12C08);
}

uint64_t MediaViewEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t MediaViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 36));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1DC517D30(v4, v5);
}

uint64_t MediaViewEvent.Model.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 48);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 56));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

__n128 MediaViewEvent.Model.init(eventData:timedData:newsArticleData:groupData:feedData:mediaData:viewData:anfComponentData:galleryData:issueData:channelData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, uint64_t *a11, __n128 *a12, char *a13)
{
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  __n128 *v34;
  __n128 result;
  char v36;
  char v37;
  char v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  unint64_t v64;
  unint64_t v65;
  __n128 v66;
  char v67;

  v39 = *a3;
  v15 = *((_QWORD *)a3 + 2);
  v16 = *((_QWORD *)a3 + 3);
  v17 = *((_BYTE *)a3 + 32);
  v18 = *((_QWORD *)a3 + 5);
  v38 = *((_BYTE *)a3 + 48);
  v19 = *((_QWORD *)a3 + 7);
  v20 = *((_BYTE *)a3 + 64);
  v21 = *((_BYTE *)a3 + 65);
  v37 = *((_BYTE *)a3 + 66);
  v36 = *((_BYTE *)a3 + 67);
  v43 = a4[1];
  v44 = *a4;
  v42 = *((_QWORD *)a4 + 4);
  v41 = *((_QWORD *)a4 + 5);
  v46 = *a5;
  v45 = *((_QWORD *)a5 + 2);
  v51 = *a6;
  v50 = *((_QWORD *)a6 + 1);
  v49 = *((_QWORD *)a6 + 2);
  v48 = *((_DWORD *)a6 + 6);
  v47 = a6[28];
  v54 = *a7;
  v53 = a7[1];
  v52 = *((_WORD *)a7 + 8);
  v56 = *a8;
  v55 = a8[1];
  v59 = *a10;
  v58 = *((_QWORD *)a10 + 2);
  v57 = *((_DWORD *)a10 + 6);
  v60 = a11[1];
  v61 = *a11;
  v66 = *a12;
  v64 = a12[1].n128_u64[1];
  v65 = a12[1].n128_u64[0];
  v62 = a12[2].n128_u8[1];
  v63 = a12[2].n128_u8[0];
  v67 = *a13;
  v22 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (int *)type metadata accessor for MediaViewEvent.Model(0);
  v24 = a9 + v23[5];
  v25 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a2, v25);
  v26 = a9 + v23[6];
  *(_QWORD *)(v26 + 16) = v15;
  *(_QWORD *)(v26 + 24) = v16;
  *(_BYTE *)(v26 + 32) = v17;
  *(_QWORD *)(v26 + 40) = v18;
  *(_OWORD *)v26 = v39;
  *(_BYTE *)(v26 + 48) = v38;
  *(_QWORD *)(v26 + 56) = v19;
  *(_BYTE *)(v26 + 64) = v20;
  *(_BYTE *)(v26 + 65) = v21;
  *(_BYTE *)(v26 + 66) = v37;
  *(_BYTE *)(v26 + 67) = v36;
  v27 = a9 + v23[7];
  *(_OWORD *)v27 = v44;
  *(_OWORD *)(v27 + 16) = v43;
  *(_QWORD *)(v27 + 32) = v42;
  *(_QWORD *)(v27 + 40) = v41;
  v28 = a9 + v23[8];
  *(_OWORD *)v28 = v46;
  *(_QWORD *)(v28 + 16) = v45;
  v29 = a9 + v23[9];
  *(_BYTE *)v29 = v51;
  *(_QWORD *)(v29 + 8) = v50;
  *(_QWORD *)(v29 + 16) = v49;
  *(_DWORD *)(v29 + 24) = v48;
  *(_BYTE *)(v29 + 28) = v47;
  v30 = a9 + v23[10];
  *(_QWORD *)v30 = v54;
  *(_QWORD *)(v30 + 8) = v53;
  *(_WORD *)(v30 + 16) = v52;
  v31 = (_QWORD *)(a9 + v23[11]);
  *v31 = v56;
  v31[1] = v55;
  v32 = a9 + v23[12];
  *(_OWORD *)v32 = v59;
  *(_QWORD *)(v32 + 16) = v58;
  *(_DWORD *)(v32 + 24) = v57;
  v33 = (_QWORD *)(a9 + v23[13]);
  *v33 = v61;
  v33[1] = v60;
  v34 = (__n128 *)(a9 + v23[14]);
  result = v66;
  *v34 = v66;
  v34[1].n128_u64[0] = v65;
  v34[1].n128_u64[1] = v64;
  v34[2].n128_u8[0] = v63;
  v34[2].n128_u8[1] = v62;
  *(_BYTE *)(a9 + v23[15]) = v67;
  return result;
}

uint64_t sub_1DC5FFCBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5FFCF4 + 4 * byte_1DC647AA0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5FFCF4()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5FFD08()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC5FFD2C()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC5FFD40()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC5FFD7C()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5FFD98()
{
  return 0x447972656C6C6167;
}

unint64_t sub_1DC5FFDE0()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC5FFE00()
{
  unsigned __int8 *v0;

  return sub_1DC5FFCBC(*v0);
}

uint64_t sub_1DC5FFE08()
{
  sub_1DC60034C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5FFE30()
{
  sub_1DC60034C();
  return sub_1DC62B610();
}

uint64_t MediaViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  int v36;
  __int128 *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;

  v3 = v1;
  sub_1DC600D2C(0, &qword_1F03704B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v43 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60034C();
  sub_1DC62B5F8();
  LOBYTE(v45) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for MediaViewEvent.Model(0);
    LOBYTE(v45) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v45 = v12;
    *(_QWORD *)&v46 = v13;
    *((_QWORD *)&v46 + 1) = v14;
    LOBYTE(v47) = v15;
    *((_QWORD *)&v47 + 1) = v16;
    v48 = v17;
    v49 = v18;
    v50 = v19;
    v51 = v20;
    v52 = v21;
    v53 = (char)v11;
    v44 = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[7]);
    v23 = v22[1];
    v45 = *v22;
    v46 = v23;
    v47 = v22[2];
    v44 = 3;
    sub_1DC4C9004();
    sub_1DC62B490();
    v24 = (__int128 *)(v3 + v10[8]);
    v25 = *((_QWORD *)v24 + 2);
    v45 = *v24;
    *(_QWORD *)&v46 = v25;
    v44 = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v26 = (char *)(v3 + v10[9]);
    v27 = *v26;
    v28 = *((_QWORD *)v26 + 1);
    v29 = *((_QWORD *)v26 + 2);
    v30 = *((_DWORD *)v26 + 6);
    LOBYTE(v26) = v26[28];
    LOBYTE(v45) = v27;
    *((_QWORD *)&v45 + 1) = v28;
    *(_QWORD *)&v46 = v29;
    DWORD2(v46) = v30;
    BYTE12(v46) = (_BYTE)v26;
    v44 = 5;
    sub_1DC517060();
    sub_1DC62B4E4();
    v31 = (uint64_t *)(v3 + v10[10]);
    v32 = *v31;
    v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 8);
    *(_QWORD *)&v45 = v32;
    *((_QWORD *)&v45 + 1) = v33;
    LOWORD(v46) = (_WORD)v31;
    v44 = 6;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v45 = *(_OWORD *)(v3 + v10[11]);
    v44 = 7;
    sub_1DC4E4B34();
    sub_1DC62B490();
    v34 = (__int128 *)(v3 + v10[12]);
    v35 = *((_QWORD *)v34 + 2);
    v36 = *((_DWORD *)v34 + 6);
    v45 = *v34;
    *(_QWORD *)&v46 = v35;
    DWORD2(v46) = v36;
    v44 = 8;
    sub_1DC4EA3D8();
    sub_1DC62B490();
    v45 = *(_OWORD *)(v3 + v10[13]);
    v44 = 9;
    sub_1DC4C9674();
    sub_1DC62B490();
    v37 = (__int128 *)(v3 + v10[14]);
    v38 = *v37;
    v39 = *((_QWORD *)v37 + 2);
    v40 = *((_QWORD *)v37 + 3);
    v41 = *((_BYTE *)v37 + 32);
    LOBYTE(v37) = *((_BYTE *)v37 + 33);
    v45 = v38;
    *(_QWORD *)&v46 = v39;
    *((_QWORD *)&v46 + 1) = v40;
    LOBYTE(v47) = v41;
    BYTE1(v47) = (_BYTE)v37;
    v44 = 10;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    LOBYTE(v45) = *(_BYTE *)(v3 + v10[15]);
    v44 = 11;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC60034C()
{
  unint64_t result;

  result = qword_1F03704C0;
  if (!qword_1F03704C0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647DCC, &type metadata for MediaViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03704C0);
  }
  return result;
}

uint64_t MediaViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  int v19;
  char *v20;
  uint64_t v21;
  int *v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  char *v41;
  uint64_t v42;
  __int16 v43;
  char *v44;
  uint64_t v45;
  int v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  int *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  char v75;
  char v76;
  int v77;
  char v78;

  v58 = a2;
  v4 = sub_1DC62ABC0();
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62ABA8();
  v62 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC600D2C(0, &qword_1F03704C8, MEMORY[0x1E0DED048]);
  v63 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v58 - v12;
  v67 = (int *)type metadata accessor for MediaViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v67);
  v66 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1DC60034C();
  v59 = v13;
  sub_1DC62B5E0();
  if (v2)
  {
    v65 = v2;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    LODWORD(v63) = 0;
    v19 = 0;
    v77 = 0;
  }
  else
  {
    v16 = v11;
    LOBYTE(v68) = 0;
    sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1DC62B454();
    v17 = v7;
    v20 = v66;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v66, v9, v7);
    LOBYTE(v68) = 1;
    sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v21 = v61;
    sub_1DC62B454();
    v22 = v67;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v20[v67[5]], v6, v21);
    v78 = 2;
    sub_1DC4C18A0();
    sub_1DC62B454();
    v23 = v69;
    v24 = v70;
    v25 = *((_QWORD *)&v70 + 1);
    v26 = v71;
    v27 = v72;
    v28 = v73;
    v29 = v74;
    v30 = v75;
    v31 = v76;
    v32 = &v20[v22[6]];
    *(_OWORD *)v32 = v68;
    *((_OWORD *)v32 + 1) = v23;
    v32[32] = v24;
    *((_QWORD *)v32 + 5) = v25;
    v32[48] = v26;
    *((_QWORD *)v32 + 7) = v27;
    v32[64] = v28;
    v32[65] = v29;
    v32[66] = v30;
    v32[67] = v31;
    v78 = 3;
    sub_1DC4C8FC0();
    sub_1DC62B400();
    v33 = &v20[v22[7]];
    v34 = v69;
    *(_OWORD *)v33 = v68;
    *((_OWORD *)v33 + 1) = v34;
    *((_OWORD *)v33 + 2) = v70;
    v78 = 4;
    sub_1DC4BEF94();
    sub_1DC62B400();
    v35 = v69;
    v36 = &v20[v22[8]];
    *(_OWORD *)v36 = v68;
    *((_QWORD *)v36 + 2) = v35;
    v78 = 5;
    sub_1DC51701C();
    sub_1DC62B454();
    v37 = *((_QWORD *)&v68 + 1);
    v38 = v69;
    v39 = DWORD2(v69);
    v40 = BYTE12(v69);
    v41 = &v20[v22[9]];
    *v41 = v68;
    *((_QWORD *)v41 + 1) = v37;
    *((_QWORD *)v41 + 2) = v38;
    *((_DWORD *)v41 + 6) = v39;
    v41[28] = v40;
    v78 = 6;
    sub_1DC4BEDAC();
    sub_1DC62B454();
    v42 = *((_QWORD *)&v68 + 1);
    v43 = v69;
    v44 = &v20[v22[10]];
    *(_QWORD *)v44 = v68;
    *((_QWORD *)v44 + 1) = v42;
    *((_WORD *)v44 + 8) = v43;
    v78 = 7;
    sub_1DC4E4AEC();
    sub_1DC62B400();
    *(_OWORD *)&v20[v22[11]] = v68;
    v78 = 8;
    sub_1DC4EA390();
    sub_1DC62B400();
    v77 = 1;
    v45 = v69;
    v46 = DWORD2(v69);
    v47 = &v20[v22[12]];
    *(_OWORD *)v47 = v68;
    *((_QWORD *)v47 + 2) = v45;
    *((_DWORD *)v47 + 6) = v46;
    v78 = 9;
    sub_1DC4C9630();
    sub_1DC62B400();
    v65 = 0;
    *(_OWORD *)&v66[v67[13]] = v68;
    v78 = 10;
    sub_1DC4C8E40();
    v48 = v65;
    sub_1DC62B454();
    v65 = v48;
    if (v48)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v59, v63);
      LODWORD(v63) = 0;
      v19 = 1;
    }
    else
    {
      v49 = v69;
      v50 = v70;
      v51 = BYTE1(v70);
      v52 = &v66[v67[14]];
      *(_OWORD *)v52 = v68;
      *((_OWORD *)v52 + 1) = v49;
      v52[32] = v50;
      v52[33] = v51;
      v78 = 11;
      sub_1DC4C9930();
      v53 = v65;
      sub_1DC62B400();
      v65 = v53;
      if (!v53)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v59, v63);
        v57 = (uint64_t)v66;
        v66[v67[15]] = v68;
        sub_1DC600D88(v57, v58);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
        return sub_1DC600DCC(v57);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v59, v63);
      v19 = 1;
      LODWORD(v63) = 1;
    }
    v54 = v61;
    v55 = v66;
    v56 = v67;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v55, v17);
    (*(void (**)(char *, uint64_t))(v60 + 8))(&v55[v56[5]], v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC4CB1B4(*(_QWORD *)&v55[v56[7]], *(_QWORD *)&v55[v56[7] + 8], *(_QWORD *)&v55[v56[7] + 16]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1DC519178(*(_QWORD *)&v55[v56[11]], *(_QWORD *)&v55[v56[11] + 8]);
    if ((v77 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  if (!v19)
  {
    if (!(_DWORD)v63)
      return result;
    goto LABEL_10;
  }
LABEL_6:
  result = swift_bridgeObjectRelease();
  if ((v63 & 1) == 0)
    return result;
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC600D2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC60034C();
    v7 = a3(a1, &type metadata for MediaViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC600D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC600DCC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC600E08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC600E1C(_QWORD *a1)
{
  return MediaViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC600E30@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370488, a1);
}

uint64_t sub_1DC600E54@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369270, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F03704A0, a1);
}

uint64_t getEnumTagSinglePayload for MediaViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC600E84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6011AC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for MediaViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6014DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC601594(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC60163C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1DC601770 + 4 * byte_1DC647AB1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1DC6017A4 + 4 * byte_1DC647AAC[v4]))();
}

uint64_t sub_1DC6017A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6017AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC6017B4);
  return result;
}

uint64_t sub_1DC6017C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC6017C8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1DC6017CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6017D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaViewEvent.Model.CodingKeys()
{
  return &type metadata for MediaViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC6017F4()
{
  unint64_t result;

  result = qword_1F03704D0;
  if (!qword_1F03704D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647DA4, &type metadata for MediaViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03704D0);
  }
  return result;
}

unint64_t sub_1DC60183C()
{
  unint64_t result;

  result = qword_1F03704D8;
  if (!qword_1F03704D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647D14, &type metadata for MediaViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03704D8);
  }
  return result;
}

unint64_t sub_1DC601884()
{
  unint64_t result;

  result = qword_1F03704E0;
  if (!qword_1F03704E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC647D3C, &type metadata for MediaViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03704E0);
  }
  return result;
}

void sub_1DC6018C8(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC601918()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC6019A0(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6019F4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC601A78(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC601AC8()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC601B30(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC601B80()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC601C38(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC601C88()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC601D30(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC601D7C()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC601DE8(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC601E30()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC601ECC(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC601F1C()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC601F94(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC601FE4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC602078(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6020C8()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC602144(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC602194()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC60222C(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC60227C()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC602320(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC602368()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC602410(char a1)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC602460()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC6024F4()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC602594(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC6025D4()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC6026C4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC602704()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC6027B0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC6027F0()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC602894(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC6028D4()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC6029B8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC6029F8()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC602ACC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC602B0C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC602C10(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC602C50()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC602D3C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC602D7C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC602E48(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC602E94()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC602F74(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC602FC0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603068(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6030B4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603158(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6031A4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC60329C(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6032E8()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC6033A0(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6033EC()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC6034AC(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6034F4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603560(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6035B0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603634(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC603680()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603714(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC603760()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC6037F4()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603890(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6038D4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603970(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC6039BC()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603A54(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC603AA0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603B1C(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC603B68()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603BE0(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC603C2C()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603C94(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC603CE0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603D7C(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC603DC8()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC603E50(uint64_t a1, char a2)
{
  sub_1DC62B5B0();
  __asm { BR              X10 }
}

uint64_t sub_1DC603E94()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::OnboardingScreenType_optional __swiftcall OnboardingScreenType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::OnboardingScreenType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t OnboardingScreenType.rawValue.getter()
{
  _BYTE *v0;
  int v1;
  unint64_t v2;

  v1 = *v0;
  v2 = 0xD000000000000011;
  if (v1 != 1)
    v2 = 0xD000000000000012;
  if (*v0)
    return v2;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC603FF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC543ADC(*a1, *a2);
}

unint64_t sub_1DC604000()
{
  unint64_t result;

  result = qword_1F03704E8;
  if (!qword_1F03704E8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OnboardingScreenType, &type metadata for OnboardingScreenType);
    atomic_store(result, (unint64_t *)&qword_1F03704E8);
  }
  return result;
}

uint64_t sub_1DC604044()
{
  return sub_1DC6024F4();
}

uint64_t sub_1DC60404C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC6040C8()
{
  return sub_1DC6037F4();
}

StocksAnalytics::OnboardingScreenType_optional sub_1DC6040D0(Swift::String *a1)
{
  return OnboardingScreenType.init(rawValue:)(*a1);
}

void sub_1DC6040DC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x80000001DC64BB90;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0xD000000000000012;
    v4 = 0x80000001DC64BBB0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC60413C()
{
  sub_1DC6042B0();
  return sub_1DC62B13C();
}

uint64_t sub_1DC604198()
{
  sub_1DC6042B0();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC604230 + 4 * byte_1DC647F17[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC604264 + 4 * byte_1DC647F12[v4]))();
}

uint64_t sub_1DC604264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60426C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC604274);
  return result;
}

uint64_t sub_1DC604280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC604288);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC60428C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC604294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenType()
{
  return &type metadata for OnboardingScreenType;
}

unint64_t sub_1DC6042B0()
{
  unint64_t result;

  result = qword_1F03704F0;
  if (!qword_1F03704F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OnboardingScreenType, &type metadata for OnboardingScreenType);
    atomic_store(result, (unint64_t *)&qword_1F03704F0);
  }
  return result;
}

StocksAnalytics::FeedType_optional __swiftcall FeedType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::FeedType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC60437C + 4 * byte_1DC648034[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC60437C()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1DC604390()
{
  return 0x756F59726F66;
}

uint64_t sub_1DC6043A4()
{
  return 6385509;
}

void sub_1DC6043B4(char *a1)
{
  sub_1DC541CB8(*a1);
}

unint64_t sub_1DC6043C4()
{
  unint64_t result;

  result = qword_1F03704F8;
  if (!qword_1F03704F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedType, &type metadata for FeedType);
    atomic_store(result, (unint64_t *)&qword_1F03704F8);
  }
  return result;
}

void sub_1DC604408()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC604454()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC6044B4()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC6044F0()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC60453C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC604584()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::FeedType_optional sub_1DC6045E4(Swift::String *a1)
{
  return FeedType.init(rawValue:)(*a1);
}

uint64_t sub_1DC6045F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC604620 + 4 * byte_1DC648044[*v0]))();
}

void sub_1DC604620(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F626D7973;
  a1[1] = 0xE600000000000000;
}

void sub_1DC604638(_QWORD *a1@<X8>)
{
  *a1 = 0x756F59726F66;
  a1[1] = 0xE600000000000000;
}

void sub_1DC604650(_QWORD *a1@<X8>)
{
  *a1 = 6385509;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1DC604664()
{
  sub_1DC6047C8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC6046C0()
{
  sub_1DC6047C8();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for FeedType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC604758 + 4 * byte_1DC64804D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC60478C + 4 * byte_1DC648048[v4]))();
}

uint64_t sub_1DC60478C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC604794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC60479CLL);
  return result;
}

uint64_t sub_1DC6047A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC6047B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC6047B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6047BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1DC6047C8()
{
  unint64_t result;

  result = qword_1EDB11698;
  if (!qword_1EDB11698)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedType, &type metadata for FeedType);
    atomic_store(result, (unint64_t *)&qword_1EDB11698);
  }
  return result;
}

StocksAnalytics::SymbolChartDisplayErrorCode_optional __swiftcall SymbolChartDisplayErrorCode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::SymbolChartDisplayErrorCode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SymbolChartDisplayErrorCode.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 0x7245726576726573;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC6048CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC5427A4(*a1, *a2);
}

unint64_t sub_1DC6048DC()
{
  unint64_t result;

  result = qword_1F0370500;
  if (!qword_1F0370500)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDisplayErrorCode, &type metadata for SymbolChartDisplayErrorCode);
    atomic_store(result, (unint64_t *)&qword_1F0370500);
  }
  return result;
}

uint64_t sub_1DC604920()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC6049CC()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC604A54()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::SymbolChartDisplayErrorCode_optional sub_1DC604AFC(Swift::String *a1)
{
  return SymbolChartDisplayErrorCode.init(rawValue:)(*a1);
}

void sub_1DC604B08(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x80000001DC64BBD0;
  v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    v5 = 0x7245726576726573;
    v4 = 0xEB00000000726F72;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC604B74()
{
  sub_1DC604CE8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC604BD0()
{
  sub_1DC604CE8();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for SymbolChartDisplayErrorCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC604C68 + 4 * byte_1DC648175[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC604C9C + 4 * byte_1DC648170[v4]))();
}

uint64_t sub_1DC604C9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC604CA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC604CACLL);
  return result;
}

uint64_t sub_1DC604CB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC604CC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC604CC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC604CCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDisplayErrorCode()
{
  return &type metadata for SymbolChartDisplayErrorCode;
}

unint64_t sub_1DC604CE8()
{
  unint64_t result;

  result = qword_1F0370508;
  if (!qword_1F0370508)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDisplayErrorCode, &type metadata for SymbolChartDisplayErrorCode);
    atomic_store(result, (unint64_t *)&qword_1F0370508);
  }
  return result;
}

void BadgeData.badgeType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *BadgeData.badgeType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*BadgeData.badgeType.modify())()
{
  return nullsub_1;
}

void BadgeData.storyType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *BadgeData.storyType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*BadgeData.storyType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::BadgeData __swiftcall BadgeData.init(badgeType:storyType:)(StocksAnalytics::BadgeType badgeType, StocksAnalytics::StoryType_optional storyType)
{
  _BYTE *v2;
  char v3;
  StocksAnalytics::BadgeData result;

  v3 = *(_BYTE *)storyType.value;
  *v2 = *(_BYTE *)badgeType;
  v2[1] = v3;
  result.badgeType = badgeType;
  return result;
}

uint64_t sub_1DC604D90()
{
  _BYTE *v0;

  if (*v0)
    return 0x70795479726F7473;
  else
    return 0x7079546567646162;
}

uint64_t sub_1DC604DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC605564(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC604DEC()
{
  sub_1DC604F90();
  return sub_1DC62B604();
}

uint64_t sub_1DC604E14()
{
  sub_1DC604F90();
  return sub_1DC62B610();
}

uint64_t BadgeData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1DC6051E0(0, &qword_1EDB11B10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC604F90();
  sub_1DC62B5F8();
  v16 = v9;
  v15 = 0;
  sub_1DC604FD4();
  sub_1DC62B4E4();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1DC605018();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC604F90()
{
  unint64_t result;

  result = qword_1EDB11720;
  if (!qword_1EDB11720)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648414, &type metadata for BadgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11720);
  }
  return result;
}

unint64_t sub_1DC604FD4()
{
  unint64_t result;

  result = qword_1EDB11748;
  if (!qword_1EDB11748)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BadgeType, &type metadata for BadgeType);
    atomic_store(result, (unint64_t *)&qword_1EDB11748);
  }
  return result;
}

unint64_t sub_1DC605018()
{
  unint64_t result;

  result = qword_1EDB11808;
  if (!qword_1EDB11808)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoryType, &type metadata for StoryType);
    atomic_store(result, (unint64_t *)&qword_1EDB11808);
  }
  return result;
}

uint64_t BadgeData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1DC6051E0(0, &qword_1EDB12C68, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC604F90();
  sub_1DC62B5E0();
  if (!v2)
  {
    v16 = 0;
    sub_1DC60523C();
    sub_1DC62B454();
    v10 = v17;
    v14 = 1;
    sub_1DC605280();
    sub_1DC62B400();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC6051E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC604F90();
    v7 = a3(a1, &type metadata for BadgeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC60523C()
{
  unint64_t result;

  result = qword_1EDB12C70;
  if (!qword_1EDB12C70)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BadgeType, &type metadata for BadgeType);
    atomic_store(result, (unint64_t *)&qword_1EDB12C70);
  }
  return result;
}

unint64_t sub_1DC605280()
{
  unint64_t result;

  result = qword_1EDB12C78;
  if (!qword_1EDB12C78)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoryType, &type metadata for StoryType);
    atomic_store(result, (unint64_t *)&qword_1EDB12C78);
  }
  return result;
}

uint64_t sub_1DC6052CC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return BadgeData.init(from:)(a1, a2);
}

uint64_t sub_1DC6052E0(_QWORD *a1)
{
  return BadgeData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for BadgeData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65283 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65283 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC605340 + 4 * byte_1DC64829D[v4]))();
  *a1 = a2 - 253;
  return ((uint64_t (*)(void))((char *)sub_1DC605374 + 4 * byte_1DC648298[v4]))();
}

uint64_t sub_1DC605374(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC60537C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1DC605384);
  return result;
}

uint64_t sub_1DC605390(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1DC605398);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC60539C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC6053A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BadgeData()
{
  return &type metadata for BadgeData;
}

uint64_t storeEnumTagSinglePayload for BadgeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC60540C + 4 * byte_1DC6482A7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC605440 + 4 * byte_1DC6482A2[v4]))();
}

uint64_t sub_1DC605440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC605448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC605450);
  return result;
}

uint64_t sub_1DC60545C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC605464);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC605468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC605470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BadgeData.CodingKeys()
{
  return &type metadata for BadgeData.CodingKeys;
}

unint64_t sub_1DC605490()
{
  unint64_t result;

  result = qword_1F0370510;
  if (!qword_1F0370510)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6483EC, &type metadata for BadgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370510);
  }
  return result;
}

unint64_t sub_1DC6054D8()
{
  unint64_t result;

  result = qword_1EDB11730;
  if (!qword_1EDB11730)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64835C, &type metadata for BadgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11730);
  }
  return result;
}

unint64_t sub_1DC605520()
{
  unint64_t result;

  result = qword_1EDB11728;
  if (!qword_1EDB11728)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648384, &type metadata for BadgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11728);
  }
  return result;
}

uint64_t sub_1DC605564(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7079546567646162 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70795479726F7473 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void __swiftcall AmsMarketingItemData.init(amsPurchaseID:campaignID:isPaidBundleViaOffer:)(StocksAnalytics::AmsMarketingItemData *__return_ptr retstr, Swift::String_optional amsPurchaseID, Swift::String_optional campaignID, Swift::Bool_optional isPaidBundleViaOffer)
{
  retstr->amsPurchaseID = amsPurchaseID;
  retstr->campaignID = campaignID;
  retstr->isPaidBundleViaOffer = isPaidBundleViaOffer;
}

uint64_t AmsMarketingItemData.amsPurchaseID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AmsMarketingItemData.amsPurchaseID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AmsMarketingItemData.amsPurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t AmsMarketingItemData.campaignID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AmsMarketingItemData.campaignID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AmsMarketingItemData.campaignID.modify())()
{
  return nullsub_1;
}

uint64_t AmsMarketingItemData.isPaidBundleViaOffer.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AmsMarketingItemData.isPaidBundleViaOffer.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*AmsMarketingItemData.isPaidBundleViaOffer.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC60577C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6E676961706D6163;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x6863727550736D61;
}

uint64_t sub_1DC6057EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC6060A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC605810()
{
  sub_1DC6059C8();
  return sub_1DC62B604();
}

uint64_t sub_1DC605838()
{
  sub_1DC6059C8();
  return sub_1DC62B610();
}

uint64_t AmsMarketingItemData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1DC605C0C(0, &qword_1EDB11A88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC6059C8();
  sub_1DC62B5F8();
  v15 = 0;
  v9 = v11[3];
  sub_1DC62B478();
  if (!v9)
  {
    v14 = 1;
    sub_1DC62B478();
    v13 = 2;
    sub_1DC62B484();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC6059C8()
{
  unint64_t result;

  result = qword_1EDB101B8;
  if (!qword_1EDB101B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6485F8, &type metadata for AmsMarketingItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB101B8);
  }
  return result;
}

uint64_t AmsMarketingItemData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  sub_1DC605C0C(0, &qword_1F0370518, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC6059C8();
  sub_1DC62B5E0();
  if (!v2)
  {
    v22 = 0;
    v10 = sub_1DC62B3E8();
    v13 = v12;
    v19 = v10;
    v21 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1DC62B3E8();
    v16 = v15;
    v18 = v14;
    v20 = 2;
    swift_bridgeObjectRetain();
    v17 = sub_1DC62B3F4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)a2 = v19;
    *(_QWORD *)(a2 + 8) = v13;
    *(_QWORD *)(a2 + 16) = v18;
    *(_QWORD *)(a2 + 24) = v16;
    *(_BYTE *)(a2 + 32) = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC605C0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC6059C8();
    v7 = a3(a1, &type metadata for AmsMarketingItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC605C6C()
{
  unint64_t result;

  result = qword_1EDB101E0;
  if (!qword_1EDB101E0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AmsMarketingItemData, &type metadata for AmsMarketingItemData);
    atomic_store(result, (unint64_t *)&qword_1EDB101E0);
  }
  return result;
}

unint64_t sub_1DC605CB4()
{
  unint64_t result;

  result = qword_1EDB101D8;
  if (!qword_1EDB101D8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AmsMarketingItemData, &type metadata for AmsMarketingItemData);
    atomic_store(result, (unint64_t *)&qword_1EDB101D8);
  }
  return result;
}

uint64_t sub_1DC605CF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AmsMarketingItemData.init(from:)(a1, a2);
}

uint64_t sub_1DC605D0C(_QWORD *a1)
{
  return AmsMarketingItemData.encode(to:)(a1);
}

uint64_t initializeWithCopy for AmsMarketingItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AmsMarketingItemData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AmsMarketingItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AmsMarketingItemData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AmsMarketingItemData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AmsMarketingItemData()
{
  return &type metadata for AmsMarketingItemData;
}

uint64_t storeEnumTagSinglePayload for AmsMarketingItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC605F48 + 4 * byte_1DC648475[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC605F7C + 4 * byte_1DC648470[v4]))();
}

uint64_t sub_1DC605F7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC605F84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC605F8CLL);
  return result;
}

uint64_t sub_1DC605F98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC605FA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC605FA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC605FAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AmsMarketingItemData.CodingKeys()
{
  return &type metadata for AmsMarketingItemData.CodingKeys;
}

unint64_t sub_1DC605FCC()
{
  unint64_t result;

  result = qword_1F0370520;
  if (!qword_1F0370520)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6485D0, &type metadata for AmsMarketingItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370520);
  }
  return result;
}

unint64_t sub_1DC606014()
{
  unint64_t result;

  result = qword_1EDB101C8;
  if (!qword_1EDB101C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648540, &type metadata for AmsMarketingItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB101C8);
  }
  return result;
}

unint64_t sub_1DC60605C()
{
  unint64_t result;

  result = qword_1EDB101C0;
  if (!qword_1EDB101C0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648568, &type metadata for AmsMarketingItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB101C0);
  }
  return result;
}

uint64_t sub_1DC6060A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6863727550736D61 && a2 == 0xED00004449657361;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEA00000000004449 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64E260)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t static AppSessionStartEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E300, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB101E8, a1);
}

uint64_t static AppSessionStartEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E308, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10200, a1);
}

uint64_t AppSessionStartEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AppSessionStartEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppSessionStartEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionStartEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.watchedSymbolListData.modify())()
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.orientationData.modify())()
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.watchlistSummaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppSessionStartEvent.watchlistSummaryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.watchlistSummaryData.modify())()
{
  type metadata accessor for AppSessionStartEvent(0);
  return nullsub_1;
}

uint64_t AppSessionStartEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *started;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  started = (int *)type metadata accessor for AppSessionStartEvent(0);
  v5 = a1 + started[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + started[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + started[7];
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t AppSessionStartEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppSessionStartEvent.Model.watchedSymbolListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 20));
  return swift_bridgeObjectRetain();
}

uint64_t AppSessionStartEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionStartEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppSessionStartEvent.Model.watchlistSummaryData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 28));
  return swift_bridgeObjectRetain();
}

int *AppSessionStartEvent.Model.init(eventData:watchedSymbolListData:orientationData:watchlistSummaryData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int16 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  int *result;

  v7 = *a2;
  v8 = *a3;
  v9 = *a4;
  v10 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  result = (int *)type metadata accessor for AppSessionStartEvent.Model(0);
  *(_QWORD *)(a5 + result[5]) = v7;
  *(_WORD *)(a5 + result[6]) = v8;
  *(_QWORD *)(a5 + result[7]) = v9;
  return result;
}

uint64_t sub_1DC6067EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC606820 + 4 * byte_1DC648650[*v0]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1DC606820()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC606840()
{
  return 0x7461746E6569726FLL;
}

unint64_t sub_1DC606864()
{
  return 0xD000000000000014;
}

uint64_t sub_1DC606880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC607ED8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC6068A4()
{
  sub_1DC606AE8();
  return sub_1DC62B604();
}

uint64_t sub_1DC6068CC()
{
  sub_1DC606AE8();
  return sub_1DC62B610();
}

uint64_t AppSessionStartEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *started;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  sub_1DC606E60(0, &qword_1F0370528, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC606AE8();
  sub_1DC62B5F8();
  LOBYTE(v13) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    started = (int *)type metadata accessor for AppSessionStartEvent.Model(0);
    v13 = *(_QWORD *)(v3 + started[5]);
    HIBYTE(v12) = 1;
    sub_1DC4BF5A0();
    sub_1DC62B4E4();
    LOWORD(v13) = *(_WORD *)(v3 + started[6]);
    HIBYTE(v12) = 2;
    sub_1DC4C0058();
    sub_1DC62B4E4();
    v13 = *(_QWORD *)(v3 + started[7]);
    HIBYTE(v12) = 3;
    sub_1DC4BF7A8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC606AE8()
{
  unint64_t result;

  result = qword_1EDB10218;
  if (!qword_1EDB10218)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64882C, &type metadata for AppSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10218);
  }
  return result;
}

uint64_t AppSessionStartEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *started;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  _QWORD *v23;
  char v24;
  uint64_t v25;

  v18 = a2;
  v3 = sub_1DC62ABA8();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v22 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC606E60(0, &qword_1EDB11950, MEMORY[0x1E0DED048]);
  v20 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - v7;
  started = (int *)type metadata accessor for AppSessionStartEvent.Model(0);
  MEMORY[0x1E0C80A78](started);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC606AE8();
  v21 = v8;
  v12 = (uint64_t)v23;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = a1;
  v13 = v11;
  v14 = v19;
  LOBYTE(v25) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v20;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v22, v3);
  v24 = 1;
  sub_1DC4BF55C();
  sub_1DC62B454();
  *(_QWORD *)&v13[started[5]] = v25;
  v24 = 2;
  sub_1DC4C0014();
  sub_1DC62B454();
  *(_WORD *)&v13[started[6]] = v25;
  v24 = 3;
  sub_1DC4BF764();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v15);
  *(_QWORD *)started[7] = v25;
  sub_1DC606EBC(0, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_1DC606F00(0);
}

void sub_1DC606E60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC606AE8();
    v7 = a3(a1, &type metadata for AppSessionStartEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC606EBC(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for AppSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_1DC606F00(uint64_t a1)
{
  uint64_t started;

  started = type metadata accessor for AppSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_1DC606F3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionStartEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC606F50(_QWORD *a1)
{
  return AppSessionStartEvent.Model.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionStartEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AppSessionStartEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6076D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6077FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionStartEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppSessionStartEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC607C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC607CBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC607D80 + 4 * byte_1DC648659[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC607DB4 + 4 * byte_1DC648654[v4]))();
}

uint64_t sub_1DC607DB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC607DBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC607DC4);
  return result;
}

uint64_t sub_1DC607DD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC607DD8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC607DDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC607DE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppSessionStartEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionStartEvent.Model.CodingKeys;
}

unint64_t sub_1DC607E04()
{
  unint64_t result;

  result = qword_1F0370530;
  if (!qword_1F0370530)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648804, &type metadata for AppSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370530);
  }
  return result;
}

unint64_t sub_1DC607E4C()
{
  unint64_t result;

  result = qword_1EDB10228;
  if (!qword_1EDB10228)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648774, &type metadata for AppSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10228);
  }
  return result;
}

unint64_t sub_1DC607E94()
{
  unint64_t result;

  result = qword_1EDB10220;
  if (!qword_1EDB10220)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64879C, &type metadata for AppSessionStartEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10220);
  }
  return result;
}

uint64_t sub_1DC607ED8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BFD0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64DCA0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t EarningsData.countOfDaysUntilEarnings.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t EarningsData.countOfDaysUntilEarnings.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*EarningsData.countOfDaysUntilEarnings.modify())()
{
  return nullsub_1;
}

uint64_t EarningsData.init(countOfDaysUntilEarnings:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_1DC6080DC()
{
  return 0xD000000000000018;
}

uint64_t sub_1DC6080F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC6086B0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC608120()
{
  sub_1DC608260();
  return sub_1DC62B604();
}

uint64_t sub_1DC608148()
{
  sub_1DC608260();
  return sub_1DC62B610();
}

uint64_t EarningsData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC6083C4(0, &qword_1EDB119F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC608260();
  sub_1DC62B5F8();
  sub_1DC62B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC608260()
{
  unint64_t result;

  result = qword_1EDB0EE50;
  if (!qword_1EDB0EE50)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6489EC, &type metadata for EarningsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE50);
  }
  return result;
}

uint64_t EarningsData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1DC6083C4(0, &qword_1F0370538, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC608260();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC6083C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC608260();
    v7 = a3(a1, &type metadata for EarningsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC608428@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return EarningsData.init(from:)(a1, a2);
}

uint64_t sub_1DC60843C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC6083C4(0, &qword_1EDB119F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC608260();
  sub_1DC62B5F8();
  sub_1DC62B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for EarningsData()
{
  return &type metadata for EarningsData;
}

uint64_t storeEnumTagSinglePayload for EarningsData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC60857C + 4 * byte_1DC64887C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC60859C + 4 * byte_1DC648881[v4]))();
}

_BYTE *sub_1DC60857C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC60859C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC6085A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC6085AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC6085B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC6085BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EarningsData.CodingKeys()
{
  return &type metadata for EarningsData.CodingKeys;
}

unint64_t sub_1DC6085DC()
{
  unint64_t result;

  result = qword_1F0370540;
  if (!qword_1F0370540)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6489C4, &type metadata for EarningsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370540);
  }
  return result;
}

unint64_t sub_1DC608624()
{
  unint64_t result;

  result = qword_1EDB0EE60;
  if (!qword_1EDB0EE60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648934, &type metadata for EarningsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE60);
  }
  return result;
}

unint64_t sub_1DC60866C()
{
  unint64_t result;

  result = qword_1EDB0EE58;
  if (!qword_1EDB0EE58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64895C, &type metadata for EarningsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE58);
  }
  return result;
}

uint64_t sub_1DC6086B0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001DC64E500)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

StocksAnalytics::AppData __swiftcall AppData.init(appVersion:appBuildNumber:)(Swift::String appVersion, Swift::String appBuildNumber)
{
  Swift::String *v2;
  StocksAnalytics::AppData result;

  *v2 = appVersion;
  v2[1] = appBuildNumber;
  result.appBuildNumber = appBuildNumber;
  result.appVersion = appVersion;
  return result;
}

uint64_t AppData.appVersion.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppData.appVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AppData.appVersion.modify())()
{
  return nullsub_1;
}

uint64_t AppData.appBuildNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppData.appBuildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AppData.appBuildNumber.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC608820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC608B74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC608844()
{
  sub_1DC4B7F3C();
  return sub_1DC62B604();
}

uint64_t sub_1DC60886C()
{
  sub_1DC4B7F3C();
  return sub_1DC62B610();
}

uint64_t AppData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1DC4B7EE0(0, &qword_1EDB11990, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B7F3C();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v20 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1DC62B424();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC608A3C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for AppData()
{
  return &type metadata for AppData;
}

uint64_t storeEnumTagSinglePayload for AppData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC608AAC + 4 * byte_1DC648A41[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC608AE0 + 4 * byte_1DC648A3C[v4]))();
}

uint64_t sub_1DC608AE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC608AE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC608AF0);
  return result;
}

uint64_t sub_1DC608AFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC608B04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC608B08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC608B10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppData.CodingKeys()
{
  return &type metadata for AppData.CodingKeys;
}

unint64_t sub_1DC608B30()
{
  unint64_t result;

  result = qword_1F0370548;
  if (!qword_1F0370548)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648B84, &type metadata for AppData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370548);
  }
  return result;
}

uint64_t sub_1DC608B74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6973726556707061 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C697542707061 && a2 == 0xEE007265626D754ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void EngagementData.audioEngagementStatus.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *EngagementData.audioEngagementStatus.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*EngagementData.audioEngagementStatus.modify())()
{
  return nullsub_1;
}

StocksAnalytics::EngagementData __swiftcall EngagementData.init(audioEngagementStatus:)(StocksAnalytics::EngagementData audioEngagementStatus)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)audioEngagementStatus.audioEngagementStatus;
  return audioEngagementStatus;
}

unint64_t sub_1DC608CC8()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC608CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC6093B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC608D0C()
{
  sub_1DC608E60();
  return sub_1DC62B604();
}

uint64_t sub_1DC608D34()
{
  sub_1DC608E60();
  return sub_1DC62B610();
}

uint64_t EngagementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC609020(0, &qword_1F0370550, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC608E60();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC608EA4();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC608E60()
{
  unint64_t result;

  result = qword_1F0370558;
  if (!qword_1F0370558)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648D78, &type metadata for EngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370558);
  }
  return result;
}

unint64_t sub_1DC608EA4()
{
  unint64_t result;

  result = qword_1F0370560;
  if (!qword_1F0370560)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementStatus, &type metadata for AudioEngagementStatus);
    atomic_store(result, (unint64_t *)&qword_1F0370560);
  }
  return result;
}

uint64_t EngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC609020(0, &qword_1F0370568, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC608E60();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC60907C();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC609020(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC608E60();
    v7 = a3(a1, &type metadata for EngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC60907C()
{
  unint64_t result;

  result = qword_1F0370570;
  if (!qword_1F0370570)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementStatus, &type metadata for AudioEngagementStatus);
    atomic_store(result, (unint64_t *)&qword_1F0370570);
  }
  return result;
}

unint64_t sub_1DC6090C4()
{
  unint64_t result;

  result = qword_1F0370578;
  if (!qword_1F0370578)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EngagementData, &type metadata for EngagementData);
    atomic_store(result, (unint64_t *)&qword_1F0370578);
  }
  return result;
}

unint64_t sub_1DC60910C()
{
  unint64_t result;

  result = qword_1F0370580;
  if (!qword_1F0370580)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EngagementData, &type metadata for EngagementData);
    atomic_store(result, (unint64_t *)&qword_1F0370580);
  }
  return result;
}

uint64_t sub_1DC609150@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EngagementData.init(from:)(a1, a2);
}

uint64_t sub_1DC609164(_QWORD *a1)
{
  return EngagementData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for EngagementData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC6091C4 + 4 * byte_1DC648C01[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC6091F8 + 4 * byte_1DC648BFC[v4]))();
}

uint64_t sub_1DC6091F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC609200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC609208);
  return result;
}

uint64_t sub_1DC609214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC60921CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC609220(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC609228(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementData()
{
  return &type metadata for EngagementData;
}

uint64_t storeEnumTagSinglePayload for EngagementData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC609284 + 4 * byte_1DC648C06[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC6092A4 + 4 * byte_1DC648C0B[v4]))();
}

_BYTE *sub_1DC609284(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC6092A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC6092AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC6092B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC6092BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC6092C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementData.CodingKeys()
{
  return &type metadata for EngagementData.CodingKeys;
}

unint64_t sub_1DC6092E4()
{
  unint64_t result;

  result = qword_1F0370588;
  if (!qword_1F0370588)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648D50, &type metadata for EngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370588);
  }
  return result;
}

unint64_t sub_1DC60932C()
{
  unint64_t result;

  result = qword_1F0370590;
  if (!qword_1F0370590)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648CC0, &type metadata for EngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370590);
  }
  return result;
}

unint64_t sub_1DC609374()
{
  unint64_t result;

  result = qword_1F0370598;
  if (!qword_1F0370598)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648CE8, &type metadata for EngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370598);
  }
  return result;
}

uint64_t sub_1DC6093B8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64E520)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t dispatch thunk of AppIntentExecutionTypeProviderType.appIntentType(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void ResultData.resultType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ResultData.resultType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ResultData.resultType.modify())()
{
  return nullsub_1;
}

uint64_t ResultData.failureReasonCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResultData.failureReasonCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ResultData.failureReasonCode.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ResultData __swiftcall ResultData.init(resultType:failureReasonCode:)(StocksAnalytics::ResultType resultType, Swift::String_optional failureReasonCode)
{
  uint64_t v2;
  StocksAnalytics::ResultData result;

  *(_BYTE *)v2 = *(_BYTE *)resultType;
  *(Swift::String_optional *)(v2 + 8) = failureReasonCode;
  result.failureReasonCode = failureReasonCode;
  result.resultType = resultType;
  return result;
}

uint64_t sub_1DC6094EC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x7954746C75736572;
}

uint64_t sub_1DC609530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC609C38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC609554()
{
  sub_1DC6096E8();
  return sub_1DC62B604();
}

uint64_t sub_1DC60957C()
{
  sub_1DC6096E8();
  return sub_1DC62B610();
}

uint64_t ResultData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  sub_1DC609904(0, &qword_1F03705A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC6096E8();
  sub_1DC62B5F8();
  v15 = v9;
  v14 = 0;
  sub_1DC60972C();
  sub_1DC62B4E4();
  if (!v2)
  {
    v13 = 1;
    sub_1DC62B478();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC6096E8()
{
  unint64_t result;

  result = qword_1F03705A8;
  if (!qword_1F03705A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648F68, &type metadata for ResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03705A8);
  }
  return result;
}

unint64_t sub_1DC60972C()
{
  unint64_t result;

  result = qword_1F03705B0;
  if (!qword_1F03705B0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ResultType, &type metadata for ResultType);
    atomic_store(result, (unint64_t *)&qword_1F03705B0);
  }
  return result;
}

uint64_t ResultData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1DC609904(0, &qword_1F03705B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC6096E8();
  sub_1DC62B5E0();
  if (!v2)
  {
    v17 = 0;
    sub_1DC609960();
    sub_1DC62B454();
    v10 = v18;
    v16 = 1;
    v12 = sub_1DC62B3E8();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC609904(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC6096E8();
    v7 = a3(a1, &type metadata for ResultData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC609960()
{
  unint64_t result;

  result = qword_1F03705C0;
  if (!qword_1F03705C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ResultType, &type metadata for ResultType);
    atomic_store(result, (unint64_t *)&qword_1F03705C0);
  }
  return result;
}

uint64_t sub_1DC6099AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ResultData.init(from:)(a1, a2);
}

uint64_t sub_1DC6099C0(_QWORD *a1)
{
  return ResultData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for ResultData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ResultData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultData()
{
  return &type metadata for ResultData;
}

uint64_t storeEnumTagSinglePayload for ResultData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC609AE0 + 4 * byte_1DC648DF9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC609B14 + 4 * byte_1DC648DF4[v4]))();
}

uint64_t sub_1DC609B14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC609B1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC609B24);
  return result;
}

uint64_t sub_1DC609B30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC609B38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC609B3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC609B44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResultData.CodingKeys()
{
  return &type metadata for ResultData.CodingKeys;
}

unint64_t sub_1DC609B64()
{
  unint64_t result;

  result = qword_1F03705C8;
  if (!qword_1F03705C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648F40, &type metadata for ResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03705C8);
  }
  return result;
}

unint64_t sub_1DC609BAC()
{
  unint64_t result;

  result = qword_1F03705D0;
  if (!qword_1F03705D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648EB0, &type metadata for ResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03705D0);
  }
  return result;
}

unint64_t sub_1DC609BF4()
{
  unint64_t result;

  result = qword_1F03705D8;
  if (!qword_1F03705D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648ED8, &type metadata for ResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03705D8);
  }
  return result;
}

uint64_t sub_1DC609C38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7954746C75736572 && a2 == 0xEA00000000006570;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64E540)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t SymbolPriceData.quoteAge.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SymbolPriceData.quoteAge.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SymbolPriceData.quoteAge.modify())()
{
  return nullsub_1;
}

uint64_t SymbolPriceData.sparklineAge.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t SymbolPriceData.sparklineAge.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*SymbolPriceData.sparklineAge.modify())()
{
  return nullsub_1;
}

uint64_t SymbolPriceData.init(quoteAge:sparklineAge:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1DC609D78()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E696C6B72617073;
  else
    return 0x65674165746F7571;
}

uint64_t sub_1DC609DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC60A328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC609DE0()
{
  sub_1DC609F54();
  return sub_1DC62B604();
}

uint64_t sub_1DC609E08()
{
  sub_1DC609F54();
  return sub_1DC62B610();
}

uint64_t SymbolPriceData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;

  sub_1DC60A0E8(0, &qword_1EDB11A38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC609F54();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62B4F0();
  if (!v2)
  {
    v12 = 1;
    sub_1DC62B4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC609F54()
{
  unint64_t result;

  result = qword_1EDB0F468;
  if (!qword_1EDB0F468)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649130, &type metadata for SymbolPriceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F468);
  }
  return result;
}

uint64_t SymbolPriceData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1DC60A0E8(0, &qword_1F03705E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC609F54();
  sub_1DC62B5E0();
  if (!v2)
  {
    v15 = 0;
    v10 = sub_1DC62B460();
    v14 = 1;
    v12 = sub_1DC62B460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC60A0E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC609F54();
    v7 = a3(a1, &type metadata for SymbolPriceData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC60A14C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return SymbolPriceData.init(from:)(a1, a2);
}

uint64_t sub_1DC60A160(_QWORD *a1)
{
  return SymbolPriceData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SymbolPriceData()
{
  return &type metadata for SymbolPriceData;
}

uint64_t storeEnumTagSinglePayload for SymbolPriceData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC60A1D0 + 4 * byte_1DC648FBD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC60A204 + 4 * byte_1DC648FB8[v4]))();
}

uint64_t sub_1DC60A204(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60A20C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC60A214);
  return result;
}

uint64_t sub_1DC60A220(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC60A228);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC60A22C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60A234(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolPriceData.CodingKeys()
{
  return &type metadata for SymbolPriceData.CodingKeys;
}

unint64_t sub_1DC60A254()
{
  unint64_t result;

  result = qword_1F03705E8;
  if (!qword_1F03705E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649108, &type metadata for SymbolPriceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03705E8);
  }
  return result;
}

unint64_t sub_1DC60A29C()
{
  unint64_t result;

  result = qword_1EDB0F478;
  if (!qword_1EDB0F478)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649078, &type metadata for SymbolPriceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F478);
  }
  return result;
}

unint64_t sub_1DC60A2E4()
{
  unint64_t result;

  result = qword_1EDB0F470;
  if (!qword_1EDB0F470)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6490A0, &type metadata for SymbolPriceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F470);
  }
  return result;
}

uint64_t sub_1DC60A328(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65674165746F7571 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E696C6B72617073 && a2 == 0xEC00000065674165)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

StocksAnalytics::CalendarAccessStatus_optional __swiftcall CalendarAccessStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  StocksAnalytics::CalendarAccessStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t CalendarAccessStatus.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x776F6C6C61;
  else
    return 2037278052;
}

uint64_t sub_1DC60A4C0(char *a1, char *a2)
{
  return sub_1DC543DA4(*a1, *a2);
}

unint64_t sub_1DC60A4D0()
{
  unint64_t result;

  result = qword_1F03705F0;
  if (!qword_1F03705F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarAccessStatus, &type metadata for CalendarAccessStatus);
    atomic_store(result, (unint64_t *)&qword_1F03705F0);
  }
  return result;
}

uint64_t sub_1DC60A514()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC60A588()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC60A5D8()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::CalendarAccessStatus_optional sub_1DC60A648(Swift::String *a1)
{
  return CalendarAccessStatus.init(rawValue:)(*a1);
}

void sub_1DC60A654(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 2037278052;
  if (*v1)
    v2 = 0x776F6C6C61;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC60A688()
{
  sub_1DC60A7FC();
  return sub_1DC62B13C();
}

uint64_t sub_1DC60A6E4()
{
  sub_1DC60A7FC();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for CalendarAccessStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC60A77C + 4 * byte_1DC649185[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC60A7B0 + 4 * byte_1DC649180[v4]))();
}

uint64_t sub_1DC60A7B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60A7B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC60A7C0);
  return result;
}

uint64_t sub_1DC60A7CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC60A7D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC60A7D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60A7E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CalendarAccessStatus()
{
  return &type metadata for CalendarAccessStatus;
}

unint64_t sub_1DC60A7FC()
{
  unint64_t result;

  result = qword_1F03705F8;
  if (!qword_1F03705F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarAccessStatus, &type metadata for CalendarAccessStatus);
    atomic_store(result, (unint64_t *)&qword_1F03705F8);
  }
  return result;
}

void SubscribeButtonContextData.subscribeButtonLocation.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SubscribeButtonContextData.subscribeButtonLocation.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SubscribeButtonContextData.subscribeButtonLocation.modify())()
{
  return nullsub_1;
}

void SubscribeButtonContextData.subscribeButtonTargetType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *SubscribeButtonContextData.subscribeButtonTargetType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*SubscribeButtonContextData.subscribeButtonTargetType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SubscribeButtonContextData __swiftcall SubscribeButtonContextData.init(subscribeButtonLocation:subscribeButtonTargetType:)(StocksAnalytics::SubscribeButtonLocation subscribeButtonLocation, StocksAnalytics::SubscribeButtonTargetType subscribeButtonTargetType)
{
  _BYTE *v2;
  char v3;
  StocksAnalytics::SubscribeButtonContextData result;

  v3 = *(_BYTE *)subscribeButtonTargetType;
  *v2 = *(_BYTE *)subscribeButtonLocation;
  v2[1] = v3;
  result.subscribeButtonLocation = subscribeButtonLocation;
  return result;
}

unint64_t sub_1DC60A8A4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0xD000000000000017;
}

uint64_t sub_1DC60A8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC60B108(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC60A908()
{
  sub_1DC60AAAC();
  return sub_1DC62B604();
}

uint64_t sub_1DC60A930()
{
  sub_1DC60AAAC();
  return sub_1DC62B610();
}

uint64_t SubscribeButtonContextData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1DC60ACFC(0, &qword_1F0370600, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60AAAC();
  sub_1DC62B5F8();
  v16 = v9;
  v15 = 0;
  sub_1DC60AAF0();
  sub_1DC62B4E4();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1DC60AB34();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC60AAAC()
{
  unint64_t result;

  result = qword_1F0370608;
  if (!qword_1F0370608)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649430, &type metadata for SubscribeButtonContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370608);
  }
  return result;
}

unint64_t sub_1DC60AAF0()
{
  unint64_t result;

  result = qword_1F0370610;
  if (!qword_1F0370610)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonLocation, &type metadata for SubscribeButtonLocation);
    atomic_store(result, (unint64_t *)&qword_1F0370610);
  }
  return result;
}

unint64_t sub_1DC60AB34()
{
  unint64_t result;

  result = qword_1F0370618;
  if (!qword_1F0370618)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonTargetType, &type metadata for SubscribeButtonTargetType);
    atomic_store(result, (unint64_t *)&qword_1F0370618);
  }
  return result;
}

uint64_t SubscribeButtonContextData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1DC60ACFC(0, &qword_1F0370620, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60AAAC();
  sub_1DC62B5E0();
  if (!v2)
  {
    v16 = 0;
    sub_1DC60AD58();
    sub_1DC62B454();
    v10 = v17;
    v14 = 1;
    sub_1DC60AD9C();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC60ACFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC60AAAC();
    v7 = a3(a1, &type metadata for SubscribeButtonContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC60AD58()
{
  unint64_t result;

  result = qword_1F0370628;
  if (!qword_1F0370628)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonLocation, &type metadata for SubscribeButtonLocation);
    atomic_store(result, (unint64_t *)&qword_1F0370628);
  }
  return result;
}

unint64_t sub_1DC60AD9C()
{
  unint64_t result;

  result = qword_1F0370630;
  if (!qword_1F0370630)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonTargetType, &type metadata for SubscribeButtonTargetType);
    atomic_store(result, (unint64_t *)&qword_1F0370630);
  }
  return result;
}

unint64_t sub_1DC60ADE4()
{
  unint64_t result;

  result = qword_1F0370638;
  if (!qword_1F0370638)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonContextData, &type metadata for SubscribeButtonContextData);
    atomic_store(result, (unint64_t *)&qword_1F0370638);
  }
  return result;
}

unint64_t sub_1DC60AE2C()
{
  unint64_t result;

  result = qword_1F0370640;
  if (!qword_1F0370640)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonContextData, &type metadata for SubscribeButtonContextData);
    atomic_store(result, (unint64_t *)&qword_1F0370640);
  }
  return result;
}

uint64_t sub_1DC60AE70@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SubscribeButtonContextData.init(from:)(a1, a2);
}

uint64_t sub_1DC60AE84(_QWORD *a1)
{
  return SubscribeButtonContextData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonContextData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65283 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65283 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC60AEE4 + 4 * byte_1DC6492A5[v4]))();
  *a1 = a2 - 253;
  return ((uint64_t (*)(void))((char *)sub_1DC60AF18 + 4 * byte_1DC6492A0[v4]))();
}

uint64_t sub_1DC60AF18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC60AF20(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1DC60AF28);
  return result;
}

uint64_t sub_1DC60AF34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1DC60AF3CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC60AF40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC60AF48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonContextData()
{
  return &type metadata for SubscribeButtonContextData;
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC60AFB0 + 4 * byte_1DC6492AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC60AFE4 + 4 * byte_1DC6492AA[v4]))();
}

uint64_t sub_1DC60AFE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60AFEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC60AFF4);
  return result;
}

uint64_t sub_1DC60B000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC60B008);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC60B00C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60B014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonContextData.CodingKeys()
{
  return &type metadata for SubscribeButtonContextData.CodingKeys;
}

unint64_t sub_1DC60B034()
{
  unint64_t result;

  result = qword_1F0370648;
  if (!qword_1F0370648)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649408, &type metadata for SubscribeButtonContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370648);
  }
  return result;
}

unint64_t sub_1DC60B07C()
{
  unint64_t result;

  result = qword_1F0370650;
  if (!qword_1F0370650)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649378, &type metadata for SubscribeButtonContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370650);
  }
  return result;
}

unint64_t sub_1DC60B0C4()
{
  unint64_t result;

  result = qword_1F0370658;
  if (!qword_1F0370658)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6493A0, &type metadata for SubscribeButtonContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370658);
  }
  return result;
}

uint64_t sub_1DC60B108(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001DC64E560 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DC64E580)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC60B1F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for HeartbeatEventService();
  result = sub_1DC62AC50();
  if (result)
  {
    v4 = result;
    result = sub_1DC60B6B4(&qword_1EDB11FB0, (uint64_t)&unk_1DC649EA0);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC60B260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC62AE84();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartbeatEventService();
  sub_1DC62AE24();
  sub_1DC62AC14();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DC60B35C(_QWORD *a1)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  result = sub_1DC62AC5C();
  if (!v8)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A0);
  result = sub_1DC62AC5C();
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB11FC0);
  result = sub_1DC62AC5C();
  if (v4)
  {
    type metadata accessor for HeartbeatEventService();
    swift_allocObject();
    return sub_1DC612070(&v7, &v5, &v3);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC60B49C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E900);
  result = sub_1DC62AC5C();
  if (v4)
  {
    sub_1DC4C0AB0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1DC60B6B4(&qword_1EDB11FA8, (uint64_t)&unk_1DC649E38);
    sub_1DC62AE3C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for HeartbeatAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC60B594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC62AE84();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC62AC98();
  sub_1DC4BA6C8(0, &qword_1EDB11FB8);
  sub_1DC62AE30();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DC62ACA4();
  sub_1DC62AE18();
  return swift_release();
}

uint64_t sub_1DC60B6B4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HeartbeatEventService();
    result = MEMORY[0x1DF0CC744](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ChannelData.channelID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelData.channelID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ChannelData.channelID.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.language.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelData.language.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ChannelData.language.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.isBundleChannel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ChannelData.isBundleChannel.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*ChannelData.isBundleChannel.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.isAdSupportedChannel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t ChannelData.isAdSupportedChannel.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*ChannelData.isAdSupportedChannel.modify())()
{
  return nullsub_1;
}

void __swiftcall ChannelData.init(channelID:language:isBundleChannel:isAdSupportedChannel:)(StocksAnalytics::ChannelData *__return_ptr retstr, Swift::String channelID, Swift::String language, Swift::Bool isBundleChannel, Swift::Bool isAdSupportedChannel)
{
  retstr->channelID = channelID;
  retstr->language = language;
  retstr->isBundleChannel = isBundleChannel;
  retstr->isAdSupportedChannel = isAdSupportedChannel;
}

uint64_t sub_1DC60B828()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC60B85C + 4 * byte_1DC6494BC[*v0]))(0x496C656E6E616863, 0xE900000000000044);
}

uint64_t sub_1DC60B85C()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1DC60B874()
{
  return 0x656C646E75427369;
}

unint64_t sub_1DC60B898()
{
  return 0xD000000000000014;
}

uint64_t sub_1DC60B8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC60C154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC60B8D8()
{
  sub_1DC60BAC4();
  return sub_1DC62B604();
}

uint64_t sub_1DC60B900()
{
  sub_1DC60BAC4();
  return sub_1DC62B610();
}

uint64_t ChannelData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;

  sub_1DC60BD60(0, &qword_1EDB119D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v13 = v8;
  v15 = *(unsigned __int8 *)(v1 + 32);
  v11[1] = *(unsigned __int8 *)(v1 + 33);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60BAC4();
  sub_1DC62B5F8();
  v19 = 0;
  v9 = v14;
  sub_1DC62B4B4();
  if (!v9)
  {
    v18 = 1;
    sub_1DC62B4B4();
    v17 = 2;
    sub_1DC62B4C0();
    v16 = 3;
    sub_1DC62B4C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC60BAC4()
{
  unint64_t result;

  result = qword_1EDB0ED68;
  if (!qword_1EDB0ED68)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64963C, &type metadata for ChannelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED68);
  }
  return result;
}

uint64_t ChannelData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;
  char v28;

  sub_1DC60BD60(0, &qword_1EDB11910, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60BAC4();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v23 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1DC62B424();
  v15 = v14;
  v21 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v22 = v15;
  v24 = sub_1DC62B430();
  v25 = 3;
  LOBYTE(v15) = sub_1DC62B430();
  v17 = v24 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v15 & 1;
  v19 = v22;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v19;
  *(_BYTE *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 33) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC60BD60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC60BAC4();
    v7 = a3(a1, &type metadata for ChannelData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC60BDC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ChannelData.init(from:)(a1, a2);
}

uint64_t sub_1DC60BDD8(_QWORD *a1)
{
  return ChannelData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ChannelData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChannelData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ChannelData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelData()
{
  return &type metadata for ChannelData;
}

uint64_t storeEnumTagSinglePayload for ChannelData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC60BFFC + 4 * byte_1DC6494C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC60C030 + 4 * byte_1DC6494C0[v4]))();
}

uint64_t sub_1DC60C030(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60C038(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC60C040);
  return result;
}

uint64_t sub_1DC60C04C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC60C054);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC60C058(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60C060(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChannelData.CodingKeys()
{
  return &type metadata for ChannelData.CodingKeys;
}

unint64_t sub_1DC60C080()
{
  unint64_t result;

  result = qword_1F0370660;
  if (!qword_1F0370660)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649614, &type metadata for ChannelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370660);
  }
  return result;
}

unint64_t sub_1DC60C0C8()
{
  unint64_t result;

  result = qword_1EDB0ED78;
  if (!qword_1EDB0ED78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649584, &type metadata for ChannelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED78);
  }
  return result;
}

unint64_t sub_1DC60C110()
{
  unint64_t result;

  result = qword_1EDB0ED70;
  if (!qword_1EDB0ED70)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6495AC, &type metadata for ChannelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED70);
  }
  return result;
}

uint64_t sub_1DC60C154(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x496C656E6E616863 && a2 == 0xE900000000000044;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C646E75427369 && a2 == 0xEF6C656E6E616843 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64E5D0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1DC60C338(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0370668, MEMORY[0x1E0CF8078]);
}

uint64_t static SymbolChartEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369278, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370668, a1);
}

uint64_t sub_1DC60C378(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0370680, MEMORY[0x1E0CF8380]);
}

uint64_t static SymbolChartEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369280, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370680, a1);
}

uint64_t SymbolChartEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SymbolChartEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SymbolChartEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolChartEngagementEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SymbolChartEngagementEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370710);
}

uint64_t SymbolChartEngagementEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolChartEngagementEvent.symbolData.modify())()
{
  type metadata accessor for SymbolChartEngagementEvent(0);
  return nullsub_1;
}

uint64_t SymbolChartEngagementEvent.symbolChartData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SymbolChartEngagementEvent.symbolChartData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolChartEngagementEvent.symbolChartData.modify())()
{
  type metadata accessor for SymbolChartEngagementEvent(0);
  return nullsub_1;
}

uint64_t SymbolChartEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for SymbolChartEngagementEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t SymbolChartEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SymbolChartEngagementEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SymbolChartEngagementEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F03707A8);
}

uint64_t SymbolChartEngagementEvent.Model.symbolChartData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SymbolChartEngagementEvent.Model.init(eventData:symbolData:symbolChartData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  v9 = a2[3];
  v10 = a2[4];
  v11 = *a3;
  v12 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a4, a1, v12);
  result = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  v14 = a4 + *(int *)(result + 20);
  *(_QWORD *)v14 = v6;
  *(_QWORD *)(v14 + 8) = v7;
  *(_BYTE *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = v9;
  *(_QWORD *)(v14 + 32) = v10;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = v11;
  return result;
}

uint64_t sub_1DC60C820()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x61446C6F626D7973;
  if (*v0 != 1)
    v1 = 0x68436C6F626D7973;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC60C890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC60DBE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC60C8B4()
{
  sub_1DC60CAC8();
  return sub_1DC62B604();
}

uint64_t sub_1DC60C8DC()
{
  sub_1DC60CAC8();
  return sub_1DC62B610();
}

uint64_t SymbolChartEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  sub_1DC60CE34(0, &qword_1F03706A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60CAC8();
  sub_1DC62B5F8();
  LOBYTE(v19) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for SymbolChartEngagementEvent.Model(0);
    v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v16 = v11[3];
    v15 = v11[4];
    v19 = v12;
    v20 = v13;
    v21 = v14;
    v22 = v16;
    v23 = v15;
    HIBYTE(v18) = 1;
    sub_1DC4C336C();
    sub_1DC62B4E4();
    LOBYTE(v19) = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v18) = 2;
    sub_1DC5CF274();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC60CAC8()
{
  unint64_t result;

  result = qword_1F03706A8;
  if (!qword_1F03706A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64987C, &type metadata for SymbolChartEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03706A8);
  }
  return result;
}

uint64_t SymbolChartEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v23 = a2;
  v3 = sub_1DC62ABA8();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC60CE34(0, &qword_1F03706B0, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60CAC8();
  v27 = v8;
  v12 = v28;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = v9;
  v13 = (uint64_t)a1;
  v14 = v25;
  LOBYTE(v29) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v26, v3);
  v34 = 1;
  sub_1DC4C3328();
  sub_1DC62B454();
  v15 = v30;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  v19 = v28;
  v20 = &v11[*(int *)(v28 + 20)];
  *(_QWORD *)v20 = v29;
  *((_QWORD *)v20 + 1) = v15;
  v20[16] = v16;
  *((_QWORD *)v20 + 3) = v17;
  *((_QWORD *)v20 + 4) = v18;
  v34 = 2;
  sub_1DC5CF22C();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v24);
  v11[*(int *)(v19 + 24)] = v29;
  sub_1DC60CE90((uint64_t)v11, v23);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1DC60CED4((uint64_t)v11);
}

void sub_1DC60CE34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC60CAC8();
    v7 = a3(a1, &type metadata for SymbolChartEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC60CE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC60CED4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC60CF10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolChartEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC60CF24(_QWORD *a1)
{
  return SymbolChartEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC60CF38@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369278, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370668, a1);
}

uint64_t sub_1DC60CF5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369280, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370680, a1);
}

uint64_t sub_1DC60CF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolChartEngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolChartEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC60D610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SymbolChartEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC60D6F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC60D7D4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F0370698, (void (*)(void))sub_1DC5CF22C, (void (*)(void))sub_1DC5CF274);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for SymbolChartEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC60D8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolChartEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC60D94C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC60D9C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SymbolChartEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC60DA90 + 4 * byte_1DC649695[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC60DAC4 + 4 * byte_1DC649690[v4]))();
}

uint64_t sub_1DC60DAC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60DACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC60DAD4);
  return result;
}

uint64_t sub_1DC60DAE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC60DAE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC60DAEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60DAF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartEngagementEvent.Model.CodingKeys()
{
  return &type metadata for SymbolChartEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DC60DB14()
{
  unint64_t result;

  result = qword_1F03707E8;
  if (!qword_1F03707E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649854, &type metadata for SymbolChartEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03707E8);
  }
  return result;
}

unint64_t sub_1DC60DB5C()
{
  unint64_t result;

  result = qword_1F03707F0;
  if (!qword_1F03707F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6497C4, &type metadata for SymbolChartEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03707F0);
  }
  return result;
}

unint64_t sub_1DC60DBA4()
{
  unint64_t result;

  result = qword_1F03707F8;
  if (!qword_1F03707F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6497EC, &type metadata for SymbolChartEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03707F8);
  }
  return result;
}

uint64_t sub_1DC60DBE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x68436C6F626D7973 && a2 == 0xEF61746144747261)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

StocksAnalytics::PaywallType_optional __swiftcall PaywallType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::PaywallType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PaywallType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1952870259;
  if (*v0 != 1)
    v1 = 1685217640;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC60DE1C(char *a1, unsigned __int8 *a2)
{
  return sub_1DC546194(*a1, *a2);
}

unint64_t sub_1DC60DE2C()
{
  unint64_t result;

  result = qword_1F0370800;
  if (!qword_1F0370800)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaywallType, &type metadata for PaywallType);
    atomic_store(result, (unint64_t *)&qword_1F0370800);
  }
  return result;
}

uint64_t sub_1DC60DE70()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC60DF00()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC60DF6C()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::PaywallType_optional sub_1DC60DFF8(Swift::String *a1)
{
  return PaywallType.init(rawValue:)(*a1);
}

void sub_1DC60E004(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 1952870259;
  if (v2 != 1)
    v4 = 1685217640;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE400000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1DC60E054()
{
  sub_1DC60E1C8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC60E0B0()
{
  sub_1DC60E1C8();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for PaywallType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC60E148 + 4 * byte_1DC6498D1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC60E17C + 4 * byte_1DC6498CC[v4]))();
}

uint64_t sub_1DC60E17C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60E184(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC60E18CLL);
  return result;
}

uint64_t sub_1DC60E198(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC60E1A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC60E1A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60E1AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallType()
{
  return &type metadata for PaywallType;
}

unint64_t sub_1DC60E1C8()
{
  unint64_t result;

  result = qword_1EDB0EDD0;
  if (!qword_1EDB0EDD0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaywallType, &type metadata for PaywallType);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDD0);
  }
  return result;
}

StocksAnalytics::UserType_optional __swiftcall UserType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::UserType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t UserType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7824750;
  if (*v0 != 1)
    v1 = 0x6E696E7275746572;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC60E2BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC541B00(*a1, *a2);
}

unint64_t sub_1DC60E2CC()
{
  unint64_t result;

  result = qword_1F0370808;
  if (!qword_1F0370808)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserType, &type metadata for UserType);
    atomic_store(result, (unint64_t *)&qword_1F0370808);
  }
  return result;
}

uint64_t sub_1DC60E310()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC60E3AC()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC60E424()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::UserType_optional sub_1DC60E4BC(Swift::String *a1)
{
  return UserType.init(rawValue:)(*a1);
}

uint64_t sub_1DC60E4C8()
{
  sub_1DC4B5398();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for UserType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC60E570 + 4 * byte_1DC6499E9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC60E5A4 + 4 * byte_1DC6499E4[v4]))();
}

uint64_t sub_1DC60E5A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60E5AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC60E5B4);
  return result;
}

uint64_t sub_1DC60E5C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC60E5C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC60E5CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC60E5D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserType()
{
  return &type metadata for UserType;
}

uint64_t sub_1DC60E5F0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB0EF78, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0EF90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0EF78, a1);
}

uint64_t sub_1DC60E630(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB0EF98, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0EFB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0EF98, a1);
}

uint64_t FeedViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t FeedViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for FeedViewEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for FeedViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0F068);
}

uint64_t FeedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.timedData.modify())()
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.feedData.modify())()
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.viewData.modify())()
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.orientationData.modify())()
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.viewEndData.modify())()
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.activeWatchlistData.modify())()
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.feedViewExperienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedViewEvent.feedViewExperienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedViewEvent.feedViewExperienceData.modify())()
{
  type metadata accessor for FeedViewEvent(0);
  return nullsub_1;
}

uint64_t FeedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for FeedViewEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  v16 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
}

uint64_t FeedViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for FeedViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t FeedViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t FeedViewEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t FeedViewEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t FeedViewEvent.Model.feedViewExperienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;

  result = type metadata accessor for FeedViewEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 44));
  v5 = *v4;
  LODWORD(v4) = *((_DWORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_DWORD *)(a1 + 4) = (_DWORD)v4;
  return result;
}

uint64_t FeedViewEvent.Model.init(eventData:timedData:feedData:viewData:orientationData:viewEndData:activeWatchlistData:feedViewExperienceData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int16 *a5@<X4>, char *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  char v27;
  char v28;
  int v29;
  char v30;

  v12 = *a3;
  v13 = *((_QWORD *)a3 + 1);
  v14 = *((_QWORD *)a3 + 2);
  v15 = *a4;
  v16 = a4[1];
  v17 = *((_WORD *)a4 + 8);
  v26 = *a5;
  v27 = *a6;
  v30 = *a8;
  v28 = *a7;
  v29 = *((_DWORD *)a8 + 1);
  v18 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)type metadata accessor for FeedViewEvent.Model(0);
  v20 = a9 + v19[5];
  v21 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v23 = a9 + v19[6];
  *(_BYTE *)v23 = v12;
  *(_QWORD *)(v23 + 8) = v13;
  *(_QWORD *)(v23 + 16) = v14;
  v24 = a9 + v19[7];
  *(_QWORD *)v24 = v15;
  *(_QWORD *)(v24 + 8) = v16;
  *(_WORD *)(v24 + 16) = v17;
  *(_WORD *)(a9 + v19[8]) = v26;
  *(_BYTE *)(a9 + v19[9]) = v27;
  *(_BYTE *)(a9 + v19[10]) = v28;
  v25 = a9 + v19[11];
  *(_BYTE *)v25 = v30;
  *(_DWORD *)(v25 + 4) = v29;
  return result;
}

uint64_t sub_1DC60F200(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC60F238 + 4 * byte_1DC649B00[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC60F238()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC60F24C()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC60F274()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1DC60F298()
{
  return 0x44646E4577656976;
}

unint64_t sub_1DC60F2B8()
{
  return 0xD000000000000013;
}

unint64_t sub_1DC60F2D4()
{
  return 0xD000000000000016;
}

uint64_t sub_1DC60F2F4()
{
  unsigned __int8 *v0;

  return sub_1DC60F200(*v0);
}

uint64_t sub_1DC60F2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC611CE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC60F320()
{
  sub_1DC60F6BC();
  return sub_1DC62B604();
}

uint64_t sub_1DC60F348()
{
  sub_1DC60F6BC();
  return sub_1DC62B610();
}

uint64_t FeedViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v1;
  sub_1DC60FCD0(0, &qword_1F0370810, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60F6BC();
  sub_1DC62B5F8();
  LOBYTE(v22) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for FeedViewEvent.Model(0);
    LOBYTE(v22) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (char *)(v3 + v10[6]);
    v12 = *v11;
    v14 = *((_QWORD *)v11 + 1);
    v13 = *((_QWORD *)v11 + 2);
    LOBYTE(v22) = v12;
    v23 = v14;
    v24 = v13;
    HIBYTE(v21) = 2;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v15 = (uint64_t *)(v3 + v10[7]);
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    v22 = v16;
    v23 = v17;
    LOWORD(v24) = (_WORD)v15;
    HIBYTE(v21) = 3;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    LOWORD(v22) = *(_WORD *)(v3 + v10[8]);
    HIBYTE(v21) = 4;
    sub_1DC4C0058();
    sub_1DC62B4E4();
    LOBYTE(v22) = *(_BYTE *)(v3 + v10[9]);
    HIBYTE(v21) = 5;
    sub_1DC4C0298();
    sub_1DC62B4E4();
    LOBYTE(v22) = *(_BYTE *)(v3 + v10[10]);
    HIBYTE(v21) = 6;
    sub_1DC4C9974();
    sub_1DC62B490();
    v18 = (char *)(v3 + v10[11]);
    v19 = *v18;
    LODWORD(v18) = *((_DWORD *)v18 + 1);
    LOBYTE(v22) = v19;
    HIDWORD(v22) = (_DWORD)v18;
    HIBYTE(v21) = 7;
    sub_1DC5264E8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC60F6BC()
{
  unint64_t result;

  result = qword_1EDB0EFB8;
  if (!qword_1EDB0EFB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649D84, &type metadata for FeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EFB8);
  }
  return result;
}

uint64_t FeedViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v29 = a2;
  v3 = sub_1DC62ABC0();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62ABA8();
  v32 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC60FCD0(0, &qword_1EDB11928, MEMORY[0x1E0DED048]);
  v34 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - v11;
  v33 = type metadata accessor for FeedViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v33);
  v35 = a1;
  v36 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC60F6BC();
  v14 = v37;
  sub_1DC62B5E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v37 = v10;
  LOBYTE(v38) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v15 = (uint64_t)v36;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v36, v8, v6);
  LOBYTE(v38) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v16 = v31;
  sub_1DC62B454();
  v17 = (int *)v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v15 + *(int *)(v33 + 20), v5, v16);
  v41 = 2;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v18 = v37;
  v19 = v39;
  v20 = v40;
  v21 = v15 + v17[6];
  *(_BYTE *)v21 = v38;
  *(_QWORD *)(v21 + 8) = v19;
  *(_QWORD *)(v21 + 16) = v20;
  v41 = 3;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v22 = v39;
  v23 = v40;
  v24 = v15 + v17[7];
  *(_QWORD *)v24 = v38;
  *(_QWORD *)(v24 + 8) = v22;
  *(_WORD *)(v24 + 16) = v23;
  v41 = 4;
  sub_1DC4C0014();
  sub_1DC62B454();
  v25 = (uint64_t)v35;
  *(_WORD *)(v15 + v17[8]) = v38;
  v41 = 5;
  sub_1DC4C0254();
  sub_1DC62B454();
  *(_BYTE *)(v15 + v17[9]) = v38;
  v41 = 6;
  sub_1DC4C9930();
  sub_1DC62B400();
  *(_BYTE *)(v15 + v17[10]) = v38;
  v41 = 7;
  sub_1DC5264A0();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v34);
  v26 = HIDWORD(v38);
  v27 = v15 + *(int *)(v33 + 44);
  *(_BYTE *)v27 = v38;
  *(_DWORD *)(v27 + 4) = v26;
  sub_1DC60FD2C(v15, v29);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return sub_1DC60FD70(v15);
}

void sub_1DC60FCD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC60F6BC();
    v7 = a3(a1, &type metadata for FeedViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC60FD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC60FD70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC60FDAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC60FDC0(_QWORD *a1)
{
  return FeedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC60FDD4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0EF90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0EF78, a1);
}

uint64_t sub_1DC60FDF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0EFB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0EF98, a1);
}

uint64_t sub_1DC60FE1C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  v17 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for FeedViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC610E08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC611020(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC611234()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E818, (void (*)(void))sub_1DC5264A0, (void (*)(void))sub_1DC5264E8);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    v20 = a3[9];
    *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
    v21 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  v19 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v15 + 17) = *(_BYTE *)(v16 + 17);
  v17 = a3[8];
  v18 = (_BYTE *)(a1 + v17);
  v19 = (_BYTE *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v20 = a3[11];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_DWORD *)(v21 + 4) = *(_DWORD *)(v22 + 4);
  return a1;
}

uint64_t initializeWithTake for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  v17 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v20 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_DWORD *)(v22 + 4) = *(_DWORD *)(v23 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6119DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC611A94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC611B88 + 4 * byte_1DC649B0D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC611BBC + 4 * byte_1DC649B08[v4]))();
}

uint64_t sub_1DC611BBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC611BC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC611BCCLL);
  return result;
}

uint64_t sub_1DC611BD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC611BE0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC611BE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC611BEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedViewEvent.Model.CodingKeys()
{
  return &type metadata for FeedViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC611C0C()
{
  unint64_t result;

  result = qword_1F0370818;
  if (!qword_1F0370818)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649D5C, &type metadata for FeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370818);
  }
  return result;
}

unint64_t sub_1DC611C54()
{
  unint64_t result;

  result = qword_1EDB0EFC8[0];
  if (!qword_1EDB0EFC8[0])
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649CCC, &type metadata for FeedViewEvent.Model.CodingKeys);
    atomic_store(result, qword_1EDB0EFC8);
  }
  return result;
}

unint64_t sub_1DC611C9C()
{
  unint64_t result;

  result = qword_1EDB0EFC0;
  if (!qword_1EDB0EFC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC649CF4, &type metadata for FeedViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EFC0);
  }
  return result;
}

uint64_t sub_1DC611CE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64E5F0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t dispatch thunk of HeartbeatEventServiceType.sendHeartbeat()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1DC612070(__int128 *a1, __int128 *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  _QWORD v11[2];
  __int128 *v12;
  __int128 *v13;
  __int128 *v14;
  uint64_t v15;

  v13 = a2;
  v14 = a3;
  v12 = a1;
  v11[0] = sub_1DC62B1F0();
  v4 = *(_QWORD *)(v11[0] - 8);
  MEMORY[0x1E0C80A78](v11[0]);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62B1E4();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1DC62B04C();
  MEMORY[0x1E0C80A78](v9);
  v11[1] = sub_1DC59A178();
  sub_1DC62B040();
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1DC4BA75C(&qword_1EDB12008, 255, v8, MEMORY[0x1E0DEF828]);
  sub_1DC4BA670(0, &qword_1EDB11FF8, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC4BA714(&qword_1EDB12000, &qword_1EDB11FF8, v8);
  sub_1DC62B298();
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v11[0]);
  *(_QWORD *)(v3 + 136) = sub_1DC62B214();
  sub_1DC4C0AB0(v12, v3 + 16);
  sub_1DC4C0AB0(v13, v3 + 56);
  sub_1DC4C0AB0(v14, v3 + 96);
  return v3;
}

void sub_1DC612274()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  id v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t (*v50)(uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint8_t *v58;
  void (*v59)(uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  _QWORD aBlock[7];

  v1 = v0;
  v2 = sub_1DC62B028();
  v64 = *(_QWORD *)(v2 - 8);
  v65 = v2;
  MEMORY[0x1E0C80A78](v2);
  v63 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC62B04C();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  MEMORY[0x1E0C80A78](v4);
  v60 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62A410();
  v68 = *(_QWORD *)(v6 - 8);
  v69 = (void (*)(char *, uint64_t))v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB0E558, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v60 - v10;
  v72 = sub_1DC62A140();
  v70 = *(_QWORD *)(v72 - 8);
  v12 = *(_QWORD *)(v70 + 64);
  v13 = MEMORY[0x1E0C80A78](v72);
  v67 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v66 = (char *)&v60 - v15;
  MEMORY[0x1E0C80A78](v14);
  v71 = (char *)&v60 - v16;
  v17 = sub_1DC62A3B0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v0[5];
  v73 = (void (*)(char *, uint64_t))(v0 + 2);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v21);
  sub_1DC62A464();
  v22 = sub_1DC62A374();
  v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  v23(v20, v17);
  if ((v22 & 1) == 0)
  {
    if (qword_1EDB11D48 != -1)
      swift_once();
    v33 = sub_1DC62AF08();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EDB23420);
    v29 = sub_1DC62AEFC();
    v30 = sub_1DC62B1D8();
    if (!os_log_type_enabled(v29, v30))
      goto LABEL_17;
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    v32 = "Not sending heartbeat event due to foreground heartbeat event being disabled";
    goto LABEL_16;
  }
  v24 = v1[15];
  v25 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v24);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25) & 1) == 0)
  {
    if (qword_1EDB11D48 != -1)
      swift_once();
    v34 = sub_1DC62AF08();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EDB23420);
    v29 = sub_1DC62AEFC();
    v30 = sub_1DC62B1D8();
    if (!os_log_type_enabled(v29, v30))
      goto LABEL_17;
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    v32 = "Not sending heartbeat because user has not agreed to in-app terms and conditions";
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(v73, v1[5]);
  sub_1DC62A464();
  sub_1DC62A32C();
  v23(v20, v17);
  sub_1DC62A3F8();
  (*(void (**)(char *, _QWORD))(v68 + 8))(v8, v69);
  sub_1DC62A134();
  swift_bridgeObjectRelease();
  v26 = v70;
  v27 = v72;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v11, 1, v72) == 1)
  {
    sub_1DC6133FC((uint64_t)v11);
    if (qword_1EDB11D48 != -1)
      swift_once();
    v28 = sub_1DC62AF08();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EDB23420);
    v29 = sub_1DC62AEFC();
    v30 = sub_1DC62B1CC();
    if (!os_log_type_enabled(v29, v30))
      goto LABEL_17;
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    v32 = "Failed to send heartbeat event due to failure to resolve heartbeat endpoint URL";
LABEL_16:
    _os_log_impl(&dword_1DC4AF000, v29, v30, v32, v31, 2u);
    MEMORY[0x1DF0CC7C8](v31, -1, -1);
LABEL_17:

    return;
  }
  v69 = v23;
  v35 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v36 = v71;
  v35(v71, v11, v27);
  if (qword_1EDB11F38 != -1)
    swift_once();
  v37 = (id)qword_1EDB11F30;
  sub_1DC62B1D8();
  sub_1DC62AEF0();

  v38 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v39 = v66;
  v38(v66, v36, v27);
  v40 = v67;
  v38(v67, v39, v27);
  v41 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v1;
  v35((char *)(v42 + v41), v39, v27);
  __swift_project_boxed_opaque_existential_1(v73, v1[5]);
  swift_retain();
  sub_1DC62A464();
  LOBYTE(v41) = sub_1DC62A3A4();
  v69(v20, v17);
  if ((v41 & 1) != 0)
  {
    v73 = *(void (**)(char *, uint64_t))(v26 + 8);
    v73(v40, v27);
    if (qword_1EDB11D48 != -1)
      swift_once();
    v43 = sub_1DC62AF08();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EDB23420);
    v44 = sub_1DC62AEFC();
    v45 = sub_1DC62B1D8();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_1DC4AF000, v44, v45, "Dispatching heartbeat request", v46, 2u);
      MEMORY[0x1DF0CC7C8](v46, -1, -1);
    }

    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = sub_1DC6134C4;
    *(_QWORD *)(v47 + 24) = v42;
    aBlock[4] = sub_1DC4BE8C4;
    aBlock[5] = v47;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC61325C;
    aBlock[3] = &block_descriptor_2;
    v48 = _Block_copy(aBlock);
    swift_retain();
    v49 = v60;
    sub_1DC62B034();
    v74 = MEMORY[0x1E0DEE9D8];
    v50 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1DC4BA75C(&qword_1EDB11FD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1DC4BA670(0, &qword_1EDB11FD8, v50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1DC4BA714(&qword_1EDB11FE0, &qword_1EDB11FD8, v50);
    v51 = v63;
    v52 = v65;
    sub_1DC62B298();
    MEMORY[0x1DF0CBFD0](0, v49, v51, v48);
    _Block_release(v48);
    swift_release();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v51, v52);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v62);
    v73(v71, v27);
    swift_release();
  }
  else
  {
    if (qword_1EDB11D48 != -1)
      swift_once();
    v53 = sub_1DC62AF08();
    __swift_project_value_buffer(v53, (uint64_t)qword_1EDB23420);
    v54 = sub_1DC62AEFC();
    v55 = sub_1DC62B1D8();
    v56 = os_log_type_enabled(v54, v55);
    v57 = (uint64_t)v67;
    if (v56)
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_1DC4AF000, v54, v55, "Not dispatching heartbeat request", v58, 2u);
      MEMORY[0x1DF0CC7C8](v58, -1, -1);
    }

    sub_1DC612B8C((uint64_t)v1, v57);
    swift_release();
    v59 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v59(v57, v27);
    v59((uint64_t)v71, v27);
  }
}

void sub_1DC612B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  char *v53;
  char *v54;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;

  v68 = a2;
  v3 = sub_1DC62A9BC();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  MEMORY[0x1E0C80A78](v3);
  v69 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62A1C4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v65 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v55 - v9;
  v11 = sub_1DC62A1A0();
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v64 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v55 - v14;
  v16 = (int *)type metadata accessor for HeartbeatData();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for HeartbeatEvent.Model(0);
  MEMORY[0x1E0C80A78](v63);
  v67 = (uint64_t)v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDB11D48 != -1)
    swift_once();
  v20 = sub_1DC62AF08();
  v55[1] = __swift_project_value_buffer(v20, (uint64_t)qword_1EDB23420);
  v21 = sub_1DC62AEFC();
  v22 = sub_1DC62B1D8();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1DC4AF000, v21, v22, "Building request", v23, 2u);
    MEMORY[0x1DF0CC7C8](v23, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
  v24 = sub_1DC62A440();
  v58 = v25;
  v59 = v24;
  sub_1DC62A194();
  sub_1DC62A1B8();
  v26 = sub_1DC62A1AC();
  v28 = v27;
  v29 = *(void (**)(char *, uint64_t))(v6 + 8);
  v66 = v5;
  v60 = v29;
  v29(v10, v5);
  v30 = (void *)objc_opt_self();
  v31 = objc_msgSend(v30, sel_currentDevice);
  v32 = objc_msgSend(v31, sel_systemVersion);

  v33 = sub_1DC62B0E8();
  v35 = v34;

  v36 = objc_msgSend(v30, sel_currentDevice);
  v37 = objc_msgSend(v36, sel_sa_buildVersion);

  if (v37)
  {
    v38 = sub_1DC62B0E8();
    v40 = v39;

    v41 = v58;
    *(_QWORD *)v18 = v59;
    *((_QWORD *)v18 + 1) = v41;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(&v18[v16[5]], v15, v62);
    v42 = (uint64_t *)&v18[v16[6]];
    *v42 = v26;
    v42[1] = v28;
    v43 = (uint64_t *)&v18[v16[7]];
    *v43 = v33;
    v43[1] = v35;
    v44 = (uint64_t *)&v18[v16[8]];
    *v44 = v38;
    v44[1] = v40;
    v45 = (uint64_t)v18;
    v46 = v67;
    sub_1DC613518(v45, v67);
    if (qword_1EDB11F38 != -1)
      swift_once();
    v47 = (void *)qword_1EDB11F30;
    v48 = (void *)objc_opt_self();
    v49 = v47;
    v50 = objc_msgSend(v48, sel_mainBundle);
    sub_1DC62B22C();

    sub_1DC62AB0C();
    v51 = objc_msgSend(v48, sel_mainBundle);
    v52 = (void *)sub_1DC62AAF4();
    sub_1DC62A194();
    v53 = v65;
    sub_1DC62A1B8();
    sub_1DC62A1AC();
    v60(v53, v66);
    v54 = v69;
    sub_1DC62A9B0();
    sub_1DC4BA75C(&qword_1EDB11F90, 255, type metadata accessor for HeartbeatEvent.Model, (uint64_t)&protocol conformance descriptor for HeartbeatEvent.Model);
    sub_1DC62A9A4();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v57);
    sub_1DC61355C(v46);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC61325C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1DC613288()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HeartbeatEventService()
{
  return objc_opt_self();
}

void sub_1DC6132E8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1EDB11D48 != -1)
    swift_once();
  v0 = sub_1DC62AF08();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB23420);
  v1 = sub_1DC62AEFC();
  v2 = sub_1DC62B1D8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1DC4AF000, v1, v2, "See scene entering foreground, sending heartbeat", v3, 2u);
    MEMORY[0x1DF0CC7C8](v3, -1, -1);
  }

  sub_1DC612274();
}

uint64_t sub_1DC6133B8()
{
  return sub_1DC62AD34();
}

uint64_t sub_1DC6133C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1DC4BA75C(&qword_1EDB11FA8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatEventService, (uint64_t)&unk_1DC649E38);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC6133FC(uint64_t a1)
{
  uint64_t v2;

  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB0E558, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC613450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DC62A140();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DC6134C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DC62A140() - 8) + 80);
  sub_1DC612B8C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1DC6134F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DC613518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC61355C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeartbeatEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC613598(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1DC613668(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1DC5B4B44((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1DC5B4B44((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1DC613668(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1DC62B274();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1DC613820(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1DC62B31C();
  if (!v8)
  {
    sub_1DC62B370();
    __break(1u);
LABEL_17:
    result = sub_1DC62B3C4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1DC613820(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1DC6138B4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1DC613A88(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1DC613A88(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DC6138B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1DC613A28(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1DC62B2F8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1DC62B370();
      __break(1u);
LABEL_10:
      v2 = sub_1DC62B124();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1DC62B3C4();
    __break(1u);
LABEL_14:
    result = sub_1DC62B370();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1DC613A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1DC613BD0();
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1DC613A88(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC613BD0();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DC62B3C4();
  __break(1u);
  return result;
}

void sub_1DC613BD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0370820)
  {
    v0 = sub_1DC62B514();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0370820);
  }
}

StocksAnalytics::Role_optional __swiftcall Role.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::Role_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Role.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6369747261;
  if (*v0 != 1)
    v1 = 0x50676E69646E616CLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC613CE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC54215C(*a1, *a2);
}

unint64_t sub_1DC613CF0()
{
  unint64_t result;

  result = qword_1F0370828;
  if (!qword_1F0370828)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for Role, &type metadata for Role);
    atomic_store(result, (unint64_t *)&qword_1F0370828);
  }
  return result;
}

uint64_t sub_1DC613D34()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC613DDC()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC613E60()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::Role_optional sub_1DC613F04(Swift::String *a1)
{
  return Role.init(rawValue:)(*a1);
}

void sub_1DC613F10(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x656C6369747261;
  if (v2 != 1)
  {
    v5 = 0x50676E69646E616CLL;
    v4 = 0xEB00000000656761;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC613F78()
{
  sub_1DC6140EC();
  return sub_1DC62B13C();
}

uint64_t sub_1DC613FD4()
{
  sub_1DC6140EC();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for Role(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC61406C + 4 * byte_1DC649EC1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC6140A0 + 4 * byte_1DC649EBC[v4]))();
}

uint64_t sub_1DC6140A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6140A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC6140B0);
  return result;
}

uint64_t sub_1DC6140BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC6140C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC6140C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6140D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Role()
{
  return &type metadata for Role;
}

unint64_t sub_1DC6140EC()
{
  unint64_t result;

  result = qword_1EDB11600;
  if (!qword_1EDB11600)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for Role, &type metadata for Role);
    atomic_store(result, (unint64_t *)&qword_1EDB11600);
  }
  return result;
}

uint64_t sub_1DC614130(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB11C10, MEMORY[0x1E0CF8078]);
}

uint64_t static FeedLoadFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB11C38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB11C10, a1);
}

uint64_t sub_1DC614170(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB11C40, MEMORY[0x1E0CF8380]);
}

uint64_t static FeedLoadFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(qword_1EDB11C58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB11C40, a1);
}

uint64_t FeedLoadFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t FeedLoadFailureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FeedLoadFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 20);
  sub_1DC501EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for FeedLoadFailureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, (uint64_t *)&unk_1EDB11C28);
}

uint64_t FeedLoadFailureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 20);
  sub_1DC501EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FeedLoadFailureEvent.feedData.modify())()
{
  type metadata accessor for FeedLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 20);
  sub_1DC501EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t FeedLoadFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t FeedLoadFailureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedLoadFailureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F03708A0);
}

uint64_t FeedLoadFailureEvent.Model.init(eventData:feedData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  v8 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a3, a1, v8);
  result = type metadata accessor for FeedLoadFailureEvent.Model(0);
  v10 = a3 + *(int *)(result + 20);
  *(_BYTE *)v10 = v5;
  *(_QWORD *)(v10 + 8) = v6;
  *(_QWORD *)(v10 + 16) = v7;
  return result;
}

uint64_t sub_1DC614410()
{
  sub_1DC6145D4();
  return sub_1DC62B604();
}

uint64_t sub_1DC614438()
{
  sub_1DC6145D4();
  return sub_1DC62B610();
}

uint64_t FeedLoadFailureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[8];
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  sub_1DC6148AC(0, &qword_1F0370830, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC6145D4();
  sub_1DC62B5F8();
  v16 = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (char *)(v3 + *(int *)(type metadata accessor for FeedLoadFailureEvent.Model(0) + 20));
    v11 = *v10;
    v13 = *((_QWORD *)v10 + 1);
    v12 = *((_QWORD *)v10 + 2);
    v16 = v11;
    v17 = v13;
    v18 = v12;
    v15[7] = 1;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC6145D4()
{
  unint64_t result;

  result = qword_1F0370838;
  if (!qword_1F0370838)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A18C, &type metadata for FeedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370838);
  }
  return result;
}

uint64_t FeedLoadFailureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Failure;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v23 = a2;
  v27 = sub_1DC62ABA8();
  v24 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC6148AC(0, &qword_1F0370840, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  MEMORY[0x1E0C80A78](Failure);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC6145D4();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = a1;
  v22 = v6;
  v12 = (uint64_t)v11;
  v13 = v24;
  v28 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v25;
  v14 = v26;
  v16 = v27;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v31 = 1;
  sub_1DC4BEF94();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v14);
  v17 = v29;
  v18 = v30;
  v19 = v12 + *(int *)(Failure + 20);
  *(_BYTE *)v19 = v28;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = v18;
  sub_1DC614908(v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_1DC61494C(v12);
}

void sub_1DC6148AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC6145D4();
    v7 = a3(a1, &type metadata for FeedLoadFailureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC614908(uint64_t a1, uint64_t a2)
{
  uint64_t Failure;

  Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 16))(a2, a1, Failure);
  return a2;
}

uint64_t sub_1DC61494C(uint64_t a1)
{
  uint64_t Failure;

  Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 8))(a1, Failure);
  return a1;
}

uint64_t sub_1DC614988@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedLoadFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC61499C(_QWORD *a1)
{
  return FeedLoadFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC6149B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB11C38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB11C10, a1);
}

uint64_t sub_1DC6149D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(qword_1EDB11C58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB11C40, a1);
}

uint64_t getEnumTagSinglePayload for FeedLoadFailureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC614A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC501EFC();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedLoadFailureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC614A84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC501EFC();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for FeedLoadFailureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC614B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedLoadFailureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC614B98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC614C14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedLoadFailureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC614CD0 + 4 * byte_1DC649FD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC614D04 + 4 * byte_1DC649FD0[v4]))();
}

uint64_t sub_1DC614D04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC614D0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC614D14);
  return result;
}

uint64_t sub_1DC614D20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC614D28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC614D2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC614D34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedLoadFailureEvent.Model.CodingKeys()
{
  return &type metadata for FeedLoadFailureEvent.Model.CodingKeys;
}

unint64_t sub_1DC614D54()
{
  unint64_t result;

  result = qword_1F03708D8;
  if (!qword_1F03708D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A164, &type metadata for FeedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03708D8);
  }
  return result;
}

unint64_t sub_1DC614D9C()
{
  unint64_t result;

  result = qword_1F03708E0;
  if (!qword_1F03708E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A0D4, &type metadata for FeedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03708E0);
  }
  return result;
}

unint64_t sub_1DC614DE4()
{
  unint64_t result;

  result = qword_1F03708E8;
  if (!qword_1F03708E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A0FC, &type metadata for FeedLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03708E8);
  }
  return result;
}

uint64_t dispatch thunk of AgreedToTermsAndConditionsProvider.agreedToTermsAndConditions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DC614E30(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F03708F0, MEMORY[0x1E0CF8078]);
}

uint64_t static AdEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369288, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F03708F0, a1);
}

uint64_t sub_1DC614E70(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0370908, MEMORY[0x1E0CF8380]);
}

uint64_t static AdEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369290, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370908, a1);
}

uint64_t AdEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AdEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AdEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdEngagementEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AdEngagementEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370990);
}

uint64_t AdEngagementEvent.adData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdEngagementEvent.adData.modify())()
{
  type metadata accessor for AdEngagementEvent(0);
  return nullsub_1;
}

uint64_t AdEngagementEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdEngagementEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdEngagementEvent.viewData.modify())()
{
  type metadata accessor for AdEngagementEvent(0);
  return nullsub_1;
}

uint64_t AdEngagementEvent.adEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdEngagementEvent.adEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdEngagementEvent.adEngagementData.modify())()
{
  type metadata accessor for AdEngagementEvent(0);
  return nullsub_1;
}

uint64_t AdEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdEngagementEvent.channelData.modify())()
{
  type metadata accessor for AdEngagementEvent(0);
  return nullsub_1;
}

uint64_t AdEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AdEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t AdEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AdEngagementEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_WORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AdEngagementEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370A30);
}

uint64_t AdEngagementEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AdEngagementEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AdEngagementEvent.Model.adEngagementData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdEngagementEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AdEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AdEngagementEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 AdEngagementEvent.Model.init(eventData:adData:viewData:adEngagementData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  __n128 result;
  __int128 v22;
  __int128 v23;
  char v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;

  v8 = *a2;
  v9 = a2[1];
  v10 = *((_WORD *)a2 + 8);
  v22 = *(_OWORD *)(a2 + 5);
  v23 = *(_OWORD *)(a2 + 3);
  v11 = a2[7];
  v12 = a2[8];
  v13 = *a3;
  v14 = a3[1];
  v15 = *((_WORD *)a3 + 8);
  v29 = *a5;
  v27 = a5[1].n128_u64[1];
  v28 = a5[1].n128_u64[0];
  v26 = a5[2].n128_u8[0];
  v24 = *a4;
  v25 = a5[2].n128_u8[1];
  v16 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for AdEngagementEvent.Model(0);
  v18 = a6 + v17[5];
  *(_QWORD *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_WORD *)(v18 + 16) = v10;
  *(_OWORD *)(v18 + 24) = v23;
  *(_OWORD *)(v18 + 40) = v22;
  *(_QWORD *)(v18 + 56) = v11;
  *(_QWORD *)(v18 + 64) = v12;
  v19 = a6 + v17[6];
  *(_QWORD *)v19 = v13;
  *(_QWORD *)(v19 + 8) = v14;
  *(_WORD *)(v19 + 16) = v15;
  *(_BYTE *)(a6 + v17[7]) = v24;
  v20 = (__n128 *)(a6 + v17[8]);
  result = v29;
  *v20 = v29;
  v20[1].n128_u64[0] = v28;
  v20[1].n128_u64[1] = v27;
  v20[2].n128_u8[0] = v26;
  v20[2].n128_u8[1] = v25;
  return result;
}

uint64_t sub_1DC6156F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC615724 + 4 * byte_1DC64A210[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC615724()
{
  return 0x617461446461;
}

uint64_t sub_1DC615738()
{
  return 0x6174614477656976;
}

unint64_t sub_1DC615750()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC61576C()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC61578C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC617880(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC6157B0()
{
  sub_1DC615A80();
  return sub_1DC62B604();
}

uint64_t sub_1DC6157D8()
{
  sub_1DC615A80();
  return sub_1DC62B610();
}

uint64_t AdEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  __int128 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v3 = v1;
  sub_1DC615EE0(0, &qword_1F0370920, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC615A80();
  sub_1DC62B5F8();
  LOBYTE(v25) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AdEngagementEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_QWORD *)(v11 + 8);
    v13 = *(_WORD *)(v11 + 16);
    *(_QWORD *)&v25 = *(_QWORD *)v11;
    *((_QWORD *)&v25 + 1) = v12;
    LOWORD(v26) = v13;
    v14 = *(_OWORD *)(v11 + 40);
    v27 = *(_OWORD *)(v11 + 24);
    v28 = v14;
    v29 = *(_OWORD *)(v11 + 56);
    HIBYTE(v24) = 1;
    sub_1DC51F77C();
    sub_1DC62B4E4();
    v15 = (uint64_t *)(v3 + v10[6]);
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    *(_QWORD *)&v25 = v16;
    *((_QWORD *)&v25 + 1) = v17;
    LOWORD(v26) = (_WORD)v15;
    HIBYTE(v24) = 2;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    LOBYTE(v25) = *(_BYTE *)(v3 + v10[7]);
    HIBYTE(v24) = 3;
    sub_1DC584BA0();
    sub_1DC62B4E4();
    v18 = (__int128 *)(v3 + v10[8]);
    v19 = *v18;
    v20 = *((_QWORD *)v18 + 2);
    v21 = *((_QWORD *)v18 + 3);
    v22 = *((_BYTE *)v18 + 32);
    LOBYTE(v18) = *((_BYTE *)v18 + 33);
    v25 = v19;
    v26 = v20;
    *(_QWORD *)&v27 = v21;
    BYTE8(v27) = v22;
    BYTE9(v27) = (_BYTE)v18;
    HIBYTE(v24) = 4;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC615A80()
{
  unint64_t result;

  result = qword_1F0370928;
  if (!qword_1F0370928)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A43C, &type metadata for AdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370928);
  }
  return result;
}

uint64_t AdEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;

  v29 = a2;
  v3 = sub_1DC62ABA8();
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC615EE0(0, &qword_1F0370930, MEMORY[0x1E0DED048]);
  v33 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - v7;
  v9 = (int *)type metadata accessor for AdEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC615A80();
  v32 = v8;
  v12 = v34;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v30;
  v34 = v11;
  LOBYTE(v35) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v15 = (uint64_t)v34;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v34, v31, v3);
  v40 = 1;
  sub_1DC51F738();
  sub_1DC62B454();
  v16 = *((_QWORD *)&v35 + 1);
  v17 = v36;
  v18 = v15 + v9[5];
  *(_QWORD *)v18 = v35;
  *(_QWORD *)(v18 + 8) = v16;
  *(_WORD *)(v18 + 16) = v17;
  *(_OWORD *)(v18 + 24) = v37;
  *(_OWORD *)(v18 + 40) = v38;
  *(_OWORD *)(v18 + 56) = v39;
  v40 = 2;
  sub_1DC4BEDAC();
  v31 = 0;
  sub_1DC62B454();
  v19 = *((_QWORD *)&v35 + 1);
  v20 = v36;
  v21 = v15 + v9[6];
  *(_QWORD *)v21 = v35;
  *(_QWORD *)(v21 + 8) = v19;
  *(_WORD *)(v21 + 16) = v20;
  v40 = 3;
  sub_1DC584B5C();
  sub_1DC62B454();
  *(_BYTE *)(v15 + v9[7]) = v35;
  v40 = 4;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v33);
  v22 = v36;
  v23 = v37;
  v24 = BYTE8(v37);
  v25 = BYTE9(v37);
  v26 = v15 + v9[8];
  *(_OWORD *)v26 = v35;
  *(_QWORD *)(v26 + 16) = v22;
  *(_QWORD *)(v26 + 24) = v23;
  *(_BYTE *)(v26 + 32) = v24;
  *(_BYTE *)(v26 + 33) = v25;
  sub_1DC615F3C(v15, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DC615F80(v15);
}

void sub_1DC615EE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC615A80();
    v7 = a3(a1, &type metadata for AdEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC615F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC615F80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC615FBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AdEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC615FD0(_QWORD *a1)
{
  return AdEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC615FE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369288, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F03708F0, a1);
}

uint64_t sub_1DC616008@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369290, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370908, a1);
}

uint64_t sub_1DC61602C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for AdEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for AdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for AdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for AdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for AdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC616ACC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AdEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC616C38(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC616DA0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AdEngagementEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 4) = v13;
    v14 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v14;
    v15 = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *((_QWORD *)v10 + 8) = v15;
    v16 = (char *)a1 + v9;
    v17 = (char *)a2 + v9;
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    *((_WORD *)v16 + 8) = *((_WORD *)v17 + 8);
    v19 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = *((_QWORD *)v21 + 3);
    *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
    *((_QWORD *)v20 + 3) = v23;
    v20[32] = v21[32];
    v20[33] = v21[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdEngagementEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = v12;
  v13 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v13;
  v14 = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(v9 + 64) = v14;
  v15 = a1 + v8;
  v16 = a2 + v8;
  v17 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_QWORD *)(v15 + 8) = v17;
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v21;
  v22 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = v22;
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(v20 + 32);
  *(_BYTE *)(v19 + 33) = *(_BYTE *)(v20 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_BYTE *)(v11 + 17) = *(_BYTE *)(v12 + 17);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
  *(_BYTE *)(v14 + 33) = *(_BYTE *)(v15 + 33);
  return a1;
}

uint64_t initializeWithTake for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = a1 + v8;
  v14 = (__int128 *)(a2 + v8);
  *(_WORD *)(v13 + 16) = *((_WORD *)v14 + 8);
  v15 = *v14;
  v16 = a3[7];
  v17 = a3[8];
  v18 = *(_BYTE *)(a2 + v16);
  *(_OWORD *)v13 = v15;
  *(_BYTE *)(a1 + v16) = v18;
  v19 = a1 + v17;
  v20 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)v19 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v19 + 16) = v20;
  *(_WORD *)(v19 + 32) = *(_WORD *)(a2 + v17 + 32);
  return a1;
}

uint64_t assignWithTake for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = v13;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(v20 + 32);
  *(_BYTE *)(v19 + 33) = *(_BYTE *)(v20 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC617544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AdEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6175D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC61764C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AdEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC617728 + 4 * byte_1DC64A21A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC61775C + 4 * byte_1DC64A215[v4]))();
}

uint64_t sub_1DC61775C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC617764(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC61776CLL);
  return result;
}

uint64_t sub_1DC617778(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC617780);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC617784(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC61778C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementEvent.Model.CodingKeys()
{
  return &type metadata for AdEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DC6177AC()
{
  unint64_t result;

  result = qword_1F0370A78;
  if (!qword_1F0370A78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A414, &type metadata for AdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370A78);
  }
  return result;
}

unint64_t sub_1DC6177F4()
{
  unint64_t result;

  result = qword_1F0370A80;
  if (!qword_1F0370A80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A384, &type metadata for AdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370A80);
  }
  return result;
}

unint64_t sub_1DC61783C()
{
  unint64_t result;

  result = qword_1F0370A88;
  if (!qword_1F0370A88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A3AC, &type metadata for AdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370A88);
  }
  return result;
}

uint64_t sub_1DC617880(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64D100 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DC617AB0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB10380, MEMORY[0x1E0CF8078]);
}

uint64_t static NewsArticleViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10398, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10380, a1);
}

uint64_t sub_1DC617AF0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB103A0, MEMORY[0x1E0CF8380]);
}

uint64_t static NewsArticleViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB103B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB103A0, a1);
}

uint64_t NewsArticleViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NewsArticleViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NewsArticleViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NewsArticleViewEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for NewsArticleViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB103C8);
}

uint64_t NewsArticleViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.timedData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.newsArticleData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.feedPositionData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.inGroupPositionData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.feedData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.groupData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.viewData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.articleScienceData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.userArticleContextData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 56);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 56);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.orientationData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.issueData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.badgeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 64);
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.badgeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 64);
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.badgeData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 68);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 68);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.channelData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.articleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 72);
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.articleViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 72);
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.articleViewData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 76);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 76);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.viewEndData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 80);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 80);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.purchaseSessionData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 84);
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 84);
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.campaignData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.referringArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 88);
  sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.referringArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 88);
  sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.referringArticleData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 92);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 92);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.paywallData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 96);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 96);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.activeWatchlistData.modify())()
{
  type metadata accessor for NewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NewsArticleViewEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v10, v27);
  v28 = a1 + v4[16];
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v10, v29);
  v30 = a1 + v4[17];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v2, v31);
  v32 = a1 + v4[18];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v32, v2, v33);
  v34 = a1 + v4[19];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v34, v2, v35);
  v36 = a1 + v4[20];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v36, v10, v37);
  v38 = a1 + v4[21];
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v38, v10, v39);
  v40 = a1 + v4[22];
  sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v40, v10, v41);
  v42 = a1 + v4[23];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v42, v10, v43);
  v44 = a1 + v4[24];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v44, v10, v45);
}

uint64_t NewsArticleViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NewsArticleViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NewsArticleViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for NewsArticleViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12CE8);
}

uint64_t NewsArticleViewEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NewsArticleViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsArticleViewEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NewsArticleViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsArticleViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 36);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t NewsArticleViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 48);
  v4 = *(_OWORD *)(v3 + 144);
  v5 = *(_OWORD *)(v3 + 176);
  v31 = *(_OWORD *)(v3 + 160);
  v32 = v5;
  v6 = *(_OWORD *)(v3 + 80);
  v7 = *(_OWORD *)(v3 + 112);
  v27 = *(_OWORD *)(v3 + 96);
  v8 = v27;
  v28 = v7;
  v9 = *(_OWORD *)(v3 + 112);
  v10 = *(_OWORD *)(v3 + 144);
  v29 = *(_OWORD *)(v3 + 128);
  v11 = v29;
  v30 = v10;
  v12 = *(_OWORD *)(v3 + 48);
  v13 = *(_OWORD *)(v3 + 80);
  v25 = *(_OWORD *)(v3 + 64);
  v14 = v25;
  v26 = v13;
  v15 = *(_OWORD *)(v3 + 16);
  v16 = *(_OWORD *)(v3 + 48);
  v23 = *(_OWORD *)(v3 + 32);
  v17 = v23;
  v24 = v16;
  v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  v19 = v22[0];
  v22[1] = v18;
  v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v6;
  v33 = *(_QWORD *)(v3 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v15;
  return sub_1DC4F537C((uint64_t)v22);
}

uint64_t NewsArticleViewEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t NewsArticleViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t NewsArticleViewEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 60));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.badgeData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t NewsArticleViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 68));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.articleViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 72));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t NewsArticleViewEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 80));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 84));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC537928(v4, v5);
}

uint64_t NewsArticleViewEvent.Model.referringArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 88);
  v4 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.paywallData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 92));
  return result;
}

uint64_t NewsArticleViewEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 96));
  return result;
}

__n128 NewsArticleViewEvent.Model.init(eventData:timedData:newsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:viewData:articleScienceData:userArticleContextData:orientationData:issueData:badgeData:channelData:articleViewData:viewEndData:purchaseSessionData:campaignData:referringArticleData:paywallData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, int *a4@<X3>, int *a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, __int16 *a11, __int16 *a12, uint64_t *a13, __int16 *a14, __int128 *a15, uint64_t *a16, char *a17, uint64_t *a18, __int128 *a19, __n128 *a20,char *a21,char *a22)
{
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  __n128 *v47;
  __n128 result;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  int v53;
  __int128 v54;
  char v55;
  int v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int16 v63;
  uint64_t v64;
  uint64_t v65;
  __int16 v67;
  __int16 v68;
  uint64_t v69;
  uint64_t v70;
  __int16 v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 v84;
  unint64_t v85;
  __int128 v86;
  char v87;
  __int128 v88;
  char v89;
  __n128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v54 = *a3;
  v50 = *((_QWORD *)a3 + 3);
  v51 = *((_QWORD *)a3 + 2);
  v49 = *((_BYTE *)a3 + 32);
  v24 = *((_QWORD *)a3 + 5);
  v25 = *((_BYTE *)a3 + 48);
  v26 = *((_QWORD *)a3 + 7);
  v27 = *((_BYTE *)a3 + 64);
  v28 = *((_BYTE *)a3 + 65);
  v29 = *((_BYTE *)a3 + 66);
  v30 = *((_BYTE *)a3 + 67);
  v52 = *((_BYTE *)a4 + 4);
  v53 = *a4;
  v55 = *((_BYTE *)a5 + 4);
  v56 = *a5;
  v58 = *a6;
  v57 = *((_QWORD *)a6 + 2);
  v61 = a7[1];
  v62 = *a7;
  v59 = *((_QWORD *)a7 + 5);
  v60 = *((_QWORD *)a7 + 4);
  v64 = a8[1];
  v65 = *a8;
  v63 = *((_WORD *)a8 + 8);
  v101 = a10[10];
  v102 = a10[11];
  v103 = *((_QWORD *)a10 + 24);
  v97 = a10[6];
  v98 = a10[7];
  v99 = a10[8];
  v100 = a10[9];
  v93 = a10[2];
  v94 = a10[3];
  v95 = a10[4];
  v96 = a10[5];
  v91 = *a10;
  v92 = a10[1];
  v67 = *a11;
  v68 = *a12;
  v69 = a13[1];
  v70 = *a13;
  v71 = *a14;
  v79 = *a15;
  v75 = *((_QWORD *)a15 + 2);
  v74 = *((_QWORD *)a15 + 3);
  v72 = *((_BYTE *)a15 + 33);
  v73 = *((_BYTE *)a15 + 32);
  v76 = a16[1];
  v77 = *a16;
  v78 = *a17;
  v80 = a18[1];
  v81 = *a18;
  v88 = *a19;
  v86 = a19[1];
  v82 = *((_QWORD *)a19 + 5);
  v83 = *((_QWORD *)a19 + 4);
  v90 = *a20;
  v85 = a20[1].n128_u64[0];
  v84 = a20[1].n128_u8[8];
  v87 = *a21;
  v89 = *a22;
  v31 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a9, a1, v31);
  v32 = (int *)type metadata accessor for NewsArticleViewEvent.Model(0);
  v33 = a9 + v32[5];
  v34 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v33, a2, v34);
  v35 = a9 + v32[6];
  *(_QWORD *)(v35 + 16) = v51;
  *(_QWORD *)(v35 + 24) = v50;
  *(_BYTE *)(v35 + 32) = v49;
  *(_QWORD *)(v35 + 40) = v24;
  *(_BYTE *)(v35 + 48) = v25;
  *(_QWORD *)(v35 + 56) = v26;
  *(_BYTE *)(v35 + 64) = v27;
  *(_BYTE *)(v35 + 65) = v28;
  *(_BYTE *)(v35 + 66) = v29;
  *(_BYTE *)(v35 + 67) = v30;
  *(_OWORD *)v35 = v54;
  v36 = a9 + v32[7];
  *(_DWORD *)v36 = v53;
  *(_BYTE *)(v36 + 4) = v52;
  v37 = a9 + v32[8];
  *(_DWORD *)v37 = v56;
  *(_BYTE *)(v37 + 4) = v55;
  v38 = a9 + v32[9];
  *(_OWORD *)v38 = v58;
  *(_QWORD *)(v38 + 16) = v57;
  v39 = a9 + v32[10];
  *(_OWORD *)v39 = v62;
  *(_OWORD *)(v39 + 16) = v61;
  *(_QWORD *)(v39 + 32) = v60;
  *(_QWORD *)(v39 + 40) = v59;
  v40 = a9 + v32[11];
  *(_QWORD *)v40 = v65;
  *(_QWORD *)(v40 + 8) = v64;
  *(_WORD *)(v40 + 16) = v63;
  v41 = a9 + v32[12];
  *(_QWORD *)(v41 + 192) = v103;
  *(_OWORD *)(v41 + 160) = v101;
  *(_OWORD *)(v41 + 176) = v102;
  *(_OWORD *)(v41 + 96) = v97;
  *(_OWORD *)(v41 + 112) = v98;
  *(_OWORD *)(v41 + 128) = v99;
  *(_OWORD *)(v41 + 144) = v100;
  *(_OWORD *)(v41 + 32) = v93;
  *(_OWORD *)(v41 + 48) = v94;
  *(_OWORD *)(v41 + 64) = v95;
  *(_OWORD *)(v41 + 80) = v96;
  *(_OWORD *)v41 = v91;
  *(_OWORD *)(v41 + 16) = v92;
  *(_WORD *)(a9 + v32[13]) = v67;
  *(_WORD *)(a9 + v32[14]) = v68;
  v42 = (_QWORD *)(a9 + v32[15]);
  *v42 = v70;
  v42[1] = v69;
  *(_WORD *)(a9 + v32[16]) = v71;
  v43 = a9 + v32[17];
  *(_QWORD *)(v43 + 16) = v75;
  *(_QWORD *)(v43 + 24) = v74;
  *(_BYTE *)(v43 + 32) = v73;
  *(_BYTE *)(v43 + 33) = v72;
  *(_OWORD *)v43 = v79;
  v44 = (_QWORD *)(a9 + v32[18]);
  *v44 = v77;
  v44[1] = v76;
  *(_BYTE *)(a9 + v32[19]) = v78;
  v45 = (_QWORD *)(a9 + v32[20]);
  *v45 = v81;
  v45[1] = v80;
  v46 = a9 + v32[21];
  *(_QWORD *)(v46 + 32) = v83;
  *(_QWORD *)(v46 + 40) = v82;
  *(_OWORD *)v46 = v88;
  *(_OWORD *)(v46 + 16) = v86;
  v47 = (__n128 *)(a9 + v32[22]);
  v47[1].n128_u64[0] = v85;
  v47[1].n128_u8[8] = v84;
  result = v90;
  *v47 = v90;
  *(_BYTE *)(a9 + v32[23]) = v87;
  *(_BYTE *)(a9 + v32[24]) = v89;
  return result;
}

uint64_t sub_1DC619DE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC619E18 + 4 * byte_1DC64A490[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC619E18()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC619E2C()
{
  return 0x697472417377656ELL;
}

unint64_t sub_1DC619E50()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC619FF4()
{
  unsigned __int8 *v0;

  return sub_1DC619DE0(*v0);
}

uint64_t sub_1DC619FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC6204C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC61A020(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_1DC61A02C()
{
  sub_1DC61A91C();
  return sub_1DC62B604();
}

uint64_t sub_1DC61A054()
{
  sub_1DC61A91C();
  return sub_1DC62B610();
}

uint64_t NewsArticleViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  int *v22;
  int v23;
  int *v24;
  int v25;
  __int128 *v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 *v48;
  __int128 v49;
  __int128 *v50;
  uint64_t v51;
  char v52;
  uint64_t v54;
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  __int16 v72;

  v3 = v1;
  sub_1DC61B660(0, &qword_1F0370A90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v54 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC61A91C();
  sub_1DC62B5F8();
  LOBYTE(v56) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NewsArticleViewEvent.Model(0);
    LOBYTE(v56) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v56 = v12;
    *(_QWORD *)&v57 = v13;
    *((_QWORD *)&v57 + 1) = v14;
    LOBYTE(v58) = v15;
    *((_QWORD *)&v58 + 1) = v16;
    LOBYTE(v59) = v17;
    *((_QWORD *)&v59 + 1) = v18;
    LOBYTE(v60) = v19;
    BYTE1(v60) = v20;
    BYTE2(v60) = v21;
    BYTE3(v60) = (_BYTE)v11;
    LOBYTE(v70) = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (int *)(v3 + v10[7]);
    v23 = *v22;
    LOBYTE(v22) = *((_BYTE *)v22 + 4);
    LODWORD(v56) = v23;
    BYTE4(v56) = (_BYTE)v22;
    LOBYTE(v70) = 3;
    sub_1DC510CE4();
    sub_1DC62B490();
    v24 = (int *)(v3 + v10[8]);
    v25 = *v24;
    LOBYTE(v24) = *((_BYTE *)v24 + 4);
    LODWORD(v56) = v25;
    BYTE4(v56) = (_BYTE)v24;
    LOBYTE(v70) = 4;
    sub_1DC510E64();
    sub_1DC62B490();
    v26 = (__int128 *)(v3 + v10[9]);
    v27 = *((_QWORD *)v26 + 2);
    v56 = *v26;
    *(_QWORD *)&v57 = v27;
    LOBYTE(v70) = 5;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v28 = (__int128 *)(v3 + v10[10]);
    v29 = v28[1];
    v56 = *v28;
    v57 = v29;
    v58 = v28[2];
    LOBYTE(v70) = 6;
    sub_1DC4C9004();
    sub_1DC62B490();
    v30 = (uint64_t *)(v3 + v10[11]);
    v31 = *v30;
    v32 = v30[1];
    LOWORD(v30) = *((_WORD *)v30 + 8);
    v70 = v31;
    v71 = v32;
    v72 = (__int16)v30;
    v69 = 7;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v33 = (__int128 *)(v3 + v10[12]);
    v34 = v33[11];
    v66 = v33[10];
    v67 = v34;
    v68 = *((_QWORD *)v33 + 24);
    v35 = v33[7];
    v62 = v33[6];
    v63 = v35;
    v36 = v33[9];
    v64 = v33[8];
    v65 = v36;
    v37 = v33[3];
    v58 = v33[2];
    v59 = v37;
    v38 = v33[5];
    v60 = v33[4];
    v61 = v38;
    v39 = *v33;
    v57 = v33[1];
    v56 = v39;
    v55 = 8;
    sub_1DC4F4918();
    sub_1DC62B4E4();
    LOWORD(v56) = *(_WORD *)(v3 + v10[13]);
    v55 = 9;
    sub_1DC4F4A98();
    sub_1DC62B4E4();
    LOWORD(v56) = *(_WORD *)(v3 + v10[14]);
    v55 = 10;
    sub_1DC4C0058();
    sub_1DC62B4E4();
    v56 = *(_OWORD *)(v3 + v10[15]);
    v55 = 11;
    sub_1DC4C9674();
    sub_1DC62B490();
    LOWORD(v56) = *(_WORD *)(v3 + v10[16]);
    v55 = 12;
    sub_1DC5AB99C();
    sub_1DC62B490();
    v40 = (__int128 *)(v3 + v10[17]);
    v41 = *v40;
    v42 = *((_QWORD *)v40 + 2);
    v43 = *((_QWORD *)v40 + 3);
    v44 = *((_BYTE *)v40 + 32);
    LOBYTE(v40) = *((_BYTE *)v40 + 33);
    v56 = v41;
    *(_QWORD *)&v57 = v42;
    *((_QWORD *)&v57 + 1) = v43;
    LOBYTE(v58) = v44;
    BYTE1(v58) = (_BYTE)v40;
    v55 = 13;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v45 = (uint64_t *)(v3 + v10[18]);
    v47 = *v45;
    v46 = v45[1];
    *(_QWORD *)&v56 = v47;
    *((_QWORD *)&v56 + 1) = v46;
    v55 = 14;
    sub_1DC4E656C();
    sub_1DC62B4E4();
    LOBYTE(v56) = *(_BYTE *)(v3 + v10[19]);
    v55 = 15;
    sub_1DC4C0298();
    sub_1DC62B4E4();
    v56 = *(_OWORD *)(v3 + v10[20]);
    v55 = 16;
    sub_1DC4FC754();
    sub_1DC62B490();
    v48 = (__int128 *)(v3 + v10[21]);
    v49 = v48[1];
    v56 = *v48;
    v57 = v49;
    v58 = v48[2];
    v55 = 17;
    sub_1DC5371F4();
    sub_1DC62B490();
    v50 = (__int128 *)(v3 + v10[22]);
    v51 = *((_QWORD *)v50 + 2);
    v52 = *((_BYTE *)v50 + 24);
    v56 = *v50;
    *(_QWORD *)&v57 = v51;
    BYTE8(v57) = v52;
    v55 = 18;
    sub_1DC5838EC();
    sub_1DC62B490();
    LOBYTE(v56) = *(_BYTE *)(v3 + v10[23]);
    v55 = 19;
    sub_1DC4FCA54();
    sub_1DC62B490();
    LOBYTE(v56) = *(_BYTE *)(v3 + v10[24]);
    v55 = 20;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC61A91C()
{
  unint64_t result;

  result = qword_1EDB12C80;
  if (!qword_1EDB12C80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A8DC, &type metadata for NewsArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12C80);
  }
  return result;
}

uint64_t NewsArticleViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char *v16;
  uint64_t result;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  int *v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char *v45;
  char v46;
  char *v47;
  char v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  __int16 v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  char v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  int *v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  _BOOL4 v115;
  char v116;
  char v117;

  v88 = a2;
  v93 = sub_1DC62ABC0();
  v91 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v4 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62ABA8();
  v92 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC61B660(0, &qword_1EDB12C88, MEMORY[0x1E0DED048]);
  v95 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v87 - v10;
  v98 = (int *)type metadata accessor for NewsArticleViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v98);
  v97 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v94 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC61A91C();
  v89 = v11;
  v14 = v96;
  sub_1DC62B5E0();
  v90 = v5;
  if (v14)
  {
    v96 = v14;
    LODWORD(v95) = 0;
    v15 = 0;
  }
  else
  {
    LOBYTE(v102) = 0;
    sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1DC62B454();
    v32 = v5;
    v33 = v97;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v97, v7, v32);
    LOBYTE(v102) = 1;
    sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v34 = v93;
    sub_1DC62B454();
    v35 = v98;
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(&v33[v98[5]], v4, v34);
    LOBYTE(v99) = 2;
    sub_1DC4C18A0();
    sub_1DC62B454();
    v36 = v103;
    v37 = v104;
    v38 = *((_QWORD *)&v104 + 1);
    v39 = v105;
    v40 = *((_QWORD *)&v105 + 1);
    v41 = v106;
    v42 = BYTE1(v106);
    v43 = BYTE2(v106);
    v44 = BYTE3(v106);
    v45 = &v33[v35[6]];
    *(_OWORD *)v45 = v102;
    *((_OWORD *)v45 + 1) = v36;
    v45[32] = v37;
    *((_QWORD *)v45 + 5) = v38;
    v45[48] = v39;
    *((_QWORD *)v45 + 7) = v40;
    v45[64] = v41;
    v45[65] = v42;
    v45[66] = v43;
    v45[67] = v44;
    LOBYTE(v99) = 3;
    sub_1DC510CA0();
    sub_1DC62B400();
    v46 = BYTE4(v102);
    v47 = &v33[v35[7]];
    *(_DWORD *)v47 = v102;
    v47[4] = v46;
    LOBYTE(v99) = 4;
    sub_1DC510E20();
    sub_1DC62B400();
    v48 = BYTE4(v102);
    v49 = &v33[v35[8]];
    *(_DWORD *)v49 = v102;
    v49[4] = v48;
    LOBYTE(v99) = 5;
    sub_1DC4BEF94();
    sub_1DC62B400();
    v50 = v103;
    v51 = &v33[v35[9]];
    *(_OWORD *)v51 = v102;
    *((_QWORD *)v51 + 2) = v50;
    LOBYTE(v99) = 6;
    sub_1DC4C8FC0();
    sub_1DC62B400();
    v52 = &v33[v35[10]];
    v53 = v103;
    *(_OWORD *)v52 = v102;
    *((_OWORD *)v52 + 1) = v53;
    *((_OWORD *)v52 + 2) = v104;
    LOBYTE(v99) = 7;
    sub_1DC4BEDAC();
    sub_1DC62B454();
    v54 = *((_QWORD *)&v102 + 1);
    v55 = v103;
    v56 = &v33[v35[11]];
    *(_QWORD *)v56 = v102;
    *((_QWORD *)v56 + 1) = v54;
    *((_WORD *)v56 + 8) = v55;
    v117 = 8;
    sub_1DC4F48D4();
    sub_1DC62B454();
    v57 = &v33[v98[12]];
    v58 = v113;
    *((_OWORD *)v57 + 10) = v112;
    *((_OWORD *)v57 + 11) = v58;
    *((_QWORD *)v57 + 24) = v114;
    v59 = v109;
    *((_OWORD *)v57 + 6) = v108;
    *((_OWORD *)v57 + 7) = v59;
    v60 = v111;
    *((_OWORD *)v57 + 8) = v110;
    *((_OWORD *)v57 + 9) = v60;
    v61 = v105;
    *((_OWORD *)v57 + 2) = v104;
    *((_OWORD *)v57 + 3) = v61;
    v62 = v107;
    *((_OWORD *)v57 + 4) = v106;
    *((_OWORD *)v57 + 5) = v62;
    v63 = v103;
    *(_OWORD *)v57 = v102;
    *((_OWORD *)v57 + 1) = v63;
    v116 = 9;
    sub_1DC4F4A54();
    sub_1DC62B454();
    v96 = 0;
    *(_WORD *)&v97[v98[13]] = v99;
    v116 = 10;
    sub_1DC4C0014();
    v64 = v96;
    sub_1DC62B454();
    v96 = v64;
    if (v64
      || (*(_WORD *)&v97[v98[14]] = v99, v116 = 11, sub_1DC4C9630(), v65 = v96, sub_1DC62B400(), (v96 = v65) != 0))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v89, v95);
      LODWORD(v95) = 0;
      v15 = 487;
    }
    else
    {
      *(_OWORD *)&v97[v98[15]] = v99;
      v116 = 12;
      sub_1DC5AB958();
      v66 = v96;
      sub_1DC62B400();
      v96 = v66;
      if (v66
        || (*(_WORD *)&v97[v98[16]] = v99, v116 = 13, sub_1DC4C8E40(), v67 = v96, sub_1DC62B454(), (v96 = v67) != 0))
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v89, v95);
        LODWORD(v95) = 0;
        v15 = 2535;
      }
      else
      {
        v68 = v100;
        v69 = v101;
        v70 = BYTE1(v101);
        v71 = &v97[v98[17]];
        *(_OWORD *)v71 = v99;
        *((_OWORD *)v71 + 1) = v68;
        v71[32] = v69;
        v71[33] = v70;
        v116 = 14;
        sub_1DC4E6528();
        v72 = v96;
        sub_1DC62B454();
        v96 = v72;
        if (v72)
        {
          (*(void (**)(char *, uint64_t))(v9 + 8))(v89, v95);
          LODWORD(v95) = 0;
          v15 = 10727;
        }
        else
        {
          v73 = *((_QWORD *)&v99 + 1);
          v74 = &v97[v98[18]];
          *(_QWORD *)v74 = v99;
          *((_QWORD *)v74 + 1) = v73;
          v116 = 15;
          sub_1DC4C0254();
          v75 = v96;
          sub_1DC62B454();
          v96 = v75;
          if (!v75)
          {
            v97[v98[19]] = v99;
            v116 = 16;
            sub_1DC4FC710();
            v76 = v96;
            sub_1DC62B400();
            v96 = v76;
            if (!v76)
            {
              *(_OWORD *)&v97[v98[20]] = v99;
              v116 = 17;
              sub_1DC5371B0();
              v77 = v96;
              sub_1DC62B400();
              v115 = v77 == 0;
              v96 = v77;
              if (v77)
                goto LABEL_46;
              v78 = &v97[v98[21]];
              v79 = v100;
              *(_OWORD *)v78 = v99;
              *((_OWORD *)v78 + 1) = v79;
              *((_OWORD *)v78 + 2) = v101;
              v116 = 18;
              sub_1DC5838A4();
              v80 = v96;
              sub_1DC62B400();
              v96 = v80;
              if (v80)
              {
LABEL_46:
                (*(void (**)(char *, uint64_t))(v9 + 8))(v89, v95);
                __swift_destroy_boxed_opaque_existential_1(v94);
                LODWORD(v94) = 0;
              }
              else
              {
                v81 = v100;
                v82 = BYTE8(v100);
                v83 = &v97[v98[22]];
                *(_OWORD *)v83 = v99;
                *((_QWORD *)v83 + 2) = v81;
                v83[24] = v82;
                v116 = 19;
                sub_1DC4FCA10();
                v84 = v96;
                sub_1DC62B400();
                v96 = v84;
                if (!v84)
                {
                  v97[v98[23]] = v99;
                  v116 = 20;
                  sub_1DC4C9930();
                  v85 = v96;
                  sub_1DC62B400();
                  v96 = v85;
                  if (!v85)
                  {
                    (*(void (**)(char *, uint64_t))(v9 + 8))(v89, v95);
                    v86 = (uint64_t)v97;
                    v97[v98[24]] = v99;
                    sub_1DC61B6F8(v86, v88);
                    __swift_destroy_boxed_opaque_existential_1(v94);
                    return sub_1DC61B73C(v86);
                  }
                }
                (*(void (**)(char *, uint64_t))(v9 + 8))(v89, v95);
                __swift_destroy_boxed_opaque_existential_1(v94);
                LODWORD(v94) = 1;
              }
              v16 = v97;
              (*(void (**)(char *, uint64_t))(v92 + 8))(v97, v90);
              (*(void (**)(char *, uint64_t))(v91 + 8))(&v16[v98[5]], v93);
              LOBYTE(v18) = 1;
              v19 = 1;
              v20 = 1;
              v21 = 1;
              v22 = 1;
              v23 = 1;
              LODWORD(v95) = 1;
              LODWORD(v93) = 1;
LABEL_9:
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
              if ((v18 & 1) != 0)
                goto LABEL_10;
              goto LABEL_22;
            }
          }
          (*(void (**)(char *, uint64_t))(v9 + 8))(v89, v95);
          v15 = 27111;
          LODWORD(v95) = 1;
        }
      }
    }
  }
  v16 = v97;
  result = __swift_destroy_boxed_opaque_existential_1(v94);
  v18 = (v15 >> 5) & 1;
  v19 = (v15 >> 6) & 1;
  v20 = (v15 >> 7) & 1;
  v21 = (v15 >> 8) & 1;
  v22 = (v15 >> 11) & 1;
  v23 = (v15 >> 13) & 1;
  if ((v15 & 1) != 0)
    result = (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v16, v90);
  if ((v15 & 2) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(&v16[v98[5]], v93);
    if ((v15 & 4) != 0)
      goto LABEL_8;
  }
  else if ((v15 & 4) != 0)
  {
LABEL_8:
    LODWORD(v93) = 0;
    v115 = 0;
    LODWORD(v94) = 0;
    goto LABEL_9;
  }
  LODWORD(v94) = 0;
  v115 = 0;
  LODWORD(v93) = 0;
  if ((v15 & 0x20) != 0)
  {
LABEL_10:
    v24 = v98;
    result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      goto LABEL_11;
    goto LABEL_23;
  }
LABEL_22:
  v24 = v98;
  if (!v19)
  {
LABEL_11:
    if (v20)
      goto LABEL_12;
    goto LABEL_24;
  }
LABEL_23:
  result = sub_1DC4CB1B4(*(_QWORD *)&v16[v24[10]], *(_QWORD *)&v16[v24[10] + 8], *(_QWORD *)&v16[v24[10] + 16]);
  if ((v20 & 1) != 0)
  {
LABEL_12:
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_13;
    goto LABEL_25;
  }
LABEL_24:
  if (!v21)
  {
LABEL_13:
    if (v22)
      goto LABEL_14;
    goto LABEL_26;
  }
LABEL_25:
  v25 = &v16[v24[12]];
  v26 = *((_OWORD *)v25 + 11);
  v112 = *((_OWORD *)v25 + 10);
  v113 = v26;
  v114 = *((_QWORD *)v25 + 24);
  v27 = *((_OWORD *)v25 + 7);
  v108 = *((_OWORD *)v25 + 6);
  v109 = v27;
  v28 = *((_OWORD *)v25 + 9);
  v110 = *((_OWORD *)v25 + 8);
  v111 = v28;
  v29 = *((_OWORD *)v25 + 3);
  v104 = *((_OWORD *)v25 + 2);
  v105 = v29;
  v30 = *((_OWORD *)v25 + 5);
  v106 = *((_OWORD *)v25 + 4);
  v107 = v30;
  v31 = *((_OWORD *)v25 + 1);
  v102 = *(_OWORD *)v25;
  v103 = v31;
  result = sub_1DC4F6710((uint64_t)&v102);
  if ((v22 & 1) != 0)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      goto LABEL_15;
    goto LABEL_27;
  }
LABEL_26:
  if (!v23)
  {
LABEL_15:
    if ((_DWORD)v95)
      goto LABEL_16;
    goto LABEL_28;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v95 & 1) != 0)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    if ((v93 & 1) == 0)
      goto LABEL_17;
    goto LABEL_29;
  }
LABEL_28:
  if (!(_DWORD)v93)
  {
LABEL_17:
    if (v115)
      goto LABEL_18;
LABEL_30:
    if (!(_DWORD)v94)
      return result;
    return swift_bridgeObjectRelease();
  }
LABEL_29:
  result = swift_bridgeObjectRelease();
  if (!v115)
    goto LABEL_30;
LABEL_18:
  result = sub_1DC61B6BC(*(_QWORD *)&v16[v24[21]], *(_QWORD *)&v16[v24[21] + 8]);
  if ((v94 & 1) == 0)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1DC61B660(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC61A91C();
    v7 = a3(a1, &type metadata for NewsArticleViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC61B6BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC61B6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC61B73C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NewsArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC61B778@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC61B78C(_QWORD *a1)
{
  return NewsArticleViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC61B7A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10398, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10380, a1);
}

uint64_t sub_1DC61B7C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB103B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB103A0, a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v88 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v88 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = a3[18];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    v64 = a3[19];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    v68 = a3[20];
    v69 = (char *)a1 + v68;
    v70 = (char *)a2 + v68;
    sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
    v72 = a3[21];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    v76 = a3[22];
    v77 = (char *)a1 + v76;
    v78 = (char *)a2 + v76;
    sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
    v80 = a3[23];
    v81 = (char *)a1 + v80;
    v82 = (char *)a2 + v80;
    sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
    v84 = a3[24];
    v85 = (char *)a1 + v84;
    v86 = (char *)a2 + v84;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
  }
  return a1;
}

uint64_t destroy for NewsArticleViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = a1 + a2[18];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = a1 + a2[19];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  v35 = a1 + a2[20];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  v37 = a1 + a2[21];
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  v39 = a1 + a2[22];
  sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
  v41 = a1 + a2[23];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
  v43 = a1 + a2[24];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
}

uint64_t initializeWithCopy for NewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
  return a1;
}

uint64_t assignWithCopy for NewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 24))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 24))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
  return a1;
}

uint64_t initializeWithTake for NewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
  return a1;
}

uint64_t assignWithTake for NewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = a2 + v59;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = a3[19];
  v64 = a1 + v63;
  v65 = a2 + v63;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  v67 = a3[20];
  v68 = a1 + v67;
  v69 = a2 + v67;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
  v71 = a3[21];
  v72 = a1 + v71;
  v73 = a2 + v71;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  v75 = a3[22];
  v76 = a1 + v75;
  v77 = a2 + v75;
  sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
  v79 = a3[23];
  v80 = a1 + v79;
  v81 = a2 + v79;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v80, v81, v82);
  v83 = a3[24];
  v84 = a1 + v83;
  v85 = a2 + v83;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 40))(v84, v85, v86);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC61DC5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                            v12 = *(_QWORD *)(v25 - 8);
                            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                            {
                              v8 = v25;
                              v13 = a3[17];
                            }
                            else
                            {
                              sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
                              v12 = *(_QWORD *)(v26 - 8);
                              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                              {
                                v8 = v26;
                                v13 = a3[18];
                              }
                              else
                              {
                                sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
                                v12 = *(_QWORD *)(v27 - 8);
                                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                {
                                  v8 = v27;
                                  v13 = a3[19];
                                }
                                else
                                {
                                  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
                                  v12 = *(_QWORD *)(v28 - 8);
                                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                  {
                                    v8 = v28;
                                    v13 = a3[20];
                                  }
                                  else
                                  {
                                    sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                                    v12 = *(_QWORD *)(v29 - 8);
                                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                    {
                                      v8 = v29;
                                      v13 = a3[21];
                                    }
                                    else
                                    {
                                      sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
                                      v12 = *(_QWORD *)(v30 - 8);
                                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                      {
                                        v8 = v30;
                                        v13 = a3[22];
                                      }
                                      else
                                      {
                                        sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                                        v12 = *(_QWORD *)(v31 - 8);
                                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                                        {
                                          v8 = v31;
                                          v13 = a3[23];
                                        }
                                        else
                                        {
                                          sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                                          v8 = v32;
                                          v12 = *(_QWORD *)(v32 - 8);
                                          v13 = a3[24];
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC61E1E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                            v14 = *(_QWORD *)(v27 - 8);
                            if (*(_DWORD *)(v14 + 84) == a3)
                            {
                              v10 = v27;
                              v15 = a4[17];
                            }
                            else
                            {
                              sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
                              v14 = *(_QWORD *)(v28 - 8);
                              if (*(_DWORD *)(v14 + 84) == a3)
                              {
                                v10 = v28;
                                v15 = a4[18];
                              }
                              else
                              {
                                sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
                                v14 = *(_QWORD *)(v29 - 8);
                                if (*(_DWORD *)(v14 + 84) == a3)
                                {
                                  v10 = v29;
                                  v15 = a4[19];
                                }
                                else
                                {
                                  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
                                  v14 = *(_QWORD *)(v30 - 8);
                                  if (*(_DWORD *)(v14 + 84) == a3)
                                  {
                                    v10 = v30;
                                    v15 = a4[20];
                                  }
                                  else
                                  {
                                    sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                                    v14 = *(_QWORD *)(v31 - 8);
                                    if (*(_DWORD *)(v14 + 84) == a3)
                                    {
                                      v10 = v31;
                                      v15 = a4[21];
                                    }
                                    else
                                    {
                                      sub_1DC4B4B50(0, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
                                      v14 = *(_QWORD *)(v32 - 8);
                                      if (*(_DWORD *)(v14 + 84) == a3)
                                      {
                                        v10 = v32;
                                        v15 = a4[22];
                                      }
                                      else
                                      {
                                        sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                                        v14 = *(_QWORD *)(v33 - 8);
                                        if (*(_DWORD *)(v14 + 84) == a3)
                                        {
                                          v10 = v33;
                                          v15 = a4[23];
                                        }
                                        else
                                        {
                                          sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                                          v10 = v34;
                                          v14 = *(_QWORD *)(v34 - 8);
                                          v15 = a4[24];
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC61E770()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                        if (v11 <= 0x3F)
                        {
                          sub_1DC4B4B50(319, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
                          if (v12 <= 0x3F)
                          {
                            sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                            if (v13 <= 0x3F)
                            {
                              sub_1DC4B4B50(319, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
                              if (v14 <= 0x3F)
                              {
                                sub_1DC4B4B50(319, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
                                if (v15 <= 0x3F)
                                {
                                  sub_1DC4B4B50(319, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
                                  if (v16 <= 0x3F)
                                  {
                                    sub_1DC4B4B50(319, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                                    if (v17 <= 0x3F)
                                    {
                                      sub_1DC4B4B50(319, &qword_1EDB0E800, (void (*)(void))sub_1DC5838A4, (void (*)(void))sub_1DC5838EC);
                                      if (v18 <= 0x3F)
                                      {
                                        sub_1DC4B4B50(319, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                                        if (v19 <= 0x3F)
                                        {
                                          sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                                          if (v20 <= 0x3F)
                                            swift_initStructMetadata();
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NewsArticleViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v76;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    v14[48] = v15[48];
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = a3[8];
    v21 = a3[9];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    *v24 = *v25;
    v26 = *((_QWORD *)v25 + 2);
    *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
    *((_QWORD *)v24 + 2) = v26;
    v27 = a3[10];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = *(_QWORD *)((char *)a2 + v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      *v28 = *v29;
      *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
      *((_QWORD *)v28 + 2) = v30;
      *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
      v31 = *((_QWORD *)v29 + 5);
      *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
      *((_QWORD *)v28 + 5) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v33 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v33;
      *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
    }
    v34 = a3[11];
    v35 = a3[12];
    v36 = (char *)a1 + v34;
    v37 = (char *)a2 + v34;
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    *((_WORD *)v36 + 8) = *((_WORD *)v37 + 8);
    v39 = (char *)a1 + v35;
    v40 = (char *)a2 + v35;
    v41 = *((_OWORD *)v40 + 1);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v41;
    v42 = *((_OWORD *)v40 + 3);
    *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
    *((_OWORD *)v39 + 3) = v42;
    *((_OWORD *)v39 + 4) = *((_OWORD *)v40 + 4);
    *((_QWORD *)v39 + 10) = *((_QWORD *)v40 + 10);
    *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
    *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
    *((_DWORD *)v39 + 30) = *((_DWORD *)v40 + 30);
    *((_OWORD *)v39 + 8) = *((_OWORD *)v40 + 8);
    v39[144] = v40[144];
    *(_QWORD *)(v39 + 148) = *(_QWORD *)(v40 + 148);
    v43 = *((_OWORD *)v40 + 11);
    *((_OWORD *)v39 + 10) = *((_OWORD *)v40 + 10);
    *((_OWORD *)v39 + 11) = v43;
    *((_QWORD *)v39 + 24) = *((_QWORD *)v40 + 24);
    v44 = a3[14];
    *(_WORD *)((char *)a1 + a3[13]) = *(_WORD *)((char *)a2 + a3[13]);
    *(_WORD *)((char *)a1 + v44) = *(_WORD *)((char *)a2 + v44);
    v45 = a3[15];
    v46 = a3[16];
    v47 = (_QWORD *)((char *)a1 + v45);
    v48 = (_QWORD *)((char *)a2 + v45);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    *(_WORD *)((char *)a1 + v46) = *(_WORD *)((char *)a2 + v46);
    v50 = a3[17];
    v51 = a3[18];
    v52 = (char *)a1 + v50;
    v53 = (char *)a2 + v50;
    v54 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *((_QWORD *)v52 + 1) = v54;
    v55 = *((_QWORD *)v53 + 3);
    *((_QWORD *)v52 + 2) = *((_QWORD *)v53 + 2);
    *((_QWORD *)v52 + 3) = v55;
    v52[32] = v53[32];
    v52[33] = v53[33];
    v56 = (_QWORD *)((char *)a1 + v51);
    v57 = (_QWORD *)((char *)a2 + v51);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    v59 = a3[20];
    *((_BYTE *)a1 + a3[19]) = *((_BYTE *)a2 + a3[19]);
    v60 = (_QWORD *)((char *)a1 + v59);
    v61 = (_QWORD *)((char *)a2 + v59);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = a3[21];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    v76 = *(_QWORD *)((char *)a2 + v63 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      *v64 = *v65;
      v64[1] = v76;
      v66 = v65[3];
      v64[2] = v65[2];
      v64[3] = v66;
      v67 = v65[4];
      v68 = v65[5];
      v64[4] = v67;
      v64[5] = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v69 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v69;
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
    }
    v70 = a3[22];
    v71 = a3[23];
    v72 = (char *)a1 + v70;
    v73 = (char *)a2 + v70;
    v74 = *((_QWORD *)v73 + 2);
    *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
    *((_QWORD *)v72 + 2) = v74;
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v72[24] = v73[24];
    *((_BYTE *)a1 + v71) = *((_BYTE *)a2 + v71);
    *((_BYTE *)a1 + a3[24]) = *((_BYTE *)a2 + a3[24]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NewsArticleViewEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[10] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[21] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v17 = a1 + v12;
  v18 = a2 + v12;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = v25;
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    *(_BYTE *)v27 = *(_BYTE *)v28;
    *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
    *(_QWORD *)(v27 + 16) = v29;
    *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
    v30 = *(_QWORD *)(v28 + 40);
    *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
    *(_QWORD *)(v27 + 40) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v31;
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  }
  v32 = a3[11];
  v33 = a3[12];
  v34 = a1 + v32;
  v35 = a2 + v32;
  v36 = *(_QWORD *)(v35 + 8);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v36;
  *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
  v37 = a1 + v33;
  v38 = a2 + v33;
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  v40 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v40;
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(_QWORD *)(v37 + 80) = *(_QWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 88) = *(_OWORD *)(v38 + 88);
  *(_OWORD *)(v37 + 104) = *(_OWORD *)(v38 + 104);
  *(_DWORD *)(v37 + 120) = *(_DWORD *)(v38 + 120);
  *(_OWORD *)(v37 + 128) = *(_OWORD *)(v38 + 128);
  *(_BYTE *)(v37 + 144) = *(_BYTE *)(v38 + 144);
  *(_QWORD *)(v37 + 148) = *(_QWORD *)(v38 + 148);
  v41 = *(_OWORD *)(v38 + 176);
  *(_OWORD *)(v37 + 160) = *(_OWORD *)(v38 + 160);
  *(_OWORD *)(v37 + 176) = v41;
  *(_QWORD *)(v37 + 192) = *(_QWORD *)(v38 + 192);
  v42 = a3[14];
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  *(_WORD *)(a1 + v42) = *(_WORD *)(a2 + v42);
  v43 = a3[15];
  v44 = a3[16];
  v45 = (_QWORD *)(a1 + v43);
  v46 = (_QWORD *)(a2 + v43);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  *(_WORD *)(a1 + v44) = *(_WORD *)(a2 + v44);
  v48 = a3[17];
  v49 = a3[18];
  v50 = a1 + v48;
  v51 = a2 + v48;
  v52 = *(_QWORD *)(v51 + 8);
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *(_QWORD *)(v50 + 8) = v52;
  v53 = *(_QWORD *)(v51 + 24);
  *(_QWORD *)(v50 + 16) = *(_QWORD *)(v51 + 16);
  *(_QWORD *)(v50 + 24) = v53;
  *(_BYTE *)(v50 + 32) = *(_BYTE *)(v51 + 32);
  *(_BYTE *)(v50 + 33) = *(_BYTE *)(v51 + 33);
  v54 = (_QWORD *)(a1 + v49);
  v55 = (_QWORD *)(a2 + v49);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)(a2 + v57);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  v61 = a3[21];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (_QWORD *)(a2 + v61);
  v74 = *(_QWORD *)(a2 + v61 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74)
  {
    *v62 = *v63;
    v62[1] = v74;
    v64 = v63[3];
    v62[2] = v63[2];
    v62[3] = v64;
    v65 = v63[4];
    v66 = v63[5];
    v62[4] = v65;
    v62[5] = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v67 = *((_OWORD *)v63 + 1);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v67;
    *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
  }
  v68 = a3[22];
  v69 = a3[23];
  v70 = a1 + v68;
  v71 = a2 + v68;
  v72 = *(_QWORD *)(v71 + 16);
  *(_QWORD *)(v70 + 8) = *(_QWORD *)(v71 + 8);
  *(_QWORD *)(v70 + 16) = v72;
  *(_QWORD *)v70 = *(_QWORD *)v71;
  *(_BYTE *)(v70 + 24) = *(_BYTE *)(v71 + 24);
  *(_BYTE *)(a1 + v69) = *(_BYTE *)(a2 + v69);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v14 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = v14;
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (int *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 4) = *((_BYTE *)v17 + 4);
  *(_DWORD *)v16 = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = (int *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 4) = *((_BYTE *)v21 + 4);
  *(_DWORD *)v20 = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = (__int128 *)(a2 + v26);
  v29 = *(_QWORD *)(a1 + v26 + 16);
  v30 = *(_QWORD *)(a2 + v26 + 16);
  if (v29)
  {
    if (v30)
    {
      *(_BYTE *)v27 = *(_BYTE *)v28;
      *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
      *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v27 + 24) = *((_DWORD *)v28 + 6);
      *(_DWORD *)(v27 + 28) = *((_DWORD *)v28 + 7);
      *(_QWORD *)(v27 + 32) = *((_QWORD *)v28 + 4);
      *(_QWORD *)(v27 + 40) = *((_QWORD *)v28 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v27);
      v32 = v28[1];
      v31 = v28[2];
      *(_OWORD *)v27 = *v28;
      *(_OWORD *)(v27 + 16) = v32;
      *(_OWORD *)(v27 + 32) = v31;
    }
  }
  else if (v30)
  {
    *(_BYTE *)v27 = *(_BYTE *)v28;
    *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
    *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
    *(_DWORD *)(v27 + 24) = *((_DWORD *)v28 + 6);
    *(_DWORD *)(v27 + 28) = *((_DWORD *)v28 + 7);
    *(_QWORD *)(v27 + 32) = *((_QWORD *)v28 + 4);
    *(_QWORD *)(v27 + 40) = *((_QWORD *)v28 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v33 = *v28;
    v34 = v28[2];
    *(_OWORD *)(v27 + 16) = v28[1];
    *(_OWORD *)(v27 + 32) = v34;
    *(_OWORD *)v27 = v33;
  }
  v35 = a3[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(a2 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
  *(_BYTE *)(v36 + 17) = *(_BYTE *)(v37 + 17);
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)(a2 + v38);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(a2 + v38 + 8);
  *(_QWORD *)(v39 + 16) = *(_QWORD *)(a2 + v38 + 16);
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(a2 + v38 + 24);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(a2 + v38 + 32);
  *(_QWORD *)(v39 + 40) = *(_QWORD *)(a2 + v38 + 40);
  *(_QWORD *)(v39 + 48) = *(_QWORD *)(a2 + v38 + 48);
  *(_QWORD *)(v39 + 56) = *(_QWORD *)(a2 + v38 + 56);
  *(_QWORD *)(v39 + 64) = *(_QWORD *)(a2 + v38 + 64);
  *(_QWORD *)(v39 + 72) = *(_QWORD *)(a2 + v38 + 72);
  *(_QWORD *)(v39 + 80) = *(_QWORD *)(a2 + v38 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 88) = *(_QWORD *)(v40 + 88);
  *(_QWORD *)(v39 + 96) = *(_QWORD *)(v40 + 96);
  *(_QWORD *)(v39 + 104) = *(_QWORD *)(v40 + 104);
  *(_QWORD *)(v39 + 112) = *(_QWORD *)(v40 + 112);
  *(_DWORD *)(v39 + 120) = *(_DWORD *)(v40 + 120);
  *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
  *(_QWORD *)(v39 + 136) = *(_QWORD *)(v40 + 136);
  *(_BYTE *)(v39 + 144) = *(_BYTE *)(v40 + 144);
  *(_DWORD *)(v39 + 148) = *(_DWORD *)(v40 + 148);
  *(_DWORD *)(v39 + 152) = *(_DWORD *)(v40 + 152);
  *(_QWORD *)(v39 + 160) = *(_QWORD *)(v40 + 160);
  *(_QWORD *)(v39 + 168) = *(_QWORD *)(v40 + 168);
  *(_QWORD *)(v39 + 176) = *(_QWORD *)(v40 + 176);
  *(_QWORD *)(v39 + 184) = *(_QWORD *)(v40 + 184);
  *(_QWORD *)(v39 + 192) = *(_QWORD *)(v40 + 192);
  v41 = a3[13];
  v42 = (_BYTE *)(a1 + v41);
  v43 = (_BYTE *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  v44 = a3[14];
  v45 = (_BYTE *)(a1 + v44);
  v46 = (_BYTE *)(a2 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  v47 = a3[15];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v50 = a3[17];
  v51 = a1 + v50;
  v52 = a2 + v50;
  *(_QWORD *)v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(v51 + 8) = *(_QWORD *)(a2 + v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v51 + 16) = *(_QWORD *)(v52 + 16);
  *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v51 + 32) = *(_BYTE *)(v52 + 32);
  *(_BYTE *)(v51 + 33) = *(_BYTE *)(v52 + 33);
  v53 = a3[18];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (_QWORD *)(a2 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v56 = a3[20];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  *v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = a3[21];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (_QWORD *)(a2 + v59);
  v62 = *(_QWORD *)(a1 + v59 + 8);
  v63 = *(_QWORD *)(a2 + v59 + 8);
  if (v62)
  {
    if (v63)
    {
      *v60 = *v61;
      v60[1] = v61[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[2] = v61[2];
      v60[3] = v61[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[4] = v61[4];
      v60[5] = v61[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC53BA88((uint64_t)v60);
      v65 = *((_OWORD *)v61 + 1);
      v64 = *((_OWORD *)v61 + 2);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v65;
      *((_OWORD *)v60 + 2) = v64;
    }
  }
  else if (v63)
  {
    *v60 = *v61;
    v60[1] = v61[1];
    v60[2] = v61[2];
    v60[3] = v61[3];
    v60[4] = v61[4];
    v60[5] = v61[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v66 = *(_OWORD *)v61;
    v67 = *((_OWORD *)v61 + 2);
    *((_OWORD *)v60 + 1) = *((_OWORD *)v61 + 1);
    *((_OWORD *)v60 + 2) = v67;
    *(_OWORD *)v60 = v66;
  }
  v68 = a3[22];
  v69 = a1 + v68;
  v70 = a2 + v68;
  *(_QWORD *)v69 = *(_QWORD *)(a2 + v68);
  *(_QWORD *)(v69 + 8) = *(_QWORD *)(a2 + v68 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v69 + 16) = *(_QWORD *)(v70 + 16);
  *(_BYTE *)(v69 + 24) = *(_BYTE *)(v70 + 24);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  return a1;
}

uint64_t initializeWithTake for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  v17 = a1 + v12;
  v18 = a2 + v12;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  v25 = a3[10];
  v26 = a3[11];
  v27 = (_OWORD *)(a1 + v25);
  v28 = (_OWORD *)(a2 + v25);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v27[2] = v28[2];
  v30 = a1 + v26;
  v31 = a2 + v26;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  v32 = a3[12];
  v33 = a3[13];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_QWORD *)(v34 + 192) = *(_QWORD *)(v35 + 192);
  v36 = *(_OWORD *)(v35 + 48);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(_OWORD *)(v34 + 48) = v36;
  v37 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v37;
  v38 = *(_OWORD *)(v35 + 112);
  *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
  *(_OWORD *)(v34 + 112) = v38;
  v39 = *(_OWORD *)(v35 + 80);
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
  *(_OWORD *)(v34 + 80) = v39;
  v40 = *(_OWORD *)(v35 + 176);
  *(_OWORD *)(v34 + 160) = *(_OWORD *)(v35 + 160);
  *(_OWORD *)(v34 + 176) = v40;
  v41 = *(_OWORD *)(v35 + 144);
  *(_OWORD *)(v34 + 128) = *(_OWORD *)(v35 + 128);
  *(_OWORD *)(v34 + 144) = v41;
  *(_WORD *)(a1 + v33) = *(_WORD *)(a2 + v33);
  v42 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  v43 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(_WORD *)(v44 + 32) = *(_WORD *)(v45 + 32);
  v47 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  v48 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  v49 = (_OWORD *)(a1 + v48);
  v50 = (_OWORD *)(a2 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v49[2] = v50[2];
  v52 = a3[22];
  v53 = a3[23];
  v54 = (_OWORD *)(a1 + v52);
  v55 = (_OWORD *)(a2 + v52);
  *v54 = *v55;
  *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v55 + 9);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  return a1;
}

uint64_t assignWithTake for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = v26;
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  if (*(_QWORD *)(a1 + v27 + 16))
  {
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      *(_BYTE *)v28 = *(_BYTE *)v29;
      *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
      *(_QWORD *)(v28 + 16) = v30;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
      v31 = *(_QWORD *)(v29 + 40);
      *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
      *(_QWORD *)(v28 + 40) = v31;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DC4CDAF4(v28);
  }
  v32 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v32;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
LABEL_6:
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a2 + v33 + 8);
  *(_QWORD *)v34 = *(_QWORD *)(a2 + v33);
  *(_QWORD *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
  *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
  v37 = a3[12];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_OWORD *)(a2 + v37 + 16);
  *(_OWORD *)v38 = *(_OWORD *)(a2 + v37);
  *(_OWORD *)(v38 + 16) = v40;
  v41 = *(_OWORD *)(a2 + v37 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(a2 + v37 + 32);
  *(_OWORD *)(v38 + 48) = v41;
  *(_OWORD *)(v38 + 64) = *(_OWORD *)(a2 + v37 + 64);
  *(_QWORD *)(v38 + 80) = *(_QWORD *)(a2 + v37 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v38 + 88) = *(_OWORD *)(v39 + 88);
  *(_OWORD *)(v38 + 104) = *(_OWORD *)(v39 + 104);
  *(_DWORD *)(v38 + 120) = *(_DWORD *)(v39 + 120);
  *(_OWORD *)(v38 + 128) = *(_OWORD *)(v39 + 128);
  *(_BYTE *)(v38 + 144) = *(_BYTE *)(v39 + 144);
  *(_QWORD *)(v38 + 148) = *(_QWORD *)(v39 + 148);
  v42 = *(_OWORD *)(v39 + 176);
  *(_OWORD *)(v38 + 160) = *(_OWORD *)(v39 + 160);
  *(_OWORD *)(v38 + 176) = v42;
  *(_QWORD *)(v38 + 192) = *(_QWORD *)(v39 + 192);
  v43 = a3[13];
  v44 = a3[14];
  v45 = (_BYTE *)(a1 + v43);
  v46 = (_BYTE *)(a2 + v43);
  *v45 = *v46;
  v45[1] = v46[1];
  v47 = (_BYTE *)(a1 + v44);
  v48 = (_BYTE *)(a2 + v44);
  *v47 = *v48;
  v47[1] = v48[1];
  v49 = a3[15];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = *(_QWORD *)(a2 + v54);
  v58 = *(_QWORD *)(a2 + v54 + 8);
  *(_QWORD *)v55 = v57;
  *(_QWORD *)(v55 + 8) = v58;
  swift_bridgeObjectRelease();
  v59 = *(_QWORD *)(v56 + 24);
  *(_QWORD *)(v55 + 16) = *(_QWORD *)(v56 + 16);
  *(_QWORD *)(v55 + 24) = v59;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v55 + 32) = *(_BYTE *)(v56 + 32);
  *(_BYTE *)(v55 + 33) = *(_BYTE *)(v56 + 33);
  v60 = a3[18];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  v65 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v66 = (_QWORD *)(a1 + v65);
  v67 = (uint64_t *)(a2 + v65);
  v69 = *v67;
  v68 = v67[1];
  *v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  v70 = a3[21];
  v71 = a1 + v70;
  v72 = a2 + v70;
  if (!*(_QWORD *)(a1 + v70 + 8))
  {
LABEL_10:
    v76 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v76;
    *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
    goto LABEL_11;
  }
  v73 = *(_QWORD *)(v72 + 8);
  if (!v73)
  {
    sub_1DC53BA88(v71);
    goto LABEL_10;
  }
  *(_QWORD *)v71 = *(_QWORD *)v72;
  *(_QWORD *)(v71 + 8) = v73;
  swift_bridgeObjectRelease();
  v74 = *(_QWORD *)(v72 + 24);
  *(_QWORD *)(v71 + 16) = *(_QWORD *)(v72 + 16);
  *(_QWORD *)(v71 + 24) = v74;
  swift_bridgeObjectRelease();
  v75 = *(_QWORD *)(v72 + 40);
  *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
  *(_QWORD *)(v71 + 40) = v75;
  swift_bridgeObjectRelease();
LABEL_11:
  v77 = a3[22];
  v78 = a1 + v77;
  v79 = a2 + v77;
  v80 = *(_QWORD *)(a2 + v77 + 8);
  *(_QWORD *)v78 = *(_QWORD *)(a2 + v77);
  *(_QWORD *)(v78 + 8) = v80;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v78 + 16) = *(_QWORD *)(v79 + 16);
  *(_BYTE *)(v78 + 24) = *(_BYTE *)(v79 + 24);
  v81 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + v81) = *(_BYTE *)(a2 + v81);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6200A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC62015C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC620204()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1DC620370 + 4 * byte_1DC64A4AA[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1DC6203A4 + 4 * byte_1DC64A4A5[v4]))();
}

uint64_t sub_1DC6203A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6203AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC6203B4);
  return result;
}

uint64_t sub_1DC6203C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC6203C8);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1DC6203CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6203D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleViewEvent.Model.CodingKeys()
{
  return &type metadata for NewsArticleViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC6203F4()
{
  unint64_t result;

  result = qword_1F0370A98;
  if (!qword_1F0370A98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A8B4, &type metadata for NewsArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370A98);
  }
  return result;
}

unint64_t sub_1DC62043C()
{
  unint64_t result;

  result = qword_1EDB12D70;
  if (!qword_1EDB12D70)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A824, &type metadata for NewsArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12D70);
  }
  return result;
}

unint64_t sub_1DC620484()
{
  unint64_t result;

  result = qword_1EDB12D78;
  if (!qword_1EDB12D78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64A84C, &type metadata for NewsArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12D78);
  }
  return result;
}

uint64_t sub_1DC6204C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C680 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C6A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C490 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C4B0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7461446567646162 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x56656C6369747261 && a2 == 0xEF61746144776569 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C5D0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64E8E0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 20;
    else
      return 21;
  }
}

uint64_t sub_1DC620DA8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0370AA0, MEMORY[0x1E0CF8078]);
}

uint64_t static SubscribeButtonTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369298, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370AA0, a1);
}

uint64_t sub_1DC620DE8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0370AB8, MEMORY[0x1E0CF8380]);
}

uint64_t static SubscribeButtonTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03692A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370AB8, a1);
}

uint64_t SubscribeButtonTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SubscribeButtonTapEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SubscribeButtonTapEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SubscribeButtonTapEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370B48);
}

uint64_t SubscribeButtonTapEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.viewData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.newsArticleData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.feedData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.channelData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.groupData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.purchaseSessionData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.purchaseData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.paywallData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.subscribeButtonContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.subscribeButtonContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.subscribeButtonContextData.modify())()
{
  type metadata accessor for SubscribeButtonTapEvent(0);
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SubscribeButtonTapEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v8, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
}

uint64_t SubscribeButtonTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SubscribeButtonTapEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SubscribeButtonTapEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370BF8);
}

uint64_t SubscribeButtonTapEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 24);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_1DC4D7808(v4, v5);
}

uint64_t SubscribeButtonTapEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);
  return sub_1DC4D7808(v4, v5);
}

uint64_t SubscribeButtonTapEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t SubscribeButtonTapEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.paywallData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t SubscribeButtonTapEvent.Model.subscribeButtonContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 SubscribeButtonTapEvent.Model.init(eventData:viewData:newsArticleData:feedData:channelData:groupData:purchaseSessionData:purchaseData:paywallData:subscribeButtonContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, __int16 *a11)
{
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 result;
  _QWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int16 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  __int16 v48;

  v13 = *a2;
  v14 = a2[1];
  v15 = *((_WORD *)a2 + 8);
  v32 = a3[1];
  v33 = *a3;
  v31 = a3[2];
  v16 = *((_QWORD *)a3 + 6);
  v17 = *((_QWORD *)a3 + 7);
  v18 = *((_DWORD *)a3 + 16);
  v34 = *a4;
  v19 = *((_QWORD *)a4 + 2);
  v37 = *a5;
  v20 = *((_QWORD *)a5 + 2);
  v36 = *((_QWORD *)a5 + 3);
  v35 = *((_WORD *)a5 + 16);
  v40 = (__n128)a6[1];
  v41 = *a6;
  v38 = *((_QWORD *)a6 + 5);
  v39 = *((_QWORD *)a6 + 4);
  v42 = a7[1];
  v43 = *a7;
  v45 = a8[1];
  v46 = *a8;
  v44 = *((_BYTE *)a8 + 16);
  v47 = *a10;
  v48 = *a11;
  v21 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (int *)type metadata accessor for SubscribeButtonTapEvent.Model(0);
  v23 = a9 + v22[5];
  *(_QWORD *)v23 = v13;
  *(_QWORD *)(v23 + 8) = v14;
  *(_WORD *)(v23 + 16) = v15;
  v24 = a9 + v22[6];
  *(_OWORD *)v24 = v33;
  *(_OWORD *)(v24 + 16) = v32;
  *(_OWORD *)(v24 + 32) = v31;
  *(_QWORD *)(v24 + 48) = v16;
  *(_QWORD *)(v24 + 56) = v17;
  *(_DWORD *)(v24 + 64) = v18;
  v25 = a9 + v22[7];
  *(_OWORD *)v25 = v34;
  *(_QWORD *)(v25 + 16) = v19;
  v26 = a9 + v22[8];
  *(_OWORD *)v26 = v37;
  *(_QWORD *)(v26 + 16) = v20;
  *(_QWORD *)(v26 + 24) = v36;
  *(_WORD *)(v26 + 32) = v35;
  v27 = a9 + v22[9];
  result = v40;
  *(_OWORD *)v27 = v41;
  *(__n128 *)(v27 + 16) = v40;
  *(_QWORD *)(v27 + 32) = v39;
  *(_QWORD *)(v27 + 40) = v38;
  v29 = (_QWORD *)(a9 + v22[10]);
  *v29 = v43;
  v29[1] = v42;
  v30 = a9 + v22[11];
  *(_QWORD *)v30 = v46;
  *(_QWORD *)(v30 + 8) = v45;
  *(_BYTE *)(v30 + 16) = v44;
  *(_BYTE *)(a9 + v22[12]) = v47;
  *(_WORD *)(a9 + v22[13]) = v48;
  return result;
}

uint64_t sub_1DC621E60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC621E98 + 4 * byte_1DC64A930[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC621E98()
{
  return 0x6174614477656976;
}

uint64_t sub_1DC621EE4()
{
  return 0x446C656E6E616863;
}

unint64_t sub_1DC621F64()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1DC621F84()
{
  unsigned __int8 *v0;

  return sub_1DC621E60(*v0);
}

uint64_t sub_1DC621F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC6259D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC621FB0()
{
  sub_1DC6223E0();
  return sub_1DC62B604();
}

uint64_t sub_1DC621FD8()
{
  sub_1DC6223E0();
  return sub_1DC62B610();
}

uint64_t SubscribeButtonTapEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  uint64_t v19;
  __int128 *v20;
  __int16 v21;
  __int128 v22;
  __int128 *v23;
  __int128 v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int v36;
  char v37;

  v3 = v1;
  sub_1DC622B58(0, &qword_1F0370AD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC6223E0();
  sub_1DC62B5F8();
  LOBYTE(v32) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SubscribeButtonTapEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v32 = v12;
    *((_QWORD *)&v32 + 1) = v13;
    LOWORD(v33) = (_WORD)v11;
    v37 = 1;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *((_DWORD *)v14 + 16);
    v16 = v14[1];
    v32 = *v14;
    v33 = v16;
    v17 = v14[3];
    v34 = v14[2];
    v35 = v17;
    v36 = v15;
    v37 = 2;
    sub_1DC4C18E8();
    sub_1DC62B490();
    v18 = (__int128 *)(v3 + v10[7]);
    v19 = *((_QWORD *)v18 + 2);
    v32 = *v18;
    *(_QWORD *)&v33 = v19;
    v37 = 3;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v20 = (__int128 *)(v3 + v10[8]);
    v21 = *((_WORD *)v20 + 16);
    v22 = v20[1];
    v32 = *v20;
    v33 = v22;
    LOWORD(v34) = v21;
    v37 = 4;
    sub_1DC4C8E84();
    sub_1DC62B490();
    v23 = (__int128 *)(v3 + v10[9]);
    v24 = v23[1];
    v32 = *v23;
    v33 = v24;
    v34 = v23[2];
    v37 = 5;
    sub_1DC4C9004();
    sub_1DC62B490();
    v25 = (uint64_t *)(v3 + v10[10]);
    v27 = *v25;
    v26 = v25[1];
    *(_QWORD *)&v32 = v27;
    *((_QWORD *)&v32 + 1) = v26;
    v37 = 6;
    sub_1DC4FC754();
    sub_1DC62B4E4();
    v28 = (uint64_t *)(v3 + v10[11]);
    v29 = *v28;
    v30 = v28[1];
    LOBYTE(v28) = *((_BYTE *)v28 + 16);
    *(_QWORD *)&v32 = v29;
    *((_QWORD *)&v32 + 1) = v30;
    LOBYTE(v33) = (_BYTE)v28;
    v37 = 7;
    sub_1DC4FC8D4();
    sub_1DC62B4E4();
    LOBYTE(v32) = *(_BYTE *)(v3 + v10[12]);
    v37 = 8;
    sub_1DC4FCA54();
    sub_1DC62B490();
    LOWORD(v32) = *(_WORD *)(v3 + v10[13]);
    v37 = 9;
    sub_1DC60AE2C();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC6223E0()
{
  unint64_t result;

  result = qword_1F0370AE0;
  if (!qword_1F0370AE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64AC2C, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370AE0);
  }
  return result;
}

uint64_t SubscribeButtonTapEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  __int16 v16;
  char *v17;
  int v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  __int16 v24;
  char *v25;
  __int128 v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int v48;
  char v49;

  v5 = sub_1DC62ABA8();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC622B58(0, &qword_1F0370AE8, MEMORY[0x1E0DED048]);
  v39 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v43 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  MEMORY[0x1E0C80A78](v43);
  v41 = a1;
  v42 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC6223E0();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v37 = a2;
  v38 = v9;
  LOBYTE(v44) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v13 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, v7, v5);
  v49 = 1;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v14 = (int *)v43;
  v15 = *((_QWORD *)&v44 + 1);
  v16 = v45;
  v17 = &v13[*(int *)(v43 + 20)];
  *(_QWORD *)v17 = v44;
  *((_QWORD *)v17 + 1) = v15;
  *((_WORD *)v17 + 8) = v16;
  v49 = 2;
  sub_1DC4C18A0();
  sub_1DC62B400();
  v18 = v48;
  v19 = &v13[v14[6]];
  v20 = v45;
  *(_OWORD *)v19 = v44;
  *((_OWORD *)v19 + 1) = v20;
  v21 = v47;
  *((_OWORD *)v19 + 2) = v46;
  *((_OWORD *)v19 + 3) = v21;
  *((_DWORD *)v19 + 16) = v18;
  v49 = 3;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v22 = v45;
  v23 = &v13[v14[7]];
  *(_OWORD *)v23 = v44;
  *((_QWORD *)v23 + 2) = v22;
  v49 = 4;
  sub_1DC4C8E40();
  sub_1DC62B400();
  v24 = v46;
  v25 = &v13[v14[8]];
  v26 = v45;
  *(_OWORD *)v25 = v44;
  *((_OWORD *)v25 + 1) = v26;
  *((_WORD *)v25 + 16) = v24;
  v49 = 5;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v27 = &v13[v14[9]];
  v28 = v45;
  *(_OWORD *)v27 = v44;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v46;
  v49 = 6;
  sub_1DC4FC710();
  sub_1DC62B454();
  v29 = *((_QWORD *)&v44 + 1);
  v30 = &v13[v14[10]];
  *(_QWORD *)v30 = v44;
  *((_QWORD *)v30 + 1) = v29;
  v49 = 7;
  sub_1DC4FC890();
  sub_1DC62B454();
  v31 = *((_QWORD *)&v44 + 1);
  v32 = v45;
  v33 = &v13[v14[11]];
  *(_QWORD *)v33 = v44;
  *((_QWORD *)v33 + 1) = v31;
  v33[16] = v32;
  v49 = 8;
  sub_1DC4FCA10();
  sub_1DC62B400();
  v13[v14[12]] = v44;
  v49 = 9;
  sub_1DC60ADE4();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
  v34 = (uint64_t)v42;
  *(_WORD *)&v42[*(int *)(v43 + 52)] = v44;
  sub_1DC622BB4(v34, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1DC622BF8(v34);
}

void sub_1DC622B58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC6223E0();
    v7 = a3(a1, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC622BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC622BF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC622C34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscribeButtonTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC622C48(_QWORD *a1)
{
  return SubscribeButtonTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC622C5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369298, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370AA0, a1);
}

uint64_t sub_1DC622C80@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03692A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370AB8, a1);
}

uint64_t sub_1DC622CA4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v9, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscribeButtonTapEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for SubscribeButtonTapEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonTapEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC624180(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTapEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC624440(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC6246FC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1F0370AD0, (void (*)(void))sub_1DC60ADE4, (void (*)(void))sub_1DC60AE2C);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SubscribeButtonTapEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *(_QWORD *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (v15)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v15;
      v16 = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v16;
      v13[32] = v14[32];
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      v13[48] = v14[48];
      *((_QWORD *)v13 + 7) = *((_QWORD *)v14 + 7);
      *((_DWORD *)v13 + 16) = *((_DWORD *)v14 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v18;
      *((_DWORD *)v13 + 16) = *((_DWORD *)v14 + 16);
      v19 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v19;
    }
    v20 = a3[7];
    v21 = a3[8];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *v22 = *v23;
    v24 = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    *((_QWORD *)v22 + 2) = v24;
    v25 = (char *)a1 + v21;
    v26 = (char *)a2 + v21;
    v27 = *(_QWORD *)((char *)a2 + v21 + 8);
    swift_bridgeObjectRetain();
    if (v27)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = v27;
      v28 = *((_QWORD *)v26 + 3);
      *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
      *((_QWORD *)v25 + 3) = v28;
      *((_WORD *)v25 + 16) = *((_WORD *)v26 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      *((_WORD *)v25 + 16) = *((_WORD *)v26 + 16);
    }
    v30 = a3[9];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = *((_QWORD *)v32 + 2);
    if (v33)
    {
      *v31 = *v32;
      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      *((_QWORD *)v31 + 2) = v33;
      *((_QWORD *)v31 + 3) = *((_QWORD *)v32 + 3);
      v34 = *((_QWORD *)v32 + 5);
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
      *((_QWORD *)v31 + 5) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v35;
      *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    }
    v36 = a3[10];
    v37 = a3[11];
    v38 = (_QWORD *)((char *)a1 + v36);
    v39 = (_QWORD *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (char *)a1 + v37;
    v42 = (char *)a2 + v37;
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v41[16] = v42[16];
    v44 = a3[13];
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *(_WORD *)((char *)a1 + v44) = *(_WORD *)((char *)a2 + v44);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SubscribeButtonTapEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[8] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
    v15 = *(_QWORD *)(v13 + 24);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = v15;
    *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
    *(_DWORD *)(v12 + 64) = *(_DWORD *)(v13 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v16;
    *(_DWORD *)(v12 + 64) = *(_DWORD *)(v13 + 64);
    v17 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v17;
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = v22;
  v23 = a1 + v19;
  v24 = a2 + v19;
  v25 = *(_QWORD *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = v25;
    v26 = *(_QWORD *)(v24 + 24);
    *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
    *(_QWORD *)(v23 + 24) = v26;
    *(_WORD *)(v23 + 32) = *(_WORD *)(v24 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v27;
    *(_WORD *)(v23 + 32) = *(_WORD *)(v24 + 32);
  }
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    *(_BYTE *)v29 = *(_BYTE *)v30;
    *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 16) = v31;
    *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
    v32 = *(_QWORD *)(v30 + 40);
    *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
    *(_QWORD *)(v29 + 40) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
  }
  v34 = a3[10];
  v35 = a3[11];
  v36 = (_QWORD *)(a1 + v34);
  v37 = (_QWORD *)(a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = a1 + v35;
  v40 = a2 + v35;
  v41 = *(_QWORD *)(v40 + 8);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_QWORD *)(v39 + 8) = v41;
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  v42 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_WORD *)(a1 + v42) = *(_WORD *)(a2 + v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a1 + v10 + 8);
  v14 = *(_QWORD *)(a2 + v10 + 8);
  if (v13)
  {
    if (v14)
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
      *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
      v15 = *(_QWORD *)(v12 + 40);
      *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
      *(_QWORD *)(v11 + 40) = v15;
      *(_QWORD *)(v11 + 56) = *(_QWORD *)(v12 + 56);
      *(_BYTE *)(v11 + 64) = *(_BYTE *)(v12 + 64);
      *(_BYTE *)(v11 + 65) = *(_BYTE *)(v12 + 65);
      *(_BYTE *)(v11 + 66) = *(_BYTE *)(v12 + 66);
      *(_BYTE *)(v11 + 67) = *(_BYTE *)(v12 + 67);
    }
    else
    {
      sub_1DC5006BC(v11);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      v18 = *(_OWORD *)(v12 + 32);
      v17 = *(_OWORD *)(v12 + 48);
      v19 = *(_OWORD *)(v12 + 16);
      *(_DWORD *)(v11 + 64) = *(_DWORD *)(v12 + 64);
      *(_OWORD *)(v11 + 32) = v18;
      *(_OWORD *)(v11 + 48) = v17;
      *(_OWORD *)(v11 + 16) = v19;
    }
  }
  else if (v14)
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
    *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
    *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
    v16 = *(_QWORD *)(v12 + 40);
    *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
    *(_QWORD *)(v11 + 40) = v16;
    *(_QWORD *)(v11 + 56) = *(_QWORD *)(v12 + 56);
    *(_BYTE *)(v11 + 64) = *(_BYTE *)(v12 + 64);
    *(_BYTE *)(v11 + 65) = *(_BYTE *)(v12 + 65);
    *(_BYTE *)(v11 + 66) = *(_BYTE *)(v12 + 66);
    *(_BYTE *)(v11 + 67) = *(_BYTE *)(v12 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v20 = *(_OWORD *)(v12 + 16);
    v21 = *(_OWORD *)(v12 + 32);
    v22 = *(_OWORD *)(v12 + 48);
    *(_DWORD *)(v11 + 64) = *(_DWORD *)(v12 + 64);
    *(_OWORD *)(v11 + 32) = v21;
    *(_OWORD *)(v11 + 48) = v22;
    *(_OWORD *)(v11 + 16) = v20;
  }
  v23 = a3[7];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = (__int128 *)(a2 + v26);
  v29 = *(_QWORD *)(a1 + v26 + 8);
  v30 = *(_QWORD *)(a2 + v26 + 8);
  if (v29)
  {
    if (v30)
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
      *(_QWORD *)(v27 + 24) = *((_QWORD *)v28 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v27 + 32) = *((_BYTE *)v28 + 32);
      *(_BYTE *)(v27 + 33) = *((_BYTE *)v28 + 33);
    }
    else
    {
      sub_1DC4DAE38(v27);
      v31 = *((_WORD *)v28 + 16);
      v32 = v28[1];
      *(_OWORD *)v27 = *v28;
      *(_OWORD *)(v27 + 16) = v32;
      *(_WORD *)(v27 + 32) = v31;
    }
  }
  else if (v30)
  {
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
    *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
    *(_QWORD *)(v27 + 24) = *((_QWORD *)v28 + 3);
    *(_BYTE *)(v27 + 32) = *((_BYTE *)v28 + 32);
    *(_BYTE *)(v27 + 33) = *((_BYTE *)v28 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v33 = *v28;
    v34 = v28[1];
    *(_WORD *)(v27 + 32) = *((_WORD *)v28 + 16);
    *(_OWORD *)v27 = v33;
    *(_OWORD *)(v27 + 16) = v34;
  }
  v35 = a3[9];
  v36 = a1 + v35;
  v37 = (__int128 *)(a2 + v35);
  v38 = *(_QWORD *)(a1 + v35 + 16);
  v39 = *(_QWORD *)(a2 + v35 + 16);
  if (v38)
  {
    if (v39)
    {
      *(_BYTE *)v36 = *(_BYTE *)v37;
      *(_QWORD *)(v36 + 8) = *((_QWORD *)v37 + 1);
      *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v36 + 24) = *((_DWORD *)v37 + 6);
      *(_DWORD *)(v36 + 28) = *((_DWORD *)v37 + 7);
      *(_QWORD *)(v36 + 32) = *((_QWORD *)v37 + 4);
      *(_QWORD *)(v36 + 40) = *((_QWORD *)v37 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v36);
      v41 = v37[1];
      v40 = v37[2];
      *(_OWORD *)v36 = *v37;
      *(_OWORD *)(v36 + 16) = v41;
      *(_OWORD *)(v36 + 32) = v40;
    }
  }
  else if (v39)
  {
    *(_BYTE *)v36 = *(_BYTE *)v37;
    *(_QWORD *)(v36 + 8) = *((_QWORD *)v37 + 1);
    *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
    *(_DWORD *)(v36 + 24) = *((_DWORD *)v37 + 6);
    *(_DWORD *)(v36 + 28) = *((_DWORD *)v37 + 7);
    *(_QWORD *)(v36 + 32) = *((_QWORD *)v37 + 4);
    *(_QWORD *)(v36 + 40) = *((_QWORD *)v37 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v42 = *v37;
    v43 = v37[2];
    *(_OWORD *)(v36 + 16) = v37[1];
    *(_OWORD *)(v36 + 32) = v43;
    *(_OWORD *)v36 = v42;
  }
  v44 = a3[10];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = a3[11];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_QWORD *)v48 = *(_QWORD *)(a2 + v47);
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(a2 + v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v50 = a3[13];
  v51 = (_BYTE *)(a1 + v50);
  v52 = (_BYTE *)(a2 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)(v11 + 64) = *(_DWORD *)(v12 + 64);
  v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  v19 = a1 + v16;
  v20 = a2 + v16;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_WORD *)(v19 + 32) = *(_WORD *)(v20 + 32);
  v22 = a3[9];
  v23 = a3[10];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v24[2] = v25[2];
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  v27 = a3[11];
  v28 = a3[12];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (*(_QWORD *)(a1 + v11 + 8))
  {
    v14 = *(_QWORD *)(v13 + 8);
    if (v14)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = v14;
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
      *(_QWORD *)(v12 + 24) = v15;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
      *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
      *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
      *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
      *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
      *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
      goto LABEL_6;
    }
    sub_1DC5006BC(v12);
  }
  v16 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v16;
  *(_DWORD *)(v12 + 64) = *(_DWORD *)(v13 + 64);
  v17 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v17;
LABEL_6:
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = v22;
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  if (*(_QWORD *)(a1 + v23 + 8))
  {
    v26 = *(_QWORD *)(v25 + 8);
    if (v26)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *(_QWORD *)(v24 + 8) = v26;
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v25 + 24);
      *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
      *(_QWORD *)(v24 + 24) = v27;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v24 + 32) = *(_BYTE *)(v25 + 32);
      *(_BYTE *)(v24 + 33) = *(_BYTE *)(v25 + 33);
      goto LABEL_11;
    }
    sub_1DC4DAE38(v24);
  }
  v28 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v28;
  *(_WORD *)(v24 + 32) = *(_WORD *)(v25 + 32);
LABEL_11:
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  if (!*(_QWORD *)(a1 + v29 + 16))
  {
LABEL_15:
    v34 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v34;
    *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
    goto LABEL_16;
  }
  v32 = *(_QWORD *)(v31 + 16);
  if (!v32)
  {
    sub_1DC4CDAF4(v30);
    goto LABEL_15;
  }
  *(_BYTE *)v30 = *(_BYTE *)v31;
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 16) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
  v33 = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = v33;
  swift_bridgeObjectRelease();
LABEL_16:
  v35 = a3[10];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[11];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a2 + v40 + 8);
  *(_QWORD *)v41 = *(_QWORD *)(a2 + v40);
  *(_QWORD *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
  v44 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_WORD *)(a1 + v44) = *(_WORD *)(a2 + v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonTapEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC62566C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTapEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6256F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC625774()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTapEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DC625880 + 4 * byte_1DC64A93F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DC6258B4 + 4 * byte_1DC64A93A[v4]))();
}

uint64_t sub_1DC6258B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6258BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC6258C4);
  return result;
}

uint64_t sub_1DC6258D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC6258D8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DC6258DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC6258E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonTapEvent.Model.CodingKeys()
{
  return &type metadata for SubscribeButtonTapEvent.Model.CodingKeys;
}

unint64_t sub_1DC625904()
{
  unint64_t result;

  result = qword_1F0370C50;
  if (!qword_1F0370C50)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64AC04, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370C50);
  }
  return result;
}

unint64_t sub_1DC62594C()
{
  unint64_t result;

  result = qword_1F0370C58;
  if (!qword_1F0370C58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64AB74, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370C58);
  }
  return result;
}

unint64_t sub_1DC625994()
{
  unint64_t result;

  result = qword_1F0370C60;
  if (!qword_1F0370C60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64AB9C, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370C60);
  }
  return result;
}

uint64_t sub_1DC6259D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C5D0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DC64E900)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1DC625E4C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A788();
  __swift_allocate_value_buffer(v0, qword_1F0370C68);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F0370C68);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static VideoAdEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03692A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370C68, a1);
}

uint64_t sub_1DC625EEC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A998();
  __swift_allocate_value_buffer(v0, qword_1F0370C80);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F0370C80);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static VideoAdEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03692B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370C80, a1);
}

uint64_t VideoAdEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t VideoAdEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*VideoAdEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for VideoAdEngagementEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370D10);
}

uint64_t VideoAdEngagementEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.adUserData.modify())()
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.channelData.modify())()
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.feedData.modify())()
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.videoAdData.modify())()
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.videoAdEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.videoAdEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.videoAdEngagementData.modify())()
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.adPlacementData.modify())()
{
  type metadata accessor for VideoAdEngagementEvent(0);
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for VideoAdEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
}

uint64_t VideoAdEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t VideoAdEngagementEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for VideoAdEngagementEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0370DB8);
}

uint64_t VideoAdEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 32);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.videoAdEngagementData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdEngagementEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t VideoAdEngagementEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 VideoAdEngagementEvent.Model.init(eventData:adUserData:channelData:feedData:videoAdData:videoAdEngagementData:adPlacementData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __n128 *a4@<X3>, int *a5@<X4>, __int16 *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 *v22;
  __n128 result;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;

  v10 = *a2;
  v11 = a2[1];
  v12 = *((_QWORD *)a3 + 2);
  v13 = *((_QWORD *)a3 + 3);
  v14 = *((_BYTE *)a3 + 32);
  v15 = *((_BYTE *)a3 + 33);
  v26 = *a3;
  v27 = *a4;
  v16 = a4[1].n128_u64[0];
  v17 = *a5;
  v28 = *((_QWORD *)a5 + 2);
  v29 = *((_QWORD *)a5 + 1);
  v30 = *a6;
  v31 = a7[1];
  v32 = *a7;
  v18 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  v19 = (int *)type metadata accessor for VideoAdEngagementEvent.Model(0);
  v20 = (_QWORD *)(a8 + v19[5]);
  *v20 = v10;
  v20[1] = v11;
  v21 = a8 + v19[6];
  *(_OWORD *)v21 = v26;
  *(_QWORD *)(v21 + 16) = v12;
  *(_QWORD *)(v21 + 24) = v13;
  *(_BYTE *)(v21 + 32) = v14;
  *(_BYTE *)(v21 + 33) = v15;
  v22 = (__n128 *)(a8 + v19[7]);
  result = v27;
  *v22 = v27;
  v22[1].n128_u64[0] = v16;
  v24 = a8 + v19[8];
  *(_DWORD *)v24 = v17;
  *(_QWORD *)(v24 + 8) = v29;
  *(_QWORD *)(v24 + 16) = v28;
  *(_WORD *)(a8 + v19[9]) = v30;
  v25 = (_QWORD *)(a8 + v19[10]);
  *v25 = v32;
  v25[1] = v31;
  return result;
}

uint64_t sub_1DC626A68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC626AA0 + 4 * byte_1DC64AC80[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC626AA0()
{
  return 0x6144726573556461;
}

uint64_t sub_1DC626ABC()
{
  return 0x446C656E6E616863;
}

unint64_t sub_1DC626B08()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC626B24()
{
  return 0x6D6563616C506461;
}

uint64_t sub_1DC626B48()
{
  unsigned __int8 *v0;

  return sub_1DC626A68(*v0);
}

uint64_t sub_1DC626B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC629374(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC626B74()
{
  sub_1DC626EC0();
  return sub_1DC62B604();
}

uint64_t sub_1DC626B9C()
{
  sub_1DC626EC0();
  return sub_1DC62B610();
}

uint64_t VideoAdEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 *v19;
  uint64_t v20;
  int *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;

  v3 = v1;
  sub_1DC627410(0, &qword_1F0370CA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC626EC0();
  sub_1DC62B5F8();
  LOBYTE(v29) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for VideoAdEngagementEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)&v29 = v13;
    *((_QWORD *)&v29 + 1) = v12;
    v34 = 1;
    sub_1DC4C0710();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 2);
    v17 = *((_QWORD *)v14 + 3);
    v18 = *((_BYTE *)v14 + 32);
    LOBYTE(v14) = *((_BYTE *)v14 + 33);
    v29 = v15;
    v30 = v16;
    v31 = v17;
    v32 = v18;
    v33 = (char)v14;
    v34 = 2;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v19 = (__int128 *)(v3 + v10[7]);
    v20 = *((_QWORD *)v19 + 2);
    v29 = *v19;
    v30 = v20;
    v34 = 3;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v21 = (int *)(v3 + v10[8]);
    v22 = *v21;
    v24 = *((_QWORD *)v21 + 1);
    v23 = *((_QWORD *)v21 + 2);
    LODWORD(v29) = v22;
    *((_QWORD *)&v29 + 1) = v24;
    v30 = v23;
    v34 = 4;
    sub_1DC55AAA0();
    sub_1DC62B4E4();
    LOWORD(v29) = *(_WORD *)(v3 + v10[9]);
    v34 = 5;
    sub_1DC5BA3B4();
    sub_1DC62B4E4();
    v25 = (uint64_t *)(v3 + v10[10]);
    v27 = *v25;
    v26 = v25[1];
    *(_QWORD *)&v29 = v27;
    *((_QWORD *)&v29 + 1) = v26;
    v34 = 6;
    sub_1DC4D6C74();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC626EC0()
{
  unint64_t result;

  result = qword_1F0370CA8;
  if (!qword_1F0370CA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64AEEC, &type metadata for VideoAdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370CA8);
  }
  return result;
}

uint64_t VideoAdEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;

  v31 = a2;
  v3 = sub_1DC62ABA8();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC627410(0, &qword_1F0370CB0, MEMORY[0x1E0DED048]);
  v33 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - v7;
  v9 = (int *)type metadata accessor for VideoAdEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC626EC0();
  v35 = v8;
  v12 = (uint64_t)v36;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v32;
  v36 = a1;
  LOBYTE(v37) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v33;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v34, v3);
  v42 = 1;
  sub_1DC4C06CC();
  sub_1DC62B454();
  v16 = *((_QWORD *)&v37 + 1);
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = v37;
  *((_QWORD *)v17 + 1) = v16;
  v42 = 2;
  sub_1DC4C8E40();
  sub_1DC62B454();
  v18 = v38;
  v19 = v39;
  v20 = v40;
  v21 = v41;
  v22 = &v11[v9[6]];
  *(_OWORD *)v22 = v37;
  *((_QWORD *)v22 + 2) = v18;
  *((_QWORD *)v22 + 3) = v19;
  v22[32] = v20;
  v22[33] = v21;
  v42 = 3;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v23 = v38;
  v24 = &v11[v9[7]];
  *(_OWORD *)v24 = v37;
  *((_QWORD *)v24 + 2) = v23;
  v42 = 4;
  sub_1DC55AA58();
  sub_1DC62B454();
  v25 = *((_QWORD *)&v37 + 1);
  v26 = v38;
  v27 = &v11[v9[8]];
  *(_DWORD *)v27 = v37;
  *((_QWORD *)v27 + 1) = v25;
  *((_QWORD *)v27 + 2) = v26;
  v42 = 5;
  sub_1DC5BA36C();
  sub_1DC62B454();
  *(_WORD *)&v11[v9[9]] = v37;
  v42 = 6;
  sub_1DC4D6C30();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v35, v15);
  v28 = *((_QWORD *)&v37 + 1);
  v29 = &v11[v9[10]];
  *(_QWORD *)v29 = v37;
  *((_QWORD *)v29 + 1) = v28;
  sub_1DC62746C((uint64_t)v11, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_1DC6274B0((uint64_t)v11);
}

void sub_1DC627410(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC626EC0();
    v7 = a3(a1, &type metadata for VideoAdEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC62746C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoAdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC6274B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoAdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC6274EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC627500(_QWORD *a1)
{
  return VideoAdEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC627514@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03692A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0370C68, a1);
}

uint64_t sub_1DC627538@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03692B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0370C80, a1);
}

uint64_t sub_1DC62755C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for VideoAdEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC628420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC628614(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC628804()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1F0370C98, (void (*)(void))sub_1DC5BA36C, (void (*)(void))sub_1DC5BA3B4);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdEngagementEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v16;
    *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *v19 = *v20;
    v21 = *((_QWORD *)v20 + 2);
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    *((_QWORD *)v19 + 2) = v21;
    v22 = (char *)a1 + v18;
    v23 = (char *)a2 + v18;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v24 = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    *((_QWORD *)v22 + 2) = v24;
    v25 = a3[10];
    *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VideoAdEngagementEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v18 + 16) = v20;
  v21 = a1 + v17;
  v22 = a2 + v17;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = v23;
  v24 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
  *(_BYTE *)(v11 + 33) = *(_BYTE *)(v12 + 33);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_BYTE *)(a1 + v19);
  v21 = (_BYTE *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 32) = *(_WORD *)(v9 + 32);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v17 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  return a1;
}

uint64_t assignWithTake for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_BYTE *)(v13 + 33) = *(_BYTE *)(v14 + 33);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 8) = v21;
  *(_QWORD *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = v26;
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC62902C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC6290B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC629134()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DC62921C + 4 * byte_1DC64AC8C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DC629250 + 4 * byte_1DC64AC87[v4]))();
}

uint64_t sub_1DC629250(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC629258(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC629260);
  return result;
}

uint64_t sub_1DC62926C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC629274);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DC629278(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC629280(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DC6292A0()
{
  unint64_t result;

  result = qword_1F0370E08;
  if (!qword_1F0370E08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64AEC4, &type metadata for VideoAdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370E08);
  }
  return result;
}

unint64_t sub_1DC6292E8()
{
  unint64_t result;

  result = qword_1F0370E10;
  if (!qword_1F0370E10)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64AE34, &type metadata for VideoAdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370E10);
  }
  return result;
}

unint64_t sub_1DC629330()
{
  unint64_t result;

  result = qword_1F0370E18;
  if (!qword_1F0370E18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64AE5C, &type metadata for VideoAdEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0370E18);
  }
  return result;
}

uint64_t sub_1DC629374(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64E920 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t destroy for ExternalAnalyticsRequestMetaData(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalAnalyticsRequestMetaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsRequestMetaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v5 = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v5;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
      *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
      *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
    }
    else
    {
      sub_1DC5006BC(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = *(_OWORD *)(a2 + 32);
      v7 = *(_OWORD *)(a2 + 48);
      v9 = *(_OWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)(a1 + 16) = v9;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v6 = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
    *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
    *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v10 = *(_OWORD *)(a2 + 16);
    v11 = *(_OWORD *)(a2 + 32);
    v12 = *(_OWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 16) = v10;
  }
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ExternalAnalyticsRequestMetaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_1DC5006BC(a1);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
LABEL_6:
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsRequestMetaData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsRequestMetaData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 88) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsRequestMetaData()
{
  return &type metadata for ExternalAnalyticsRequestMetaData;
}

StocksAnalytics::NetworkEventType_optional __swiftcall NetworkEventType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::NetworkEventType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NetworkEventType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC629BAC + 4 * aN[*v0]))(0x7472616843736473, 0xE800000000000000);
}

uint64_t sub_1DC629BAC()
{
  return 0x65746F7551736473;
}

uint64_t sub_1DC629BC0()
{
  return 0x7377654E736473;
}

uint64_t sub_1DC629BD8()
{
  return 0x6372616553736473;
}

uint64_t sub_1DC629BF8()
{
  return 0x6E676953736473;
}

uint64_t sub_1DC629C10()
{
  return 0x6B72617053736473;
}

uint64_t sub_1DC629C30()
{
  return 0x6E696C6B72617073;
}

unint64_t sub_1DC629C4C()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC629C6C()
{
  return 0x6168436F6F686179;
}

uint64_t sub_1DC629C88()
{
  return 0x6C754D6F6F686179;
}

uint64_t sub_1DC629CAC()
{
  return 0x77654E6F6F686179;
}

unint64_t sub_1DC629CCC()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC629CE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC544C54(*a1, *a2);
}

unint64_t sub_1DC629CF8()
{
  unint64_t result;

  result = qword_1F0370E20;
  if (!qword_1F0370E20)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for NetworkEventType, &type metadata for NetworkEventType);
    atomic_store(result, (unint64_t *)&qword_1F0370E20);
  }
  return result;
}

uint64_t sub_1DC629D3C()
{
  sub_1DC62B5B0();
  NetworkEventType.rawValue.getter();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC629DA0()
{
  NetworkEventType.rawValue.getter();
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC629DF0()
{
  sub_1DC62B5B0();
  NetworkEventType.rawValue.getter();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::NetworkEventType_optional sub_1DC629E50(Swift::String *a1)
{
  return NetworkEventType.init(rawValue:)(*a1);
}

uint64_t sub_1DC629E5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NetworkEventType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC629E80()
{
  sub_1DC629FF4();
  return sub_1DC62B13C();
}

uint64_t sub_1DC629EDC()
{
  sub_1DC629FF4();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for NetworkEventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1DC629F74 + 4 * byte_1DC64AF81[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1DC629FA8 + 4 * byte_1DC64AF7C[v4]))();
}

uint64_t sub_1DC629FA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC629FB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC629FB8);
  return result;
}

uint64_t sub_1DC629FC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC629FCCLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1DC629FD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC629FD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkEventType()
{
  return &type metadata for NetworkEventType;
}

unint64_t sub_1DC629FF4()
{
  unint64_t result;

  result = qword_1EDB0F740;
  if (!qword_1EDB0F740)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for NetworkEventType, &type metadata for NetworkEventType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F740);
  }
  return result;
}

uint64_t sub_1DC62A038()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1DC62A044()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1DC62A050()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1DC62A05C()
{
  return MEMORY[0x1E0CAE160]();
}

uint64_t sub_1DC62A068()
{
  return MEMORY[0x1E0CAE178]();
}

uint64_t sub_1DC62A074()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1DC62A080()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1DC62A08C()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1DC62A098()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t sub_1DC62A0A4()
{
  return MEMORY[0x1E0CAE638]();
}

uint64_t sub_1DC62A0B0()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1DC62A0BC()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t sub_1DC62A0C8()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_1DC62A0D4()
{
  return MEMORY[0x1E0CAE778]();
}

uint64_t sub_1DC62A0E0()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_1DC62A0EC()
{
  return MEMORY[0x1E0CAE858]();
}

uint64_t sub_1DC62A0F8()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1DC62A104()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1DC62A110()
{
  return MEMORY[0x1E0DB2F20]();
}

uint64_t sub_1DC62A11C()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1DC62A128()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1DC62A134()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1DC62A140()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1DC62A14C()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1DC62A158()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1DC62A164()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1DC62A170()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1DC62A17C()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1DC62A188()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1DC62A194()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1DC62A1A0()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1DC62A1AC()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1DC62A1B8()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1DC62A1C4()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1DC62A1D0()
{
  return MEMORY[0x1E0CB0A98]();
}

uint64_t sub_1DC62A1DC()
{
  return MEMORY[0x1E0CB0B28]();
}

uint64_t sub_1DC62A1E8()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1DC62A1F4()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1DC62A200()
{
  return MEMORY[0x1E0CB1430]();
}

uint64_t sub_1DC62A20C()
{
  return MEMORY[0x1E0CB1460]();
}

uint64_t sub_1DC62A218()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1DC62A224()
{
  return MEMORY[0x1E0DAE1F8]();
}

uint64_t sub_1DC62A230()
{
  return MEMORY[0x1E0DAE200]();
}

uint64_t sub_1DC62A23C()
{
  return MEMORY[0x1E0DAE208]();
}

uint64_t sub_1DC62A248()
{
  return MEMORY[0x1E0DAE210]();
}

uint64_t sub_1DC62A254()
{
  return MEMORY[0x1E0DAE218]();
}

uint64_t sub_1DC62A260()
{
  return MEMORY[0x1E0DAE220]();
}

uint64_t sub_1DC62A26C()
{
  return MEMORY[0x1E0DAE228]();
}

uint64_t sub_1DC62A278()
{
  return MEMORY[0x1E0DAE230]();
}

uint64_t sub_1DC62A284()
{
  return MEMORY[0x1E0DAE240]();
}

uint64_t sub_1DC62A290()
{
  return MEMORY[0x1E0DAE248]();
}

uint64_t sub_1DC62A29C()
{
  return MEMORY[0x1E0DAE250]();
}

uint64_t sub_1DC62A2A8()
{
  return MEMORY[0x1E0DAE258]();
}

uint64_t sub_1DC62A2B4()
{
  return MEMORY[0x1E0DAE268]();
}

uint64_t sub_1DC62A2C0()
{
  return MEMORY[0x1E0DAE278]();
}

uint64_t sub_1DC62A2CC()
{
  return MEMORY[0x1E0DAE288]();
}

uint64_t sub_1DC62A2D8()
{
  return MEMORY[0x1E0DAE2A8]();
}

uint64_t sub_1DC62A2E4()
{
  return MEMORY[0x1E0DAE2C0]();
}

uint64_t sub_1DC62A2F0()
{
  return MEMORY[0x1E0DAE2D0]();
}

uint64_t sub_1DC62A2FC()
{
  return MEMORY[0x1E0DAE2E0]();
}

uint64_t sub_1DC62A308()
{
  return MEMORY[0x1E0DAE4C8]();
}

uint64_t sub_1DC62A314()
{
  return MEMORY[0x1E0DAE520]();
}

uint64_t sub_1DC62A320()
{
  return MEMORY[0x1E0DAE528]();
}

uint64_t sub_1DC62A32C()
{
  return MEMORY[0x1E0DAE530]();
}

uint64_t sub_1DC62A338()
{
  return MEMORY[0x1E0DAE558]();
}

uint64_t sub_1DC62A344()
{
  return MEMORY[0x1E0DAE560]();
}

uint64_t sub_1DC62A350()
{
  return MEMORY[0x1E0DAE570]();
}

uint64_t sub_1DC62A35C()
{
  return MEMORY[0x1E0DAE578]();
}

uint64_t sub_1DC62A368()
{
  return MEMORY[0x1E0DAE5A0]();
}

uint64_t sub_1DC62A374()
{
  return MEMORY[0x1E0DAE5D8]();
}

uint64_t sub_1DC62A380()
{
  return MEMORY[0x1E0DAE5E8]();
}

uint64_t sub_1DC62A38C()
{
  return MEMORY[0x1E0DAE608]();
}

uint64_t sub_1DC62A398()
{
  return MEMORY[0x1E0DAE630]();
}

uint64_t sub_1DC62A3A4()
{
  return MEMORY[0x1E0DAE658]();
}

uint64_t sub_1DC62A3B0()
{
  return MEMORY[0x1E0DAE680]();
}

uint64_t sub_1DC62A3BC()
{
  return MEMORY[0x1E0DAE840]();
}

uint64_t sub_1DC62A3C8()
{
  return MEMORY[0x1E0DAEA38]();
}

uint64_t sub_1DC62A3D4()
{
  return MEMORY[0x1E0DAEA70]();
}

uint64_t sub_1DC62A3E0()
{
  return MEMORY[0x1E0DAEA80]();
}

uint64_t sub_1DC62A3EC()
{
  return MEMORY[0x1E0DAEAD8]();
}

uint64_t sub_1DC62A3F8()
{
  return MEMORY[0x1E0DAEAE0]();
}

uint64_t sub_1DC62A404()
{
  return MEMORY[0x1E0DAEAE8]();
}

uint64_t sub_1DC62A410()
{
  return MEMORY[0x1E0DAEAF0]();
}

uint64_t sub_1DC62A41C()
{
  return MEMORY[0x1E0DAEB78]();
}

uint64_t sub_1DC62A428()
{
  return MEMORY[0x1E0DAEB80]();
}

uint64_t sub_1DC62A434()
{
  return MEMORY[0x1E0DAECB8]();
}

uint64_t sub_1DC62A440()
{
  return MEMORY[0x1E0DAECD0]();
}

uint64_t sub_1DC62A44C()
{
  return MEMORY[0x1E0DAECD8]();
}

uint64_t sub_1DC62A458()
{
  return MEMORY[0x1E0DAED98]();
}

uint64_t sub_1DC62A464()
{
  return MEMORY[0x1E0DAEDA0]();
}

uint64_t sub_1DC62A470()
{
  return MEMORY[0x1E0DAEE50]();
}

uint64_t sub_1DC62A47C()
{
  return MEMORY[0x1E0DAEE58]();
}

uint64_t sub_1DC62A488()
{
  return MEMORY[0x1E0DAEE60]();
}

uint64_t sub_1DC62A494()
{
  return MEMORY[0x1E0DAEE68]();
}

uint64_t sub_1DC62A4A0()
{
  return MEMORY[0x1E0DAEE70]();
}

uint64_t sub_1DC62A4AC()
{
  return MEMORY[0x1E0DAEE78]();
}

uint64_t sub_1DC62A4B8()
{
  return MEMORY[0x1E0DAEE80]();
}

uint64_t sub_1DC62A4C4()
{
  return MEMORY[0x1E0DAEE88]();
}

uint64_t sub_1DC62A4D0()
{
  return MEMORY[0x1E0DAEF08]();
}

uint64_t sub_1DC62A4DC()
{
  return MEMORY[0x1E0DAEF10]();
}

uint64_t sub_1DC62A4E8()
{
  return MEMORY[0x1E0DAEF18]();
}

uint64_t sub_1DC62A4F4()
{
  return MEMORY[0x1E0DAF108]();
}

uint64_t sub_1DC62A500()
{
  return MEMORY[0x1E0DAF110]();
}

uint64_t sub_1DC62A50C()
{
  return MEMORY[0x1E0DAF118]();
}

uint64_t sub_1DC62A518()
{
  return MEMORY[0x1E0DAF128]();
}

uint64_t sub_1DC62A524()
{
  return MEMORY[0x1E0DAF130]();
}

uint64_t sub_1DC62A530()
{
  return MEMORY[0x1E0DAF220]();
}

uint64_t sub_1DC62A53C()
{
  return MEMORY[0x1E0DAF258]();
}

uint64_t sub_1DC62A548()
{
  return MEMORY[0x1E0DAF270]();
}

uint64_t sub_1DC62A554()
{
  return MEMORY[0x1E0DAF290]();
}

uint64_t sub_1DC62A560()
{
  return MEMORY[0x1E0DB54B0]();
}

uint64_t sub_1DC62A56C()
{
  return MEMORY[0x1E0DB54B8]();
}

uint64_t sub_1DC62A578()
{
  return MEMORY[0x1E0DB54C0]();
}

uint64_t sub_1DC62A584()
{
  return MEMORY[0x1E0DB54C8]();
}

uint64_t sub_1DC62A590()
{
  return MEMORY[0x1E0DB54D0]();
}

uint64_t sub_1DC62A59C()
{
  return MEMORY[0x1E0DB54F8]();
}

uint64_t sub_1DC62A5A8()
{
  return MEMORY[0x1E0DB5518]();
}

uint64_t sub_1DC62A5B4()
{
  return MEMORY[0x1E0DB5520]();
}

uint64_t _s11TeaSettings0B0C15StocksAnalyticsE10Analytics2V9DebuggingV6JitterCfd_0()
{
  return MEMORY[0x1E0DB5548]();
}

uint64_t sub_1DC62A5CC()
{
  return MEMORY[0x1E0DB57F0]();
}

uint64_t sub_1DC62A5D8()
{
  return MEMORY[0x1E0DB5808]();
}

uint64_t sub_1DC62A5E4()
{
  return MEMORY[0x1E0DB5860]();
}

uint64_t sub_1DC62A5F0()
{
  return MEMORY[0x1E0DB5870]();
}

uint64_t sub_1DC62A5FC()
{
  return MEMORY[0x1E0DB5878]();
}

uint64_t sub_1DC62A608()
{
  return MEMORY[0x1E0DB5890]();
}

uint64_t sub_1DC62A614()
{
  return MEMORY[0x1E0CF7ED8]();
}

uint64_t sub_1DC62A620()
{
  return MEMORY[0x1E0CF7EE8]();
}

uint64_t sub_1DC62A62C()
{
  return MEMORY[0x1E0CF7EF0]();
}

uint64_t sub_1DC62A638()
{
  return MEMORY[0x1E0CF7F08]();
}

uint64_t sub_1DC62A644()
{
  return MEMORY[0x1E0CF7F20]();
}

uint64_t sub_1DC62A650()
{
  return MEMORY[0x1E0CF7F30]();
}

uint64_t sub_1DC62A65C()
{
  return MEMORY[0x1E0CF7F40]();
}

uint64_t sub_1DC62A668()
{
  return MEMORY[0x1E0CF7F48]();
}

uint64_t sub_1DC62A674()
{
  return MEMORY[0x1E0CF7F50]();
}

uint64_t sub_1DC62A680()
{
  return MEMORY[0x1E0CF7F58]();
}

uint64_t sub_1DC62A68C()
{
  return MEMORY[0x1E0CF7F60]();
}

uint64_t sub_1DC62A698()
{
  return MEMORY[0x1E0CF7F68]();
}

uint64_t sub_1DC62A6A4()
{
  return MEMORY[0x1E0CF7F70]();
}

uint64_t sub_1DC62A6B0()
{
  return MEMORY[0x1E0CF7F78]();
}

uint64_t sub_1DC62A6BC()
{
  return MEMORY[0x1E0CF7F80]();
}

uint64_t sub_1DC62A6C8()
{
  return MEMORY[0x1E0CF7F88]();
}

uint64_t sub_1DC62A6D4()
{
  return MEMORY[0x1E0CF7FA0]();
}

uint64_t sub_1DC62A6E0()
{
  return MEMORY[0x1E0CF7FB0]();
}

uint64_t sub_1DC62A6EC()
{
  return MEMORY[0x1E0CF7FC8]();
}

uint64_t sub_1DC62A6F8()
{
  return MEMORY[0x1E0CF7FD0]();
}

uint64_t sub_1DC62A704()
{
  return MEMORY[0x1E0CF7FD8]();
}

uint64_t sub_1DC62A710()
{
  return MEMORY[0x1E0CF7FE0]();
}

uint64_t sub_1DC62A71C()
{
  return MEMORY[0x1E0CF7FF8]();
}

uint64_t sub_1DC62A728()
{
  return MEMORY[0x1E0CF8000]();
}

uint64_t sub_1DC62A734()
{
  return MEMORY[0x1E0CF8010]();
}

uint64_t sub_1DC62A740()
{
  return MEMORY[0x1E0CF8018]();
}

uint64_t sub_1DC62A74C()
{
  return MEMORY[0x1E0CF8028]();
}

uint64_t sub_1DC62A758()
{
  return MEMORY[0x1E0CF8038]();
}

uint64_t sub_1DC62A764()
{
  return MEMORY[0x1E0CF8040]();
}

uint64_t sub_1DC62A770()
{
  return MEMORY[0x1E0CF8048]();
}

uint64_t sub_1DC62A77C()
{
  return MEMORY[0x1E0CF8058]();
}

uint64_t sub_1DC62A788()
{
  return MEMORY[0x1E0CF8080]();
}

uint64_t sub_1DC62A794()
{
  return MEMORY[0x1E0CF8090]();
}

uint64_t sub_1DC62A7A0()
{
  return MEMORY[0x1E0CF8098]();
}

uint64_t sub_1DC62A7AC()
{
  return MEMORY[0x1E0CF80C0]();
}

uint64_t sub_1DC62A7B8()
{
  return MEMORY[0x1E0CF80D0]();
}

uint64_t sub_1DC62A7C4()
{
  return MEMORY[0x1E0CF80D8]();
}

uint64_t sub_1DC62A7D0()
{
  return MEMORY[0x1E0CF80E0]();
}

uint64_t sub_1DC62A7DC()
{
  return MEMORY[0x1E0CF80F0]();
}

uint64_t sub_1DC62A7E8()
{
  return MEMORY[0x1E0CF8100]();
}

uint64_t sub_1DC62A7F4()
{
  return MEMORY[0x1E0CF8110]();
}

uint64_t sub_1DC62A800()
{
  return MEMORY[0x1E0CF8118]();
}

uint64_t sub_1DC62A80C()
{
  return MEMORY[0x1E0CF8130]();
}

uint64_t sub_1DC62A818()
{
  return MEMORY[0x1E0CF8178]();
}

uint64_t sub_1DC62A824()
{
  return MEMORY[0x1E0CF8198]();
}

uint64_t sub_1DC62A830()
{
  return MEMORY[0x1E0CF81A0]();
}

uint64_t sub_1DC62A83C()
{
  return MEMORY[0x1E0CF81A8]();
}

uint64_t sub_1DC62A848()
{
  return MEMORY[0x1E0CF81B0]();
}

uint64_t sub_1DC62A854()
{
  return MEMORY[0x1E0CF81C0]();
}

uint64_t sub_1DC62A860()
{
  return MEMORY[0x1E0CF81C8]();
}

uint64_t sub_1DC62A86C()
{
  return MEMORY[0x1E0CF81D0]();
}

uint64_t sub_1DC62A878()
{
  return MEMORY[0x1E0CF81D8]();
}

uint64_t sub_1DC62A884()
{
  return MEMORY[0x1E0CF81E0]();
}

uint64_t sub_1DC62A890()
{
  return MEMORY[0x1E0CF81E8]();
}

uint64_t sub_1DC62A89C()
{
  return MEMORY[0x1E0CF81F0]();
}

uint64_t sub_1DC62A8A8()
{
  return MEMORY[0x1E0CF8208]();
}

uint64_t sub_1DC62A8B4()
{
  return MEMORY[0x1E0CF8210]();
}

uint64_t sub_1DC62A8C0()
{
  return MEMORY[0x1E0CF8230]();
}

uint64_t sub_1DC62A8CC()
{
  return MEMORY[0x1E0CF8238]();
}

uint64_t sub_1DC62A8D8()
{
  return MEMORY[0x1E0CF8250]();
}

uint64_t sub_1DC62A8E4()
{
  return MEMORY[0x1E0CF8280]();
}

uint64_t sub_1DC62A8F0()
{
  return MEMORY[0x1E0CF8288]();
}

uint64_t sub_1DC62A8FC()
{
  return MEMORY[0x1E0CF8298]();
}

uint64_t sub_1DC62A908()
{
  return MEMORY[0x1E0CF82C0]();
}

uint64_t sub_1DC62A914()
{
  return MEMORY[0x1E0CF82D0]();
}

uint64_t sub_1DC62A920()
{
  return MEMORY[0x1E0CF82D8]();
}

uint64_t sub_1DC62A92C()
{
  return MEMORY[0x1E0CF82E0]();
}

uint64_t sub_1DC62A938()
{
  return MEMORY[0x1E0CF8308]();
}

uint64_t sub_1DC62A944()
{
  return MEMORY[0x1E0CF8310]();
}

uint64_t sub_1DC62A950()
{
  return MEMORY[0x1E0CF8318]();
}

uint64_t sub_1DC62A95C()
{
  return MEMORY[0x1E0CF8328]();
}

uint64_t sub_1DC62A968()
{
  return MEMORY[0x1E0CF8330]();
}

uint64_t sub_1DC62A974()
{
  return MEMORY[0x1E0CF8338]();
}

uint64_t sub_1DC62A980()
{
  return MEMORY[0x1E0CF8370]();
}

uint64_t sub_1DC62A98C()
{
  return MEMORY[0x1E0CF8390]();
}

uint64_t sub_1DC62A998()
{
  return MEMORY[0x1E0CF8398]();
}

uint64_t sub_1DC62A9A4()
{
  return MEMORY[0x1E0CF83A8]();
}

uint64_t sub_1DC62A9B0()
{
  return MEMORY[0x1E0CF83B0]();
}

uint64_t sub_1DC62A9BC()
{
  return MEMORY[0x1E0CF83B8]();
}

uint64_t sub_1DC62A9C8()
{
  return MEMORY[0x1E0CF83C0]();
}

uint64_t sub_1DC62A9D4()
{
  return MEMORY[0x1E0CF83C8]();
}

uint64_t sub_1DC62A9E0()
{
  return MEMORY[0x1E0CF83D8]();
}

uint64_t sub_1DC62A9EC()
{
  return MEMORY[0x1E0CF83F0]();
}

uint64_t sub_1DC62A9F8()
{
  return MEMORY[0x1E0CF83F8]();
}

uint64_t sub_1DC62AA04()
{
  return MEMORY[0x1E0CF8400]();
}

uint64_t sub_1DC62AA10()
{
  return MEMORY[0x1E0CF8408]();
}

uint64_t sub_1DC62AA1C()
{
  return MEMORY[0x1E0CF8410]();
}

uint64_t sub_1DC62AA28()
{
  return MEMORY[0x1E0CF8418]();
}

uint64_t sub_1DC62AA34()
{
  return MEMORY[0x1E0CF8428]();
}

uint64_t sub_1DC62AA40()
{
  return MEMORY[0x1E0CF8440]();
}

uint64_t sub_1DC62AA4C()
{
  return MEMORY[0x1E0CF8448]();
}

uint64_t sub_1DC62AA58()
{
  return MEMORY[0x1E0CF8458]();
}

uint64_t sub_1DC62AA64()
{
  return MEMORY[0x1E0CF8478]();
}

uint64_t sub_1DC62AA70()
{
  return MEMORY[0x1E0CF8480]();
}

uint64_t sub_1DC62AA7C()
{
  return MEMORY[0x1E0CF84A8]();
}

uint64_t sub_1DC62AA88()
{
  return MEMORY[0x1E0CF84B0]();
}

uint64_t sub_1DC62AA94()
{
  return MEMORY[0x1E0CF84B8]();
}

uint64_t sub_1DC62AAA0()
{
  return MEMORY[0x1E0CF84C0]();
}

uint64_t sub_1DC62AAAC()
{
  return MEMORY[0x1E0CF84C8]();
}

uint64_t sub_1DC62AAB8()
{
  return MEMORY[0x1E0CF84D0]();
}

uint64_t sub_1DC62AAC4()
{
  return MEMORY[0x1E0CF84D8]();
}

uint64_t sub_1DC62AAD0()
{
  return MEMORY[0x1E0CF84E0]();
}

uint64_t sub_1DC62AADC()
{
  return MEMORY[0x1E0CF84E8]();
}

uint64_t sub_1DC62AAE8()
{
  return MEMORY[0x1E0CF8520]();
}

uint64_t sub_1DC62AAF4()
{
  return MEMORY[0x1E0CF8528]();
}

uint64_t sub_1DC62AB00()
{
  return MEMORY[0x1E0CF8530]();
}

uint64_t sub_1DC62AB0C()
{
  return MEMORY[0x1E0CF8538]();
}

uint64_t sub_1DC62AB18()
{
  return MEMORY[0x1E0CF8548]();
}

uint64_t sub_1DC62AB24()
{
  return MEMORY[0x1E0CF8568]();
}

uint64_t sub_1DC62AB30()
{
  return MEMORY[0x1E0CF8580]();
}

uint64_t sub_1DC62AB3C()
{
  return MEMORY[0x1E0CF8590]();
}

uint64_t sub_1DC62AB48()
{
  return MEMORY[0x1E0CF85B0]();
}

uint64_t sub_1DC62AB54()
{
  return MEMORY[0x1E0CF85D0]();
}

uint64_t sub_1DC62AB60()
{
  return MEMORY[0x1E0CF85F8]();
}

uint64_t sub_1DC62AB6C()
{
  return MEMORY[0x1E0CF8618]();
}

uint64_t sub_1DC62AB78()
{
  return MEMORY[0x1E0CF8620]();
}

uint64_t sub_1DC62AB84()
{
  return MEMORY[0x1E0CF8638]();
}

uint64_t sub_1DC62AB90()
{
  return MEMORY[0x1E0CF8650]();
}

uint64_t sub_1DC62AB9C()
{
  return MEMORY[0x1E0CF8658]();
}

uint64_t sub_1DC62ABA8()
{
  return MEMORY[0x1E0CF8670]();
}

uint64_t sub_1DC62ABB4()
{
  return MEMORY[0x1E0CF86A0]();
}

uint64_t sub_1DC62ABC0()
{
  return MEMORY[0x1E0CF86C0]();
}

uint64_t sub_1DC62ABCC()
{
  return MEMORY[0x1E0DB3010]();
}

uint64_t sub_1DC62ABD8()
{
  return MEMORY[0x1E0DB3018]();
}

uint64_t sub_1DC62ABE4()
{
  return MEMORY[0x1E0DB3020]();
}

uint64_t sub_1DC62ABF0()
{
  return MEMORY[0x1E0DB3030]();
}

uint64_t sub_1DC62ABFC()
{
  return MEMORY[0x1E0DB3038]();
}

uint64_t sub_1DC62AC08()
{
  return MEMORY[0x1E0DB3050]();
}

uint64_t sub_1DC62AC14()
{
  return MEMORY[0x1E0DB3060]();
}

uint64_t sub_1DC62AC20()
{
  return MEMORY[0x1E0DB3068]();
}

uint64_t sub_1DC62AC2C()
{
  return MEMORY[0x1E0DB3070]();
}

uint64_t sub_1DC62AC38()
{
  return MEMORY[0x1E0DB35C8]();
}

uint64_t sub_1DC62AC44()
{
  return MEMORY[0x1E0DB35D0]();
}

uint64_t sub_1DC62AC50()
{
  return MEMORY[0x1E0DB35E8]();
}

uint64_t sub_1DC62AC5C()
{
  return MEMORY[0x1E0DB35F0]();
}

uint64_t sub_1DC62AC68()
{
  return MEMORY[0x1E0DB36F0]();
}

uint64_t sub_1DC62AC74()
{
  return MEMORY[0x1E0DB3778]();
}

uint64_t sub_1DC62AC80()
{
  return MEMORY[0x1E0DB3788]();
}

uint64_t sub_1DC62AC8C()
{
  return MEMORY[0x1E0DB37C0]();
}

uint64_t sub_1DC62AC98()
{
  return MEMORY[0x1E0DB38A8]();
}

uint64_t sub_1DC62ACA4()
{
  return MEMORY[0x1E0DB38B0]();
}

uint64_t sub_1DC62ACB0()
{
  return MEMORY[0x1E0DB38B8]();
}

uint64_t sub_1DC62ACBC()
{
  return MEMORY[0x1E0DB3918]();
}

uint64_t sub_1DC62ACC8()
{
  return MEMORY[0x1E0DB3AB0]();
}

uint64_t sub_1DC62ACD4()
{
  return MEMORY[0x1E0DB3AC0]();
}

uint64_t sub_1DC62ACE0()
{
  return MEMORY[0x1E0DB3AD0]();
}

uint64_t sub_1DC62ACEC()
{
  return MEMORY[0x1E0DB3AE0]();
}

uint64_t sub_1DC62ACF8()
{
  return MEMORY[0x1E0DB3AE8]();
}

uint64_t sub_1DC62AD04()
{
  return MEMORY[0x1E0DB3AF0]();
}

uint64_t sub_1DC62AD10()
{
  return MEMORY[0x1E0DB3B00]();
}

uint64_t sub_1DC62AD1C()
{
  return MEMORY[0x1E0DB3CC0]();
}

uint64_t sub_1DC62AD28()
{
  return MEMORY[0x1E0DB3CD0]();
}

uint64_t sub_1DC62AD34()
{
  return MEMORY[0x1E0DB3EB0]();
}

uint64_t sub_1DC62AD40()
{
  return MEMORY[0x1E0DB3EB8]();
}

uint64_t sub_1DC62AD4C()
{
  return MEMORY[0x1E0DB3EC0]();
}

uint64_t sub_1DC62AD58()
{
  return MEMORY[0x1E0DB3EC8]();
}

uint64_t sub_1DC62AD64()
{
  return MEMORY[0x1E0DB3ED0]();
}

uint64_t sub_1DC62AD70()
{
  return MEMORY[0x1E0DB3ED8]();
}

uint64_t sub_1DC62AD7C()
{
  return MEMORY[0x1E0DB3EE0]();
}

uint64_t sub_1DC62AD88()
{
  return MEMORY[0x1E0DB3EE8]();
}

uint64_t sub_1DC62AD94()
{
  return MEMORY[0x1E0DB3EF0]();
}

uint64_t sub_1DC62ADA0()
{
  return MEMORY[0x1E0DB65F8]();
}

uint64_t sub_1DC62ADAC()
{
  return MEMORY[0x1E0DB3F20]();
}

uint64_t sub_1DC62ADB8()
{
  return MEMORY[0x1E0DB3F28]();
}

uint64_t sub_1DC62ADC4()
{
  return MEMORY[0x1E0DB3F48]();
}

uint64_t sub_1DC62ADD0()
{
  return MEMORY[0x1E0DB3FB0]();
}

uint64_t sub_1DC62ADDC()
{
  return MEMORY[0x1E0DB3FC8]();
}

uint64_t sub_1DC62ADE8()
{
  return MEMORY[0x1E0DB3FF8]();
}

uint64_t sub_1DC62ADF4()
{
  return MEMORY[0x1E0DB4100]();
}

uint64_t sub_1DC62AE00()
{
  return MEMORY[0x1E0DB4120]();
}

uint64_t sub_1DC62AE0C()
{
  return MEMORY[0x1E0DB4348]();
}

uint64_t sub_1DC62AE18()
{
  return MEMORY[0x1E0DB43A8]();
}

uint64_t sub_1DC62AE24()
{
  return MEMORY[0x1E0DB43B0]();
}

uint64_t sub_1DC62AE30()
{
  return MEMORY[0x1E0DB43B8]();
}

uint64_t sub_1DC62AE3C()
{
  return MEMORY[0x1E0DB4418]();
}

uint64_t sub_1DC62AE48()
{
  return MEMORY[0x1E0DB4438]();
}

uint64_t sub_1DC62AE54()
{
  return MEMORY[0x1E0DB4440]();
}

uint64_t sub_1DC62AE60()
{
  return MEMORY[0x1E0DB6618]();
}

uint64_t sub_1DC62AE6C()
{
  return MEMORY[0x1E0DB45C8]();
}

uint64_t sub_1DC62AE78()
{
  return MEMORY[0x1E0DB45D0]();
}

uint64_t sub_1DC62AE84()
{
  return MEMORY[0x1E0DB4A20]();
}

uint64_t sub_1DC62AE90()
{
  return MEMORY[0x1E0DB4AB8]();
}

uint64_t sub_1DC62AE9C()
{
  return MEMORY[0x1E0DB4C60]();
}

uint64_t sub_1DC62AEA8()
{
  return MEMORY[0x1E0DB4CB0]();
}

uint64_t sub_1DC62AEB4()
{
  return MEMORY[0x1E0DB4CC0]();
}

uint64_t sub_1DC62AEC0()
{
  return MEMORY[0x1E0DB4D08]();
}

uint64_t sub_1DC62AECC()
{
  return MEMORY[0x1E0DB5038]();
}

uint64_t sub_1DC62AED8()
{
  return MEMORY[0x1E0DB50E8]();
}

uint64_t sub_1DC62AEE4()
{
  return MEMORY[0x1E0CF0C40]();
}

uint64_t sub_1DC62AEF0()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t sub_1DC62AEFC()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1DC62AF08()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1DC62AF14()
{
  return MEMORY[0x1E0DF2268]();
}

uint64_t sub_1DC62AF20()
{
  return MEMORY[0x1E0DB6830]();
}

uint64_t sub_1DC62AF2C()
{
  return MEMORY[0x1E0DB6EB0]();
}

uint64_t sub_1DC62AF38()
{
  return MEMORY[0x1E0DB77C8]();
}

uint64_t sub_1DC62AF44()
{
  return MEMORY[0x1E0DB77D0]();
}

uint64_t sub_1DC62AF50()
{
  return MEMORY[0x1E0DB9F30]();
}

uint64_t sub_1DC62AF5C()
{
  return MEMORY[0x1E0DBC830]();
}

uint64_t sub_1DC62AF68()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1DC62AF74()
{
  return MEMORY[0x1E0D527A0]();
}

uint64_t sub_1DC62AF80()
{
  return MEMORY[0x1E0D527C0]();
}

uint64_t sub_1DC62AF8C()
{
  return MEMORY[0x1E0D52810]();
}

uint64_t sub_1DC62AF98()
{
  return MEMORY[0x1E0D52830]();
}

uint64_t sub_1DC62AFA4()
{
  return MEMORY[0x1E0D528B0]();
}

uint64_t sub_1DC62AFB0()
{
  return MEMORY[0x1E0D528B8]();
}

uint64_t sub_1DC62AFBC()
{
  return MEMORY[0x1E0D528C0]();
}

uint64_t sub_1DC62AFC8()
{
  return MEMORY[0x1E0D528C8]();
}

uint64_t sub_1DC62AFD4()
{
  return MEMORY[0x1E0D52EB8]();
}

uint64_t sub_1DC62AFE0()
{
  return MEMORY[0x1E0D52EC0]();
}

uint64_t sub_1DC62AFEC()
{
  return MEMORY[0x1E0D52EC8]();
}

uint64_t sub_1DC62AFF8()
{
  return MEMORY[0x1E0D52ED0]();
}

uint64_t sub_1DC62B004()
{
  return MEMORY[0x1E0D52F18]();
}

uint64_t sub_1DC62B010()
{
  return MEMORY[0x1E0D533C0]();
}

uint64_t sub_1DC62B01C()
{
  return MEMORY[0x1E0D53728]();
}

uint64_t sub_1DC62B028()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1DC62B034()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1DC62B040()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1DC62B04C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1DC62B058()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1DC62B064()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1DC62B070()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1DC62B07C()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1DC62B088()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1DC62B094()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1DC62B0A0()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1DC62B0AC()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1DC62B0B8()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1DC62B0C4()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1DC62B0D0()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1DC62B0DC()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1DC62B0E8()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1DC62B0F4()
{
  return MEMORY[0x1E0DB5198]();
}

uint64_t sub_1DC62B100()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1DC62B10C()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1DC62B118()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1DC62B124()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1DC62B130()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1DC62B13C()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1DC62B148()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1DC62B154()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1DC62B160()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1DC62B16C()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1DC62B178()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1DC62B184()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1DC62B190()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1DC62B19C()
{
  return MEMORY[0x1E0CB1C18]();
}

uint64_t sub_1DC62B1A8()
{
  return MEMORY[0x1E0CB1C20]();
}

uint64_t sub_1DC62B1B4()
{
  return MEMORY[0x1E0CB1C28]();
}

uint64_t sub_1DC62B1C0()
{
  return MEMORY[0x1E0DEB408]();
}

uint64_t sub_1DC62B1CC()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1DC62B1D8()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1DC62B1E4()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1DC62B1F0()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1DC62B1FC()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1DC62B208()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1DC62B214()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1DC62B220()
{
  return MEMORY[0x1E0CF0CB0]();
}

uint64_t sub_1DC62B22C()
{
  return MEMORY[0x1E0DBCF08]();
}

uint64_t sub_1DC62B238()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_1DC62B244()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1DC62B250()
{
  return MEMORY[0x1E0CF86E0]();
}

uint64_t sub_1DC62B25C()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1DC62B268()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1DC62B274()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1DC62B280()
{
  return MEMORY[0x1E0CB24B8]();
}

uint64_t sub_1DC62B28C()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1DC62B298()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1DC62B2A4()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1DC62B2B0()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1DC62B2BC()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1DC62B2C8()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1DC62B2D4()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1DC62B2E0()
{
  return MEMORY[0x1E0DEC268]();
}

uint64_t sub_1DC62B2EC()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1DC62B2F8()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1DC62B304()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1DC62B310()
{
  return MEMORY[0x1E0DEC518]();
}

uint64_t sub_1DC62B31C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1DC62B328()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1DC62B334()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1DC62B340()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1DC62B34C()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1DC62B358()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1DC62B364()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1DC62B370()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1DC62B37C()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1DC62B388()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1DC62B394()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1DC62B3A0()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1DC62B3AC()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1DC62B3B8()
{
  return MEMORY[0x1E0DECD58]();
}

uint64_t sub_1DC62B3C4()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1DC62B3D0()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1DC62B3DC()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1DC62B3E8()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1DC62B3F4()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1DC62B400()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1DC62B40C()
{
  return MEMORY[0x1E0DECF98]();
}

uint64_t sub_1DC62B418()
{
  return MEMORY[0x1E0DECFA0]();
}

uint64_t sub_1DC62B424()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1DC62B430()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1DC62B43C()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1DC62B448()
{
  return MEMORY[0x1E0DECFD8]();
}

uint64_t sub_1DC62B454()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1DC62B460()
{
  return MEMORY[0x1E0DED008]();
}

uint64_t sub_1DC62B46C()
{
  return MEMORY[0x1E0DED010]();
}

uint64_t sub_1DC62B478()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1DC62B484()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1DC62B490()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1DC62B49C()
{
  return MEMORY[0x1E0DED0C8]();
}

uint64_t sub_1DC62B4A8()
{
  return MEMORY[0x1E0DED0D0]();
}

uint64_t sub_1DC62B4B4()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1DC62B4C0()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1DC62B4CC()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1DC62B4D8()
{
  return MEMORY[0x1E0DED108]();
}

uint64_t sub_1DC62B4E4()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1DC62B4F0()
{
  return MEMORY[0x1E0DED138]();
}

uint64_t sub_1DC62B4FC()
{
  return MEMORY[0x1E0DED140]();
}

uint64_t sub_1DC62B508()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1DC62B514()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1DC62B520()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1DC62B52C()
{
  return MEMORY[0x1E0DED670]();
}

uint64_t sub_1DC62B538()
{
  return MEMORY[0x1E0DED718]();
}

uint64_t sub_1DC62B544()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1DC62B550()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1DC62B55C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1DC62B568()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1DC62B574()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1DC62B580()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1DC62B58C()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1DC62B598()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1DC62B5A4()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1DC62B5B0()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1DC62B5BC()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1DC62B5C8()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1DC62B5D4()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1DC62B5E0()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1DC62B5EC()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1DC62B5F8()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1DC62B604()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1DC62B610()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t NFSeedBuild()
{
  return MEMORY[0x1E0D60AB8]();
}

uint64_t NFStoreDemoMode()
{
  return MEMORY[0x1E0D60AC0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC60]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x1E0DEEEF8]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x1E0DEEF00]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x1E0DEEF08]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x1E0DEEF60]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x1E0DEEF68]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x1E0DEEF70]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1E0C857A0](a1, a2, a3, a4, a5);
}

