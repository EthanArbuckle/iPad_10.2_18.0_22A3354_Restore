uint64_t sub_1DC4B1454()
{
  unsigned __int8 *v0;

  return sub_1DC4B145C(*v0);
}

uint64_t sub_1DC4B145C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4B1494 + 4 * byte_1DC62C464[a1]))(0x657366664F637475, 0xE900000000000074);
}

uint64_t sub_1DC4B1494()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1DC4B14B4()
{
  return 0x437972746E756F63;
}

unint64_t sub_1DC4B14D4()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC4B14F0()
{
  return 0x74654D7472617473;
}

uint64_t sub_1DC4B1510()
{
  return 0x54746375646F7270;
}

unint64_t sub_1DC4B1534()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1DC4B1584()
{
  return 0x6E65746E49707061;
}

uint64_t sub_1DC4B15A8()
{
  return 0x4465726F74537369;
}

uint64_t sub_1DC4B15CC()
{
  unsigned __int8 *v0;

  return sub_1DC4B15D4(*v0);
}

uint64_t sub_1DC4B15D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4B1604 + 4 * byte_1DC63AC38[a1]))(0x444972657375, 0xE600000000000000);
}

uint64_t sub_1DC4B1604()
{
  return 0x6570795472657375;
}

uint64_t sub_1DC4B161C()
{
  return 0x7261745372657375;
}

uint64_t sub_1DC4B1640()
{
  return 0x6B63617242656761;
}

unint64_t sub_1DC4B165C()
{
  return 0xD000000000000019;
}

unint64_t sub_1DC4B16AC()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC4B16C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4B1700 + 4 * byte_1DC63C37C[*v0]))(0x6F4D656369766564, 0xEB000000006C6564);
}

uint64_t sub_1DC4B1700()
{
  return 0x6C50656369766564;
}

unint64_t sub_1DC4B1724()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC4B1740()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_1DC4B175C()
{
  return 0x656C646E7542736FLL;
}

uint64_t sub_1DC4B1780()
{
  unsigned __int8 *v0;

  return sub_1DC4B1788(*v0);
}

uint64_t sub_1DC4B1788(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1DC4B17C4 + 4 * byte_1DC636D20[a1]))(0xD000000000000018, 0x80000001DC64CB50);
}

unint64_t sub_1DC4B17C4()
{
  return 0xD000000000000011;
}

void sub_1DC4B1820()
{
  JUMPOUT(0x1DC4B182CLL);
}

uint64_t storeEnumTagSinglePayload for SessionData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1DC4B1888 + 4 * byte_1DC62C474[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1DC4B18BC + 4 * byte_1DC62C46F[v4]))();
}

uint64_t sub_1DC4B18BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B18C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4B18CCLL);
  return result;
}

uint64_t sub_1DC4B18D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4B18E0);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1DC4B18E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B18EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of TrackerConfigurationType.adInstrumentationEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DC4B1900()
{
  return sub_1DC62A578();
}

uint64_t sub_1DC4B190C()
{
  return sub_1DC62A56C();
}

uint64_t destroy for ViewData()
{
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for UserData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC4B196C + 4 * byte_1DC63AC45[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC4B19A0 + 4 * byte_1DC63AC40[v4]))();
}

uint64_t sub_1DC4B19A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B19A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4B19B0);
  return result;
}

uint64_t sub_1DC4B19BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4B19C4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC4B19C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B19D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B19E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DeviceOrientation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t DeviceOrientation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4B1A34 + 4 * byte_1DC644290[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4B1A34()
{
  return 0x7469617274726F70;
}

unint64_t sub_1DC4B1A4C()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC4B1A68()
{
  return 0x70616373646E616CLL;
}

uint64_t sub_1DC4B1AA0()
{
  return 0x705565636166;
}

uint64_t sub_1DC4B1AB4()
{
  return 0x6E776F4465636166;
}

uint64_t storeEnumTagSinglePayload for OrientationData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC4B1B18 + 4 * byte_1DC635B43[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC4B1B4C + 4 * byte_1DC635B3E[v4]))();
}

uint64_t sub_1DC4B1B4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B1B54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4B1B5CLL);
  return result;
}

uint64_t sub_1DC4B1B68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4B1B70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC4B1B74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B1B7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchlistType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

unint64_t sub_1DC4B1C18()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0xD000000000000011;
}

uint64_t sub_1DC4B1C60()
{
  _BYTE *v0;

  if (*v0)
    return 0x646C697542707061;
  else
    return 0x6973726556707061;
}

ValueMetadata *type metadata accessor for PerformanceDisplayType()
{
  return &type metadata for PerformanceDisplayType;
}

uint64_t getEnumTagSinglePayload for SessionData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t destroy for FeedData()
{
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for AdCreativeType()
{
  return &type metadata for AdCreativeType;
}

uint64_t sub_1DC4B1D64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StartMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t StartMethod.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4B1DB8 + 4 * byte_1DC64389C[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4B1DB8()
{
  return 0x6469577961646F74;
}

uint64_t sub_1DC4B1DD8()
{
  return 0x6C616E7265747865;
}

unint64_t sub_1DC4B1DF8()
{
  return 0xD000000000000011;
}

unint64_t sub_1DC4B1E44()
{
  return 0xD000000000000020;
}

uint64_t sub_1DC4B1E64()
{
  return 0x6867696C746F7073;
}

uint64_t sub_1DC4B1EA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4B1ED8 + 4 * byte_1DC63911A[*v0]))();
}

void sub_1DC4B1ED8(_QWORD *a1@<X8>)
{
  *a1 = 0x7469617274726F70;
  a1[1] = 0xE800000000000000;
}

void sub_1DC4B1EF4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001DC64B780;
}

void sub_1DC4B1F14(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "landscapeLeft");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t storeEnumTagSinglePayload for WebSubscriptionData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC4B1F9C + 4 * byte_1DC6469D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC4B1FD0 + 4 * byte_1DC6469D0[v4]))();
}

uint64_t sub_1DC4B1FD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B1FD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4B1FE0);
  return result;
}

uint64_t sub_1DC4B1FEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4B1FF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC4B1FF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B2000(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1DC4B200C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0xD000000000000015;
}

uint64_t _s11UserContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1DC4B209C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE300000000000000;
  v5 = 7824750;
  if (v2 != 1)
  {
    v5 = 0x6E696E7275746572;
    v4 = 0xE900000000000067;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t getEnumTagSinglePayload for SymbolType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UserBundleSubscriptionContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC4B21D4 + 4 * byte_1DC636D2B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC4B2208 + 4 * byte_1DC636D26[v4]))();
}

uint64_t sub_1DC4B2208(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B2210(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4B2218);
  return result;
}

uint64_t sub_1DC4B2224(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4B222CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC4B2230(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B2238(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for MediaType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchlistSummaryItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC4B2320 + 4 * byte_1DC631825[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC4B2354 + 4 * byte_1DC631820[v4]))();
}

uint64_t sub_1DC4B2354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B235C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4B2364);
  return result;
}

uint64_t sub_1DC4B2370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4B2378);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC4B237C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B2384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B2390()
{
  _BYTE *v0;

  if (*v0)
    return 0x736C6F626D7973;
  else
    return 0x73696C6863746177;
}

uint64_t sub_1DC4B23D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4B2408 + 4 * byte_1DC63CB30[*v0]))();
}

void sub_1DC4B2408(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61697274;
  a1[1] = 0xE500000000000000;
}

void sub_1DC4B2420(_QWORD *a1@<X8>)
{
  *a1 = 0x6269726373627573;
  a1[1] = 0xEA00000000006465;
}

void sub_1DC4B2440(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "notSubscribed");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t storeEnumTagSinglePayload for ContentEnvironmentData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4B24A8 + 4 * byte_1DC645FEA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4B24C8 + 4 * byte_1DC645FEF[v4]))();
}

_BYTE *sub_1DC4B24A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4B24C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4B24D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4B24D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4B24E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4B24E8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for AdStateData.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

unint64_t sub_1DC4B2544()
{
  return 0xD000000000000012;
}

void sub_1DC4B2560(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x6E49646567676F6CLL;
  if (v2 != 1)
  {
    v5 = 0x754F646567676F6CLL;
    v4 = 0xE900000000000074;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC4B25C4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4B25F4 + 4 * byte_1DC63E3E0[*v0]))();
}

void sub_1DC4B25F4(_QWORD *a1@<X8>)
{
  *a1 = 24945;
  a1[1] = 0xE200000000000000;
}

void sub_1DC4B2604(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E6967617473;
  a1[1] = v1;
}

void sub_1DC4B261C(_QWORD *a1@<X8>)
{
  *a1 = 1685025392;
  a1[1] = 0xE400000000000000;
}

void sub_1DC4B2630(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x6C616E7265746E69;
  if (v2 != 1)
    v4 = 0x6C616E7265747865;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE800000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t _s11UserContextVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC4B2718 + 4 * byte_1DC63C386[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC4B274C + 4 * byte_1DC63C381[v4]))();
}

uint64_t sub_1DC4B274C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B2754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4B275CLL);
  return result;
}

uint64_t sub_1DC4B2768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4B2770);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC4B2774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4B277C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for InterfaceOrientation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

_BYTE *sub_1DC4B2818(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void sub_1DC4B2820(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEA00000000006465;
  v5 = 0x6269726373627573;
  if (v2 != 1)
  {
    v5 = 0x6373627553746F6ELL;
    v4 = 0xED00006465626972;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for WatchedSymbolListData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4B28D0 + 4 * byte_1DC642000[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4B28F0 + 4 * byte_1DC642005[v4]))();
}

_BYTE *sub_1DC4B28D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4B28F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4B28F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4B2900(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4B2908(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4B2910(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1DC4B291C()
{
  return 0x736C6F626D7973;
}

uint64_t storeEnumTagSinglePayload for WatchlistSummaryData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4B2974 + 4 * byte_1DC6381A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4B2994 + 4 * byte_1DC6381A5[v4]))();
}

_BYTE *sub_1DC4B2974(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4B2994(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4B299C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4B29A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4B29AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4B29B4(_DWORD *result)
{
  *result = 0;
  return result;
}

unint64_t sub_1DC4B29C0()
{
  return 0xD000000000000010;
}

void sub_1DC4B29E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC4B6560(a1, a2, v2);
}

uint64_t sub_1DC4B29F0()
{
  return sub_1DC4B9908();
}

uint64_t sub_1DC4B29F8()
{
  return sub_1DC4BCFEC();
}

uint64_t sub_1DC4B2A00()
{
  return sub_1DC4BBF4C();
}

uint64_t sub_1DC4B2A08()
{
  return sub_1DC4BE51C();
}

void sub_1DC4B2A10(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746C7561666564;
  if (*v1)
    v2 = 0x6D6F74737563;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC4B2A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = a2;
  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1DC4FA56C(0, &qword_1EDB0E488);
    v4 = sub_1DC62B154();
  }
  if (a3)
  {
    sub_1DC4FA56C(0, &qword_1EDB118F0);
    a3 = sub_1DC62B154();
  }
  swift_retain();
  v5(v4, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4B2B3C(uint64_t a1)
{
  uint64_t v2;

  sub_1DC4B2B78();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC4B2B78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11BA0)
  {
    v0 = sub_1DC62B25C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11BA0);
  }
}

uint64_t sub_1DC4B2BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v0 = sub_1DC62AA40();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC62A9E0();
  *v3 = 11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CF8430], v0);
  return sub_1DC62A9D4();
}

uint64_t sub_1DC4B2C68@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

void sub_1DC4B2CD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E658)
  {
    sub_1DC62A59C();
    sub_1DC4B35A4();
    v0 = sub_1DC62A5FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E658);
  }
}

uint64_t type metadata accessor for TrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugAssembly()
{
  return objc_opt_self();
}

void sub_1DC4B2D78(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1DC62A728();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1DC4B2DD0()
{
  return sub_1DC62A800();
}

uint64_t sub_1DC4B2DE4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC4B2E8C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  result = sub_1DC62AC5C();
  if (v4)
  {
    type metadata accessor for DynamicEndpoint();
    v2 = swift_allocObject();
    sub_1DC4C0AB0(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC4B2F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v0 = sub_1DC62A5CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC62A59C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4B2CD8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB54D8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  result = sub_1DC62A5E4();
  qword_1EDB0E5B0 = result;
  return result;
}

uint64_t sub_1DC4B3040()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62A3B0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1DC4B30AC()
{
  unint64_t result;

  result = qword_1EDB118F8;
  if (!qword_1EDB118F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB118F8);
  }
  return result;
}

uint64_t sub_1DC4B30E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  void *v4;
  _BYTE v5[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SessionObserver();
  result = sub_1DC62AC50();
  if (result)
  {
    v4 = (void *)result;
    sub_1DC4BA75C(&qword_1EDB0F460, 255, (uint64_t (*)(uint64_t))type metadata accessor for SessionObserver, (uint64_t)&protocol conformance descriptor for SessionObserver);
    sub_1DC62AE3C();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC4B31AC()
{
  uint64_t v0;

  v0 = sub_1DC62AD28();
  __swift_allocate_value_buffer(v0, qword_1EDB0E8D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB0E8D0);
  return sub_1DC62AD1C();
}

uint64_t type metadata accessor for TelemetryAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC4B3234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1DC62A5CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4B43C0(0, &qword_1EDB0E670);
  v5[3] = 10;
  v5[2] = 5;
  v5[1] = 20;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1DC62A5F0();
  qword_1EDB0E5F8 = result;
  return result;
}

uint64_t sub_1DC4B332C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  v4 = sub_1DC62AD28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DC4B3374()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC4B33FC()
{
  void *v0;
  id v1;

  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v1 = v0;
  sub_1DC62AB48();
  return swift_release();
}

uint64_t sub_1DC4B3460()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC4B34E4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1DC4B35A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB0E650;
  if (!qword_1EDB0E650)
  {
    v1 = sub_1DC62A59C();
    result = MEMORY[0x1DF0CC744](MEMORY[0x1E0DB54F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB0E650);
  }
  return result;
}

uint64_t sub_1DC4B35EC(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1DC4B3624()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62AD28();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DC4B36A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = sub_1DC62A5CC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))((char *)&v9 - v5, *MEMORY[0x1E0DB57E8], v0);
  type metadata accessor for Settings.Analytics2.Debugging.Jitter();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v7 = sub_1DC62A5A8();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  qword_1EDB0E5E8 = v7;
  return result;
}

uint64_t sub_1DC4B37AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  result = sub_1DC62AC5C();
  if (v7)
  {
    v4 = type metadata accessor for TrackerConfiguration();
    v5 = swift_allocObject();
    result = sub_1DC4C0AB0(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1EA4AA288;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC4B385C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC4B3890(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  SEL *p_align;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  BOOL v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  SEL *v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t *v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  SEL *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  int64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;

  sub_1DC4B2D78(0, &qword_1EDB0E240, (void (*)(void))sub_1DC4BF94C);
  v6 = v5;
  p_align = (SEL *)*(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t)&v83 - v8;
  swift_beginAccess();
  v10 = (char *)MEMORY[0x1DF0CC840](a3 + 16);
  if (v10)
  {
    if (a1)
    {
      v92 = v10;
      if (a1 >> 62)
        goto LABEL_84;
      v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
LABEL_5:
      v87 = v9;
      v88 = p_align;
      v89 = v6;
      if (v11)
      {
        v94 = a1 & 0xC000000000000001;
        v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        v9 = 4;
        v93 = a1;
        while (1)
        {
          v15 = v9 - 4;
          if (v94)
          {
            v16 = (id)MEMORY[0x1DF0CC0CC](v9 - 4, a1);
            v17 = v9 - 3;
            if (__OFADD__(v15, 1))
              goto LABEL_79;
          }
          else
          {
            v16 = *(id *)(a1 + 8 * v9);
            v17 = v9 - 3;
            if (__OFADD__(v15, 1))
            {
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
              goto LABEL_83;
            }
          }
          a1 = v11;
          v18 = v16;
          v19 = objc_msgSend(v16, sel_inAppAdamID);
          p_align = (SEL *)objc_msgSend(v19, sel_stringValue);

          v20 = sub_1DC62B0E8();
          v22 = v21;

          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v95 = v6;
          v25 = sub_1DC5B34A8(v20, v22);
          v26 = v6[2];
          v27 = (v24 & 1) == 0;
          v28 = v26 + v27;
          if (__OFADD__(v26, v27))
            goto LABEL_80;
          p_align = v24;
          if (v6[3] >= v28)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v6 = v95;
              if ((v24 & 1) != 0)
                goto LABEL_7;
            }
            else
            {
              sub_1DC5B3C90();
              v6 = v95;
              if ((p_align & 1) != 0)
                goto LABEL_7;
            }
          }
          else
          {
            sub_1DC5B3688(v28, isUniquelyReferenced_nonNull_native);
            v29 = sub_1DC5B34A8(v20, v22);
            if ((p_align & 1) != (v30 & 1))
              goto LABEL_87;
            v25 = v29;
            v6 = v95;
            if ((p_align & 1) != 0)
            {
LABEL_7:
              v12 = v6[7];
              v13 = *(void **)(v12 + 8 * v25);
              *(_QWORD *)(v12 + 8 * v25) = v18;

              goto LABEL_8;
            }
          }
          v6[(v25 >> 6) + 8] |= 1 << v25;
          v31 = (uint64_t *)(v6[6] + 16 * v25);
          *v31 = v20;
          v31[1] = v22;
          *(_QWORD *)(v6[7] + 8 * v25) = v18;
          v32 = v6[2];
          v33 = __OFADD__(v32, 1);
          v34 = v32 + 1;
          if (v33)
            goto LABEL_82;
          v6[2] = v34;
          swift_bridgeObjectRetain();
LABEL_8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ++v9;
          v11 = a1;
          v14 = v17 == a1;
          a1 = v93;
          if (v14)
            goto LABEL_26;
        }
      }
      v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_26:
      swift_bridgeObjectRelease();
      v35 = objc_msgSend(*(id *)&v92[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext], sel_purchaseController);
      if (v35)
      {
        v36 = v35;
        v37 = objc_msgSend(v35, sel_purchaseLookUpEntriesByTagID);

        if (v37)
        {
          sub_1DC4FA56C(0, &qword_1EDB118E8);
          v38 = sub_1DC62B088();

          v39 = 0;
          a1 = v38 + 64;
          v40 = 1 << *(_BYTE *)(v38 + 32);
          v41 = -1;
          if (v40 < 64)
            v41 = ~(-1 << v40);
          v42 = v41 & *(_QWORD *)(v38 + 64);
          v94 = (unint64_t)(v40 + 63) >> 6;
          p_align = (SEL *)&stru_1EA4B2FE8.align;
          v90 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v91 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v93 = v38 + 64;
          while (1)
          {
            if (v42)
            {
              v43 = __clz(__rbit64(v42));
              v42 &= v42 - 1;
              v44 = v43 | (v39 << 6);
            }
            else
            {
              v45 = v39 + 1;
              if (__OFADD__(v39, 1))
                goto LABEL_81;
              if (v45 >= v94)
              {
LABEL_67:
                swift_bridgeObjectRelease();
                swift_release();
                v66 = v90;
                v67 = v91;
                if (v90[2])
                  v68 = 3;
                else
                  v68 = 1;
                if (v90[2])
                  v69 = 2;
                else
                  v69 = 4;
                if (v91[2])
                  v70 = v68;
                else
                  v70 = v69;
                LODWORD(v93) = v70;
                v94 = OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager;
                sub_1DC62A8A8();
                LOBYTE(v95) = v70;
                v96 = v67;
                v97 = v66;
                sub_1DC4BDCC8();
                v86 = v71;
                v72 = sub_1DC62A818();
                v73 = *(_QWORD *)(v72 - 8);
                v74 = *(_QWORD *)(v73 + 72);
                v75 = *(unsigned __int8 *)(v73 + 80);
                v76 = (v75 + 32) & ~v75;
                v84 = v75 | 7;
                v85 = v76 + v74;
                v77 = swift_allocObject();
                v83 = xmmword_1DC62C660;
                *(_OWORD *)(v77 + 16) = xmmword_1DC62C660;
                v78 = *MEMORY[0x1E0CF8168];
                v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 104);
                v79(v77 + v76, v78, v72);
                sub_1DC4BF94C();
                sub_1DC62AB60();
                swift_bridgeObjectRelease();
                swift_release();
                LOBYTE(v95) = v93;
                v96 = v67;
                v97 = v66;
                v80 = v87;
                sub_1DC62A71C();
                v81 = v92;
                v82 = swift_allocObject();
                *(_OWORD *)(v82 + 16) = v83;
                v79(v82 + v76, v78, v72);
                sub_1DC62A86C();
                swift_bridgeObjectRelease();
                ((void (*)(uint64_t, _QWORD *))v88[1])(v80, v89);
                v10 = v81;
                goto LABEL_77;
              }
              v46 = *(_QWORD *)(a1 + 8 * v45);
              ++v39;
              if (!v46)
              {
                v39 = v45 + 1;
                if (v45 + 1 >= v94)
                  goto LABEL_67;
                v46 = *(_QWORD *)(a1 + 8 * v39);
                if (!v46)
                {
                  v39 = v45 + 2;
                  if (v45 + 2 >= v94)
                    goto LABEL_67;
                  v46 = *(_QWORD *)(a1 + 8 * v39);
                  if (!v46)
                  {
                    v47 = v45 + 3;
                    if (v47 >= v94)
                      goto LABEL_67;
                    v46 = *(_QWORD *)(a1 + 8 * v47);
                    if (!v46)
                    {
                      while (1)
                      {
                        v39 = v47 + 1;
                        if (__OFADD__(v47, 1))
                          break;
                        if (v39 >= v94)
                          goto LABEL_67;
                        v46 = *(_QWORD *)(a1 + 8 * v39);
                        ++v47;
                        if (v46)
                          goto LABEL_47;
                      }
LABEL_83:
                      __break(1u);
LABEL_84:
                      swift_bridgeObjectRetain();
                      v11 = sub_1DC62B388();
                      goto LABEL_5;
                    }
                    v39 = v47;
                  }
                }
              }
LABEL_47:
              v42 = (v46 - 1) & v46;
              v44 = __clz(__rbit64(v46)) + (v39 << 6);
            }
            v48 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * v44);
            v9 = *v48;
            v49 = v48[1];
            v50 = *(void **)(*(_QWORD *)(v38 + 56) + 8 * v44);
            swift_bridgeObjectRetain();
            v51 = v50;
            if (objc_msgSend(v51, p_align[390]) == (id)1)
            {
              v52 = objc_msgSend(v51, sel_purchaseID);
              if (v52)
              {
                v53 = v52;
                v54 = sub_1DC62B0E8();
                v56 = v55;

                if (v6[2] && (v57 = sub_1DC5B34A8(v54, v56), (v58 & 1) != 0))
                {
                  v59 = *(id *)(v6[7] + 8 * v57);
                  swift_bridgeObjectRelease();
                  if ((objc_msgSend(v59, sel_isTrialPeriod) & 1) != 0)
                  {
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v91 = sub_1DC525A90(0, v91[2] + 1, 1, v91);
                    v61 = v91[2];
                    v60 = v91[3];
                    v62 = v61 + 1;
                    if (v61 >= v60 >> 1)
                      v91 = sub_1DC525A90((_QWORD *)(v60 > 1), v61 + 1, 1, v91);
                    v63 = v91;
                  }
                  else
                  {
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v90 = sub_1DC525A90(0, v90[2] + 1, 1, v90);
                    v61 = v90[2];
                    v65 = v90[3];
                    v62 = v61 + 1;
                    if (v61 >= v65 >> 1)
                      v90 = sub_1DC525A90((_QWORD *)(v65 > 1), v61 + 1, 1, v90);
                    v63 = v90;
                  }
                  v63[2] = v62;
                  v64 = &v63[2 * v61];
                  v64[4] = v9;
                  v64[5] = v49;

                }
                else
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                a1 = v93;
                p_align = (SEL *)(&stru_1EA4B2FE8 + 24);
              }
              else
              {
                swift_bridgeObjectRelease();

                p_align = (SEL *)(&stru_1EA4B2FE8 + 24);
              }
            }
            else
            {
              swift_bridgeObjectRelease();

            }
          }
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_87:
      sub_1DC62B55C();
      __break(1u);
    }
    else
    {
LABEL_77:

    }
  }
}

void SessionObserver.window.setter(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  sub_1DC4BD5A4();

}

uint64_t type metadata accessor for TrackerAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Assembly()
{
  return objc_opt_self();
}

uint64_t sub_1DC4B4188(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v2 = type metadata accessor for FlushAnalyticsBatchesStartupTask();
  result = sub_1DC62AC50();
  if (result)
  {
    v4 = result;
    v5[3] = v2;
    v5[4] = sub_1DC4BA75C(&qword_1EDB0E920, 255, (uint64_t (*)(uint64_t))type metadata accessor for FlushAnalyticsBatchesStartupTask, (uint64_t)&protocol conformance descriptor for FlushAnalyticsBatchesStartupTask);
    v5[0] = v4;
    sub_1DC62ADF4();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC4B4238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1DC62A5CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4B43C0(0, &qword_1EDB0E670);
  v5[2] = 1;
  v5[3] = 50;
  v5[1] = 50;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1DC62A5F0();
  qword_1EDB0E640 = result;
  return result;
}

uint64_t type metadata accessor for DynamicEndpoint()
{
  return objc_opt_self();
}

uint64_t sub_1DC4B4348()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62A908();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1DC4B43C0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1DC62A5FC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1DC4B4408()
{
  sub_1DC4C0864();
  swift_allocObject();
  return sub_1DC62AEB4();
}

uint64_t sub_1DC4B444C()
{
  sub_1DC4B4498();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B4498()
{
  unint64_t result;

  result = qword_1EDB10878;
  if (!qword_1EDB10878)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WebSubscriptionStatus, &type metadata for WebSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB10878);
  }
  return result;
}

void sub_1DC4B44DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDB0E4D0)
  {
    sub_1DC62A998();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDB0E4D0);
  }
}

uint64_t type metadata accessor for SegmentationObserver()
{
  return objc_opt_self();
}

uint64_t sub_1DC4B4564@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB110E0);
  result = sub_1DC62AC5C();
  if (v6[3])
  {
    v4 = type metadata accessor for RollingTimestampConfigurationProvider();
    swift_allocObject();
    v5 = sub_1DC4B5E44(v6, 15.0);
    a2[3] = v4;
    result = sub_1DC4BA75C(&qword_1EDB0E500, 255, (uint64_t (*)(uint64_t))type metadata accessor for RollingTimestampConfigurationProvider, (uint64_t)&unk_1DC643A40);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC4B4638()
{
  sub_1DC4B4684();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B4684()
{
  unint64_t result;

  result = qword_1EDB0F140;
  if (!qword_1EDB0F140)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistType, &type metadata for WatchlistType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F140);
  }
  return result;
}

unint64_t sub_1DC4B46C8()
{
  unint64_t result;

  result = qword_1EDB118D0;
  if (!qword_1EDB118D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB118D0);
  }
  return result;
}

uint64_t sub_1DC4B4704()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC4B4784(_QWORD *a1)
{
  return WatchedSymbolListData.encode(to:)(a1);
}

uint64_t sub_1DC4B4798@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

void sub_1DC4B48C0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1DC4B49DC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E808, (void (*)(void))sub_1DC4BF764, (void (*)(void))sub_1DC4BF7A8);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1DC4B4B50(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3();
    a4();
    v6 = sub_1DC62A80C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1DC4B4BC0(_QWORD *a1)
{
  return WatchlistSummaryData.encode(to:)(a1);
}

uint64_t WatchlistSummaryData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1DC4B4CF8(0, &qword_1EDB11A98, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B4E0C();
  sub_1DC62B5F8();
  v10[1] = v8;
  sub_1DC4B4DB8();
  sub_1DC4B4D54(&qword_1EDB11860, (uint64_t (*)(void))sub_1DC4BF2E4, MEMORY[0x1E0DEAF10]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1DC4B4CF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B4E0C();
    v7 = a3(a1, &type metadata for WatchlistSummaryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4B4D54(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1DC4B4DB8();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1DF0CC744](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC4B4DB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11858)
  {
    v0 = sub_1DC62B16C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11858);
  }
}

unint64_t sub_1DC4B4E0C()
{
  unint64_t result;

  result = qword_1EDB10710;
  if (!qword_1EDB10710)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638318, &type metadata for WatchlistSummaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10710);
  }
  return result;
}

uint64_t sub_1DC4B4E50()
{
  sub_1DC4B4E9C();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B4E9C()
{
  unint64_t result;

  result = qword_1EDB0FC68;
  if (!qword_1EDB0FC68)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ContentEnvironment, &type metadata for ContentEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EDB0FC68);
  }
  return result;
}

uint64_t sub_1DC4B4F14(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[16];

  v7 = sub_1DC62A5CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DC62A5D8();
  MEMORY[0x1E0C80A78](v11);
  (*(void (**)(_BYTE *, _QWORD))(v13 + 104))(&v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57E0], v7);
  v15[15] = a2;
  sub_1DC4B43C0(0, &qword_1EDB0E668);
  swift_allocObject();
  result = sub_1DC62A608();
  *a5 = result;
  return result;
}

uint64_t sub_1DC4B5054()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = "(";
  v5 = MEMORY[0x1E0DE9D38] + 64;
  v6 = MEMORY[0x1E0DE9D48] + 64;
  result = sub_1DC62A998();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v7 = &v3;
    result = sub_1DC62A1A0();
    if (v2 <= 0x3F)
    {
      v8 = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1DC4B511C()
{
  sub_1DC4B5168();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B5168()
{
  unint64_t result;

  result = qword_1EDB10BE0;
  if (!qword_1EDB10BE0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BundleSubscriptionStatus, &type metadata for BundleSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB10BE0);
  }
  return result;
}

uint64_t sub_1DC4B51AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v6[4];

  v0 = sub_1DC62AC68();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC62ACB0();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1DC62AF44();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB36E0], v0);
  sub_1DC62AE6C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1DC4B52A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15StocksAnalytics25PrivacyValidationProvider_privacyValidation;
  swift_beginAccess();
  v4 = sub_1DC62A908();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DC4B5304()
{
  id v0;

  sub_1DC62AB0C();
  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  return sub_1DC62AAF4();
}

uint64_t sub_1DC4B534C()
{
  sub_1DC4B5398();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B5398()
{
  unint64_t result;

  result = qword_1EDB116E0;
  if (!qword_1EDB116E0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserType, &type metadata for UserType);
    atomic_store(result, (unint64_t *)&qword_1EDB116E0);
  }
  return result;
}

uint64_t sub_1DC4B53DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1DC62A5CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC62A5D8();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD))(v6 + 104))((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800]);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1DC4B43C0(0, &qword_1EDB0E660);
  swift_allocObject();
  result = sub_1DC62A608();
  qword_1EDB0E5D8 = result;
  return result;
}

uint64_t sub_1DC4B5510()
{
  sub_1DC4B555C();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B555C()
{
  unint64_t result;

  result = qword_1EDB0F750;
  if (!qword_1EDB0F750)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OsInstallVariant, &type metadata for OsInstallVariant);
    atomic_store(result, (unint64_t *)&qword_1EDB0F750);
  }
  return result;
}

uint64_t type metadata accessor for TelemetrySessionManager()
{
  return objc_opt_self();
}

uint64_t sub_1DC4B55C0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A8B4();
  result = sub_1DC62AC50();
  if (result)
  {
    v2 = sub_1DC62A8A8();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC4B5628(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E900);
  result = sub_1DC62AC5C();
  if (v4)
  {
    sub_1DC4C0AB0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1DC4BA75C(&qword_1EDB10B20, 255, (uint64_t (*)(uint64_t))type metadata accessor for TelemetrySessionManager, (uint64_t)&unk_1DC642D18);
    sub_1DC62AE3C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for WatchlistSummaryItemData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC4B5740()
{
  sub_1DC4B578C();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B578C()
{
  unint64_t result;

  result = qword_1EDB0FD60;
  if (!qword_1EDB0FD60)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ICloudAccountState, &type metadata for ICloudAccountState);
    atomic_store(result, (unint64_t *)&qword_1EDB0FD60);
  }
  return result;
}

uint64_t sub_1DC4B57D0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  result = sub_1DC62AC5C();
  if (v5[3])
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC62AB84();
    result = sub_1DC62AC50();
    if (result)
    {
      v3 = result;
      type metadata accessor for SegmentationObserver();
      swift_allocObject();
      v4 = sub_1DC4B753C(v5, v3);
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC4B58B4()
{
  sub_1DC4B5900();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B5900()
{
  unint64_t result;

  result = qword_1EDB0EE08;
  if (!qword_1EDB0EE08)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StartMethod, &type metadata for StartMethod);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE08);
  }
  return result;
}

uint64_t sub_1DC4B5944(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1DC561018();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DC62B3C4();
  __break(1u);
  return result;
}

_QWORD *sub_1DC4B5AA8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  void *v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E588);
  result = (_QWORD *)sub_1DC62AC5C();
  if (!v5[3])
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A8B4();
  result = (_QWORD *)sub_1DC62AC38();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for SessionObserver();
  result = (_QWORD *)sub_1DC62AC38();
  if (result)
  {
    v4 = result;
    type metadata accessor for TelemetrySessionManager();
    swift_allocObject();
    return sub_1DC4B742C(v5, v3, v4);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC4B5BE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A0);
  result = sub_1DC62AC5C();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DC4BA6C8(0, &qword_1EDB0E598);
    result = sub_1DC62AC5C();
    if (v5)
    {
      result = sub_1DC4C0AB0(&v7, a2);
      *(_QWORD *)(a2 + 40) = v5;
      *(_QWORD *)(a2 + 48) = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Assembly.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1DC4BEA54();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DC63A0E0;
  v2 = type metadata accessor for HeartbeatAssembly();
  v3 = swift_allocObject();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = sub_1DC4B6748(&qword_1EDB11D40, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatAssembly, (uint64_t)&unk_1DC649494);
  *(_QWORD *)(v1 + 32) = v3;
  v4 = type metadata accessor for TrackerAssembly();
  v5 = swift_allocObject();
  *(_QWORD *)(v1 + 96) = v4;
  *(_QWORD *)(v1 + 104) = sub_1DC4B6748(&qword_1EDB0F498, (uint64_t (*)(uint64_t))type metadata accessor for TrackerAssembly, (uint64_t)&unk_1DC63A140);
  *(_QWORD *)(v1 + 72) = v5;
  v6 = type metadata accessor for TelemetryAssembly();
  v7 = swift_allocObject();
  *(_QWORD *)(v1 + 136) = v6;
  *(_QWORD *)(v1 + 144) = sub_1DC4B6748(&qword_1EDB0F9D0, (uint64_t (*)(uint64_t))type metadata accessor for TelemetryAssembly, (uint64_t)&unk_1DC63E1D4);
  *(_QWORD *)(v1 + 112) = v7;
  v8 = type metadata accessor for DebugAssembly();
  v9 = swift_allocObject();
  *(_QWORD *)(v1 + 176) = v8;
  *(_QWORD *)(v1 + 184) = sub_1DC4B6748(&qword_1EDB0EED8, (uint64_t (*)(uint64_t))type metadata accessor for DebugAssembly, (uint64_t)&unk_1DC62C694);
  *(_QWORD *)(v1 + 152) = v9;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1DC4B5E44(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_1DC62A1A0();
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x1E0C80A78](v6);
  v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1DC62A8D8();
  v8 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DC62A998();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BEAC4();
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v2 + 64) = v15;
  sub_1DC4BAC88((uint64_t)a1, v2 + 16);
  *(double *)(v2 + 56) = a2;
  v17 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
  sub_1DC62A8CC();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  v20 = v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  sub_1DC4B44DC();
  *(_QWORD *)(v20 + *(int *)(v21 + 48)) = v19;
  v22 = v25;
  sub_1DC62A194();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v3 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate, v22, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1DC4B601C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A74C();
  result = sub_1DC62AC50();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A9E0();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v4 = result;
  type metadata accessor for FlushAnalyticsBatchesStartupTask();
  v5 = swift_allocObject();
  v6 = OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  if (qword_1EDB0E8E8 != -1)
    swift_once();
  v7 = sub_1DC62AD28();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDB0E8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5 + v6, v8, v7);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_flushManager) = v3;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_loggingEventProcessor) = v4;
  return v5;
}

uint64_t sub_1DC4B6150()
{
  sub_1DC4B619C();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B619C()
{
  unint64_t result;

  result = qword_1EDB0F9B8;
  if (!qword_1EDB0F9B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DeviceOrientation, &type metadata for DeviceOrientation);
    atomic_store(result, (unint64_t *)&qword_1EDB0F9B8);
  }
  return result;
}

uint64_t sub_1DC4B61E0()
{
  swift_getObjectType();
  return sub_1DC62A56C();
}

uint64_t sub_1DC4B6234()
{
  sub_1DC4B6280();
  return sub_1DC62B130();
}

unint64_t sub_1DC4B6280()
{
  unint64_t result;

  result = qword_1EDB10370;
  if (!qword_1EDB10370)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for InterfaceOrientation, &type metadata for InterfaceOrientation);
    atomic_store(result, (unint64_t *)&qword_1EDB10370);
  }
  return result;
}

uint64_t sub_1DC4B62C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1DC4BE8C4;
  *(_QWORD *)(v5 + 24) = v4;
  swift_retain();
  swift_retain();
  sub_1DC62A740();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC4B637C()
{
  sub_1DC62A8F0();
  sub_1DC62A8E4();
  sub_1DC62A6E0();
  sub_1DC62A6D4();
  sub_1DC62A7E8();
  sub_1DC62A7DC();
  sub_1DC62A650();
  swift_allocObject();
  return sub_1DC62A644();
}

uint64_t sub_1DC4B6414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v6[4];

  v0 = sub_1DC62AC68();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC62ACB0();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E588);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB36E0], v0);
  sub_1DC62AE78();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_1DC62ACA4();
  swift_retain();
  sub_1DC62AE18();
  swift_release();
  return swift_release();
}

void sub_1DC4B6560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1DF0CC840](v4);
  if (v5)
  {
    v6 = (void *)v5;
    if (a2 == 1)
    {
      sub_1DC4BFAC4();
      sub_1DC62A7AC();
      sub_1DC4BF94C();
      sub_1DC62A7AC();
      sub_1DC4B8924();
      sub_1DC4B7704();
    }

  }
}

void sub_1DC4B6600()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB0E878)
  {
    sub_1DC62ABA8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670];
    sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1DC4B6748(&qword_1EDB0E8A8, v0, MEMORY[0x1E0CF8680]);
    v1 = sub_1DC62A80C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB0E878);
  }
}

void sub_1DC4B66A4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EDB0E880)
  {
    sub_1DC62ABC0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0];
    sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    sub_1DC4B6748(&qword_1EDB0E8B8, v0, MEMORY[0x1E0CF86D0]);
    v1 = sub_1DC62A80C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EDB0E880);
  }
}

uint64_t sub_1DC4B6748(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1DF0CC744](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4B6788(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1DC62ABA8();
    result = MEMORY[0x1DF0CC744](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4B67C8(_QWORD *a1)
{
  return ContentEnvironmentData.encode(to:)(a1);
}

uint64_t ContentEnvironmentData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC4B68E0(0, &qword_1EDB11AA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B693C();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC4B6980();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1DC4B68E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B693C();
    v7 = a3(a1, &type metadata for ContentEnvironmentData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4B693C()
{
  unint64_t result;

  result = qword_1EDB109D8;
  if (!qword_1EDB109D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64616C, &type metadata for ContentEnvironmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB109D8);
  }
  return result;
}

unint64_t sub_1DC4B6980()
{
  unint64_t result;

  result = qword_1EDB0FC60;
  if (!qword_1EDB0FC60)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ContentEnvironment, &type metadata for ContentEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EDB0FC60);
  }
  return result;
}

uint64_t Tracker.chain(eventPath:)()
{
  uint64_t v0;

  EventPath.rawValue.getter();
  v0 = sub_1DC62AB6C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventPath.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4B6A50
                                                            + 4 * asc_1DC63B248[*v0]))(0x686372616573, 0xE600000000000000);
}

uint64_t sub_1DC4B6A50()
{
  return 0x61576567616E616DLL;
}

unint64_t sub_1DC4B6A74()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC4B6B6C()
{
  return 0x6C63697472416E69;
}

uint64_t sub_1DC4B6B88()
{
  return 0x6E65746E49707061;
}

uint64_t sub_1DC4B6BAC()
{
  return 0x6E65746E49707061;
}

uint64_t sub_1DC4B6BCC(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  sub_1DC62A848();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC62A9E0();
  result = sub_1DC62AC50();
  if (result)
  {
    sub_1DC62A8FC();
    swift_release();
    swift_release();
    sub_1DC62A848();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1DC62AA34();
    result = sub_1DC62AC38();
    if (result)
    {
      sub_1DC62A8FC();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC4B6CD8(_QWORD *a1)
{
  return WebSubscriptionData.encode(to:)(a1);
}

uint64_t WebSubscriptionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  sub_1DC4B6E64(0, &qword_1EDB11A80, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *v1;
  v11[0] = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B6F04();
  sub_1DC62B5F8();
  v14 = v9;
  v13 = 0;
  sub_1DC4B6EC0();
  sub_1DC62B4E4();
  if (!v2)
  {
    v11[1] = v11[0];
    v12 = 1;
    sub_1DC4B72F4();
    sub_1DC4B7298(&qword_1EDB11888, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DC4B6E64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B6F04();
    v7 = a3(a1, &type metadata for WebSubscriptionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4B6EC0()
{
  unint64_t result;

  result = qword_1EDB10870;
  if (!qword_1EDB10870)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WebSubscriptionStatus, &type metadata for WebSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB10870);
  }
  return result;
}

unint64_t sub_1DC4B6F04()
{
  unint64_t result;

  result = qword_1EDB10188;
  if (!qword_1EDB10188)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646B58, &type metadata for WebSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10188);
  }
  return result;
}

uint64_t sub_1DC4B6F48(_QWORD *a1)
{
  return WatchlistSummaryItemData.encode(to:)(a1);
}

uint64_t WatchlistSummaryItemData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  sub_1DC4B70D4(0, &qword_1EDB11AC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *v1;
  v11[0] = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B7130();
  sub_1DC62B5F8();
  v14 = v9;
  v13 = 0;
  sub_1DC4B73E8();
  sub_1DC62B4E4();
  if (!v2)
  {
    v11[1] = v11[0];
    v12 = 1;
    sub_1DC4B72F4();
    sub_1DC4B7298(&qword_1EDB11888, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DC4B70D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B7130();
    v7 = a3(a1, &type metadata for WatchlistSummaryItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4B7130()
{
  unint64_t result;

  result = qword_1EDB10D90;
  if (!qword_1EDB10D90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6319AC, &type metadata for WatchlistSummaryItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10D90);
  }
  return result;
}

uint64_t WatchedSymbolListData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1DC4B7348(0, &qword_1EDB11AA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B73A4();
  sub_1DC62B5F8();
  v10[1] = v8;
  sub_1DC4B72F4();
  sub_1DC4B7298(&qword_1EDB11888, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DC4B7298(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1DC4B72F4();
    v8 = a2;
    result = MEMORY[0x1DF0CC744](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DC4B72F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11880)
  {
    v0 = sub_1DC62B16C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11880);
  }
}

void sub_1DC4B7348(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B73A4();
    v7 = a3(a1, &type metadata for WatchedSymbolListData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4B73A4()
{
  unint64_t result;

  result = qword_1EDB10840;
  if (!qword_1EDB10840)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64217C, &type metadata for WatchedSymbolListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10840);
  }
  return result;
}

unint64_t sub_1DC4B73E8()
{
  unint64_t result;

  result = qword_1EDB0F138;
  if (!qword_1EDB0F138)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistType, &type metadata for WatchlistType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F138);
  }
  return result;
}

_QWORD *sub_1DC4B742C(_QWORD *a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  id v7;
  uint64_t v8;
  _QWORD v10[4];

  v4 = v3;
  v4[3] = a3;
  v4[4] = 0;
  v4[2] = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  v7 = a3;
  sub_1DC62A3BC();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  swift_allocObject();
  swift_weakInit();
  v8 = sub_1DC62AF68();
  swift_release();
  swift_release();

  v4[4] = v8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

uint64_t sub_1DC4B753C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BYTE v12[40];

  v3 = v2;
  v6 = sub_1DC62A3B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)(v3 + 16) = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  sub_1DC62A464();
  sub_1DC4B905C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A458();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v3;
  sub_1DC62ACBC();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t _s15StocksAnalytics8FeedDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15StocksAnalytics8ViewDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1DC4B7704()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext), sel_purchaseController);
  if (v1)
  {
    v2 = v1;
    sub_1DC62AC8C();
    v3 = (void *)sub_1DC62AC74();
    v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v6[4] = sub_1DC4BFF2C;
    v6[5] = v4;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 1107296256;
    v6[2] = sub_1DC4B2A8C;
    v6[3] = &block_descriptor_0;
    v5 = _Block_copy(v6);
    swift_release();
    objc_msgSend(v2, sel_performEntitlementCheckWithIgnoreCache_callbackQueue_completion_, 0, v3, v5);
    _Block_release(v5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC4B7810(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _BYTE v8[24];
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  char v12;
  _QWORD v13[7];
  _QWORD v14[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A8B4();
  result = sub_1DC62AC50();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E590);
  result = sub_1DC62AC5C();
  if (!v14[3])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B46C8();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC62AC5C();
  if (!v13[3])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62AB0C();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v5 = (void *)result;
  v12 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  result = sub_1DC62AC5C();
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB11F28);
  result = sub_1DC62AC5C();
  if (v9)
  {
    v6 = objc_allocWithZone((Class)type metadata accessor for SessionObserver());
    v7 = sub_1DC5D83F0(v3, v14, v4, v13, v5, &v12, (uint64_t)v10, (uint64_t)v8);
    swift_release();

    return (uint64_t)v7;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1DC4B7A68@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B7A88(a1);
}

uint64_t sub_1DC4B7A88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  unsigned __int8 v24;

  v23[0] = a1;
  v2 = sub_1DC62A3B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62A8D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v12 = (_QWORD *)((char *)v23 - v11);
  if (qword_1EDB0E5F0 != -1)
    swift_once();
  if ((sub_1DC62A5B4() & 1) != 0)
  {
    if (qword_1F0369180 != -1)
      swift_once();
    sub_1DC4E4674();
    sub_1DC62A578();
    v13 = v24;
    if (qword_1F0369188 != -1)
      swift_once();
    sub_1DC62A578();
    v14 = v23[2];
    if (qword_1F0369190 != -1)
      swift_once();
    sub_1DC62A578();
    if (v13)
    {
      v15 = v23[1];
      *v12 = v14;
      v12[1] = v15;
      v16 = (unsigned int *)MEMORY[0x1E0CF8240];
    }
    else
    {
      v16 = (unsigned int *)MEMORY[0x1E0CF8248];
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v12, *v16, v6);
    return (*(uint64_t (**)(_QWORD, _QWORD *, uint64_t))(v7 + 32))(v23[0], v12, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC15StocksAnalytics22TimestampJitterFactory_appConfiguration, v2);
    v17 = (void *)objc_opt_self();
    if (objc_msgSend(v17, sel_enabledForCurrentLevel_, sub_1DC62A368()))
    {
      sub_1DC62A350();
      v19 = v18;
      sub_1DC62A35C();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      *v10 = v19;
      v10[1] = v21;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E0CF8240], v6);
      return (*(uint64_t (**)(_QWORD, _QWORD *, uint64_t))(v7 + 32))(v23[0], v10, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v7 + 104))(v23[0], *MEMORY[0x1E0CF8248], v6);
    }
  }
}

uint64_t sub_1DC4B7D98(_QWORD *a1)
{
  return AppData.encode(to:)(a1);
}

uint64_t AppData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1DC4B7EE0(0, &qword_1EDB11AE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B7F3C();
  sub_1DC62B5F8();
  v13 = 0;
  v9 = v11[3];
  sub_1DC62B4B4();
  if (!v9)
  {
    v12 = 1;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1DC4B7EE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B7F3C();
    v7 = a3(a1, &type metadata for AppData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4B7F3C()
{
  unint64_t result;

  result = qword_1EDB11608;
  if (!qword_1EDB11608)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648BAC, &type metadata for AppData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11608);
  }
  return result;
}

double sub_1DC4B7F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  double v46;
  uint64_t v48;
  os_unfair_lock_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v52 = a1;
  sub_1DC4B44DC();
  v50 = v3;
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62A8D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC62A998();
  v53 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC62A1A0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v48 - v17;
  v49 = (os_unfair_lock_t)(*(_QWORD *)(v2 + 64) + 16);
  os_unfair_lock_lock(v49);
  sub_1DC62A194();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate, v12);
  sub_1DC62A170();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v16, v12);
  v21(v18, v12);
  if (*(double *)(v2 + 56) >= v20)
  {
    sub_1DC4B30AC();
    v35 = (void *)sub_1DC62B250();
    sub_1DC4B83E8();
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1DC62C670;
    v38 = v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig;
    swift_beginAccess();
    v39 = v53;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    v30(v11, v38, v9);
    v40 = sub_1DC62A98C();
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v9);
    *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 64) = sub_1DC4BEC64();
    *(_QWORD *)(v29 + 32) = v40;
    *(_QWORD *)(v29 + 40) = v42;
    v28 = v50;
    v36 = *(_QWORD *)(v38 + *(int *)(v50 + 48));
  }
  else
  {
    v22 = *(_QWORD *)(v2 + 40);
    v23 = *(_QWORD *)(v2 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    sub_1DC62A8CC();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v26 = v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig;
    swift_beginAccess();
    v27 = v53;
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 40))(v26, v11, v9);
    v28 = v50;
    *(_QWORD *)(v26 + *(int *)(v50 + 48)) = v25;
    swift_endAccess();
    sub_1DC4B30AC();
    v48 = sub_1DC62B250();
    sub_1DC4B83E8();
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1DC62C670;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v30(v11, v26, v9);
    v31 = sub_1DC62A98C();
    v33 = v32;
    v34 = *(void (**)(char *, uint64_t))(v27 + 8);
    v35 = (void *)v48;
    v34(v11, v9);
    *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 64) = sub_1DC4BEC64();
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v33;
    v36 = *(_QWORD *)(v26 + *(int *)(v28 + 48));
  }
  v37 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v29 + 96) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v29 + 104) = v37;
  *(_QWORD *)(v29 + 72) = v36;
  sub_1DC62B1D8();
  sub_1DC62AEF0();

  swift_bridgeObjectRelease();
  v43 = v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig;
  swift_beginAccess();
  v44 = *(int *)(v28 + 48);
  v45 = v51;
  v30(v51, v43, v9);
  v46 = *(double *)(v43 + v44);
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v52, v45, v9);
  os_unfair_lock_unlock(v49);
  return v46;
}

void sub_1DC4B83E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11B88)
  {
    sub_1DC4BE928(255, &qword_1EDB11B98);
    v0 = sub_1DC62B514();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11B88);
  }
}

uint64_t sub_1DC4B844C(_QWORD *a1)
{
  return OrientationData.encode(to:)(a1);
}

uint64_t OrientationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1DC4B85B4(0, &qword_1EDB0E490, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B8698();
  sub_1DC62B5F8();
  v16 = v9;
  v15 = 0;
  sub_1DC4B8654();
  sub_1DC62B4E4();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1DC4B8610();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DC4B85B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B8698();
    v7 = a3(a1, &type metadata for OrientationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4B8610()
{
  unint64_t result;

  result = qword_1EDB10368;
  if (!qword_1EDB10368)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for InterfaceOrientation, &type metadata for InterfaceOrientation);
    atomic_store(result, (unint64_t *)&qword_1EDB10368);
  }
  return result;
}

unint64_t sub_1DC4B8654()
{
  unint64_t result;

  result = qword_1EDB0F9B0;
  if (!qword_1EDB0F9B0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DeviceOrientation, &type metadata for DeviceOrientation);
    atomic_store(result, (unint64_t *)&qword_1EDB0F9B0);
  }
  return result;
}

unint64_t sub_1DC4B8698()
{
  unint64_t result;

  result = qword_1EDB0F418;
  if (!qword_1EDB0F418)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635CB4, &type metadata for OrientationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F418);
  }
  return result;
}

uint64_t sub_1DC4B86DC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62AB0C();
  result = sub_1DC62AC50();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4C0910();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v4 = result;
  sub_1DC62AA34();
  sub_1DC62AA1C();
  v6 = (void *)sub_1DC62AA10();
  if (qword_1EDB0E5C0 != -1)
    swift_once();
  sub_1DC4BA75C(&qword_1EDB0F9C8, v5, (uint64_t (*)(uint64_t))type metadata accessor for TelemetryAssembly, (uint64_t)&unk_1DC63E194);
  sub_1DC62A578();
  v7 = (void *)sub_1DC62AA04();

  if (qword_1EDB0E648 != -1)
    swift_once();
  sub_1DC62A578();
  v8 = (void *)sub_1DC62A9EC();

  if (qword_1EDB0E600 != -1)
    swift_once();
  sub_1DC62A578();
  v9 = sub_1DC62A9F8();

  return MEMORY[0x1DF0CB7F0](v3, v4, 1, v9);
}

_QWORD *initializeBufferWithCopyOfBuffer for IssueData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1DC4B8924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  __int128 v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;

  sub_1DC4B2D78(0, &qword_1EDB0E698, (void (*)(void))sub_1DC4BFAC4);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v23 - v4;
  v6 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext), sel_purchaseController);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_webAccessOptedInTagIDs);

    if (v8)
    {
      v9 = sub_1DC62B178();

      if (*(_QWORD *)(v9 + 16))
        v10 = 1;
      else
        v10 = 2;
      v27 = v10;
      v11 = sub_1DC4BE974(v9);
      v26 = v11;
      swift_bridgeObjectRelease();
      v30 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager);
      sub_1DC62A8A8();
      v31 = v10;
      v32 = v11;
      sub_1DC4BDCC8();
      v25 = v12;
      v13 = sub_1DC62A818();
      v29 = v3;
      v14 = v13;
      v15 = *(_QWORD *)(v13 - 8);
      v16 = *(unsigned __int8 *)(v15 + 80);
      v24 = v5;
      v17 = (v16 + 32) & ~v16;
      v18 = swift_allocObject();
      v28 = v2;
      v23 = xmmword_1DC62C660;
      *(_OWORD *)(v18 + 16) = xmmword_1DC62C660;
      v19 = *MEMORY[0x1E0CF8168];
      v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104);
      v20(v18 + v17, v19, v14);
      sub_1DC4BFAC4();
      sub_1DC62AB60();
      swift_bridgeObjectRelease();
      swift_release();
      v31 = v27;
      v32 = v26;
      v21 = v24;
      sub_1DC62A71C();
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v23;
      v20(v22 + v17, v19, v14);
      sub_1DC62A86C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v28);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1DC4B8C04(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1DC4B8C54(void *a1)
{
  uint64_t v1;

  return sub_1DC4B8C5C(a1, v1);
}

uint64_t sub_1DC4B8C5C(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain();
  v5 = a1;
  sub_1DC62AED8();
  return swift_release();
}

uint64_t sub_1DC4B8CC0(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A650();
  result = sub_1DC62AC50();
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62AB0C();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4C0910();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_1DC62A74C();
  sub_1DC62AA1C();
  v4 = (void *)sub_1DC62AA10();
  if (qword_1EDB0E5C0 != -1)
    swift_once();
  sub_1DC4BA75C(&qword_1EDB0F490, v3, (uint64_t (*)(uint64_t))type metadata accessor for TrackerAssembly, (uint64_t)&unk_1DC63A100);
  sub_1DC62A578();
  v5 = (void *)sub_1DC62AA04();

  if (qword_1EDB0E648 != -1)
    swift_once();
  sub_1DC62A578();
  v6 = (void *)sub_1DC62A9EC();

  if (qword_1EDB0E600 != -1)
    swift_once();
  sub_1DC62A578();
  sub_1DC62A9F8();

  sub_1DC62AA70();
  swift_allocObject();
  sub_1DC62AA64();
  return sub_1DC62A734();
}

id sub_1DC4B8F4C()
{
  return sub_1DC4B8F6C();
}

id sub_1DC4B8F6C()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext), sel_bundleSubscriptionManager);
  if (result)
  {
    v2 = result;
    v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v5[4] = sub_1DC4B8C54;
    v5[5] = v3;
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 1107296256;
    v5[2] = sub_1DC4B8C04;
    v5[3] = &block_descriptor;
    v4 = _Block_copy(v5);
    swift_release();
    objc_msgSend(v2, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 2, v4);
    _Block_release(v4);
    return (id)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC4B905C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  BOOL v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  BOOL v13;
  id v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[24];
  uint64_t v21;

  v0 = (_QWORD *)sub_1DC62A314();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_standardUserDefaults);
  v3 = (void *)sub_1DC62B0DC();
  v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1DC62B28C();
    swift_unknownObjectRelease();
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_1DC4B9440((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    sub_1DC4B94A0(0, (unint64_t *)&qword_1EDB118B8, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = sub_1DC4BEB7C(v0, v17);
      swift_bridgeObjectRelease();
      if (v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
  }
  else
  {
    sub_1DC4B2B3C((uint64_t)v20);
  }
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  swift_bridgeObjectRetain();
  sub_1DC62AB48();
  swift_release();
  v6 = objc_msgSend(v1, sel_standardUserDefaults);
  v7 = (void *)sub_1DC62B148();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1DC62B0DC();
  objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

LABEL_10:
  v9 = sub_1DC62A320();
  v10 = objc_msgSend(v1, sel_standardUserDefaults);
  v11 = (void *)sub_1DC62B0DC();
  v12 = objc_msgSend(v10, sel_valueForKey_, v11);

  if (v12)
  {
    sub_1DC62B28C();
    swift_unknownObjectRelease();
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_1DC4B9440((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    sub_1DC4B94A0(0, (unint64_t *)&qword_1EDB118A0, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = sub_1DC4BEBF0(v9, (uint64_t)v17);
      swift_bridgeObjectRelease();
      if (v13)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  else
  {
    sub_1DC4B2B3C((uint64_t)v20);
  }
  *(_QWORD *)(swift_allocObject() + 16) = v9;
  swift_bridgeObjectRetain();
  sub_1DC62AB48();
  swift_release();
  v14 = objc_msgSend(v1, sel_standardUserDefaults);
  v15 = (void *)sub_1DC62B148();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1DC62B0DC();
  objc_msgSend(v14, sel_setObject_forKey_, v15, v16);

}

uint64_t sub_1DC4B9440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC4B94A0(0, (unint64_t *)&qword_1EDB11BA0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC4B94A0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1DC4B9620(_QWORD *a1)
{
  return DeviceData.encode(to:)(a1);
}

uint64_t DeviceData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[5];
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  sub_1DC4B9824(0, &qword_1EDB119C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v19 = *(_QWORD *)(v1 + 24);
  v20 = v8;
  v18 = *(unsigned __int8 *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v17[3] = *(_QWORD *)(v1 + 48);
  v17[4] = v9;
  v10 = *(_QWORD *)(v1 + 56);
  v17[1] = *(_QWORD *)(v1 + 64);
  v17[2] = v10;
  v11 = a1[3];
  v12 = a1;
  v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1DC4B98C4();
  sub_1DC62B5F8();
  v26 = 0;
  sub_1DC62B4B4();
  if (!v2)
  {
    v15 = v18;
    v25 = 1;
    sub_1DC62B4B4();
    v24 = v15;
    v23 = 2;
    sub_1DC4B9880();
    sub_1DC62B4E4();
    v22 = 3;
    sub_1DC62B4B4();
    v21 = 4;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

void sub_1DC4B9824(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B98C4();
    v7 = a3(a1, &type metadata for DeviceData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4B9880()
{
  unint64_t result;

  result = qword_1EDB0F748;
  if (!qword_1EDB0F748)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OsInstallVariant, &type metadata for OsInstallVariant);
    atomic_store(result, (unint64_t *)&qword_1EDB0F748);
  }
  return result;
}

unint64_t sub_1DC4B98C4()
{
  unint64_t result;

  result = qword_1EDB0ECC8;
  if (!qword_1EDB0ECC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C500, &type metadata for DeviceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECC8);
  }
  return result;
}

uint64_t sub_1DC4B9908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1DC4B9C80();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4B9A48();
  sub_1DC4BDCC8();
  v5 = sub_1DC62A818();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1DC4B9BF4();
  sub_1DC62A980();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1DC4B9A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  char v5;
  _BYTE v11[16];

  swift_getObjectType();
  v0 = sub_1DC62A308();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC62A554();
  sub_1DC4B9C38();
  sub_1DC62A578();
  swift_release();
  v4 = (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x1E0DAE488])
  {
    v5 = 3;
  }
  else if (v4 == *MEMORY[0x1E0DAE4C0])
  {
    v5 = 2;
  }
  else if (v4 == *MEMORY[0x1E0DAE498])
  {
    v5 = 1;
  }
  else
  {
    if (v4 != *MEMORY[0x1E0DAE4A0]
      && v4 != *MEMORY[0x1E0DAE490]
      && v4 != *MEMORY[0x1E0DAE4B8]
      && v4 != *MEMORY[0x1E0DAE4A8]
      && v4 != *MEMORY[0x1E0DAE4B0])
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
    }
    v5 = 0;
  }
  v11[15] = v5;
  sub_1DC4B9BF4();
  return sub_1DC62A71C();
}

unint64_t sub_1DC4B9BF4()
{
  unint64_t result;

  result = qword_1EDB109F0;
  if (!qword_1EDB109F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ContentEnvironmentData, &type metadata for ContentEnvironmentData);
    atomic_store(result, (unint64_t *)&qword_1EDB109F0);
  }
  return result;
}

unint64_t sub_1DC4B9C38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB0F458;
  if (!qword_1EDB0F458)
  {
    v1 = type metadata accessor for SessionObserver();
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SessionObserver, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB0F458);
  }
  return result;
}

void sub_1DC4B9C80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6B0)
  {
    sub_1DC4B9BF4();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6B0);
  }
}

uint64_t sub_1DC4B9CD8(_QWORD *a1)
{
  return UserBundleSubscriptionContextData.encode(to:)(a1);
}

uint64_t UserBundleSubscriptionContextData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  sub_1DC4B9F00(0, &qword_1EDB11AE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - v7;
  v9 = *v1;
  v10 = v1[1];
  v19 = v1[2];
  v20 = v10;
  v11 = *((_QWORD *)v1 + 1);
  v17 = *((_QWORD *)v1 + 2);
  v18 = v11;
  v12 = *((_QWORD *)v1 + 3);
  v15 = *((_QWORD *)v1 + 4);
  v16 = v12;
  v14[1] = v1[40];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B9F5C();
  sub_1DC62B5F8();
  v27 = v9;
  v26 = 0;
  sub_1DC4B9FA0();
  sub_1DC62B4E4();
  if (!v2)
  {
    v25 = 1;
    sub_1DC62B4C0();
    v24 = 2;
    sub_1DC62B4C0();
    v23 = 3;
    sub_1DC62B478();
    v22 = 4;
    sub_1DC62B478();
    v21 = 5;
    sub_1DC62B4C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1DC4B9F00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4B9F5C();
    v7 = a3(a1, &type metadata for UserBundleSubscriptionContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4B9F5C()
{
  unint64_t result;

  result = qword_1EDB111A0;
  if (!qword_1EDB111A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636EC8, &type metadata for UserBundleSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB111A0);
  }
  return result;
}

unint64_t sub_1DC4B9FA0()
{
  unint64_t result;

  result = qword_1EDB10BD8;
  if (!qword_1EDB10BD8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BundleSubscriptionStatus, &type metadata for BundleSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB10BD8);
  }
  return result;
}

uint64_t sub_1DC4B9FE4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _BYTE v8[24];
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  char v12;
  _QWORD v13[7];
  _QWORD v14[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A8B4();
  result = sub_1DC62AC38();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E590);
  result = sub_1DC62AC5C();
  if (!v14[3])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B46C8();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1DC62AC5C();
  if (!v13[3])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62AB0C();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v5 = (void *)result;
  v12 = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  result = sub_1DC62AC5C();
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB11F28);
  result = sub_1DC62AC5C();
  if (v9)
  {
    v6 = objc_allocWithZone((Class)type metadata accessor for SessionObserver());
    v7 = sub_1DC5D83F0(v3, v14, v4, v13, v5, &v12, (uint64_t)v10, (uint64_t)v8);
    swift_release();

    return (uint64_t)v7;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1DC4BA258(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v17 = sub_1DC62A710();
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DC62A89C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF81F0];
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62AA58();
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v18 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BA670(0, &qword_1EDB11B50, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DC62C670;
  sub_1DC62A884();
  sub_1DC62A890();
  v23 = v9;
  sub_1DC4BA75C(&qword_1EDB0E888, 255, v4, MEMORY[0x1E0CF8200]);
  sub_1DC4BA670(0, &qword_1EDB11848, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC4BA714(&qword_1EDB11850, &qword_1EDB11848, v4);
  v19 = v6;
  sub_1DC62B298();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E230);
  result = sub_1DC62AC5C();
  if (!v24)
  {
    __break(1u);
    goto LABEL_6;
  }
  v15 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E8A0);
  result = sub_1DC62AC5C();
  if (!v22)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7FE0];
  sub_1DC4BA670(0, (unint64_t *)&unk_1EDB11B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF7FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DC63A0D0;
  sub_1DC62A704();
  sub_1DC62A6EC();
  sub_1DC62A6F8();
  v21 = v12;
  sub_1DC4BA75C(&qword_1EDB0E688, 255, v11, MEMORY[0x1E0CF7FF0]);
  sub_1DC4BA670(0, &qword_1EDB11838, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1DC4BA714(&qword_1EDB11840, &qword_1EDB11838, v11);
  sub_1DC62B298();
  sub_1DC62A83C();
  swift_allocObject();
  sub_1DC62A830();
  v13 = v18;
  sub_1DC62AA4C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62A650();
  result = sub_1DC62AC50();
  if (result)
  {
    v14 = sub_1DC62A638();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    return v14;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1DC4BA670(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1DC4BA6C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1DC4BA714(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1DC4BA670(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1DF0CC744](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4BA75C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1DF0CC744](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4BA79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t);
  void (*v6)(char *, uint64_t);
  uint64_t v8;

  v0 = sub_1DC62AE84();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC62A650();
  sub_1DC62AE24();
  v4 = *MEMORY[0x1E0DB4A18];
  v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  type metadata accessor for TelemetrySessionManager();
  sub_1DC62AE24();
  sub_1DC62AC20();
  swift_release();
  v5(v3, v4, v0);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1DC62A8B4();
  sub_1DC62AE24();
  sub_1DC62AC20();
  swift_release();
  v5(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v6(v3, v0);
  type metadata accessor for SessionObserver();
  sub_1DC62AE24();
  v5(v3, v4, v0);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1DC62A9E0();
  sub_1DC62AE24();
  swift_release();
  sub_1DC62AA34();
  swift_retain();
  sub_1DC62AE24();
  swift_release();
  swift_release();
  sub_1DC62AB0C();
  sub_1DC62AE24();
  swift_release();
  sub_1DC4C0910();
  sub_1DC62AE24();
  return swift_release();
}

uint64_t sub_1DC4BAAC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  result = sub_1DC62AC5C();
  if (v10)
  {
    type metadata accessor for PrivacyValidationProvider();
    v4 = swift_allocObject();
    v5 = v4 + OBJC_IVAR____TtC15StocksAnalytics25PrivacyValidationProvider_privacyValidation;
    v6 = *MEMORY[0x1E0CF82B0];
    v7 = sub_1DC62A908();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
    sub_1DC4BAC88((uint64_t)v9, v4 + 16);
    __swift_project_boxed_opaque_existential_1(v9, v10);
    sub_1DC62A458();
    swift_allocObject();
    swift_weakInit();
    sub_1DC62ACBC();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    result = sub_1DC4BA75C(&qword_1EDB10EA8, 255, (uint64_t (*)(uint64_t))type metadata accessor for PrivacyValidationProvider, (uint64_t)&unk_1DC639E78);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for PrivacyValidationProvider()
{
  uint64_t result;

  result = qword_1EDB10EB0;
  if (!qword_1EDB10EB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC4BAC88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DC4BACCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_1DC62A92C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62A908();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
  {
    v10 = sub_1DC62A398();
  }
  else if (NFSeedBuild())
  {
    v10 = sub_1DC62A380();
  }
  else
  {
    v10 = sub_1DC62A38C();
  }
  v11 = v10;
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    v20 = v7;
    v21 = v6;
    v22 = v0;
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1DC560D5C(0, v12, 0);
    v13 = v23;
    v14 = v11 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1DC62A920();
      v23 = v13;
      v16 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v13 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1DC560D5C(v15 > 1, v16 + 1, 1);
        v13 = v23;
      }
      v14 += 16;
      *(_QWORD *)(v13 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v13+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v16, v5, v2);
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v6 = v21;
    v1 = v22;
    v7 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v17 = sub_1DC4BAF18(v13);
  swift_bridgeObjectRelease();
  *v9 = v17;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CF82A8], v6);
  v18 = v1 + OBJC_IVAR____TtC15StocksAnalytics25PrivacyValidationProvider_privacyValidation;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 40))(v18, v9, v6);
  return swift_endAccess();
}

uint64_t sub_1DC4BAF18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v2 = sub_1DC62A92C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_1DC4BB038(&qword_1EDB0E898, MEMORY[0x1E0CF82F0]);
  result = sub_1DC62B184();
  v15 = result;
  if (v9)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v13(v6, v11, v2);
      sub_1DC560078((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v15;
  }
  return result;
}

uint64_t sub_1DC4BB038(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1DC62A92C();
    result = MEMORY[0x1DF0CC744](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4BB078(_QWORD *a1)
{
  return UserData.encode(to:)(a1);
}

uint64_t UserData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  sub_1DC4BB308(0, &qword_1EDB11B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - v6;
  v19 = *(unsigned __int8 *)(v1 + 16);
  v18 = *(_QWORD *)(v1 + 24);
  v8 = *(_DWORD *)(v1 + 32);
  v16 = *(_DWORD *)(v1 + 40);
  v17 = v8;
  v9 = *(_QWORD *)(v1 + 56);
  v15[1] = *(_QWORD *)(v1 + 48);
  v15[2] = v9;
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1DC4BB3A8();
  sub_1DC62B5F8();
  v28 = 0;
  sub_1DC62B4B4();
  if (!v2)
  {
    v27 = v19;
    v26 = 1;
    sub_1DC4BB364();
    sub_1DC62B4E4();
    v25 = 2;
    sub_1DC62B4FC();
    v24 = 3;
    sub_1DC62B4F0();
    v23 = 4;
    sub_1DC62B4D8();
    v22 = 5;
    sub_1DC62B4F0();
    v21 = 6;
    sub_1DC62B4D8();
    v20 = 7;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

void sub_1DC4BB308(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4BB3A8();
    v7 = a3(a1, &type metadata for UserData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4BB364()
{
  unint64_t result;

  result = qword_1EDB116D8;
  if (!qword_1EDB116D8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserType, &type metadata for UserType);
    atomic_store(result, (unint64_t *)&qword_1EDB116D8);
  }
  return result;
}

unint64_t sub_1DC4BB3A8()
{
  unint64_t result;

  result = qword_1EDB116A8;
  if (!qword_1EDB116A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63ADC8, &type metadata for UserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB116A8);
  }
  return result;
}

uint64_t sub_1DC4BB3EC(_QWORD *a1)
{
  return SessionData.encode(to:)(a1);
}

uint64_t SessionData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _DWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;

  sub_1DC4BB82C(0, &qword_1EDB119E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - v6;
  v8 = *(_QWORD *)(v1 + 8);
  v25 = *(_QWORD *)(v1 + 16);
  v26 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v23 = *(_QWORD *)(v1 + 32);
  v24 = v9;
  v29 = *(unsigned __int8 *)(v1 + 40);
  v22 = *(unsigned __int8 *)(v1 + 41);
  v10 = *(_QWORD *)(v1 + 56);
  v20 = *(_QWORD *)(v1 + 48);
  v21 = v10;
  v11 = *(_QWORD *)(v1 + 64);
  v18 = *(_QWORD *)(v1 + 72);
  v19 = v11;
  LODWORD(v11) = *(unsigned __int8 *)(v1 + 80);
  v17[0] = *(unsigned __int8 *)(v1 + 81);
  v17[1] = v11;
  v12 = *(_BYTE *)(v1 + 82);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BBAA0();
  v13 = v4;
  sub_1DC62B5F8();
  LOBYTE(v28) = 0;
  v14 = v27;
  sub_1DC62B4F0();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = v29;
  LOBYTE(v28) = 1;
  sub_1DC62B478();
  LOBYTE(v28) = 2;
  sub_1DC62B478();
  v27 = v5;
  LOBYTE(v28) = v15;
  v30 = 3;
  sub_1DC4BBA18();
  sub_1DC62B4E4();
  LOBYTE(v28) = v22;
  v30 = 4;
  sub_1DC4BBA5C();
  sub_1DC62B4E4();
  LOBYTE(v28) = 5;
  sub_1DC62B4B4();
  v28 = v19;
  v30 = 6;
  sub_1DC4BB7E8(0, (unint64_t *)&qword_1EDB118B8);
  sub_1DC4BB888(&qword_1EDB118C0, MEMORY[0x1E0DEDC68], MEMORY[0x1E0DEAF10]);
  sub_1DC62B4E4();
  v28 = v18;
  v30 = 7;
  sub_1DC4BB7E8(0, (unint64_t *)&qword_1EDB118A0);
  sub_1DC4BB950(&qword_1EDB118A8, MEMORY[0x1E0DEDBD0], MEMORY[0x1E0DEAF10]);
  sub_1DC62B4E4();
  LOBYTE(v28) = 8;
  sub_1DC62B484();
  LOBYTE(v28) = 9;
  sub_1DC62B484();
  LOBYTE(v28) = v12;
  v30 = 10;
  sub_1DC4C6514();
  sub_1DC62B490();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

void sub_1DC4BB7E8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1DC62B16C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1DC4BB82C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4BBAA0();
    v7 = a3(a1, &type metadata for SessionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4BB888(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1DC4BB7E8(255, (unint64_t *)&qword_1EDB118B8);
    v8 = a2;
    result = MEMORY[0x1DF0CC744](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4BB8F4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1DC5F6028();
    v8 = a2;
    result = MEMORY[0x1DF0CC744](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4BB950(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1DC4BB7E8(255, (unint64_t *)&qword_1EDB118A0);
    v8 = a2;
    result = MEMORY[0x1DF0CC744](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4BB9BC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1DC5EB268();
    v8 = a2;
    result = MEMORY[0x1DF0CC744](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC4BBA18()
{
  unint64_t result;

  result = qword_1EDB0FD58;
  if (!qword_1EDB0FD58)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ICloudAccountState, &type metadata for ICloudAccountState);
    atomic_store(result, (unint64_t *)&qword_1EDB0FD58);
  }
  return result;
}

unint64_t sub_1DC4BBA5C()
{
  unint64_t result;

  result = qword_1EDB0EE00;
  if (!qword_1EDB0EE00)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StartMethod, &type metadata for StartMethod);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE00);
  }
  return result;
}

unint64_t sub_1DC4BBAA0()
{
  unint64_t result;

  result = qword_1EDB0EDD8;
  if (!qword_1EDB0EDD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62C608, &type metadata for SessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDD8);
  }
  return result;
}

uint64_t sub_1DC4BBAE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v1 = sub_1DC62A3B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  if (qword_1EDB0E238 != -1)
    swift_once();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  sub_1DC62A464();
  sub_1DC62A344();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1DC4BBBF0();
  return sub_1DC62A590() & 1;
}

unint64_t sub_1DC4BBBF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB0E318;
  if (!qword_1EDB0E318)
  {
    v1 = type metadata accessor for TrackerConfiguration();
    result = MEMORY[0x1DF0CC744](&unk_1DC6409C8, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB0E318);
  }
  return result;
}

uint64_t initializeWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeWithCopy for CustomItemData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SessionData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4BBD04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  uint64_t result;
  double v12;
  void *v13;
  id v14;
  void *v15;
  unsigned int v16;
  id v17;
  void *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  char v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v1 = sub_1DC62A1A0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext), *(_QWORD *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext + 24));
  v5 = sub_1DC62A440();
  v7 = v6;
  swift_getObjectType();
  v8 = sub_1DC62A41C();
  sub_1DC4BC150();
  sub_1DC62A188();
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v12 = v10 * 1000.0;
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_ageGroup);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_intValue);

  }
  else
  {
    v16 = 0;
  }
  v17 = objc_msgSend(v13, sel_gender);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_intValue);

  }
  else
  {
    v19 = 0;
  }
  if ((v8 & 1) != 0)
    v20 = 1;
  else
    v20 = 2;
  v21 = sub_1DC62A4F4();
  v23[0] = v5;
  v23[1] = v7;
  v24 = v20;
  v25 = (uint64_t)v12;
  v26 = v16;
  v27 = 1065353216;
  v28 = v19;
  v29 = 1065353216;
  v30 = v21;
  v31 = v22;
  sub_1DC4BC0B4();
  return sub_1DC62A71C();
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1DC4BBF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1DC4BC0F8();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BBD04();
  sub_1DC4BDCC8();
  v5 = sub_1DC62A818();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1DC4BC0B4();
  sub_1DC62A980();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t destroy for UserData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DC4BC0B4()
{
  unint64_t result;

  result = qword_1EDB116C0;
  if (!qword_1EDB116C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserData, &type metadata for UserData);
    atomic_store(result, (unint64_t *)&qword_1EDB116C0);
  }
  return result;
}

void sub_1DC4BC0F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6C8)
  {
    sub_1DC4BC0B4();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6C8);
  }
}

uint64_t sub_1DC4BC150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1DC62A1A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC62A428();
  sub_1DC62A164();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1DC62A158();
}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_WORD *)(a1 + 81) = *(_WORD *)(a2 + 81);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC4BC318@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4BA670(0, &qword_1EDB0E580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DAE680], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_1DC62A3B0();
  sub_1DC62AC5C();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v10 = type metadata accessor for TimestampJitterFactory();
    v11 = swift_allocObject();
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v11 + OBJC_IVAR____TtC15StocksAnalytics22TimestampJitterFactory_appConfiguration, v6, v7);
    a2[3] = v10;
    a2[4] = (uint64_t)&off_1EA49CAB0;
    *a2 = v11;
  }
  return result;
}

uint64_t type metadata accessor for TimestampJitterFactory()
{
  uint64_t result;

  result = qword_1EDB0E358;
  if (!qword_1EDB0E358)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC4BC470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void (*v12)(char *);
  void (*v13)(char *, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *);
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  void (*v28)(char *);
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *);
  unsigned int v39;
  char *v40;
  void (*v41)(char *);
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _QWORD v46[3];
  uint64_t v47;

  v1 = v0;
  v2 = sub_1DC62AECC();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x1E0C80A78](v2);
  v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1DC62AC68();
  v4 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v40 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62AE84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC62AC98();
  sub_1DC62A650();
  sub_1DC62AE24();
  swift_release();
  v10 = *MEMORY[0x1E0DB4A18];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v11(v9, v10, v6);
  v12 = (void (*)(char *))v11;
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  sub_1DC62AC98();
  sub_1DC62A8B4();
  sub_1DC62AE24();
  swift_release();
  sub_1DC62AC20();
  swift_release();
  v45 = *MEMORY[0x1E0DB4A00];
  v12(v9);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v13(v9, v6);
  sub_1DC62AC98();
  sub_1DC62A74C();
  swift_retain();
  v31 = v1;
  sub_1DC62AE24();
  swift_release();
  swift_release();
  v44 = v10;
  ((void (*)(char *, uint64_t, uint64_t))v12)(v9, v10, v6);
  v41 = v12;
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v42 = v13;
  v13(v9, v6);
  sub_1DC62AC98();
  sub_1DC62AE30();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v12)(v9, v10, v6);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v13(v9, v6);
  sub_1DC62ACA4();
  type metadata accessor for FlushAnalyticsBatchesStartupTask();
  sub_1DC62AE24();
  swift_release();
  swift_release();
  sub_1DC62ACB0();
  __swift_project_boxed_opaque_existential_1(v46, v47);
  sub_1DC62AE00();
  v39 = *MEMORY[0x1E0DB36E0];
  v38 = *(void (**)(char *))(v4 + 104);
  v14 = v40;
  v15 = v43;
  v38(v40);
  sub_1DC62AE6C();
  v37 = *(void (**)(char *, uint64_t))(v4 + 8);
  v37(v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  sub_1DC62ACA4();
  swift_retain();
  sub_1DC62AE30();
  swift_release();
  swift_release();
  v16 = v33;
  v17 = v34;
  v18 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, *MEMORY[0x1E0DB5028], v35);
  sub_1DC62AC08();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v18);
  sub_1DC62AC98();
  sub_1DC62AB84();
  sub_1DC62AE24();
  swift_release();
  v19 = v41;
  ((void (*)(char *, _QWORD, uint64_t))v41)(v9, v45, v6);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v20 = v42;
  v42(v9, v6);
  sub_1DC62AC98();
  sub_1DC4BA6C8(0, &qword_1EDB10D88);
  sub_1DC62AE30();
  swift_release();
  swift_release();
  sub_1DC62AC98();
  sub_1DC4BA6C8(0, &qword_1EDB0E230);
  sub_1DC62AE30();
  swift_release();
  v36 = v6;
  ((void (*)(char *, _QWORD, uint64_t))v19)(v9, v44, v6);
  v32 = v9;
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v20(v9, v6);
  sub_1DC62AC98();
  sub_1DC4BA6C8(0, &qword_1EDB110E0);
  sub_1DC62AE30();
  swift_release();
  swift_release();
  sub_1DC62AC98();
  sub_1DC4BA6C8(0, &qword_1EDB0E8A0);
  sub_1DC62AE30();
  swift_release();
  swift_release();
  sub_1DC62ACA4();
  sub_1DC62A9E0();
  sub_1DC62AE24();
  swift_release();
  swift_release();
  sub_1DC62ACA4();
  sub_1DC62AA34();
  swift_retain();
  sub_1DC62AE24();
  swift_release();
  swift_release();
  swift_release();
  sub_1DC62ACA4();
  type metadata accessor for ExternalAnalyticsEventProcessor();
  sub_1DC62AE24();
  swift_release();
  swift_release();
  sub_1DC62ACA4();
  sub_1DC4BA6C8(0, &qword_1EDB0E678);
  sub_1DC62AE30();
  swift_release();
  swift_release();
  sub_1DC62ACA4();
  sub_1DC4BA6C8(0, &qword_1EDB0EC20);
  sub_1DC62AE30();
  swift_release();
  swift_release();
  sub_1DC62ACA4();
  sub_1DC4BA6C8(0, &qword_1EDB0EC18);
  sub_1DC62AE30();
  swift_release();
  swift_release();
  sub_1DC62ACB0();
  __swift_project_boxed_opaque_existential_1(v46, v47);
  sub_1DC4BA6C8(0, &qword_1EDB0E900);
  v21 = v40;
  v22 = v39;
  v23 = v43;
  v24 = (void (*)(char *, uint64_t, uint64_t))v38;
  ((void (*)(char *, _QWORD, uint64_t))v38)(v40, v39, v43);
  sub_1DC62AE78();
  v25 = v37;
  v37(v21, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  sub_1DC62ACB0();
  __swift_project_boxed_opaque_existential_1(v46, v47);
  sub_1DC4BA670(0, &qword_1EDB0E8F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], MEMORY[0x1E0DB3F60]);
  v24(v21, v22, v23);
  sub_1DC62AE6C();
  v25(v21, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  sub_1DC62ACB0();
  __swift_project_boxed_opaque_existential_1(v46, v47);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  v24(v21, v22, v23);
  sub_1DC62AE78();
  v25(v21, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  sub_1DC62AC98();
  type metadata accessor for SessionObserver();
  sub_1DC62AE24();
  swift_release();
  v26 = v32;
  v27 = v36;
  v28 = v41;
  ((void (*)(char *, _QWORD, uint64_t))v41)(v32, v45, v36);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v29 = v42;
  v42(v26, v27);
  sub_1DC62AC98();
  type metadata accessor for SegmentationObserver();
  sub_1DC62AE24();
  swift_release();
  ((void (*)(char *, _QWORD, uint64_t))v28)(v26, v44, v27);
  sub_1DC62AC2C();
  swift_release();
  swift_release();
  v29(v26, v27);
  sub_1DC62ACA4();
  sub_1DC62AB0C();
  sub_1DC62AE24();
  swift_release();
  swift_release();
  sub_1DC62ACA4();
  sub_1DC4C0910();
  sub_1DC62AE24();
  swift_release();
  return swift_release();
}

uint64_t sub_1DC4BCFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1DC4BD4D8();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BD164();
  sub_1DC4BDCC8();
  v5 = sub_1DC62A818();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E0CF8168], v5);
  sub_1DC4BD318();
  sub_1DC62A980();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t destroy for DeviceData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC4BD164()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  sub_1DC4BD35C();
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_currentDevice);
  v2 = objc_msgSend(v1, sel_systemName);

  sub_1DC62B0E8();
  objc_msgSend((id)objc_opt_self(), sel_isInternalBuild);
  v3 = objc_msgSend(v0, sel_currentDevice);
  v4 = objc_msgSend(v3, sel_systemVersion);

  sub_1DC62B0E8();
  v5 = objc_msgSend(v0, sel_currentDevice);
  v6 = objc_msgSend(v5, sel_sa_buildVersion);

  if (v6)
  {
    sub_1DC62B0E8();

    sub_1DC4BD318();
    sub_1DC62A71C();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1DC4BD318()
{
  unint64_t result;

  result = qword_1EDB0ECD8;
  if (!qword_1EDB0ECD8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DeviceData, &type metadata for DeviceData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECD8);
  }
  return result;
}

uint64_t sub_1DC4BD35C()
{
  size_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  size_t v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v4[0] = 0;
  sysctlbyname("hw.machine", 0, v4, 0, 0);
  v0 = v4[0];
  if ((v4[0] & 0x8000000000000000) != 0)
  {
    result = sub_1DC62B370();
    __break(1u);
  }
  else
  {
    if (v4[0])
    {
      v1 = sub_1DC62B160();
      *(_QWORD *)(v1 + 16) = v0;
      bzero((void *)(v1 + 32), v0);
    }
    else
    {
      v1 = MEMORY[0x1E0DEE9D8];
    }
    sysctlbyname("hw.machine", (void *)(v1 + 32), v4, 0, 0);
    v2 = sub_1DC4BD490(v1);
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

uint64_t sub_1DC4BD490(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = result;
    v3 = *(unsigned __int8 *)(result + 32);
    result += 32;
    if (!v3)
      return sub_1DC62B100();
    v4 = 0;
    v5 = v1 - 1;
    v6 = v2 + 33;
    while (v5 != v4)
    {
      if (!*(unsigned __int8 *)(v6 + v4++))
        return sub_1DC62B100();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DC4BD4D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6E0)
  {
    sub_1DC4BD318();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6E0);
  }
}

uint64_t initializeWithCopy for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1DC4BD5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  unint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  sub_1DC4B2D78(0, &qword_1EDB0E690, (void (*)(void))sub_1DC4C009C);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v26 - v4;
  v6 = v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_window;
  swift_beginAccess();
  v7 = (void *)MEMORY[0x1DF0CC840](v6);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_windowScene);

    if (v9)
    {
      v10 = objc_msgSend(v9, sel_interfaceOrientation);

      v11 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
      v12 = objc_msgSend(v11, sel_orientation);
      v33 = v3;
      v13 = (unint64_t)v12;

      if (v13 >= 7)
        v14 = 0;
      else
        v14 = v13;
      if ((unint64_t)v10 >= 5)
        v15 = 0;
      else
        v15 = 0x304020100uLL >> (8 * v10);
      v29 = v15;
      v30 = v14;
      v32 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager);
      sub_1DC62A8A8();
      v34 = v14;
      v35 = v15;
      sub_1DC4BA670(0, (unint64_t *)&qword_1EDB11B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v28 = v16;
      v17 = sub_1DC62A818();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned __int8 *)(v18 + 80);
      v27 = v5;
      v20 = (v19 + 32) & ~v19;
      v21 = swift_allocObject();
      v26 = xmmword_1DC62C660;
      *(_OWORD *)(v21 + 16) = xmmword_1DC62C660;
      v22 = *MEMORY[0x1E0CF8168];
      v31 = v2;
      v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104);
      v23(v21 + v20, v22, v17);
      sub_1DC4C009C();
      sub_1DC62AB60();
      swift_bridgeObjectRelease();
      swift_release();
      v34 = v30;
      v35 = v29;
      v24 = v27;
      sub_1DC62A71C();
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v26;
      v23(v25 + v20, v22, v17);
      sub_1DC62A86C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v31);
    }
  }
}

uint64_t type metadata accessor for SessionObserver()
{
  return objc_opt_self();
}

id sub_1DC4BD8EC()
{
  char *v0;
  void *v1;
  id result;
  id v3;
  char *v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext];
  result = objc_msgSend(v1, sel_bundleSubscriptionManager);
  if (result)
  {
    v3 = objc_msgSend(result, sel_cachedSubscription);
    swift_unknownObjectRelease();
    _s15StocksAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(v3);

    result = objc_msgSend(v1, sel_bundleSubscriptionManager);
    if (result)
    {
      objc_msgSend(result, sel_addObserver_, v0);
      swift_unknownObjectRelease();
      sub_1DC62AC8C();
      *(_QWORD *)(swift_allocObject() + 16) = v0;
      v4 = v0;
      sub_1DC62AC80();
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s15StocksAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(unint64_t, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;

  sub_1DC4BDEE4();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BDD60(a1, (uint64_t)&v36);
  v5 = v36;
  v6 = v37;
  v29 = v37;
  v30 = v36;
  v7 = v38;
  v28 = v38;
  v8 = v39;
  v9 = v40;
  v26 = v40;
  v27 = v39;
  v10 = v41;
  v11 = v42;
  v24 = v42;
  v25 = v41;
  LOBYTE(a1) = v43;
  v31 = v43;
  v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager);
  sub_1DC62A8A8();
  v36 = v5;
  v37 = v6;
  v38 = v7;
  v39 = v8;
  v40 = v9;
  v41 = v10;
  v42 = v11;
  v43 = a1;
  sub_1DC4BDCC8();
  v23 = v12;
  v13 = sub_1DC62A818();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  v22 = xmmword_1DC62C660;
  *(_OWORD *)(v16 + 16) = xmmword_1DC62C660;
  v17 = *MEMORY[0x1E0CF8168];
  v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 104);
  v18(v16 + v15, v17, v13);
  sub_1DC4BDD1C();
  sub_1DC62AB60();
  swift_bridgeObjectRelease();
  swift_release();
  v36 = v30;
  v37 = v29;
  v38 = v28;
  v39 = v27;
  v40 = v26;
  v41 = v25;
  v42 = v24;
  v43 = v31;
  v19 = v32;
  sub_1DC62A71C();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v22;
  v18(v20 + v15, v17, v13);
  sub_1DC62A86C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v19, v35);
}

uint64_t destroy for UserBundleSubscriptionContextData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void sub_1DC4BDCC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11B40)
  {
    sub_1DC62A818();
    v0 = sub_1DC62B514();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11B40);
  }
}

unint64_t sub_1DC4BDD1C()
{
  unint64_t result;

  result = qword_1EDB111B8;
  if (!qword_1EDB111B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserBundleSubscriptionContextData, &type metadata for UserBundleSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1EDB111B8);
  }
  return result;
}

id sub_1DC4BDD60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  char v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id result;

  v4 = objc_msgSend(a1, sel_subscriptionState);
  if ((unint64_t)v4 >= 4)
  {
    result = (id)sub_1DC62B37C();
    __break(1u);
  }
  else
  {
    v5 = (char)v4;
    v6 = objc_msgSend(a1, sel_isPurchaser);
    v7 = objc_msgSend(a1, sel_isAmplifyUser);
    v8 = objc_msgSend(a1, sel_bundlePurchaseID);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1DC62B0E8();
      v12 = v11;

    }
    else
    {
      v10 = 0;
      v12 = 0;
    }
    v13 = objc_msgSend(a1, sel_servicesBundlePurchaseID);
    if (v13)
    {
      v14 = v13;
      v15 = sub_1DC62B0E8();
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    result = objc_msgSend(a1, sel_isPaidBundleViaOfferActivated);
    *(_BYTE *)a2 = 0x3030201u >> (8 * v5);
    *(_BYTE *)(a2 + 1) = v6;
    *(_BYTE *)(a2 + 2) = v7;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_BYTE *)(a2 + 40) = (_BYTE)result;
  }
  return result;
}

void sub_1DC4BDEE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6C0)
  {
    sub_1DC4BDD1C();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6C0);
  }
}

uint64_t sub_1DC4BDF3C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v12)(char *, char *, uint64_t);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4BA670(0, &qword_1EDB0E6D8, (uint64_t (*)(uint64_t))sub_1DC4BE0D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - v1;
  sub_1DC4BE0D0();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - v9;
  sub_1DC4BE128((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    return sub_1DC4BE478((uint64_t)v2);
  v12 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v12(v10, v2, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = swift_allocObject();
  v12((char *)(v14 + v13), v8, v4);
  sub_1DC62A854();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

void sub_1DC4BE0D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6D0)
  {
    sub_1DC4BED40();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6D0);
  }
}

uint64_t sub_1DC4BE128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[6];
  unint64_t v7;

  swift_getObjectType();
  if (qword_1EDB0E5E0 != -1)
    swift_once();
  sub_1DC4B9C38();
  sub_1DC62A578();
  v2 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v2 = *(_QWORD *)v6 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1DC4BED40();
    sub_1DC62A71C();
    sub_1DC4BE0D0();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);
  }
  else
  {
    sub_1DC4BE0D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
    return swift_bridgeObjectRelease();
  }
}

uint64_t _s15StocksAnalytics15SessionObserverC21identificationService_15didChangeUserIDy0A4Core014IdentificationF4Type_p_SStF_0()
{
  void *v0;
  char *v1;

  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v1 = v0;
  sub_1DC62A854();
  swift_release();
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext], *(_QWORD *)&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext + 24]);
  sub_1DC62A44C();
  sub_1DC62A8A8();
  sub_1DC4BE434();
  sub_1DC62AB60();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DC4BE354(uint64_t a1)
{
  _s11UserContextVwxx(a1);
  return a1;
}

uint64_t _s11UserContextVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1DC4BE3AC(uint64_t a1, uint64_t a2)
{
  _s11UserContextVwcp(a2, a1);
  return a2;
}

uint64_t _s11UserContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  return a1;
}

unint64_t sub_1DC4BE434()
{
  unint64_t result;

  result = qword_1EDB0ECA0;
  if (!qword_1EDB0ECA0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdUserData, &type metadata for AdUserData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECA0);
  }
  return result;
}

uint64_t sub_1DC4BE478(uint64_t a1)
{
  uint64_t v2;

  sub_1DC4BA670(0, &qword_1EDB0E6D8, (uint64_t (*)(uint64_t))sub_1DC4BE0D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1DC4BE51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  sub_1DC4BE728();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62AB00();
  v7 = v6;
  v8 = sub_1DC62AAE8();
  v15[0] = v5;
  v15[1] = v7;
  v15[2] = v8;
  v15[3] = v9;
  sub_1DC4BE6E4();
  sub_1DC62A71C();
  sub_1DC4BDCC8();
  v10 = sub_1DC62A818();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E0CF8168], v10);
  sub_1DC62A980();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t destroy for NewsArticleData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

unint64_t sub_1DC4BE6E4()
{
  unint64_t result;

  result = qword_1EDB11618;
  if (!qword_1EDB11618)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AppData, &type metadata for AppData);
    atomic_store(result, (unint64_t *)&qword_1EDB11618);
  }
  return result;
}

void sub_1DC4BE728()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6F0)
  {
    sub_1DC4BE6E4();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6F0);
  }
}

uint64_t sub_1DC4BE784(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v7, *a4, v6);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DC4BE8BC()
{
  uint64_t v0;

  return sub_1DC5CA244(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1DC4BE8C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DC4BE8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC4B2B78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4BE928(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

_QWORD *sub_1DC4BE974(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1DC4FA7A8();
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1DC4FA5A4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DC4FA7A0();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

void sub_1DC4BEA54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11B60)
  {
    sub_1DC4C08BC();
    v0 = sub_1DC62B514();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11B60);
  }
}

uint64_t sub_1DC4BEAA8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DC4B5944(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

void sub_1DC4BEAC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E540)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1DC62B310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E540);
  }
}

void sub_1DC4BEB24(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1DC4BEB24(a1, &qword_1EDB0E538);
}

BOOL sub_1DC4BEB7C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = a1 + 5;
  v6 = a2 + 5;
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

BOOL sub_1DC4BEBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  int *v5;
  int *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (int *)(a1 + 36);
  v6 = (int *)(a2 + 36);
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

unint64_t sub_1DC4BEC64()
{
  unint64_t result;

  result = qword_1EDB11818;
  if (!qword_1EDB11818)
  {
    result = MEMORY[0x1DF0CC744](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDB11818);
  }
  return result;
}

ValueMetadata *type metadata accessor for EventPath()
{
  return &type metadata for EventPath;
}

unint64_t sub_1DC4BECB8()
{
  unint64_t result;

  result = qword_1EDB11768;
  if (!qword_1EDB11768)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DebugData, &type metadata for DebugData);
    atomic_store(result, (unint64_t *)&qword_1EDB11768);
  }
  return result;
}

unint64_t sub_1DC4BECFC()
{
  unint64_t result;

  result = qword_1EDB11760;
  if (!qword_1EDB11760)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DebugData, &type metadata for DebugData);
    atomic_store(result, (unint64_t *)&qword_1EDB11760);
  }
  return result;
}

unint64_t sub_1DC4BED40()
{
  unint64_t result;

  result = qword_1EDB11758;
  if (!qword_1EDB11758)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DebugData, &type metadata for DebugData);
    atomic_store(result, (unint64_t *)&qword_1EDB11758);
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewType()
{
  return &type metadata for ViewType;
}

ValueMetadata *type metadata accessor for ViewData()
{
  return &type metadata for ViewData;
}

unint64_t sub_1DC4BEDAC()
{
  unint64_t result;

  result = qword_1EDB0E480;
  if (!qword_1EDB0E480)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewData, &type metadata for ViewData);
    atomic_store(result, (unint64_t *)&qword_1EDB0E480);
  }
  return result;
}

unint64_t sub_1DC4BEDF0()
{
  unint64_t result;

  result = qword_1EDB11700;
  if (!qword_1EDB11700)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewData, &type metadata for ViewData);
    atomic_store(result, (unint64_t *)&qword_1EDB11700);
  }
  return result;
}

StocksAnalytics::ViewData __swiftcall ViewData.init(viewSessionID:viewType:viewAction:)(Swift::String viewSessionID, StocksAnalytics::ViewType viewType, StocksAnalytics::ViewAction viewAction)
{
  uint64_t v3;
  char v4;
  char v5;
  StocksAnalytics::ViewData result;

  v4 = *(_BYTE *)viewType;
  v5 = *(_BYTE *)viewAction;
  *(Swift::String *)v3 = viewSessionID;
  *(_BYTE *)(v3 + 16) = v4;
  *(_BYTE *)(v3 + 17) = v5;
  result.viewSessionID = viewSessionID;
  result.viewType = viewType;
  return result;
}

unint64_t sub_1DC4BEE54()
{
  unint64_t result;

  result = qword_1EDB116D0;
  if (!qword_1EDB116D0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserData, &type metadata for UserData);
    atomic_store(result, (unint64_t *)&qword_1EDB116D0);
  }
  return result;
}

unint64_t sub_1DC4BEE98()
{
  unint64_t result;

  result = qword_1EDB116C8;
  if (!qword_1EDB116C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserData, &type metadata for UserData);
    atomic_store(result, (unint64_t *)&qword_1EDB116C8);
  }
  return result;
}

unint64_t sub_1DC4BEEE4()
{
  unint64_t result;

  result = qword_1EDB116B8;
  if (!qword_1EDB116B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63AD10, &type metadata for UserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB116B8);
  }
  return result;
}

unint64_t sub_1DC4BEF28()
{
  unint64_t result;

  result = qword_1EDB116B0;
  if (!qword_1EDB116B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63AD38, &type metadata for UserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB116B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedType()
{
  return &type metadata for FeedType;
}

ValueMetadata *type metadata accessor for FeedData()
{
  return &type metadata for FeedData;
}

unint64_t sub_1DC4BEF94()
{
  unint64_t result;

  result = qword_1EDB11688;
  if (!qword_1EDB11688)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedData, &type metadata for FeedData);
    atomic_store(result, (unint64_t *)&qword_1EDB11688);
  }
  return result;
}

unint64_t sub_1DC4BEFD8()
{
  unint64_t result;

  result = qword_1EDB11680;
  if (!qword_1EDB11680)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedData, &type metadata for FeedData);
    atomic_store(result, (unint64_t *)&qword_1EDB11680);
  }
  return result;
}

StocksAnalytics::FeedData __swiftcall FeedData.init(feedType:feedID:)(StocksAnalytics::FeedType feedType, Swift::String feedID)
{
  uint64_t v2;
  StocksAnalytics::FeedData result;

  *(_BYTE *)v2 = *(_BYTE *)feedType;
  *(Swift::String *)(v2 + 8) = feedID;
  result.feedID = feedID;
  result.feedType = feedType;
  return result;
}

uint64_t sub_1DC4BF034()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1DC4BF040()
{
  unint64_t result;

  result = qword_1EDB11628;
  if (!qword_1EDB11628)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AppData, &type metadata for AppData);
    atomic_store(result, (unint64_t *)&qword_1EDB11628);
  }
  return result;
}

unint64_t sub_1DC4BF084()
{
  unint64_t result;

  result = qword_1EDB11620;
  if (!qword_1EDB11620)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AppData, &type metadata for AppData);
    atomic_store(result, (unint64_t *)&qword_1EDB11620);
  }
  return result;
}

unint64_t sub_1DC4BF0D0()
{
  unint64_t result;

  result = qword_1EDB0E3D0;
  if (!qword_1EDB0E3D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648AF4, &type metadata for AppData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E3D0);
  }
  return result;
}

unint64_t sub_1DC4BF114()
{
  unint64_t result;

  result = qword_1EDB11610;
  if (!qword_1EDB11610)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC648B1C, &type metadata for AppData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11610);
  }
  return result;
}

uint64_t type metadata accessor for RollingTimestampConfigurationProvider()
{
  uint64_t result;

  result = qword_1EDB0E508;
  if (!qword_1EDB0E508)
    return swift_getSingletonMetadata();
  return result;
}

double sub_1DC4BF19C(uint64_t a1)
{
  return sub_1DC4B7F80(a1);
}

unint64_t sub_1DC4BF1BC()
{
  unint64_t result;

  result = qword_1EDB111C8;
  if (!qword_1EDB111C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserBundleSubscriptionContextData, &type metadata for UserBundleSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1EDB111C8);
  }
  return result;
}

unint64_t sub_1DC4BF200()
{
  unint64_t result;

  result = qword_1EDB111C0;
  if (!qword_1EDB111C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserBundleSubscriptionContextData, &type metadata for UserBundleSubscriptionContextData);
    atomic_store(result, (unint64_t *)&qword_1EDB111C0);
  }
  return result;
}

unint64_t sub_1DC4BF24C()
{
  unint64_t result;

  result = qword_1EDB0E3C8;
  if (!qword_1EDB0E3C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636E10, &type metadata for UserBundleSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E3C8);
  }
  return result;
}

unint64_t sub_1DC4BF290()
{
  unint64_t result;

  result = qword_1EDB111A8;
  if (!qword_1EDB111A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636E38, &type metadata for UserBundleSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB111A8);
  }
  return result;
}

uint64_t dispatch thunk of TimestampJitterFactoryType.makePrevailingJitter()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_1DC4BF2E4()
{
  unint64_t result;

  result = qword_1EDB10DA8;
  if (!qword_1EDB10DA8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistSummaryItemData, &type metadata for WatchlistSummaryItemData);
    atomic_store(result, (unint64_t *)&qword_1EDB10DA8);
  }
  return result;
}

unint64_t sub_1DC4BF330()
{
  unint64_t result;

  result = qword_1EDB10DA0;
  if (!qword_1EDB10DA0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6318F4, &type metadata for WatchlistSummaryItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10DA0);
  }
  return result;
}

unint64_t sub_1DC4BF374()
{
  unint64_t result;

  result = qword_1EDB10D98;
  if (!qword_1EDB10D98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63191C, &type metadata for WatchlistSummaryItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10D98);
  }
  return result;
}

uint64_t sub_1DC4BF3B8()
{
  return sub_1DC62AD34();
}

uint64_t sub_1DC4BF3C0()
{
  return sub_1DC62AD40();
}

uint64_t sub_1DC4BF3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics22TimestampJitterFactory_appConfiguration;
  v2 = sub_1DC62A3B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_1DC4BF418()
{
  unint64_t result;

  result = qword_1EDB10A00;
  if (!qword_1EDB10A00)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ContentEnvironmentData, &type metadata for ContentEnvironmentData);
    atomic_store(result, (unint64_t *)&qword_1EDB10A00);
  }
  return result;
}

unint64_t sub_1DC4BF45C()
{
  unint64_t result;

  result = qword_1EDB109F8;
  if (!qword_1EDB109F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ContentEnvironmentData, &type metadata for ContentEnvironmentData);
    atomic_store(result, (unint64_t *)&qword_1EDB109F8);
  }
  return result;
}

unint64_t sub_1DC4BF4A8()
{
  unint64_t result;

  result = qword_1EDB109E8;
  if (!qword_1EDB109E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6460B4, &type metadata for ContentEnvironmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB109E8);
  }
  return result;
}

unint64_t sub_1DC4BF4EC()
{
  unint64_t result;

  result = qword_1EDB109E0;
  if (!qword_1EDB109E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6460DC, &type metadata for ContentEnvironmentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB109E0);
  }
  return result;
}

uint64_t type metadata accessor for ArticleEngagementEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB108B8);
}

ValueMetadata *type metadata accessor for WatchedSymbolListData()
{
  return &type metadata for WatchedSymbolListData;
}

unint64_t sub_1DC4BF55C()
{
  unint64_t result;

  result = qword_1EDB10868;
  if (!qword_1EDB10868)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchedSymbolListData, &type metadata for WatchedSymbolListData);
    atomic_store(result, (unint64_t *)&qword_1EDB10868);
  }
  return result;
}

unint64_t sub_1DC4BF5A0()
{
  unint64_t result;

  result = qword_1EDB10860;
  if (!qword_1EDB10860)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchedSymbolListData, &type metadata for WatchedSymbolListData);
    atomic_store(result, (unint64_t *)&qword_1EDB10860);
  }
  return result;
}

unint64_t sub_1DC4BF5E4()
{
  unint64_t result;

  result = qword_1EDB10858;
  if (!qword_1EDB10858)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchedSymbolListData, &type metadata for WatchedSymbolListData);
    atomic_store(result, (unint64_t *)&qword_1EDB10858);
  }
  return result;
}

unint64_t sub_1DC4BF630()
{
  unint64_t result;

  result = qword_1EDB10850;
  if (!qword_1EDB10850)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6420C4, &type metadata for WatchedSymbolListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10850);
  }
  return result;
}

unint64_t sub_1DC4BF674()
{
  unint64_t result;

  result = qword_1EDB10848;
  if (!qword_1EDB10848)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6420EC, &type metadata for WatchedSymbolListData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10848);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSessionResumeEvent()
{
  return &type metadata for AppSessionResumeEvent;
}

uint64_t sub_1DC4BF6D0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB10810, MEMORY[0x1E0CF8380]);
}

uint64_t sub_1DC4BF6EC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB107F0, MEMORY[0x1E0CF8078]);
}

uint64_t sub_1DC4BF70C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10828, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10810, a1);
}

uint64_t sub_1DC4BF730@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10808, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB107F0, a1);
}

ValueMetadata *type metadata accessor for WatchlistSummaryData()
{
  return &type metadata for WatchlistSummaryData;
}

unint64_t sub_1DC4BF764()
{
  unint64_t result;

  result = qword_1EDB10738;
  if (!qword_1EDB10738)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistSummaryData, &type metadata for WatchlistSummaryData);
    atomic_store(result, (unint64_t *)&qword_1EDB10738);
  }
  return result;
}

unint64_t sub_1DC4BF7A8()
{
  unint64_t result;

  result = qword_1EDB10730;
  if (!qword_1EDB10730)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistSummaryData, &type metadata for WatchlistSummaryData);
    atomic_store(result, (unint64_t *)&qword_1EDB10730);
  }
  return result;
}

unint64_t sub_1DC4BF7EC()
{
  unint64_t result;

  result = qword_1EDB10728;
  if (!qword_1EDB10728)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistSummaryData, &type metadata for WatchlistSummaryData);
    atomic_store(result, (unint64_t *)&qword_1EDB10728);
  }
  return result;
}

unint64_t sub_1DC4BF838()
{
  unint64_t result;

  result = qword_1EDB10720;
  if (!qword_1EDB10720)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638260, &type metadata for WatchlistSummaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10720);
  }
  return result;
}

unint64_t sub_1DC4BF87C()
{
  unint64_t result;

  result = qword_1EDB10718;
  if (!qword_1EDB10718)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638288, &type metadata for WatchlistSummaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10718);
  }
  return result;
}

unint64_t sub_1DC4BF8C4()
{
  unint64_t result;

  result = qword_1EDB104C8;
  if (!qword_1EDB104C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriptionData, &type metadata for PaidSubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1EDB104C8);
  }
  return result;
}

unint64_t sub_1DC4BF908()
{
  unint64_t result;

  result = qword_1EDB104C0;
  if (!qword_1EDB104C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriptionData, &type metadata for PaidSubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1EDB104C0);
  }
  return result;
}

unint64_t sub_1DC4BF94C()
{
  unint64_t result;

  result = qword_1EDB104B8;
  if (!qword_1EDB104B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriptionData, &type metadata for PaidSubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1EDB104B8);
  }
  return result;
}

uint64_t type metadata accessor for AppSessionStartEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB102D0);
}

uint64_t type metadata accessor for AppSessionStartEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB10230);
}

uint64_t sub_1DC4BF9BC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB10200, MEMORY[0x1E0CF8380]);
}

uint64_t sub_1DC4BF9D8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB101E8, MEMORY[0x1E0CF8078]);
}

uint64_t sub_1DC4BF9F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E308, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10200, a1);
}

uint64_t sub_1DC4BFA18@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E300, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB101E8, a1);
}

unint64_t sub_1DC4BFA3C()
{
  unint64_t result;

  result = qword_1EDB101A8;
  if (!qword_1EDB101A8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WebSubscriptionData, &type metadata for WebSubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1EDB101A8);
  }
  return result;
}

unint64_t sub_1DC4BFA80()
{
  unint64_t result;

  result = qword_1EDB101A0;
  if (!qword_1EDB101A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WebSubscriptionData, &type metadata for WebSubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1EDB101A0);
  }
  return result;
}

unint64_t sub_1DC4BFAC4()
{
  unint64_t result;

  result = qword_1EDB10198;
  if (!qword_1EDB10198)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WebSubscriptionData, &type metadata for WebSubscriptionData);
    atomic_store(result, (unint64_t *)&qword_1EDB10198);
  }
  return result;
}

unint64_t sub_1DC4BFB10()
{
  unint64_t result;

  result = qword_1EDB0E2F0;
  if (!qword_1EDB0E2F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646AA0, &type metadata for WebSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E2F0);
  }
  return result;
}

unint64_t sub_1DC4BFB54()
{
  unint64_t result;

  result = qword_1EDB10190;
  if (!qword_1EDB10190)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC646AC8, &type metadata for WebSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10190);
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionObserverKind()
{
  return &type metadata for SessionObserverKind;
}

uint64_t type metadata accessor for AppSessionEndEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0FB98);
}

uint64_t type metadata accessor for AppSessionEndEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0FAF0);
}

uint64_t sub_1DC4BFBD4()
{
  return sub_1DC4BA79C();
}

uint64_t sub_1DC4BFBDC(_QWORD *a1)
{
  return sub_1DC4B86DC(a1);
}

uint64_t sub_1DC4BFBE4(uint64_t a1, _QWORD *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for TelemetrySessionManager();
  sub_1DC62AC50();
  return swift_release();
}

uint64_t type metadata accessor for WatchSymbolEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0F840);
}

uint64_t sub_1DC4BFC44(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SegmentationObserver();
  result = sub_1DC62AC50();
  if (result)
    return swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DC4BFC98(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  result = sub_1DC62AC44();
  if (v4 == 2)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((v4 & 1) != 0)
    return result;
  sub_1DC62A848();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC62A9E0();
  result = sub_1DC62AC50();
  if (!result)
    goto LABEL_10;
  sub_1DC62A8FC();
  swift_release();
  swift_release();
  sub_1DC62A848();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC62AA34();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1DC62A8FC();
  swift_release();
  swift_release();
  sub_1DC62A848();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ExternalAnalyticsEventProcessor();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1DC4BA75C(&qword_1EDB0EAA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for ExternalAnalyticsEventProcessor, (uint64_t)&protocol conformance descriptor for ExternalAnalyticsEventProcessor);
  sub_1DC62A8FC();
  swift_release();
  swift_release();
  sub_1DC62A848();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0EC30);
  result = sub_1DC62AC5C();
  if (!v4)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_1DC62A8FC();
  swift_unknownObjectRelease();
  return swift_release();
}

void sub_1DC4BFEF8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DC4BFF04(_QWORD *a1)
{
  return sub_1DC4B8CC0(a1);
}

uint64_t sub_1DC4BFF0C()
{
  return sub_1DC4BC470();
}

void sub_1DC4BFF2C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DC4B3890(a1, a2, v2);
}

uint64_t sub_1DC4BFF34()
{
  swift_getObjectType();
  return sub_1DC62AD34();
}

uint64_t sub_1DC4BFF5C()
{
  swift_getObjectType();
  return sub_1DC62AD34();
}

uint64_t sub_1DC4BFF84()
{
  swift_getObjectType();
  return sub_1DC62AD40();
}

ValueMetadata *type metadata accessor for SessionObserver.UserContext()
{
  return &type metadata for SessionObserver.UserContext;
}

ValueMetadata *type metadata accessor for OrientationData()
{
  return &type metadata for OrientationData;
}

unint64_t sub_1DC4C0014()
{
  unint64_t result;

  result = qword_1EDB0F440;
  if (!qword_1EDB0F440)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OrientationData, &type metadata for OrientationData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F440);
  }
  return result;
}

unint64_t sub_1DC4C0058()
{
  unint64_t result;

  result = qword_1EDB0F438;
  if (!qword_1EDB0F438)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OrientationData, &type metadata for OrientationData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F438);
  }
  return result;
}

unint64_t sub_1DC4C009C()
{
  unint64_t result;

  result = qword_1EDB0F430;
  if (!qword_1EDB0F430)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OrientationData, &type metadata for OrientationData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F430);
  }
  return result;
}

unint64_t sub_1DC4C00E8()
{
  unint64_t result;

  result = qword_1EDB0F428;
  if (!qword_1EDB0F428)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635BFC, &type metadata for OrientationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F428);
  }
  return result;
}

unint64_t sub_1DC4C012C()
{
  unint64_t result;

  result = qword_1EDB0F420;
  if (!qword_1EDB0F420)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635C24, &type metadata for OrientationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F420);
  }
  return result;
}

uint64_t DynamicEndpoint.init(appConfigurationManager:)(__int128 *a1)
{
  uint64_t v1;

  sub_1DC4C0AB0(a1, v1 + 16);
  return v1;
}

ValueMetadata *type metadata accessor for SymbolPerfData()
{
  return &type metadata for SymbolPerfData;
}

unint64_t sub_1DC4C01A4()
{
  unint64_t result;

  result = qword_1EDB0F1C8;
  if (!qword_1EDB0F1C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolPerfData, &type metadata for SymbolPerfData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F1C8);
  }
  return result;
}

unint64_t sub_1DC4C01E8()
{
  unint64_t result;

  result = qword_1EDB0F1C0;
  if (!qword_1EDB0F1C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolPerfData, &type metadata for SymbolPerfData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F1C0);
  }
  return result;
}

StocksAnalytics::SymbolPerfData __swiftcall SymbolPerfData.init(perfType:)(StocksAnalytics::SymbolPerfData perfType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)perfType.perfType;
  return perfType;
}

uint64_t type metadata accessor for FeedViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, (uint64_t *)&unk_1EDB0E2B0);
}

unint64_t sub_1DC4C0254()
{
  unint64_t result;

  result = qword_1EDB0EE38;
  if (!qword_1EDB0EE38)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewEndData, &type metadata for ViewEndData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE38);
  }
  return result;
}

unint64_t sub_1DC4C0298()
{
  unint64_t result;

  result = qword_1EDB0EE30;
  if (!qword_1EDB0EE30)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewEndData, &type metadata for ViewEndData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE30);
  }
  return result;
}

unint64_t sub_1DC4C02DC()
{
  unint64_t result;

  result = qword_1EDB0E298;
  if (!qword_1EDB0E298)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SessionData, &type metadata for SessionData);
    atomic_store(result, (unint64_t *)&qword_1EDB0E298);
  }
  return result;
}

unint64_t sub_1DC4C0320()
{
  unint64_t result;

  result = qword_1EDB0EDF8;
  if (!qword_1EDB0EDF8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SessionData, &type metadata for SessionData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDF8);
  }
  return result;
}

unint64_t sub_1DC4C0364()
{
  unint64_t result;

  result = qword_1EDB0EDF0;
  if (!qword_1EDB0EDF0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SessionData, &type metadata for SessionData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDF0);
  }
  return result;
}

unint64_t sub_1DC4C03B0()
{
  unint64_t result;

  result = qword_1EDB0EDE8;
  if (!qword_1EDB0EDE8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62C550, &type metadata for SessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDE8);
  }
  return result;
}

unint64_t sub_1DC4C03F4()
{
  unint64_t result;

  result = qword_1EDB0EDE0;
  if (!qword_1EDB0EDE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62C578, &type metadata for SessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ViewAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1DC4C048C + 4 * byte_1DC63C252[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1DC4C04C0 + 4 * byte_1DC63C24D[v4]))();
}

uint64_t sub_1DC4C04C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C04C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4C04D0);
  return result;
}

uint64_t sub_1DC4C04DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4C04E4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1DC4C04E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C04F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for NewsArticleData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for ViewAction()
{
  return &type metadata for ViewAction;
}

ValueMetadata *type metadata accessor for SymbolData()
{
  return &type metadata for SymbolData;
}

unint64_t sub_1DC4C05AC()
{
  unint64_t result;

  result = qword_1EDB0ECE8;
  if (!qword_1EDB0ECE8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DeviceData, &type metadata for DeviceData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECE8);
  }
  return result;
}

unint64_t sub_1DC4C05F0()
{
  unint64_t result;

  result = qword_1EDB0ECE0;
  if (!qword_1EDB0ECE0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DeviceData, &type metadata for DeviceData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECE0);
  }
  return result;
}

unint64_t sub_1DC4C063C()
{
  unint64_t result;

  result = qword_1EDB0E290;
  if (!qword_1EDB0E290)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C448, &type metadata for DeviceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E290);
  }
  return result;
}

unint64_t sub_1DC4C0680()
{
  unint64_t result;

  result = qword_1EDB0ECD0;
  if (!qword_1EDB0ECD0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C470, &type metadata for DeviceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECD0);
  }
  return result;
}

unint64_t sub_1DC4C06CC()
{
  unint64_t result;

  result = qword_1EDB0ECB0;
  if (!qword_1EDB0ECB0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdUserData, &type metadata for AdUserData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECB0);
  }
  return result;
}

unint64_t sub_1DC4C0710()
{
  unint64_t result;

  result = qword_1EDB0ECA8;
  if (!qword_1EDB0ECA8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdUserData, &type metadata for AdUserData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AdFeedData()
{
  return &type metadata for AdFeedData;
}

unint64_t sub_1DC4C076C()
{
  unint64_t result;

  result = qword_1EDB0E288;
  if (!qword_1EDB0E288)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdFeedData, &type metadata for AdFeedData);
    atomic_store(result, (unint64_t *)&qword_1EDB0E288);
  }
  return result;
}

unint64_t sub_1DC4C07B0()
{
  unint64_t result;

  result = qword_1EDB0EC70;
  if (!qword_1EDB0EC70)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdFeedData, &type metadata for AdFeedData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC70);
  }
  return result;
}

StocksAnalytics::AdFeedData __swiftcall AdFeedData.init(feedType:)(StocksAnalytics::AdFeedData feedType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)feedType.feedType;
  return feedType;
}

uint64_t type metadata accessor for ExternalAnalyticsEventProcessor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FlushAnalyticsBatchesStartupTask()
{
  uint64_t result;

  result = qword_1EDB0E928;
  if (!qword_1EDB0E928)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DC4C0864()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E908)
  {
    v0 = sub_1DC62AEC0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E908);
  }
}

unint64_t sub_1DC4C08BC()
{
  unint64_t result;

  result = qword_1EDB0E8C8;
  if (!qword_1EDB0E8C8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB0E8C8);
  }
  return result;
}

unint64_t sub_1DC4C0910()
{
  unint64_t result;

  result = qword_1EDB0E700;
  if (!qword_1EDB0E700)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB0E700);
  }
  return result;
}

void sub_1DC4C0964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6F8)
  {
    sub_1DC4C0364();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6F8);
  }
}

uint64_t static Settings.Analytics2.Debugging.batchSize.getter()
{
  return sub_1DC4B35EC(&qword_1EDB0E648);
}

uint64_t sub_1DC4C09D8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Settings.Analytics2.Debugging.Jitter()
{
  uint64_t result;

  result = qword_1EDB0E608;
  if (!qword_1EDB0E608)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static Settings.Analytics2.Debugging.maxUploadRetryCount.getter()
{
  return sub_1DC4B35EC(&qword_1EDB0E600);
}

uint64_t sub_1DC4C0A6C(uint64_t a1)
{
  return sub_1DC4B4F14(a1, 0, 0xD00000000000002BLL, 0x80000001DC64DED0, &qword_1EDB0E5B8);
}

uint64_t static Settings.Analytics2.Debugging.batchDebugging.getter()
{
  return sub_1DC4B35EC(&qword_1EDB0E5C0);
}

uint64_t sub_1DC4C0AB0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t NewsArticleData.articleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NewsArticleData.articleID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NewsArticleData.articleID.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.publicationName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NewsArticleData.publicationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*NewsArticleData.publicationName.modify())()
{
  return nullsub_1;
}

void NewsArticleData.articleAccessType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *NewsArticleData.articleAccessType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*NewsArticleData.articleAccessType.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.publishDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t NewsArticleData.publishDate.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*NewsArticleData.publishDate.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.publisherArticleVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t NewsArticleData.publisherArticleVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*NewsArticleData.publisherArticleVersion.modify())()
{
  return nullsub_1;
}

void NewsArticleData.articleType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

_BYTE *NewsArticleData.articleType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = *result;
  return result;
}

uint64_t (*NewsArticleData.articleType.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.isVideoInFeedEligible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t NewsArticleData.isVideoInFeedEligible.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 65) = result;
  return result;
}

uint64_t (*NewsArticleData.isVideoInFeedEligible.modify())()
{
  return nullsub_1;
}

void NewsArticleData.role.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 66);
}

_BYTE *NewsArticleData.role.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 66) = *result;
  return result;
}

uint64_t (*NewsArticleData.role.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.isAudio.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 67);
}

uint64_t NewsArticleData.isAudio.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 67) = result;
  return result;
}

uint64_t (*NewsArticleData.isAudio.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.init(articleID:publicationName:articleAccessType:publishDate:publisherArticleVersion:articleType:isVideoInFeedEligible:role:isAudio:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, char a11, char *a12, char a13)
{
  char v13;
  char v14;
  char v15;

  v13 = *a5;
  v14 = *a10;
  v15 = *a12;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = v13;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7 & 1;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = v14;
  *(_BYTE *)(a9 + 65) = a11;
  *(_BYTE *)(a9 + 66) = v15;
  *(_BYTE *)(a9 + 67) = a13;
  return result;
}

uint64_t sub_1DC4C0CF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4C0D30 + 4 * byte_1DC62BBE0[a1]))(0x49656C6369747261, 0xE900000000000044);
}

uint64_t sub_1DC4C0D30()
{
  return 0x746163696C627570;
}

unint64_t sub_1DC4C0D54()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC4C0D70()
{
  return 0x446873696C627570;
}

unint64_t sub_1DC4C0D94()
{
  return 0xD000000000000017;
}

uint64_t sub_1DC4C0DEC()
{
  return 1701605234;
}

uint64_t sub_1DC4C0DFC()
{
  return 0x6F696475417369;
}

BOOL sub_1DC4C0E14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DC4C0E28()
{
  sub_1DC62B5B0();
  sub_1DC62B5BC();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4C0E6C()
{
  return sub_1DC62B5BC();
}

uint64_t sub_1DC4C0E94()
{
  sub_1DC62B5B0();
  sub_1DC62B5BC();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4C0ED4()
{
  unsigned __int8 *v0;

  return sub_1DC4C0CF8(*v0);
}

uint64_t sub_1DC4C0EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4C2024(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4C0F00()
{
  return 0;
}

void sub_1DC4C0F0C(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1DC4C0F18()
{
  sub_1DC4C1248();
  return sub_1DC62B604();
}

uint64_t sub_1DC4C0F40()
{
  sub_1DC4C1248();
  return sub_1DC62B610();
}

uint64_t NewsArticleData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  sub_1DC4C1774(0, &qword_1EDB11A30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v20 = *(_QWORD *)(v1 + 24);
  v21 = v8;
  v19 = *(unsigned __int8 *)(v1 + 32);
  v18 = *(_QWORD *)(v1 + 40);
  v17 = *(unsigned __int8 *)(v1 + 48);
  v16 = *(_QWORD *)(v1 + 56);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 64);
  v14 = *(unsigned __int8 *)(v1 + 65);
  v15 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 66);
  v12 = *(unsigned __int8 *)(v1 + 67);
  v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4C1248();
  sub_1DC62B5F8();
  v34 = 0;
  v9 = v22;
  sub_1DC62B4B4();
  if (!v9)
  {
    v10 = v19;
    v33 = 1;
    sub_1DC62B4B4();
    v32 = v10;
    v31 = 2;
    sub_1DC4C128C();
    sub_1DC62B4E4();
    v30 = 3;
    sub_1DC62B4A8();
    v29 = 4;
    sub_1DC62B4FC();
    v28 = v15;
    v27 = 5;
    sub_1DC4C12D0();
    sub_1DC62B4E4();
    v26 = 6;
    sub_1DC62B4C0();
    v25 = v13;
    v24 = 7;
    sub_1DC4C1314();
    sub_1DC62B4E4();
    v23 = 8;
    sub_1DC62B4C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC4C1248()
{
  unint64_t result;

  result = qword_1EDB0F3F8;
  if (!qword_1EDB0F3F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62BF18, &type metadata for NewsArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F3F8);
  }
  return result;
}

unint64_t sub_1DC4C128C()
{
  unint64_t result;

  result = qword_1EDB0F998;
  if (!qword_1EDB0F998)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleAccessType, &type metadata for ArticleAccessType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F998);
  }
  return result;
}

unint64_t sub_1DC4C12D0()
{
  unint64_t result;

  result = qword_1EDB0ED50;
  if (!qword_1EDB0ED50)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleType, &type metadata for ArticleType);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED50);
  }
  return result;
}

unint64_t sub_1DC4C1314()
{
  unint64_t result;

  result = qword_1EDB115F8;
  if (!qword_1EDB115F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for Role, &type metadata for Role);
    atomic_store(result, (unint64_t *)&qword_1EDB115F8);
  }
  return result;
}

uint64_t NewsArticleData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  unsigned __int8 v37;
  char v38;
  char v39;
  unsigned __int8 v40;
  char v41;
  char v42;
  char v43;
  unsigned __int8 v44;
  char v45;
  char v46;

  sub_1DC4C1774(0, &qword_1EDB11938, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4C1248();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v46 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v34 = v10;
  v45 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1DC62B424();
  v15 = v14;
  v32 = v13;
  v33 = v12;
  v43 = 2;
  sub_1DC4C17D0();
  swift_bridgeObjectRetain();
  sub_1DC62B454();
  v31 = v15;
  LODWORD(v12) = v44;
  v42 = 3;
  v16 = sub_1DC62B418();
  v28 = v17;
  v29 = v16;
  v30 = v12;
  v41 = 4;
  v19 = sub_1DC62B46C();
  v39 = 5;
  sub_1DC4C1814();
  sub_1DC62B454();
  v20 = v40;
  v38 = 6;
  v26 = sub_1DC62B430();
  v27 = v20;
  v36 = 7;
  sub_1DC4C1858();
  sub_1DC62B454();
  v25 = v37;
  v35 = 8;
  LOBYTE(v15) = sub_1DC62B430();
  LOBYTE(v20) = v26 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v21 = v15 & 1;
  v22 = v33;
  *(_QWORD *)a2 = v34;
  *(_QWORD *)(a2 + 8) = v22;
  v23 = v31;
  *(_QWORD *)(a2 + 16) = v32;
  *(_QWORD *)(a2 + 24) = v23;
  *(_BYTE *)(a2 + 32) = v30;
  *(_QWORD *)(a2 + 40) = v29;
  *(_BYTE *)(a2 + 48) = v28 & 1;
  *(_QWORD *)(a2 + 56) = v19;
  *(_BYTE *)(a2 + 64) = v27;
  *(_BYTE *)(a2 + 65) = v20;
  *(_BYTE *)(a2 + 66) = v25;
  *(_BYTE *)(a2 + 67) = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC4C1774(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4C1248();
    v7 = a3(a1, &type metadata for NewsArticleData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4C17D0()
{
  unint64_t result;

  result = qword_1EDB0F9A8;
  if (!qword_1EDB0F9A8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleAccessType, &type metadata for ArticleAccessType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F9A8);
  }
  return result;
}

unint64_t sub_1DC4C1814()
{
  unint64_t result;

  result = qword_1EDB0ED60;
  if (!qword_1EDB0ED60)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleType, &type metadata for ArticleType);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED60);
  }
  return result;
}

unint64_t sub_1DC4C1858()
{
  unint64_t result;

  result = qword_1EDB0E518;
  if (!qword_1EDB0E518)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for Role, &type metadata for Role);
    atomic_store(result, (unint64_t *)&qword_1EDB0E518);
  }
  return result;
}

unint64_t sub_1DC4C18A0()
{
  unint64_t result;

  result = qword_1EDB0F410;
  if (!qword_1EDB0F410)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for NewsArticleData, &type metadata for NewsArticleData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F410);
  }
  return result;
}

unint64_t sub_1DC4C18E8()
{
  unint64_t result;

  result = qword_1EDB0F408;
  if (!qword_1EDB0F408)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for NewsArticleData, &type metadata for NewsArticleData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F408);
  }
  return result;
}

uint64_t sub_1DC4C192C()
{
  return sub_1DC62A7F4();
}

uint64_t sub_1DC4C1940@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleData.init(from:)(a1, a2);
}

uint64_t sub_1DC4C1954(_QWORD *a1)
{
  return NewsArticleData.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for NewsArticleData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for NewsArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  return a1;
}

__n128 __swift_memcpy68_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NewsArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 68))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 68) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 68) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleData()
{
  return &type metadata for NewsArticleData;
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
  sub_1DC4BEB24(a1, &qword_1F03692C8);
}

uint64_t storeEnumTagSinglePayload for NewsArticleData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1DC4C1C5C + 4 * byte_1DC62BBEE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1DC4C1C90 + 4 * byte_1DC62BBE9[v4]))();
}

uint64_t sub_1DC4C1C90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C1C98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4C1CA0);
  return result;
}

uint64_t sub_1DC4C1CAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4C1CB4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1DC4C1CB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C1CC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C1CCC(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for NewsArticleData.CodingKeys()
{
  return &type metadata for NewsArticleData.CodingKeys;
}

unint64_t sub_1DC4C1CE8()
{
  unint64_t result;

  result = qword_1F03692D0;
  if (!qword_1F03692D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62BD8C, &type metadata for NewsArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03692D0);
  }
  return result;
}

void sub_1DC4C1D2C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1DC4C1D38()
{
  return sub_1DC62B190();
}

uint64_t sub_1DC4C1D40(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1DF0CBF64](a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1DC4C1D90(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = sub_1DC62B1A8();
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1DC4C1DE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DC62B1B4();
  *a1 = result;
  return result;
}

_QWORD *sub_1DC4C1E08@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1DC4C1E18()
{
  sub_1DC4C1EE4(&qword_1F03692F0, (uint64_t)&unk_1DC62BE88);
  sub_1DC4C1EE4(&qword_1F03692F8, (uint64_t)&unk_1DC62BE28);
  return sub_1DC62B3D0();
}

uint64_t sub_1DC4C1E9C()
{
  return sub_1DC4C1EE4(&qword_1F03692D8, (uint64_t)&unk_1DC62BDEC);
}

uint64_t sub_1DC4C1EC0()
{
  return sub_1DC4C1EE4(&qword_1F03692E0, (uint64_t)&unk_1DC62BDC0);
}

uint64_t sub_1DC4C1EE4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for UIBackgroundTaskIdentifier(255);
    result = MEMORY[0x1DF0CC744](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC4C1F24()
{
  return sub_1DC62B1C0();
}

uint64_t sub_1DC4C1F2C()
{
  return sub_1DC62B5BC();
}

uint64_t sub_1DC4C1F54()
{
  return sub_1DC62B5A4();
}

BOOL sub_1DC4C1F5C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DC4C1F70()
{
  return sub_1DC4C1EE4(&qword_1F03692E8, (uint64_t)&unk_1DC62BE5C);
}

unint64_t sub_1DC4C1F98()
{
  unint64_t result;

  result = qword_1EDB0E2D0;
  if (!qword_1EDB0E2D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62BCFC, &type metadata for NewsArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E2D0);
  }
  return result;
}

unint64_t sub_1DC4C1FE0()
{
  unint64_t result;

  result = qword_1EDB0F400;
  if (!qword_1EDB0F400)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62BD24, &type metadata for NewsArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F400);
  }
  return result;
}

uint64_t sub_1DC4C2024(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49656C6369747261 && a2 == 0xE900000000000044;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746163696C627570 && a2 == 0xEF656D614E6E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64BCC0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DC64BCE0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x54656C6369747261 && a2 == 0xEB00000000657079 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BD00 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F696475417369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

StocksAnalytics::MediaType_optional __swiftcall MediaType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::MediaType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4C2478 + 4 * byte_1DC62BF84[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4C2478()
{
  return 0x6F65646976;
}

uint64_t sub_1DC4C248C()
{
  return 0x6567616D69;
}

uint64_t sub_1DC4C24A0()
{
  return 0x7972656C6C6167;
}

uint64_t sub_1DC4C24B4()
{
  return 0x6F69647561;
}

uint64_t sub_1DC4C24C8()
{
  return 7364973;
}

void sub_1DC4C24D8(char *a1)
{
  sub_1DC546CFC(*a1);
}

unint64_t sub_1DC4C24E8()
{
  unint64_t result;

  result = qword_1F0369300;
  if (!qword_1F0369300)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaType, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_1F0369300);
  }
  return result;
}

void sub_1DC4C252C()
{
  char *v0;

  sub_1DC6018C8(*v0);
}

void sub_1DC4C2534()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC4C2570()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC4C25E4(uint64_t a1)
{
  char *v1;

  sub_1DC603D7C(a1, *v1);
}

StocksAnalytics::MediaType_optional sub_1DC4C25EC(Swift::String *a1)
{
  return MediaType.init(rawValue:)(*a1);
}

uint64_t sub_1DC4C25F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4C2628 + 4 * byte_1DC62BF90[*v0]))();
}

void sub_1DC4C2628(_QWORD *a1@<X8>)
{
  *a1 = 0x6F65646976;
  a1[1] = 0xE500000000000000;
}

void sub_1DC4C2640(_QWORD *a1@<X8>)
{
  *a1 = 0x6567616D69;
  a1[1] = 0xE500000000000000;
}

void sub_1DC4C2658(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x7972656C6C6167;
  a1[1] = v1;
}

void sub_1DC4C2670(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69647561;
  a1[1] = 0xE500000000000000;
}

void sub_1DC4C2688(_QWORD *a1@<X8>)
{
  *a1 = 7364973;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1DC4C269C()
{
  sub_1DC4C2810();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4C26F8()
{
  sub_1DC4C2810();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for MediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC4C2790 + 4 * byte_1DC62BF9B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC4C27C4 + 4 * byte_1DC62BF96[v4]))();
}

uint64_t sub_1DC4C27C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C27CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4C27D4);
  return result;
}

uint64_t sub_1DC4C27E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4C27E8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC4C27EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C27F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaType()
{
  return &type metadata for MediaType;
}

unint64_t sub_1DC4C2810()
{
  unint64_t result;

  result = qword_1EDB11800;
  if (!qword_1EDB11800)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaType, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_1EDB11800);
  }
  return result;
}

uint64_t sub_1DC4C2854()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DC62B0E8();

  }
  sub_1DC4B30AC();
  result = sub_1DC62B244();
  qword_1EDB11F30 = result;
  return result;
}

uint64_t sub_1DC4C2924()
{
  uint64_t v0;
  id v1;

  v0 = sub_1DC62AF08();
  __swift_allocate_value_buffer(v0, qword_1EDB23420);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDB23420);
  if (qword_1EDB11F38 != -1)
    swift_once();
  v1 = (id)qword_1EDB11F30;
  return sub_1DC62AF14();
}

StocksAnalytics::ArticleType_optional __swiftcall ArticleType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ArticleType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ArticleType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x647261646E617473;
  if (*v0 != 1)
    v1 = 0x6C65527373657270;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC4C2A68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC546394(*a1, *a2);
}

unint64_t sub_1DC4C2A78()
{
  unint64_t result;

  result = qword_1F0369308;
  if (!qword_1F0369308)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleType, &type metadata for ArticleType);
    atomic_store(result, (unint64_t *)&qword_1F0369308);
  }
  return result;
}

uint64_t sub_1DC4C2ABC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4C2B6C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4C2BF8()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ArticleType_optional sub_1DC4C2CA4(Swift::String *a1)
{
  return ArticleType.init(rawValue:)(*a1);
}

void sub_1DC4C2CB0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEB00000000464E41;
  v5 = 0x647261646E617473;
  if (v2 != 1)
  {
    v5 = 0x6C65527373657270;
    v4 = 0xEC00000065736165;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC4C2D20()
{
  sub_1DC4C2F24();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4C2D7C()
{
  sub_1DC4C2F24();
  return sub_1DC62B130();
}

uint64_t getEnumTagSinglePayload for ArticleAccessType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4C2EA4 + 4 * byte_1DC62C0BD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4C2ED8 + 4 * byte_1DC62C0B8[v4]))();
}

uint64_t sub_1DC4C2ED8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C2EE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4C2EE8);
  return result;
}

uint64_t sub_1DC4C2EF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4C2EFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4C2F00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C2F08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleType()
{
  return &type metadata for ArticleType;
}

unint64_t sub_1DC4C2F24()
{
  unint64_t result;

  result = qword_1EDB0ED58;
  if (!qword_1EDB0ED58)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleType, &type metadata for ArticleType);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED58);
  }
  return result;
}

uint64_t sub_1DC4C2F68(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0369310, MEMORY[0x1E0CF8078]);
}

uint64_t static SymbolDetailsViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368EC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369310, a1);
}

uint64_t sub_1DC4C2FA8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0369328, MEMORY[0x1E0CF8380]);
}

uint64_t static SymbolDetailsViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368EC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369328, a1);
}

uint64_t sub_1DC4C2FE8@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t SymbolDetailsViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SymbolDetailsViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SymbolDetailsViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for SymbolDetailsViewEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for SymbolDetailsViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F03693B8);
}

uint64_t SymbolDetailsViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.timedData.modify())()
{
  type metadata accessor for SymbolDetailsViewEvent(0);
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.symbolPriceChangeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C31A8()
{
  unint64_t result;

  result = qword_1EDB10838;
  if (!qword_1EDB10838)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolPriceChangeData, &type metadata for SymbolPriceChangeData);
    atomic_store(result, (unint64_t *)&qword_1EDB10838);
  }
  return result;
}

unint64_t sub_1DC4C31EC()
{
  unint64_t result;

  result = qword_1EDB10830;
  if (!qword_1EDB10830)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolPriceChangeData, &type metadata for SymbolPriceChangeData);
    atomic_store(result, (unint64_t *)&qword_1EDB10830);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.symbolPriceChangeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.symbolPriceChangeData.modify())()
{
  type metadata accessor for SymbolDetailsViewEvent(0);
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C3328()
{
  unint64_t result;

  result = qword_1EDB0ED10;
  if (!qword_1EDB0ED10)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolData, &type metadata for SymbolData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED10);
  }
  return result;
}

unint64_t sub_1DC4C336C()
{
  unint64_t result;

  result = qword_1EDB0ED08;
  if (!qword_1EDB0ED08)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolData, &type metadata for SymbolData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED08);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.symbolData.modify())()
{
  type metadata accessor for SymbolDetailsViewEvent(0);
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SymbolDetailsViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.orientationData.modify())()
{
  type metadata accessor for SymbolDetailsViewEvent(0);
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SymbolDetailsViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.viewEndData.modify())()
{
  type metadata accessor for SymbolDetailsViewEvent(0);
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SymbolDetailsViewEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
}

uint64_t SymbolDetailsViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t sub_1DC4C37DC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2, v4);
}

uint64_t SymbolDetailsViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for SymbolDetailsViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t sub_1DC4C382C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 20);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t type metadata accessor for SymbolDetailsViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369458);
}

uint64_t SymbolDetailsViewEvent.Model.symbolPriceChangeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SymbolDetailsViewEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SymbolDetailsViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t SymbolDetailsViewEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t SymbolDetailsViewEvent.Model.init(eventData:timedData:symbolPriceChangeData:symbolData:orientationData:viewEndData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, __int16 *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  char v27;

  v10 = *a3;
  v11 = a3[1];
  v12 = a3[2];
  v13 = a3[3];
  v14 = *a4;
  v15 = a4[1];
  v16 = *((_BYTE *)a4 + 16);
  v17 = a4[3];
  v25 = a4[4];
  v26 = *a5;
  v27 = *a6;
  v18 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a7, a1, v18);
  v19 = (int *)type metadata accessor for SymbolDetailsViewEvent.Model(0);
  v20 = a7 + v19[5];
  v21 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v23 = (_QWORD *)(a7 + v19[6]);
  *v23 = v10;
  v23[1] = v11;
  v23[2] = v12;
  v23[3] = v13;
  v24 = a7 + v19[7];
  *(_QWORD *)v24 = v14;
  *(_QWORD *)(v24 + 8) = v15;
  *(_BYTE *)(v24 + 16) = v16;
  *(_QWORD *)(v24 + 24) = v17;
  *(_QWORD *)(v24 + 32) = v25;
  *(_WORD *)(a7 + v19[8]) = v26;
  *(_BYTE *)(a7 + v19[9]) = v27;
  return result;
}

uint64_t sub_1DC4C3A8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4C3AC0 + 4 * byte_1DC62C1D0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4C3AC0()
{
  return 0x74614464656D6974;
}

unint64_t sub_1DC4C3AD4()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC4C3AF0()
{
  return 0x61446C6F626D7973;
}

uint64_t sub_1DC4C3B0C()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1DC4C3B30()
{
  return 0x44646E4577656976;
}

uint64_t sub_1DC4C3B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4C5ECC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4C3B74(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DC4C3B80()
{
  sub_1DC4C3E90();
  return sub_1DC62B604();
}

uint64_t sub_1DC4C3BA8()
{
  sub_1DC4C3E90();
  return sub_1DC62B610();
}

uint64_t SymbolDetailsViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v3 = v1;
  sub_1DC4C43F4(0, &qword_1F0369348, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4C3E90();
  sub_1DC62B5F8();
  LOBYTE(v21) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SymbolDetailsViewEvent.Model(0);
    LOBYTE(v21) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *((_QWORD *)v11 + 2);
    v13 = *((_QWORD *)v11 + 3);
    v21 = *v11;
    v22 = v12;
    v23 = v13;
    v25 = 2;
    sub_1DC4C31EC();
    sub_1DC62B4E4();
    v14 = (uint64_t *)(v3 + v10[7]);
    v15 = *v14;
    v16 = v14[1];
    v17 = *((_BYTE *)v14 + 16);
    v19 = v14[3];
    v18 = v14[4];
    *(_QWORD *)&v21 = v15;
    *((_QWORD *)&v21 + 1) = v16;
    LOBYTE(v22) = v17;
    v23 = v19;
    v24 = v18;
    v25 = 3;
    sub_1DC4C336C();
    sub_1DC62B4E4();
    LOWORD(v21) = *(_WORD *)(v3 + v10[8]);
    v25 = 4;
    sub_1DC4C0058();
    sub_1DC62B4E4();
    LOBYTE(v21) = *(_BYTE *)(v3 + v10[9]);
    v25 = 5;
    sub_1DC4C0298();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4C3E90()
{
  unint64_t result;

  result = qword_1F0369350;
  if (!qword_1F0369350)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62C414, &type metadata for SymbolDetailsViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369350);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void (**v5)(uint64_t, char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v36 = a2;
  v3 = sub_1DC62ABC0();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1DC62ABA8();
  v5 = *(void (***)(uint64_t, char *, uint64_t))(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4C43F4(0, &qword_1F0369358, MEMORY[0x1E0DED048]);
  v43 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - v9;
  v11 = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4C3E90();
  v42 = v10;
  v14 = v44;
  sub_1DC62B5E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v44 = v8;
  v34 = (int *)v11;
  v35 = a1;
  v15 = (uint64_t)v13;
  v16 = v37;
  v17 = v38;
  v18 = v39;
  LOBYTE(v45) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v20 = v40;
  v19 = v41;
  sub_1DC62B454();
  v5[4](v15, v20, v19);
  LOBYTE(v45) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v21 = v16;
  v22 = v18;
  sub_1DC62B454();
  v40 = (char *)v5;
  v23 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + v34[5], v21, v22);
  v49 = 2;
  sub_1DC4C31A8();
  sub_1DC62B454();
  v24 = v46;
  v25 = v47;
  v26 = v15 + v23[6];
  *(_OWORD *)v26 = v45;
  *(_QWORD *)(v26 + 16) = v24;
  *(_QWORD *)(v26 + 24) = v25;
  v49 = 3;
  sub_1DC4C3328();
  sub_1DC62B454();
  v27 = *((_QWORD *)&v45 + 1);
  v28 = v46;
  v29 = v47;
  v30 = v48;
  v31 = v15 + v34[7];
  *(_QWORD *)v31 = v45;
  *(_QWORD *)(v31 + 8) = v27;
  *(_BYTE *)(v31 + 16) = v28;
  *(_QWORD *)(v31 + 24) = v29;
  *(_QWORD *)(v31 + 32) = v30;
  v49 = 4;
  sub_1DC4C0014();
  sub_1DC62B454();
  *(_WORD *)(v15 + v34[8]) = v45;
  v49 = 5;
  sub_1DC4C0254();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v43);
  *(_BYTE *)(v15 + v34[9]) = v45;
  sub_1DC4C4450(v15, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1DC4C4494(v15);
}

void sub_1DC4C43F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4C3E90();
    v7 = a3(a1, &type metadata for SymbolDetailsViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4C4450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4C4494(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4C44D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolDetailsViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4C44E4(_QWORD *a1)
{
  return SymbolDetailsViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4C44F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368EC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369310, a1);
}

uint64_t sub_1DC4C451C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368EC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369328, a1);
}

uint64_t sub_1DC4C4540@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolDetailsViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for SymbolDetailsViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolDetailsViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4C5108(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SymbolDetailsViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4C5298(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4C5424()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F0369340, (void (*)(void))sub_1DC4C31A8, (void (*)(void))sub_1DC4C31EC);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SymbolDetailsViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_OWORD *)v14 = *(_OWORD *)v15;
    v16 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v17[16] = v18[16];
    v20 = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
    *((_QWORD *)v17 + 4) = v20;
    v21 = a3[9];
    *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v19 = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = v19;
  v20 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_BYTE *)(a1 + v17);
  v19 = (_BYTE *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(_OWORD *)(a2 + v11);
  v14 = *(_OWORD *)(a2 + v11 + 16);
  v15 = (_OWORD *)(a1 + v11);
  *v15 = v13;
  v15[1] = v14;
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v19 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v15 = *(_QWORD *)(v13 + 16);
  v14 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = v15;
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  v21 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolDetailsViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4C5B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolDetailsViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4C5BD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4C5C7C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SymbolDetailsViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC4C5D74 + 4 * byte_1DC62C1DB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC4C5DA8 + 4 * byte_1DC62C1D6[v4]))();
}

uint64_t sub_1DC4C5DA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C5DB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4C5DB8);
  return result;
}

uint64_t sub_1DC4C5DC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4C5DCCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC4C5DD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C5DD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolDetailsViewEvent.Model.CodingKeys()
{
  return &type metadata for SymbolDetailsViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC4C5DF8()
{
  unint64_t result;

  result = qword_1F03694A0;
  if (!qword_1F03694A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62C3EC, &type metadata for SymbolDetailsViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03694A0);
  }
  return result;
}

unint64_t sub_1DC4C5E40()
{
  unint64_t result;

  result = qword_1F03694A8;
  if (!qword_1F03694A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62C35C, &type metadata for SymbolDetailsViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03694A8);
  }
  return result;
}

unint64_t sub_1DC4C5E88()
{
  unint64_t result;

  result = qword_1F03694B0;
  if (!qword_1F03694B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62C384, &type metadata for SymbolDetailsViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03694B0);
  }
  return result;
}

uint64_t sub_1DC4C5ECC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BDD0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t SessionData.utcOffset.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t SessionData.utcOffset.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SessionData.utcOffset.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.languageCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.languageCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SessionData.languageCode.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SessionData.countryCode.modify())()
{
  return nullsub_1;
}

void SessionData.iCloudAccountState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

_BYTE *SessionData.iCloudAccountState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = *result;
  return result;
}

uint64_t (*SessionData.iCloudAccountState.modify())()
{
  return nullsub_1;
}

void SessionData.startMethod.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

_BYTE *SessionData.startMethod.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = *result;
  return result;
}

uint64_t (*SessionData.startMethod.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.productType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SessionData.productType.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.userSegmentationTreatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionData.userSegmentationTreatmentIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*SessionData.userSegmentationTreatmentIDs.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.userSegmentationSegmentSetIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionData.userSegmentationSegmentSetIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*SessionData.userSegmentationSegmentSetIDs.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isStoreDemoUser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t SessionData.isStoreDemoUser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*SessionData.isStoreDemoUser.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isPersonalizedAdsEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t SessionData.isPersonalizedAdsEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 81) = result;
  return result;
}

uint64_t (*SessionData.isPersonalizedAdsEnabled.modify())()
{
  return nullsub_1;
}

void SessionData.appIntentType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 82);
}

_BYTE *SessionData.appIntentType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 82) = *result;
  return result;
}

uint64_t (*SessionData.appIntentType.modify())()
{
  return nullsub_1;
}

__n128 SessionData.init(utcOffset:languageCode:countryCode:iCloudAccountState:startMethod:productType:userSegmentationTreatmentIDs:userSegmentationSegmentSetIDs:isStoreDemoUser:isPersonalizedAdsEnabled:appIntentType:)@<Q0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10, uint64_t a11, __int16 a12, char *a13)
{
  __n128 result;
  char v14;
  char v15;
  char v16;

  result = a10;
  v14 = *a6;
  v15 = *a7;
  v16 = *a13;
  *(_DWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = v14;
  *(_BYTE *)(a9 + 41) = v15;
  *(_QWORD *)(a9 + 48) = a8;
  *(__n128 *)(a9 + 56) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  *(_WORD *)(a9 + 80) = a12;
  *(_BYTE *)(a9 + 82) = v16;
  return result;
}

uint64_t sub_1DC4C6494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4C6EA8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4C64B8(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1DC4C64C4()
{
  sub_1DC4BBAA0();
  return sub_1DC62B604();
}

uint64_t sub_1DC4C64EC()
{
  sub_1DC4BBAA0();
  return sub_1DC62B610();
}

unint64_t sub_1DC4C6514()
{
  unint64_t result;

  result = qword_1EDB11F40;
  if (!qword_1EDB11F40)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AppIntentType, &type metadata for AppIntentType);
    atomic_store(result, (unint64_t *)&qword_1EDB11F40);
  }
  return result;
}

uint64_t SessionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;

  sub_1DC4BB82C(0, &qword_1EDB11918, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BBAA0();
  sub_1DC62B5E0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v38) = 0;
    v10 = sub_1DC62B460();
    LOBYTE(v38) = 1;
    v11 = sub_1DC62B3E8();
    v14 = v13;
    v36 = v11;
    v39 = v10;
    LOBYTE(v38) = 2;
    swift_bridgeObjectRetain();
    v15 = sub_1DC62B3E8();
    v17 = v16;
    v35 = v15;
    v40 = 3;
    sub_1DC4C6B18();
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v34 = v38;
    v40 = 4;
    sub_1DC4C6B5C();
    sub_1DC62B454();
    v33 = v38;
    LOBYTE(v38) = 5;
    v18 = sub_1DC62B424();
    v20 = v19;
    v31 = v18;
    sub_1DC4BB7E8(0, (unint64_t *)&qword_1EDB118B8);
    v32 = v21;
    v40 = 6;
    sub_1DC4BB888(&qword_1EDB118C8, MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEAF40]);
    v37 = v20;
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v32 = v38;
    sub_1DC4BB7E8(0, (unint64_t *)&qword_1EDB118A0);
    v40 = 7;
    sub_1DC4BB950(&qword_1EDB118B0, MEMORY[0x1E0DEDBF8], MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v22 = v38;
    LOBYTE(v38) = 8;
    v30 = v22;
    swift_bridgeObjectRetain();
    v29 = sub_1DC62B3F4();
    LOBYTE(v38) = 9;
    v28 = sub_1DC62B3F4();
    v40 = 10;
    sub_1DC4C6BA0();
    sub_1DC62B400();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v23 = v38;
    *(_DWORD *)a2 = v39;
    v24 = v37;
    *(_QWORD *)(a2 + 8) = v36;
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v35;
    *(_QWORD *)(a2 + 32) = v17;
    *(_BYTE *)(a2 + 40) = v34;
    *(_BYTE *)(a2 + 41) = v33;
    v25 = v32;
    *(_QWORD *)(a2 + 48) = v31;
    *(_QWORD *)(a2 + 56) = v24;
    v26 = v30;
    *(_QWORD *)(a2 + 64) = v25;
    *(_QWORD *)(a2 + 72) = v26;
    *(_BYTE *)(a2 + 80) = v29;
    *(_BYTE *)(a2 + 81) = v28;
    *(_BYTE *)(a2 + 82) = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DC4C6B18()
{
  unint64_t result;

  result = qword_1EDB0FD68;
  if (!qword_1EDB0FD68)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ICloudAccountState, &type metadata for ICloudAccountState);
    atomic_store(result, (unint64_t *)&qword_1EDB0FD68);
  }
  return result;
}

unint64_t sub_1DC4C6B5C()
{
  unint64_t result;

  result = qword_1EDB0EE10;
  if (!qword_1EDB0EE10)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StartMethod, &type metadata for StartMethod);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE10);
  }
  return result;
}

unint64_t sub_1DC4C6BA0()
{
  unint64_t result;

  result = qword_1F03694B8;
  if (!qword_1F03694B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AppIntentType, &type metadata for AppIntentType);
    atomic_store(result, (unint64_t *)&qword_1F03694B8);
  }
  return result;
}

uint64_t sub_1DC4C6BE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  return a1;
}

__n128 __swift_memcpy83_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_WORD *)(a1 + 81) = *(_WORD *)(a2 + 81);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 83))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 82) = 0;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 83) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 83) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionData()
{
  return &type metadata for SessionData;
}

ValueMetadata *type metadata accessor for SessionData.CodingKeys()
{
  return &type metadata for SessionData.CodingKeys;
}

unint64_t sub_1DC4C6E64()
{
  unint64_t result;

  result = qword_1F03694C0;
  if (!qword_1F03694C0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62C5E0, &type metadata for SessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03694C0);
  }
  return result;
}

uint64_t sub_1DC4C6EA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657366664F637475 && a2 == 0xE900000000000074;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xEC00000065646F43 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64BDF0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74654D7472617473 && a2 == 0xEB00000000646F68 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x54746375646F7270 && a2 == 0xEB00000000657079 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DC64BE10 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DC64BE30 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4465726F74537369 && a2 == 0xEF726573556F6D65 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DC64BE50 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E65746E49707061 && a2 == 0xED00006570795474)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1DC4C7390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  sub_1DC4C7464(a3, &v5);
  sub_1DC62A8A8();
  sub_1DC4C79C0(&v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4C7464@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char v37;
  unint64_t v38;
  _QWORD *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;

  v4 = sub_1DC62AE54();
  v81 = *(_QWORD *)(v4 - 8);
  v82 = v4;
  MEMORY[0x1E0C80A78](v4);
  v79 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1DC62A140();
  v71 = *(_QWORD **)(v84 - 8);
  v6 = MEMORY[0x1E0C80A78](v84);
  v70 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v83 = (char *)&v67 - v8;
  v9 = sub_1DC62ACEC();
  v78 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v77 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v67 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v74 = (char *)&v67 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v67 - v16;
  v18 = sub_1DC62AD10();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v75 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v73 = (char *)&v67 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v67 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v67 - v28;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v67 - v30;
  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB0E8F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6EB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3F28]);
  v80 = a1;
  sub_1DC62ADAC();
  sub_1DC62AD04();
  v32 = *(void (**)(char *, uint64_t))(v19 + 8);
  v32(v31, v18);
  v33 = sub_1DC62ACF8();
  v35 = v34;
  v36 = *(void (**)(char *, uint64_t))(v78 + 8);
  v78 = v9;
  v72 = v36;
  v36(v17, v9);
  if (v35)
  {
    v67 = 0xD000000000000017;
    if (v33 == 0x746567646977 && v35 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      v38 = 0x80000001DC64BEE0;
      goto LABEL_8;
    }
    v37 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v37 & 1) != 0)
      goto LABEL_6;
  }
  v67 = 0;
  v38 = 0xE000000000000000;
LABEL_8:
  v68 = v38;
  v40 = v70;
  v39 = v71;
  sub_1DC62ADAC();
  sub_1DC62ACE0();
  v32(v29, v18);
  sub_1DC62A110();
  v71 = (_QWORD *)v39[1];
  ((void (*)(char *, uint64_t))v71)(v40, v84);
  sub_1DC62ADAC();
  v41 = v74;
  sub_1DC62AD04();
  v32(v26, v18);
  v42 = sub_1DC62ACF8();
  v69 = v43;
  v70 = (char *)v42;
  v44 = v78;
  v45 = v72;
  v72(v41, v78);
  v46 = v73;
  sub_1DC62ADAC();
  v47 = v76;
  sub_1DC62AD04();
  v32(v46, v18);
  v74 = (char *)sub_1DC62ACF8();
  v49 = v48;
  v45(v47, v44);
  v50 = v75;
  sub_1DC62ADAC();
  v51 = v77;
  sub_1DC62AD04();
  v32(v50, v18);
  v52 = sub_1DC62ACF8();
  v54 = v53;
  v45(v51, v44);
  v55 = v79;
  sub_1DC62ADA0();
  v56 = sub_1DC62AE48();
  v58 = v57;
  (*(void (**)(char *, uint64_t))(v81 + 8))(v55, v82);
  if (v58)
  {
    swift_bridgeObjectRelease();
    v59 = v56;
  }
  else
  {
    v59 = v67;
    v58 = v68;
  }
  v61 = v70;
  v60 = (uint64_t (*)(char *, uint64_t))v71;
  v62 = v69;
  v63 = v83;
  v64 = sub_1DC62A11C();
  *a2 = v61;
  a2[1] = v62;
  a2[2] = v74;
  a2[3] = v49;
  a2[4] = v52;
  a2[5] = v54;
  a2[6] = v59;
  a2[7] = v58;
  a2[8] = v64;
  a2[9] = v65;
  return v60(v63, v84);
}

uint64_t sub_1DC4C79C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v36 = a2;
  sub_1DC4C7CA0();
  v37 = v3;
  v35 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[3];
  v27 = a1[2];
  v28 = v5;
  v23 = v7;
  v8 = a1[5];
  v26 = a1[4];
  v9 = a1[7];
  v25 = a1[6];
  v10 = a1[9];
  v24 = a1[8];
  v38 = v5;
  v39 = v6;
  v40 = v27;
  v41 = v7;
  v42 = v26;
  v43 = v8;
  v44 = v25;
  v45 = v9;
  v46 = v24;
  v47 = v10;
  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB11B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v32 = v11;
  v12 = sub_1DC62A818();
  v13 = *(_QWORD *)(v12 - 8);
  v33 = *(_QWORD *)(v13 + 72);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 + 32) & ~v14;
  v31 = v14 | 7;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DC62C660;
  v30 = *MEMORY[0x1E0CF8168];
  v17 = *(void (**)(uint64_t))(v13 + 104);
  v17(v16 + v15);
  sub_1DC4C7CF8();
  v29 = 0x80000001DC64BE70;
  sub_1DC62AB60();
  swift_bridgeObjectRelease();
  v38 = v28;
  v39 = v6;
  v40 = v27;
  v41 = v23;
  v42 = v26;
  v43 = v8;
  v44 = v25;
  v45 = v9;
  v46 = v24;
  v47 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v34;
  sub_1DC62A71C();
  v19 = v33;
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DC62C670;
  v21 = v20 + v15;
  ((void (*)(uint64_t, _QWORD, uint64_t))v17)(v20 + v15, v30, v12);
  ((void (*)(uint64_t, _QWORD, uint64_t))v17)(v21 + v19, *MEMORY[0x1E0CF8170], v12);
  sub_1DC62A980();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v37);
}

void sub_1DC4C7CA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E6E8)
  {
    sub_1DC4C7CF8();
    v0 = sub_1DC62A728();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E6E8);
  }
}

unint64_t sub_1DC4C7CF8()
{
  unint64_t result;

  result = qword_1EDB0EEC0;
  if (!qword_1EDB0EEC0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ReferralData, &type metadata for ReferralData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EEC0);
  }
  return result;
}

uint64_t BundleSubscriptionStatus.feldsparValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1DC4C7D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(_QWORD *, uint64_t, uint64_t);
  void (*v6)(_QWORD *, uint64_t);
  uint64_t v8;

  v0 = sub_1DC62AF20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v3 = sub_1DC4C7EEC;
  v3[1] = 0;
  v4 = *MEMORY[0x1E0DB6828];
  v5 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1DC62AF38();
  v6 = *(void (**)(_QWORD *, uint64_t))(v1 + 8);
  v6(v3, v0);
  *v3 = sub_1DC4C7EF8;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_1DC62AF38();
  v6(v3, v0);
  *v3 = sub_1DC4C7F04;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_1DC62AF38();
  v6(v3, v0);
  *v3 = sub_1DC4C7F5C;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_1DC62AF38();
  return ((uint64_t (*)(_QWORD *, uint64_t))v6)(v3, v0);
}

void sub_1DC4C7EEC()
{
  sub_1DC4C7F10((SEL *)&selRef_triggerSIGBUS);
}

void sub_1DC4C7EF8()
{
  sub_1DC4C7F10((SEL *)&selRef_triggerSIGILL);
}

void sub_1DC4C7F04()
{
  sub_1DC4C7F10((SEL *)&selRef_triggerSIGSEGV);
}

void sub_1DC4C7F10(SEL *a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DB5410]), sel_init);
  objc_msgSend(v2, *a1);

}

void sub_1DC4C7F5C()
{
  exit(0);
}

uint64_t sub_1DC4C7F6C()
{
  return swift_deallocClassInstance();
}

uint64_t Tracker.realtimeSubmit<A>(_:contentType:)()
{
  sub_1DC62AB30();
  sub_1DC62AB78();
  return sub_1DC62AB3C();
}

uint64_t AccessTracker.realtimeSubmit<A>(_:contentType:)()
{
  _OWORD v1[2];

  sub_1DC62A794();
  memset(v1, 0, sizeof(v1));
  sub_1DC62A7D0();
  sub_1DC4B2B3C((uint64_t)v1);
  return sub_1DC62A7A0();
}

StocksAnalytics::EndReason_optional __swiftcall EndReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::EndReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EndReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4C811C + 4 * byte_1DC62C6BC[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4C811C()
{
  return 0x676B636142707061;
}

uint64_t sub_1DC4C8140()
{
  return 0x6976614E72657375;
}

uint64_t sub_1DC4C8164()
{
  return 0x6873617263;
}

uint64_t sub_1DC4C8178()
{
  return 0x6975516563726F66;
}

void sub_1DC4C8194(char *a1)
{
  sub_1DC5416EC(*a1);
}

unint64_t sub_1DC4C81A4()
{
  unint64_t result;

  result = qword_1F03694C8;
  if (!qword_1F03694C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EndReason, &type metadata for EndReason);
    atomic_store(result, (unint64_t *)&qword_1F03694C8);
  }
  return result;
}

void sub_1DC4C81E8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC4C8234()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC4C82D4()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC4C8310()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC4C839C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC4C83E4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::EndReason_optional sub_1DC4C8484(Swift::String *a1)
{
  return EndReason.init(rawValue:)(*a1);
}

uint64_t sub_1DC4C8490()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4C84C0 + 4 * byte_1DC62C6D0[*v0]))();
}

void sub_1DC4C84C0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "appBackground");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1DC4C84E8(char *a1@<X8>)
{
  strcpy(a1, "userNavigation");
  a1[15] = -18;
}

void sub_1DC4C8510(_QWORD *a1@<X8>)
{
  *a1 = 0x6873617263;
  a1[1] = 0xE500000000000000;
}

void sub_1DC4C8528(_QWORD *a1@<X8>)
{
  *a1 = 0x6975516563726F66;
  a1[1] = 0xE900000000000074;
}

uint64_t sub_1DC4C8548()
{
  sub_1DC4C86BC();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4C85A4()
{
  sub_1DC4C86BC();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for EndReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC4C863C + 4 * byte_1DC62C6DA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC4C8670 + 4 * byte_1DC62C6D5[v4]))();
}

uint64_t sub_1DC4C8670(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C8678(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4C8680);
  return result;
}

uint64_t sub_1DC4C868C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4C8694);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC4C8698(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C86A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EndReason()
{
  return &type metadata for EndReason;
}

unint64_t sub_1DC4C86BC()
{
  unint64_t result;

  result = qword_1EDB11778;
  if (!qword_1EDB11778)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EndReason, &type metadata for EndReason);
    atomic_store(result, (unint64_t *)&qword_1EDB11778);
  }
  return result;
}

StocksAnalytics::AudioEngagementStatus_optional __swiftcall AudioEngagementStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AudioEngagementStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AudioEngagementStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64656761676E65;
  if (*v0 != 1)
    v1 = 0x6761676E45746F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC4C87B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC54360C(*a1, *a2);
}

unint64_t sub_1DC4C87C8()
{
  unint64_t result;

  result = qword_1F03694D0;
  if (!qword_1F03694D0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementStatus, &type metadata for AudioEngagementStatus);
    atomic_store(result, (unint64_t *)&qword_1F03694D0);
  }
  return result;
}

uint64_t sub_1DC4C880C()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4C88B0()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4C8930()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::AudioEngagementStatus_optional sub_1DC4C89D0(Swift::String *a1)
{
  return AudioEngagementStatus.init(rawValue:)(*a1);
}

void sub_1DC4C89DC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x64656761676E65;
  if (v2 != 1)
  {
    v5 = 0x6761676E45746F6ELL;
    v4 = 0xEA00000000006465;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC4C8A40()
{
  sub_1DC4C8BB4();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4C8A9C()
{
  sub_1DC4C8BB4();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AudioEngagementStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4C8B34 + 4 * byte_1DC62C805[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4C8B68 + 4 * byte_1DC62C800[v4]))();
}

uint64_t sub_1DC4C8B68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C8B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4C8B78);
  return result;
}

uint64_t sub_1DC4C8B84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4C8B8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4C8B90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4C8B98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementStatus()
{
  return &type metadata for AudioEngagementStatus;
}

unint64_t sub_1DC4C8BB4()
{
  unint64_t result;

  result = qword_1F03694D8;
  if (!qword_1F03694D8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementStatus, &type metadata for AudioEngagementStatus);
    atomic_store(result, (unint64_t *)&qword_1F03694D8);
  }
  return result;
}

uint64_t sub_1DC4C8BF8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F03694E0, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioEngagementCompletedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368ED0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F03694E0, a1);
}

uint64_t sub_1DC4C8C38(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F03694F8, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioEngagementCompletedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368ED8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F03694F8, a1);
}

uint64_t AudioEngagementCompletedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AudioEngagementCompletedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioEngagementCompletedEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AudioEngagementCompletedEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F03695C8);
}

uint64_t AudioEngagementCompletedEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.newsArticleData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C8E40()
{
  unint64_t result;

  result = qword_1EDB0ED88;
  if (!qword_1EDB0ED88)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ChannelData, &type metadata for ChannelData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED88);
  }
  return result;
}

unint64_t sub_1DC4C8E84()
{
  unint64_t result;

  result = qword_1EDB0ED80;
  if (!qword_1EDB0ED80)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ChannelData, &type metadata for ChannelData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED80);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.channelData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C8FC0()
{
  unint64_t result;

  result = qword_1EDB117A8;
  if (!qword_1EDB117A8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GroupData, &type metadata for GroupData);
    atomic_store(result, (unint64_t *)&qword_1EDB117A8);
  }
  return result;
}

unint64_t sub_1DC4C9004()
{
  unint64_t result;

  result = qword_1EDB117A0;
  if (!qword_1EDB117A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GroupData, &type metadata for GroupData);
    atomic_store(result, (unint64_t *)&qword_1EDB117A0);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.groupData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.feedData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C9238()
{
  unint64_t result;

  result = qword_1F0369518;
  if (!qword_1F0369518)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TrackData, &type metadata for TrackData);
    atomic_store(result, (unint64_t *)&qword_1F0369518);
  }
  return result;
}

unint64_t sub_1DC4C927C()
{
  unint64_t result;

  result = qword_1F0369520;
  if (!qword_1F0369520)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TrackData, &type metadata for TrackData);
    atomic_store(result, (unint64_t *)&qword_1F0369520);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.trackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.trackData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementCompletedEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.viewData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C94B0()
{
  unint64_t result;

  result = qword_1F0369530;
  if (!qword_1F0369530)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementData, &type metadata for AudioEngagementData);
    atomic_store(result, (unint64_t *)&qword_1F0369530);
  }
  return result;
}

unint64_t sub_1DC4C94F4()
{
  unint64_t result;

  result = qword_1F0369538;
  if (!qword_1F0369538)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementData, &type metadata for AudioEngagementData);
    atomic_store(result, (unint64_t *)&qword_1F0369538);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.audioEngagementData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C9630()
{
  unint64_t result;

  result = qword_1EDB117C8;
  if (!qword_1EDB117C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for IssueData, &type metadata for IssueData);
    atomic_store(result, (unint64_t *)&qword_1EDB117C8);
  }
  return result;
}

unint64_t sub_1DC4C9674()
{
  unint64_t result;

  result = qword_1EDB117C0;
  if (!qword_1EDB117C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for IssueData, &type metadata for IssueData);
    atomic_store(result, (unint64_t *)&qword_1EDB117C0);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.issueData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C97B0()
{
  unint64_t result;

  result = qword_1F0369548;
  if (!qword_1F0369548)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PlaybackData, &type metadata for PlaybackData);
    atomic_store(result, (unint64_t *)&qword_1F0369548);
  }
  return result;
}

unint64_t sub_1DC4C97F4()
{
  unint64_t result;

  result = qword_1F0369550;
  if (!qword_1F0369550)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PlaybackData, &type metadata for PlaybackData);
    atomic_store(result, (unint64_t *)&qword_1F0369550);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.playbackData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4C9930()
{
  unint64_t result;

  result = qword_1EDB0F130;
  if (!qword_1EDB0F130)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistData, &type metadata for WatchlistData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F130);
  }
  return result;
}

unint64_t sub_1DC4C9974()
{
  unint64_t result;

  result = qword_1EDB0F128;
  if (!qword_1EDB0F128)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistData, &type metadata for WatchlistData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F128);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.activeWatchlistData.modify())()
{
  type metadata accessor for AudioEngagementCompletedEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioEngagementCompletedEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
}

uint64_t AudioEngagementCompletedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioEngagementCompletedEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AudioEngagementCompletedEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369680);
}

uint64_t AudioEngagementCompletedEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t sub_1DC4C9EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 44);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 20);
  v7 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 48));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

float AudioEngagementCompletedEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  uint64_t v1;
  float result;

  result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 52));
  *a1 = result;
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

__n128 AudioEngagementCompletedEvent.Model.init(eventData:newsArticleData:channelData:groupData:feedData:trackData:viewData:audioEngagementData:issueData:playbackData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __n128 *a5@<X4>, int *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, int *a11, char *a12)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  int v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 *v28;
  __n128 result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;
  char v51;
  int v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  v36 = *a2;
  v14 = *((_QWORD *)a2 + 2);
  v15 = *((_QWORD *)a2 + 3);
  v16 = *((_BYTE *)a2 + 32);
  v17 = *((_QWORD *)a2 + 5);
  v18 = *((_BYTE *)a2 + 48);
  v35 = *((_QWORD *)a2 + 7);
  v34 = *((_BYTE *)a2 + 64);
  v19 = *((_BYTE *)a2 + 65);
  v20 = *((_BYTE *)a2 + 66);
  v21 = *((_BYTE *)a2 + 67);
  v41 = *a3;
  v39 = *((_QWORD *)a3 + 3);
  v40 = *((_QWORD *)a3 + 2);
  v37 = *((_BYTE *)a3 + 33);
  v38 = *((_BYTE *)a3 + 32);
  v44 = a4[1];
  v45 = *a4;
  v42 = *((_QWORD *)a4 + 5);
  v43 = *((_QWORD *)a4 + 4);
  v47 = *a5;
  v46 = a5[1].n128_u64[0];
  v51 = *((_BYTE *)a6 + 4);
  v52 = *a6;
  v54 = a7[1];
  v55 = *a7;
  v53 = *((_WORD *)a7 + 8);
  v60 = a8[1];
  v61 = *a8;
  v58 = *((_DWORD *)a8 + 5);
  v59 = *((_BYTE *)a8 + 16);
  v22 = *a11;
  v48 = a8[3];
  v49 = a8[4];
  v50 = *((_WORD *)a8 + 20);
  v56 = *a10;
  v57 = a10[1];
  v62 = *a12;
  v23 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a1, v23);
  v24 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  v25 = a9 + v24[5];
  *(_QWORD *)(v25 + 16) = v14;
  *(_QWORD *)(v25 + 24) = v15;
  *(_BYTE *)(v25 + 32) = v16;
  *(_QWORD *)(v25 + 40) = v17;
  *(_OWORD *)v25 = v36;
  *(_BYTE *)(v25 + 48) = v18;
  *(_QWORD *)(v25 + 56) = v35;
  *(_BYTE *)(v25 + 64) = v34;
  *(_BYTE *)(v25 + 65) = v19;
  *(_BYTE *)(v25 + 66) = v20;
  *(_BYTE *)(v25 + 67) = v21;
  v26 = a9 + v24[6];
  *(_OWORD *)v26 = v41;
  *(_QWORD *)(v26 + 16) = v40;
  *(_QWORD *)(v26 + 24) = v39;
  *(_BYTE *)(v26 + 32) = v38;
  *(_BYTE *)(v26 + 33) = v37;
  v27 = a9 + v24[7];
  *(_OWORD *)v27 = v45;
  *(_OWORD *)(v27 + 16) = v44;
  *(_QWORD *)(v27 + 32) = v43;
  *(_QWORD *)(v27 + 40) = v42;
  v28 = (__n128 *)(a9 + v24[8]);
  result = v47;
  *v28 = v47;
  v28[1].n128_u64[0] = v46;
  v30 = a9 + v24[9];
  *(_DWORD *)v30 = v52;
  *(_BYTE *)(v30 + 4) = v51;
  v31 = a9 + v24[10];
  *(_QWORD *)v31 = v55;
  *(_QWORD *)(v31 + 8) = v54;
  *(_WORD *)(v31 + 16) = v53;
  v32 = a9 + v24[11];
  *(_QWORD *)v32 = v61;
  *(_QWORD *)(v32 + 8) = v60;
  *(_BYTE *)(v32 + 16) = v59;
  *(_DWORD *)(v32 + 20) = v58;
  *(_QWORD *)(v32 + 24) = v48;
  *(_QWORD *)(v32 + 32) = v49;
  *(_WORD *)(v32 + 40) = v50;
  v33 = (_QWORD *)(a9 + v24[12]);
  *v33 = v56;
  v33[1] = v57;
  *(_DWORD *)(a9 + v24[13]) = v22;
  *(_BYTE *)(a9 + v24[14]) = v62;
  return result;
}

uint64_t sub_1DC4CA320(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4CA358 + 4 * byte_1DC62C930[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4CA358()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC4CA37C()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC4CA39C()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC4CA3B0()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC4CA3EC()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC4CA434()
{
  return 0x7461446575737369;
}

uint64_t sub_1DC4CA448()
{
  unsigned __int8 *v0;

  return sub_1DC4CA320(*v0);
}

uint64_t sub_1DC4CA450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4CE20C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4CA474()
{
  sub_1DC4CA950();
  return sub_1DC62B604();
}

uint64_t sub_1DC4CA49C()
{
  sub_1DC4CA950();
  return sub_1DC62B610();
}

uint64_t AudioEngagementCompletedEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 *v27;
  __int128 v28;
  __int128 *v29;
  uint64_t v30;
  int *v31;
  int v32;
  __int128 *v33;
  __int16 v34;
  __int128 *v35;
  char v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;

  v3 = v1;
  sub_1DC4CB158(0, &qword_1F0369558, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v42 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4CA950();
  sub_1DC62B5F8();
  LOBYTE(v44) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v44 = v12;
    *(_QWORD *)&v45 = v13;
    *((_QWORD *)&v45 + 1) = v14;
    LOBYTE(v46) = v15;
    *((_QWORD *)&v46 + 1) = v16;
    v47 = v17;
    v48 = v18;
    v49 = v19;
    v50 = v20;
    v51 = v21;
    v52 = (char)v11;
    v43 = 1;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[6]);
    v23 = *v22;
    v24 = *((_QWORD *)v22 + 2);
    v25 = *((_QWORD *)v22 + 3);
    v26 = *((_BYTE *)v22 + 32);
    LOBYTE(v22) = *((_BYTE *)v22 + 33);
    v44 = v23;
    *(_QWORD *)&v45 = v24;
    *((_QWORD *)&v45 + 1) = v25;
    LOBYTE(v46) = v26;
    BYTE1(v46) = (_BYTE)v22;
    v43 = 2;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v27 = (__int128 *)(v3 + v10[7]);
    v28 = v27[1];
    v44 = *v27;
    v45 = v28;
    v46 = v27[2];
    v43 = 3;
    sub_1DC4C9004();
    sub_1DC62B490();
    v29 = (__int128 *)(v3 + v10[8]);
    v30 = *((_QWORD *)v29 + 2);
    v44 = *v29;
    *(_QWORD *)&v45 = v30;
    v43 = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v31 = (int *)(v3 + v10[9]);
    v32 = *v31;
    LOBYTE(v31) = *((_BYTE *)v31 + 4);
    LODWORD(v44) = v32;
    BYTE4(v44) = (_BYTE)v31;
    v43 = 5;
    sub_1DC4C927C();
    sub_1DC62B4E4();
    v33 = (__int128 *)(v3 + v10[10]);
    v34 = *((_WORD *)v33 + 8);
    v44 = *v33;
    LOWORD(v45) = v34;
    v43 = 6;
    sub_1DC4BEDF0();
    sub_1DC62B490();
    v35 = (__int128 *)(v3 + v10[11]);
    v36 = *((_BYTE *)v35 + 16);
    v37 = *((_DWORD *)v35 + 5);
    v38 = *((_QWORD *)v35 + 3);
    v39 = *((_QWORD *)v35 + 4);
    v40 = *((_WORD *)v35 + 20);
    v44 = *v35;
    LOBYTE(v45) = v36;
    DWORD1(v45) = v37;
    *((_QWORD *)&v45 + 1) = v38;
    *(_QWORD *)&v46 = v39;
    WORD4(v46) = v40;
    v43 = 7;
    sub_1DC4C94F4();
    sub_1DC62B4E4();
    v44 = *(_OWORD *)(v3 + v10[12]);
    v43 = 8;
    sub_1DC4C9674();
    sub_1DC62B490();
    LODWORD(v44) = *(_DWORD *)(v3 + v10[13]);
    v43 = 9;
    sub_1DC4C97F4();
    sub_1DC62B4E4();
    LOBYTE(v44) = *(_BYTE *)(v3 + v10[14]);
    v43 = 10;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4CA950()
{
  unint64_t result;

  result = qword_1F0369560;
  if (!qword_1F0369560)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62CC44, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369560);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  int *v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  char v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char v36;
  char *v37;
  __int16 v38;
  char *v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v45;
  char *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  int *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  char v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;

  v5 = sub_1DC62ABA8();
  v55 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4CB158(0, &qword_1F0369568, MEMORY[0x1E0DED048]);
  v54 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v52 - v10;
  v58 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  MEMORY[0x1E0C80A78](v58);
  v56 = a1;
  v57 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4CA950();
  sub_1DC62B5E0();
  if (v2)
  {
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    v59 = v2;
    return result;
  }
  v52 = a2;
  v53 = v9;
  LOBYTE(v60) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v13 = v5;
  v15 = v57;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v57, v7, v5);
  v69 = 1;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v16 = v58;
  v17 = v61;
  v18 = v62;
  v19 = *((_QWORD *)&v62 + 1);
  v20 = v63;
  v21 = v64;
  v22 = v65;
  v23 = v66;
  v24 = v67;
  v25 = v68;
  v26 = &v15[v58[5]];
  *(_OWORD *)v26 = v60;
  *((_OWORD *)v26 + 1) = v17;
  v26[32] = v18;
  *((_QWORD *)v26 + 5) = v19;
  v26[48] = v20;
  *((_QWORD *)v26 + 7) = v21;
  v26[64] = v22;
  v26[65] = v23;
  v26[66] = v24;
  v26[67] = v25;
  v69 = 2;
  sub_1DC4C8E40();
  sub_1DC62B454();
  v27 = v53;
  v28 = v61;
  v29 = v62;
  v30 = BYTE1(v62);
  v31 = &v15[v16[6]];
  *(_OWORD *)v31 = v60;
  *((_OWORD *)v31 + 1) = v28;
  v31[32] = v29;
  v31[33] = v30;
  v69 = 3;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v32 = &v15[v16[7]];
  v33 = v61;
  *(_OWORD *)v32 = v60;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v62;
  v69 = 4;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v34 = v61;
  v35 = &v15[v16[8]];
  *(_OWORD *)v35 = v60;
  *((_QWORD *)v35 + 2) = v34;
  v69 = 5;
  sub_1DC4C9238();
  sub_1DC62B454();
  v36 = BYTE4(v60);
  v37 = &v15[v16[9]];
  *(_DWORD *)v37 = v60;
  v37[4] = v36;
  v69 = 6;
  sub_1DC4BEDAC();
  sub_1DC62B400();
  v38 = v61;
  v39 = &v15[v16[10]];
  *(_OWORD *)v39 = v60;
  *((_WORD *)v39 + 8) = v38;
  v69 = 7;
  sub_1DC4C94B0();
  sub_1DC62B454();
  v59 = 0;
  v40 = v13;
  v41 = v61;
  v42 = DWORD1(v61);
  v43 = *((_QWORD *)&v61 + 1);
  v44 = v62;
  v45 = WORD4(v62);
  v46 = &v15[v16[11]];
  *(_OWORD *)v46 = v60;
  v46[16] = v41;
  *((_DWORD *)v46 + 5) = v42;
  *((_QWORD *)v46 + 3) = v43;
  *((_QWORD *)v46 + 4) = v44;
  *((_WORD *)v46 + 20) = v45;
  v69 = 8;
  sub_1DC4C9630();
  v47 = v59;
  sub_1DC62B400();
  v59 = v47;
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v54);
    v48 = 0;
  }
  else
  {
    *(_OWORD *)&v15[v16[12]] = v60;
    v69 = 9;
    sub_1DC4C97B0();
    v49 = v59;
    sub_1DC62B454();
    v59 = v49;
    if (!v49)
    {
      *(_DWORD *)&v57[v58[13]] = v60;
      v69 = 10;
      sub_1DC4C9930();
      v50 = v59;
      sub_1DC62B400();
      v59 = v50;
      if (!v50)
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v54);
        v51 = (uint64_t)v57;
        v57[v58[14]] = v60;
        sub_1DC4CB1E4(v51, v52);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
        return sub_1DC4CB228(v51);
      }
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v54);
    v48 = 1;
    v15 = v57;
    v16 = v58;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC4CB1B4(*(_QWORD *)&v15[v16[7]], *(_QWORD *)&v15[v16[7] + 8], *(_QWORD *)&v15[v16[7] + 16]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1DC4CB158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4CA950();
    v7 = a3(a1, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4CB1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC4CB1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4CB228(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4CB264@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementCompletedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4CB278(_QWORD *a1)
{
  return AudioEngagementCompletedEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4CB28C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368ED0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F03694E0, a1);
}

uint64_t sub_1DC4CB2B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368ED8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F03694F8, a1);
}

uint64_t sub_1DC4CB2D4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v11, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngagementCompletedEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for AudioEngagementCompletedEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementCompletedEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4CC9B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementCompletedEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4CCCBC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4CCFBC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioEngagementCompletedEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v10[48] = v11[48];
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    v14 = (char *)a1 + v9;
    v15 = (char *)a2 + v9;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *v19 = *v20;
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      *((_QWORD *)v19 + 2) = v21;
      *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
      v22 = *((_QWORD *)v20 + 5);
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 5) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v24;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    }
    v25 = a3[8];
    v26 = a3[9];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    *v27 = *v28;
    v29 = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
    *((_QWORD *)v27 + 2) = v29;
    v30 = (char *)a1 + v26;
    v31 = (char *)a2 + v26;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = a3[10];
    v33 = a3[11];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v34[16] = v35[16];
    v34[17] = v35[17];
    v37 = (char *)a1 + v33;
    v38 = (char *)a2 + v33;
    *(_OWORD *)v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *((_DWORD *)v37 + 5) = *((_DWORD *)v38 + 5);
    v39 = *((_QWORD *)v38 + 4);
    *((_QWORD *)v37 + 3) = *((_QWORD *)v38 + 3);
    *((_QWORD *)v37 + 4) = v39;
    v37[40] = v38[40];
    v37[41] = v38[41];
    v40 = a3[12];
    v41 = a3[13];
    v42 = (_QWORD *)((char *)a1 + v40);
    v43 = (_QWORD *)((char *)a2 + v40);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    *(_DWORD *)((char *)a1 + v41) = *(_DWORD *)((char *)a2 + v41);
    *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v13 = a1 + v8;
  v14 = a2 + v8;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *(_BYTE *)v18 = *(_BYTE *)v19;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    *(_QWORD *)(v18 + 16) = v20;
    *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
    v21 = *(_QWORD *)(v19 + 40);
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    *(_QWORD *)(v18 + 40) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  v23 = a3[8];
  v24 = a3[9];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  v28 = a1 + v24;
  v29 = a2 + v24;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  v34 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v34;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  *(_BYTE *)(v32 + 17) = *(_BYTE *)(v33 + 17);
  v35 = a1 + v31;
  v36 = a2 + v31;
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  *(_DWORD *)(v35 + 20) = *(_DWORD *)(v36 + 20);
  v37 = *(_QWORD *)(v36 + 32);
  *(_QWORD *)(v35 + 24) = *(_QWORD *)(v36 + 24);
  *(_QWORD *)(v35 + 32) = v37;
  *(_BYTE *)(v35 + 40) = *(_BYTE *)(v36 + 40);
  *(_BYTE *)(v35 + 41) = *(_BYTE *)(v36 + 41);
  v38 = a3[12];
  v39 = a3[13];
  v40 = (_QWORD *)(a1 + v38);
  v41 = (_QWORD *)(a2 + v38);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  *(_DWORD *)(a1 + v39) = *(_DWORD *)(a2 + v39);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_BYTE *)(v12 + 33) = *(_BYTE *)(v13 + 33);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (__int128 *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14 + 16);
  v18 = *(_QWORD *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
      *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
      *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
      *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
      *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v15);
      v20 = v16[1];
      v19 = v16[2];
      *(_OWORD *)v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_OWORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
    *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
    *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
    *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
    *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
    *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v16;
    v22 = v16[2];
    *(_OWORD *)(v15 + 16) = v16[1];
    *(_OWORD *)(v15 + 32) = v22;
    *(_OWORD *)v15 = v21;
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)(a2 + v29);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  *(_BYTE *)(v30 + 17) = *(_BYTE *)(v31 + 17);
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(a2 + v32 + 8);
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(a2 + v32 + 16);
  *(_DWORD *)(v33 + 20) = *(_DWORD *)(a2 + v32 + 20);
  *(_QWORD *)(v33 + 24) = *(_QWORD *)(a2 + v32 + 24);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(a2 + v32 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 40) = *(_BYTE *)(v34 + 40);
  *(_BYTE *)(v33 + 41) = *(_BYTE *)(v34 + 41);
  v35 = a3[12];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1DC4CDAF4(uint64_t a1)
{
  destroy for GroupData();
  return a1;
}

uint64_t initializeWithTake for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = a1 + v8;
  v14 = a2 + v8;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_OWORD *)(a1 + v16);
  v19 = (__int128 *)(a2 + v16);
  v20 = v19[2];
  v21 = *v19;
  v18[1] = v19[1];
  v18[2] = v20;
  *v18 = v21;
  v22 = a1 + v17;
  v23 = (__int128 *)(a2 + v17);
  v24 = *v23;
  *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
  *(_OWORD *)v22 = v24;
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_WORD *)(v29 + 16) = *(_WORD *)(v30 + 16);
  v31 = a3[11];
  v32 = a3[12];
  v33 = (_OWORD *)(a1 + v31);
  v34 = (_OWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  *(_OWORD *)((char *)v33 + 26) = *(_OWORD *)((char *)v34 + 26);
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  v36 = a3[14];
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t assignWithTake for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_BYTE *)(v13 + 33) = *(_BYTE *)(v14 + 33);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (!*(_QWORD *)(a1 + v17 + 16))
    goto LABEL_5;
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    sub_1DC4CDAF4(v18);
LABEL_5:
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v18 = *(_BYTE *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  v21 = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[9];
  v29 = a3[10];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  v34 = *(_QWORD *)(a2 + v29);
  v35 = *(_QWORD *)(a2 + v29 + 8);
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 8) = v35;
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  v36 = a3[11];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_OWORD *)v37 = *(_OWORD *)(a2 + v36);
  *(_BYTE *)(v37 + 16) = *(_BYTE *)(a2 + v36 + 16);
  *(_DWORD *)(v37 + 20) = *(_DWORD *)(a2 + v36 + 20);
  v39 = *(_QWORD *)(a2 + v36 + 32);
  *(_QWORD *)(v37 + 24) = *(_QWORD *)(a2 + v36 + 24);
  *(_QWORD *)(v37 + 32) = v39;
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 40) = *(_WORD *)(v38 + 40);
  v40 = a3[12];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[14];
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v45) = *(_BYTE *)(a2 + v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementCompletedEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4CDE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementCompletedEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4CDF1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4CDF98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioEngagementCompletedEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1DC4CE0B4 + 4 * byte_1DC62C940[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1DC4CE0E8 + 4 * byte_1DC62C93B[v4]))();
}

uint64_t sub_1DC4CE0E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4CE0F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4CE0F8);
  return result;
}

uint64_t sub_1DC4CE104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4CE10CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1DC4CE110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4CE118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementCompletedEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys;
}

unint64_t sub_1DC4CE138()
{
  unint64_t result;

  result = qword_1F03696E0;
  if (!qword_1F03696E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62CC1C, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03696E0);
  }
  return result;
}

unint64_t sub_1DC4CE180()
{
  unint64_t result;

  result = qword_1F03696E8;
  if (!qword_1F03696E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62CB8C, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03696E8);
  }
  return result;
}

unint64_t sub_1DC4CE1C8()
{
  unint64_t result;

  result = qword_1F03696F0;
  if (!qword_1F03696F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62CBB4, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03696F0);
  }
  return result;
}

uint64_t sub_1DC4CE20C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BF90 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

StocksAnalytics::WatchlistType_optional __swiftcall WatchlistType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  StocksAnalytics::WatchlistType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t WatchlistType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D6F74737563;
  else
    return 0x746C7561666564;
}

uint64_t sub_1DC4CE778(char *a1, char *a2)
{
  return sub_1DC5456B0(*a1, *a2);
}

unint64_t sub_1DC4CE788()
{
  unint64_t result;

  result = qword_1F03696F8;
  if (!qword_1F03696F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistType, &type metadata for WatchlistType);
    atomic_store(result, (unint64_t *)&qword_1F03696F8);
  }
  return result;
}

uint64_t sub_1DC4CE7CC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4CE848()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4CE8A0()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::WatchlistType_optional sub_1DC4CE918(Swift::String *a1)
{
  return WatchlistType.init(rawValue:)(*a1);
}

uint64_t sub_1DC4CE924()
{
  sub_1DC4B4684();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for WatchlistType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC4CE9CC + 4 * byte_1DC62CC99[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC4CEA00 + 4 * byte_1DC62CC94[v4]))();
}

uint64_t sub_1DC4CEA00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4CEA08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4CEA10);
  return result;
}

uint64_t sub_1DC4CEA1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4CEA24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC4CEA28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4CEA30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1DC4CEA3C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistType()
{
  return &type metadata for WatchlistType;
}

uint64_t sub_1DC4CEA58(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0369700, MEMORY[0x1E0CF8078]);
}

uint64_t static ShareSymbolEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368EE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369700, a1);
}

uint64_t sub_1DC4CEA98(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0369718, MEMORY[0x1E0CF8380]);
}

uint64_t static ShareSymbolEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368EE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369718, a1);
}

uint64_t ShareSymbolEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ShareSymbolEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ShareSymbolEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ShareSymbolEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ShareSymbolEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F03697A0);
}

uint64_t ShareSymbolEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareSymbolEvent.symbolData.modify())()
{
  type metadata accessor for ShareSymbolEvent(0);
  return nullsub_1;
}

uint64_t ShareSymbolEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4CECA0()
{
  unint64_t result;

  result = qword_1EDB12198;
  if (!qword_1EDB12198)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ActionData, &type metadata for ActionData);
    atomic_store(result, (unint64_t *)&qword_1EDB12198);
  }
  return result;
}

unint64_t sub_1DC4CECE4()
{
  unint64_t result;

  result = qword_1EDB121A0;
  if (!qword_1EDB121A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ActionData, &type metadata for ActionData);
    atomic_store(result, (unint64_t *)&qword_1EDB121A0);
  }
  return result;
}

uint64_t ShareSymbolEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareSymbolEvent.actionData.modify())()
{
  type metadata accessor for ShareSymbolEvent(0);
  return nullsub_1;
}

uint64_t ShareSymbolEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for ShareSymbolEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t ShareSymbolEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ShareSymbolEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ShareSymbolEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369838);
}

uint64_t ShareSymbolEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShareSymbolEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ShareSymbolEvent.Model.init(eventData:symbolData:actionData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  v9 = a2[3];
  v10 = a2[4];
  v11 = *a3;
  v12 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a4, a1, v12);
  result = type metadata accessor for ShareSymbolEvent.Model(0);
  v14 = a4 + *(int *)(result + 20);
  *(_QWORD *)v14 = v6;
  *(_QWORD *)(v14 + 8) = v7;
  *(_BYTE *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = v9;
  *(_QWORD *)(v14 + 32) = v10;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = v11;
  return result;
}

uint64_t sub_1DC4CEFC8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x61446C6F626D7973;
  if (*v0 != 1)
    v1 = 0x61446E6F69746361;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC4CF030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4D06E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4CF054(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DC4CF060()
{
  sub_1DC4CF274();
  return sub_1DC62B604();
}

uint64_t sub_1DC4CF088()
{
  sub_1DC4CF274();
  return sub_1DC62B610();
}

uint64_t ShareSymbolEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  sub_1DC4CF5E0(0, &qword_1F0369730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4CF274();
  sub_1DC62B5F8();
  LOBYTE(v19) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for ShareSymbolEvent.Model(0);
    v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v16 = v11[3];
    v15 = v11[4];
    v19 = v12;
    v20 = v13;
    v21 = v14;
    v22 = v16;
    v23 = v15;
    HIBYTE(v18) = 1;
    sub_1DC4C336C();
    sub_1DC62B4E4();
    LOBYTE(v19) = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v18) = 2;
    sub_1DC4CECE4();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4CF274()
{
  unint64_t result;

  result = qword_1F0369738;
  if (!qword_1F0369738)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62CF8C, &type metadata for ShareSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369738);
  }
  return result;
}

uint64_t ShareSymbolEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v23 = a2;
  v3 = sub_1DC62ABA8();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4CF5E0(0, &qword_1F0369740, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for ShareSymbolEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4CF274();
  v27 = v8;
  v12 = v28;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = v9;
  v13 = (uint64_t)a1;
  v14 = v25;
  LOBYTE(v29) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v26, v3);
  v34 = 1;
  sub_1DC4C3328();
  sub_1DC62B454();
  v15 = v30;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  v19 = v28;
  v20 = &v11[*(int *)(v28 + 20)];
  *(_QWORD *)v20 = v29;
  *((_QWORD *)v20 + 1) = v15;
  v20[16] = v16;
  *((_QWORD *)v20 + 3) = v17;
  *((_QWORD *)v20 + 4) = v18;
  v34 = 2;
  sub_1DC4CECA0();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v24);
  v11[*(int *)(v19 + 24)] = v29;
  sub_1DC4CF63C((uint64_t)v11, v23);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1DC4CF680((uint64_t)v11);
}

void sub_1DC4CF5E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4CF274();
    v7 = a3(a1, &type metadata for ShareSymbolEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4CF63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4CF680(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShareSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4CF6BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareSymbolEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4CF6D0(_QWORD *a1)
{
  return ShareSymbolEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4CF6E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368EE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369700, a1);
}

uint64_t sub_1DC4CF708@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368EE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369718, a1);
}

uint64_t sub_1DC4CF72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareSymbolEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ShareSymbolEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareSymbolEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4CFDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ShareSymbolEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4CFEA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4CFF80()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ShareSymbolEvent.Model(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[16] = v11[16];
    v13 = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 4) = v13;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ShareSymbolEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = v12;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareSymbolEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D03BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareSymbolEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D0448(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4D04C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShareSymbolEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4D058C + 4 * byte_1DC62CDB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4D05C0 + 4 * byte_1DC62CDB0[v4]))();
}

uint64_t sub_1DC4D05C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D05C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4D05D0);
  return result;
}

uint64_t sub_1DC4D05DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4D05E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4D05E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D05F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShareSymbolEvent.Model.CodingKeys()
{
  return &type metadata for ShareSymbolEvent.Model.CodingKeys;
}

unint64_t sub_1DC4D0610()
{
  unint64_t result;

  result = qword_1F0369878;
  if (!qword_1F0369878)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62CF64, &type metadata for ShareSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369878);
  }
  return result;
}

unint64_t sub_1DC4D0658()
{
  unint64_t result;

  result = qword_1F0369880;
  if (!qword_1F0369880)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62CED4, &type metadata for ShareSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369880);
  }
  return result;
}

unint64_t sub_1DC4D06A0()
{
  unint64_t result;

  result = qword_1F0369888;
  if (!qword_1F0369888)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62CEFC, &type metadata for ShareSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369888);
  }
  return result;
}

uint64_t sub_1DC4D06E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void AdStateData.state.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdStateData.state.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdStateData.state.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdStateData __swiftcall AdStateData.init(state:)(StocksAnalytics::AdStateData state)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)state.state;
  return state;
}

uint64_t sub_1DC4D0890()
{
  return 1;
}

uint64_t sub_1DC4D0898()
{
  sub_1DC62B5B0();
  sub_1DC62B5BC();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4D08D8()
{
  return sub_1DC62B5BC();
}

uint64_t sub_1DC4D08FC()
{
  sub_1DC62B5B0();
  sub_1DC62B5BC();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4D0938()
{
  return 0x6574617473;
}

uint64_t sub_1DC4D094C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC4D09D8()
{
  sub_1DC4D0B2C();
  return sub_1DC62B604();
}

uint64_t sub_1DC4D0A00()
{
  sub_1DC4D0B2C();
  return sub_1DC62B610();
}

uint64_t AdStateData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC4D0CEC(0, &qword_1EDB12180, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D0B2C();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC4D0B70();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC4D0B2C()
{
  unint64_t result;

  result = qword_1EDB12028;
  if (!qword_1EDB12028)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D154, &type metadata for AdStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12028);
  }
  return result;
}

unint64_t sub_1DC4D0B70()
{
  unint64_t result;

  result = qword_1EDB12168;
  if (!qword_1EDB12168)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdState, &type metadata for AdState);
    atomic_store(result, (unint64_t *)&qword_1EDB12168);
  }
  return result;
}

uint64_t AdStateData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC4D0CEC(0, &qword_1F0369890, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D0B2C();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC4D0D48();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4D0CEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4D0B2C();
    v7 = a3(a1, &type metadata for AdStateData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4D0D48()
{
  unint64_t result;

  result = qword_1F0369898;
  if (!qword_1F0369898)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdState, &type metadata for AdState);
    atomic_store(result, (unint64_t *)&qword_1F0369898);
  }
  return result;
}

unint64_t sub_1DC4D0D90()
{
  unint64_t result;

  result = qword_1EDB12010;
  if (!qword_1EDB12010)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdStateData, &type metadata for AdStateData);
    atomic_store(result, (unint64_t *)&qword_1EDB12010);
  }
  return result;
}

unint64_t sub_1DC4D0DD8()
{
  unint64_t result;

  result = qword_1EDB12040;
  if (!qword_1EDB12040)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdStateData, &type metadata for AdStateData);
    atomic_store(result, (unint64_t *)&qword_1EDB12040);
  }
  return result;
}

uint64_t sub_1DC4D0E1C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdStateData.init(from:)(a1, a2);
}

uint64_t sub_1DC4D0E30(_QWORD *a1)
{
  return AdStateData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for FeedType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AdStateData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC4D0F20 + 4 * byte_1DC62CFE1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC4D0F54 + 4 * byte_1DC62CFDC[v4]))();
}

uint64_t sub_1DC4D0F54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D0F5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4D0F64);
  return result;
}

uint64_t sub_1DC4D0F70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4D0F78);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC4D0F7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D0F84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdStateData()
{
  return &type metadata for AdStateData;
}

uint64_t storeEnumTagSinglePayload for AdStateData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4D0FE0 + 4 * byte_1DC62CFE6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4D1000 + 4 * byte_1DC62CFEB[v4]))();
}

_BYTE *sub_1DC4D0FE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4D1000(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4D1008(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4D1010(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4D1018(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4D1020(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1DC4D102C()
{
  return 0;
}

ValueMetadata *type metadata accessor for AdStateData.CodingKeys()
{
  return &type metadata for AdStateData.CodingKeys;
}

unint64_t sub_1DC4D1048()
{
  unint64_t result;

  result = qword_1F03698A0;
  if (!qword_1F03698A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D12C, &type metadata for AdStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03698A0);
  }
  return result;
}

unint64_t sub_1DC4D1090()
{
  unint64_t result;

  result = qword_1EDB12038;
  if (!qword_1EDB12038)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D09C, &type metadata for AdStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12038);
  }
  return result;
}

unint64_t sub_1DC4D10D8()
{
  unint64_t result;

  result = qword_1EDB12030;
  if (!qword_1EDB12030)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D0C4, &type metadata for AdStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12030);
  }
  return result;
}

uint64_t sub_1DC4D111C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F03698A8, MEMORY[0x1E0CF8078]);
}

uint64_t static EditWatchListExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368EF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F03698A8, a1);
}

uint64_t sub_1DC4D115C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F03698C0, MEMORY[0x1E0CF8380]);
}

uint64_t static EditWatchListExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368EF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F03698C0, a1);
}

uint64_t EditWatchListExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t EditWatchListExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EditWatchListExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EditWatchListExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for EditWatchListExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for EditWatchListExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369948);
}

uint64_t EditWatchListExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EditWatchListExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EditWatchListExposureEvent.timedData.modify())()
{
  type metadata accessor for EditWatchListExposureEvent(0);
  return nullsub_1;
}

uint64_t EditWatchListExposureEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EditWatchListExposureEvent(0) + 24);
  sub_1DC4D12D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_1DC4D12D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E810)
  {
    sub_1DC4BF55C();
    sub_1DC4BF5A0();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E810);
  }
}

uint64_t EditWatchListExposureEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EditWatchListExposureEvent(0) + 24);
  sub_1DC4D12D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EditWatchListExposureEvent.watchedSymbolListData.modify())()
{
  type metadata accessor for EditWatchListExposureEvent(0);
  return nullsub_1;
}

uint64_t EditWatchListExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for EditWatchListExposureEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1DC4D12D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t EditWatchListExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EditWatchListExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for EditWatchListExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for EditWatchListExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F03699E0);
}

uint64_t EditWatchListExposureEvent.Model.watchedSymbolListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for EditWatchListExposureEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t EditWatchListExposureEvent.Model.init(eventData:timedData:watchedSymbolListData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a3;
  v8 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for EditWatchListExposureEvent.Model(0);
  v10 = a4 + *(int *)(v9 + 20);
  v11 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  *(_QWORD *)(a4 + *(int *)(v9 + 24)) = v7;
  return result;
}

uint64_t sub_1DC4D1544()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x74614464656D6974;
  if (*v0 != 1)
    v1 = 0xD000000000000015;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC4D15A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4D2AC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4D15C8()
{
  sub_1DC4D17EC();
  return sub_1DC62B604();
}

uint64_t sub_1DC4D15F0()
{
  sub_1DC4D17EC();
  return sub_1DC62B610();
}

uint64_t EditWatchListExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  char v14;
  char v15;

  v3 = v1;
  sub_1DC4D1BA0(0, &qword_1F03698D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D17EC();
  sub_1DC62B5F8();
  v15 = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for EditWatchListExposureEvent.Model(0);
    v14 = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v13 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_1DC4BF5A0();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4D17EC()
{
  unint64_t result;

  result = qword_1F03698E0;
  if (!qword_1F03698E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D364, &type metadata for EditWatchListExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03698E0);
  }
  return result;
}

uint64_t EditWatchListExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;

  v22 = a2;
  v25 = sub_1DC62ABC0();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v26 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4D1BA0(0, &qword_1F03698E8, MEMORY[0x1E0DED048]);
  v28 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  v10 = type metadata accessor for EditWatchListExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D17EC();
  v29 = v9;
  v13 = (uint64_t)v30;
  sub_1DC62B5E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = v4;
  v21 = v7;
  v14 = (uint64_t)v12;
  v30 = a1;
  v16 = v24;
  v15 = v25;
  v34 = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v26;
  v18 = v27;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v14, v17, v18);
  v33 = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v14 + *(int *)(v10 + 20), v16, v15);
  v32 = 2;
  sub_1DC4BF55C();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v29, v28);
  *(_QWORD *)(v14 + *(int *)(v10 + 24)) = v31;
  sub_1DC4D1BFC(v14, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_1DC4D1C40(v14);
}

void sub_1DC4D1BA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4D17EC();
    v7 = a3(a1, &type metadata for EditWatchListExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4D1BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditWatchListExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4D1C40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EditWatchListExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4D1C7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditWatchListExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4D1C90(_QWORD *a1)
{
  return EditWatchListExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4D1CA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368EF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F03698A8, a1);
}

uint64_t sub_1DC4D1CC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368EF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F03698C0, a1);
}

uint64_t sub_1DC4D1CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1DC4D12D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditWatchListExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4D12D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for EditWatchListExposureEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1DC4D12D0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4D12D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4D12D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4D12D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4D12D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditWatchListExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D21BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1DC4D12D0();
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for EditWatchListExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D2260(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1DC4D12D0();
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4D2300()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4D12D0();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EditWatchListExposureEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditWatchListExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D2738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EditWatchListExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D27EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4D2890()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EditWatchListExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4D296C + 4 * byte_1DC62D1B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4D29A0 + 4 * byte_1DC62D1B0[v4]))();
}

uint64_t sub_1DC4D29A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D29A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4D29B0);
  return result;
}

uint64_t sub_1DC4D29BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4D29C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4D29C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D29D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditWatchListExposureEvent.Model.CodingKeys()
{
  return &type metadata for EditWatchListExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC4D29F0()
{
  unint64_t result;

  result = qword_1F0369A20;
  if (!qword_1F0369A20)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D33C, &type metadata for EditWatchListExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369A20);
  }
  return result;
}

unint64_t sub_1DC4D2A38()
{
  unint64_t result;

  result = qword_1F0369A28;
  if (!qword_1F0369A28)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D2AC, &type metadata for EditWatchListExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369A28);
  }
  return result;
}

unint64_t sub_1DC4D2A80()
{
  unint64_t result;

  result = qword_1F0369A30;
  if (!qword_1F0369A30)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D2D4, &type metadata for EditWatchListExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369A30);
  }
  return result;
}

uint64_t sub_1DC4D2AC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BFD0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

StocksAnalytics::CellularRadioAccessTechnology_optional __swiftcall CellularRadioAccessTechnology.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::CellularRadioAccessTechnology_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CellularRadioAccessTechnology.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4D2CB4 + 4 * byte_1DC62D3C0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4D2CB4()
{
  return 1768319351;
}

uint64_t sub_1DC4D2CC4()
{
  return 1851881335;
}

uint64_t sub_1DC4D2CD4()
{
  return 0x67356E617777;
}

uint64_t sub_1DC4D2CE8()
{
  return 0x6863616552746F6ELL;
}

void sub_1DC4D2D08(char *a1)
{
  sub_1DC54262C(*a1);
}

unint64_t sub_1DC4D2D18()
{
  unint64_t result;

  result = qword_1F0369A38;
  if (!qword_1F0369A38)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CellularRadioAccessTechnology, &type metadata for CellularRadioAccessTechnology);
    atomic_store(result, (unint64_t *)&qword_1F0369A38);
  }
  return result;
}

void sub_1DC4D2D5C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC4D2DA8()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC4D2E24()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC4D2E60()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC4D2EC8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC4D2F10()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::CellularRadioAccessTechnology_optional sub_1DC4D2F8C(Swift::String *a1)
{
  return CellularRadioAccessTechnology.init(rawValue:)(*a1);
}

uint64_t sub_1DC4D2F98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4D2FC8 + 4 * byte_1DC62D3D4[*v0]))();
}

void sub_1DC4D2FC8(_QWORD *a1@<X8>)
{
  *a1 = 1768319351;
  a1[1] = 0xE400000000000000;
}

void sub_1DC4D2FDC(_QWORD *a1@<X8>)
{
  *a1 = 1851881335;
  a1[1] = 0xE400000000000000;
}

void sub_1DC4D2FF0(_QWORD *a1@<X8>)
{
  *a1 = 0x67356E617777;
  a1[1] = 0xE600000000000000;
}

void sub_1DC4D3008(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "notReachable");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1DC4D302C()
{
  sub_1DC4D31A0();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4D3088()
{
  sub_1DC4D31A0();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for CellularRadioAccessTechnology(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC4D3120 + 4 * byte_1DC62D3DE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC4D3154 + 4 * byte_1DC62D3D9[v4]))();
}

uint64_t sub_1DC4D3154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D315C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4D3164);
  return result;
}

uint64_t sub_1DC4D3170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4D3178);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC4D317C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D3184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CellularRadioAccessTechnology()
{
  return &type metadata for CellularRadioAccessTechnology;
}

unint64_t sub_1DC4D31A0()
{
  unint64_t result;

  result = qword_1EDB11100;
  if (!qword_1EDB11100)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CellularRadioAccessTechnology, &type metadata for CellularRadioAccessTechnology);
    atomic_store(result, (unint64_t *)&qword_1EDB11100);
  }
  return result;
}

uint64_t sub_1DC4D31E4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0369A40, MEMORY[0x1E0CF8078]);
}

uint64_t static UnwatchSymbolEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F00, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369A40, a1);
}

uint64_t sub_1DC4D3224(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0369A58, MEMORY[0x1E0CF8380]);
}

uint64_t static UnwatchSymbolEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F08, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369A58, a1);
}

uint64_t UnwatchSymbolEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t UnwatchSymbolEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UnwatchSymbolEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UnwatchSymbolEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for UnwatchSymbolEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369AE0);
}

uint64_t UnwatchSymbolEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnwatchSymbolEvent.symbolData.modify())()
{
  type metadata accessor for UnwatchSymbolEvent(0);
  return nullsub_1;
}

uint64_t UnwatchSymbolEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnwatchSymbolEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnwatchSymbolEvent.watchedSymbolListData.modify())()
{
  type metadata accessor for UnwatchSymbolEvent(0);
  return nullsub_1;
}

uint64_t UnwatchSymbolEvent.watchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t UnwatchSymbolEvent.watchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UnwatchSymbolEvent.watchlistData.modify())()
{
  type metadata accessor for UnwatchSymbolEvent(0);
  return nullsub_1;
}

uint64_t UnwatchSymbolEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for UnwatchSymbolEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t UnwatchSymbolEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t UnwatchSymbolEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UnwatchSymbolEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369B78);
}

uint64_t UnwatchSymbolEvent.Model.watchedSymbolListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t UnwatchSymbolEvent.Model.watchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UnwatchSymbolEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

int *UnwatchSymbolEvent.Model.init(eventData:symbolData:watchedSymbolListData:watchlistData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int *result;
  uint64_t v16;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_BYTE *)a2 + 16);
  v10 = a2[3];
  v11 = a2[4];
  v12 = *a3;
  v13 = *a4;
  v14 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  result = (int *)type metadata accessor for UnwatchSymbolEvent.Model(0);
  v16 = a5 + result[5];
  *(_QWORD *)v16 = v7;
  *(_QWORD *)(v16 + 8) = v8;
  *(_BYTE *)(v16 + 16) = v9;
  *(_QWORD *)(v16 + 24) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(a5 + result[6]) = v12;
  *(_BYTE *)(a5 + result[7]) = v13;
  return result;
}

uint64_t sub_1DC4D3850()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4D3884 + 4 * byte_1DC62D520[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4D3884()
{
  return 0x61446C6F626D7973;
}

unint64_t sub_1DC4D38A0()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC4D38BC()
{
  return 0x73696C6863746177;
}

uint64_t sub_1DC4D38E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4D53A0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4D3904(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DC4D3910()
{
  sub_1DC4D3B68();
  return sub_1DC62B604();
}

uint64_t sub_1DC4D3938()
{
  sub_1DC4D3B68();
  return sub_1DC62B610();
}

uint64_t UnwatchSymbolEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  sub_1DC4D3F3C(0, &qword_1F0369A70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D3B68();
  sub_1DC62B5F8();
  LOBYTE(v19) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for UnwatchSymbolEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v16 = v11[3];
    v15 = v11[4];
    v19 = v12;
    v20 = v13;
    v21 = v14;
    v22 = v16;
    v23 = v15;
    HIBYTE(v18) = 1;
    sub_1DC4C336C();
    sub_1DC62B4E4();
    v19 = *(_QWORD *)(v3 + v10[6]);
    HIBYTE(v18) = 2;
    sub_1DC4BF5A0();
    sub_1DC62B4E4();
    LOBYTE(v19) = *(_BYTE *)(v3 + v10[7]);
    HIBYTE(v18) = 3;
    sub_1DC4C9974();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4D3B68()
{
  unint64_t result;

  result = qword_1F0369A78;
  if (!qword_1F0369A78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D714, &type metadata for UnwatchSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369A78);
  }
  return result;
}

uint64_t UnwatchSymbolEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v23 = a2;
  v3 = sub_1DC62ABA8();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4D3F3C(0, &qword_1F0369A80, MEMORY[0x1E0DED048]);
  v25 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = (int *)type metadata accessor for UnwatchSymbolEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D3B68();
  v27 = v8;
  v12 = (uint64_t)v28;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v28 = a1;
  v14 = v24;
  LOBYTE(v29) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v25;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v26, v3);
  v34 = 1;
  sub_1DC4C3328();
  sub_1DC62B454();
  v16 = v30;
  v17 = v31;
  v18 = v32;
  v19 = v33;
  v20 = &v11[v9[5]];
  *(_QWORD *)v20 = v29;
  *((_QWORD *)v20 + 1) = v16;
  v20[16] = v17;
  *((_QWORD *)v20 + 3) = v18;
  *((_QWORD *)v20 + 4) = v19;
  v34 = 2;
  sub_1DC4BF55C();
  sub_1DC62B454();
  *(_QWORD *)&v11[v9[6]] = v29;
  v34 = 3;
  sub_1DC4C9930();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v15);
  v11[v9[7]] = v29;
  sub_1DC4D3F98((uint64_t)v11, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1DC4D3FDC((uint64_t)v11);
}

void sub_1DC4D3F3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4D3B68();
    v7 = a3(a1, &type metadata for UnwatchSymbolEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4D3F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnwatchSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4D3FDC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnwatchSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4D4018@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UnwatchSymbolEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4D402C(_QWORD *a1)
{
  return UnwatchSymbolEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4D4040@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F00, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369A40, a1);
}

uint64_t sub_1DC4D4064@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F08, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369A58, a1);
}

uint64_t sub_1DC4D4088@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnwatchSymbolEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for UnwatchSymbolEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnwatchSymbolEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D4920(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for UnwatchSymbolEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D4A48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4D4B6C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for UnwatchSymbolEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[16] = v11[16];
    v13 = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 4) = v13;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UnwatchSymbolEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnwatchSymbolEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D506C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UnwatchSymbolEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D50F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4D5174()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UnwatchSymbolEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC4D5248 + 4 * byte_1DC62D529[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC4D527C + 4 * byte_1DC62D524[v4]))();
}

uint64_t sub_1DC4D527C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D5284(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4D528CLL);
  return result;
}

uint64_t sub_1DC4D5298(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4D52A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC4D52A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D52AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnwatchSymbolEvent.Model.CodingKeys()
{
  return &type metadata for UnwatchSymbolEvent.Model.CodingKeys;
}

unint64_t sub_1DC4D52CC()
{
  unint64_t result;

  result = qword_1F0369BB8;
  if (!qword_1F0369BB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D6EC, &type metadata for UnwatchSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369BB8);
  }
  return result;
}

unint64_t sub_1DC4D5314()
{
  unint64_t result;

  result = qword_1F0369BC0;
  if (!qword_1F0369BC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D65C, &type metadata for UnwatchSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369BC0);
  }
  return result;
}

unint64_t sub_1DC4D535C()
{
  unint64_t result;

  result = qword_1F0369BC8;
  if (!qword_1F0369BC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D684, &type metadata for UnwatchSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369BC8);
  }
  return result;
}

uint64_t sub_1DC4D53A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BFD0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73696C6863746177 && a2 == 0xED00006174614474)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

StocksAnalytics::AdJournalEntryError_optional __swiftcall AdJournalEntryError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AdJournalEntryError_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdJournalEntryError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1DC4D5618 + 4 * byte_1DC62D770[*v0]))(0xD000000000000015, 0x80000001DC64B160);
}

uint64_t sub_1DC4D5618()
{
  return 0x6F5464656C696166;
}

uint64_t sub_1DC4D563C()
{
  return 0x4674736575716572;
}

uint64_t sub_1DC4D5660()
{
  return 0x726568746FLL;
}

void sub_1DC4D5674(char *a1)
{
  sub_1DC543FD0(*a1);
}

unint64_t sub_1DC4D5684()
{
  unint64_t result;

  result = qword_1F0369BD0;
  if (!qword_1F0369BD0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryError, &type metadata for AdJournalEntryError);
    atomic_store(result, (unint64_t *)&qword_1F0369BD0);
  }
  return result;
}

void sub_1DC4D56C8()
{
  char *v0;

  sub_1DC6019A0(*v0);
}

void sub_1DC4D56D0()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC4D5710()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC4D5780(uint64_t a1)
{
  char *v1;

  sub_1DC603560(a1, *v1);
}

StocksAnalytics::AdJournalEntryError_optional sub_1DC4D5788(Swift::String *a1)
{
  return AdJournalEntryError.init(rawValue:)(*a1);
}

uint64_t sub_1DC4D5794()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4D57C8 + 4 * byte_1DC62D778[*v0]))();
}

void sub_1DC4D57C8(char *a1@<X8>)
{
  strcpy(a1, "failedToRender");
  a1[15] = -18;
}

void sub_1DC4D57F0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "requestFailed");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1DC4D5818(_QWORD *a1@<X8>)
{
  *a1 = 0x726568746FLL;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1DC4D5830()
{
  sub_1DC4D59A4();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4D588C()
{
  sub_1DC4D59A4();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC4D5924 + 4 * byte_1DC62D781[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC4D5958 + 4 * byte_1DC62D77C[v4]))();
}

uint64_t sub_1DC4D5958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D5960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4D5968);
  return result;
}

uint64_t sub_1DC4D5974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4D597CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC4D5980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4D5988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryError()
{
  return &type metadata for AdJournalEntryError;
}

unint64_t sub_1DC4D59A4()
{
  unint64_t result;

  result = qword_1EDB0FF50;
  if (!qword_1EDB0FF50)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryError, &type metadata for AdJournalEntryError);
    atomic_store(result, (unint64_t *)&qword_1EDB0FF50);
  }
  return result;
}

uint64_t sub_1DC4D59E8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0369BD8, MEMORY[0x1E0CF8078]);
}

uint64_t static DeleteWatchlistEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F10, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369BD8, a1);
}

uint64_t sub_1DC4D5A28(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0369BF0, MEMORY[0x1E0CF8380]);
}

uint64_t static DeleteWatchlistEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F18, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369BF0, a1);
}

uint64_t DeleteWatchlistEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t DeleteWatchlistEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DeleteWatchlistEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t DeleteWatchlistEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t DeleteWatchlistEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t DeleteWatchlistEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1DC4D5B48()
{
  return 0x746144746E657665;
}

uint64_t sub_1DC4D5B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC4D5C04()
{
  sub_1DC4D5D64();
  return sub_1DC62B604();
}

uint64_t sub_1DC4D5C2C()
{
  sub_1DC4D5D64();
  return sub_1DC62B610();
}

uint64_t DeleteWatchlistEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4D5F80(0, &qword_1F0369C08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D5D64();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC4D5D64()
{
  unint64_t result;

  result = qword_1F0369C10;
  if (!qword_1F0369C10)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62DA40, &type metadata for DeleteWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369C10);
  }
  return result;
}

uint64_t DeleteWatchlistEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4D5F80(0, &qword_1F0369C18, MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for DeleteWatchlistEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D5D64();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    v15 = v19;
    v14 = v20;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_1DC4D5FF0(v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4D5F80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4D5D64();
    v7 = a3(a1, &type metadata for DeleteWatchlistEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for DeleteWatchlistEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369D08);
}

uint64_t sub_1DC4D5FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeleteWatchlistEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4D6034@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DeleteWatchlistEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4D6048(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4D5F80(0, &qword_1F0369C08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D5D64();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC4D6158@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F10, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369BD8, a1);
}

uint64_t sub_1DC4D617C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F18, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369BF0, a1);
}

uint64_t sub_1DC4D61A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D6288(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t destroy for DeleteWatchlistEvent(uint64_t a1, uint64_t a2)
{
  return sub_1DC4D62D0(a1, a2, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t initializeWithCopy for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D6310(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t assignWithCopy for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D6360(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t initializeWithTake for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D63B0(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t assignWithTake for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D6400(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t getEnumTagSinglePayload for DeleteWatchlistEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D6238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t storeEnumTagSinglePayload for DeleteWatchlistEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D6250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t type metadata accessor for DeleteWatchlistEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369C78);
}

uint64_t sub_1DC4D6270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D64FC(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1DC4B6600);
}

uint64_t initializeBufferWithCopyOfBuffer for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D6288(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t sub_1DC4D6288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1, a2, v6);
}

uint64_t destroy for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2)
{
  return sub_1DC4D62D0(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t sub_1DC4D62D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;

  v4 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D6310(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t sub_1DC4D6310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t assignWithCopy for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D6360(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t sub_1DC4D6360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t initializeWithTake for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D63B0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t sub_1DC4D63B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t assignWithTake for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D6400(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t sub_1DC4D6400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteWatchlistEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D6450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for DeleteWatchlistEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4D64A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;

  v7 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t sub_1DC4D64F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D64FC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670]);
}

uint64_t sub_1DC4D64FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DeleteWatchlistEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4D65A4 + 4 * byte_1DC62D8B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4D65C4 + 4 * byte_1DC62D8B5[v4]))();
}

_BYTE *sub_1DC4D65A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4D65C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4D65CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4D65D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4D65DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4D65E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DeleteWatchlistEvent.Model.CodingKeys()
{
  return &type metadata for DeleteWatchlistEvent.Model.CodingKeys;
}

unint64_t sub_1DC4D6604()
{
  unint64_t result;

  result = qword_1F0369D40;
  if (!qword_1F0369D40)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62DA18, &type metadata for DeleteWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369D40);
  }
  return result;
}

unint64_t sub_1DC4D664C()
{
  unint64_t result;

  result = qword_1F0369D48;
  if (!qword_1F0369D48)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D988, &type metadata for DeleteWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369D48);
  }
  return result;
}

unint64_t sub_1DC4D6694()
{
  unint64_t result;

  result = qword_1F0369D50;
  if (!qword_1F0369D50)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62D9B0, &type metadata for DeleteWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369D50);
  }
  return result;
}

uint64_t sub_1DC4D66D8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A788();
  __swift_allocate_value_buffer(v0, qword_1EDB12070);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDB12070);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static BannerAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB12088, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB12070, a1);
}

uint64_t sub_1DC4D6778()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A998();
  __swift_allocate_value_buffer(v0, qword_1EDB12090);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDB12090);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static BannerAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB120A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB12090, a1);
}

uint64_t BannerAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t BannerAdImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*BannerAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for BannerAdImpressionEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for BannerAdImpressionEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB120B0);
}

uint64_t BannerAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.timedData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adUserData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.channelData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adStateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adStateData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adStateData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4D6C30()
{
  unint64_t result;

  result = qword_1EDB0E2C8;
  if (!qword_1EDB0E2C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdPlacementData, &type metadata for AdPlacementData);
    atomic_store(result, (unint64_t *)&qword_1EDB0E2C8);
  }
  return result;
}

unint64_t sub_1DC4D6C74()
{
  unint64_t result;

  result = qword_1EDB0F290;
  if (!qword_1EDB0F290)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdPlacementData, &type metadata for AdPlacementData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F290);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adPlacementData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4D6DB0()
{
  unint64_t result;

  result = qword_1EDB0EC80;
  if (!qword_1EDB0EC80)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdSizeData, &type metadata for AdSizeData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC80);
  }
  return result;
}

unint64_t sub_1DC4D6DF4()
{
  unint64_t result;

  result = qword_1EDB0EC78;
  if (!qword_1EDB0EC78)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdSizeData, &type metadata for AdSizeData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC78);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adSizeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adSizeData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4D6F30()
{
  unint64_t result;

  result = qword_1EDB0F190;
  if (!qword_1EDB0F190)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdPositionData, &type metadata for AdPositionData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F190);
  }
  return result;
}

unint64_t sub_1DC4D6F74()
{
  unint64_t result;

  result = qword_1EDB0F188;
  if (!qword_1EDB0F188)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdPositionData, &type metadata for AdPositionData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F188);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adPositionData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adFeedData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.bannerAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4D71A8()
{
  unint64_t result;

  result = qword_1EDB12068;
  if (!qword_1EDB12068)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BannerAdData, &type metadata for BannerAdData);
    atomic_store(result, (unint64_t *)&qword_1EDB12068);
  }
  return result;
}

unint64_t sub_1DC4D71EC()
{
  unint64_t result;

  result = qword_1EDB12060;
  if (!qword_1EDB12060)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BannerAdData, &type metadata for BannerAdData);
    atomic_store(result, (unint64_t *)&qword_1EDB12060);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.bannerAdData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.bannerAdData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4D7328()
{
  unint64_t result;

  result = qword_1EDB0ED48;
  if (!qword_1EDB0ED48)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdGroupData, &type metadata for AdGroupData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED48);
  }
  return result;
}

unint64_t sub_1DC4D736C()
{
  unint64_t result;

  result = qword_1EDB0ED40;
  if (!qword_1EDB0ED40)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdGroupData, &type metadata for AdGroupData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED40);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adGroupData.modify())()
{
  type metadata accessor for BannerAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for BannerAdImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
}

uint64_t BannerAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t BannerAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for BannerAdImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for BannerAdImpressionEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369DC8);
}

uint64_t BannerAdImpressionEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t BannerAdImpressionEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 28);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);
  return sub_1DC4D7808(v4, v5);
}

uint64_t sub_1DC4D7808(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adStateData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 36));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

double BannerAdImpressionEvent.Model.adSizeData.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 40));
  *a1 = result;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 44));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t BannerAdImpressionEvent.Model.bannerAdData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  v4 = (char *)(v1 + *(int *)(result + 52));
  v5 = *v4;
  v6 = v4[1];
  LOBYTE(v4) = v4[2];
  *a1 = v5;
  a1[1] = v6;
  a1[2] = (_BYTE)v4;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

__n128 BannerAdImpressionEvent.Model.init(eventData:timedData:adUserData:channelData:adStateData:adPlacementData:adSizeData:adPositionData:adFeedData:bannerAdData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, int *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, char *a12)
{
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int16 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __n128 *v28;
  __n128 result;
  _QWORD *v30;
  uint64_t v31;
  _BYTE *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;

  v16 = *a3;
  v17 = a3[1];
  v33 = *a4;
  v18 = a4[1].n128_u64[0];
  v19 = a4[1].n128_u64[1];
  v20 = a4[2].n128_u16[0];
  v21 = *a5;
  v35 = *a6;
  v34 = a6[1];
  v37 = *a8;
  v36 = *((_BYTE *)a8 + 4);
  v41 = *a11;
  v40 = a11[1];
  v38 = *a10;
  v39 = a11[2];
  v42 = *a12;
  v22 = sub_1DC62ABA8();
  v23 = *a7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v24 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
  v25 = a9 + v24[5];
  v26 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a2, v26);
  v27 = (_QWORD *)(a9 + v24[6]);
  *v27 = v16;
  v27[1] = v17;
  v28 = (__n128 *)(a9 + v24[7]);
  result = v33;
  *v28 = v33;
  v28[1].n128_u64[0] = v18;
  v28[1].n128_u64[1] = v19;
  v28[2].n128_u16[0] = v20;
  *(_BYTE *)(a9 + v24[8]) = v21;
  v30 = (_QWORD *)(a9 + v24[9]);
  *v30 = v35;
  v30[1] = v34;
  *(_QWORD *)(a9 + v24[10]) = v23;
  v31 = a9 + v24[11];
  *(_DWORD *)v31 = v37;
  *(_BYTE *)(v31 + 4) = v36;
  *(_BYTE *)(a9 + v24[12]) = v38;
  v32 = (_BYTE *)(a9 + v24[13]);
  *v32 = v41;
  v32[1] = v40;
  v32[2] = v39;
  *(_BYTE *)(a9 + v24[14]) = v42;
  return result;
}

uint64_t sub_1DC4D7B58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4D7B90 + 4 * byte_1DC62DAA0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4D7B90()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC4D7BA4()
{
  return 0x6144726573556461;
}

uint64_t sub_1DC4D7C90()
{
  unsigned __int8 *v0;

  return sub_1DC4D7B58(*v0);
}

uint64_t sub_1DC4D7C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4DB4E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4D7CBC()
{
  sub_1DC4D8134();
  return sub_1DC62B604();
}

uint64_t sub_1DC4D7CE4()
{
  sub_1DC4D8134();
  return sub_1DC62B610();
}

uint64_t BannerAdImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  int v21;
  char *v22;
  char v23;
  char v24;
  _OWORD v26[2];
  __int16 v27;
  char v28;

  v3 = v1;
  sub_1DC4D8888(0, &qword_1F0369D58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4D8134();
  sub_1DC62B5F8();
  LOBYTE(v26[0]) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
    LOBYTE(v26[0]) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + v10[6]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)&v26[0] = v13;
    *((_QWORD *)&v26[0] + 1) = v12;
    v28 = 2;
    sub_1DC4C0710();
    sub_1DC62B4E4();
    v14 = v3 + v10[7];
    v15 = *(_WORD *)(v14 + 32);
    v16 = *(_OWORD *)(v14 + 16);
    v26[0] = *(_OWORD *)v14;
    v26[1] = v16;
    v27 = v15;
    v28 = 3;
    sub_1DC4C8E84();
    sub_1DC62B490();
    LOBYTE(v26[0]) = *(_BYTE *)(v3 + v10[8]);
    v28 = 4;
    sub_1DC4D0DD8();
    sub_1DC62B4E4();
    v17 = (uint64_t *)(v3 + v10[9]);
    v19 = *v17;
    v18 = v17[1];
    *(_QWORD *)&v26[0] = v19;
    *((_QWORD *)&v26[0] + 1) = v18;
    v28 = 5;
    sub_1DC4D6C74();
    sub_1DC62B4E4();
    *(_QWORD *)&v26[0] = *(_QWORD *)(v3 + v10[10]);
    v28 = 6;
    sub_1DC4D6DF4();
    sub_1DC62B4E4();
    v20 = (int *)(v3 + v10[11]);
    v21 = *v20;
    LOBYTE(v20) = *((_BYTE *)v20 + 4);
    LODWORD(v26[0]) = v21;
    BYTE4(v26[0]) = (_BYTE)v20;
    v28 = 7;
    sub_1DC4D6F74();
    sub_1DC62B490();
    LOBYTE(v26[0]) = *(_BYTE *)(v3 + v10[12]);
    v28 = 8;
    sub_1DC4C07B0();
    sub_1DC62B490();
    v22 = (char *)(v3 + v10[13]);
    v23 = *v22;
    v24 = v22[1];
    LOBYTE(v22) = v22[2];
    LOBYTE(v26[0]) = v23;
    BYTE1(v26[0]) = v24;
    BYTE2(v26[0]) = (_BYTE)v22;
    v28 = 9;
    sub_1DC4D71EC();
    sub_1DC62B4E4();
    LOBYTE(v26[0]) = *(_BYTE *)(v3 + v10[14]);
    v28 = 10;
    sub_1DC4D736C();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4D8134()
{
  unint64_t result;

  result = qword_1F0369D60;
  if (!qword_1F0369D60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62DD94, &type metadata for BannerAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369D60);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  __int16 v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char v27;
  char *v28;
  char v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int *v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  __int16 v46;
  char v47;

  v35 = a2;
  v4 = sub_1DC62ABC0();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62ABA8();
  v39 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4D8888(0, &qword_1F0369D68, MEMORY[0x1E0DED048]);
  v40 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - v12;
  v42 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v42);
  v43 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1DC4D8134();
  v36 = v13;
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  LOBYTE(v44) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v16 = v7;
  v17 = v43;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v43, v9, v16);
  LOBYTE(v44) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v18 = v38;
  sub_1DC62B454();
  v19 = v42;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v17[v42[5]], v6, v18);
  v47 = 2;
  sub_1DC4C06CC();
  sub_1DC62B454();
  v20 = *((_QWORD *)&v44 + 1);
  v21 = &v17[v19[6]];
  *(_QWORD *)v21 = v44;
  *((_QWORD *)v21 + 1) = v20;
  v47 = 3;
  sub_1DC4C8E40();
  sub_1DC62B400();
  v22 = v46;
  v23 = &v17[v19[7]];
  v24 = v45;
  *(_OWORD *)v23 = v44;
  *((_OWORD *)v23 + 1) = v24;
  *((_WORD *)v23 + 16) = v22;
  v47 = 4;
  sub_1DC4D0D90();
  sub_1DC62B454();
  v17[v19[8]] = v44;
  v47 = 5;
  sub_1DC4D6C30();
  sub_1DC62B454();
  v25 = *((_QWORD *)&v44 + 1);
  v26 = &v17[v19[9]];
  *(_QWORD *)v26 = v44;
  *((_QWORD *)v26 + 1) = v25;
  v47 = 6;
  sub_1DC4D6DB0();
  sub_1DC62B454();
  *(_QWORD *)&v17[v19[10]] = v44;
  v47 = 7;
  sub_1DC4D6F30();
  sub_1DC62B400();
  v27 = BYTE4(v44);
  v28 = &v17[v19[11]];
  *(_DWORD *)v28 = v44;
  v28[4] = v27;
  v47 = 8;
  sub_1DC4C076C();
  sub_1DC62B400();
  v17[v19[12]] = v44;
  v47 = 9;
  sub_1DC4D71A8();
  sub_1DC62B454();
  v29 = BYTE1(v44);
  v30 = BYTE2(v44);
  v31 = &v43[v42[13]];
  *v31 = v44;
  v31[1] = v29;
  v31[2] = v30;
  v47 = 10;
  sub_1DC4D7328();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v40);
  v32 = (uint64_t)v43;
  v43[v42[14]] = v44;
  sub_1DC4D8914(v32, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1DC4D8958(v32);
}

void sub_1DC4D8888(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4D8134();
    v7 = a3(a1, &type metadata for BannerAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4D88E4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC4D8914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BannerAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4D8958(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BannerAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4D8994@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BannerAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4D89A8(_QWORD *a1)
{
  return BannerAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4D89BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB12088, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB12070, a1);
}

uint64_t sub_1DC4D89E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB120A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB12090, a1);
}

uint64_t sub_1DC4D8A04@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for BannerAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for BannerAdImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAdImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4DA008(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                      v8 = v22;
                      v12 = *(_QWORD *)(v22 - 8);
                      v13 = a3[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for BannerAdImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4DA2EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                      v10 = v24;
                      v14 = *(_QWORD *)(v24 - 8);
                      v15 = a4[14];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4DA5CC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB12018, (void (*)(void))sub_1DC4D0D90, (void (*)(void))sub_1DC4D0DD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB12020, (void (*)(void))sub_1DC4D71A8, (void (*)(void))sub_1DC4D71EC);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                      if (v10 <= 0x3F)
                        swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for BannerAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *(_QWORD *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = *((_QWORD *)v18 + 3);
      *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
      *((_QWORD *)v17 + 3) = v20;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v22;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
    }
    v23 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = a3[11];
    *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    v30 = a3[13];
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    *(_WORD *)v31 = *(_WORD *)v32;
    v31[2] = v32[2];
    *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = v18;
    v19 = *(_QWORD *)(v17 + 24);
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_QWORD *)(v16 + 24) = v19;
    *(_WORD *)(v16 + 32) = *(_WORD *)(v17 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v20;
    *(_WORD *)(v16 + 32) = *(_WORD *)(v17 + 32);
  }
  v21 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_WORD *)v29 = *(_WORD *)v30;
  *(_BYTE *)(v29 + 2) = *(_BYTE *)(v30 + 2);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _DWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  int v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (__int128 *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14 + 8);
  v18 = *(_QWORD *)(a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
      *(_QWORD *)(v15 + 24) = *((_QWORD *)v16 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 32) = *((_BYTE *)v16 + 32);
      *(_BYTE *)(v15 + 33) = *((_BYTE *)v16 + 33);
    }
    else
    {
      sub_1DC4DAE38(v15);
      v19 = *((_WORD *)v16 + 16);
      v20 = v16[1];
      *(_OWORD *)v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_WORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
    *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
    *(_QWORD *)(v15 + 24) = *((_QWORD *)v16 + 3);
    *(_BYTE *)(v15 + 32) = *((_BYTE *)v16 + 32);
    *(_BYTE *)(v15 + 33) = *((_BYTE *)v16 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v16;
    v22 = v16[1];
    *(_WORD *)(v15 + 32) = *((_WORD *)v16 + 16);
    *(_OWORD *)v15 = v21;
    *(_OWORD *)(v15 + 16) = v22;
  }
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[10];
  v27 = (_DWORD *)(a1 + v26);
  v28 = (_DWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = (int *)(a2 + v29);
  v32 = *v31;
  *(_BYTE *)(v30 + 4) = *((_BYTE *)v31 + 4);
  *(_DWORD *)v30 = v32;
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v33 = a3[13];
  v34 = (_BYTE *)(a1 + v33);
  v35 = (_BYTE *)(a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  v34[2] = v35[2];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1DC4DAE38(uint64_t a1)
{
  destroy for NewsArticleData();
  return a1;
}

uint64_t initializeWithTake for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_WORD *)v20 = *(_WORD *)v21;
  *(_BYTE *)(v20 + 2) = *(_BYTE *)(v21 + 2);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (!*(_QWORD *)(a1 + v16 + 8))
    goto LABEL_5;
  v19 = *(_QWORD *)(v18 + 8);
  if (!v19)
  {
    sub_1DC4DAE38(v17);
LABEL_5:
    v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  *(_BYTE *)(v17 + 33) = *(_BYTE *)(v18 + 33);
LABEL_6:
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v31 = (_BYTE *)(a1 + v30);
  v32 = (_BYTE *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  v31[2] = v32[2];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAdImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4DB10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAdImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4DB1C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4DB26C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BannerAdImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1DC4DB38C + 4 * byte_1DC62DAB0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1DC4DB3C0 + 4 * byte_1DC62DAAB[v4]))();
}

uint64_t sub_1DC4DB3C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DB3C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4DB3D0);
  return result;
}

uint64_t sub_1DC4DB3DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4DB3E4);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1DC4DB3E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DB3F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for BannerAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1DC4DB410()
{
  unint64_t result;

  result = qword_1F0369E28;
  if (!qword_1F0369E28)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62DD6C, &type metadata for BannerAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369E28);
  }
  return result;
}

unint64_t sub_1DC4DB458()
{
  unint64_t result;

  result = qword_1F0369E30;
  if (!qword_1F0369E30)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62DCDC, &type metadata for BannerAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369E30);
  }
  return result;
}

unint64_t sub_1DC4DB4A0()
{
  unint64_t result;

  result = qword_1F0369E38;
  if (!qword_1F0369E38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62DD04, &type metadata for BannerAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369E38);
  }
  return result;
}

uint64_t sub_1DC4DB4E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4465746174536461 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144657A69536461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x644172656E6E6162 && a2 == 0xEC00000061746144 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

StocksAnalytics::BadgeType_optional __swiftcall BadgeType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::BadgeType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t BadgeType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4DBA9C + 4 * byte_1DC62DDE4[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4DBA9C()
{
  return 1701736302;
}

unint64_t sub_1DC4DBAAC()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC4DBAC8()
{
  return 0x79726F7473;
}

void sub_1DC4DBADC(char *a1)
{
  sub_1DC5418AC(*a1);
}

unint64_t sub_1DC4DBAEC()
{
  unint64_t result;

  result = qword_1F0369E40;
  if (!qword_1F0369E40)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BadgeType, &type metadata for BadgeType);
    atomic_store(result, (unint64_t *)&qword_1F0369E40);
  }
  return result;
}

void sub_1DC4DBB30()
{
  char *v0;

  sub_1DC601A78(*v0);
}

void sub_1DC4DBB38()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC4DBB74()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC4DBBC8(uint64_t a1)
{
  char *v1;

  sub_1DC603BE0(a1, *v1);
}

StocksAnalytics::BadgeType_optional sub_1DC4DBBD0(Swift::String *a1)
{
  return BadgeType.init(rawValue:)(*a1);
}

uint64_t sub_1DC4DBBDC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4DBC0C + 4 * byte_1DC62DDEC[*v0]))();
}

void sub_1DC4DBC0C(_QWORD *a1@<X8>)
{
  *a1 = 1701736302;
  a1[1] = 0xE400000000000000;
}

void sub_1DC4DBC20(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001DC64B1A0;
}

void sub_1DC4DBC40(_QWORD *a1@<X8>)
{
  *a1 = 0x79726F7473;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1DC4DBC58()
{
  sub_1DC4DBDCC();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4DBCB4()
{
  sub_1DC4DBDCC();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for BadgeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC4DBD4C + 4 * byte_1DC62DDF5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC4DBD80 + 4 * byte_1DC62DDF0[v4]))();
}

uint64_t sub_1DC4DBD80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DBD88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4DBD90);
  return result;
}

uint64_t sub_1DC4DBD9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4DBDA4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC4DBDA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DBDB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BadgeType()
{
  return &type metadata for BadgeType;
}

unint64_t sub_1DC4DBDCC()
{
  unint64_t result;

  result = qword_1EDB11750;
  if (!qword_1EDB11750)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BadgeType, &type metadata for BadgeType);
    atomic_store(result, (unint64_t *)&qword_1EDB11750);
  }
  return result;
}

void __swiftcall ReferralData.init(originatingCampaignID:originatingCampaignType:originatingCreativeID:referringApplication:referringInboundUrl:)(StocksAnalytics::ReferralData *__return_ptr retstr, Swift::String_optional originatingCampaignID, Swift::String_optional originatingCampaignType, Swift::String_optional originatingCreativeID, Swift::String referringApplication, Swift::String referringInboundUrl)
{
  retstr->originatingCampaignID = originatingCampaignID;
  retstr->originatingCampaignType = originatingCampaignType;
  retstr->originatingCreativeID = originatingCreativeID;
  retstr->referringApplication = referringApplication;
  retstr->referringInboundUrl = referringInboundUrl;
}

uint64_t ReferralData.originatingCampaignID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.originatingCampaignID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReferralData.originatingCampaignID.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.originatingCampaignType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.originatingCampaignType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ReferralData.originatingCampaignType.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.originatingCreativeID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.originatingCreativeID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ReferralData.originatingCreativeID.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.referringApplication.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.referringApplication.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ReferralData.referringApplication.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.referringInboundUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.referringInboundUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ReferralData.referringInboundUrl.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC4DC05C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1DC4DC094 + 4 * byte_1DC62DF0C[a1]))(0xD000000000000015, 0x80000001DC64BFF0);
}

uint64_t sub_1DC4DC094(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_1DC4DC0D8()
{
  unsigned __int8 *v0;

  return sub_1DC4DC05C(*v0);
}

uint64_t sub_1DC4DC0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4DCC6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4DC104(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DC4DC110()
{
  sub_1DC4DC340();
  return sub_1DC62B604();
}

uint64_t sub_1DC4DC138()
{
  sub_1DC4DC340();
  return sub_1DC62B610();
}

uint64_t ReferralData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[10];
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  sub_1DC4DC6F0(0, &qword_1EDB11A00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v14 - v6;
  v8 = v1[2];
  v14[7] = v1[3];
  v14[8] = v8;
  v9 = v1[4];
  v14[5] = v1[5];
  v14[6] = v9;
  v10 = v1[6];
  v14[3] = v1[7];
  v14[4] = v10;
  v11 = v1[8];
  v14[1] = v1[9];
  v14[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4DC340();
  sub_1DC62B5F8();
  v19 = 0;
  v12 = v14[9];
  sub_1DC62B478();
  if (!v12)
  {
    v18 = 1;
    sub_1DC62B478();
    v17 = 2;
    sub_1DC62B478();
    v16 = 3;
    sub_1DC62B4B4();
    v15 = 4;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC4DC340()
{
  unint64_t result;

  result = qword_1EDB0EEA8;
  if (!qword_1EDB0EEA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E090, &type metadata for ReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EEA8);
  }
  return result;
}

uint64_t ReferralData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  sub_1DC4DC6F0(0, &qword_1F0369E48, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4DC340();
  sub_1DC62B5E0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v39 = 0;
    v10 = sub_1DC62B3E8();
    v13 = v12;
    v34 = v10;
    v38 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1DC62B3E8();
    v16 = v15;
    v32 = v14;
    v33 = a2;
    v37 = 2;
    swift_bridgeObjectRetain();
    v17 = sub_1DC62B3E8();
    v19 = v18;
    v31 = v17;
    v36 = 3;
    swift_bridgeObjectRetain();
    v29 = sub_1DC62B424();
    v30 = v20;
    v35 = 4;
    swift_bridgeObjectRetain();
    v21 = sub_1DC62B424();
    v23 = v22;
    v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28 = v21;
    v24(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v33;
    *v33 = v34;
    v25[1] = v13;
    v25[2] = v32;
    v25[3] = v16;
    v26 = v30;
    v25[4] = v31;
    v25[5] = v19;
    v25[6] = v29;
    v25[7] = v26;
    v25[8] = v28;
    v25[9] = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC4DC6F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4DC340();
    v7 = a3(a1, &type metadata for ReferralData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4DC750()
{
  unint64_t result;

  result = qword_1EDB0EED0;
  if (!qword_1EDB0EED0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ReferralData, &type metadata for ReferralData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EED0);
  }
  return result;
}

unint64_t sub_1DC4DC798()
{
  unint64_t result;

  result = qword_1EDB0EEC8;
  if (!qword_1EDB0EEC8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ReferralData, &type metadata for ReferralData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EEC8);
  }
  return result;
}

uint64_t sub_1DC4DC7DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ReferralData.init(from:)(a1, a2);
}

uint64_t sub_1DC4DC7F0(_QWORD *a1)
{
  return ReferralData.encode(to:)(a1);
}

uint64_t destroy for ReferralData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ReferralData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ReferralData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for ReferralData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferralData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferralData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralData()
{
  return &type metadata for ReferralData;
}

uint64_t storeEnumTagSinglePayload for ReferralData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC4DCB14 + 4 * byte_1DC62DF16[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC4DCB48 + 4 * byte_1DC62DF11[v4]))();
}

uint64_t sub_1DC4DCB48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DCB50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4DCB58);
  return result;
}

uint64_t sub_1DC4DCB64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4DCB6CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC4DCB70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DCB78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReferralData.CodingKeys()
{
  return &type metadata for ReferralData.CodingKeys;
}

unint64_t sub_1DC4DCB98()
{
  unint64_t result;

  result = qword_1F0369E50;
  if (!qword_1F0369E50)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E068, &type metadata for ReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369E50);
  }
  return result;
}

unint64_t sub_1DC4DCBE0()
{
  unint64_t result;

  result = qword_1EDB0EEB8;
  if (!qword_1EDB0EEB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62DFD8, &type metadata for ReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EEB8);
  }
  return result;
}

unint64_t sub_1DC4DCC28()
{
  unint64_t result;

  result = qword_1EDB0EEB0;
  if (!qword_1EDB0EEB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E000, &type metadata for ReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EEB0);
  }
  return result;
}

uint64_t sub_1DC4DCC6C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BFF0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DC64C010 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64C030 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64C050 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C070)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DC4DCE58(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F0369E58, MEMORY[0x1E0CF8078]);
}

uint64_t static SearchResultSelectEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369E58, a1);
}

uint64_t sub_1DC4DCE98(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F0369E70, MEMORY[0x1E0CF8380]);
}

uint64_t static SearchResultSelectEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F28, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369E70, a1);
}

uint64_t SearchResultSelectEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SearchResultSelectEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SearchResultSelectEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultSelectEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369F40);
}

unint64_t sub_1DC4DCFA8()
{
  unint64_t result;

  result = qword_1F0369E90;
  if (!qword_1F0369E90)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SearchData, &type metadata for SearchData);
    atomic_store(result, (unint64_t *)&qword_1F0369E90);
  }
  return result;
}

unint64_t sub_1DC4DCFEC()
{
  unint64_t result;

  result = qword_1F0369E98;
  if (!qword_1F0369E98)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SearchData, &type metadata for SearchData);
    atomic_store(result, (unint64_t *)&qword_1F0369E98);
  }
  return result;
}

uint64_t SearchResultSelectEvent.searchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchData.modify())()
{
  type metadata accessor for SearchResultSelectEvent(0);
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4DD128()
{
  unint64_t result;

  result = qword_1F0369EA8;
  if (!qword_1F0369EA8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SearchSelectionData, &type metadata for SearchSelectionData);
    atomic_store(result, (unint64_t *)&qword_1F0369EA8);
  }
  return result;
}

unint64_t sub_1DC4DD16C()
{
  unint64_t result;

  result = qword_1F0369EB0;
  if (!qword_1F0369EB0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SearchSelectionData, &type metadata for SearchSelectionData);
    atomic_store(result, (unint64_t *)&qword_1F0369EB0);
  }
  return result;
}

uint64_t SearchResultSelectEvent.searchSelectionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchSelectionData.modify())()
{
  type metadata accessor for SearchResultSelectEvent(0);
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchResultsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4DD2A8()
{
  unint64_t result;

  result = qword_1F0369EC0;
  if (!qword_1F0369EC0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SearchResultsData, &type metadata for SearchResultsData);
    atomic_store(result, (unint64_t *)&qword_1F0369EC0);
  }
  return result;
}

unint64_t sub_1DC4DD2EC()
{
  unint64_t result;

  result = qword_1F0369EC8;
  if (!qword_1F0369EC8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SearchResultsData, &type metadata for SearchResultsData);
    atomic_store(result, (unint64_t *)&qword_1F0369EC8);
  }
  return result;
}

uint64_t SearchResultSelectEvent.searchResultsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchResultsData.modify())()
{
  type metadata accessor for SearchResultSelectEvent(0);
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SearchResultSelectEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t SearchResultSelectEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SearchResultSelectEvent.Model.searchData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchResultSelectEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F0369FD8);
}

uint64_t SearchResultSelectEvent.Model.searchSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultSelectEvent.Model.searchResultsData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 28));
  return swift_bridgeObjectRetain();
}

int *SearchResultSelectEvent.Model.init(eventData:searchData:searchSelectionData:searchResultsData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int *result;
  _QWORD *v15;
  uint64_t v16;

  v7 = *a2;
  v8 = a2[1];
  v9 = *a3;
  v10 = a3[1];
  v11 = *((_BYTE *)a3 + 16);
  v12 = *a4;
  v13 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a5, a1, v13);
  result = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
  v15 = (_QWORD *)(a5 + result[5]);
  *v15 = v7;
  v15[1] = v8;
  v16 = a5 + result[6];
  *(_QWORD *)v16 = v9;
  *(_QWORD *)(v16 + 8) = v10;
  *(_BYTE *)(v16 + 16) = v11;
  *(_QWORD *)(a5 + result[7]) = v12;
  return result;
}

uint64_t sub_1DC4DD644()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4DD678 + 4 * byte_1DC62E0E0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4DD678()
{
  return 0x6144686372616573;
}

unint64_t sub_1DC4DD694()
{
  return 0xD000000000000013;
}

unint64_t sub_1DC4DD6B4()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC4DD6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4DF15C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4DD6F4()
{
  sub_1DC4DD948();
  return sub_1DC62B604();
}

uint64_t sub_1DC4DD71C()
{
  sub_1DC4DD948();
  return sub_1DC62B610();
}

uint64_t SearchResultSelectEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  v3 = v1;
  sub_1DC4DDD08(0, &qword_1F0369ED0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4DD948();
  sub_1DC62B5F8();
  LOBYTE(v19) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    v19 = v13;
    v20 = v12;
    v22 = 1;
    sub_1DC4DCFEC();
    sub_1DC62B4E4();
    v14 = (uint64_t *)(v3 + v10[6]);
    v15 = *v14;
    v16 = v14[1];
    LOBYTE(v14) = *((_BYTE *)v14 + 16);
    v19 = v15;
    v20 = v16;
    v21 = (char)v14;
    v22 = 2;
    sub_1DC4DD16C();
    sub_1DC62B4E4();
    v19 = *(_QWORD *)(v3 + v10[7]);
    v22 = 3;
    sub_1DC4DD2EC();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4DD948()
{
  unint64_t result;

  result = qword_1F0369ED8;
  if (!qword_1F0369ED8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E2D4, &type metadata for SearchResultSelectEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F0369ED8);
  }
  return result;
}

uint64_t SearchResultSelectEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v23 = a2;
  v3 = sub_1DC62ABA8();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4DDD08(0, &qword_1F0369EE0, MEMORY[0x1E0DED048]);
  v25 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4DD948();
  v26 = v8;
  v12 = (uint64_t)v28;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = a1;
  v13 = v11;
  v14 = v24;
  LOBYTE(v29) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v25;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v27, v3);
  v32 = 1;
  sub_1DC4DCFA8();
  sub_1DC62B454();
  v16 = v30;
  v17 = &v13[v9[5]];
  *(_QWORD *)v17 = v29;
  *((_QWORD *)v17 + 1) = v16;
  v32 = 2;
  sub_1DC4DD128();
  sub_1DC62B454();
  v18 = v30;
  v19 = v31;
  v20 = &v13[v9[6]];
  *(_QWORD *)v20 = v29;
  *((_QWORD *)v20 + 1) = v18;
  v20[16] = v19;
  v32 = 3;
  sub_1DC4DD2A8();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v15);
  *(_QWORD *)v9[7] = v29;
  sub_1DC4DDD64(0, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1DC4DDDA8(0);
}

void sub_1DC4DDD08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4DD948();
    v7 = a3(a1, &type metadata for SearchResultSelectEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4DDD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResultSelectEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4DDDA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchResultSelectEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4DDDE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultSelectEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4DDDF8(_QWORD *a1)
{
  return SearchResultSelectEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4DDE0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F0369E58, a1);
}

uint64_t sub_1DC4DDE30@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F28, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F0369E70, a1);
}

uint64_t sub_1DC4DDE54@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultSelectEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for SearchResultSelectEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultSelectEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4DE6EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4DE814(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4DE938()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F0369EA0, (void (*)(void))sub_1DC4DD128, (void (*)(void))sub_1DC4DD16C);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultSelectEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v13[16] = v14[16];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchResultSelectEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultSelectEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4DEE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4DEEB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4DEF30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC4DF004 + 4 * byte_1DC62E0E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC4DF038 + 4 * byte_1DC62E0E4[v4]))();
}

uint64_t sub_1DC4DF038(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DF040(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4DF048);
  return result;
}

uint64_t sub_1DC4DF054(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4DF05CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC4DF060(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DF068(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultSelectEvent.Model.CodingKeys()
{
  return &type metadata for SearchResultSelectEvent.Model.CodingKeys;
}

unint64_t sub_1DC4DF088()
{
  unint64_t result;

  result = qword_1F036A018;
  if (!qword_1F036A018)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E2AC, &type metadata for SearchResultSelectEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A018);
  }
  return result;
}

unint64_t sub_1DC4DF0D0()
{
  unint64_t result;

  result = qword_1F036A020;
  if (!qword_1F036A020)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E21C, &type metadata for SearchResultSelectEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A020);
  }
  return result;
}

unint64_t sub_1DC4DF118()
{
  unint64_t result;

  result = qword_1F036A028;
  if (!qword_1F036A028)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E244, &type metadata for SearchResultSelectEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A028);
  }
  return result;
}

uint64_t sub_1DC4DF15C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C090 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64C0B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

StocksAnalytics::ResultType_optional __swiftcall ResultType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ResultType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ResultType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73736563637573;
  if (*v0 != 1)
    v1 = 1818845542;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC4DF3CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC546990(*a1, *a2);
}

unint64_t sub_1DC4DF3DC()
{
  unint64_t result;

  result = qword_1F036A030;
  if (!qword_1F036A030)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ResultType, &type metadata for ResultType);
    atomic_store(result, (unint64_t *)&qword_1F036A030);
  }
  return result;
}

uint64_t sub_1DC4DF420()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4DF4B8()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4DF52C()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ResultType_optional sub_1DC4DF5C0(Swift::String *a1)
{
  return ResultType.init(rawValue:)(*a1);
}

void sub_1DC4DF5CC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x73736563637573;
  if (v2 != 1)
  {
    v5 = 1818845542;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC4DF624()
{
  sub_1DC4DF798();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4DF680()
{
  sub_1DC4DF798();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for ResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4DF718 + 4 * byte_1DC62E329[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4DF74C + 4 * byte_1DC62E324[v4]))();
}

uint64_t sub_1DC4DF74C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DF754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4DF75CLL);
  return result;
}

uint64_t sub_1DC4DF768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4DF770);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4DF774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4DF77C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResultType()
{
  return &type metadata for ResultType;
}

unint64_t sub_1DC4DF798()
{
  unint64_t result;

  result = qword_1F036A038;
  if (!qword_1F036A038)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ResultType, &type metadata for ResultType);
    atomic_store(result, (unint64_t *)&qword_1F036A038);
  }
  return result;
}

uint64_t sub_1DC4DF7DC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036A040, MEMORY[0x1E0CF8078]);
}

uint64_t static ViewCalendarEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F30, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036A040, a1);
}

uint64_t sub_1DC4DF81C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036A058, MEMORY[0x1E0CF8380]);
}

uint64_t static ViewCalendarEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036A058, a1);
}

uint64_t ViewCalendarEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ViewCalendarEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ViewCalendarEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ViewCalendarEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ViewCalendarEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036A0E0);
}

uint64_t ViewCalendarEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ViewCalendarEvent.feedData.modify())()
{
  type metadata accessor for ViewCalendarEvent(0);
  return nullsub_1;
}

uint64_t ViewCalendarEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ViewCalendarEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ViewCalendarEvent.viewData.modify())()
{
  type metadata accessor for ViewCalendarEvent(0);
  return nullsub_1;
}

uint64_t ViewCalendarEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ViewCalendarEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ViewCalendarEvent.symbolData.modify())()
{
  type metadata accessor for ViewCalendarEvent(0);
  return nullsub_1;
}

uint64_t ViewCalendarEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ViewCalendarEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t ViewCalendarEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ViewCalendarEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ViewCalendarEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036A178);
}

uint64_t ViewCalendarEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ViewCalendarEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ViewCalendarEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

int *ViewCalendarEvent.Model.init(eventData:feedData:viewData:symbolData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v7 = *a2;
  v8 = *((_QWORD *)a2 + 1);
  v9 = *((_QWORD *)a2 + 2);
  v10 = *a3;
  v11 = a3[1];
  v12 = *((_WORD *)a3 + 8);
  v13 = *a4;
  v14 = a4[1];
  v22 = *((_BYTE *)a4 + 16);
  v20 = a4[4];
  v21 = a4[3];
  v15 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  result = (int *)type metadata accessor for ViewCalendarEvent.Model(0);
  v17 = a5 + result[5];
  *(_BYTE *)v17 = v7;
  *(_QWORD *)(v17 + 8) = v8;
  *(_QWORD *)(v17 + 16) = v9;
  v18 = a5 + result[6];
  *(_QWORD *)v18 = v10;
  *(_QWORD *)(v18 + 8) = v11;
  *(_WORD *)(v18 + 16) = v12;
  v19 = a5 + result[7];
  *(_QWORD *)v19 = v13;
  *(_QWORD *)(v19 + 8) = v14;
  *(_BYTE *)(v19 + 16) = v22;
  *(_QWORD *)(v19 + 24) = v21;
  *(_QWORD *)(v19 + 32) = v20;
  return result;
}

uint64_t sub_1DC4DFE98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4DFECC + 4 * byte_1DC62E440[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4DFECC()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC4DFEF4()
{
  return 0x61446C6F626D7973;
}

uint64_t sub_1DC4DFF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4E1AC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4DFF34()
{
  sub_1DC4E01A4();
  return sub_1DC62B604();
}

uint64_t sub_1DC4DFF5C()
{
  sub_1DC4E01A4();
  return sub_1DC62B610();
}

uint64_t ViewCalendarEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v3 = v1;
  sub_1DC4E0588(0, &qword_1F036A070, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E01A4();
  sub_1DC62B5F8();
  LOBYTE(v25) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ViewCalendarEvent.Model(0);
    v11 = (char *)(v3 + v10[5]);
    v12 = *v11;
    v14 = *((_QWORD *)v11 + 1);
    v13 = *((_QWORD *)v11 + 2);
    LOBYTE(v25) = v12;
    v26 = v14;
    v27 = v13;
    v30 = 1;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v15 = (uint64_t *)(v3 + v10[6]);
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    v25 = v16;
    v26 = v17;
    LOWORD(v27) = (_WORD)v15;
    v30 = 2;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v18 = (uint64_t *)(v3 + v10[7]);
    v19 = *v18;
    v20 = v18[1];
    v21 = *((_BYTE *)v18 + 16);
    v23 = v18[3];
    v22 = v18[4];
    v25 = v19;
    v26 = v20;
    LOBYTE(v27) = v21;
    v28 = v23;
    v29 = v22;
    v30 = 3;
    sub_1DC4C336C();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4E01A4()
{
  unint64_t result;

  result = qword_1F036A078;
  if (!qword_1F036A078)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E644, &type metadata for ViewCalendarEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A078);
  }
  return result;
}

uint64_t ViewCalendarEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int16 v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v29 = a2;
  v3 = sub_1DC62ABA8();
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4E0588(0, &qword_1F036A080, MEMORY[0x1E0DED048]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - v7;
  v9 = (int *)type metadata accessor for ViewCalendarEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E01A4();
  v33 = v8;
  v12 = (uint64_t)v34;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v34 = a1;
  v14 = v30;
  LOBYTE(v35) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v31;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v32, v3);
  v40 = 1;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v16 = v36;
  v17 = v37;
  v18 = &v11[v9[5]];
  *v18 = v35;
  *((_QWORD *)v18 + 1) = v16;
  *((_QWORD *)v18 + 2) = v17;
  v40 = 2;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v19 = v36;
  v20 = v37;
  v21 = &v11[v9[6]];
  *(_QWORD *)v21 = v35;
  *((_QWORD *)v21 + 1) = v19;
  *((_WORD *)v21 + 8) = v20;
  v40 = 3;
  sub_1DC4C3328();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v33, v15);
  v22 = v36;
  v23 = v37;
  v24 = v38;
  v25 = v39;
  v26 = &v11[v9[7]];
  *(_QWORD *)v26 = v35;
  *((_QWORD *)v26 + 1) = v22;
  v26[16] = v23;
  *((_QWORD *)v26 + 3) = v24;
  *((_QWORD *)v26 + 4) = v25;
  sub_1DC4E05E4((uint64_t)v11, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1DC4E0628((uint64_t)v11);
}

void sub_1DC4E0588(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4E01A4();
    v7 = a3(a1, &type metadata for ViewCalendarEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4E05E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ViewCalendarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4E0628(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ViewCalendarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4E0664@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewCalendarEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4E0678(_QWORD *a1)
{
  return ViewCalendarEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4E068C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F30, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036A040, a1);
}

uint64_t sub_1DC4E06B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036A058, a1);
}

uint64_t sub_1DC4E06D4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ViewCalendarEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ViewCalendarEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for ViewCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ViewCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ViewCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ViewCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewCalendarEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E0F6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ViewCalendarEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E1094(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4E11B8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ViewCalendarEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    *((_WORD *)v13 + 8) = *((_WORD *)v14 + 8);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v17[16] = v18[16];
    v20 = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
    *((_QWORD *)v17 + 4) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ViewCalendarEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v19 = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_BYTE *)(v11 + 17) = *(_BYTE *)(v12 + 17);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
  *(_OWORD *)v9 = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  return a1;
}

uint64_t assignWithTake for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewCalendarEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E1794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewCalendarEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E1820(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4E189C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ViewCalendarEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E196C + 4 * byte_1DC62E449[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC4E19A0 + 4 * byte_1DC62E444[v4]))();
}

uint64_t sub_1DC4E19A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E19A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E19B0);
  return result;
}

uint64_t sub_1DC4E19BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E19C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC4E19C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E19D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewCalendarEvent.Model.CodingKeys()
{
  return &type metadata for ViewCalendarEvent.Model.CodingKeys;
}

unint64_t sub_1DC4E19F0()
{
  unint64_t result;

  result = qword_1F036A1B8;
  if (!qword_1F036A1B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E61C, &type metadata for ViewCalendarEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A1B8);
  }
  return result;
}

unint64_t sub_1DC4E1A38()
{
  unint64_t result;

  result = qword_1F036A1C0;
  if (!qword_1F036A1C0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E58C, &type metadata for ViewCalendarEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A1C0);
  }
  return result;
}

unint64_t sub_1DC4E1A80()
{
  unint64_t result;

  result = qword_1F036A1C8;
  if (!qword_1F036A1C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E5B4, &type metadata for ViewCalendarEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A1C8);
  }
  return result;
}

uint64_t sub_1DC4E1AC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t AudioEngagementData.timePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AudioEngagementData.timePlayed.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AudioEngagementData.timePlayed.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.deltaTimePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t AudioEngagementData.deltaTimePlayed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*AudioEngagementData.deltaTimePlayed.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.userAction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *AudioEngagementData.userAction.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AudioEngagementData.userAction.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.position.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t AudioEngagementData.position.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*AudioEngagementData.position.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.engagementID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AudioEngagementData.engagementID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*AudioEngagementData.engagementID.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.playMethod.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

_BYTE *AudioEngagementData.playMethod.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = *result;
  return result;
}

uint64_t (*AudioEngagementData.playMethod.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.listeningSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

_BYTE *AudioEngagementData.listeningSource.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = *result;
  return result;
}

uint64_t (*AudioEngagementData.listeningSource.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.init(timePlayed:deltaTimePlayed:userAction:position:engagementID:playMethod:listeningSource:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v9;
  char v10;
  char v11;

  v9 = *a3;
  v10 = *a7;
  v11 = *a8;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v9;
  *(_DWORD *)(a9 + 20) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_BYTE *)(a9 + 40) = v10;
  *(_BYTE *)(a9 + 41) = v11;
  return result;
}

uint64_t sub_1DC4E1E04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4E1E38 + 4 * byte_1DC62E6A0[*v0]))(0x79616C50656D6974, 0xEA00000000006465);
}

uint64_t sub_1DC4E1E38()
{
  return 0x6D695461746C6564;
}

uint64_t sub_1DC4E1E5C()
{
  return 0x6974634172657375;
}

uint64_t sub_1DC4E1E74()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_1DC4E1E8C()
{
  return 0x656D656761676E65;
}

uint64_t sub_1DC4E1EAC()
{
  return 0x6874654D79616C70;
}

uint64_t sub_1DC4E1EC4()
{
  return 0x6E696E657473696CLL;
}

uint64_t sub_1DC4E1EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4E2B1C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4E1F0C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1DC4E1F18()
{
  sub_1DC4E21D0();
  return sub_1DC62B604();
}

uint64_t sub_1DC4E1F40()
{
  sub_1DC4E21D0();
  return sub_1DC62B610();
}

uint64_t AudioEngagementData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  sub_1DC4E25B4(0, &qword_1F036A1D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v20 = *(_QWORD *)(v1 + 8);
  v9 = *(unsigned __int8 *)(v1 + 16);
  v18 = *(_DWORD *)(v1 + 20);
  v19 = v9;
  v10 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v17 = v10;
  LODWORD(v10) = *(unsigned __int8 *)(v1 + 40);
  v14 = *(unsigned __int8 *)(v1 + 41);
  v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E21D0();
  v11 = v5;
  sub_1DC62B5F8();
  v30 = 0;
  sub_1DC62B4FC();
  if (!v2)
  {
    v12 = v19;
    v29 = 1;
    sub_1DC62B4FC();
    v28 = v12;
    v27 = 2;
    sub_1DC4E2214();
    sub_1DC62B4E4();
    v26 = 3;
    sub_1DC62B4F0();
    v25 = 4;
    sub_1DC62B4B4();
    v24 = v15;
    v23 = 5;
    sub_1DC4E2258();
    sub_1DC62B490();
    v22 = v14;
    v21 = 6;
    sub_1DC4E229C();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v11);
}

unint64_t sub_1DC4E21D0()
{
  unint64_t result;

  result = qword_1F036A1D8;
  if (!qword_1F036A1D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E838, &type metadata for AudioEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A1D8);
  }
  return result;
}

unint64_t sub_1DC4E2214()
{
  unint64_t result;

  result = qword_1F036A1E0;
  if (!qword_1F036A1E0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaUserAction, &type metadata for MediaUserAction);
    atomic_store(result, (unint64_t *)&qword_1F036A1E0);
  }
  return result;
}

unint64_t sub_1DC4E2258()
{
  unint64_t result;

  result = qword_1F036A1E8;
  if (!qword_1F036A1E8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaPlayMethod, &type metadata for MediaPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1F036A1E8);
  }
  return result;
}

unint64_t sub_1DC4E229C()
{
  unint64_t result;

  result = qword_1F036A1F0;
  if (!qword_1F036A1F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ListeningSource, &type metadata for ListeningSource);
    atomic_store(result, (unint64_t *)&qword_1F036A1F0);
  }
  return result;
}

uint64_t AudioEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  char v24;
  char v25;
  char v26;
  unsigned __int8 v27;
  char v28;
  char v29;
  char v30;
  unsigned __int8 v31;
  char v32;
  char v33;

  sub_1DC4E25B4(0, &qword_1F036A1F8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E21D0();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  v10 = sub_1DC62B46C();
  v32 = 1;
  v11 = sub_1DC62B46C();
  v30 = 2;
  sub_1DC4E2610();
  sub_1DC62B454();
  v23 = v31;
  v29 = 3;
  v22 = sub_1DC62B460();
  v28 = 4;
  v12 = sub_1DC62B424();
  v14 = v13;
  v20 = v12;
  v26 = 5;
  sub_1DC4E2654();
  swift_bridgeObjectRetain();
  v21 = v14;
  sub_1DC62B400();
  v19 = v27;
  v24 = 6;
  sub_1DC4E2698();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v16 = v25;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v23;
  *(_DWORD *)(a2 + 20) = v22;
  v17 = v21;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 40) = v19;
  *(_BYTE *)(a2 + 41) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC4E25B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4E21D0();
    v7 = a3(a1, &type metadata for AudioEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4E2610()
{
  unint64_t result;

  result = qword_1F036A200;
  if (!qword_1F036A200)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaUserAction, &type metadata for MediaUserAction);
    atomic_store(result, (unint64_t *)&qword_1F036A200);
  }
  return result;
}

unint64_t sub_1DC4E2654()
{
  unint64_t result;

  result = qword_1F036A208;
  if (!qword_1F036A208)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaPlayMethod, &type metadata for MediaPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1F036A208);
  }
  return result;
}

unint64_t sub_1DC4E2698()
{
  unint64_t result;

  result = qword_1F036A210;
  if (!qword_1F036A210)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ListeningSource, &type metadata for ListeningSource);
    atomic_store(result, (unint64_t *)&qword_1F036A210);
  }
  return result;
}

uint64_t sub_1DC4E26E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1DC4E26F8(_QWORD *a1)
{
  return AudioEngagementData.encode(to:)(a1);
}

uint64_t destroy for AudioEngagementData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementData()
{
  return &type metadata for AudioEngagementData;
}

uint64_t getEnumTagSinglePayload for DeviceOrientation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E29C4 + 4 * byte_1DC62E6AC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DC4E29F8 + 4 * byte_1DC62E6A7[v4]))();
}

uint64_t sub_1DC4E29F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E2A00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E2A08);
  return result;
}

uint64_t sub_1DC4E2A14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E2A1CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DC4E2A20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E2A28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementData.CodingKeys()
{
  return &type metadata for AudioEngagementData.CodingKeys;
}

unint64_t sub_1DC4E2A48()
{
  unint64_t result;

  result = qword_1F036A218;
  if (!qword_1F036A218)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E810, &type metadata for AudioEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A218);
  }
  return result;
}

unint64_t sub_1DC4E2A90()
{
  unint64_t result;

  result = qword_1F036A220;
  if (!qword_1F036A220)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E780, &type metadata for AudioEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A220);
  }
  return result;
}

unint64_t sub_1DC4E2AD8()
{
  unint64_t result;

  result = qword_1F036A228;
  if (!qword_1F036A228)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62E7A8, &type metadata for AudioEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A228);
  }
  return result;
}

uint64_t sub_1DC4E2B1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D695461746C6564 && a2 == 0xEF646579616C5065 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D656761676E65 && a2 == 0xEC0000004449746ELL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6874654D79616C70 && a2 == 0xEA0000000000646FLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E696E657473696CLL && a2 == 0xEF656372756F5367)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

StocksAnalytics::AdEngagementType_optional __swiftcall AdEngagementType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AdEngagementType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdEngagementType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4E2EF4 + 4 * byte_1DC62E890[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4E2EF4()
{
  return 0x615472656E6E6162;
}

uint64_t sub_1DC4E2FA0()
{
  return 0x6974737265746E69;
}

void sub_1DC4E2FC4(char *a1)
{
  sub_1DC544DA8(*a1);
}

unint64_t sub_1DC4E2FD4()
{
  unint64_t result;

  result = qword_1F036A230;
  if (!qword_1F036A230)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdEngagementType, &type metadata for AdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1F036A230);
  }
  return result;
}

void sub_1DC4E3018()
{
  char *v0;

  sub_1DC603158(0, *v0);
}

void sub_1DC4E3024(uint64_t a1)
{
  char *v1;

  sub_1DC602894(a1, *v1);
}

void sub_1DC4E302C(uint64_t a1)
{
  char *v1;

  sub_1DC603158(a1, *v1);
}

StocksAnalytics::AdEngagementType_optional sub_1DC4E3034(Swift::String *a1)
{
  return AdEngagementType.init(rawValue:)(*a1);
}

uint64_t sub_1DC4E3040@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AdEngagementType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC4E3064()
{
  sub_1DC4E31D8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4E30C0()
{
  sub_1DC4E31D8();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AdEngagementType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E3158 + 4 * byte_1DC62E89D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC4E318C + 4 * byte_1DC62E898[v4]))();
}

uint64_t sub_1DC4E318C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E3194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E319CLL);
  return result;
}

uint64_t sub_1DC4E31A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E31B0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC4E31B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E31BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementType()
{
  return &type metadata for AdEngagementType;
}

unint64_t sub_1DC4E31D8()
{
  unint64_t result;

  result = qword_1F036A238;
  if (!qword_1F036A238)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdEngagementType, &type metadata for AdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1F036A238);
  }
  return result;
}

uint64_t AdSizeData.width.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t AdSizeData.width.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AdSizeData.width.modify())()
{
  return nullsub_1;
}

uint64_t AdSizeData.height.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t AdSizeData.height.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*AdSizeData.height.modify())()
{
  return nullsub_1;
}

uint64_t AdSizeData.init(width:height:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

BOOL sub_1DC4E3264(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DC4E327C()
{
  _BYTE *v0;

  if (*v0)
    return 0x746867696568;
  else
    return 0x6874646977;
}

uint64_t sub_1DC4E32B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4E387C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4E32D4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DC4E32E0()
{
  sub_1DC4E3454();
  return sub_1DC62B604();
}

uint64_t sub_1DC4E3308()
{
  sub_1DC4E3454();
  return sub_1DC62B610();
}

uint64_t AdSizeData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;

  sub_1DC4E35E8(0, &qword_1EDB11C00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E3454();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62B4F0();
  if (!v2)
  {
    v12 = 1;
    sub_1DC62B4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC4E3454()
{
  unint64_t result;

  result = qword_1EDB11BD0;
  if (!qword_1EDB11BD0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62EB48, &type metadata for AdSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11BD0);
  }
  return result;
}

uint64_t AdSizeData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1DC4E35E8(0, &qword_1F036A240, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E3454();
  sub_1DC62B5E0();
  if (!v2)
  {
    v15 = 0;
    v10 = sub_1DC62B460();
    v14 = 1;
    v12 = sub_1DC62B460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4E35E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4E3454();
    v7 = a3(a1, &type metadata for AdSizeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4E364C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return AdSizeData.init(from:)(a1, a2);
}

uint64_t sub_1DC4E3660(_QWORD *a1)
{
  return AdSizeData.encode(to:)(a1);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AdSizeData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdSizeData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AdSizeData()
{
  return &type metadata for AdSizeData;
}

uint64_t storeEnumTagSinglePayload for AdSizeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E3724 + 4 * byte_1DC62E9D9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC4E3758 + 4 * byte_1DC62E9D4[v4]))();
}

uint64_t sub_1DC4E3758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E3760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E3768);
  return result;
}

uint64_t sub_1DC4E3774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E377CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC4E3780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E3788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdSizeData.CodingKeys()
{
  return &type metadata for AdSizeData.CodingKeys;
}

unint64_t sub_1DC4E37A8()
{
  unint64_t result;

  result = qword_1F036A248;
  if (!qword_1F036A248)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62EB20, &type metadata for AdSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A248);
  }
  return result;
}

unint64_t sub_1DC4E37F0()
{
  unint64_t result;

  result = qword_1EDB11BE0;
  if (!qword_1EDB11BE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62EA90, &type metadata for AdSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11BE0);
  }
  return result;
}

unint64_t sub_1DC4E3838()
{
  unint64_t result;

  result = qword_1EDB11BD8;
  if (!qword_1EDB11BD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62EAB8, &type metadata for AdSizeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11BD8);
  }
  return result;
}

uint64_t sub_1DC4E387C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

StocksAnalytics::VideoAdLoadState_optional __swiftcall VideoAdLoadState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::VideoAdLoadState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t VideoAdLoadState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4E39E4 + 4 * byte_1DC62EBA0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4E39E4()
{
  return 0x6572676F72506E69;
}

uint64_t sub_1DC4E3A00()
{
  return 0x506F547964616572;
}

unint64_t sub_1DC4E3A20()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC4E3A3C()
{
  return 0x54676E6964616F6CLL;
}

uint64_t sub_1DC4E3A60()
{
  return 0x64656C696166;
}

void sub_1DC4E3A74(char *a1)
{
  sub_1DC54496C(*a1);
}

unint64_t sub_1DC4E3A84()
{
  unint64_t result;

  result = qword_1F036A250;
  if (!qword_1F036A250)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdLoadState, &type metadata for VideoAdLoadState);
    atomic_store(result, (unint64_t *)&qword_1F036A250);
  }
  return result;
}

void sub_1DC4E3AC8()
{
  char *v0;

  sub_1DC601B30(*v0);
}

void sub_1DC4E3AD0(uint64_t a1)
{
  char *v1;

  sub_1DC6027B0(a1, *v1);
}

void sub_1DC4E3AD8(uint64_t a1)
{
  char *v1;

  sub_1DC60329C(a1, *v1);
}

StocksAnalytics::VideoAdLoadState_optional sub_1DC4E3AE0(Swift::String *a1)
{
  return VideoAdLoadState.init(rawValue:)(*a1);
}

uint64_t sub_1DC4E3AEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4E3B1C + 4 * byte_1DC62EBA6[*v0]))();
}

void sub_1DC4E3B1C(_QWORD *a1@<X8>)
{
  *a1 = 0x6572676F72506E69;
  a1[1] = 0xEA00000000007373;
}

void sub_1DC4E3B3C(_QWORD *a1@<X8>)
{
  *a1 = 0x506F547964616572;
  a1[1] = 0xEB0000000079616CLL;
}

void sub_1DC4E3B60(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001DC64B250;
}

void sub_1DC4E3B80(char *a1@<X8>)
{
  strcpy(a1, "loadingTimeout");
  a1[15] = -18;
}

void sub_1DC4E3BA8(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1DC4E3BC0()
{
  sub_1DC4E3D34();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4E3C1C()
{
  sub_1DC4E3D34();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E3CB4 + 4 * byte_1DC62EBB1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC4E3CE8 + 4 * byte_1DC62EBAC[v4]))();
}

uint64_t sub_1DC4E3CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E3CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E3CF8);
  return result;
}

uint64_t sub_1DC4E3D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E3D0CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC4E3D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E3D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadState()
{
  return &type metadata for VideoAdLoadState;
}

unint64_t sub_1DC4E3D34()
{
  unint64_t result;

  result = qword_1F036A258;
  if (!qword_1F036A258)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdLoadState, &type metadata for VideoAdLoadState);
    atomic_store(result, (unint64_t *)&qword_1F036A258);
  }
  return result;
}

void FeedData.feedType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *FeedData.feedType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*FeedData.feedType.modify())()
{
  return nullsub_1;
}

uint64_t FeedData.feedID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedData.feedID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*FeedData.feedID.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC4E3E10()
{
  _BYTE *v0;

  if (*v0)
    return 0x444964656566;
  else
    return 0x6570795464656566;
}

uint64_t sub_1DC4E3E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4E456C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4E3E6C()
{
  sub_1DC4E4000();
  return sub_1DC62B604();
}

uint64_t sub_1DC4E3E94()
{
  sub_1DC4E4000();
  return sub_1DC62B610();
}

uint64_t FeedData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  sub_1DC4E41F8(0, &qword_1EDB11AF8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E4000();
  sub_1DC62B5F8();
  v15 = v9;
  v14 = 0;
  sub_1DC4E4044();
  sub_1DC62B4E4();
  if (!v2)
  {
    v13 = 1;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC4E4000()
{
  unint64_t result;

  result = qword_1EDB11668;
  if (!qword_1EDB11668)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62EE4C, &type metadata for FeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11668);
  }
  return result;
}

unint64_t sub_1DC4E4044()
{
  unint64_t result;

  result = qword_1EDB11690;
  if (!qword_1EDB11690)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedType, &type metadata for FeedType);
    atomic_store(result, (unint64_t *)&qword_1EDB11690);
  }
  return result;
}

uint64_t FeedData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1DC4E41F8(0, &qword_1EDB11998, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E4000();
  sub_1DC62B5E0();
  if (!v2)
  {
    v17 = 0;
    sub_1DC4E4254();
    sub_1DC62B454();
    v10 = v18;
    v16 = 1;
    v12 = sub_1DC62B424();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4E41F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4E4000();
    v7 = a3(a1, &type metadata for FeedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4E4254()
{
  unint64_t result;

  result = qword_1EDB116A0;
  if (!qword_1EDB116A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedType, &type metadata for FeedType);
    atomic_store(result, (unint64_t *)&qword_1EDB116A0);
  }
  return result;
}

uint64_t sub_1DC4E4298@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedData.init(from:)(a1, a2);
}

uint64_t sub_1DC4E42AC(_QWORD *a1)
{
  return FeedData.encode(to:)(a1);
}

uint64_t assignWithCopy for FeedData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E4414 + 4 * byte_1DC62ECE1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC4E4448 + 4 * byte_1DC62ECDC[v4]))();
}

uint64_t sub_1DC4E4448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E4450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E4458);
  return result;
}

uint64_t sub_1DC4E4464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E446CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC4E4470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E4478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedData.CodingKeys()
{
  return &type metadata for FeedData.CodingKeys;
}

unint64_t sub_1DC4E4498()
{
  unint64_t result;

  result = qword_1F036A260;
  if (!qword_1F036A260)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62EE24, &type metadata for FeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A260);
  }
  return result;
}

unint64_t sub_1DC4E44E0()
{
  unint64_t result;

  result = qword_1EDB11678;
  if (!qword_1EDB11678)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62ED94, &type metadata for FeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11678);
  }
  return result;
}

unint64_t sub_1DC4E4528()
{
  unint64_t result;

  result = qword_1EDB11670;
  if (!qword_1EDB11670)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62EDBC, &type metadata for FeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11670);
  }
  return result;
}

uint64_t sub_1DC4E456C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6570795464656566 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444964656566 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC4E4654()
{
  return type metadata accessor for TimestampJitterFactory();
}

uint64_t sub_1DC4E465C()
{
  return sub_1DC62A584();
}

uint64_t sub_1DC4E4668()
{
  return sub_1DC62A560();
}

unint64_t sub_1DC4E4674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F036A268;
  if (!qword_1F036A268)
  {
    v1 = type metadata accessor for TimestampJitterFactory();
    result = MEMORY[0x1DF0CC744](&unk_1DC62EED8, v1);
    atomic_store(result, (unint64_t *)&qword_1F036A268);
  }
  return result;
}

uint64_t ANFComponentData.metadata.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ANFComponentData.metadata.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ANFComponentData.metadata.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ANFComponentData __swiftcall ANFComponentData.init(metadata:)(StocksAnalytics::ANFComponentData metadata)
{
  StocksAnalytics::ANFComponentData *v1;

  *v1 = metadata;
  return metadata;
}

uint64_t sub_1DC4E4734()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1DC4E474C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC4E47E0()
{
  sub_1DC4E4924();
  return sub_1DC62B604();
}

uint64_t sub_1DC4E4808()
{
  sub_1DC4E4924();
  return sub_1DC62B610();
}

uint64_t ANFComponentData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4E4A8C(0, &qword_1F036A270, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E4924();
  sub_1DC62B5F8();
  sub_1DC62B478();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC4E4924()
{
  unint64_t result;

  result = qword_1F036A278;
  if (!qword_1F036A278)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F0A4, &type metadata for ANFComponentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A278);
  }
  return result;
}

uint64_t ANFComponentData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC4E4A8C(0, &qword_1F036A280, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E4924();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B3E8();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4E4A8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4E4924();
    v7 = a3(a1, &type metadata for ANFComponentData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4E4AEC()
{
  unint64_t result;

  result = qword_1EDB0F540;
  if (!qword_1EDB0F540)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ANFComponentData, &type metadata for ANFComponentData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F540);
  }
  return result;
}

unint64_t sub_1DC4E4B34()
{
  unint64_t result;

  result = qword_1EDB0F538;
  if (!qword_1EDB0F538)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ANFComponentData, &type metadata for ANFComponentData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F538);
  }
  return result;
}

uint64_t sub_1DC4E4B78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ANFComponentData.init(from:)(a1, a2);
}

uint64_t sub_1DC4E4B8C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4E4A8C(0, &qword_1F036A270, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E4924();
  sub_1DC62B5F8();
  sub_1DC62B478();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

_QWORD *assignWithCopy for IssueData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for IssueData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ANFComponentData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ANFComponentData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ANFComponentData()
{
  return &type metadata for ANFComponentData;
}

uint64_t storeEnumTagSinglePayload for ANFComponentData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4E4DEC + 4 * byte_1DC62EF30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4E4E0C + 4 * byte_1DC62EF35[v4]))();
}

_BYTE *sub_1DC4E4DEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4E4E0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4E4E14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4E4E1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4E4E24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4E4E2C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ANFComponentData.CodingKeys()
{
  return &type metadata for ANFComponentData.CodingKeys;
}

unint64_t sub_1DC4E4E4C()
{
  unint64_t result;

  result = qword_1F036A288;
  if (!qword_1F036A288)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F07C, &type metadata for ANFComponentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A288);
  }
  return result;
}

unint64_t sub_1DC4E4E94()
{
  unint64_t result;

  result = qword_1F036A290;
  if (!qword_1F036A290)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62EFEC, &type metadata for ANFComponentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A290);
  }
  return result;
}

unint64_t sub_1DC4E4EDC()
{
  unint64_t result;

  result = qword_1F036A298;
  if (!qword_1F036A298)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F014, &type metadata for ANFComponentData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A298);
  }
  return result;
}

StocksAnalytics::AudioControlType_optional __swiftcall AudioControlType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AudioControlType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AudioControlType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6574614C79616C70;
  if (*v0 != 1)
    v1 = 0x7478654E79616C70;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC4E4FEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC544C60(*a1, *a2);
}

unint64_t sub_1DC4E4FFC()
{
  unint64_t result;

  result = qword_1F036A2A0;
  if (!qword_1F036A2A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioControlType, &type metadata for AudioControlType);
    atomic_store(result, (unint64_t *)&qword_1F036A2A0);
  }
  return result;
}

uint64_t sub_1DC4E5040()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4E50F8()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4E518C()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::AudioControlType_optional sub_1DC4E5240(Swift::String *a1)
{
  return AudioControlType.init(rawValue:)(*a1);
}

void sub_1DC4E524C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEF7377654E6E4972;
  v5 = 0x6574614C79616C70;
  if (v2 != 1)
  {
    v5 = 0x7478654E79616C70;
    v4 = 0xEE007377654E6E49;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC4E52C4()
{
  sub_1DC4E5438();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4E5320()
{
  sub_1DC4E5438();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AudioControlType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E53B8 + 4 * byte_1DC62F105[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4E53EC + 4 * byte_1DC62F100[v4]))();
}

uint64_t sub_1DC4E53EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E53F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E53FCLL);
  return result;
}

uint64_t sub_1DC4E5408(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E5410);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4E5414(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E541C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioControlType()
{
  return &type metadata for AudioControlType;
}

unint64_t sub_1DC4E5438()
{
  unint64_t result;

  result = qword_1F036A2A8;
  if (!qword_1F036A2A8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioControlType, &type metadata for AudioControlType);
    atomic_store(result, (unint64_t *)&qword_1F036A2A8);
  }
  return result;
}

StocksAnalytics::ICloudAccountState_optional __swiftcall ICloudAccountState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ICloudAccountState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ICloudAccountState.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E49646567676F6CLL;
  if (*v0 != 1)
    v1 = 0x754F646567676F6CLL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC4E5534(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC544150(*a1, *a2);
}

unint64_t sub_1DC4E5544()
{
  unint64_t result;

  result = qword_1F036A2B0;
  if (!qword_1F036A2B0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ICloudAccountState, &type metadata for ICloudAccountState);
    atomic_store(result, (unint64_t *)&qword_1F036A2B0);
  }
  return result;
}

uint64_t sub_1DC4E5588()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4E562C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4E56AC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ICloudAccountState_optional sub_1DC4E574C(Swift::String *a1)
{
  return ICloudAccountState.init(rawValue:)(*a1);
}

uint64_t sub_1DC4E5758()
{
  sub_1DC4B578C();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for ICloudAccountState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E5800 + 4 * byte_1DC62F225[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4E5834 + 4 * byte_1DC62F220[v4]))();
}

uint64_t sub_1DC4E5834(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E583C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E5844);
  return result;
}

uint64_t sub_1DC4E5850(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E5858);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4E585C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E5864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICloudAccountState()
{
  return &type metadata for ICloudAccountState;
}

uint64_t sub_1DC4E5880(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036A2B8, MEMORY[0x1E0CF8078]);
}

uint64_t static ResetUserIDEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F40, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036A2B8, a1);
}

uint64_t sub_1DC4E58C0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036A2D0, MEMORY[0x1E0CF8380]);
}

uint64_t static ResetUserIDEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F48, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036A2D0, a1);
}

uint64_t ResetUserIDEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ResetUserIDEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ResetUserIDEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ResetUserIDEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t ResetUserIDEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ResetUserIDEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1DC4E59E0()
{
  sub_1DC4E5B40();
  return sub_1DC62B604();
}

uint64_t sub_1DC4E5A08()
{
  sub_1DC4E5B40();
  return sub_1DC62B610();
}

uint64_t ResetUserIDEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4E5D5C(0, &qword_1F036A2E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E5B40();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC4E5B40()
{
  unint64_t result;

  result = qword_1F036A2F0;
  if (!qword_1F036A2F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F4CC, &type metadata for ResetUserIDEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A2F0);
  }
  return result;
}

uint64_t ResetUserIDEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4E5D5C(0, &qword_1F036A2F8, MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for ResetUserIDEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E5B40();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    v15 = v19;
    v14 = v20;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_1DC4E5DCC(v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4E5D5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4E5B40();
    v7 = a3(a1, &type metadata for ResetUserIDEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for ResetUserIDEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036A3E8);
}

uint64_t sub_1DC4E5DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResetUserIDEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4E5E10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ResetUserIDEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4E5E24(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4E5D5C(0, &qword_1F036A2E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E5B40();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC4E5F34@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F40, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036A2B8, a1);
}

uint64_t sub_1DC4E5F58@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F48, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036A2D0, a1);
}

uint64_t getEnumTagSinglePayload for ResetUserIDEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E5F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t storeEnumTagSinglePayload for ResetUserIDEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E5FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t type metadata accessor for ResetUserIDEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036A358);
}

uint64_t getEnumTagSinglePayload for ResetUserIDEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E5FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for ResetUserIDEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E5FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for ResetUserIDEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4E6030 + 4 * byte_1DC62F340[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4E6050 + 4 * byte_1DC62F345[v4]))();
}

_BYTE *sub_1DC4E6030(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4E6050(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4E6058(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4E6060(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4E6068(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4E6070(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResetUserIDEvent.Model.CodingKeys()
{
  return &type metadata for ResetUserIDEvent.Model.CodingKeys;
}

unint64_t sub_1DC4E6090()
{
  unint64_t result;

  result = qword_1F036A420;
  if (!qword_1F036A420)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F4A4, &type metadata for ResetUserIDEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A420);
  }
  return result;
}

unint64_t sub_1DC4E60D8()
{
  unint64_t result;

  result = qword_1F036A428;
  if (!qword_1F036A428)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F414, &type metadata for ResetUserIDEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A428);
  }
  return result;
}

unint64_t sub_1DC4E6120()
{
  unint64_t result;

  result = qword_1F036A430;
  if (!qword_1F036A430)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F43C, &type metadata for ResetUserIDEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A430);
  }
  return result;
}

uint64_t sub_1DC4E6164(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036A438, MEMORY[0x1E0CF8078]);
}

uint64_t static EOAGroupExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036A438, a1);
}

uint64_t sub_1DC4E61A4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036A450, MEMORY[0x1E0CF8380]);
}

uint64_t static EOAGroupExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036A450, a1);
}

uint64_t EOAGroupExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t EOAGroupExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EOAGroupExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for EOAGroupExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for EOAGroupExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036A4D8);
}

uint64_t EOAGroupExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.timedData.modify())()
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.groupData.modify())()
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.feedData.modify())()
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4E6528()
{
  unint64_t result;

  result = qword_1EDB0F2B8;
  if (!qword_1EDB0F2B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleViewData, &type metadata for ArticleViewData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F2B8);
  }
  return result;
}

unint64_t sub_1DC4E656C()
{
  unint64_t result;

  result = qword_1EDB0F2B0;
  if (!qword_1EDB0F2B0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleViewData, &type metadata for ArticleViewData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F2B0);
  }
  return result;
}

uint64_t EOAGroupExposureEvent.hostArticleViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleViewData.modify())()
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.hostArticleNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleNewsArticleData.modify())()
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.hostArticleChannelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleChannelData.modify())()
{
  type metadata accessor for EOAGroupExposureEvent(0);
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for EOAGroupExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v2, v16);
}

uint64_t EOAGroupExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EOAGroupExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for EOAGroupExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for EOAGroupExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036A580);
}

uint64_t EOAGroupExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 32);
  v6 = *(_QWORD *)(v3 + 40);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.hostArticleViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 EOAGroupExposureEvent.Model.init(eventData:timedData:groupData:feedData:hostArticleViewData:hostArticleNewsArticleData:hostArticleChannelData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, __int128 *a6@<X5>, __n128 *a7@<X6>, uint64_t a8@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __n128 *v27;
  __n128 result;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;

  v12 = *a3;
  v13 = *((_QWORD *)a3 + 1);
  v14 = *((_QWORD *)a3 + 2);
  v16 = *((_QWORD *)a3 + 4);
  v15 = *((_QWORD *)a3 + 5);
  v30 = *a4;
  v17 = *((_QWORD *)a4 + 2);
  v29 = *((_QWORD *)a4 + 1);
  v31 = a5[1];
  v32 = *a5;
  v43 = *a6;
  v41 = *((_QWORD *)a6 + 3);
  v42 = *((_QWORD *)a6 + 2);
  v40 = *((_BYTE *)a6 + 32);
  v39 = *((_QWORD *)a6 + 5);
  v38 = *((_BYTE *)a6 + 48);
  v37 = *((_QWORD *)a6 + 7);
  v35 = *((_BYTE *)a6 + 65);
  v36 = *((_BYTE *)a6 + 64);
  v33 = *((_BYTE *)a6 + 67);
  v34 = *((_BYTE *)a6 + 66);
  v48 = *a7;
  v46 = a7[1].n128_u64[1];
  v47 = a7[1].n128_u64[0];
  v44 = a7[2].n128_u8[1];
  v45 = a7[2].n128_u8[0];
  v18 = sub_1DC62ABA8();
  v19 = *((_QWORD *)a3 + 3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  v20 = (int *)type metadata accessor for EOAGroupExposureEvent.Model(0);
  v21 = a8 + v20[5];
  v22 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a2, v22);
  v23 = a8 + v20[6];
  *(_BYTE *)v23 = v12;
  *(_QWORD *)(v23 + 8) = v13;
  *(_QWORD *)(v23 + 16) = v14;
  *(_QWORD *)(v23 + 24) = v19;
  *(_QWORD *)(v23 + 32) = v16;
  *(_QWORD *)(v23 + 40) = v15;
  v24 = a8 + v20[7];
  *(_BYTE *)v24 = v30;
  *(_QWORD *)(v24 + 8) = v29;
  *(_QWORD *)(v24 + 16) = v17;
  v25 = (_QWORD *)(a8 + v20[8]);
  *v25 = v32;
  v25[1] = v31;
  v26 = a8 + v20[9];
  *(_OWORD *)v26 = v43;
  *(_QWORD *)(v26 + 16) = v42;
  *(_QWORD *)(v26 + 24) = v41;
  *(_BYTE *)(v26 + 32) = v40;
  *(_QWORD *)(v26 + 40) = v39;
  *(_BYTE *)(v26 + 48) = v38;
  *(_QWORD *)(v26 + 56) = v37;
  *(_BYTE *)(v26 + 64) = v36;
  *(_BYTE *)(v26 + 65) = v35;
  *(_BYTE *)(v26 + 66) = v34;
  *(_BYTE *)(v26 + 67) = v33;
  v27 = (__n128 *)(a8 + v20[10]);
  result = v48;
  *v27 = v48;
  v27[1].n128_u64[0] = v47;
  v27[1].n128_u64[1] = v46;
  v27[2].n128_u8[0] = v45;
  v27[2].n128_u8[1] = v44;
  return result;
}

uint64_t sub_1DC4E6DF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4E6E30 + 4 * byte_1DC62F520[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4E6E30()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC4E6E44()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC4E6E58()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC4E6E70()
{
  return 0xD000000000000013;
}

unint64_t sub_1DC4E6E8C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1DC4E6EC4()
{
  unsigned __int8 *v0;

  return sub_1DC4E6DF8(*v0);
}

uint64_t sub_1DC4E6ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4E9A80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4E6EF0()
{
  sub_1DC4E72B8();
  return sub_1DC62B604();
}

uint64_t sub_1DC4E6F18()
{
  sub_1DC4E72B8();
  return sub_1DC62B610();
}

uint64_t EOAGroupExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;

  v3 = v1;
  sub_1DC4E7964(0, &qword_1F036A468, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4E72B8();
  sub_1DC62B5F8();
  LOBYTE(v39) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for EOAGroupExposureEvent.Model(0);
    LOBYTE(v39) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 8);
    v13 = *(_QWORD *)(v11 + 16);
    LOBYTE(v39) = *(_BYTE *)v11;
    *((_QWORD *)&v39 + 1) = v12;
    v40 = v13;
    v41 = *(_QWORD *)(v11 + 24);
    v42 = *(_OWORD *)(v11 + 32);
    v49 = 2;
    sub_1DC4C9004();
    sub_1DC62B4E4();
    v14 = (char *)(v3 + v10[7]);
    v15 = *v14;
    v17 = *((_QWORD *)v14 + 1);
    v16 = *((_QWORD *)v14 + 2);
    LOBYTE(v39) = v15;
    *((_QWORD *)&v39 + 1) = v17;
    v40 = v16;
    v49 = 3;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v18 = (uint64_t *)(v3 + v10[8]);
    v20 = *v18;
    v19 = v18[1];
    *(_QWORD *)&v39 = v20;
    *((_QWORD *)&v39 + 1) = v19;
    v49 = 4;
    sub_1DC4E656C();
    sub_1DC62B4E4();
    v21 = (__int128 *)(v3 + v10[9]);
    v22 = *v21;
    v23 = *((_QWORD *)v21 + 2);
    v24 = *((_QWORD *)v21 + 3);
    v25 = *((_BYTE *)v21 + 32);
    v26 = *((_QWORD *)v21 + 5);
    v27 = *((_BYTE *)v21 + 48);
    v28 = *((_QWORD *)v21 + 7);
    v29 = *((_BYTE *)v21 + 64);
    v30 = *((_BYTE *)v21 + 65);
    v31 = *((_BYTE *)v21 + 66);
    LOBYTE(v21) = *((_BYTE *)v21 + 67);
    v39 = v22;
    v40 = v23;
    v41 = v24;
    LOBYTE(v42) = v25;
    *((_QWORD *)&v42 + 1) = v26;
    v43 = v27;
    v44 = v28;
    v45 = v29;
    v46 = v30;
    v47 = v31;
    v48 = (char)v21;
    v49 = 5;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v32 = (__int128 *)(v3 + v10[10]);
    v33 = *v32;
    v34 = *((_QWORD *)v32 + 2);
    v35 = *((_QWORD *)v32 + 3);
    v36 = *((_BYTE *)v32 + 32);
    LOBYTE(v32) = *((_BYTE *)v32 + 33);
    v39 = v33;
    v40 = v34;
    v41 = v35;
    LOBYTE(v42) = v36;
    BYTE1(v42) = (_BYTE)v32;
    v49 = 6;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4E72B8()
{
  unint64_t result;

  result = qword_1F036A470;
  if (!qword_1F036A470)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F78C, &type metadata for EOAGroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A470);
  }
  return result;
}

uint64_t EOAGroupExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char *v43;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v46 = a2;
  v49 = sub_1DC62ABC0();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v48 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DC62ABA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4E7964(0, &qword_1F036A478, MEMORY[0x1E0DED048]);
  v51 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v45 - v9;
  v11 = (int *)type metadata accessor for EOAGroupExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DC4E72B8();
  v52 = v10;
  v15 = v54;
  sub_1DC62B5E0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  v17 = v48;
  v16 = v49;
  v54 = v8;
  LOBYTE(v55) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v19 = v50;
  v50 = (char *)v4;
  v18(v13, v19, v4);
  LOBYTE(v55) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v13[v11[5]], v17, v16);
  v65 = 2;
  sub_1DC4C8FC0();
  sub_1DC62B454();
  v20 = *((_QWORD *)&v55 + 1);
  v21 = v56;
  v22 = &v13[v11[6]];
  *v22 = v55;
  *((_QWORD *)v22 + 1) = v20;
  *((_QWORD *)v22 + 2) = v21;
  *((_QWORD *)v22 + 3) = v57;
  *((_OWORD *)v22 + 2) = v58;
  v65 = 3;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v45[1] = v11;
  v23 = *((_QWORD *)&v55 + 1);
  v24 = v56;
  v25 = &v13[v11[7]];
  *v25 = v55;
  *((_QWORD *)v25 + 1) = v23;
  *((_QWORD *)v25 + 2) = v24;
  v65 = 4;
  sub_1DC4E6528();
  v48 = 0;
  sub_1DC62B454();
  v26 = *((_QWORD *)&v55 + 1);
  v27 = &v13[v11[8]];
  *(_QWORD *)v27 = v55;
  *((_QWORD *)v27 + 1) = v26;
  v65 = 5;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v28 = v56;
  v29 = v57;
  v30 = v58;
  v31 = *((_QWORD *)&v58 + 1);
  v32 = v59;
  v33 = v60;
  v34 = v61;
  v35 = v62;
  v36 = v63;
  v37 = v64;
  v38 = &v13[v11[9]];
  *(_OWORD *)v38 = v55;
  *((_QWORD *)v38 + 2) = v28;
  *((_QWORD *)v38 + 3) = v29;
  v38[32] = v30;
  *((_QWORD *)v38 + 5) = v31;
  v38[48] = v32;
  *((_QWORD *)v38 + 7) = v33;
  v38[64] = v34;
  v38[65] = v35;
  v38[66] = v36;
  v38[67] = v37;
  v65 = 6;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v51);
  v39 = v56;
  v40 = v57;
  v41 = v58;
  v42 = BYTE1(v58);
  v43 = &v13[v11[10]];
  *(_OWORD *)v43 = v55;
  *((_QWORD *)v43 + 2) = v39;
  *((_QWORD *)v43 + 3) = v40;
  v43[32] = v41;
  v43[33] = v42;
  sub_1DC4E79C0((uint64_t)v13, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return sub_1DC4E7A04((uint64_t)v13);
}

void sub_1DC4E7964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4E72B8();
    v7 = a3(a1, &type metadata for EOAGroupExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4E79C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EOAGroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4E7A04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EOAGroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4E7A40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EOAGroupExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4E7A54(_QWORD *a1)
{
  return EOAGroupExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4E7A68@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036A438, a1);
}

uint64_t sub_1DC4E7A8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036A450, a1);
}

uint64_t sub_1DC4E7AB0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v4, v17);
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAGroupExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for EOAGroupExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAGroupExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E8880(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for EOAGroupExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E8A54(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4E8C24()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAGroupExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
    v17 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v17;
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    *v18 = *v19;
    v20 = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    *((_QWORD *)v18 + 2) = v20;
    v21 = a3[8];
    v22 = a3[9];
    v23 = (uint64_t *)((char *)a1 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (char *)a1 + v22;
    v27 = (char *)a2 + v22;
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = *((_QWORD *)v27 + 3);
    *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 3) = v29;
    v26[32] = v27[32];
    *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
    v26[48] = v27[48];
    *((_QWORD *)v26 + 7) = *((_QWORD *)v27 + 7);
    *((_DWORD *)v26 + 16) = *((_DWORD *)v27 + 16);
    v30 = a3[10];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = *((_QWORD *)v32 + 3);
    *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
    *((_QWORD *)v31 + 3) = v34;
    v31[32] = v32[32];
    v31[33] = v32[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  v17 = a1 + v12;
  v18 = a2 + v12;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a1 + v21;
  v26 = a2 + v21;
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  v28 = *(_QWORD *)(v26 + 24);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 24) = v28;
  *(_BYTE *)(v25 + 32) = *(_BYTE *)(v26 + 32);
  *(_QWORD *)(v25 + 40) = *(_QWORD *)(v26 + 40);
  *(_BYTE *)(v25 + 48) = *(_BYTE *)(v26 + 48);
  *(_QWORD *)(v25 + 56) = *(_QWORD *)(v26 + 56);
  *(_DWORD *)(v25 + 64) = *(_DWORD *)(v26 + 64);
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  v33 = *(_QWORD *)(v31 + 24);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(v30 + 24) = v33;
  *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
  *(_BYTE *)(v30 + 33) = *(_BYTE *)(v31 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
  *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_QWORD *)v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  v23 = *(_QWORD *)(v22 + 40);
  *(_BYTE *)(v21 + 48) = *(_BYTE *)(v22 + 48);
  *(_QWORD *)(v21 + 40) = v23;
  *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
  *(_BYTE *)(v21 + 64) = *(_BYTE *)(v22 + 64);
  *(_BYTE *)(v21 + 65) = *(_BYTE *)(v22 + 65);
  *(_BYTE *)(v21 + 66) = *(_BYTE *)(v22 + 66);
  *(_BYTE *)(v21 + 67) = *(_BYTE *)(v22 + 67);
  v24 = a3[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(a2 + v24 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v25 + 32) = *(_BYTE *)(v26 + 32);
  *(_BYTE *)(v25 + 33) = *(_BYTE *)(v26 + 33);
  return a1;
}

uint64_t initializeWithTake for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v18 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_DWORD *)(v19 + 64) = *(_DWORD *)(v20 + 64);
  v21 = *(_OWORD *)(v20 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  v22 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v22;
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = (__int128 *)(a2 + v23);
  v26 = *v25;
  v27 = v25[1];
  *(_WORD *)(v24 + 32) = *((_WORD *)v25 + 16);
  *(_OWORD *)v24 = v26;
  *(_OWORD *)(v24 + 16) = v27;
  return a1;
}

uint64_t assignWithTake for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (_QWORD *)(a2 + v11);
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 24) = v13[3];
  v15 = v13[5];
  *(_QWORD *)(v12 + 32) = v13[4];
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = v20;
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26 + 8);
  *(_QWORD *)v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v28 + 24);
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 24) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 32) = *(_BYTE *)(v28 + 32);
  *(_QWORD *)(v27 + 40) = *(_QWORD *)(v28 + 40);
  *(_BYTE *)(v27 + 48) = *(_BYTE *)(v28 + 48);
  *(_QWORD *)(v27 + 56) = *(_QWORD *)(v28 + 56);
  *(_BYTE *)(v27 + 64) = *(_BYTE *)(v28 + 64);
  *(_BYTE *)(v27 + 65) = *(_BYTE *)(v28 + 65);
  *(_BYTE *)(v27 + 66) = *(_BYTE *)(v28 + 66);
  *(_BYTE *)(v27 + 67) = *(_BYTE *)(v28 + 67);
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v33 + 24);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v32 + 24) = v35;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 32) = *(_BYTE *)(v33 + 32);
  *(_BYTE *)(v32 + 33) = *(_BYTE *)(v33 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAGroupExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E96C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EOAGroupExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4E9780(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4E9828()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EOAGroupExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DC4E9928 + 4 * byte_1DC62F52C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DC4E995C + 4 * byte_1DC62F527[v4]))();
}

uint64_t sub_1DC4E995C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E9964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4E996CLL);
  return result;
}

uint64_t sub_1DC4E9978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4E9980);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DC4E9984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4E998C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EOAGroupExposureEvent.Model.CodingKeys()
{
  return &type metadata for EOAGroupExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC4E99AC()
{
  unint64_t result;

  result = qword_1F036A5D0;
  if (!qword_1F036A5D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F764, &type metadata for EOAGroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A5D0);
  }
  return result;
}

unint64_t sub_1DC4E99F4()
{
  unint64_t result;

  result = qword_1F036A5D8;
  if (!qword_1F036A5D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F6D4, &type metadata for EOAGroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A5D8);
  }
  return result;
}

unint64_t sub_1DC4E9A3C()
{
  unint64_t result;

  result = qword_1F036A5E0;
  if (!qword_1F036A5E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F6FC, &type metadata for EOAGroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A5E0);
  }
  return result;
}

uint64_t sub_1DC4E9A80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C120 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DC64C140 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C160)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void GalleryData.galleryType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *GalleryData.galleryType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*GalleryData.galleryType.modify())()
{
  return nullsub_1;
}

uint64_t GalleryData.galleryID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GalleryData.galleryID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*GalleryData.galleryID.modify())()
{
  return nullsub_1;
}

uint64_t GalleryData.galleryImageCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24);
}

uint64_t GalleryData.galleryImageCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*GalleryData.galleryImageCount.modify())()
{
  return nullsub_1;
}

_BYTE *GalleryData.init(galleryType:galleryID:galleryImageCount:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  *(_BYTE *)a5 = *result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_DWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t sub_1DC4E9E2C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x497972656C6C6167;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x547972656C6C6167;
}

uint64_t sub_1DC4E9E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4EA774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4E9EBC()
{
  sub_1DC4EA084();
  return sub_1DC62B604();
}

uint64_t sub_1DC4E9EE4()
{
  sub_1DC4EA084();
  return sub_1DC62B610();
}

uint64_t GalleryData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  int v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1DC4EA2EC(0, &qword_1F036A5E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v10;
  v13 = *((_DWORD *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EA084();
  sub_1DC62B5F8();
  v17 = v9;
  v16 = 0;
  sub_1DC4EA0C8();
  sub_1DC62B4E4();
  if (!v2)
  {
    v15 = 1;
    sub_1DC62B4B4();
    v14 = 2;
    sub_1DC62B4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC4EA084()
{
  unint64_t result;

  result = qword_1F036A5F0;
  if (!qword_1F036A5F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F954, &type metadata for GalleryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A5F0);
  }
  return result;
}

unint64_t sub_1DC4EA0C8()
{
  unint64_t result;

  result = qword_1F036A5F8;
  if (!qword_1F036A5F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GalleryType, &type metadata for GalleryType);
    atomic_store(result, (unint64_t *)&qword_1F036A5F8);
  }
  return result;
}

uint64_t GalleryData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  char v21;
  unsigned __int8 v22;

  sub_1DC4EA2EC(0, &qword_1F036A600, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EA084();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  sub_1DC4EA348();
  sub_1DC62B454();
  v10 = v22;
  v20 = 1;
  v11 = sub_1DC62B424();
  v13 = v12;
  v17 = v11;
  v18 = v10;
  v19 = 2;
  swift_bridgeObjectRetain();
  v14 = sub_1DC62B460();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_BYTE *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 24) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC4EA2EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4EA084();
    v7 = a3(a1, &type metadata for GalleryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4EA348()
{
  unint64_t result;

  result = qword_1F036A608;
  if (!qword_1F036A608)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GalleryType, &type metadata for GalleryType);
    atomic_store(result, (unint64_t *)&qword_1F036A608);
  }
  return result;
}

unint64_t sub_1DC4EA390()
{
  unint64_t result;

  result = qword_1EDB0ED98;
  if (!qword_1EDB0ED98)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GalleryData, &type metadata for GalleryData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED98);
  }
  return result;
}

unint64_t sub_1DC4EA3D8()
{
  unint64_t result;

  result = qword_1EDB0ED90;
  if (!qword_1EDB0ED90)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GalleryData, &type metadata for GalleryData);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED90);
  }
  return result;
}

uint64_t sub_1DC4EA41C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GalleryData.init(from:)(a1, a2);
}

uint64_t sub_1DC4EA430(_QWORD *a1)
{
  return GalleryData.encode(to:)(a1);
}

uint64_t initializeWithCopy for GalleryData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GalleryData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy28_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GalleryData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GalleryData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 28))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GalleryData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 28) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 28) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GalleryData()
{
  return &type metadata for GalleryData;
}

uint64_t storeEnumTagSinglePayload for GalleryData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4EA61C + 4 * byte_1DC62F7E1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4EA650 + 4 * byte_1DC62F7DC[v4]))();
}

uint64_t sub_1DC4EA650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4EA658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4EA660);
  return result;
}

uint64_t sub_1DC4EA66C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4EA674);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4EA678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4EA680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GalleryData.CodingKeys()
{
  return &type metadata for GalleryData.CodingKeys;
}

unint64_t sub_1DC4EA6A0()
{
  unint64_t result;

  result = qword_1F036A610;
  if (!qword_1F036A610)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F92C, &type metadata for GalleryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A610);
  }
  return result;
}

unint64_t sub_1DC4EA6E8()
{
  unint64_t result;

  result = qword_1F036A618;
  if (!qword_1F036A618)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F89C, &type metadata for GalleryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A618);
  }
  return result;
}

unint64_t sub_1DC4EA730()
{
  unint64_t result;

  result = qword_1F036A620;
  if (!qword_1F036A620)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62F8C4, &type metadata for GalleryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A620);
  }
  return result;
}

uint64_t sub_1DC4EA774(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x547972656C6C6167 && a2 == 0xEB00000000657079;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x497972656C6C6167 && a2 == 0xE900000000000044 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64C180)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t NetworkEventData.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DC62A1A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t NetworkEventData.startTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DC62A1A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NetworkEventData.startTime.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.cacheState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for NetworkEventData()
{
  uint64_t result;

  result = qword_1EDB0F660;
  if (!qword_1EDB0F660)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t NetworkEventData.cacheState.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*NetworkEventData.cacheState.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.dnsDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 24));
}

uint64_t NetworkEventData.dnsDuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*NetworkEventData.dnsDuration.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.connectDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 28));
}

uint64_t NetworkEventData.connectDuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*NetworkEventData.connectDuration.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.requestDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 32));
}

uint64_t NetworkEventData.requestDuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*NetworkEventData.requestDuration.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.responseDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 36));
}

uint64_t NetworkEventData.responseDuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*NetworkEventData.responseDuration.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.taskDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 40));
}

uint64_t NetworkEventData.taskDuration.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for NetworkEventData();
  v6 = v2 + *(int *)(result + 40);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*NetworkEventData.taskDuration.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.responseSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 44));
}

uint64_t NetworkEventData.responseSize.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*NetworkEventData.responseSize.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.statusCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 48));
}

uint64_t NetworkEventData.statusCode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*NetworkEventData.statusCode.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 52));
}

uint64_t NetworkEventData.errorCode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_QWORD *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*NetworkEventData.errorCode.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.eventType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t NetworkEventData.eventType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 56)) = v2;
  return result;
}

uint64_t (*NetworkEventData.eventType.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.cellularRadioAccessTechnology.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t NetworkEventData.cellularRadioAccessTechnology.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 60)) = v2;
  return result;
}

uint64_t (*NetworkEventData.cellularRadioAccessTechnology.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.dataSource.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetworkEventData.dataSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for NetworkEventData() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetworkEventData.dataSource.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.requestedItemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 68));
}

uint64_t NetworkEventData.requestedItemCount.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for NetworkEventData();
  v6 = v2 + *(int *)(result + 68);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*NetworkEventData.requestedItemCount.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.returnedItemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 72));
}

uint64_t NetworkEventData.returnedItemCount.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for NetworkEventData();
  v6 = v2 + *(int *)(result + 72);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*NetworkEventData.returnedItemCount.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.missingItemIDs.getter()
{
  type metadata accessor for NetworkEventData();
  return swift_bridgeObjectRetain();
}

uint64_t NetworkEventData.missingItemIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for NetworkEventData() + 76);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*NetworkEventData.missingItemIDs.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.invalidItemIDs.getter()
{
  type metadata accessor for NetworkEventData();
  return swift_bridgeObjectRetain();
}

uint64_t NetworkEventData.invalidItemIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for NetworkEventData() + 80);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*NetworkEventData.invalidItemIDs.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.respondingPop.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetworkEventData.respondingPop.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for NetworkEventData() + 84));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetworkEventData.respondingPop.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.isProxyConnection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 88));
}

uint64_t NetworkEventData.isProxyConnection.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NetworkEventData();
  *(_BYTE *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*NetworkEventData.isProxyConnection.modify())()
{
  type metadata accessor for NetworkEventData();
  return nullsub_1;
}

uint64_t NetworkEventData.init(startTime:cacheState:dnsDuration:connectDuration:requestDuration:responseDuration:taskDuration:responseSize:statusCode:errorCode:eventType:cellularRadioAccessTechnology:dataSource:requestedItemCount:returnedItemCount:missingItemIDs:invalidItemIDs:respondingPop:isProxyConnection:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  char v27;
  int *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  char v38;
  char v39;

  v27 = *a2;
  v38 = *a13;
  v39 = *a14;
  v28 = (int *)type metadata accessor for NetworkEventData();
  v29 = a9 + v28[10];
  v30 = (_QWORD *)(a9 + v28[16]);
  v31 = a9 + v28[17];
  v32 = v28[19];
  v33 = a9 + v28[18];
  v37 = v28[20];
  v34 = (_QWORD *)(a9 + v28[21]);
  v35 = sub_1DC62A1A0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a9, a1, v35);
  *(_BYTE *)(a9 + v28[5]) = v27;
  *(_QWORD *)(a9 + v28[6]) = a3;
  *(_QWORD *)(a9 + v28[7]) = a4;
  *(_QWORD *)(a9 + v28[8]) = a5;
  *(_QWORD *)(a9 + v28[9]) = a6;
  *(_QWORD *)v29 = a7;
  *(_BYTE *)(v29 + 8) = a8 & 1;
  *(_QWORD *)(a9 + v28[11]) = a10;
  *(_QWORD *)(a9 + v28[12]) = a11;
  *(_QWORD *)(a9 + v28[13]) = a12;
  *(_BYTE *)(a9 + v28[14]) = v38;
  *(_BYTE *)(a9 + v28[15]) = v39;
  *v30 = a15;
  v30[1] = a16;
  *(_QWORD *)v31 = a17;
  *(_BYTE *)(v31 + 8) = a18 & 1;
  *(_QWORD *)v33 = a19;
  *(_BYTE *)(v33 + 8) = a20 & 1;
  *(_QWORD *)(a9 + v32) = a21;
  *(_QWORD *)(a9 + v37) = a22;
  *v34 = a23;
  v34[1] = a24;
  *(_BYTE *)(a9 + v28[22]) = a25;
  return result;
}

uint64_t sub_1DC4EB504(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4EB53C + 4 * byte_1DC62F9B0[a1]))(0x6D69547472617473, 0xE900000000000065);
}

uint64_t sub_1DC4EB53C()
{
  return 0x6174536568636163;
}

uint64_t sub_1DC4EB55C()
{
  return 0x7461727544736E64;
}

uint64_t sub_1DC4EB57C()
{
  return 0x447463656E6E6F63;
}

unint64_t sub_1DC4EB5B0()
{
  return 0xD000000000000010;
}

unint64_t sub_1DC4EB6A4()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC4EB728()
{
  unsigned __int8 *v0;

  return sub_1DC4EB504(*v0);
}

uint64_t sub_1DC4EB730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4ED298(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4EB754(_BYTE *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_1DC4EB760()
{
  sub_1DC4EBCB4();
  return sub_1DC62B604();
}

uint64_t sub_1DC4EB788()
{
  sub_1DC4EBCB4();
  return sub_1DC62B610();
}

uint64_t NetworkEventData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = v1;
  sub_1DC4EC488(0, &qword_1EDB11A48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EBCB4();
  sub_1DC62B5F8();
  LOBYTE(v13) = 0;
  sub_1DC62A1A0();
  sub_1DC4B6748(&qword_1EDB0E560, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NetworkEventData();
    LOBYTE(v13) = *(_BYTE *)(v3 + v10[5]);
    v14 = 1;
    sub_1DC4EBCF8();
    sub_1DC62B4E4();
    LOBYTE(v13) = 2;
    sub_1DC62B4FC();
    LOBYTE(v13) = 3;
    sub_1DC62B4FC();
    LOBYTE(v13) = 4;
    sub_1DC62B4FC();
    LOBYTE(v13) = 5;
    sub_1DC62B4FC();
    LOBYTE(v13) = 6;
    sub_1DC62B4A8();
    LOBYTE(v13) = 7;
    sub_1DC62B4FC();
    LOBYTE(v13) = 8;
    sub_1DC62B4FC();
    LOBYTE(v13) = 9;
    sub_1DC62B4FC();
    LOBYTE(v13) = *(_BYTE *)(v3 + v10[14]);
    v14 = 10;
    sub_1DC4EBD3C();
    sub_1DC62B4E4();
    LOBYTE(v13) = *(_BYTE *)(v3 + v10[15]);
    v14 = 11;
    sub_1DC4EBD80();
    sub_1DC62B4E4();
    LOBYTE(v13) = 12;
    sub_1DC62B478();
    LOBYTE(v13) = 13;
    sub_1DC62B4A8();
    LOBYTE(v13) = 14;
    sub_1DC62B4A8();
    v13 = *(_QWORD *)(v3 + v10[19]);
    v14 = 15;
    sub_1DC4B72F4();
    sub_1DC4B7298(&qword_1EDB11888, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1DC62B490();
    v13 = *(_QWORD *)(v3 + v10[20]);
    v14 = 16;
    sub_1DC62B490();
    LOBYTE(v13) = 17;
    sub_1DC62B478();
    LOBYTE(v13) = 18;
    sub_1DC62B4C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4EBCB4()
{
  unint64_t result;

  result = qword_1EDB0F630;
  if (!qword_1EDB0F630)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FC84, &type metadata for NetworkEventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F630);
  }
  return result;
}

unint64_t sub_1DC4EBCF8()
{
  unint64_t result;

  result = qword_1EDB0ECB8;
  if (!qword_1EDB0ECB8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CacheState, &type metadata for CacheState);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECB8);
  }
  return result;
}

unint64_t sub_1DC4EBD3C()
{
  unint64_t result;

  result = qword_1EDB0F738;
  if (!qword_1EDB0F738)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for NetworkEventType, &type metadata for NetworkEventType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F738);
  }
  return result;
}

unint64_t sub_1DC4EBD80()
{
  unint64_t result;

  result = qword_1EDB110F8;
  if (!qword_1EDB110F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CellularRadioAccessTechnology, &type metadata for CellularRadioAccessTechnology);
    atomic_store(result, (unint64_t *)&qword_1EDB110F8);
  }
  return result;
}

uint64_t NetworkEventData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  char v56;

  v42 = a2;
  v46 = sub_1DC62A1A0();
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4EC488(0, &qword_1F036A628, MEMORY[0x1E0DED048]);
  v48 = v4;
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - v5;
  v7 = type metadata accessor for NetworkEventData();
  v8 = (int *)MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v10[v8[10]];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v10[v8[16]];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v53 = (uint64_t *)v12;
  v54 = v10;
  v13 = &v10[v8[17]];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = &v10[v8[18]];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v50 = v8[19];
  *(_QWORD *)&v10[v50] = 0;
  v51 = v8[20];
  *(_QWORD *)&v10[v51] = 0;
  v15 = &v10[v8[21]];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v52 = (uint64_t *)v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EBCB4();
  v47 = v6;
  v16 = v49;
  sub_1DC62B5E0();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v17 = v11;
    v40 = (uint64_t *)v14;
    v41 = (uint64_t *)v13;
    v49 = (int *)v7;
    v18 = v44;
    LOBYTE(v55) = 0;
    sub_1DC4B6748(&qword_1F036A630, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v20 = v45;
    v19 = v46;
    sub_1DC62B454();
    v21 = v54;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v54, v20, v19);
    v56 = 1;
    sub_1DC4EC4E4();
    sub_1DC62B454();
    v21[v49[5]] = v55;
    LOBYTE(v55) = 2;
    *(_QWORD *)&v21[v49[6]] = sub_1DC62B46C();
    LOBYTE(v55) = 3;
    *(_QWORD *)&v21[v49[7]] = sub_1DC62B46C();
    LOBYTE(v55) = 4;
    *(_QWORD *)&v21[v49[8]] = sub_1DC62B46C();
    LOBYTE(v55) = 5;
    *(_QWORD *)&v21[v49[9]] = sub_1DC62B46C();
    LOBYTE(v55) = 6;
    *(_QWORD *)v17 = sub_1DC62B418();
    v17[8] = v22 & 1;
    LOBYTE(v55) = 7;
    v23 = sub_1DC62B46C();
    v24 = v49;
    *(_QWORD *)&v21[v49[11]] = v23;
    LOBYTE(v55) = 8;
    *(_QWORD *)&v21[v24[12]] = sub_1DC62B46C();
    LOBYTE(v55) = 9;
    *(_QWORD *)&v54[v49[13]] = sub_1DC62B46C();
    v56 = 10;
    sub_1DC4EC528();
    sub_1DC62B454();
    v54[v49[14]] = v55;
    v56 = 11;
    sub_1DC4EC56C();
    sub_1DC62B454();
    v54[v49[15]] = v55;
    LOBYTE(v55) = 12;
    v25 = sub_1DC62B3E8();
    v26 = v53;
    *v53 = v25;
    v26[1] = v27;
    LOBYTE(v55) = 13;
    v28 = sub_1DC62B418();
    v29 = v41;
    *v41 = v28;
    *((_BYTE *)v29 + 8) = v30 & 1;
    LOBYTE(v55) = 14;
    v31 = sub_1DC62B418();
    v32 = v40;
    *v40 = v31;
    *((_BYTE *)v32 + 8) = v33 & 1;
    sub_1DC4B72F4();
    v56 = 15;
    sub_1DC4B7298(&qword_1EDB11898, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1DC62B400();
    *(_QWORD *)&v54[v50] = v55;
    v56 = 16;
    sub_1DC62B400();
    *(_QWORD *)&v54[v51] = v55;
    LOBYTE(v55) = 17;
    v34 = sub_1DC62B3E8();
    v35 = v52;
    *v52 = v34;
    v35[1] = v36;
    LOBYTE(v55) = 18;
    v37 = sub_1DC62B430();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v47, v48);
    v38 = (uint64_t)v54;
    v54[v49[22]] = v37 & 1;
    sub_1DC4EC5B0(v38, v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1DC4EC5F4(v38);
  }
}

void sub_1DC4EC488(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4EBCB4();
    v7 = a3(a1, &type metadata for NetworkEventData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4EC4E4()
{
  unint64_t result;

  result = qword_1F036A638;
  if (!qword_1F036A638)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CacheState, &type metadata for CacheState);
    atomic_store(result, (unint64_t *)&qword_1F036A638);
  }
  return result;
}

unint64_t sub_1DC4EC528()
{
  unint64_t result;

  result = qword_1F036A640;
  if (!qword_1F036A640)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for NetworkEventType, &type metadata for NetworkEventType);
    atomic_store(result, (unint64_t *)&qword_1F036A640);
  }
  return result;
}

unint64_t sub_1DC4EC56C()
{
  unint64_t result;

  result = qword_1F036A648;
  if (!qword_1F036A648)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CellularRadioAccessTechnology, &type metadata for CellularRadioAccessTechnology);
    atomic_store(result, (unint64_t *)&qword_1F036A648);
  }
  return result;
}

uint64_t sub_1DC4EC5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkEventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4EC5F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkEventData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4EC630()
{
  return sub_1DC4B6748(&qword_1EDB0F658, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventData, (uint64_t)&protocol conformance descriptor for NetworkEventData);
}

uint64_t sub_1DC4EC65C()
{
  return sub_1DC4B6748(&qword_1EDB0F650, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventData, (uint64_t)&protocol conformance descriptor for NetworkEventData);
}

uint64_t sub_1DC4EC688@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NetworkEventData.init(from:)(a1, a2);
}

uint64_t sub_1DC4EC69C(_QWORD *a1)
{
  return NetworkEventData.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for NetworkEventData(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62A1A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v10 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v13 = a3[12];
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
    v14 = a3[14];
    *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[17];
    v20 = a3[18];
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = (char *)a1 + v20;
    v24 = (char *)a2 + v20;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = a3[20];
    *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
    *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
    v26 = a3[21];
    v27 = a3[22];
    v28 = (_QWORD *)((char *)a1 + v26);
    v29 = (_QWORD *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NetworkEventData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v6 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[17];
  v19 = a3[18];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a1 + v19;
  v23 = a2 + v19;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  v24 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  v25 = a3[21];
  v26 = a3[22];
  v27 = (_QWORD *)(a1 + v25);
  v28 = (_QWORD *)(a2 + v25);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v7 = a3[10];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v11 = a3[16];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[17];
  v15 = a1 + v14;
  v16 = (uint64_t *)(a2 + v14);
  v17 = *v16;
  *(_BYTE *)(v15 + 8) = *((_BYTE *)v16 + 8);
  *(_QWORD *)v15 = v17;
  v18 = a3[18];
  v19 = a1 + v18;
  v20 = (uint64_t *)(a2 + v18);
  v21 = *v20;
  *(_BYTE *)(v19 + 8) = *((_BYTE *)v20 + 8);
  *(_QWORD *)v19 = v21;
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[21];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  return a1;
}

uint64_t initializeWithTake for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[17];
  v16 = a3[18];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a1 + v16;
  v20 = a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v22 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  return a1;
}

uint64_t assignWithTake for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[17];
  v20 = a3[18];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  swift_bridgeObjectRelease();
  v25 = a3[21];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkEventData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4ECE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1DC62A1A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 64) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkEventData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4ECF18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62A1A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 64) + 8) = a2;
  return result;
}

uint64_t sub_1DC4ECF94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62A1A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkEventData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkEventData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1DC4ED140 + 4 * byte_1DC62F9C8[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1DC4ED174 + 4 * byte_1DC62F9C3[v4]))();
}

uint64_t sub_1DC4ED174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4ED17C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4ED184);
  return result;
}

uint64_t sub_1DC4ED190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4ED198);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1DC4ED19C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4ED1A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkEventData.CodingKeys()
{
  return &type metadata for NetworkEventData.CodingKeys;
}

unint64_t sub_1DC4ED1C4()
{
  unint64_t result;

  result = qword_1F036A650;
  if (!qword_1F036A650)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FC5C, &type metadata for NetworkEventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A650);
  }
  return result;
}

unint64_t sub_1DC4ED20C()
{
  unint64_t result;

  result = qword_1EDB0F640;
  if (!qword_1EDB0F640)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FBCC, &type metadata for NetworkEventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F640);
  }
  return result;
}

unint64_t sub_1DC4ED254()
{
  unint64_t result;

  result = qword_1EDB0F638;
  if (!qword_1EDB0F638)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FBF4, &type metadata for NetworkEventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F638);
  }
  return result;
}

uint64_t sub_1DC4ED298(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174536568636163 && a2 == 0xEA00000000006574 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461727544736E64 && a2 == 0xEB000000006E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x447463656E6E6F63 && a2 == 0xEF6E6F6974617275 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4474736575716572 && a2 == 0xEF6E6F6974617275 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C1A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x617275446B736174 && a2 == 0xEC0000006E6F6974 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC000000657A6953 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F43737574617473 && a2 == 0xEA00000000006564 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x707954746E657665 && a2 == 0xE900000000000065 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DC64C1C0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x72756F5361746164 && a2 == 0xEA00000000006563 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C1E0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64C200 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x49676E697373696DLL && a2 == 0xEE007344496D6574 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x4964696C61766E69 && a2 == 0xEE007344496D6574 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x69646E6F70736572 && a2 == 0xED0000706F50676ELL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64C220)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 18;
    else
      return 19;
  }
}

uint64_t AdUserData.userID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdUserData.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdUserData.userID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdUserData __swiftcall AdUserData.init(userID:)(StocksAnalytics::AdUserData userID)
{
  StocksAnalytics::AdUserData *v1;

  *v1 = userID;
  return userID;
}

uint64_t sub_1DC4EDB70()
{
  return 0x444972657375;
}

uint64_t sub_1DC4EDB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x444972657375 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC4EDC10()
{
  sub_1DC4EDD54();
  return sub_1DC62B604();
}

uint64_t sub_1DC4EDC38()
{
  sub_1DC4EDD54();
  return sub_1DC62B610();
}

uint64_t AdUserData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4EDEBC(0, &qword_1EDB119B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EDD54();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC4EDD54()
{
  unint64_t result;

  result = qword_1EDB0EC88;
  if (!qword_1EDB0EC88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FE44, &type metadata for AdUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC88);
  }
  return result;
}

uint64_t AdUserData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC4EDEBC(0, &qword_1F036A658, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EDD54();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B424();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4EDEBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4EDD54();
    v7 = a3(a1, &type metadata for AdUserData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4EDF18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdUserData.init(from:)(a1, a2);
}

uint64_t sub_1DC4EDF2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4EDEBC(0, &qword_1EDB119B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EDD54();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t getEnumTagSinglePayload for IssueData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdUserData()
{
  return &type metadata for AdUserData;
}

uint64_t storeEnumTagSinglePayload for AdUserData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4EE0F4 + 4 * byte_1DC62FCD4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4EE114 + 4 * byte_1DC62FCD9[v4]))();
}

_BYTE *sub_1DC4EE0F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4EE114(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4EE11C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4EE124(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4EE12C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4EE134(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdUserData.CodingKeys()
{
  return &type metadata for AdUserData.CodingKeys;
}

unint64_t sub_1DC4EE154()
{
  unint64_t result;

  result = qword_1F036A660;
  if (!qword_1F036A660)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FE1C, &type metadata for AdUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A660);
  }
  return result;
}

unint64_t sub_1DC4EE19C()
{
  unint64_t result;

  result = qword_1EDB0EC98;
  if (!qword_1EDB0EC98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FD8C, &type metadata for AdUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC98);
  }
  return result;
}

unint64_t sub_1DC4EE1E4()
{
  unint64_t result;

  result = qword_1EDB0EC90;
  if (!qword_1EDB0EC90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FDB4, &type metadata for AdUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC90);
  }
  return result;
}

double SymbolPriceChangeData.currentPrice.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void SymbolPriceChangeData.currentPrice.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*SymbolPriceChangeData.currentPrice.modify())()
{
  return nullsub_1;
}

double SymbolPriceChangeData.priceChange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void SymbolPriceChangeData.priceChange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*SymbolPriceChangeData.priceChange.modify())()
{
  return nullsub_1;
}

uint64_t SymbolPriceChangeData.currency.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolPriceChangeData.currency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SymbolPriceChangeData.currency.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SymbolPriceChangeData __swiftcall SymbolPriceChangeData.init(currentPrice:priceChange:currency:)(Swift::Double currentPrice, Swift::Double priceChange, Swift::String currency)
{
  uint64_t v3;
  StocksAnalytics::SymbolPriceChangeData result;

  *(Swift::Double *)v3 = currentPrice;
  *(Swift::Double *)(v3 + 8) = priceChange;
  *(Swift::String *)(v3 + 16) = currency;
  result.currency = currency;
  result.priceChange = priceChange;
  result.currentPrice = currentPrice;
  return result;
}

uint64_t sub_1DC4EE2E4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6168436563697270;
  if (*v0 != 1)
    v1 = 0x79636E6572727563;
  if (*v0)
    return v1;
  else
    return 0x50746E6572727563;
}

uint64_t sub_1DC4EE350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4EEA80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4EE374()
{
  sub_1DC4EE528();
  return sub_1DC62B604();
}

uint64_t sub_1DC4EE39C()
{
  sub_1DC4EE528();
  return sub_1DC62B610();
}

uint64_t SymbolPriceChangeData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  sub_1DC4EE6F4(0, &qword_1F036A668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  v10[1] = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EE528();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62B4CC();
  if (!v2)
  {
    v12 = 1;
    sub_1DC62B4CC();
    v11 = 2;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC4EE528()
{
  unint64_t result;

  result = qword_1F036A670;
  if (!qword_1F036A670)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63002C, &type metadata for SymbolPriceChangeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A670);
  }
  return result;
}

uint64_t SymbolPriceChangeData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;

  sub_1DC4EE6F4(0, &qword_1F036A678, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EE528();
  sub_1DC62B5E0();
  if (!v2)
  {
    v21 = 0;
    sub_1DC62B43C();
    v11 = v10;
    v20 = 1;
    sub_1DC62B43C();
    v13 = v12;
    v19 = 2;
    v15 = sub_1DC62B424();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v15;
    a2[3] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4EE6F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4EE528();
    v7 = a3(a1, &type metadata for SymbolPriceChangeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4EE758@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SymbolPriceChangeData.init(from:)(a1, a2);
}

uint64_t sub_1DC4EE76C(_QWORD *a1)
{
  return SymbolPriceChangeData.encode(to:)(a1);
}

uint64_t destroy for SymbolPriceChangeData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolPriceChangeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SymbolPriceChangeData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SymbolPriceChangeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolPriceChangeData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolPriceChangeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolPriceChangeData()
{
  return &type metadata for SymbolPriceChangeData;
}

uint64_t storeEnumTagSinglePayload for SymbolPriceChangeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4EE928 + 4 * byte_1DC62FEA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4EE95C + 4 * byte_1DC62FEA0[v4]))();
}

uint64_t sub_1DC4EE95C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4EE964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4EE96CLL);
  return result;
}

uint64_t sub_1DC4EE978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4EE980);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4EE984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4EE98C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolPriceChangeData.CodingKeys()
{
  return &type metadata for SymbolPriceChangeData.CodingKeys;
}

unint64_t sub_1DC4EE9AC()
{
  unint64_t result;

  result = qword_1F036A680;
  if (!qword_1F036A680)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630004, &type metadata for SymbolPriceChangeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A680);
  }
  return result;
}

unint64_t sub_1DC4EE9F4()
{
  unint64_t result;

  result = qword_1F036A688;
  if (!qword_1F036A688)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FF74, &type metadata for SymbolPriceChangeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A688);
  }
  return result;
}

unint64_t sub_1DC4EEA3C()
{
  unint64_t result;

  result = qword_1F036A690;
  if (!qword_1F036A690)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC62FF9C, &type metadata for SymbolPriceChangeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A690);
  }
  return result;
}

uint64_t sub_1DC4EEA80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x50746E6572727563 && a2 == 0xEC00000065636972;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1DC4EEC04(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0CC840](v3);
  if (v4)
  {
    v5 = (void *)v4;
    _s15StocksAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(a2);

  }
}

uint64_t sub_1DC4EED20()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DC4EED44()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC4EED68()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1DC4EED94()
{
  uint64_t v0;

  sub_1DC4EEC04(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t BannerAdData.isInteractive.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t BannerAdData.isInteractive.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*BannerAdData.isInteractive.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdData.isDownloadable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t BannerAdData.isDownloadable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*BannerAdData.isDownloadable.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdData.isVideo.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t BannerAdData.isVideo.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*BannerAdData.isVideo.modify())()
{
  return nullsub_1;
}

StocksAnalytics::BannerAdData __swiftcall BannerAdData.init(isInteractive:isDownloadable:isVideo:)(Swift::Bool isInteractive, Swift::Bool isDownloadable, Swift::Bool isVideo)
{
  Swift::Bool *v3;
  StocksAnalytics::BannerAdData result;

  *v3 = isInteractive;
  v3[1] = isDownloadable;
  v3[2] = isVideo;
  result.isInteractive = isInteractive;
  return result;
}

uint64_t sub_1DC4EEE14()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F6C6E776F447369;
  if (*v0 != 1)
    v1 = 0x6F656469567369;
  if (*v0)
    return v1;
  else
    return 0x617265746E497369;
}

uint64_t sub_1DC4EEE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4EF58C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4EEEAC()
{
  sub_1DC4EF05C();
  return sub_1DC62B604();
}

uint64_t sub_1DC4EEED4()
{
  sub_1DC4EF05C();
  return sub_1DC62B610();
}

uint64_t BannerAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _DWORD v10[7];
  char v11;
  char v12;
  char v13;

  sub_1DC4EF22C(0, &qword_1EDB12188, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  v10[6] = *(unsigned __int8 *)(v1 + 1);
  v10[3] = *(unsigned __int8 *)(v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EF05C();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62B4C0();
  if (!v2)
  {
    v12 = 1;
    sub_1DC62B4C0();
    v11 = 2;
    sub_1DC62B4C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC4EF05C()
{
  unint64_t result;

  result = qword_1EDB12048;
  if (!qword_1EDB12048)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630200, &type metadata for BannerAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12048);
  }
  return result;
}

uint64_t BannerAdData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  sub_1DC4EF22C(0, &qword_1F036A760, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4EF05C();
  sub_1DC62B5E0();
  if (!v2)
  {
    v17 = 0;
    v10 = sub_1DC62B430();
    v16 = 1;
    v11 = sub_1DC62B430();
    v15 = 2;
    v13 = sub_1DC62B430();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
    a2[1] = v11 & 1;
    a2[2] = v13 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4EF22C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4EF05C();
    v7 = a3(a1, &type metadata for BannerAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4EF290@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return BannerAdData.init(from:)(a1, a2);
}

uint64_t sub_1DC4EF2A4(_QWORD *a1)
{
  return BannerAdData.encode(to:)(a1);
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BannerAdData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAdData(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAdData()
{
  return &type metadata for BannerAdData;
}

uint64_t storeEnumTagSinglePayload for BannerAdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4EF434 + 4 * byte_1DC63008D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4EF468 + 4 * byte_1DC630088[v4]))();
}

uint64_t sub_1DC4EF468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4EF470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4EF478);
  return result;
}

uint64_t sub_1DC4EF484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4EF48CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4EF490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4EF498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdData.CodingKeys()
{
  return &type metadata for BannerAdData.CodingKeys;
}

unint64_t sub_1DC4EF4B8()
{
  unint64_t result;

  result = qword_1F036A768;
  if (!qword_1F036A768)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6301D8, &type metadata for BannerAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A768);
  }
  return result;
}

unint64_t sub_1DC4EF500()
{
  unint64_t result;

  result = qword_1EDB12058;
  if (!qword_1EDB12058)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630148, &type metadata for BannerAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12058);
  }
  return result;
}

unint64_t sub_1DC4EF548()
{
  unint64_t result;

  result = qword_1EDB12050;
  if (!qword_1EDB12050)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630170, &type metadata for BannerAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12050);
  }
  return result;
}

uint64_t sub_1DC4EF58C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617265746E497369 && a2 == 0xED00006576697463;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C6E776F447369 && a2 == 0xEE00656C62616461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F656469567369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

StocksAnalytics::PurchaseType_optional __swiftcall PurchaseType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::PurchaseType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PurchaseType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4EF7B0 + 4 * byte_1DC630250[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4EF7B0()
{
  return 0x6574726143616C61;
}

uint64_t sub_1DC4EF7C8()
{
  return 0x656C646E7562;
}

uint64_t sub_1DC4EF7DC()
{
  return 0x656C646E754273;
}

uint64_t sub_1DC4EF7F0()
{
  return 0x43656C646E754273;
}

uint64_t sub_1DC4EF814()
{
  return 0x7748656C646E7562;
}

void sub_1DC4EF830(char *a1)
{
  sub_1DC545BC4(*a1);
}

unint64_t sub_1DC4EF840()
{
  unint64_t result;

  result = qword_1F036A770;
  if (!qword_1F036A770)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PurchaseType, &type metadata for PurchaseType);
    atomic_store(result, (unint64_t *)&qword_1F036A770);
  }
  return result;
}

void sub_1DC4EF884()
{
  char *v0;

  sub_1DC601C38(*v0);
}

void sub_1DC4EF88C()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC4EF8C8()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC4EF95C(uint64_t a1)
{
  char *v1;

  sub_1DC602F74(a1, *v1);
}

StocksAnalytics::PurchaseType_optional sub_1DC4EF964(Swift::String *a1)
{
  return PurchaseType.init(rawValue:)(*a1);
}

uint64_t sub_1DC4EF970()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4EF9A0 + 4 * byte_1DC63025C[*v0]))();
}

void sub_1DC4EF9A0(_QWORD *a1@<X8>)
{
  *a1 = 0x6574726143616C61;
  a1[1] = 0xE800000000000000;
}

void sub_1DC4EF9BC(_QWORD *a1@<X8>)
{
  *a1 = 0x656C646E7562;
  a1[1] = 0xE600000000000000;
}

void sub_1DC4EF9D4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C646E754273;
  a1[1] = v1;
}

void sub_1DC4EF9EC(char *a1@<X8>)
{
  strcpy(a1, "sBundleCarrier");
  a1[15] = -18;
}

void sub_1DC4EFA14(_QWORD *a1@<X8>)
{
  *a1 = 0x7748656C646E7562;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1DC4EFA34()
{
  sub_1DC4EFBA8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4EFA90()
{
  sub_1DC4EFBA8();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for PurchaseType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC4EFB28 + 4 * byte_1DC630267[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC4EFB5C + 4 * byte_1DC630262[v4]))();
}

uint64_t sub_1DC4EFB5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4EFB64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4EFB6CLL);
  return result;
}

uint64_t sub_1DC4EFB78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4EFB80);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC4EFB84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4EFB8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseType()
{
  return &type metadata for PurchaseType;
}

unint64_t sub_1DC4EFBA8()
{
  unint64_t result;

  result = qword_1EDB0EEA0;
  if (!qword_1EDB0EEA0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PurchaseType, &type metadata for PurchaseType);
    atomic_store(result, (unint64_t *)&qword_1EDB0EEA0);
  }
  return result;
}

uint64_t AdGroupData.init(groupData:)@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

StocksAnalytics::StoreKitError_optional __swiftcall StoreKitError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  StocksAnalytics::StoreKitError_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1DC62B544();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 3;
  switch(v3)
  {
    case 0:
      goto LABEL_5;
    case 1:
      v5 = 1;
      goto LABEL_5;
    case 2:
      v5 = 2;
LABEL_5:
      v6 = v5;
      break;
    case 3:
      break;
    case 4:
      v6 = 4;
      break;
    case 5:
      v6 = 5;
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    default:
      v6 = 21;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t StoreKitError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4EFD7C + 4 * byte_1DC63039D[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4EFD7C()
{
  return 0x6E49746E65696C63;
}

unint64_t sub_1DC4EFDA0()
{
  return 0xD000000000000010;
}

unint64_t sub_1DC4EFF00()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1DC4EFF1C()
{
  return 0x5479616C7265766FLL;
}

void sub_1DC4EFF40()
{
  JUMPOUT(0x1DC4EFF54);
}

uint64_t sub_1DC4EFF60()
{
  return 0x5264696C61766E69;
}

uint64_t sub_1DC4EFF84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC545750(*a1, *a2);
}

unint64_t sub_1DC4EFF94()
{
  unint64_t result;

  result = qword_1F036A778;
  if (!qword_1F036A778)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoreKitError, &type metadata for StoreKitError);
    atomic_store(result, (unint64_t *)&qword_1F036A778);
  }
  return result;
}

uint64_t sub_1DC4EFFD8()
{
  sub_1DC62B5B0();
  StoreKitError.rawValue.getter();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC4F003C()
{
  StoreKitError.rawValue.getter();
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC4F008C()
{
  sub_1DC62B5B0();
  StoreKitError.rawValue.getter();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::StoreKitError_optional sub_1DC4F00EC(Swift::String *a1)
{
  return StoreKitError.init(rawValue:)(*a1);
}

uint64_t sub_1DC4F00F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StoreKitError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC4F011C()
{
  sub_1DC4F0320();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4F0178()
{
  sub_1DC4F0320();
  return sub_1DC62B130();
}

uint64_t getEnumTagSinglePayload for StoreKitError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreKitError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1DC4F02A0 + 4 * byte_1DC6303B7[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1DC4F02D4 + 4 * byte_1DC6303B2[v4]))();
}

uint64_t sub_1DC4F02D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4F02DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4F02E4);
  return result;
}

uint64_t sub_1DC4F02F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4F02F8);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1DC4F02FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4F0304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitError()
{
  return &type metadata for StoreKitError;
}

unint64_t sub_1DC4F0320()
{
  unint64_t result;

  result = qword_1F036A780;
  if (!qword_1F036A780)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoreKitError, &type metadata for StoreKitError);
    atomic_store(result, (unint64_t *)&qword_1F036A780);
  }
  return result;
}

uint64_t sub_1DC4F0364(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB0FE68, MEMORY[0x1E0CF8078]);
}

uint64_t static WatchListViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E2E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FE68, a1);
}

uint64_t sub_1DC4F03A4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB0FE80, MEMORY[0x1E0CF8380]);
}

uint64_t static WatchListViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0FE98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FE80, a1);
}

uint64_t WatchListViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t WatchListViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WatchListViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WatchListViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for WatchListViewEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for WatchListViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0FEA0);
}

uint64_t WatchListViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.timedData.modify())()
{
  type metadata accessor for WatchListViewEvent(0);
  return nullsub_1;
}

uint64_t WatchListViewEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WatchListViewEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.watchedSymbolListData.modify())()
{
  type metadata accessor for WatchListViewEvent(0);
  return nullsub_1;
}

uint64_t WatchListViewEvent.symbolPerfData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WatchListViewEvent.symbolPerfData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.symbolPerfData.modify())()
{
  type metadata accessor for WatchListViewEvent(0);
  return nullsub_1;
}

uint64_t WatchListViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WatchListViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.viewEndData.modify())()
{
  type metadata accessor for WatchListViewEvent(0);
  return nullsub_1;
}

uint64_t WatchListViewEvent.watchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WatchListViewEvent.watchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.watchlistData.modify())()
{
  type metadata accessor for WatchListViewEvent(0);
  return nullsub_1;
}

uint64_t WatchListViewEvent.watchlistAgeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4F0918()
{
  unint64_t result;

  result = qword_1EDB0F990;
  if (!qword_1EDB0F990)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistAgeData, &type metadata for WatchlistAgeData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F990);
  }
  return result;
}

unint64_t sub_1DC4F095C()
{
  unint64_t result;

  result = qword_1EDB0F988;
  if (!qword_1EDB0F988)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistAgeData, &type metadata for WatchlistAgeData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F988);
  }
  return result;
}

uint64_t WatchListViewEvent.watchlistAgeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.watchlistAgeData.modify())()
{
  type metadata accessor for WatchListViewEvent(0);
  return nullsub_1;
}

uint64_t WatchListViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WatchListViewEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
  v15 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v2, v16);
}

uint64_t WatchListViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WatchListViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for WatchListViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for WatchListViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036A7F8);
}

uint64_t WatchListViewEvent.Model.watchedSymbolListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WatchListViewEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t WatchListViewEvent.Model.symbolPerfData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WatchListViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t WatchListViewEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WatchListViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t WatchListViewEvent.Model.watchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WatchListViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

double WatchListViewEvent.Model.watchlistAgeData.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent.Model(0) + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  result = *(double *)(v3 + 16);
  *(double *)(a1 + 16) = result;
  return result;
}

__n128 WatchListViewEvent.Model.init(eventData:timedData:watchedSymbolListData:symbolPerfData:viewEndData:watchlistData:watchlistAgeData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, __n128 *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  __n128 result;
  __n128 v23;

  v12 = *a3;
  v13 = *a4;
  v14 = *a5;
  v15 = *a6;
  v16 = sub_1DC62ABA8();
  v23 = *a7;
  v17 = a7[1].n128_u64[0];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a8, a1, v16);
  v18 = (int *)type metadata accessor for WatchListViewEvent.Model(0);
  v19 = a8 + v18[5];
  v20 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  *(_QWORD *)(a8 + v18[6]) = v12;
  *(_BYTE *)(a8 + v18[7]) = v13;
  *(_BYTE *)(a8 + v18[8]) = v14;
  *(_BYTE *)(a8 + v18[9]) = v15;
  v21 = (__n128 *)(a8 + v18[10]);
  result = v23;
  *v21 = v23;
  v21[1].n128_u64[0] = v17;
  return result;
}

uint64_t sub_1DC4F0E3C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4F0E74 + 4 * byte_1DC630520[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4F0E74()
{
  return 0x74614464656D6974;
}

unint64_t sub_1DC4F0E88()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC4F0EAC()
{
  return 0x65506C6F626D7973;
}

uint64_t sub_1DC4F0ED0()
{
  return 0x44646E4577656976;
}

uint64_t sub_1DC4F0EF0()
{
  return 0x73696C6863746177;
}

unint64_t sub_1DC4F0F14()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC4F0F30()
{
  unsigned __int8 *v0;

  return sub_1DC4F0E3C(*v0);
}

uint64_t sub_1DC4F0F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4F346C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC4F0F5C()
{
  sub_1DC4F129C();
  return sub_1DC62B604();
}

uint64_t sub_1DC4F0F84()
{
  sub_1DC4F129C();
  return sub_1DC62B610();
}

uint64_t WatchListViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v13;
  uint64_t v14;
  char v15;

  v3 = v1;
  sub_1DC4F17E0(0, &qword_1F036A788, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4F129C();
  sub_1DC62B5F8();
  LOBYTE(v13) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WatchListViewEvent.Model(0);
    LOBYTE(v13) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + v10[6]);
    v15 = 2;
    sub_1DC4BF5A0();
    sub_1DC62B4E4();
    LOBYTE(v13) = *(_BYTE *)(v3 + v10[7]);
    v15 = 3;
    sub_1DC4C01E8();
    sub_1DC62B4E4();
    LOBYTE(v13) = *(_BYTE *)(v3 + v10[8]);
    v15 = 4;
    sub_1DC4C0298();
    sub_1DC62B4E4();
    LOBYTE(v13) = *(_BYTE *)(v3 + v10[9]);
    v15 = 5;
    sub_1DC4C9974();
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[10]);
    v13 = *v11;
    v14 = *((_QWORD *)v11 + 2);
    v15 = 6;
    sub_1DC4F095C();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4F129C()
{
  unint64_t result;

  result = qword_1F036A790;
  if (!qword_1F036A790)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630774, &type metadata for WatchListViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A790);
  }
  return result;
}

uint64_t WatchListViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  __int128 v38;
  uint64_t v39;
  char v40;

  v29 = a2;
  v3 = sub_1DC62ABC0();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1DC62ABA8();
  v5 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4F17E0(0, &qword_1F036A798, MEMORY[0x1E0DED048]);
  v35 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for WatchListViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4F129C();
  v36 = v10;
  v14 = (uint64_t)v37;
  sub_1DC62B5E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v5;
  v28 = v8;
  v26 = (int *)v11;
  v15 = (uint64_t)v13;
  v37 = a1;
  v17 = v30;
  v16 = v31;
  v18 = v32;
  LOBYTE(v38) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v33;
  v20 = v34;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v15, v19, v20);
  LOBYTE(v38) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v21 = v17;
  sub_1DC62B454();
  v22 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v15 + v26[5], v21, v18);
  v40 = 2;
  sub_1DC4BF55C();
  sub_1DC62B454();
  *(_QWORD *)(v15 + v22[6]) = v38;
  v40 = 3;
  sub_1DC4C01A4();
  v23 = v35;
  sub_1DC62B454();
  *(_BYTE *)(v15 + v22[7]) = v38;
  v40 = 4;
  sub_1DC4C0254();
  sub_1DC62B454();
  *(_BYTE *)(v15 + v22[8]) = v38;
  v40 = 5;
  sub_1DC4C9930();
  sub_1DC62B454();
  *(_BYTE *)(v15 + v22[9]) = v38;
  v40 = 6;
  sub_1DC4F0918();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v23);
  v24 = v15 + v22[10];
  *(_OWORD *)v24 = v38;
  *(_QWORD *)(v24 + 16) = v39;
  sub_1DC4F183C(v15, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return sub_1DC4F1880(v15);
}

void sub_1DC4F17E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4F129C();
    v7 = a3(a1, &type metadata for WatchListViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4F183C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchListViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4F1880(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WatchListViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4F18BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WatchListViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4F18D0(_QWORD *a1)
{
  return WatchListViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4F18E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E2E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FE68, a1);
}

uint64_t sub_1DC4F1908@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0FE98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FE80, a1);
}

uint64_t sub_1DC4F192C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
  v16 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v4, v17);
}

uint64_t *initializeBufferWithCopyOfBuffer for WatchListViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for WatchListViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for WatchListViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for WatchListViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for WatchListViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for WatchListViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchListViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4F26FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WatchListViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4F28D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4F2AA0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7A8, (void (*)(void))sub_1DC4C01A4, (void (*)(void))sub_1DC4C01E8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E7D8, (void (*)(void))sub_1DC4F0918, (void (*)(void))sub_1DC4F095C);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for WatchListViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[10];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[10];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v11 = a3[10];
  v12 = (_DWORD *)(a1 + v11);
  v13 = (_DWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  v12[4] = v13[4];
  v12[5] = v13[5];
  return a1;
}

uint64_t initializeWithTake for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[10];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  return a1;
}

uint64_t assignWithTake for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchListViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4F30B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchListViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4F316C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4F3210()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WatchListViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DC4F3314 + 4 * byte_1DC63052C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DC4F3348 + 4 * byte_1DC630527[v4]))();
}

uint64_t sub_1DC4F3348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4F3350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4F3358);
  return result;
}

uint64_t sub_1DC4F3364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4F336CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DC4F3370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4F3378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchListViewEvent.Model.CodingKeys()
{
  return &type metadata for WatchListViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC4F3398()
{
  unint64_t result;

  result = qword_1F036A848;
  if (!qword_1F036A848)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63074C, &type metadata for WatchListViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A848);
  }
  return result;
}

unint64_t sub_1DC4F33E0()
{
  unint64_t result;

  result = qword_1F036A850;
  if (!qword_1F036A850)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6306BC, &type metadata for WatchListViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A850);
  }
  return result;
}

unint64_t sub_1DC4F3428()
{
  unint64_t result;

  result = qword_1F036A858;
  if (!qword_1F036A858)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6306E4, &type metadata for WatchListViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A858);
  }
  return result;
}

uint64_t sub_1DC4F346C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64BFD0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65506C6F626D7973 && a2 == 0xEE00617461446672 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73696C6863746177 && a2 == 0xED00006174614474 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C3E0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t ConsentScreenActionData.didAcceptConsentScreen.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ConsentScreenActionData.didAcceptConsentScreen.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ConsentScreenActionData.didAcceptConsentScreen.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ConsentScreenActionData __swiftcall ConsentScreenActionData.init(didAcceptConsentScreen:)(StocksAnalytics::ConsentScreenActionData didAcceptConsentScreen)
{
  StocksAnalytics::ConsentScreenActionData *v1;

  v1->didAcceptConsentScreen = didAcceptConsentScreen.didAcceptConsentScreen;
  return didAcceptConsentScreen;
}

unint64_t sub_1DC4F37E0()
{
  return 0xD000000000000016;
}

uint64_t sub_1DC4F37FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4F3F9C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC4F3824()
{
  sub_1DC4F3964();
  return sub_1DC62B604();
}

uint64_t sub_1DC4F384C()
{
  sub_1DC4F3964();
  return sub_1DC62B610();
}

uint64_t ConsentScreenActionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4F3ACC(0, &qword_1F036A860, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4F3964();
  sub_1DC62B5F8();
  sub_1DC62B4C0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC4F3964()
{
  unint64_t result;

  result = qword_1F036A868;
  if (!qword_1F036A868)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63095C, &type metadata for ConsentScreenActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A868);
  }
  return result;
}

uint64_t ConsentScreenActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  sub_1DC4F3ACC(0, &qword_1F036A870, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4F3964();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B430();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4F3ACC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4F3964();
    v7 = a3(a1, &type metadata for ConsentScreenActionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4F3B2C()
{
  unint64_t result;

  result = qword_1F036A878;
  if (!qword_1F036A878)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ConsentScreenActionData, &type metadata for ConsentScreenActionData);
    atomic_store(result, (unint64_t *)&qword_1F036A878);
  }
  return result;
}

unint64_t sub_1DC4F3B74()
{
  unint64_t result;

  result = qword_1F036A880;
  if (!qword_1F036A880)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ConsentScreenActionData, &type metadata for ConsentScreenActionData);
    atomic_store(result, (unint64_t *)&qword_1F036A880);
  }
  return result;
}

uint64_t sub_1DC4F3BB8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ConsentScreenActionData.init(from:)(a1, a2);
}

uint64_t sub_1DC4F3BCC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC4F3ACC(0, &qword_1F036A860, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4F3964();
  sub_1DC62B5F8();
  sub_1DC62B4C0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t getEnumTagSinglePayload for ConsentScreenActionData(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ConsentScreenActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC4F3DA8 + 4 * byte_1DC6307D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC4F3DDC + 4 * byte_1DC6307D0[v4]))();
}

uint64_t sub_1DC4F3DDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4F3DE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4F3DECLL);
  return result;
}

uint64_t sub_1DC4F3DF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4F3E00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC4F3E04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4F3E0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenActionData()
{
  return &type metadata for ConsentScreenActionData;
}

uint64_t storeEnumTagSinglePayload for ConsentScreenActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4F3E68 + 4 * byte_1DC6307DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4F3E88 + 4 * byte_1DC6307DF[v4]))();
}

_BYTE *sub_1DC4F3E68(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4F3E88(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4F3E90(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4F3E98(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4F3EA0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4F3EA8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenActionData.CodingKeys()
{
  return &type metadata for ConsentScreenActionData.CodingKeys;
}

unint64_t sub_1DC4F3EC8()
{
  unint64_t result;

  result = qword_1F036A888;
  if (!qword_1F036A888)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630934, &type metadata for ConsentScreenActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A888);
  }
  return result;
}

unint64_t sub_1DC4F3F10()
{
  unint64_t result;

  result = qword_1F036A890;
  if (!qword_1F036A890)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6308A4, &type metadata for ConsentScreenActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A890);
  }
  return result;
}

unint64_t sub_1DC4F3F58()
{
  unint64_t result;

  result = qword_1F036A898;
  if (!qword_1F036A898)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6308CC, &type metadata for ConsentScreenActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A898);
  }
  return result;
}

uint64_t sub_1DC4F3F9C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C470)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DC4F4020(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036A8A0, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleScrollEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F60, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036A8A0, a1);
}

uint64_t sub_1DC4F4060(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036A8B8, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleScrollEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F68, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036A8B8, a1);
}

uint64_t ArticleScrollEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ArticleScrollEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleScrollEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for ArticleScrollEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for ArticleScrollEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12230);
}

uint64_t ArticleScrollEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.timedData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.newsArticleData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.feedData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.groupData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.viewData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.scrollStartData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4F45D4()
{
  unint64_t result;

  result = qword_1EDB121B0;
  if (!qword_1EDB121B0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ScrollStartData, &type metadata for ScrollStartData);
    atomic_store(result, (unint64_t *)&qword_1EDB121B0);
  }
  return result;
}

unint64_t sub_1DC4F4618()
{
  unint64_t result;

  result = qword_1EDB121B8;
  if (!qword_1EDB121B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ScrollStartData, &type metadata for ScrollStartData);
    atomic_store(result, (unint64_t *)&qword_1EDB121B8);
  }
  return result;
}

uint64_t ArticleScrollEvent.scrollStartData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.scrollStartData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.scrollEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4F4754()
{
  unint64_t result;

  result = qword_1EDB121C8;
  if (!qword_1EDB121C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ScrollEndData, &type metadata for ScrollEndData);
    atomic_store(result, (unint64_t *)&qword_1EDB121C8);
  }
  return result;
}

unint64_t sub_1DC4F4798()
{
  unint64_t result;

  result = qword_1EDB121D0;
  if (!qword_1EDB121D0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ScrollEndData, &type metadata for ScrollEndData);
    atomic_store(result, (unint64_t *)&qword_1EDB121D0);
  }
  return result;
}

uint64_t ArticleScrollEvent.scrollEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.scrollEndData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4F48D4()
{
  unint64_t result;

  result = qword_1EDB0FC58;
  if (!qword_1EDB0FC58)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleScienceData, &type metadata for ArticleScienceData);
    atomic_store(result, (unint64_t *)&qword_1EDB0FC58);
  }
  return result;
}

unint64_t sub_1DC4F4918()
{
  unint64_t result;

  result = qword_1EDB0FC50;
  if (!qword_1EDB0FC50)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleScienceData, &type metadata for ArticleScienceData);
    atomic_store(result, (unint64_t *)&qword_1EDB0FC50);
  }
  return result;
}

uint64_t ArticleScrollEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.articleScienceData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4F4A54()
{
  unint64_t result;

  result = qword_1EDB10B18;
  if (!qword_1EDB10B18)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserArticleContextData, &type metadata for UserArticleContextData);
    atomic_store(result, (unint64_t *)&qword_1EDB10B18);
  }
  return result;
}

unint64_t sub_1DC4F4A98()
{
  unint64_t result;

  result = qword_1EDB10B10;
  if (!qword_1EDB10B10)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserArticleContextData, &type metadata for UserArticleContextData);
    atomic_store(result, (unint64_t *)&qword_1EDB10B10);
  }
  return result;
}

uint64_t ArticleScrollEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.userArticleContextData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.issueData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleScrollEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.channelData.modify())()
{
  type metadata accessor for ArticleScrollEvent(0);
  return nullsub_1;
}

uint64_t ArticleScrollEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleScrollEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v10, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
}

uint64_t ArticleScrollEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleScrollEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for ArticleScrollEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ArticleScrollEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB122E8);
}

uint64_t ArticleScrollEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleScrollEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleScrollEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t ArticleScrollEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

float ArticleScrollEvent.Model.scrollStartData.getter@<S0>(float *a1@<X8>)
{
  uint64_t v1;
  float result;

  result = *(float *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 40));
  *a1 = result;
  return result;
}

double ArticleScrollEvent.Model.scrollEndData.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 44));
  *a1 = result;
  return result;
}

uint64_t ArticleScrollEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[200];

  v3 = type metadata accessor for ArticleScrollEvent.Model(0);
  sub_1DC4F52E4(v1 + *(int *)(v3 + 48), (uint64_t)v5);
  sub_1DC4F52E4((uint64_t)v5, a1);
  return sub_1DC4F537C((uint64_t)v5);
}

uint64_t sub_1DC4F52E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC4F5328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC4F5328()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036A8D0)
  {
    v0 = sub_1DC62B25C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036A8D0);
  }
}

uint64_t sub_1DC4F537C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t ArticleScrollEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleScrollEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t ArticleScrollEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 56));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleScrollEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 60));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ArticleScrollEvent.Model.init(eventData:timedData:newsArticleData:feedData:groupData:viewData:scrollStartData:scrollEndData:articleScienceData:userArticleContextData:issueData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, int *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, __int16 *a11, uint64_t *a12, __n128 *a13)
{
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __n128 *v34;
  __n128 result;
  char v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int16 v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  __n128 v57;
  _BYTE v58[208];

  v42 = *a3;
  v16 = *((_QWORD *)a3 + 3);
  v17 = *((_BYTE *)a3 + 32);
  v18 = *((_QWORD *)a3 + 5);
  v19 = *((_BYTE *)a3 + 48);
  v40 = *((_QWORD *)a3 + 7);
  v41 = *((_QWORD *)a3 + 2);
  v38 = *((_BYTE *)a3 + 65);
  v39 = *((_BYTE *)a3 + 64);
  v36 = *((_BYTE *)a3 + 67);
  v37 = *((_BYTE *)a3 + 66);
  v45 = *a4;
  v44 = *((_QWORD *)a4 + 2);
  v48 = a5[1];
  v49 = *a5;
  v46 = *((_QWORD *)a5 + 5);
  v47 = *((_QWORD *)a5 + 4);
  v51 = a6[1];
  v52 = *a6;
  v50 = *((_WORD *)a6 + 8);
  v20 = *a7;
  sub_1DC4F52E4(a10, (uint64_t)v58);
  v53 = *a11;
  v54 = a12[1];
  v55 = *a12;
  v57 = *a13;
  v21 = a13[1].n128_u64[0];
  v22 = a13[1].n128_u64[1];
  v56 = a13[2].n128_u8[0];
  v23 = a13[2].n128_u8[1];
  v24 = sub_1DC62ABA8();
  v25 = *a8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v26 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
  v27 = a9 + v26[5];
  v28 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a2, v28);
  v29 = a9 + v26[6];
  *(_OWORD *)v29 = v42;
  *(_QWORD *)(v29 + 16) = v41;
  *(_QWORD *)(v29 + 24) = v16;
  *(_BYTE *)(v29 + 32) = v17;
  *(_QWORD *)(v29 + 40) = v18;
  *(_BYTE *)(v29 + 48) = v19;
  *(_QWORD *)(v29 + 56) = v40;
  *(_BYTE *)(v29 + 64) = v39;
  *(_BYTE *)(v29 + 65) = v38;
  *(_BYTE *)(v29 + 66) = v37;
  *(_BYTE *)(v29 + 67) = v36;
  v30 = a9 + v26[7];
  *(_OWORD *)v30 = v45;
  *(_QWORD *)(v30 + 16) = v44;
  v31 = a9 + v26[8];
  *(_OWORD *)v31 = v49;
  *(_OWORD *)(v31 + 16) = v48;
  *(_QWORD *)(v31 + 32) = v47;
  *(_QWORD *)(v31 + 40) = v46;
  v32 = a9 + v26[9];
  *(_QWORD *)v32 = v52;
  *(_QWORD *)(v32 + 8) = v51;
  *(_WORD *)(v32 + 16) = v50;
  *(_DWORD *)(a9 + v26[10]) = v20;
  *(_QWORD *)(a9 + v26[11]) = v25;
  sub_1DC4F52E4((uint64_t)v58, a9 + v26[12]);
  *(_WORD *)(a9 + v26[13]) = v53;
  v33 = (_QWORD *)(a9 + v26[14]);
  *v33 = v55;
  v33[1] = v54;
  v34 = (__n128 *)(a9 + v26[15]);
  result = v57;
  *v34 = v57;
  v34[1].n128_u64[0] = v21;
  v34[1].n128_u64[1] = v22;
  v34[2].n128_u8[0] = v56;
  v34[2].n128_u8[1] = v23;
  return result;
}

uint64_t sub_1DC4F56C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4F56F8 + 4 * byte_1DC6309B0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4F56F8()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC4F570C()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC4F5730()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC4F576C()
{
  return 0x74536C6C6F726373;
}

uint64_t sub_1DC4F5790()
{
  return 0x6E456C6C6F726373;
}

unint64_t sub_1DC4F57B4()
{
  return 0xD000000000000012;
}

unint64_t sub_1DC4F57D0()
{
  return 0xD000000000000016;
}

uint64_t sub_1DC4F57F0()
{
  return 0x7461446575737369;
}

uint64_t sub_1DC4F5804()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC4F5824()
{
  unsigned __int8 *v0;

  return sub_1DC4F56C0(*v0);
}

uint64_t sub_1DC4F582C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4F9BE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4F5850(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1DC4F585C()
{
  sub_1DC4F5D90();
  return sub_1DC62B604();
}

uint64_t sub_1DC4F5884()
{
  sub_1DC4F5D90();
  return sub_1DC62B610();
}

uint64_t ArticleScrollEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;

  v3 = v1;
  sub_1DC4F66B4(0, &qword_1F036A8D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v35 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4F5D90();
  sub_1DC62B5F8();
  LOBYTE(v42) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
    LOBYTE(v42) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v42 = v12;
    *(_QWORD *)&v43 = v13;
    *((_QWORD *)&v43 + 1) = v14;
    LOBYTE(v44) = v15;
    *((_QWORD *)&v44 + 1) = v16;
    v45 = v17;
    v46 = v18;
    v47 = v19;
    v48 = v20;
    v49 = v21;
    v50 = (char)v11;
    LOBYTE(v37) = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[7]);
    v23 = *((_QWORD *)v22 + 2);
    v42 = *v22;
    *(_QWORD *)&v43 = v23;
    LOBYTE(v37) = 3;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v24 = (__int128 *)(v3 + v10[8]);
    v25 = v24[1];
    v42 = *v24;
    v43 = v25;
    v44 = v24[2];
    LOBYTE(v37) = 4;
    sub_1DC4C9004();
    sub_1DC62B490();
    v26 = (uint64_t *)(v3 + v10[9]);
    v27 = *v26;
    v28 = v26[1];
    LOWORD(v26) = *((_WORD *)v26 + 8);
    *(_QWORD *)&v42 = v27;
    *((_QWORD *)&v42 + 1) = v28;
    LOWORD(v43) = (_WORD)v26;
    LOBYTE(v37) = 5;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    LODWORD(v42) = *(_DWORD *)(v3 + v10[10]);
    LOBYTE(v37) = 6;
    sub_1DC4F4618();
    sub_1DC62B4E4();
    v52 = *(_QWORD *)(v3 + v10[11]);
    v51 = 7;
    sub_1DC4F4798();
    sub_1DC62B4E4();
    sub_1DC4F52E4(v3 + v10[12], (uint64_t)&v42);
    sub_1DC4F52E4((uint64_t)&v42, (uint64_t)&v37);
    v36 = 8;
    sub_1DC4F4918();
    sub_1DC62B490();
    LOWORD(v37) = *(_WORD *)(v3 + v10[13]);
    v36 = 9;
    sub_1DC4F4A98();
    sub_1DC62B4E4();
    v37 = *(_OWORD *)(v3 + v10[14]);
    v36 = 10;
    sub_1DC4C9674();
    sub_1DC62B490();
    v29 = (__int128 *)(v3 + v10[15]);
    v30 = *v29;
    v31 = *((_QWORD *)v29 + 2);
    v32 = *((_QWORD *)v29 + 3);
    v33 = *((_BYTE *)v29 + 32);
    LOBYTE(v29) = *((_BYTE *)v29 + 33);
    v37 = v30;
    v38 = v31;
    v39 = v32;
    v40 = v33;
    v41 = (char)v29;
    v36 = 11;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4F5D90()
{
  unint64_t result;

  result = qword_1F036A8E0;
  if (!qword_1F036A8E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630CCC, &type metadata for ArticleScrollEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A8E0);
  }
  return result;
}

uint64_t ArticleScrollEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  __int16 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  int *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  _BYTE v59[200];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  char v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v43 = a2;
  v48 = sub_1DC62ABC0();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62ABA8();
  v47 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4F66B4(0, &qword_1F036A8E8, MEMORY[0x1E0DED048]);
  v44 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - v10;
  v53 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
  MEMORY[0x1E0C80A78](v53);
  v52 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC4F5D90();
  v49 = v11;
  v14 = v51;
  sub_1DC62B5E0();
  v45 = v5;
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  LOBYTE(v60) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v15 = v52;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v52, v7, v5);
  LOBYTE(v60) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v16 = v48;
  sub_1DC62B454();
  v17 = v53;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v15[v53[5]], v4, v16);
  v59[0] = 2;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v18 = v61;
  v19 = v62;
  v20 = *((_QWORD *)&v62 + 1);
  v21 = v63;
  v22 = v64;
  v23 = v65;
  v24 = v66;
  v25 = v67;
  v26 = v68;
  v27 = &v15[v17[6]];
  *(_OWORD *)v27 = v60;
  *((_OWORD *)v27 + 1) = v18;
  v27[32] = v19;
  *((_QWORD *)v27 + 5) = v20;
  v27[48] = v21;
  *((_QWORD *)v27 + 7) = v22;
  v27[64] = v23;
  v27[65] = v24;
  v27[66] = v25;
  v27[67] = v26;
  v59[0] = 3;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v28 = v61;
  v29 = &v15[v17[7]];
  *(_OWORD *)v29 = v60;
  *((_QWORD *)v29 + 2) = v28;
  v59[0] = 4;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v30 = &v15[v17[8]];
  v31 = v61;
  *(_OWORD *)v30 = v60;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v62;
  v59[0] = 5;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v32 = *((_QWORD *)&v60 + 1);
  v33 = v61;
  v34 = &v15[v17[9]];
  *(_QWORD *)v34 = v60;
  *((_QWORD *)v34 + 1) = v32;
  *((_WORD *)v34 + 8) = v33;
  v59[0] = 6;
  sub_1DC4F45D4();
  sub_1DC62B454();
  *(_DWORD *)&v15[v17[10]] = v60;
  v59[0] = 7;
  sub_1DC4F4754();
  sub_1DC62B454();
  *(_QWORD *)v53[11] = v60;
  v70 = 8;
  sub_1DC4F48D4();
  sub_1DC62B400();
  sub_1DC4F52E4((uint64_t)&v60, (uint64_t)v59);
  sub_1DC4F52E4((uint64_t)v59, v53[12]);
  v69 = 9;
  sub_1DC4F4A54();
  sub_1DC62B454();
  *(_WORD *)&v52[v53[13]] = v54;
  v69 = 10;
  sub_1DC4C9630();
  sub_1DC62B400();
  *(_OWORD *)&v52[v53[14]] = v54;
  v69 = 11;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v49, v44);
  v35 = v55;
  v36 = v56;
  v37 = v57;
  v38 = v58;
  v39 = (uint64_t)v52;
  v40 = &v52[v53[15]];
  *(_OWORD *)v40 = v54;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v36;
  v40[32] = v37;
  v40[33] = v38;
  sub_1DC4F6738(v39, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  return sub_1DC4F677C(v39);
}

void sub_1DC4F66B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4F5D90();
    v7 = a3(a1, &type metadata for ArticleScrollEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4F6710(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC4F6738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleScrollEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4F677C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleScrollEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4F67B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleScrollEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4F67CC(_QWORD *a1)
{
  return ArticleScrollEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4F67E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F60, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036A8A0, a1);
}

uint64_t sub_1DC4F6804@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F68, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036A8B8, a1);
}

uint64_t sub_1DC4F6828@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v11, v26);
  v27 = a2 + a1[15];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleScrollEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for ArticleScrollEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
}

uint64_t initializeWithCopy for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScrollEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4F8034(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleScrollEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4F835C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4F8680()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB121A8, (void (*)(void))sub_1DC4F45D4, (void (*)(void))sub_1DC4F4618);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB121C0, (void (*)(void))sub_1DC4F4754, (void (*)(void))sub_1DC4F4798);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                        if (v11 <= 0x3F)
                          swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleScrollEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    v14[48] = v15[48];
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    *v18 = *v19;
    v20 = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    *((_QWORD *)v18 + 2) = v20;
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(uint64_t *)((char *)a2 + v21 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24)
    {
      *v22 = *v23;
      *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
      *((_QWORD *)v22 + 2) = v24;
      *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
      v25 = *((_QWORD *)v23 + 5);
      *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
      *((_QWORD *)v22 + 5) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v27 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v27;
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
    }
    v28 = a3[9];
    v29 = a3[10];
    v30 = (char *)a1 + v28;
    v31 = (char *)a2 + v28;
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    *((_WORD *)v30 + 8) = *((_WORD *)v31 + 8);
    *(_DWORD *)((char *)a1 + v29) = *(_DWORD *)((char *)a2 + v29);
    v33 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v36;
    v37 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v37;
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    *((_QWORD *)v34 + 10) = *((_QWORD *)v35 + 10);
    *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
    *(_OWORD *)(v34 + 104) = *(_OWORD *)(v35 + 104);
    *((_DWORD *)v34 + 30) = *((_DWORD *)v35 + 30);
    *((_OWORD *)v34 + 8) = *((_OWORD *)v35 + 8);
    v34[144] = v35[144];
    *(_QWORD *)(v34 + 148) = *(_QWORD *)(v35 + 148);
    v38 = *((_OWORD *)v35 + 10);
    v39 = *((_OWORD *)v35 + 11);
    *((_QWORD *)v34 + 24) = *((_QWORD *)v35 + 24);
    v40 = a3[13];
    v41 = a3[14];
    v42 = *(_WORD *)((char *)a2 + v40);
    *((_OWORD *)v34 + 10) = v38;
    *((_OWORD *)v34 + 11) = v39;
    *(_WORD *)((char *)a1 + v40) = v42;
    v43 = (uint64_t *)((char *)a1 + v41);
    v44 = *(uint64_t *)((char *)a2 + v41 + 8);
    *v43 = *(uint64_t *)((char *)a2 + v41);
    v43[1] = v44;
    v45 = a3[15];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_QWORD *)v46 + 1) = v48;
    v49 = *((_QWORD *)v47 + 3);
    *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
    *((_QWORD *)v46 + 3) = v49;
    v46[32] = v47[32];
    v46[33] = v47[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v17 = a1 + v12;
  v18 = a2 + v12;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a2 + v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(_BYTE *)v21 = *(_BYTE *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
    *(_QWORD *)(v21 + 16) = v23;
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
    v24 = *(_QWORD *)(v22 + 40);
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
    *(_QWORD *)(v21 + 40) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
  }
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  v30 = *(_QWORD *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_QWORD *)(v28 + 8) = v30;
  *(_WORD *)(v28 + 16) = *(_WORD *)(v29 + 16);
  *(_DWORD *)(a1 + v27) = *(_DWORD *)(a2 + v27);
  v31 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  v35 = *(_OWORD *)(v33 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 48) = v35;
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
  *(_QWORD *)(v32 + 80) = *(_QWORD *)(v33 + 80);
  *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
  *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
  *(_DWORD *)(v32 + 120) = *(_DWORD *)(v33 + 120);
  *(_OWORD *)(v32 + 128) = *(_OWORD *)(v33 + 128);
  *(_BYTE *)(v32 + 144) = *(_BYTE *)(v33 + 144);
  *(_QWORD *)(v32 + 148) = *(_QWORD *)(v33 + 148);
  v36 = *(_OWORD *)(v33 + 160);
  v37 = *(_OWORD *)(v33 + 176);
  *(_QWORD *)(v32 + 192) = *(_QWORD *)(v33 + 192);
  v38 = a3[13];
  v39 = a3[14];
  v40 = *(_WORD *)(a2 + v38);
  *(_OWORD *)(v32 + 160) = v36;
  *(_OWORD *)(v32 + 176) = v37;
  *(_WORD *)(a1 + v38) = v40;
  v41 = (_QWORD *)(a1 + v39);
  v42 = *(_QWORD *)(a2 + v39 + 8);
  *v41 = *(_QWORD *)(a2 + v39);
  v41[1] = v42;
  v43 = a3[15];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(v45 + 8);
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *(_QWORD *)(v44 + 8) = v46;
  v47 = *(_QWORD *)(v45 + 24);
  *(_QWORD *)(v44 + 16) = *(_QWORD *)(v45 + 16);
  *(_QWORD *)(v44 + 24) = v47;
  *(_BYTE *)(v44 + 32) = *(_BYTE *)(v45 + 32);
  *(_BYTE *)(v44 + 33) = *(_BYTE *)(v45 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v14 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = v14;
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = (__int128 *)(a2 + v18);
  v21 = *(_QWORD *)(a1 + v18 + 16);
  v22 = *(_QWORD *)(a2 + v18 + 16);
  if (v21)
  {
    if (v22)
    {
      *(_BYTE *)v19 = *(_BYTE *)v20;
      *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
      *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v19 + 24) = *((_DWORD *)v20 + 6);
      *(_DWORD *)(v19 + 28) = *((_DWORD *)v20 + 7);
      *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
      *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v19);
      v24 = v20[1];
      v23 = v20[2];
      *(_OWORD *)v19 = *v20;
      *(_OWORD *)(v19 + 16) = v24;
      *(_OWORD *)(v19 + 32) = v23;
    }
  }
  else if (v22)
  {
    *(_BYTE *)v19 = *(_BYTE *)v20;
    *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
    *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
    *(_DWORD *)(v19 + 24) = *((_DWORD *)v20 + 6);
    *(_DWORD *)(v19 + 28) = *((_DWORD *)v20 + 7);
    *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
    *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *v20;
    v26 = v20[2];
    *(_OWORD *)(v19 + 16) = v20[1];
    *(_OWORD *)(v19 + 32) = v26;
    *(_OWORD *)v19 = v25;
  }
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_QWORD *)v28 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
  *(_BYTE *)(v28 + 17) = *(_BYTE *)(v29 + 17);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  v30 = a3[11];
  v31 = (_DWORD *)(a1 + v30);
  v32 = (_DWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  v33 = a3[12];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)v34 = *(_QWORD *)(a2 + v33);
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(a2 + v33 + 8);
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(a2 + v33 + 16);
  *(_QWORD *)(v34 + 24) = *(_QWORD *)(a2 + v33 + 24);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(a2 + v33 + 32);
  *(_QWORD *)(v34 + 40) = *(_QWORD *)(a2 + v33 + 40);
  *(_QWORD *)(v34 + 48) = *(_QWORD *)(a2 + v33 + 48);
  *(_QWORD *)(v34 + 56) = *(_QWORD *)(a2 + v33 + 56);
  *(_QWORD *)(v34 + 64) = *(_QWORD *)(a2 + v33 + 64);
  *(_QWORD *)(v34 + 72) = *(_QWORD *)(a2 + v33 + 72);
  *(_QWORD *)(v34 + 80) = *(_QWORD *)(a2 + v33 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v34 + 88) = *(_QWORD *)(v35 + 88);
  *(_QWORD *)(v34 + 96) = *(_QWORD *)(v35 + 96);
  *(_QWORD *)(v34 + 104) = *(_QWORD *)(v35 + 104);
  *(_QWORD *)(v34 + 112) = *(_QWORD *)(v35 + 112);
  *(_DWORD *)(v34 + 120) = *(_DWORD *)(v35 + 120);
  *(_QWORD *)(v34 + 128) = *(_QWORD *)(v35 + 128);
  *(_QWORD *)(v34 + 136) = *(_QWORD *)(v35 + 136);
  *(_BYTE *)(v34 + 144) = *(_BYTE *)(v35 + 144);
  *(_DWORD *)(v34 + 148) = *(_DWORD *)(v35 + 148);
  *(_DWORD *)(v34 + 152) = *(_DWORD *)(v35 + 152);
  *(_QWORD *)(v34 + 160) = *(_QWORD *)(v35 + 160);
  *(_QWORD *)(v34 + 168) = *(_QWORD *)(v35 + 168);
  *(_QWORD *)(v34 + 176) = *(_QWORD *)(v35 + 176);
  *(_QWORD *)(v34 + 184) = *(_QWORD *)(v35 + 184);
  *(_QWORD *)(v34 + 192) = *(_QWORD *)(v35 + 192);
  v36 = a3[13];
  v37 = (_BYTE *)(a1 + v36);
  v38 = (_BYTE *)(a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  v39 = a3[14];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[15];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_QWORD *)v43 = *(_QWORD *)(a2 + v42);
  *(_QWORD *)(v43 + 8) = *(_QWORD *)(a2 + v42 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
  *(_QWORD *)(v43 + 24) = *(_QWORD *)(v44 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v43 + 32) = *(_BYTE *)(v44 + 32);
  *(_BYTE *)(v43 + 33) = *(_BYTE *)(v44 + 33);
  return a1;
}

uint64_t initializeWithTake for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  v17 = a1 + v12;
  v18 = a2 + v12;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_OWORD *)(a1 + v19);
  v22 = (__int128 *)(a2 + v19);
  v23 = v22[2];
  v24 = *v22;
  v21[1] = v22[1];
  v21[2] = v23;
  *v21 = v24;
  v25 = a1 + v20;
  v26 = (__int128 *)(a2 + v20);
  v27 = *v26;
  *(_WORD *)(v25 + 16) = *((_WORD *)v26 + 8);
  *(_OWORD *)v25 = v27;
  v28 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  v29 = a3[12];
  v30 = a3[13];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_QWORD *)(v31 + 192) = *(_QWORD *)(v32 + 192);
  v33 = *(_OWORD *)(v32 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_OWORD *)(v31 + 48) = v33;
  v34 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v34;
  v35 = *(_OWORD *)(v32 + 112);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
  *(_OWORD *)(v31 + 112) = v35;
  v36 = *(_OWORD *)(v32 + 80);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
  *(_OWORD *)(v31 + 80) = v36;
  v37 = *(_OWORD *)(v32 + 176);
  *(_OWORD *)(v31 + 160) = *(_OWORD *)(v32 + 160);
  *(_OWORD *)(v31 + 176) = v37;
  v38 = *(_OWORD *)(v32 + 144);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v32 + 128);
  *(_OWORD *)(v31 + 144) = v38;
  *(_WORD *)(a1 + v30) = *(_WORD *)(a2 + v30);
  v39 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(_WORD *)(v40 + 32) = *(_WORD *)(v41 + 32);
  return a1;
}

uint64_t assignWithTake for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = v20;
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (!*(_QWORD *)(a1 + v21 + 16))
    goto LABEL_5;
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
  {
    sub_1DC4CDAF4(v22);
LABEL_5:
    v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  v25 = *(_QWORD *)(v23 + 40);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 40) = v25;
  swift_bridgeObjectRelease();
LABEL_6:
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a2 + v27 + 8);
  *(_QWORD *)v28 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(v28 + 8) = v30;
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 16) = *(_WORD *)(v29 + 16);
  v31 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  v32 = a3[12];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_OWORD *)(a2 + v32 + 16);
  *(_OWORD *)v33 = *(_OWORD *)(a2 + v32);
  *(_OWORD *)(v33 + 16) = v35;
  v36 = *(_OWORD *)(a2 + v32 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(a2 + v32 + 32);
  *(_OWORD *)(v33 + 48) = v36;
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(a2 + v32 + 64);
  *(_QWORD *)(v33 + 80) = *(_QWORD *)(a2 + v32 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v33 + 88) = *(_OWORD *)(v34 + 88);
  *(_OWORD *)(v33 + 104) = *(_OWORD *)(v34 + 104);
  *(_DWORD *)(v33 + 120) = *(_DWORD *)(v34 + 120);
  *(_OWORD *)(v33 + 128) = *(_OWORD *)(v34 + 128);
  *(_BYTE *)(v33 + 144) = *(_BYTE *)(v34 + 144);
  *(_QWORD *)(v33 + 148) = *(_QWORD *)(v34 + 148);
  v37 = *(_OWORD *)(v34 + 176);
  *(_OWORD *)(v33 + 160) = *(_OWORD *)(v34 + 160);
  *(_OWORD *)(v33 + 176) = v37;
  *(_QWORD *)(v33 + 192) = *(_QWORD *)(v34 + 192);
  v38 = a3[13];
  v39 = a3[14];
  v40 = (_BYTE *)(a1 + v38);
  v41 = (_BYTE *)(a2 + v38);
  *v40 = *v41;
  v40[1] = v41[1];
  v42 = (_QWORD *)(a1 + v39);
  v43 = (uint64_t *)(a2 + v39);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = a3[15];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_QWORD *)(v48 + 8);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_QWORD *)(v47 + 8) = v49;
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v48 + 24);
  *(_QWORD *)(v47 + 16) = *(_QWORD *)(v48 + 16);
  *(_QWORD *)(v47 + 24) = v50;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v47 + 32) = *(_BYTE *)(v48 + 32);
  *(_BYTE *)(v47 + 33) = *(_BYTE *)(v48 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScrollEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4F9764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScrollEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4F981C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC4F98C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkEventType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScrollEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1DC4F9A8C + 4 * byte_1DC6309C1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1DC4F9AC0 + 4 * byte_1DC6309BC[v4]))();
}

uint64_t sub_1DC4F9AC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4F9AC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4F9AD0);
  return result;
}

uint64_t sub_1DC4F9ADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4F9AE4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1DC4F9AE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4F9AF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleScrollEvent.Model.CodingKeys()
{
  return &type metadata for ArticleScrollEvent.Model.CodingKeys;
}

unint64_t sub_1DC4F9B10()
{
  unint64_t result;

  result = qword_1F036A8F0;
  if (!qword_1F036A8F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630CA4, &type metadata for ArticleScrollEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A8F0);
  }
  return result;
}

unint64_t sub_1DC4F9B58()
{
  unint64_t result;

  result = qword_1F036A8F8;
  if (!qword_1F036A8F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630C14, &type metadata for ArticleScrollEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A8F8);
  }
  return result;
}

unint64_t sub_1DC4F9BA0()
{
  unint64_t result;

  result = qword_1F036A900;
  if (!qword_1F036A900)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC630C3C, &type metadata for ArticleScrollEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A900);
  }
  return result;
}

uint64_t sub_1DC4F9BE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74536C6C6F726373 && a2 == 0xEF61746144747261 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E456C6C6F726373 && a2 == 0xED00006174614464 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C490 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C4B0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

StocksAnalytics::CalendarResultType_optional __swiftcall CalendarResultType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::CalendarResultType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CalendarResultType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4FA1D0 + 4 * byte_1DC630D20[*v0]))(0x6C65636E6163, 0xE600000000000000);
}

uint64_t sub_1DC4FA1D0()
{
  return 0x73736563637573;
}

uint64_t sub_1DC4FA1E8()
{
  return 1818845542;
}

unint64_t sub_1DC4FA1F8()
{
  return 0xD000000000000010;
}

void sub_1DC4FA214(char *a1)
{
  sub_1DC54439C(*a1);
}

unint64_t sub_1DC4FA224()
{
  unint64_t result;

  result = qword_1F036A908;
  if (!qword_1F036A908)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarResultType, &type metadata for CalendarResultType);
    atomic_store(result, (unint64_t *)&qword_1F036A908);
  }
  return result;
}

void sub_1DC4FA268()
{
  char *v0;

  sub_1DC601D30(*v0);
}

void sub_1DC4FA270()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC4FA2A8()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC4FA300(uint64_t a1)
{
  char *v1;

  sub_1DC6034AC(a1, *v1);
}

StocksAnalytics::CalendarResultType_optional sub_1DC4FA308(Swift::String *a1)
{
  return CalendarResultType.init(rawValue:)(*a1);
}

uint64_t sub_1DC4FA314()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4FA340 + 4 * byte_1DC630D28[*v0]))();
}

void sub_1DC4FA340(_QWORD *a1@<X8>)
{
  *a1 = 0x73736563637573;
  a1[1] = 0xE700000000000000;
}

void sub_1DC4FA35C(_QWORD *a1@<X8>)
{
  *a1 = 1818845542;
  a1[1] = 0xE400000000000000;
}

void sub_1DC4FA370(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001DC64B520;
}

uint64_t sub_1DC4FA390()
{
  sub_1DC4FA504();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4FA3EC()
{
  sub_1DC4FA504();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for CalendarResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC4FA484 + 4 * byte_1DC630D31[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC4FA4B8 + 4 * byte_1DC630D2C[v4]))();
}

uint64_t sub_1DC4FA4B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FA4C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4FA4C8);
  return result;
}

uint64_t sub_1DC4FA4D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4FA4DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC4FA4E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FA4E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CalendarResultType()
{
  return &type metadata for CalendarResultType;
}

unint64_t sub_1DC4FA504()
{
  unint64_t result;

  result = qword_1F036A910;
  if (!qword_1F036A910)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarResultType, &type metadata for CalendarResultType);
    atomic_store(result, (unint64_t *)&qword_1F036A910);
  }
  return result;
}

uint64_t sub_1DC4FA548()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC4FA56C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1DC4FA5A4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DC4FA7A0()
{
  return swift_release();
}

void sub_1DC4FA7A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11B80)
  {
    v0 = sub_1DC62B514();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11B80);
  }
}

StocksAnalytics::ActionMethod_optional __swiftcall ActionMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ActionMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ActionMethod.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4FA884 + 4 * byte_1DC630E54[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4FA884()
{
  return 0x776F7272616873;
}

uint64_t sub_1DC4FA898()
{
  return 0x4D747865746E6F63;
}

uint64_t sub_1DC4FA8B8()
{
  return 0x6570697773;
}

void sub_1DC4FA8CC(char *a1)
{
  sub_1DC545D9C(*a1);
}

unint64_t sub_1DC4FA8DC()
{
  unint64_t result;

  result = qword_1F036A918;
  if (!qword_1F036A918)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ActionMethod, &type metadata for ActionMethod);
    atomic_store(result, (unint64_t *)&qword_1F036A918);
  }
  return result;
}

void sub_1DC4FA920()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC4FA96C()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC4FA9DC()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC4FAA18()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC4FAA74()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC4FAABC()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ActionMethod_optional sub_1DC4FAB2C(Swift::String *a1)
{
  return ActionMethod.init(rawValue:)(*a1);
}

uint64_t sub_1DC4FAB38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC4FAB68 + 4 * byte_1DC630E64[*v0]))();
}

void sub_1DC4FAB68(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x776F7272616873;
  a1[1] = v1;
}

void sub_1DC4FAB80(_QWORD *a1@<X8>)
{
  *a1 = 0x4D747865746E6F63;
  a1[1] = 0xEB00000000756E65;
}

void sub_1DC4FABA4(_QWORD *a1@<X8>)
{
  *a1 = 0x6570697773;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1DC4FABBC()
{
  sub_1DC4FAD30();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4FAC18()
{
  sub_1DC4FAD30();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for ActionMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC4FACB0 + 4 * byte_1DC630E6D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC4FACE4 + 4 * byte_1DC630E68[v4]))();
}

uint64_t sub_1DC4FACE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FACEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4FACF4);
  return result;
}

uint64_t sub_1DC4FAD00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4FAD08);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC4FAD0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FAD14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMethod()
{
  return &type metadata for ActionMethod;
}

unint64_t sub_1DC4FAD30()
{
  unint64_t result;

  result = qword_1F036A920;
  if (!qword_1F036A920)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ActionMethod, &type metadata for ActionMethod);
    atomic_store(result, (unint64_t *)&qword_1F036A920);
  }
  return result;
}

StocksAnalytics::SymbolChartDateRange_optional __swiftcall SymbolChartDateRange.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::SymbolChartDateRange_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SymbolChartDateRange.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4FADFC + 4 * byte_1DC630F90[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC4FADFC()
{
  return 0x796144656E6FLL;
}

uint64_t sub_1DC4FAE10()
{
  return 0x6B656557656E6FLL;
}

uint64_t sub_1DC4FAE24()
{
  return 0x68746E6F4D656E6FLL;
}

uint64_t sub_1DC4FAE3C()
{
  return 0x6E6F4D6565726874;
}

uint64_t sub_1DC4FAE5C()
{
  return 0x68746E6F4D786973;
}

void sub_1DC4FAED8(char *a1)
{
  sub_1DC543834(*a1);
}

unint64_t sub_1DC4FAEE8()
{
  unint64_t result;

  result = qword_1F036A928;
  if (!qword_1F036A928)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDateRange, &type metadata for SymbolChartDateRange);
    atomic_store(result, (unint64_t *)&qword_1F036A928);
  }
  return result;
}

uint64_t sub_1DC4FAF2C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DC62B5B0();
  sub_1DC602594((uint64_t)v3, v1);
  return sub_1DC62B5C8();
}

void sub_1DC4FAF70(uint64_t a1)
{
  char *v1;

  sub_1DC602594(a1, *v1);
}

uint64_t sub_1DC4FAF78()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DC62B5B0();
  sub_1DC602594((uint64_t)v3, v1);
  return sub_1DC62B5C8();
}

StocksAnalytics::SymbolChartDateRange_optional sub_1DC4FAFB8(Swift::String *a1)
{
  return SymbolChartDateRange.init(rawValue:)(*a1);
}

uint64_t sub_1DC4FAFC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SymbolChartDateRange.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC4FAFE8()
{
  sub_1DC4FB15C();
  return sub_1DC62B13C();
}

uint64_t sub_1DC4FB044()
{
  sub_1DC4FB15C();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for SymbolChartDateRange(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1DC4FB0DC + 4 * byte_1DC630FA0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1DC4FB110 + 4 * byte_1DC630F9B[v4]))();
}

uint64_t sub_1DC4FB110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FB118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4FB120);
  return result;
}

uint64_t sub_1DC4FB12C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4FB134);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1DC4FB138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FB140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDateRange()
{
  return &type metadata for SymbolChartDateRange;
}

unint64_t sub_1DC4FB15C()
{
  unint64_t result;

  result = qword_1F036A930;
  if (!qword_1F036A930)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDateRange, &type metadata for SymbolChartDateRange);
    atomic_store(result, (unint64_t *)&qword_1F036A930);
  }
  return result;
}

void AdGroupData.groupType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdGroupData.groupType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdGroupData.groupType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdGroupData __swiftcall AdGroupData.init(groupType:)(StocksAnalytics::AdGroupData groupType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)groupType.groupType;
  return groupType;
}

uint64_t sub_1DC4FB1D4()
{
  return 0x70795470756F7267;
}

uint64_t sub_1DC4FB1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x70795470756F7267 && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC4FB290()
{
  sub_1DC4FB3E4();
  return sub_1DC62B604();
}

uint64_t sub_1DC4FB2B8()
{
  sub_1DC4FB3E4();
  return sub_1DC62B610();
}

uint64_t AdGroupData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC4FB5A4(0, &qword_1F036A938, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4FB3E4();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC4FB428();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC4FB3E4()
{
  unint64_t result;

  result = qword_1F036A940;
  if (!qword_1F036A940)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63125C, &type metadata for AdGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A940);
  }
  return result;
}

unint64_t sub_1DC4FB428()
{
  unint64_t result;

  result = qword_1EDB117B0;
  if (!qword_1EDB117B0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GroupType, &type metadata for GroupType);
    atomic_store(result, (unint64_t *)&qword_1EDB117B0);
  }
  return result;
}

uint64_t AdGroupData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC4FB5A4(0, &qword_1F036A948, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4FB3E4();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC4FB600();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4FB5A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4FB3E4();
    v7 = a3(a1, &type metadata for AdGroupData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4FB600()
{
  unint64_t result;

  result = qword_1EDB12348;
  if (!qword_1EDB12348)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GroupType, &type metadata for GroupType);
    atomic_store(result, (unint64_t *)&qword_1EDB12348);
  }
  return result;
}

uint64_t sub_1DC4FB64C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdGroupData.init(from:)(a1, a2);
}

uint64_t sub_1DC4FB660(_QWORD *a1)
{
  return AdGroupData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AdGroupData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DC4FB6C0 + 4 * byte_1DC6310E9[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DC4FB6F4 + 4 * byte_1DC6310E4[v4]))();
}

uint64_t sub_1DC4FB6F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FB6FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4FB704);
  return result;
}

uint64_t sub_1DC4FB710(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4FB718);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DC4FB71C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FB724(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdGroupData()
{
  return &type metadata for AdGroupData;
}

uint64_t storeEnumTagSinglePayload for AdGroupData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4FB780 + 4 * byte_1DC6310EE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4FB7A0 + 4 * byte_1DC6310F3[v4]))();
}

_BYTE *sub_1DC4FB780(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4FB7A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4FB7A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4FB7B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4FB7B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4FB7C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdGroupData.CodingKeys()
{
  return &type metadata for AdGroupData.CodingKeys;
}

unint64_t sub_1DC4FB7E0()
{
  unint64_t result;

  result = qword_1F036A950;
  if (!qword_1F036A950)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631234, &type metadata for AdGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A950);
  }
  return result;
}

unint64_t sub_1DC4FB828()
{
  unint64_t result;

  result = qword_1F036A958;
  if (!qword_1F036A958)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6311A4, &type metadata for AdGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A958);
  }
  return result;
}

unint64_t sub_1DC4FB870()
{
  unint64_t result;

  result = qword_1F036A960;
  if (!qword_1F036A960)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6311CC, &type metadata for AdGroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A960);
  }
  return result;
}

void SymbolChartDisplayErrorData.symbolChartDisplayErrorCode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SymbolChartDisplayErrorData.symbolChartDisplayErrorCode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SymbolChartDisplayErrorData.symbolChartDisplayErrorCode.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SymbolChartDisplayErrorData __swiftcall SymbolChartDisplayErrorData.init(symbolChartDisplayErrorCode:)(StocksAnalytics::SymbolChartDisplayErrorData symbolChartDisplayErrorCode)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)symbolChartDisplayErrorCode.symbolChartDisplayErrorCode;
  return symbolChartDisplayErrorCode;
}

unint64_t sub_1DC4FB8E8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1DC4FB904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC4FBFD8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC4FB92C()
{
  sub_1DC4FBA80();
  return sub_1DC62B604();
}

uint64_t sub_1DC4FB954()
{
  sub_1DC4FBA80();
  return sub_1DC62B610();
}

uint64_t SymbolChartDisplayErrorData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC4FBC40(0, &qword_1F036A968, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4FBA80();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC4FBAC4();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC4FBA80()
{
  unint64_t result;

  result = qword_1F036A970;
  if (!qword_1F036A970)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631440, &type metadata for SymbolChartDisplayErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A970);
  }
  return result;
}

unint64_t sub_1DC4FBAC4()
{
  unint64_t result;

  result = qword_1F036A978;
  if (!qword_1F036A978)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDisplayErrorCode, &type metadata for SymbolChartDisplayErrorCode);
    atomic_store(result, (unint64_t *)&qword_1F036A978);
  }
  return result;
}

uint64_t SymbolChartDisplayErrorData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC4FBC40(0, &qword_1F036A980, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4FBA80();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC4FBC9C();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC4FBC40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4FBA80();
    v7 = a3(a1, &type metadata for SymbolChartDisplayErrorData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC4FBC9C()
{
  unint64_t result;

  result = qword_1F036A988;
  if (!qword_1F036A988)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDisplayErrorCode, &type metadata for SymbolChartDisplayErrorCode);
    atomic_store(result, (unint64_t *)&qword_1F036A988);
  }
  return result;
}

unint64_t sub_1DC4FBCE4()
{
  unint64_t result;

  result = qword_1F036A990;
  if (!qword_1F036A990)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDisplayErrorData, &type metadata for SymbolChartDisplayErrorData);
    atomic_store(result, (unint64_t *)&qword_1F036A990);
  }
  return result;
}

unint64_t sub_1DC4FBD2C()
{
  unint64_t result;

  result = qword_1F036A998;
  if (!qword_1F036A998)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolChartDisplayErrorData, &type metadata for SymbolChartDisplayErrorData);
    atomic_store(result, (unint64_t *)&qword_1F036A998);
  }
  return result;
}

uint64_t sub_1DC4FBD70@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SymbolChartDisplayErrorData.init(from:)(a1, a2);
}

uint64_t sub_1DC4FBD84(_QWORD *a1)
{
  return SymbolChartDisplayErrorData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SymbolChartDisplayErrorData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC4FBDE4 + 4 * byte_1DC6312B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC4FBE18 + 4 * byte_1DC6312B0[v4]))();
}

uint64_t sub_1DC4FBE18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FBE20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC4FBE28);
  return result;
}

uint64_t sub_1DC4FBE34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC4FBE3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC4FBE40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC4FBE48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDisplayErrorData()
{
  return &type metadata for SymbolChartDisplayErrorData;
}

uint64_t storeEnumTagSinglePayload for SymbolChartDisplayErrorData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC4FBEA4 + 4 * byte_1DC6312BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC4FBEC4 + 4 * byte_1DC6312BF[v4]))();
}

_BYTE *sub_1DC4FBEA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC4FBEC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4FBECC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4FBED4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC4FBEDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC4FBEE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDisplayErrorData.CodingKeys()
{
  return &type metadata for SymbolChartDisplayErrorData.CodingKeys;
}

unint64_t sub_1DC4FBF04()
{
  unint64_t result;

  result = qword_1F036A9A0;
  if (!qword_1F036A9A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631418, &type metadata for SymbolChartDisplayErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A9A0);
  }
  return result;
}

unint64_t sub_1DC4FBF4C()
{
  unint64_t result;

  result = qword_1F036A9A8;
  if (!qword_1F036A9A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631388, &type metadata for SymbolChartDisplayErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A9A8);
  }
  return result;
}

unint64_t sub_1DC4FBF94()
{
  unint64_t result;

  result = qword_1F036A9B0;
  if (!qword_1F036A9B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6313B0, &type metadata for SymbolChartDisplayErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A9B0);
  }
  return result;
}

uint64_t sub_1DC4FBFD8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DC64C5B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t PaidSubscriberToSourceChannelMethod.feldsparValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1DC4FC064(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB104D0, MEMORY[0x1E0CF8078]);
}

uint64_t static PaywallExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB104E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB104D0, a1);
}

uint64_t sub_1DC4FC0A4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB104F0, MEMORY[0x1E0CF8380]);
}

uint64_t static PaywallExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10508, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB104F0, a1);
}

uint64_t PaywallExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t PaywallExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PaywallExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for PaywallExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for PaywallExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB10510);
}

uint64_t PaywallExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.timedData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.viewData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.newsArticleData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.feedData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.channelData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaywallExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.groupData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4FC710()
{
  unint64_t result;

  result = qword_1EDB100A0;
  if (!qword_1EDB100A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PurchaseSessionData, &type metadata for PurchaseSessionData);
    atomic_store(result, (unint64_t *)&qword_1EDB100A0);
  }
  return result;
}

unint64_t sub_1DC4FC754()
{
  unint64_t result;

  result = qword_1EDB10098;
  if (!qword_1EDB10098)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PurchaseSessionData, &type metadata for PurchaseSessionData);
    atomic_store(result, (unint64_t *)&qword_1EDB10098);
  }
  return result;
}

uint64_t PaywallExposureEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.purchaseSessionData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4FC890()
{
  unint64_t result;

  result = qword_1EDB0EE90;
  if (!qword_1EDB0EE90)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PurchaseData, &type metadata for PurchaseData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE90);
  }
  return result;
}

unint64_t sub_1DC4FC8D4()
{
  unint64_t result;

  result = qword_1EDB0EE88;
  if (!qword_1EDB0EE88)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PurchaseData, &type metadata for PurchaseData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE88);
  }
  return result;
}

uint64_t PaywallExposureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.purchaseData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC4FCA10()
{
  unint64_t result;

  result = qword_1EDB0EDC0;
  if (!qword_1EDB0EDC0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaywallData, &type metadata for PaywallData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDC0);
  }
  return result;
}

unint64_t sub_1DC4FCA54()
{
  unint64_t result;

  result = qword_1EDB0EDB8;
  if (!qword_1EDB0EDB8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaywallData, &type metadata for PaywallData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDB8);
  }
  return result;
}

uint64_t PaywallExposureEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.paywallData.modify())()
{
  type metadata accessor for PaywallExposureEvent(0);
  return nullsub_1;
}

uint64_t PaywallExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for PaywallExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
}

uint64_t PaywallExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t PaywallExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for PaywallExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for PaywallExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036AA28);
}

uint64_t PaywallExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 28);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_1DC4D7808(v4, v5);
}

uint64_t PaywallExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 36);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);
  return sub_1DC4D7808(v4, v5);
}

uint64_t PaywallExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t PaywallExposureEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.paywallData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PaywallExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 PaywallExposureEvent.Model.init(eventData:timedData:viewData:newsArticleData:feedData:channelData:groupData:purchaseSessionData:purchaseData:paywallData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, char *a11)
{
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 result;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v14 = *a3;
  v15 = a3[1];
  v16 = *((_WORD *)a3 + 8);
  v33 = a4[1];
  v34 = *a4;
  v32 = a4[2];
  v17 = *((_QWORD *)a4 + 6);
  v18 = *((_QWORD *)a4 + 7);
  v19 = *((_DWORD *)a4 + 16);
  v36 = *a5;
  v35 = *((_QWORD *)a5 + 2);
  v40 = *a6;
  v38 = *((_QWORD *)a6 + 3);
  v39 = *((_QWORD *)a6 + 2);
  v37 = *((_WORD *)a6 + 16);
  v43 = (__n128)a7[1];
  v44 = *a7;
  v41 = *((_QWORD *)a7 + 5);
  v42 = *((_QWORD *)a7 + 4);
  v45 = a8[1];
  v46 = *a8;
  v48 = a10[1];
  v49 = *a10;
  v47 = *((_BYTE *)a10 + 16);
  v50 = *a11;
  v20 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)type metadata accessor for PaywallExposureEvent.Model(0);
  v22 = a9 + v21[5];
  v23 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  v24 = a9 + v21[6];
  *(_QWORD *)v24 = v14;
  *(_QWORD *)(v24 + 8) = v15;
  *(_WORD *)(v24 + 16) = v16;
  v25 = a9 + v21[7];
  *(_OWORD *)v25 = v34;
  *(_OWORD *)(v25 + 16) = v33;
  *(_OWORD *)(v25 + 32) = v32;
  *(_QWORD *)(v25 + 48) = v17;
  *(_QWORD *)(v25 + 56) = v18;
  *(_DWORD *)(v25 + 64) = v19;
  v26 = a9 + v21[8];
  *(_OWORD *)v26 = v36;
  *(_QWORD *)(v26 + 16) = v35;
  v27 = a9 + v21[9];
  *(_OWORD *)v27 = v40;
  *(_QWORD *)(v27 + 16) = v39;
  *(_QWORD *)(v27 + 24) = v38;
  *(_WORD *)(v27 + 32) = v37;
  v28 = a9 + v21[10];
  result = v43;
  *(_OWORD *)v28 = v44;
  *(__n128 *)(v28 + 16) = v43;
  *(_QWORD *)(v28 + 32) = v42;
  *(_QWORD *)(v28 + 40) = v41;
  v30 = (_QWORD *)(a9 + v21[11]);
  *v30 = v46;
  v30[1] = v45;
  v31 = a9 + v21[12];
  *(_QWORD *)v31 = v49;
  *(_QWORD *)(v31 + 8) = v48;
  *(_BYTE *)(v31 + 16) = v47;
  *(_BYTE *)(a9 + v21[13]) = v50;
  return result;
}

uint64_t sub_1DC4FD234(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC4FD26C + 4 * byte_1DC6314A0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC4FD26C()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC4FD280()
{
  return 0x6174614477656976;
}

uint64_t sub_1DC4FD2CC()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC4FD34C()
{
  unsigned __int8 *v0;

  return sub_1DC4FD234(*v0);
}

uint64_t sub_1DC4FD354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC500F1C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC4FD378(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1DC4FD384()
{
  sub_1DC4FD7D8();
  return sub_1DC62B604();
}

uint64_t sub_1DC4FD3AC()
{
  sub_1DC4FD7D8();
  return sub_1DC62B610();
}

uint64_t PaywallExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  uint64_t v19;
  __int128 *v20;
  __int16 v21;
  __int128 v22;
  __int128 *v23;
  __int128 v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int v36;
  char v37;

  v3 = v1;
  sub_1DC4FDFE4(0, &qword_1F036A9B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4FD7D8();
  sub_1DC62B5F8();
  LOBYTE(v32) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for PaywallExposureEvent.Model(0);
    LOBYTE(v32) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v32 = v12;
    *((_QWORD *)&v32 + 1) = v13;
    LOWORD(v33) = (_WORD)v11;
    v37 = 2;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[7]);
    v15 = *((_DWORD *)v14 + 16);
    v16 = v14[1];
    v32 = *v14;
    v33 = v16;
    v17 = v14[3];
    v34 = v14[2];
    v35 = v17;
    v36 = v15;
    v37 = 3;
    sub_1DC4C18E8();
    sub_1DC62B490();
    v18 = (__int128 *)(v3 + v10[8]);
    v19 = *((_QWORD *)v18 + 2);
    v32 = *v18;
    *(_QWORD *)&v33 = v19;
    v37 = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v20 = (__int128 *)(v3 + v10[9]);
    v21 = *((_WORD *)v20 + 16);
    v22 = v20[1];
    v32 = *v20;
    v33 = v22;
    LOWORD(v34) = v21;
    v37 = 5;
    sub_1DC4C8E84();
    sub_1DC62B490();
    v23 = (__int128 *)(v3 + v10[10]);
    v24 = v23[1];
    v32 = *v23;
    v33 = v24;
    v34 = v23[2];
    v37 = 6;
    sub_1DC4C9004();
    sub_1DC62B490();
    v25 = (uint64_t *)(v3 + v10[11]);
    v27 = *v25;
    v26 = v25[1];
    *(_QWORD *)&v32 = v27;
    *((_QWORD *)&v32 + 1) = v26;
    v37 = 7;
    sub_1DC4FC754();
    sub_1DC62B4E4();
    v28 = (uint64_t *)(v3 + v10[12]);
    v29 = *v28;
    v30 = v28[1];
    LOBYTE(v28) = *((_BYTE *)v28 + 16);
    *(_QWORD *)&v32 = v29;
    *((_QWORD *)&v32 + 1) = v30;
    LOBYTE(v33) = (_BYTE)v28;
    v37 = 8;
    sub_1DC4FC8D4();
    sub_1DC62B4E4();
    LOBYTE(v32) = *(_BYTE *)(v3 + v10[13]);
    v37 = 9;
    sub_1DC4FCA54();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC4FD7D8()
{
  unint64_t result;

  result = qword_1F036A9C0;
  if (!qword_1F036A9C0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631784, &type metadata for PaywallExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036A9C0);
  }
  return result;
}

uint64_t PaywallExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  __int16 v20;
  char *v21;
  int v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  __int16 v28;
  char *v29;
  __int128 v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  int v55;
  char v56;

  v42 = a2;
  v4 = sub_1DC62ABC0();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62ABA8();
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4FDFE4(0, &qword_1F036A9C8, MEMORY[0x1E0DED048]);
  v44 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v40 - v12;
  v50 = type metadata accessor for PaywallExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v50);
  v48 = a1;
  v49 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4FD7D8();
  v43 = v13;
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  v41 = v11;
  LOBYTE(v51) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v15 = v7;
  v16 = v49;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v49, v9, v15);
  LOBYTE(v51) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v17 = v46;
  sub_1DC62B454();
  v18 = (int *)v50;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v16[*(int *)(v50 + 20)], v6, v17);
  v56 = 2;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v19 = *((_QWORD *)&v51 + 1);
  v20 = v52;
  v21 = &v16[v18[6]];
  *(_QWORD *)v21 = v51;
  *((_QWORD *)v21 + 1) = v19;
  *((_WORD *)v21 + 8) = v20;
  v56 = 3;
  sub_1DC4C18A0();
  sub_1DC62B400();
  v22 = v55;
  v23 = &v16[v18[7]];
  v24 = v52;
  *(_OWORD *)v23 = v51;
  *((_OWORD *)v23 + 1) = v24;
  v25 = v54;
  *((_OWORD *)v23 + 2) = v53;
  *((_OWORD *)v23 + 3) = v25;
  *((_DWORD *)v23 + 16) = v22;
  v56 = 4;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v26 = v52;
  v27 = &v16[v18[8]];
  *(_OWORD *)v27 = v51;
  *((_QWORD *)v27 + 2) = v26;
  v56 = 5;
  sub_1DC4C8E40();
  sub_1DC62B400();
  v40[1] = v15;
  v28 = v53;
  v29 = &v16[v18[9]];
  v30 = v52;
  *(_OWORD *)v29 = v51;
  *((_OWORD *)v29 + 1) = v30;
  *((_WORD *)v29 + 16) = v28;
  v56 = 6;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v31 = &v16[v18[10]];
  v32 = v52;
  *(_OWORD *)v31 = v51;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v53;
  v56 = 7;
  sub_1DC4FC710();
  sub_1DC62B454();
  v33 = *((_QWORD *)&v51 + 1);
  v34 = &v16[v18[11]];
  *(_QWORD *)v34 = v51;
  *((_QWORD *)v34 + 1) = v33;
  v56 = 8;
  sub_1DC4FC890();
  sub_1DC62B454();
  v35 = *((_QWORD *)&v51 + 1);
  v36 = v52;
  v37 = &v16[v18[12]];
  *(_QWORD *)v37 = v51;
  *((_QWORD *)v37 + 1) = v35;
  v37[16] = v36;
  v56 = 9;
  sub_1DC4FCA10();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v44);
  v38 = (uint64_t)v49;
  v49[*(int *)(v50 + 52)] = v51;
  sub_1DC4FE040(v38, v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return sub_1DC4FE084(v38);
}

void sub_1DC4FDFE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC4FD7D8();
    v7 = a3(a1, &type metadata for PaywallExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC4FE040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PaywallExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC4FE084(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PaywallExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC4FE0C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PaywallExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC4FE0D4(_QWORD *a1)
{
  return PaywallExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC4FE0E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB104E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB104D0, a1);
}

uint64_t sub_1DC4FE10C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10508, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB104F0, a1);
}

uint64_t sub_1DC4FE130@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v11, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for PaywallExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for PaywallExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4FF52C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PaywallExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC4FF7CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC4FFA68()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E258, (void (*)(void))sub_1DC4FC890, (void (*)(void))sub_1DC4FC8D4);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PaywallExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *(_QWORD *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = *((_QWORD *)v18 + 3);
      *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
      *((_QWORD *)v17 + 3) = v20;
      v17[32] = v18[32];
      *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
      v17[48] = v18[48];
      *((_QWORD *)v17 + 7) = *((_QWORD *)v18 + 7);
      *((_DWORD *)v17 + 16) = *((_DWORD *)v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)v18 + 3);
      *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
      *((_OWORD *)v17 + 3) = v22;
      *((_DWORD *)v17 + 16) = *((_DWORD *)v18 + 16);
      v23 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v23;
    }
    v24 = a3[8];
    v25 = a3[9];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    *v26 = *v27;
    v28 = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
    *((_QWORD *)v26 + 2) = v28;
    v29 = (char *)a1 + v25;
    v30 = (char *)a2 + v25;
    v31 = *(_QWORD *)((char *)a2 + v25 + 8);
    swift_bridgeObjectRetain();
    if (v31)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = *((_QWORD *)v30 + 3);
      *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
      *((_QWORD *)v29 + 3) = v32;
      *((_WORD *)v29 + 16) = *((_WORD *)v30 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v33 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v33;
      *((_WORD *)v29 + 16) = *((_WORD *)v30 + 16);
    }
    v34 = a3[10];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = *((_QWORD *)v36 + 2);
    if (v37)
    {
      *v35 = *v36;
      *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
      *((_QWORD *)v35 + 2) = v37;
      *((_QWORD *)v35 + 3) = *((_QWORD *)v36 + 3);
      v38 = *((_QWORD *)v36 + 5);
      *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
      *((_QWORD *)v35 + 5) = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v39 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v39;
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    }
    v40 = a3[11];
    v41 = a3[12];
    v42 = (_QWORD *)((char *)a1 + v40);
    v43 = (_QWORD *)((char *)a2 + v40);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = (char *)a1 + v41;
    v46 = (char *)a2 + v41;
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v45[16] = v46[16];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PaywallExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[10] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = v18;
    v19 = *(_QWORD *)(v17 + 24);
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_QWORD *)(v16 + 24) = v19;
    *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
    *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
    *(_BYTE *)(v16 + 48) = *(_BYTE *)(v17 + 48);
    *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
    *(_DWORD *)(v16 + 64) = *(_DWORD *)(v17 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
    *(_OWORD *)(v16 + 48) = v20;
    *(_DWORD *)(v16 + 64) = *(_DWORD *)(v17 + 64);
    v21 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v21;
  }
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = v26;
  v27 = a1 + v23;
  v28 = a2 + v23;
  v29 = *(_QWORD *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  if (v29)
  {
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = v29;
    v30 = *(_QWORD *)(v28 + 24);
    *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
    *(_QWORD *)(v27 + 24) = v30;
    *(_WORD *)(v27 + 32) = *(_WORD *)(v28 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v31;
    *(_WORD *)(v27 + 32) = *(_WORD *)(v28 + 32);
  }
  v32 = a3[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(v34 + 16);
  if (v35)
  {
    *(_BYTE *)v33 = *(_BYTE *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v33 + 16) = v35;
    *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
    v36 = *(_QWORD *)(v34 + 40);
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 40) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v37;
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  }
  v38 = a3[11];
  v39 = a3[12];
  v40 = (_QWORD *)(a1 + v38);
  v41 = (_QWORD *)(a2 + v38);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = a1 + v39;
  v44 = a2 + v39;
  v45 = *(_QWORD *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_QWORD *)(v43 + 8) = v45;
  *(_BYTE *)(v43 + 16) = *(_BYTE *)(v44 + 16);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a1 + v14 + 8);
  v18 = *(_QWORD *)(a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
      v19 = *(_QWORD *)(v16 + 40);
      *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
      *(_QWORD *)(v15 + 40) = v19;
      *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
      *(_BYTE *)(v15 + 64) = *(_BYTE *)(v16 + 64);
      *(_BYTE *)(v15 + 65) = *(_BYTE *)(v16 + 65);
      *(_BYTE *)(v15 + 66) = *(_BYTE *)(v16 + 66);
      *(_BYTE *)(v15 + 67) = *(_BYTE *)(v16 + 67);
    }
    else
    {
      sub_1DC5006BC(v15);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v22 = *(_OWORD *)(v16 + 32);
      v21 = *(_OWORD *)(v16 + 48);
      v23 = *(_OWORD *)(v16 + 16);
      *(_DWORD *)(v15 + 64) = *(_DWORD *)(v16 + 64);
      *(_OWORD *)(v15 + 32) = v22;
      *(_OWORD *)(v15 + 48) = v21;
      *(_OWORD *)(v15 + 16) = v23;
    }
  }
  else if (v18)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
    *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
    v20 = *(_QWORD *)(v16 + 40);
    *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
    *(_QWORD *)(v15 + 40) = v20;
    *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
    *(_BYTE *)(v15 + 64) = *(_BYTE *)(v16 + 64);
    *(_BYTE *)(v15 + 65) = *(_BYTE *)(v16 + 65);
    *(_BYTE *)(v15 + 66) = *(_BYTE *)(v16 + 66);
    *(_BYTE *)(v15 + 67) = *(_BYTE *)(v16 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v24 = *(_OWORD *)(v16 + 16);
    v25 = *(_OWORD *)(v16 + 32);
    v26 = *(_OWORD *)(v16 + 48);
    *(_DWORD *)(v15 + 64) = *(_DWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 32) = v25;
    *(_OWORD *)(v15 + 48) = v26;
    *(_OWORD *)(v15 + 16) = v24;
  }
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = (__int128 *)(a2 + v30);
  v33 = *(_QWORD *)(a1 + v30 + 8);
  v34 = *(_QWORD *)(a2 + v30 + 8);
  if (v33)
  {
    if (v34)
    {
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *(_QWORD *)(v31 + 8) = *((_QWORD *)v32 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
      *(_QWORD *)(v31 + 24) = *((_QWORD *)v32 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v31 + 32) = *((_BYTE *)v32 + 32);
      *(_BYTE *)(v31 + 33) = *((_BYTE *)v32 + 33);
    }
    else
    {
      sub_1DC4DAE38(v31);
      v35 = *((_WORD *)v32 + 16);
      v36 = v32[1];
      *(_OWORD *)v31 = *v32;
      *(_OWORD *)(v31 + 16) = v36;
      *(_WORD *)(v31 + 32) = v35;
    }
  }
  else if (v34)
  {
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *(_QWORD *)(v31 + 8) = *((_QWORD *)v32 + 1);
    *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
    *(_QWORD *)(v31 + 24) = *((_QWORD *)v32 + 3);
    *(_BYTE *)(v31 + 32) = *((_BYTE *)v32 + 32);
    *(_BYTE *)(v31 + 33) = *((_BYTE *)v32 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = *v32;
    v38 = v32[1];
    *(_WORD *)(v31 + 32) = *((_WORD *)v32 + 16);
    *(_OWORD *)v31 = v37;
    *(_OWORD *)(v31 + 16) = v38;
  }
  v39 = a3[10];
  v40 = a1 + v39;
  v41 = (__int128 *)(a2 + v39);
  v42 = *(_QWORD *)(a1 + v39 + 16);
  v43 = *(_QWORD *)(a2 + v39 + 16);
  if (v42)
  {
    if (v43)
    {
      *(_BYTE *)v40 = *(_BYTE *)v41;
      *(_QWORD *)(v40 + 8) = *((_QWORD *)v41 + 1);
      *(_QWORD *)(v40 + 16) = *((_QWORD *)v41 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v40 + 24) = *((_DWORD *)v41 + 6);
      *(_DWORD *)(v40 + 28) = *((_DWORD *)v41 + 7);
      *(_QWORD *)(v40 + 32) = *((_QWORD *)v41 + 4);
      *(_QWORD *)(v40 + 40) = *((_QWORD *)v41 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v40);
      v45 = v41[1];
      v44 = v41[2];
      *(_OWORD *)v40 = *v41;
      *(_OWORD *)(v40 + 16) = v45;
      *(_OWORD *)(v40 + 32) = v44;
    }
  }
  else if (v43)
  {
    *(_BYTE *)v40 = *(_BYTE *)v41;
    *(_QWORD *)(v40 + 8) = *((_QWORD *)v41 + 1);
    *(_QWORD *)(v40 + 16) = *((_QWORD *)v41 + 2);
    *(_DWORD *)(v40 + 24) = *((_DWORD *)v41 + 6);
    *(_DWORD *)(v40 + 28) = *((_DWORD *)v41 + 7);
    *(_QWORD *)(v40 + 32) = *((_QWORD *)v41 + 4);
    *(_QWORD *)(v40 + 40) = *((_QWORD *)v41 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v46 = *v41;
    v47 = v41[2];
    *(_OWORD *)(v40 + 16) = v41[1];
    *(_OWORD *)(v40 + 32) = v47;
    *(_OWORD *)v40 = v46;
  }
  v48 = a3[11];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a3[12];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_QWORD *)v52 = *(_QWORD *)(a2 + v51);
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v52 + 16) = *(_BYTE *)(v53 + 16);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1DC5006BC(uint64_t a1)
{
  destroy for NewsArticleData();
  return a1;
}

uint64_t initializeWithTake for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_DWORD *)(v15 + 64) = *(_DWORD *)(v16 + 64);
  v17 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v17;
  v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  v23 = a1 + v20;
  v24 = a2 + v20;
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_WORD *)(v23 + 32) = *(_WORD *)(v24 + 32);
  v26 = a3[10];
  v27 = a3[11];
  v28 = (_OWORD *)(a1 + v26);
  v29 = (_OWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v28[2] = v29[2];
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v31 = a3[12];
  v32 = a3[13];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  return a1;
}

uint64_t assignWithTake for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  if (*(_QWORD *)(a1 + v15 + 8))
  {
    v18 = *(_QWORD *)(v17 + 8);
    if (v18)
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = v18;
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v17 + 24);
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      *(_QWORD *)(v16 + 24) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
      *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
      *(_BYTE *)(v16 + 48) = *(_BYTE *)(v17 + 48);
      *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
      *(_BYTE *)(v16 + 64) = *(_BYTE *)(v17 + 64);
      *(_BYTE *)(v16 + 65) = *(_BYTE *)(v17 + 65);
      *(_BYTE *)(v16 + 66) = *(_BYTE *)(v17 + 66);
      *(_BYTE *)(v16 + 67) = *(_BYTE *)(v17 + 67);
      goto LABEL_6;
    }
    sub_1DC5006BC(v16);
  }
  v20 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v20;
  *(_DWORD *)(v16 + 64) = *(_DWORD *)(v17 + 64);
  v21 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v21;
LABEL_6:
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = v26;
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  if (*(_QWORD *)(a1 + v27 + 8))
  {
    v30 = *(_QWORD *)(v29 + 8);
    if (v30)
    {
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *(_QWORD *)(v28 + 8) = v30;
      swift_bridgeObjectRelease();
      v31 = *(_QWORD *)(v29 + 24);
      *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
      *(_QWORD *)(v28 + 24) = v31;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v28 + 32) = *(_BYTE *)(v29 + 32);
      *(_BYTE *)(v28 + 33) = *(_BYTE *)(v29 + 33);
      goto LABEL_11;
    }
    sub_1DC4DAE38(v28);
  }
  v32 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v32;
  *(_WORD *)(v28 + 32) = *(_WORD *)(v29 + 32);
LABEL_11:
  v33 = a3[10];
  v34 = a1 + v33;
  v35 = a2 + v33;
  if (!*(_QWORD *)(a1 + v33 + 16))
  {
LABEL_15:
    v38 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v38;
    *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
    goto LABEL_16;
  }
  v36 = *(_QWORD *)(v35 + 16);
  if (!v36)
  {
    sub_1DC4CDAF4(v34);
    goto LABEL_15;
  }
  *(_BYTE *)v34 = *(_BYTE *)v35;
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  *(_QWORD *)(v34 + 16) = v36;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v34 + 24) = *(_QWORD *)(v35 + 24);
  v37 = *(_QWORD *)(v35 + 40);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 40) = v37;
  swift_bridgeObjectRelease();
LABEL_16:
  v39 = a3[11];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (uint64_t *)(a2 + v39);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v44 = a3[12];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a2 + v44 + 8);
  *(_QWORD *)v45 = *(_QWORD *)(a2 + v44);
  *(_QWORD *)(v45 + 8) = v47;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC500AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC500B6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC500C14()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StartMethod(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DC500DC4 + 4 * byte_1DC6314AF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DC500DF8 + 4 * byte_1DC6314AA[v4]))();
}

uint64_t sub_1DC500DF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC500E00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC500E08);
  return result;
}

uint64_t sub_1DC500E14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC500E1CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DC500E20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC500E28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallExposureEvent.Model.CodingKeys()
{
  return &type metadata for PaywallExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC500E48()
{
  unint64_t result;

  result = qword_1F036AA80;
  if (!qword_1F036AA80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63175C, &type metadata for PaywallExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AA80);
  }
  return result;
}

unint64_t sub_1DC500E90()
{
  unint64_t result;

  result = qword_1F036AA88;
  if (!qword_1F036AA88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6316CC, &type metadata for PaywallExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AA88);
  }
  return result;
}

unint64_t sub_1DC500ED8()
{
  unint64_t result;

  result = qword_1F036AA90;
  if (!qword_1F036AA90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6316F4, &type metadata for PaywallExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AA90);
  }
  return result;
}

uint64_t sub_1DC500F1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C5D0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t DynamicEndpoint.__allocating_init(appConfigurationManager:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1DC4C0AB0(a1, v2 + 16);
  return v2;
}

uint64_t DynamicEndpoint.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t DynamicEndpoint.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t DynamicEndpoint.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v17 = a1;
  v2 = sub_1DC62A3B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62A410();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC50165C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1DC62A464();
  sub_1DC62A32C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1DC62A3EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1DC62A134();
  swift_bridgeObjectRelease();
  v13 = sub_1DC62A140();
  v14 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v12, v13);
  __break(1u);
  return result;
}

void sub_1DC50165C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E558)
  {
    sub_1DC62A140();
    v0 = sub_1DC62B25C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E558);
  }
}

uint64_t DynamicEndpoint.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1DC62A3B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62A410();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1DC62A464();
  sub_1DC62A32C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v9 = sub_1DC62A404();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t DynamicEndpoint.sharedContainerIdentifier.getter()
{
  uint64_t v0;

  sub_1DC62A524();
  sub_1DC62A518();
  v0 = sub_1DC62A50C();
  swift_release();
  return v0;
}

uint64_t method lookup function for DynamicEndpoint()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DynamicEndpoint.__allocating_init(appConfigurationManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void WatchlistSummaryItemData.watchlistType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *WatchlistSummaryItemData.watchlistType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*WatchlistSummaryItemData.watchlistType.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistSummaryItemData.symbols.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WatchlistSummaryItemData.symbols.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WatchlistSummaryItemData.symbols.modify())()
{
  return nullsub_1;
}

StocksAnalytics::WatchlistSummaryItemData __swiftcall WatchlistSummaryItemData.init(watchlistType:symbols:)(StocksAnalytics::WatchlistType watchlistType, Swift::OpaquePointer symbols)
{
  uint64_t v2;
  StocksAnalytics::WatchlistSummaryItemData result;

  *(_BYTE *)v2 = *(_BYTE *)watchlistType;
  *(Swift::OpaquePointer *)(v2 + 8) = symbols;
  result.symbols = symbols;
  result.watchlistType = watchlistType;
  return result;
}

uint64_t sub_1DC501918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC501CB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC50193C()
{
  sub_1DC4B7130();
  return sub_1DC62B604();
}

uint64_t sub_1DC501964()
{
  sub_1DC4B7130();
  return sub_1DC62B610();
}

uint64_t WatchlistSummaryItemData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  _QWORD v13[2];
  char v14;
  char v15;
  char v16;

  sub_1DC4B70D4(0, &qword_1EDB11980, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B7130();
  sub_1DC62B5E0();
  if (!v2)
  {
    v15 = 0;
    sub_1DC501B34();
    sub_1DC62B454();
    v10 = v16;
    sub_1DC4B72F4();
    v14 = 1;
    sub_1DC4B7298(&qword_1EDB11898, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v13[1];
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1DC501B34()
{
  unint64_t result;

  result = qword_1EDB0F148;
  if (!qword_1EDB0F148)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistType, &type metadata for WatchlistType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F148);
  }
  return result;
}

unint64_t sub_1DC501B7C()
{
  unint64_t result;

  result = qword_1EDB10DB0;
  if (!qword_1EDB10DB0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WatchlistSummaryItemData, &type metadata for WatchlistSummaryItemData);
    atomic_store(result, (unint64_t *)&qword_1EDB10DB0);
  }
  return result;
}

uint64_t sub_1DC501BC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WatchlistSummaryItemData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for WatchlistSummaryItemData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WatchlistSummaryItemData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WatchlistSummaryItemData()
{
  return &type metadata for WatchlistSummaryItemData;
}

ValueMetadata *type metadata accessor for WatchlistSummaryItemData.CodingKeys()
{
  return &type metadata for WatchlistSummaryItemData.CodingKeys;
}

unint64_t sub_1DC501C74()
{
  unint64_t result;

  result = qword_1F036AA98;
  if (!qword_1F036AA98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631984, &type metadata for WatchlistSummaryItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AA98);
  }
  return result;
}

uint64_t sub_1DC501CB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73696C6863746177 && a2 == 0xED00006570795474;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6F626D7973 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC501DCC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036AAA0, MEMORY[0x1E0CF8078]);
}

uint64_t static NoStoriesAvailableEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036AAA0, a1);
}

uint64_t sub_1DC501E0C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036AAB8, MEMORY[0x1E0CF8380]);
}

uint64_t static NoStoriesAvailableEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F78, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036AAB8, a1);
}

uint64_t NoStoriesAvailableEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NoStoriesAvailableEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NoStoriesAvailableEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NoStoriesAvailableEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NoStoriesAvailableEvent(0) + 20);
  sub_1DC501EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NoStoriesAvailableEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036AB40);
}

void sub_1DC501EFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E848)
  {
    sub_1DC4BEF94();
    sub_1DC4BEFD8();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E848);
  }
}

uint64_t NoStoriesAvailableEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NoStoriesAvailableEvent(0) + 20);
  sub_1DC501EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NoStoriesAvailableEvent.feedData.modify())()
{
  type metadata accessor for NoStoriesAvailableEvent(0);
  return nullsub_1;
}

uint64_t NoStoriesAvailableEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for NoStoriesAvailableEvent(0) + 20);
  sub_1DC501EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t NoStoriesAvailableEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NoStoriesAvailableEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for NoStoriesAvailableEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NoStoriesAvailableEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036ABD0);
}

uint64_t NoStoriesAvailableEvent.Model.init(eventData:feedData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  v8 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a3, a1, v8);
  result = type metadata accessor for NoStoriesAvailableEvent.Model(0);
  v10 = a3 + *(int *)(result + 20);
  *(_BYTE *)v10 = v5;
  *(_QWORD *)(v10 + 8) = v6;
  *(_QWORD *)(v10 + 16) = v7;
  return result;
}

uint64_t sub_1DC502110()
{
  _BYTE *v0;

  if (*v0)
    return 0x6174614464656566;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC502150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC503234(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC502174()
{
  sub_1DC502338();
  return sub_1DC62B604();
}

uint64_t sub_1DC50219C()
{
  sub_1DC502338();
  return sub_1DC62B610();
}

uint64_t NoStoriesAvailableEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[8];
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  sub_1DC502610(0, &qword_1F036AAD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC502338();
  sub_1DC62B5F8();
  v16 = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (char *)(v3 + *(int *)(type metadata accessor for NoStoriesAvailableEvent.Model(0) + 20));
    v11 = *v10;
    v13 = *((_QWORD *)v10 + 1);
    v12 = *((_QWORD *)v10 + 2);
    v16 = v11;
    v17 = v13;
    v18 = v12;
    v15[7] = 1;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC502338()
{
  unint64_t result;

  result = qword_1F036AAD8;
  if (!qword_1F036AAD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631BBC, &type metadata for NoStoriesAvailableEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AAD8);
  }
  return result;
}

uint64_t NoStoriesAvailableEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v23 = a2;
  v27 = sub_1DC62ABA8();
  v24 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC502610(0, &qword_1F036AAE0, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for NoStoriesAvailableEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC502338();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = a1;
  v22 = v6;
  v12 = (uint64_t)v11;
  v13 = v24;
  v28 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v25;
  v14 = v26;
  v16 = v27;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v31 = 1;
  sub_1DC4BEF94();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v14);
  v17 = v29;
  v18 = v30;
  v19 = v12 + *(int *)(v9 + 20);
  *(_BYTE *)v19 = v28;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = v18;
  sub_1DC50266C(v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_1DC5026B0(v12);
}

void sub_1DC502610(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC502338();
    v7 = a3(a1, &type metadata for NoStoriesAvailableEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC50266C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NoStoriesAvailableEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5026B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NoStoriesAvailableEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5026EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NoStoriesAvailableEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC502700(_QWORD *a1)
{
  return NoStoriesAvailableEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC502714@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036AAA0, a1);
}

uint64_t sub_1DC502738@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F78, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036AAB8, a1);
}

uint64_t sub_1DC50275C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC501EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for NoStoriesAvailableEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC501EFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC501EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC501EFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC501EFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC501EFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC501EFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoStoriesAvailableEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC502AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC501EFC();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NoStoriesAvailableEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC502B54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC501EFC();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC502BD0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC501EFC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NoStoriesAvailableEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *v9 = *v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NoStoriesAvailableEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoStoriesAvailableEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC502F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NoStoriesAvailableEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC502FA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC503020()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NoStoriesAvailableEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5030DC + 4 * byte_1DC631A05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC503110 + 4 * byte_1DC631A00[v4]))();
}

uint64_t sub_1DC503110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC503118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC503120);
  return result;
}

uint64_t sub_1DC50312C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC503134);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC503138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC503140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NoStoriesAvailableEvent.Model.CodingKeys()
{
  return &type metadata for NoStoriesAvailableEvent.Model.CodingKeys;
}

unint64_t sub_1DC503160()
{
  unint64_t result;

  result = qword_1F036AC08;
  if (!qword_1F036AC08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631B94, &type metadata for NoStoriesAvailableEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AC08);
  }
  return result;
}

unint64_t sub_1DC5031A8()
{
  unint64_t result;

  result = qword_1F036AC10;
  if (!qword_1F036AC10)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631B04, &type metadata for NoStoriesAvailableEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AC10);
  }
  return result;
}

unint64_t sub_1DC5031F0()
{
  unint64_t result;

  result = qword_1F036AC18;
  if (!qword_1F036AC18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631B2C, &type metadata for NoStoriesAvailableEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AC18);
  }
  return result;
}

uint64_t sub_1DC503234(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

StocksAnalytics::SubscribeButtonTargetType_optional __swiftcall SubscribeButtonTargetType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::SubscribeButtonTargetType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscribeButtonTargetType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5033B8 + 4 * byte_1DC631C10[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5033B8()
{
  return 0x6573616863727570;
}

uint64_t sub_1DC5033DC()
{
  return 0x50676E69646E616CLL;
}

uint64_t sub_1DC5033FC()
{
  return 1802398060;
}

uint64_t sub_1DC50340C()
{
  return 0x65676150706D61;
}

void sub_1DC503420(char *a1)
{
  sub_1DC5428CC(*a1);
}

unint64_t sub_1DC503430()
{
  unint64_t result;

  result = qword_1F036AC20;
  if (!qword_1F036AC20)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonTargetType, &type metadata for SubscribeButtonTargetType);
    atomic_store(result, (unint64_t *)&qword_1F036AC20);
  }
  return result;
}

void sub_1DC503474()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5034C0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC503550()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC50358C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC503608()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC503650()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::SubscribeButtonTargetType_optional sub_1DC5036E0(Swift::String *a1)
{
  return SubscribeButtonTargetType.init(rawValue:)(*a1);
}

uint64_t sub_1DC5036EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC50371C + 4 * byte_1DC631C24[*v0]))();
}

void sub_1DC50371C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "purchaseSheet");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1DC503744(_QWORD *a1@<X8>)
{
  *a1 = 0x50676E69646E616CLL;
  a1[1] = 0xEB00000000656761;
}

void sub_1DC503768(_QWORD *a1@<X8>)
{
  *a1 = 1802398060;
  a1[1] = 0xE400000000000000;
}

void sub_1DC50377C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x65676150706D61;
  a1[1] = v1;
}

uint64_t sub_1DC503794()
{
  sub_1DC503908();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5037F0()
{
  sub_1DC503908();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTargetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC503888 + 4 * byte_1DC631C2E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5038BC + 4 * byte_1DC631C29[v4]))();
}

uint64_t sub_1DC5038BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5038C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5038CCLL);
  return result;
}

uint64_t sub_1DC5038D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5038E0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5038E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5038EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonTargetType()
{
  return &type metadata for SubscribeButtonTargetType;
}

unint64_t sub_1DC503908()
{
  unint64_t result;

  result = qword_1F036AC28;
  if (!qword_1F036AC28)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonTargetType, &type metadata for SubscribeButtonTargetType);
    atomic_store(result, (unint64_t *)&qword_1F036AC28);
  }
  return result;
}

uint64_t NonNewsArticleData.publicationName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NonNewsArticleData.publicationName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NonNewsArticleData.publicationName.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleData.articleSource.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NonNewsArticleData.articleSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*NonNewsArticleData.articleSource.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleData.articleURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NonNewsArticleData.articleURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*NonNewsArticleData.articleURL.modify())()
{
  return nullsub_1;
}

void __swiftcall NonNewsArticleData.init(publicationName:articleSource:articleURL:)(StocksAnalytics::NonNewsArticleData *__return_ptr retstr, Swift::String publicationName, Swift::String articleSource, Swift::String articleURL)
{
  retstr->publicationName = publicationName;
  retstr->articleSource = articleSource;
  retstr->articleURL = articleURL;
}

uint64_t sub_1DC503AAC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x53656C6369747261;
  if (*v0 != 1)
    v1 = 0x55656C6369747261;
  if (*v0)
    return v1;
  else
    return 0x746163696C627570;
}

uint64_t sub_1DC503B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC504464(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC503B48()
{
  sub_1DC503D08();
  return sub_1DC62B604();
}

uint64_t sub_1DC503B70()
{
  sub_1DC503D08();
  return sub_1DC62B610();
}

uint64_t NonNewsArticleData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1DC503F90(0, &qword_1F036AC30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC503D08();
  sub_1DC62B5F8();
  v15 = 0;
  v10 = v12[5];
  sub_1DC62B4B4();
  if (!v10)
  {
    v14 = 1;
    sub_1DC62B4B4();
    v13 = 2;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC503D08()
{
  unint64_t result;

  result = qword_1F036AC38;
  if (!qword_1F036AC38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631EE8, &type metadata for NonNewsArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AC38);
  }
  return result;
}

uint64_t NonNewsArticleData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1DC503F90(0, &qword_1F036AC40, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC503D08();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1DC62B424();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_1DC62B424();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC503F90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC503D08();
    v7 = a3(a1, &type metadata for NonNewsArticleData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC503FF0()
{
  unint64_t result;

  result = qword_1F036AC48;
  if (!qword_1F036AC48)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for NonNewsArticleData, &type metadata for NonNewsArticleData);
    atomic_store(result, (unint64_t *)&qword_1F036AC48);
  }
  return result;
}

unint64_t sub_1DC504038()
{
  unint64_t result;

  result = qword_1F036AC50;
  if (!qword_1F036AC50)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for NonNewsArticleData, &type metadata for NonNewsArticleData);
    atomic_store(result, (unint64_t *)&qword_1F036AC50);
  }
  return result;
}

uint64_t sub_1DC50407C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return NonNewsArticleData.init(from:)(a1, a2);
}

uint64_t sub_1DC504090(_QWORD *a1)
{
  return NonNewsArticleData.encode(to:)(a1);
}

uint64_t destroy for NonNewsArticleData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for NonNewsArticleData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for NonNewsArticleData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for NonNewsArticleData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleData()
{
  return &type metadata for NonNewsArticleData;
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC50430C + 4 * byte_1DC631D65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC504340 + 4 * byte_1DC631D60[v4]))();
}

uint64_t sub_1DC504340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC504348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC504350);
  return result;
}

uint64_t sub_1DC50435C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC504364);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC504368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC504370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleData.CodingKeys()
{
  return &type metadata for NonNewsArticleData.CodingKeys;
}

unint64_t sub_1DC504390()
{
  unint64_t result;

  result = qword_1F036AC58;
  if (!qword_1F036AC58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631EC0, &type metadata for NonNewsArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AC58);
  }
  return result;
}

unint64_t sub_1DC5043D8()
{
  unint64_t result;

  result = qword_1F036AC60;
  if (!qword_1F036AC60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631E30, &type metadata for NonNewsArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AC60);
  }
  return result;
}

unint64_t sub_1DC504420()
{
  unint64_t result;

  result = qword_1F036AC68;
  if (!qword_1F036AC68)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC631E58, &type metadata for NonNewsArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AC68);
  }
  return result;
}

uint64_t sub_1DC504464(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746163696C627570 && a2 == 0xEF656D614E6E6F69;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53656C6369747261 && a2 == 0xED0000656372756FLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x55656C6369747261 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DC50460C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036AC70, MEMORY[0x1E0CF8078]);
}

uint64_t static SaveEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F80, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036AC70, a1);
}

uint64_t sub_1DC50464C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036AC88, MEMORY[0x1E0CF8380]);
}

uint64_t static SaveEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F88, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036AC88, a1);
}

uint64_t SaveEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SaveEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SaveEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SaveEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB123A8);
}

uint64_t SaveEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SaveEvent.newsArticleData.modify())()
{
  type metadata accessor for SaveEvent(0);
  return nullsub_1;
}

uint64_t SaveEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SaveEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SaveEvent.actionData.modify())()
{
  type metadata accessor for SaveEvent(0);
  return nullsub_1;
}

uint64_t SaveEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SaveEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SaveEvent.groupData.modify())()
{
  type metadata accessor for SaveEvent(0);
  return nullsub_1;
}

uint64_t SaveEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SaveEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SaveEvent.feedData.modify())()
{
  type metadata accessor for SaveEvent(0);
  return nullsub_1;
}

uint64_t SaveEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SaveEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SaveEvent.viewData.modify())()
{
  type metadata accessor for SaveEvent(0);
  return nullsub_1;
}

uint64_t SaveEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SaveEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SaveEvent.userArticleContextData.modify())()
{
  type metadata accessor for SaveEvent(0);
  return nullsub_1;
}

uint64_t SaveEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SaveEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SaveEvent.issueData.modify())()
{
  type metadata accessor for SaveEvent(0);
  return nullsub_1;
}

uint64_t SaveEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SaveEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SaveEvent.channelData.modify())()
{
  type metadata accessor for SaveEvent(0);
  return nullsub_1;
}

uint64_t SaveEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SaveEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
}

uint64_t SaveEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SaveEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SaveEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12458);
}

uint64_t SaveEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SaveEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SaveEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t SaveEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SaveEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t SaveEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SaveEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t SaveEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SaveEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 SaveEvent.Model.init(eventData:newsArticleData:actionData:groupData:feedData:viewData:userArticleContextData:issueData:channelData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, __int16 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __n128 *a10)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 *v27;
  __n128 result;
  char v29;
  char v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;

  v31 = *a2;
  v12 = *((_QWORD *)a2 + 2);
  v13 = *((_QWORD *)a2 + 3);
  v14 = *((_BYTE *)a2 + 32);
  v15 = *((_QWORD *)a2 + 5);
  v16 = *((_BYTE *)a2 + 48);
  v17 = *((_QWORD *)a2 + 7);
  v18 = *((_BYTE *)a2 + 64);
  v19 = *((_BYTE *)a2 + 65);
  v29 = *((_BYTE *)a2 + 67);
  v30 = *((_BYTE *)a2 + 66);
  v32 = *a3;
  v35 = a4[1];
  v36 = *a4;
  v33 = *((_QWORD *)a4 + 5);
  v34 = *((_QWORD *)a4 + 4);
  v38 = *a5;
  v37 = *((_QWORD *)a5 + 2);
  v40 = a6[1];
  v41 = *a6;
  v39 = *((_WORD *)a6 + 8);
  v42 = *a7;
  v43 = a8[1];
  v44 = *a8;
  v49 = *a10;
  v47 = a10[1].n128_u64[1];
  v48 = a10[1].n128_u64[0];
  v45 = a10[2].n128_u8[1];
  v46 = a10[2].n128_u8[0];
  v20 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)type metadata accessor for SaveEvent.Model(0);
  v22 = a9 + v21[5];
  *(_OWORD *)v22 = v31;
  *(_QWORD *)(v22 + 16) = v12;
  *(_QWORD *)(v22 + 24) = v13;
  *(_BYTE *)(v22 + 32) = v14;
  *(_QWORD *)(v22 + 40) = v15;
  *(_BYTE *)(v22 + 48) = v16;
  *(_QWORD *)(v22 + 56) = v17;
  *(_BYTE *)(v22 + 64) = v18;
  *(_BYTE *)(v22 + 65) = v19;
  *(_BYTE *)(v22 + 66) = v30;
  *(_BYTE *)(v22 + 67) = v29;
  *(_BYTE *)(a9 + v21[6]) = v32;
  v23 = a9 + v21[7];
  *(_OWORD *)v23 = v36;
  *(_OWORD *)(v23 + 16) = v35;
  *(_QWORD *)(v23 + 32) = v34;
  *(_QWORD *)(v23 + 40) = v33;
  v24 = a9 + v21[8];
  *(_OWORD *)v24 = v38;
  *(_QWORD *)(v24 + 16) = v37;
  v25 = a9 + v21[9];
  *(_QWORD *)v25 = v41;
  *(_QWORD *)(v25 + 8) = v40;
  *(_WORD *)(v25 + 16) = v39;
  *(_WORD *)(a9 + v21[10]) = v42;
  v26 = (_QWORD *)(a9 + v21[11]);
  *v26 = v44;
  v26[1] = v43;
  v27 = (__n128 *)(a9 + v21[12]);
  result = v49;
  *v27 = v49;
  v27[1].n128_u64[0] = v48;
  v27[1].n128_u64[1] = v47;
  v27[2].n128_u8[0] = v46;
  v27[2].n128_u8[1] = v45;
  return result;
}

uint64_t sub_1DC5055AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5055E4 + 4 * byte_1DC631F38[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5055E4()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC505608()
{
  return 0x61446E6F69746361;
}

uint64_t sub_1DC505624()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC505638()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC505660()
{
  return 0xD000000000000016;
}

uint64_t sub_1DC50567C()
{
  return 0x7461446575737369;
}

uint64_t sub_1DC505690()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC5056B0()
{
  unsigned __int8 *v0;

  return sub_1DC5055AC(*v0);
}

uint64_t sub_1DC5056B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC508A7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5056DC()
{
  sub_1DC505B00();
  return sub_1DC62B604();
}

uint64_t sub_1DC505704()
{
  sub_1DC505B00();
  return sub_1DC62B610();
}

uint64_t SaveEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  __int128 *v26;
  __int16 v27;
  __int128 *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v3 = v1;
  sub_1DC5061A8(0, &qword_1F036ACA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC505B00();
  sub_1DC62B5F8();
  LOBYTE(v36) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SaveEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v36 = v12;
    *(_QWORD *)&v37 = v13;
    *((_QWORD *)&v37 + 1) = v14;
    LOBYTE(v38) = v15;
    *((_QWORD *)&v38 + 1) = v16;
    v39 = v17;
    v40 = v18;
    v41 = v19;
    v42 = v20;
    v43 = v21;
    v44 = (char)v11;
    v35 = 1;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    LOBYTE(v36) = *(_BYTE *)(v3 + v10[6]);
    v35 = 2;
    sub_1DC4CECE4();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[7]);
    v23 = v22[1];
    v36 = *v22;
    v37 = v23;
    v38 = v22[2];
    v35 = 3;
    sub_1DC4C9004();
    sub_1DC62B490();
    v24 = (__int128 *)(v3 + v10[8]);
    v25 = *((_QWORD *)v24 + 2);
    v36 = *v24;
    *(_QWORD *)&v37 = v25;
    v35 = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v26 = (__int128 *)(v3 + v10[9]);
    v27 = *((_WORD *)v26 + 8);
    v36 = *v26;
    LOWORD(v37) = v27;
    v35 = 5;
    sub_1DC4BEDF0();
    sub_1DC62B490();
    LOWORD(v36) = *(_WORD *)(v3 + v10[10]);
    v35 = 6;
    sub_1DC4F4A98();
    sub_1DC62B4E4();
    v36 = *(_OWORD *)(v3 + v10[11]);
    v35 = 7;
    sub_1DC4C9674();
    sub_1DC62B490();
    v28 = (__int128 *)(v3 + v10[12]);
    v29 = *v28;
    v30 = *((_QWORD *)v28 + 2);
    v31 = *((_QWORD *)v28 + 3);
    v32 = *((_BYTE *)v28 + 32);
    LOBYTE(v28) = *((_BYTE *)v28 + 33);
    v36 = v29;
    *(_QWORD *)&v37 = v30;
    *((_QWORD *)&v37 + 1) = v31;
    LOBYTE(v38) = v32;
    BYTE1(v38) = (_BYTE)v28;
    v35 = 8;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC505B00()
{
  unint64_t result;

  result = qword_1F036ACA8;
  if (!qword_1F036ACA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6321FC, &type metadata for SaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036ACA8);
  }
  return result;
}

uint64_t SaveEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  int *v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  __int16 v33;
  char *v34;
  __int128 v35;
  char v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v41 = a2;
  v4 = sub_1DC62ABA8();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5061A8(0, &qword_1F036ACB0, MEMORY[0x1E0DED048]);
  v42 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - v9;
  v46 = type metadata accessor for SaveEvent.Model(0);
  MEMORY[0x1E0C80A78](v46);
  v44 = a1;
  v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC505B00();
  v12 = v10;
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v13 = v8;
  LOBYTE(v47) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v14 = v42;
  sub_1DC62B454();
  v15 = v4;
  v16 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v45, v6, v15);
  v56 = 1;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v17 = (uint64_t)v44;
  v18 = v48;
  v19 = v49;
  v20 = *((_QWORD *)&v49 + 1);
  v21 = v50;
  v22 = v51;
  v23 = v52;
  v24 = v53;
  v25 = v54;
  v26 = v55;
  v27 = (int *)v46;
  v28 = &v16[*(int *)(v46 + 20)];
  *(_OWORD *)v28 = v47;
  *((_OWORD *)v28 + 1) = v18;
  v28[32] = v19;
  *((_QWORD *)v28 + 5) = v20;
  v28[48] = v21;
  *((_QWORD *)v28 + 7) = v22;
  v28[64] = v23;
  v28[65] = v24;
  v28[66] = v25;
  v28[67] = v26;
  v56 = 2;
  sub_1DC4CECA0();
  sub_1DC62B454();
  v16[v27[6]] = v47;
  v56 = 3;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v29 = &v16[v27[7]];
  v30 = v48;
  *(_OWORD *)v29 = v47;
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v49;
  v56 = 4;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v31 = v48;
  v32 = &v16[v27[8]];
  *(_OWORD *)v32 = v47;
  *((_QWORD *)v32 + 2) = v31;
  v56 = 5;
  sub_1DC4BEDAC();
  sub_1DC62B400();
  v33 = v48;
  v34 = &v16[v27[9]];
  *(_OWORD *)v34 = v47;
  *((_WORD *)v34 + 8) = v33;
  v56 = 6;
  sub_1DC4F4A54();
  sub_1DC62B454();
  *(_WORD *)&v16[v27[10]] = v47;
  v56 = 7;
  sub_1DC4C9630();
  sub_1DC62B400();
  *(_OWORD *)&v45[v27[11]] = v47;
  v56 = 8;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v14);
  v35 = v48;
  v36 = v49;
  v37 = BYTE1(v49);
  v38 = (uint64_t)v45;
  v39 = &v45[v27[12]];
  *(_OWORD *)v39 = v47;
  *((_OWORD *)v39 + 1) = v35;
  v39[32] = v36;
  v39[33] = v37;
  sub_1DC506204(v38, v41);
  __swift_destroy_boxed_opaque_existential_1(v17);
  return sub_1DC506248(v38);
}

void sub_1DC5061A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC505B00();
    v7 = a3(a1, &type metadata for SaveEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC506204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SaveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC506248(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SaveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC506284@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SaveEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC506298(_QWORD *a1)
{
  return SaveEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5062AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F80, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036AC70, a1);
}

uint64_t sub_1DC5062D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F88, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036AC88, a1);
}

uint64_t sub_1DC5062F4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for SaveEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for SaveEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

uint64_t initializeWithCopy for SaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for SaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for SaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for SaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for SaveEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5075C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                  v8 = v20;
                  v12 = *(_QWORD *)(v20 - 8);
                  v13 = a3[12];
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SaveEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC507844(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                  v10 = v22;
                  v14 = *(_QWORD *)(v22 - 8);
                  v15 = a4[12];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC507ABC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SaveEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v10[48] = v11[48];
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v14 = a3[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)((char *)a2 + v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *v15 = *v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      *((_QWORD *)v15 + 2) = v17;
      *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);
      v18 = *((_QWORD *)v16 + 5);
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      *((_QWORD *)v15 + 5) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    }
    v21 = a3[8];
    v22 = a3[9];
    v23 = (char *)a1 + v21;
    v24 = (char *)a2 + v21;
    *v23 = *v24;
    v25 = *((_QWORD *)v24 + 2);
    *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
    *((_QWORD *)v23 + 2) = v25;
    v26 = (char *)a1 + v22;
    v27 = (char *)a2 + v22;
    v28 = *(_QWORD *)v27;
    v29 = *((_QWORD *)v27 + 1);
    *((_WORD *)v26 + 8) = *((_WORD *)v27 + 8);
    v30 = a3[10];
    v31 = a3[11];
    v32 = *(_WORD *)((char *)a2 + v30);
    *(_QWORD *)v26 = v28;
    *((_QWORD *)v26 + 1) = v29;
    *(_WORD *)((char *)a1 + v30) = v32;
    v33 = (_QWORD *)((char *)a1 + v31);
    v34 = *(_QWORD *)((char *)a2 + v31 + 8);
    *v33 = *(_QWORD *)((char *)a2 + v31);
    v33[1] = v34;
    v35 = a3[12];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = *((_QWORD *)v37 + 3);
    *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
    *((_QWORD *)v36 + 3) = v39;
    v36[32] = v37[32];
    v36[33] = v37[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SaveEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(_BYTE *)v14 = *(_BYTE *)v15;
    *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
    *(_QWORD *)(v14 + 16) = v16;
    *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
    v17 = *(_QWORD *)(v15 + 40);
    *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
    *(_QWORD *)(v14 + 40) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  }
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = v23;
  v24 = a1 + v20;
  v25 = (uint64_t *)(a2 + v20);
  v26 = *v25;
  v27 = v25[1];
  *(_WORD *)(v24 + 16) = *((_WORD *)v25 + 8);
  v28 = a3[10];
  v29 = a3[11];
  v30 = *(_WORD *)(a2 + v28);
  *(_QWORD *)v24 = v26;
  *(_QWORD *)(v24 + 8) = v27;
  *(_WORD *)(a1 + v28) = v30;
  v31 = (_QWORD *)(a1 + v29);
  v32 = *(_QWORD *)(a2 + v29 + 8);
  *v31 = *(_QWORD *)(a2 + v29);
  v31[1] = v32;
  v33 = a3[12];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(v35 + 8);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v36;
  v37 = *(_QWORD *)(v35 + 24);
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  *(_QWORD *)(v34 + 24) = v37;
  *(_BYTE *)(v34 + 32) = *(_BYTE *)(v35 + 32);
  *(_BYTE *)(v34 + 33) = *(_BYTE *)(v35 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *(_QWORD *)(a1 + v11 + 16);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
      *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
      *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
      *(_QWORD *)(v12 + 40) = *((_QWORD *)v13 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v12);
      v17 = v13[1];
      v16 = v13[2];
      *(_OWORD *)v12 = *v13;
      *(_OWORD *)(v12 + 16) = v17;
      *(_OWORD *)(v12 + 32) = v16;
    }
  }
  else if (v15)
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
    *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
    *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
    *(_QWORD *)(v12 + 40) = *((_QWORD *)v13 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *v13;
    v19 = v13[2];
    *(_OWORD *)(v12 + 16) = v13[1];
    *(_OWORD *)(v12 + 32) = v19;
    *(_OWORD *)v12 = v18;
  }
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  *(_BYTE *)(v24 + 17) = *(_BYTE *)(v25 + 17);
  v26 = a3[10];
  v27 = (_BYTE *)(a1 + v26);
  v28 = (_BYTE *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  v29 = a3[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[12];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 32) = *(_BYTE *)(v34 + 32);
  *(_BYTE *)(v33 + 33) = *(_BYTE *)(v34 + 33);
  return a1;
}

uint64_t initializeWithTake for SaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_OWORD *)(a1 + v13);
  v16 = (_OWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  v18 = a1 + v14;
  v19 = a2 + v14;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  *(_WORD *)(a1 + v21) = *(_WORD *)(a2 + v21);
  v24 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_WORD *)(v25 + 32) = *(_WORD *)(v26 + 32);
  return a1;
}

uint64_t assignWithTake for SaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  v12 = a3[6];
  v13 = a3[7];
  v14 = *(_BYTE *)(a2 + v12);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  *(_BYTE *)(a1 + v12) = v14;
  v15 = a1 + v13;
  v16 = a2 + v13;
  if (!*(_QWORD *)(a1 + v13 + 16))
    goto LABEL_5;
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
    sub_1DC4CDAF4(a1 + v13);
LABEL_5:
    v19 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v19;
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  v18 = *(_QWORD *)(v16 + 40);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = v24;
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25 + 8);
  *(_QWORD *)v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(v26 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  v29 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[12];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)(v36 + 8);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_QWORD *)(v35 + 8) = v37;
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(v36 + 24);
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
  *(_QWORD *)(v35 + 24) = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 32) = *(_BYTE *)(v36 + 32);
  *(_BYTE *)(v35 + 33) = *(_BYTE *)(v36 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for SaveEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC508718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SaveEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5087A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC508820()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SaveEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1DC508924 + 4 * byte_1DC631F46[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1DC508958 + 4 * byte_1DC631F41[v4]))();
}

uint64_t sub_1DC508958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC508960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC508968);
  return result;
}

uint64_t sub_1DC508974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC50897CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1DC508980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC508988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SaveEvent.Model.CodingKeys()
{
  return &type metadata for SaveEvent.Model.CodingKeys;
}

unint64_t sub_1DC5089A8()
{
  unint64_t result;

  result = qword_1F036ACB8;
  if (!qword_1F036ACB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6321D4, &type metadata for SaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036ACB8);
  }
  return result;
}

unint64_t sub_1DC5089F0()
{
  unint64_t result;

  result = qword_1F036ACC0;
  if (!qword_1F036ACC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632144, &type metadata for SaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036ACC0);
  }
  return result;
}

unint64_t sub_1DC508A38()
{
  unint64_t result;

  result = qword_1F036ACC8;
  if (!qword_1F036ACC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63216C, &type metadata for SaveEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036ACC8);
  }
  return result;
}

uint64_t sub_1DC508A7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C4B0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t ViewData.viewSessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ViewData.viewSessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ViewData.viewSessionID.modify())()
{
  return nullsub_1;
}

void ViewData.viewType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *ViewData.viewType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*ViewData.viewType.modify())()
{
  return nullsub_1;
}

void ViewData.viewAction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *ViewData.viewAction.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*ViewData.viewAction.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC508F44()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6570795477656976;
  if (*v0 != 1)
    v1 = 0x6974634177656976;
  if (*v0)
    return v1;
  else
    return 0x7373655377656976;
}

uint64_t sub_1DC508FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC509844(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC508FD4()
{
  sub_1DC5091B0();
  return sub_1DC62B604();
}

uint64_t sub_1DC508FFC()
{
  sub_1DC5091B0();
  return sub_1DC62B610();
}

uint64_t ViewData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  sub_1DC509474(0, &qword_1EDB11B08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - v6;
  v8 = *(unsigned __int8 *)(v1 + 16);
  v16 = *(unsigned __int8 *)(v1 + 17);
  v17 = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1DC5091B0();
  sub_1DC62B5F8();
  v22 = 0;
  sub_1DC62B4B4();
  if (!v2)
  {
    v13 = v16;
    v21 = v17;
    v20 = 1;
    sub_1DC5091F4();
    sub_1DC62B4E4();
    v19 = v13;
    v18 = 2;
    sub_1DC509238();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

unint64_t sub_1DC5091B0()
{
  unint64_t result;

  result = qword_1EDB116E8;
  if (!qword_1EDB116E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6323C0, &type metadata for ViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB116E8);
  }
  return result;
}

unint64_t sub_1DC5091F4()
{
  unint64_t result;

  result = qword_1EDB11708;
  if (!qword_1EDB11708)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewType, &type metadata for ViewType);
    atomic_store(result, (unint64_t *)&qword_1EDB11708);
  }
  return result;
}

unint64_t sub_1DC509238()
{
  unint64_t result;

  result = qword_1EDB0ED28;
  if (!qword_1EDB0ED28)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewAction, &type metadata for ViewAction);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED28);
  }
  return result;
}

uint64_t ViewData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  char v21;

  sub_1DC509474(0, &qword_1EDB119A8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5091B0();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v19 = 1;
  sub_1DC5094D0();
  swift_bridgeObjectRetain();
  sub_1DC62B454();
  v16 = v20;
  v17 = 2;
  sub_1DC509514();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v18;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 17) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC509474(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5091B0();
    v7 = a3(a1, &type metadata for ViewData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5094D0()
{
  unint64_t result;

  result = qword_1EDB11718;
  if (!qword_1EDB11718)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewType, &type metadata for ViewType);
    atomic_store(result, (unint64_t *)&qword_1EDB11718);
  }
  return result;
}

unint64_t sub_1DC509514()
{
  unint64_t result;

  result = qword_1EDB0ED38;
  if (!qword_1EDB0ED38)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewAction, &type metadata for ViewAction);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED38);
  }
  return result;
}

uint64_t sub_1DC509558@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewData.init(from:)(a1, a2);
}

uint64_t sub_1DC50956C(_QWORD *a1)
{
  return ViewData.encode(to:)(a1);
}

uint64_t assignWithCopy for ViewData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for ViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ViewData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5096EC + 4 * byte_1DC632251[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC509720 + 4 * byte_1DC63224C[v4]))();
}

uint64_t sub_1DC509720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC509728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC509730);
  return result;
}

uint64_t sub_1DC50973C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC509744);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC509748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC509750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewData.CodingKeys()
{
  return &type metadata for ViewData.CodingKeys;
}

unint64_t sub_1DC509770()
{
  unint64_t result;

  result = qword_1F036ACD0;
  if (!qword_1F036ACD0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632398, &type metadata for ViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036ACD0);
  }
  return result;
}

unint64_t sub_1DC5097B8()
{
  unint64_t result;

  result = qword_1EDB116F8;
  if (!qword_1EDB116F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632308, &type metadata for ViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB116F8);
  }
  return result;
}

unint64_t sub_1DC509800()
{
  unint64_t result;

  result = qword_1EDB116F0;
  if (!qword_1EDB116F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632330, &type metadata for ViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB116F0);
  }
  return result;
}

uint64_t sub_1DC509844(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7373655377656976 && a2 == 0xED000044496E6F69;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634177656976 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DC5099C8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036ACD8, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioEngageEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036ACD8, a1);
}

uint64_t sub_1DC509A08(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036ACF0, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioEngageEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368F98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036ACF0, a1);
}

uint64_t AudioEngageEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AudioEngageEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioEngageEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for AudioEngageEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for AudioEngageEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036AD90);
}

uint64_t AudioEngageEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.timedData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.newsArticleData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.channelData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.groupData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.feedData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.trackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.trackData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.audioEngagementData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.viewData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.articleScienceData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.issueData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.playbackData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.audioEngagementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 64);
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC50A54C()
{
  unint64_t result;

  result = qword_1F036AD10;
  if (!qword_1F036AD10)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementOriginationData, &type metadata for AudioEngagementOriginationData);
    atomic_store(result, (unint64_t *)&qword_1F036AD10);
  }
  return result;
}

unint64_t sub_1DC50A590()
{
  unint64_t result;

  result = qword_1F036AD18;
  if (!qword_1F036AD18)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementOriginationData, &type metadata for AudioEngagementOriginationData);
    atomic_store(result, (unint64_t *)&qword_1F036AD18);
  }
  return result;
}

uint64_t AudioEngageEvent.audioEngagementOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 64);
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.audioEngagementOriginationData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 68);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngageEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 68);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.activeWatchlistData.modify())()
{
  type metadata accessor for AudioEngageEvent(0);
  return nullsub_1;
}

uint64_t AudioEngageEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioEngageEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v12, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v12, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v12, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v2, v29);
  v30 = a1 + v4[17];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v12, v31);
}

uint64_t AudioEngageEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioEngageEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for AudioEngageEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for AudioEngageEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036AE50);
}

uint64_t AudioEngageEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t AudioEngageEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 36);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AudioEngageEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngageEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 44);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 20);
  v7 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 48));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 52);
  v4 = *(_OWORD *)(v3 + 144);
  v5 = *(_OWORD *)(v3 + 176);
  v31 = *(_OWORD *)(v3 + 160);
  v32 = v5;
  v6 = *(_OWORD *)(v3 + 80);
  v7 = *(_OWORD *)(v3 + 112);
  v27 = *(_OWORD *)(v3 + 96);
  v8 = v27;
  v28 = v7;
  v9 = *(_OWORD *)(v3 + 112);
  v10 = *(_OWORD *)(v3 + 144);
  v29 = *(_OWORD *)(v3 + 128);
  v11 = v29;
  v30 = v10;
  v12 = *(_OWORD *)(v3 + 48);
  v13 = *(_OWORD *)(v3 + 80);
  v25 = *(_OWORD *)(v3 + 64);
  v14 = v25;
  v26 = v13;
  v15 = *(_OWORD *)(v3 + 16);
  v16 = *(_OWORD *)(v3 + 48);
  v23 = *(_OWORD *)(v3 + 32);
  v17 = v23;
  v24 = v16;
  v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  v19 = v22[0];
  v22[1] = v18;
  v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v6;
  v33 = *(_QWORD *)(v3 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v15;
  return sub_1DC4F537C((uint64_t)v22);
}

uint64_t AudioEngageEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 56));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

float AudioEngageEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  uint64_t v1;
  float result;

  result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 60));
  *a1 = result;
  return result;
}

uint64_t AudioEngageEvent.Model.audioEngagementOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AudioEngageEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t AudioEngageEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AudioEngageEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 68));
  return result;
}

__n128 AudioEngageEvent.Model.init(eventData:timedData:newsArticleData:channelData:groupData:feedData:trackData:audioEngagementData:viewData:articleScienceData:issueData:playbackData:audioEngagementOriginationData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, int *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __int128 *a11, uint64_t *a12, int *a13, char *a14, char *a15)
{
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 result;
  _QWORD *v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  char v62;
  int v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  __int128 v71;
  __n128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;

  v49 = *a3;
  v42 = *((_QWORD *)a3 + 3);
  v43 = *((_QWORD *)a3 + 2);
  v41 = *((_BYTE *)a3 + 32);
  v40 = *((_QWORD *)a3 + 5);
  v39 = *((_BYTE *)a3 + 48);
  v48 = *((_QWORD *)a3 + 7);
  v46 = *((_BYTE *)a3 + 65);
  v47 = *((_BYTE *)a3 + 64);
  v44 = *((_BYTE *)a3 + 67);
  v45 = *((_BYTE *)a3 + 66);
  v54 = *a4;
  v52 = *((_QWORD *)a4 + 3);
  v53 = *((_QWORD *)a4 + 2);
  v50 = *((_BYTE *)a4 + 33);
  v51 = *((_BYTE *)a4 + 32);
  v58 = a5[1];
  v59 = *a5;
  v56 = *((_QWORD *)a5 + 5);
  v57 = *((_QWORD *)a5 + 4);
  v61 = *a6;
  v60 = *((_QWORD *)a6 + 2);
  v62 = *((_BYTE *)a7 + 4);
  v63 = *a7;
  v65 = a8[1];
  v66 = *a8;
  v64 = *((_BYTE *)a8 + 16);
  v83 = *((_QWORD *)a11 + 24);
  v17 = *((_DWORD *)a8 + 5);
  v81 = a11[10];
  v82 = a11[11];
  v77 = a11[6];
  v78 = a11[7];
  v79 = a11[8];
  v80 = a11[9];
  v73 = a11[2];
  v74 = a11[3];
  v75 = a11[4];
  v76 = a11[5];
  v71 = *a11;
  v72 = (__n128)a11[1];
  v18 = *a13;
  v20 = a8[3];
  v19 = a8[4];
  v21 = *((_WORD *)a8 + 20);
  v22 = *a10;
  v23 = a10[1];
  v24 = *((_WORD *)a10 + 8);
  v67 = *a12;
  v68 = a12[1];
  v69 = *a14;
  v70 = *a15;
  v25 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  v26 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
  v27 = a9 + v26[5];
  v28 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a2, v28);
  v29 = a9 + v26[6];
  *(_QWORD *)(v29 + 16) = v43;
  *(_QWORD *)(v29 + 24) = v42;
  *(_BYTE *)(v29 + 32) = v41;
  *(_QWORD *)(v29 + 40) = v40;
  *(_BYTE *)(v29 + 48) = v39;
  *(_OWORD *)v29 = v49;
  *(_QWORD *)(v29 + 56) = v48;
  *(_BYTE *)(v29 + 64) = v47;
  *(_BYTE *)(v29 + 65) = v46;
  *(_BYTE *)(v29 + 66) = v45;
  *(_BYTE *)(v29 + 67) = v44;
  v30 = a9 + v26[7];
  *(_OWORD *)v30 = v54;
  *(_QWORD *)(v30 + 16) = v53;
  *(_QWORD *)(v30 + 24) = v52;
  *(_BYTE *)(v30 + 32) = v51;
  *(_BYTE *)(v30 + 33) = v50;
  v31 = a9 + v26[8];
  *(_OWORD *)v31 = v59;
  *(_OWORD *)(v31 + 16) = v58;
  *(_QWORD *)(v31 + 32) = v57;
  *(_QWORD *)(v31 + 40) = v56;
  v32 = a9 + v26[9];
  *(_OWORD *)v32 = v61;
  *(_QWORD *)(v32 + 16) = v60;
  v33 = a9 + v26[10];
  *(_DWORD *)v33 = v63;
  *(_BYTE *)(v33 + 4) = v62;
  v34 = a9 + v26[11];
  *(_QWORD *)v34 = v66;
  *(_QWORD *)(v34 + 8) = v65;
  *(_BYTE *)(v34 + 16) = v64;
  *(_DWORD *)(v34 + 20) = v17;
  *(_QWORD *)(v34 + 24) = v20;
  *(_QWORD *)(v34 + 32) = v19;
  *(_WORD *)(v34 + 40) = v21;
  v35 = a9 + v26[12];
  *(_QWORD *)v35 = v22;
  *(_QWORD *)(v35 + 8) = v23;
  *(_WORD *)(v35 + 16) = v24;
  v36 = a9 + v26[13];
  *(_QWORD *)(v36 + 192) = v83;
  *(_OWORD *)(v36 + 160) = v81;
  *(_OWORD *)(v36 + 176) = v82;
  *(_OWORD *)(v36 + 96) = v77;
  *(_OWORD *)(v36 + 112) = v78;
  *(_OWORD *)(v36 + 128) = v79;
  *(_OWORD *)(v36 + 144) = v80;
  *(_OWORD *)(v36 + 32) = v73;
  *(_OWORD *)(v36 + 48) = v74;
  *(_OWORD *)(v36 + 64) = v75;
  *(_OWORD *)(v36 + 80) = v76;
  result = v72;
  *(_OWORD *)v36 = v71;
  *(__n128 *)(v36 + 16) = v72;
  v38 = (_QWORD *)(a9 + v26[14]);
  *v38 = v67;
  v38[1] = v68;
  *(_DWORD *)(a9 + v26[15]) = v18;
  *(_BYTE *)(a9 + v26[16]) = v69;
  *(_BYTE *)(a9 + v26[17]) = v70;
  return result;
}

uint64_t sub_1DC50B274(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC50B2AC + 4 * byte_1DC632410[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC50B2AC()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC50B2C0()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC50B2E4()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC50B304()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC50B318()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC50B360()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC50B3E8()
{
  unsigned __int8 *v0;

  return sub_1DC50B274(*v0);
}

uint64_t sub_1DC50B3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5103E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC50B414(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1DC50B420()
{
  sub_1DC50BAE4();
  return sub_1DC62B604();
}

uint64_t sub_1DC50B448()
{
  sub_1DC50BAE4();
  return sub_1DC62B610();
}

uint64_t AudioEngageEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 *v27;
  __int128 v28;
  __int128 *v29;
  uint64_t v30;
  int *v31;
  int v32;
  __int128 *v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  __int128 *v39;
  __int16 v40;
  __int128 *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  __int16 v66;

  v3 = v1;
  sub_1DC50C790(0, &qword_1F036AD20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v49 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC50BAE4();
  sub_1DC62B5F8();
  LOBYTE(v51) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
    LOBYTE(v51) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v51 = v12;
    *(_QWORD *)&v52 = v13;
    *((_QWORD *)&v52 + 1) = v14;
    LOBYTE(v53) = v15;
    *((_QWORD *)&v53 + 1) = v16;
    LOBYTE(v54) = v17;
    *((_QWORD *)&v54 + 1) = v18;
    LOBYTE(v55) = v19;
    BYTE1(v55) = v20;
    BYTE2(v55) = v21;
    BYTE3(v55) = (_BYTE)v11;
    LOBYTE(v65) = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[7]);
    v23 = *v22;
    v24 = *((_QWORD *)v22 + 2);
    v25 = *((_QWORD *)v22 + 3);
    v26 = *((_BYTE *)v22 + 32);
    LOBYTE(v22) = *((_BYTE *)v22 + 33);
    v51 = v23;
    *(_QWORD *)&v52 = v24;
    *((_QWORD *)&v52 + 1) = v25;
    LOBYTE(v53) = v26;
    BYTE1(v53) = (_BYTE)v22;
    LOBYTE(v65) = 3;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v27 = (__int128 *)(v3 + v10[8]);
    v28 = v27[1];
    v51 = *v27;
    v52 = v28;
    v53 = v27[2];
    LOBYTE(v65) = 4;
    sub_1DC4C9004();
    sub_1DC62B490();
    v29 = (__int128 *)(v3 + v10[9]);
    v30 = *((_QWORD *)v29 + 2);
    v51 = *v29;
    *(_QWORD *)&v52 = v30;
    LOBYTE(v65) = 5;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v31 = (int *)(v3 + v10[10]);
    v32 = *v31;
    LOBYTE(v31) = *((_BYTE *)v31 + 4);
    LODWORD(v51) = v32;
    BYTE4(v51) = (_BYTE)v31;
    LOBYTE(v65) = 6;
    sub_1DC4C927C();
    sub_1DC62B4E4();
    v33 = (__int128 *)(v3 + v10[11]);
    v34 = *((_BYTE *)v33 + 16);
    v35 = *((_DWORD *)v33 + 5);
    v36 = *((_QWORD *)v33 + 3);
    v37 = *((_QWORD *)v33 + 4);
    v38 = *((_WORD *)v33 + 20);
    v51 = *v33;
    LOBYTE(v52) = v34;
    DWORD1(v52) = v35;
    *((_QWORD *)&v52 + 1) = v36;
    *(_QWORD *)&v53 = v37;
    WORD4(v53) = v38;
    LOBYTE(v65) = 7;
    sub_1DC4C94F4();
    sub_1DC62B4E4();
    v39 = (__int128 *)(v3 + v10[12]);
    v40 = *((_WORD *)v39 + 8);
    v65 = *v39;
    v66 = v40;
    v64 = 8;
    sub_1DC4BEDF0();
    sub_1DC62B490();
    v41 = (__int128 *)(v3 + v10[13]);
    v42 = v41[11];
    v61 = v41[10];
    v62 = v42;
    v63 = *((_QWORD *)v41 + 24);
    v43 = v41[7];
    v57 = v41[6];
    v58 = v43;
    v44 = v41[9];
    v59 = v41[8];
    v60 = v44;
    v45 = v41[3];
    v53 = v41[2];
    v54 = v45;
    v46 = v41[5];
    v55 = v41[4];
    v56 = v46;
    v47 = *v41;
    v52 = v41[1];
    v51 = v47;
    v50 = 9;
    sub_1DC4F4918();
    sub_1DC62B4E4();
    v51 = *(_OWORD *)(v3 + v10[14]);
    v50 = 10;
    sub_1DC4C9674();
    sub_1DC62B490();
    LODWORD(v51) = *(_DWORD *)(v3 + v10[15]);
    v50 = 11;
    sub_1DC4C97F4();
    sub_1DC62B4E4();
    LOBYTE(v51) = *(_BYTE *)(v3 + v10[16]);
    v50 = 12;
    sub_1DC50A590();
    sub_1DC62B4E4();
    LOBYTE(v51) = *(_BYTE *)(v3 + v10[17]);
    v50 = 13;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC50BAE4()
{
  unint64_t result;

  result = qword_1F036AD28;
  if (!qword_1F036AD28)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63275C, &type metadata for AudioEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AD28);
  }
  return result;
}

uint64_t AudioEngageEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char *v24;
  uint64_t v25;
  int *v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char *v36;
  __int128 v37;
  char v38;
  char v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char v45;
  char *v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  char *v52;
  __int16 v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  char v80;
  __int128 v81;
  char v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  int *v96;

  v70 = a2;
  v76 = sub_1DC62ABC0();
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62ABA8();
  v75 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC50C790(0, &qword_1F036AD30, MEMORY[0x1E0DED048]);
  v72 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v69 - v11;
  v96 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
  MEMORY[0x1E0C80A78](v96);
  v79 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DC50BAE4();
  v71 = v12;
  sub_1DC62B5E0();
  v73 = v6;
  if (v2)
  {
    v78 = v2;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  }
  else
  {
    v69 = v10;
    LOBYTE(v83) = 0;
    sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1DC62B454();
    v24 = v79;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v79, v8, v6);
    LOBYTE(v83) = 1;
    sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v25 = v76;
    sub_1DC62B454();
    v26 = v96;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v24[v96[5]], v5, v25);
    LOBYTE(v81) = 2;
    sub_1DC4C18A0();
    sub_1DC62B454();
    v27 = v84;
    v28 = v85;
    v29 = *((_QWORD *)&v85 + 1);
    v30 = v86;
    v31 = *((_QWORD *)&v86 + 1);
    v32 = v87;
    v33 = BYTE1(v87);
    v34 = BYTE2(v87);
    v35 = BYTE3(v87);
    v36 = &v24[v26[6]];
    *(_OWORD *)v36 = v83;
    *((_OWORD *)v36 + 1) = v27;
    v36[32] = v28;
    *((_QWORD *)v36 + 5) = v29;
    v36[48] = v30;
    *((_QWORD *)v36 + 7) = v31;
    v36[64] = v32;
    v36[65] = v33;
    v36[66] = v34;
    v36[67] = v35;
    LOBYTE(v81) = 3;
    sub_1DC4C8E40();
    sub_1DC62B454();
    v37 = v84;
    v38 = v85;
    v39 = BYTE1(v85);
    v40 = &v24[v26[7]];
    *(_OWORD *)v40 = v83;
    *((_OWORD *)v40 + 1) = v37;
    v40[32] = v38;
    v40[33] = v39;
    LOBYTE(v81) = 4;
    sub_1DC4C8FC0();
    sub_1DC62B400();
    v41 = &v24[v26[8]];
    v42 = v84;
    *(_OWORD *)v41 = v83;
    *((_OWORD *)v41 + 1) = v42;
    *((_OWORD *)v41 + 2) = v85;
    LOBYTE(v81) = 5;
    sub_1DC4BEF94();
    sub_1DC62B400();
    v43 = v84;
    v44 = &v24[v26[9]];
    *(_OWORD *)v44 = v83;
    *((_QWORD *)v44 + 2) = v43;
    LOBYTE(v81) = 6;
    sub_1DC4C9238();
    sub_1DC62B454();
    v45 = BYTE4(v83);
    v46 = &v24[v26[10]];
    *(_DWORD *)v46 = v83;
    v46[4] = v45;
    LOBYTE(v81) = 7;
    sub_1DC4C94B0();
    sub_1DC62B454();
    v47 = v84;
    v48 = DWORD1(v84);
    v49 = *((_QWORD *)&v84 + 1);
    v50 = v85;
    v51 = WORD4(v85);
    v52 = &v24[v26[11]];
    *(_OWORD *)v52 = v83;
    v52[16] = v47;
    *((_DWORD *)v52 + 5) = v48;
    *((_QWORD *)v52 + 3) = v49;
    *((_QWORD *)v52 + 4) = v50;
    *((_WORD *)v52 + 20) = v51;
    LOBYTE(v81) = 8;
    sub_1DC4BEDAC();
    sub_1DC62B400();
    v53 = v84;
    v54 = &v24[v96[12]];
    *(_OWORD *)v54 = v83;
    *((_WORD *)v54 + 8) = v53;
    v82 = 9;
    sub_1DC4F48D4();
    sub_1DC62B454();
    v78 = 0;
    v55 = &v79[v96[13]];
    v56 = v94;
    *((_OWORD *)v55 + 10) = v93;
    *((_OWORD *)v55 + 11) = v56;
    *((_QWORD *)v55 + 24) = v95;
    v57 = v90;
    *((_OWORD *)v55 + 6) = v89;
    *((_OWORD *)v55 + 7) = v57;
    v58 = v92;
    *((_OWORD *)v55 + 8) = v91;
    *((_OWORD *)v55 + 9) = v58;
    v59 = v86;
    *((_OWORD *)v55 + 2) = v85;
    *((_OWORD *)v55 + 3) = v59;
    v60 = v88;
    *((_OWORD *)v55 + 4) = v87;
    *((_OWORD *)v55 + 5) = v60;
    v61 = v84;
    *(_OWORD *)v55 = v83;
    *((_OWORD *)v55 + 1) = v61;
    v80 = 10;
    sub_1DC4C9630();
    v62 = v78;
    sub_1DC62B400();
    v63 = v62 == 0;
    v78 = v62;
    if (v62)
      goto LABEL_11;
    *(_OWORD *)&v79[v96[14]] = v81;
    v80 = 11;
    sub_1DC4C97B0();
    v64 = v78;
    sub_1DC62B454();
    v78 = v64;
    if (v64)
      goto LABEL_11;
    *(_DWORD *)&v79[v96[15]] = v81;
    v80 = 12;
    sub_1DC50A54C();
    v65 = v78;
    sub_1DC62B454();
    v78 = v65;
    if (v65 || (v79[v96[16]] = v81, v80 = 13, sub_1DC4C9930(), v66 = v78, sub_1DC62B400(), (v78 = v66) != 0))
    {
LABEL_11:
      (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v72);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      v67 = v79;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v79, v73);
      (*(void (**)(char *, uint64_t))(v74 + 8))(&v67[v96[5]], v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v96;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC4CB1B4(*(_QWORD *)&v67[v16[8]], *(_QWORD *)&v67[v16[8] + 8], *(_QWORD *)&v67[v16[8] + 16]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = &v67[v16[13]];
      v18 = *((_OWORD *)v17 + 11);
      v93 = *((_OWORD *)v17 + 10);
      v94 = v18;
      v95 = *((_QWORD *)v17 + 24);
      v19 = *((_OWORD *)v17 + 7);
      v89 = *((_OWORD *)v17 + 6);
      v90 = v19;
      v20 = *((_OWORD *)v17 + 9);
      v91 = *((_OWORD *)v17 + 8);
      v92 = v20;
      v21 = *((_OWORD *)v17 + 3);
      v85 = *((_OWORD *)v17 + 2);
      v22 = *((_OWORD *)v17 + 4);
      v88 = *((_OWORD *)v17 + 5);
      v86 = v21;
      v87 = v22;
      v23 = *(_OWORD *)v17;
      v84 = *((_OWORD *)v17 + 1);
      v83 = v23;
      result = sub_1DC4F6710((uint64_t)&v83);
      if (v63)
        return swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v72);
      v68 = (uint64_t)v79;
      v79[v96[17]] = v81;
      sub_1DC50C7EC(v68, v70);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      return sub_1DC50C830(v68);
    }
  }
  return result;
}

void sub_1DC50C790(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC50BAE4();
    v7 = a3(a1, &type metadata for AudioEngageEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC50C7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC50C830(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC50C86C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngageEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC50C880(_QWORD *a1)
{
  return AudioEngageEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC50C894@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036ACD8, a1);
}

uint64_t sub_1DC50C8B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368F98, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036ACF0, a1);
}

uint64_t sub_1DC50C8DC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v13, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v13, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v13, v26);
  v27 = a2 + a1[15];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v4, v30);
  v31 = a2 + a1[17];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v13, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngageEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for AudioEngageEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t initializeWithCopy for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngageEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC50E4F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                            v8 = v25;
                            v12 = *(_QWORD *)(v25 - 8);
                            v13 = a3[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioEngageEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC50E8A8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                            v10 = v27;
                            v14 = *(_QWORD *)(v27 - 8);
                            v15 = a4[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC50EC54()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                        if (v11 <= 0x3F)
                        {
                          sub_1DC4B4B50(319, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
                          if (v12 <= 0x3F)
                          {
                            sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioEngageEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    v14[48] = v15[48];
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = *((_QWORD *)v19 + 3);
    *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 3) = v21;
    *((_WORD *)v18 + 16) = *((_WORD *)v19 + 16);
    v22 = a3[8];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *(_QWORD *)((char *)a2 + v22 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25)
    {
      *v23 = *v24;
      *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
      *((_QWORD *)v23 + 2) = v25;
      *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
      v26 = *((_QWORD *)v24 + 5);
      *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
      *((_QWORD *)v23 + 5) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v28;
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    }
    v29 = a3[9];
    v30 = a3[10];
    v31 = (char *)a1 + v29;
    v32 = (char *)a2 + v29;
    *v31 = *v32;
    v33 = *((_QWORD *)v32 + 2);
    *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
    *((_QWORD *)v31 + 2) = v33;
    v34 = (char *)a1 + v30;
    v35 = (char *)a2 + v30;
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = a3[11];
    v37 = a3[12];
    v38 = (char *)a1 + v36;
    v39 = (char *)a2 + v36;
    *(_OWORD *)v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    *((_DWORD *)v38 + 5) = *((_DWORD *)v39 + 5);
    v40 = *((_QWORD *)v39 + 4);
    *((_QWORD *)v38 + 3) = *((_QWORD *)v39 + 3);
    *((_QWORD *)v38 + 4) = v40;
    v38[40] = v39[40];
    v38[41] = v39[41];
    v41 = (char *)a1 + v37;
    v42 = (char *)a2 + v37;
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v41[16] = v42[16];
    v41[17] = v42[17];
    v44 = a3[13];
    v45 = a3[14];
    v46 = (char *)a1 + v44;
    v47 = (char *)a2 + v44;
    v48 = *((_OWORD *)v47 + 1);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *((_OWORD *)v46 + 1) = v48;
    v49 = *((_OWORD *)v47 + 3);
    *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
    *((_OWORD *)v46 + 3) = v49;
    *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
    *((_QWORD *)v46 + 10) = *((_QWORD *)v47 + 10);
    *(_OWORD *)(v46 + 88) = *(_OWORD *)(v47 + 88);
    *(_OWORD *)(v46 + 104) = *(_OWORD *)(v47 + 104);
    *((_DWORD *)v46 + 30) = *((_DWORD *)v47 + 30);
    *((_OWORD *)v46 + 8) = *((_OWORD *)v47 + 8);
    v46[144] = v47[144];
    *(_QWORD *)(v46 + 148) = *(_QWORD *)(v47 + 148);
    v50 = *((_OWORD *)v47 + 11);
    *((_OWORD *)v46 + 10) = *((_OWORD *)v47 + 10);
    *((_OWORD *)v46 + 11) = v50;
    *((_QWORD *)v46 + 24) = *((_QWORD *)v47 + 24);
    v51 = (_QWORD *)((char *)a1 + v45);
    v52 = (_QWORD *)((char *)a2 + v45);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    v54 = a3[16];
    *(_DWORD *)((char *)a1 + a3[15]) = *(_DWORD *)((char *)a2 + a3[15]);
    *((_BYTE *)a1 + v54) = *((_BYTE *)a2 + v54);
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngageEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v17 = a1 + v12;
  v18 = a2 + v12;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a2 + v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24)
  {
    *(_BYTE *)v22 = *(_BYTE *)v23;
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    *(_QWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
    v25 = *(_QWORD *)(v23 + 40);
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
    *(_QWORD *)(v22 + 40) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  }
  v27 = a3[9];
  v28 = a3[10];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_BYTE *)v29 = *(_BYTE *)v30;
  v31 = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  v32 = a1 + v28;
  v33 = a2 + v28;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  v34 = a3[11];
  v35 = a3[12];
  v36 = a1 + v34;
  v37 = a2 + v34;
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
  *(_DWORD *)(v36 + 20) = *(_DWORD *)(v37 + 20);
  v38 = *(_QWORD *)(v37 + 32);
  *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
  *(_QWORD *)(v36 + 32) = v38;
  *(_BYTE *)(v36 + 40) = *(_BYTE *)(v37 + 40);
  *(_BYTE *)(v36 + 41) = *(_BYTE *)(v37 + 41);
  v39 = a1 + v35;
  v40 = a2 + v35;
  v41 = *(_QWORD *)(v40 + 8);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_QWORD *)(v39 + 8) = v41;
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  *(_BYTE *)(v39 + 17) = *(_BYTE *)(v40 + 17);
  v42 = a3[13];
  v43 = a3[14];
  v44 = a1 + v42;
  v45 = a2 + v42;
  v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  v47 = *(_OWORD *)(v45 + 48);
  *(_OWORD *)(v44 + 32) = *(_OWORD *)(v45 + 32);
  *(_OWORD *)(v44 + 48) = v47;
  *(_OWORD *)(v44 + 64) = *(_OWORD *)(v45 + 64);
  *(_QWORD *)(v44 + 80) = *(_QWORD *)(v45 + 80);
  *(_OWORD *)(v44 + 88) = *(_OWORD *)(v45 + 88);
  *(_OWORD *)(v44 + 104) = *(_OWORD *)(v45 + 104);
  *(_DWORD *)(v44 + 120) = *(_DWORD *)(v45 + 120);
  *(_OWORD *)(v44 + 128) = *(_OWORD *)(v45 + 128);
  *(_BYTE *)(v44 + 144) = *(_BYTE *)(v45 + 144);
  *(_QWORD *)(v44 + 148) = *(_QWORD *)(v45 + 148);
  v48 = *(_OWORD *)(v45 + 176);
  *(_OWORD *)(v44 + 160) = *(_OWORD *)(v45 + 160);
  *(_OWORD *)(v44 + 176) = v48;
  *(_QWORD *)(v44 + 192) = *(_QWORD *)(v45 + 192);
  v49 = (_QWORD *)(a1 + v43);
  v50 = (_QWORD *)(a2 + v43);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = a3[16];
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v52) = *(_BYTE *)(a2 + v52);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v14 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = v14;
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
  *(_BYTE *)(v16 + 33) = *(_BYTE *)(v17 + 33);
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = (__int128 *)(a2 + v18);
  v21 = *(_QWORD *)(a1 + v18 + 16);
  v22 = *(_QWORD *)(a2 + v18 + 16);
  if (v21)
  {
    if (v22)
    {
      *(_BYTE *)v19 = *(_BYTE *)v20;
      *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
      *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v19 + 24) = *((_DWORD *)v20 + 6);
      *(_DWORD *)(v19 + 28) = *((_DWORD *)v20 + 7);
      *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
      *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v19);
      v24 = v20[1];
      v23 = v20[2];
      *(_OWORD *)v19 = *v20;
      *(_OWORD *)(v19 + 16) = v24;
      *(_OWORD *)(v19 + 32) = v23;
    }
  }
  else if (v22)
  {
    *(_BYTE *)v19 = *(_BYTE *)v20;
    *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
    *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
    *(_DWORD *)(v19 + 24) = *((_DWORD *)v20 + 6);
    *(_DWORD *)(v19 + 28) = *((_DWORD *)v20 + 7);
    *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
    *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *v20;
    v26 = v20[2];
    *(_OWORD *)(v19 + 16) = v20[1];
    *(_OWORD *)(v19 + 32) = v26;
    *(_OWORD *)v19 = v25;
  }
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = a3[10];
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)v34 = *(_QWORD *)(a2 + v33);
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(a2 + v33 + 8);
  *(_BYTE *)(v34 + 16) = *(_BYTE *)(a2 + v33 + 16);
  *(_DWORD *)(v34 + 20) = *(_DWORD *)(a2 + v33 + 20);
  *(_QWORD *)(v34 + 24) = *(_QWORD *)(a2 + v33 + 24);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(a2 + v33 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 40) = *(_BYTE *)(v35 + 40);
  *(_BYTE *)(v34 + 41) = *(_BYTE *)(v35 + 41);
  v36 = a3[12];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(a2 + v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v37 + 16) = *(_BYTE *)(v38 + 16);
  *(_BYTE *)(v37 + 17) = *(_BYTE *)(v38 + 17);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)(a2 + v39);
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(a2 + v39 + 8);
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(a2 + v39 + 16);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(a2 + v39 + 24);
  *(_QWORD *)(v40 + 32) = *(_QWORD *)(a2 + v39 + 32);
  *(_QWORD *)(v40 + 40) = *(_QWORD *)(a2 + v39 + 40);
  *(_QWORD *)(v40 + 48) = *(_QWORD *)(a2 + v39 + 48);
  *(_QWORD *)(v40 + 56) = *(_QWORD *)(a2 + v39 + 56);
  *(_QWORD *)(v40 + 64) = *(_QWORD *)(a2 + v39 + 64);
  *(_QWORD *)(v40 + 72) = *(_QWORD *)(a2 + v39 + 72);
  *(_QWORD *)(v40 + 80) = *(_QWORD *)(a2 + v39 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v40 + 88) = *(_QWORD *)(v41 + 88);
  *(_QWORD *)(v40 + 96) = *(_QWORD *)(v41 + 96);
  *(_QWORD *)(v40 + 104) = *(_QWORD *)(v41 + 104);
  *(_QWORD *)(v40 + 112) = *(_QWORD *)(v41 + 112);
  *(_DWORD *)(v40 + 120) = *(_DWORD *)(v41 + 120);
  *(_QWORD *)(v40 + 128) = *(_QWORD *)(v41 + 128);
  *(_QWORD *)(v40 + 136) = *(_QWORD *)(v41 + 136);
  *(_BYTE *)(v40 + 144) = *(_BYTE *)(v41 + 144);
  *(_DWORD *)(v40 + 148) = *(_DWORD *)(v41 + 148);
  *(_DWORD *)(v40 + 152) = *(_DWORD *)(v41 + 152);
  *(_QWORD *)(v40 + 160) = *(_QWORD *)(v41 + 160);
  *(_QWORD *)(v40 + 168) = *(_QWORD *)(v41 + 168);
  *(_QWORD *)(v40 + 176) = *(_QWORD *)(v41 + 176);
  *(_QWORD *)(v40 + 184) = *(_QWORD *)(v41 + 184);
  *(_QWORD *)(v40 + 192) = *(_QWORD *)(v41 + 192);
  v42 = a3[14];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  v17 = a1 + v12;
  v18 = a2 + v12;
  *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_OWORD *)(a1 + v20);
  v23 = (__int128 *)(a2 + v20);
  v24 = v23[2];
  v25 = *v23;
  v22[1] = v23[1];
  v22[2] = v24;
  *v22 = v25;
  v26 = a1 + v21;
  v27 = (__int128 *)(a2 + v21);
  v28 = *v27;
  *(_QWORD *)(v26 + 16) = *((_QWORD *)v27 + 2);
  *(_OWORD *)v26 = v28;
  v29 = a3[10];
  v30 = a3[11];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  v33 = (_OWORD *)(a1 + v30);
  v34 = (_OWORD *)(a2 + v30);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  *(_OWORD *)((char *)v33 + 26) = *(_OWORD *)((char *)v34 + 26);
  v36 = a3[12];
  v37 = a3[13];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_WORD *)(v38 + 16) = *(_WORD *)(v39 + 16);
  v40 = a1 + v37;
  v41 = a2 + v37;
  v42 = *(_OWORD *)(v41 + 48);
  *(_OWORD *)(v40 + 32) = *(_OWORD *)(v41 + 32);
  *(_OWORD *)(v40 + 48) = v42;
  v43 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v43;
  v44 = *(_OWORD *)(v41 + 112);
  *(_OWORD *)(v40 + 96) = *(_OWORD *)(v41 + 96);
  *(_OWORD *)(v40 + 112) = v44;
  v45 = *(_OWORD *)(v41 + 80);
  *(_OWORD *)(v40 + 64) = *(_OWORD *)(v41 + 64);
  *(_OWORD *)(v40 + 80) = v45;
  *(_QWORD *)(v40 + 192) = *(_QWORD *)(v41 + 192);
  v46 = *(_OWORD *)(v41 + 176);
  *(_OWORD *)(v40 + 160) = *(_OWORD *)(v41 + 160);
  *(_OWORD *)(v40 + 176) = v46;
  v47 = *(_OWORD *)(v41 + 144);
  *(_OWORD *)(v40 + 128) = *(_OWORD *)(v41 + 128);
  *(_OWORD *)(v40 + 144) = v47;
  v48 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_DWORD *)(a1 + v48) = *(_DWORD *)(a2 + v48);
  v49 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v49) = *(_BYTE *)(a2 + v49);
  return a1;
}

uint64_t assignWithTake for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  *(_BYTE *)(v17 + 33) = *(_BYTE *)(v18 + 33);
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  if (!*(_QWORD *)(a1 + v21 + 16))
    goto LABEL_5;
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
  {
    sub_1DC4CDAF4(v22);
LABEL_5:
    v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  v25 = *(_QWORD *)(v23 + 40);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 40) = v25;
  swift_bridgeObjectRelease();
LABEL_6:
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  v31 = *(_QWORD *)(v29 + 8);
  v30 = *(_QWORD *)(v29 + 16);
  *(_QWORD *)(v28 + 8) = v31;
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
  v32 = a3[10];
  v33 = a3[11];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = *(_BYTE *)(v35 + 4);
  v36 = a1 + v33;
  v37 = a2 + v33;
  *(_OWORD *)v36 = *(_OWORD *)(a2 + v33);
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(a2 + v33 + 16);
  *(_DWORD *)(v36 + 20) = *(_DWORD *)(a2 + v33 + 20);
  v38 = *(_QWORD *)(a2 + v33 + 24);
  v39 = *(_QWORD *)(a2 + v33 + 32);
  *(_QWORD *)(v36 + 24) = v38;
  *(_QWORD *)(v36 + 32) = v39;
  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 40) = *(_WORD *)(v37 + 40);
  v40 = a3[12];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a2 + v40 + 8);
  *(_QWORD *)v41 = *(_QWORD *)(a2 + v40);
  *(_QWORD *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
  v44 = a3[13];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_OWORD *)(a2 + v44 + 16);
  *(_OWORD *)v45 = *(_OWORD *)(a2 + v44);
  *(_OWORD *)(v45 + 16) = v47;
  v48 = *(_OWORD *)(a2 + v44 + 48);
  *(_OWORD *)(v45 + 32) = *(_OWORD *)(a2 + v44 + 32);
  *(_OWORD *)(v45 + 48) = v48;
  *(_OWORD *)(v45 + 64) = *(_OWORD *)(a2 + v44 + 64);
  *(_QWORD *)(v45 + 80) = *(_QWORD *)(a2 + v44 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v45 + 88) = *(_OWORD *)(v46 + 88);
  *(_OWORD *)(v45 + 104) = *(_OWORD *)(v46 + 104);
  *(_DWORD *)(v45 + 120) = *(_DWORD *)(v46 + 120);
  *(_OWORD *)(v45 + 128) = *(_OWORD *)(v46 + 128);
  *(_BYTE *)(v45 + 144) = *(_BYTE *)(v46 + 144);
  *(_QWORD *)(v45 + 148) = *(_QWORD *)(v46 + 148);
  v49 = *(_OWORD *)(v46 + 176);
  *(_OWORD *)(v45 + 160) = *(_OWORD *)(v46 + 160);
  *(_OWORD *)(v45 + 176) = v49;
  *(_QWORD *)(v45 + 192) = *(_QWORD *)(v46 + 192);
  v50 = a3[14];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  v55 = a3[16];
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v55) = *(_BYTE *)(a2 + v55);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngageEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC50FF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngageEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC510014(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5100BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioEngageEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngageEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1DC510290 + 4 * byte_1DC632423[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1DC5102C4 + 4 * byte_1DC63241E[v4]))();
}

uint64_t sub_1DC5102C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5102CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5102D4);
  return result;
}

uint64_t sub_1DC5102E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5102E8);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1DC5102EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5102F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngageEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngageEvent.Model.CodingKeys;
}

unint64_t sub_1DC510314()
{
  unint64_t result;

  result = qword_1F036AEB8;
  if (!qword_1F036AEB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632734, &type metadata for AudioEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AEB8);
  }
  return result;
}

unint64_t sub_1DC51035C()
{
  unint64_t result;

  result = qword_1F036AEC0;
  if (!qword_1F036AEC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6326A4, &type metadata for AudioEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AEC0);
  }
  return result;
}

unint64_t sub_1DC5103A4()
{
  unint64_t result;

  result = qword_1F036AEC8;
  if (!qword_1F036AEC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6326CC, &type metadata for AudioEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AEC8);
  }
  return result;
}

uint64_t sub_1DC5103E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BF90 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C490 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DC64C640 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1DC5109D4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036AED0, MEMORY[0x1E0CF8078]);
}

uint64_t static NonNewsArticleViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036AED0, a1);
}

uint64_t sub_1DC510A14(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036AEE8, MEMORY[0x1E0CF8380]);
}

uint64_t static NonNewsArticleViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036AEE8, a1);
}

uint64_t NonNewsArticleViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NonNewsArticleViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NonNewsArticleViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NonNewsArticleViewEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for NonNewsArticleViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036AF78);
}

uint64_t NonNewsArticleViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.timedData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.nonNewsArticleData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC510CA0()
{
  unint64_t result;

  result = qword_1EDB0F568;
  if (!qword_1EDB0F568)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedPositionData, &type metadata for FeedPositionData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F568);
  }
  return result;
}

unint64_t sub_1DC510CE4()
{
  unint64_t result;

  result = qword_1EDB0F560;
  if (!qword_1EDB0F560)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedPositionData, &type metadata for FeedPositionData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F560);
  }
  return result;
}

uint64_t NonNewsArticleViewEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.feedPositionData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC510E20()
{
  unint64_t result;

  result = qword_1EDB10068;
  if (!qword_1EDB10068)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for InGroupPositionData, &type metadata for InGroupPositionData);
    atomic_store(result, (unint64_t *)&qword_1EDB10068);
  }
  return result;
}

unint64_t sub_1DC510E64()
{
  unint64_t result;

  result = qword_1EDB10060;
  if (!qword_1EDB10060)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for InGroupPositionData, &type metadata for InGroupPositionData);
    atomic_store(result, (unint64_t *)&qword_1EDB10060);
  }
  return result;
}

uint64_t NonNewsArticleViewEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.inGroupPositionData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.feedData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.groupData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.viewData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.viewEndData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.activeWatchlistData.modify())()
{
  type metadata accessor for NonNewsArticleViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NonNewsArticleViewEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
}

uint64_t NonNewsArticleViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NonNewsArticleViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NonNewsArticleViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for NonNewsArticleViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036B028);
}

uint64_t NonNewsArticleViewEvent.Model.nonNewsArticleData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent.Model(0) + 24));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsArticleViewEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsArticleViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent.Model(0) + 36);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t NonNewsArticleViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewEvent.Model.viewEndData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t NonNewsArticleViewEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 NonNewsArticleViewEvent.Model.init(eventData:timedData:nonNewsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:viewData:viewEndData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, int *a4@<X3>, int *a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11)
{
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  int v18;
  char v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 result;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __int128 v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;

  v31 = a3[1];
  v32 = *a3;
  v15 = *((_QWORD *)a3 + 4);
  v14 = *((_QWORD *)a3 + 5);
  v16 = *a4;
  v17 = *((_BYTE *)a4 + 4);
  v18 = *a5;
  v19 = *((_BYTE *)a5 + 4);
  v34 = *a6;
  v33 = *((_QWORD *)a6 + 2);
  v37 = (__n128)a7[1];
  v38 = *a7;
  v35 = *((_QWORD *)a7 + 5);
  v36 = *((_QWORD *)a7 + 4);
  v40 = a8[1];
  v41 = *a8;
  v39 = *((_WORD *)a8 + 8);
  v42 = *a10;
  v43 = *a11;
  v20 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v21 = (int *)type metadata accessor for NonNewsArticleViewEvent.Model(0);
  v22 = a9 + v21[5];
  v23 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  v24 = a9 + v21[6];
  *(_OWORD *)v24 = v32;
  *(_OWORD *)(v24 + 16) = v31;
  *(_QWORD *)(v24 + 32) = v15;
  *(_QWORD *)(v24 + 40) = v14;
  v25 = a9 + v21[7];
  *(_DWORD *)v25 = v16;
  *(_BYTE *)(v25 + 4) = v17;
  v26 = a9 + v21[8];
  *(_DWORD *)v26 = v18;
  *(_BYTE *)(v26 + 4) = v19;
  v27 = a9 + v21[9];
  *(_OWORD *)v27 = v34;
  *(_QWORD *)(v27 + 16) = v33;
  v28 = a9 + v21[10];
  result = v37;
  *(_OWORD *)v28 = v38;
  *(__n128 *)(v28 + 16) = v37;
  *(_QWORD *)(v28 + 32) = v36;
  *(_QWORD *)(v28 + 40) = v35;
  v30 = a9 + v21[11];
  *(_QWORD *)v30 = v41;
  *(_QWORD *)(v30 + 8) = v40;
  *(_WORD *)(v30 + 16) = v39;
  *(_BYTE *)(a9 + v21[12]) = v42;
  *(_BYTE *)(a9 + v21[13]) = v43;
  return result;
}

uint64_t sub_1DC511AB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC511AF0 + 4 * byte_1DC6327B0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC511AF0()
{
  return 0x74614464656D6974;
}

unint64_t sub_1DC511B04()
{
  return 0xD000000000000012;
}

unint64_t sub_1DC511B3C()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC511BC0()
{
  unsigned __int8 *v0;

  return sub_1DC511AB8(*v0);
}

uint64_t sub_1DC511BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC515208(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC511BEC()
{
  sub_1DC512034();
  return sub_1DC62B604();
}

uint64_t sub_1DC511C14()
{
  sub_1DC512034();
  return sub_1DC62B610();
}

uint64_t NonNewsArticleViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  int v17;
  int *v18;
  int v19;
  __int128 *v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v3 = v1;
  sub_1DC51277C(0, &qword_1F036AF08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC512034();
  sub_1DC62B5F8();
  LOBYTE(v30) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NonNewsArticleViewEvent.Model(0);
    LOBYTE(v30) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    v15 = *((_QWORD *)v11 + 4);
    v14 = *((_QWORD *)v11 + 5);
    v30 = v12;
    v31 = v13;
    *(_QWORD *)&v32 = v15;
    *((_QWORD *)&v32 + 1) = v14;
    v29 = 2;
    sub_1DC504038();
    sub_1DC62B4E4();
    v16 = (int *)(v3 + v10[7]);
    v17 = *v16;
    LOBYTE(v16) = *((_BYTE *)v16 + 4);
    LODWORD(v30) = v17;
    BYTE4(v30) = (_BYTE)v16;
    v29 = 3;
    sub_1DC510CE4();
    sub_1DC62B490();
    v18 = (int *)(v3 + v10[8]);
    v19 = *v18;
    LOBYTE(v18) = *((_BYTE *)v18 + 4);
    LODWORD(v30) = v19;
    BYTE4(v30) = (_BYTE)v18;
    v29 = 4;
    sub_1DC510E64();
    sub_1DC62B490();
    v20 = (__int128 *)(v3 + v10[9]);
    v21 = *((_QWORD *)v20 + 2);
    v30 = *v20;
    *(_QWORD *)&v31 = v21;
    v29 = 5;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v22 = (__int128 *)(v3 + v10[10]);
    v23 = v22[1];
    v30 = *v22;
    v31 = v23;
    v32 = v22[2];
    v29 = 6;
    sub_1DC4C9004();
    sub_1DC62B490();
    v24 = (uint64_t *)(v3 + v10[11]);
    v25 = *v24;
    v26 = v24[1];
    LOWORD(v24) = *((_WORD *)v24 + 8);
    *(_QWORD *)&v30 = v25;
    *((_QWORD *)&v30 + 1) = v26;
    LOWORD(v31) = (_WORD)v24;
    v29 = 7;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    LOBYTE(v30) = *(_BYTE *)(v3 + v10[12]);
    v29 = 8;
    sub_1DC4C0298();
    sub_1DC62B4E4();
    LOBYTE(v30) = *(_BYTE *)(v3 + v10[13]);
    v29 = 9;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC512034()
{
  unint64_t result;

  result = qword_1F036AF10;
  if (!qword_1F036AF10)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632A7C, &type metadata for NonNewsArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036AF10);
  }
  return result;
}

uint64_t NonNewsArticleViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  __int128 v19;
  __int128 v20;
  char *v21;
  char v22;
  char *v23;
  char v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  __int16 v31;
  char *v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v37 = a2;
  v4 = sub_1DC62ABC0();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62ABA8();
  v42 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC51277C(0, &qword_1F036AF18, MEMORY[0x1E0DED048]);
  v39 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v35 - v12;
  v45 = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v45);
  v43 = a1;
  v44 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC512034();
  v38 = v13;
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v36 = v11;
  LOBYTE(v46) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v15 = v7;
  v16 = v44;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v44, v9, v15);
  LOBYTE(v46) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v17 = v41;
  sub_1DC62B454();
  v18 = (int *)v45;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v16[*(int *)(v45 + 20)], v6, v17);
  v49 = 2;
  sub_1DC503FF0();
  sub_1DC62B454();
  v19 = v47;
  v20 = v48;
  v21 = &v16[v18[6]];
  *(_OWORD *)v21 = v46;
  *((_OWORD *)v21 + 1) = v19;
  *((_OWORD *)v21 + 2) = v20;
  v49 = 3;
  sub_1DC510CA0();
  sub_1DC62B400();
  v22 = BYTE4(v46);
  v23 = &v16[v18[7]];
  *(_DWORD *)v23 = v46;
  v23[4] = v22;
  v49 = 4;
  sub_1DC510E20();
  sub_1DC62B400();
  v24 = BYTE4(v46);
  v25 = &v16[v18[8]];
  *(_DWORD *)v25 = v46;
  v25[4] = v24;
  v49 = 5;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v26 = v47;
  v27 = &v16[v18[9]];
  *(_OWORD *)v27 = v46;
  *((_QWORD *)v27 + 2) = v26;
  v49 = 6;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v35[1] = v15;
  v28 = &v16[v18[10]];
  v29 = v47;
  *(_OWORD *)v28 = v46;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v48;
  v49 = 7;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v30 = *((_QWORD *)&v46 + 1);
  v31 = v47;
  v32 = &v16[v18[11]];
  *(_QWORD *)v32 = v46;
  *((_QWORD *)v32 + 1) = v30;
  *((_WORD *)v32 + 8) = v31;
  v49 = 8;
  sub_1DC4C0254();
  sub_1DC62B454();
  v16[v18[12]] = v46;
  v49 = 9;
  sub_1DC4C9930();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v39);
  v33 = (uint64_t)v44;
  v44[*(int *)(v45 + 52)] = v46;
  sub_1DC5127D8(v33, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return sub_1DC51281C(v33);
}

void sub_1DC51277C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC512034();
    v7 = a3(a1, &type metadata for NonNewsArticleViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5127D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC51281C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC512858@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsArticleViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC51286C(_QWORD *a1)
{
  return NonNewsArticleViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC512880@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036AED0, a1);
}

uint64_t sub_1DC5128A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036AEE8, a1);
}

uint64_t sub_1DC5128C8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v11, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for NonNewsArticleViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC513CC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC513F64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC514200()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E778, (void (*)(void))sub_1DC4C0254, (void (*)(void))sub_1DC4C0298);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NonNewsArticleViewEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v15[3];
    v14[2] = v15[2];
    v14[3] = v17;
    v18 = v15[5];
    v14[4] = v15[4];
    v14[5] = v18;
    v19 = (char *)a1 + v13;
    v20 = (char *)a2 + v13;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    v21 = a3[8];
    v22 = a3[9];
    v23 = (char *)a1 + v21;
    v24 = (char *)a2 + v21;
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    v25 = (char *)a1 + v22;
    v26 = (char *)a2 + v22;
    *v25 = *v26;
    v27 = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    *((_QWORD *)v25 + 2) = v27;
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)((char *)a2 + v28 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      *v29 = *v30;
      *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
      *((_QWORD *)v29 + 2) = v31;
      *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
      v32 = *((_QWORD *)v30 + 5);
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 5) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v34;
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    }
    v35 = a3[11];
    v36 = a3[12];
    v37 = (char *)a1 + v35;
    v38 = (char *)a2 + v35;
    *((_WORD *)v37 + 8) = *((_WORD *)v38 + 8);
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 40) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  v17 = v14[5];
  v13[4] = v14[4];
  v13[5] = v17;
  v18 = a1 + v12;
  v19 = a2 + v12;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a3[8];
  v21 = a3[9];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = v26;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(_BYTE *)v28 = *(_BYTE *)v29;
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
    v31 = *(_QWORD *)(v29 + 40);
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 40) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  }
  v33 = a3[11];
  v34 = a3[12];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_WORD *)(v35 + 16) = *(_WORD *)(v36 + 16);
  v37 = *(_QWORD *)(v36 + 8);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_QWORD *)(v35 + 8) = v37;
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[2] = v13[2];
  v12[3] = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[4] = v13[4];
  v12[5] = v13[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (int *)(a2 + v14);
  v17 = *v16;
  *(_BYTE *)(v15 + 4) = *((_BYTE *)v16 + 4);
  *(_DWORD *)v15 = v17;
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = (int *)(a2 + v18);
  v21 = *v20;
  *(_BYTE *)(v19 + 4) = *((_BYTE *)v20 + 4);
  *(_DWORD *)v19 = v21;
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = (__int128 *)(a2 + v25);
  v28 = *(_QWORD *)(a1 + v25 + 16);
  v29 = *(_QWORD *)(a2 + v25 + 16);
  if (v28)
  {
    if (v29)
    {
      *(_BYTE *)v26 = *(_BYTE *)v27;
      *(_QWORD *)(v26 + 8) = *((_QWORD *)v27 + 1);
      *(_QWORD *)(v26 + 16) = *((_QWORD *)v27 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v26 + 24) = *((_DWORD *)v27 + 6);
      *(_DWORD *)(v26 + 28) = *((_DWORD *)v27 + 7);
      *(_QWORD *)(v26 + 32) = *((_QWORD *)v27 + 4);
      *(_QWORD *)(v26 + 40) = *((_QWORD *)v27 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v26);
      v31 = v27[1];
      v30 = v27[2];
      *(_OWORD *)v26 = *v27;
      *(_OWORD *)(v26 + 16) = v31;
      *(_OWORD *)(v26 + 32) = v30;
    }
  }
  else if (v29)
  {
    *(_BYTE *)v26 = *(_BYTE *)v27;
    *(_QWORD *)(v26 + 8) = *((_QWORD *)v27 + 1);
    *(_QWORD *)(v26 + 16) = *((_QWORD *)v27 + 2);
    *(_DWORD *)(v26 + 24) = *((_DWORD *)v27 + 6);
    *(_DWORD *)(v26 + 28) = *((_DWORD *)v27 + 7);
    *(_QWORD *)(v26 + 32) = *((_QWORD *)v27 + 4);
    *(_QWORD *)(v26 + 40) = *((_QWORD *)v27 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = *v27;
    v33 = v27[2];
    *(_OWORD *)(v26 + 16) = v27[1];
    *(_OWORD *)(v26 + 32) = v33;
    *(_OWORD *)v26 = v32;
  }
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_QWORD *)v35 = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  *(_BYTE *)(v35 + 17) = *(_BYTE *)(v36 + 17);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = a1 + v19;
  v23 = a2 + v19;
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v24 = a3[10];
  v25 = a3[11];
  v26 = (_OWORD *)(a1 + v24);
  v27 = (__int128 *)(a2 + v24);
  v28 = *v27;
  v29 = v27[2];
  v26[1] = v27[1];
  v26[2] = v29;
  *v26 = v28;
  v30 = a1 + v25;
  v31 = a2 + v25;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  v32 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (!*(_QWORD *)(a1 + v28 + 16))
    goto LABEL_5;
  v31 = *(_QWORD *)(v30 + 16);
  if (!v31)
  {
    sub_1DC4CDAF4(v29);
LABEL_5:
    v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v29 = *(_BYTE *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
  v32 = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = v32;
  swift_bridgeObjectRelease();
LABEL_6:
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)(a2 + v34 + 8);
  *(_QWORD *)v35 = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(v35 + 8) = v37;
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 16) = *(_WORD *)(v36 + 16);
  v38 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC514E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC514EF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC514F98()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DC5150B0 + 4 * byte_1DC6327BF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DC5150E4 + 4 * byte_1DC6327BA[v4]))();
}

uint64_t sub_1DC5150E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5150EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5150F4);
  return result;
}

uint64_t sub_1DC515100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC515108);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DC51510C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC515114(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleViewEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsArticleViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC515134()
{
  unint64_t result;

  result = qword_1F036B080;
  if (!qword_1F036B080)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632A54, &type metadata for NonNewsArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B080);
  }
  return result;
}

unint64_t sub_1DC51517C()
{
  unint64_t result;

  result = qword_1F036B088;
  if (!qword_1F036B088)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6329C4, &type metadata for NonNewsArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B088);
  }
  return result;
}

unint64_t sub_1DC5151C4()
{
  unint64_t result;

  result = qword_1F036B090;
  if (!qword_1F036B090)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6329EC, &type metadata for NonNewsArticleViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B090);
  }
  return result;
}

uint64_t sub_1DC515208(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C660 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C680 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C6A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t *_s11UserContextVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v4 = a2[6];
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = v4;
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t _s11UserContextVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = v7;
  return a1;
}

uint64_t sub_1DC515824()
{
  uint64_t v0;

  return swift_deallocObject();
}

StocksAnalytics::ViewabilityHeight_optional __swiftcall ViewabilityHeight.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ViewabilityHeight_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ViewabilityHeight.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5158D8 + 4 * byte_1DC632B10[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5158D8()
{
  return 0x6465646E61707865;
}

uint64_t sub_1DC5158F0()
{
  return 0x6C616974726170;
}

uint64_t sub_1DC515904()
{
  return 0x657370616C6C6F63;
}

void sub_1DC515920(char *a1)
{
  sub_1DC5444E8(*a1);
}

unint64_t sub_1DC515930()
{
  unint64_t result;

  result = qword_1F036B098;
  if (!qword_1F036B098)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewabilityHeight, &type metadata for ViewabilityHeight);
    atomic_store(result, (unint64_t *)&qword_1F036B098);
  }
  return result;
}

void sub_1DC515974()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5159C0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC515A30()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC515A6C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC515AC8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC515B10()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ViewabilityHeight_optional sub_1DC515B80(Swift::String *a1)
{
  return ViewabilityHeight.init(rawValue:)(*a1);
}

uint64_t sub_1DC515B8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC515BBC + 4 * byte_1DC632B20[*v0]))();
}

void sub_1DC515BBC(_QWORD *a1@<X8>)
{
  *a1 = 0x6465646E61707865;
  a1[1] = 0xE800000000000000;
}

void sub_1DC515BD8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6C616974726170;
  a1[1] = v1;
}

void sub_1DC515BF0(_QWORD *a1@<X8>)
{
  *a1 = 0x657370616C6C6F63;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1DC515C10()
{
  sub_1DC515D84();
  return sub_1DC62B13C();
}

uint64_t sub_1DC515C6C()
{
  sub_1DC515D84();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for ViewabilityHeight(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC515D04 + 4 * byte_1DC632B29[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC515D38 + 4 * byte_1DC632B24[v4]))();
}

uint64_t sub_1DC515D38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC515D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC515D48);
  return result;
}

uint64_t sub_1DC515D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC515D5CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC515D60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC515D68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewabilityHeight()
{
  return &type metadata for ViewabilityHeight;
}

unint64_t sub_1DC515D84()
{
  unint64_t result;

  result = qword_1F036B0A0;
  if (!qword_1F036B0A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewabilityHeight, &type metadata for ViewabilityHeight);
    atomic_store(result, (unint64_t *)&qword_1F036B0A0);
  }
  return result;
}

void GroupData.groupType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *GroupData.groupType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*GroupData.groupType.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupData.groupID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*GroupData.groupID.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupArticleCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24);
}

uint64_t GroupData.groupArticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*GroupData.groupArticleCount.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupPosition.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 28);
}

uint64_t GroupData.groupPosition.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = result;
  return result;
}

uint64_t (*GroupData.groupPosition.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.curatedSubType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupData.curatedSubType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*GroupData.curatedSubType.modify())()
{
  return nullsub_1;
}

_BYTE *GroupData.init(groupType:groupID:groupArticleCount:groupPosition:curatedSubType:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_BYTE *)a8 = *result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_DWORD *)(a8 + 24) = a4;
  *(_DWORD *)(a8 + 28) = a5;
  *(_QWORD *)(a8 + 32) = a6;
  *(_QWORD *)(a8 + 40) = a7;
  return result;
}

uint64_t sub_1DC515F28()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC515F5C + 4 * byte_1DC632C54[*v0]))(0x70795470756F7267, 0xE900000000000065);
}

uint64_t sub_1DC515F5C()
{
  return 0x444970756F7267;
}

unint64_t sub_1DC515F74()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC515F90()
{
  return 0x736F5070756F7267;
}

uint64_t sub_1DC515FB4()
{
  return 0x5364657461727563;
}

uint64_t sub_1DC515FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5168F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC515FFC()
{
  sub_1DC51622C();
  return sub_1DC62B604();
}

uint64_t sub_1DC516024()
{
  sub_1DC51622C();
  return sub_1DC62B610();
}

uint64_t GroupData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  sub_1DC5164D8(0, &qword_1EDB11B18, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v16 = *((_QWORD *)v1 + 2);
  v17 = v10;
  LODWORD(v10) = *((_DWORD *)v1 + 6);
  v14 = *((_DWORD *)v1 + 7);
  v15 = v10;
  v11 = *((_QWORD *)v1 + 4);
  v13[1] = *((_QWORD *)v1 + 5);
  v13[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51622C();
  sub_1DC62B5F8();
  v23 = v9;
  v22 = 0;
  sub_1DC4FB428();
  sub_1DC62B4E4();
  if (!v2)
  {
    v21 = 1;
    sub_1DC62B4B4();
    v20 = 2;
    sub_1DC62B4F0();
    v19 = 3;
    sub_1DC62B4F0();
    v18 = 4;
    sub_1DC62B478();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC51622C()
{
  unint64_t result;

  result = qword_1EDB11788;
  if (!qword_1EDB11788)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632DD8, &type metadata for GroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11788);
  }
  return result;
}

uint64_t GroupData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  unsigned __int8 v31;

  sub_1DC5164D8(0, &qword_1EDB124B0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51622C();
  sub_1DC62B5E0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v30 = 0;
    sub_1DC4FB600();
    sub_1DC62B454();
    v10 = v31;
    v29 = 1;
    v11 = sub_1DC62B424();
    v14 = v13;
    v24 = v11;
    v25 = v10;
    v28 = 2;
    swift_bridgeObjectRetain();
    v15 = sub_1DC62B460();
    v27 = 3;
    v23 = sub_1DC62B460();
    v26 = 4;
    v16 = sub_1DC62B3E8();
    v18 = v17;
    v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20 = v16;
    v19(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v25;
    *(_QWORD *)(a2 + 8) = v24;
    *(_QWORD *)(a2 + 16) = v14;
    v21 = v23;
    *(_DWORD *)(a2 + 24) = v15;
    *(_DWORD *)(a2 + 28) = v21;
    *(_QWORD *)(a2 + 32) = v20;
    *(_QWORD *)(a2 + 40) = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1DC5164D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC51622C();
    v7 = a3(a1, &type metadata for GroupData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC51653C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupData.init(from:)(a1, a2);
}

uint64_t sub_1DC516550(_QWORD *a1)
{
  return GroupData.encode(to:)(a1);
}

uint64_t destroy for GroupData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GroupData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupData()
{
  return &type metadata for GroupData;
}

uint64_t storeEnumTagSinglePayload for GroupData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5167A0 + 4 * byte_1DC632C5E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5167D4 + 4 * byte_1DC632C59[v4]))();
}

uint64_t sub_1DC5167D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5167DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5167E4);
  return result;
}

uint64_t sub_1DC5167F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5167F8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5167FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC516804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupData.CodingKeys()
{
  return &type metadata for GroupData.CodingKeys;
}

unint64_t sub_1DC516824()
{
  unint64_t result;

  result = qword_1F036B0A8;
  if (!qword_1F036B0A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632DB0, &type metadata for GroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B0A8);
  }
  return result;
}

unint64_t sub_1DC51686C()
{
  unint64_t result;

  result = qword_1EDB11798;
  if (!qword_1EDB11798)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632D20, &type metadata for GroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11798);
  }
  return result;
}

unint64_t sub_1DC5168B4()
{
  unint64_t result;

  result = qword_1EDB11790;
  if (!qword_1EDB11790)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC632D48, &type metadata for GroupData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11790);
  }
  return result;
}

uint64_t sub_1DC5168F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x70795470756F7267 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444970756F7267 && a2 == 0xE700000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64C730 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736F5070756F7267 && a2 == 0xED00006E6F697469 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5364657461727563 && a2 == 0xEE00657079546275)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DC516B60(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036B0B0, MEMORY[0x1E0CF8078]);
}

uint64_t static MediaEngageEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B0B0, a1);
}

uint64_t sub_1DC516BA0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036B0C8, MEMORY[0x1E0CF8380]);
}

uint64_t static MediaEngageEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FB8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B0C8, a1);
}

uint64_t MediaEngageEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t MediaEngageEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MediaEngageEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for MediaEngageEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for MediaEngageEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0F578);
}

uint64_t MediaEngageEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.timedData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.newsArticleData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.groupData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.feedData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC51701C()
{
  unint64_t result;

  result = qword_1EDB117F0;
  if (!qword_1EDB117F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaData, &type metadata for MediaData);
    atomic_store(result, (unint64_t *)&qword_1EDB117F0);
  }
  return result;
}

unint64_t sub_1DC517060()
{
  unint64_t result;

  result = qword_1EDB117E8;
  if (!qword_1EDB117E8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaData, &type metadata for MediaData);
    atomic_store(result, (unint64_t *)&qword_1EDB117E8);
  }
  return result;
}

uint64_t MediaEngageEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC51719C()
{
  unint64_t result;

  result = qword_1EDB10078;
  if (!qword_1EDB10078)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaEngagementData, &type metadata for MediaEngagementData);
    atomic_store(result, (unint64_t *)&qword_1EDB10078);
  }
  return result;
}

unint64_t sub_1DC5171E0()
{
  unint64_t result;

  result = qword_1EDB10070;
  if (!qword_1EDB10070)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaEngagementData, &type metadata for MediaEngagementData);
    atomic_store(result, (unint64_t *)&qword_1EDB10070);
  }
  return result;
}

uint64_t MediaEngageEvent.mediaEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaEngagementData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.viewData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.anfComponentData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.issueData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.channelData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaEngageEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.activeWatchlistData.modify())()
{
  type metadata accessor for MediaEngageEvent(0);
  return nullsub_1;
}

uint64_t MediaEngageEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MediaEngageEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v10, v27);
}

uint64_t MediaEngageEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MediaEngageEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for MediaEngageEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for MediaEngageEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12510);
}

uint64_t MediaEngageEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t MediaEngageEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 36));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  int v7;

  result = type metadata accessor for MediaEngageEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = *((_DWORD *)v4 + 3);
  LOBYTE(v4) = *((_BYTE *)v4 + 16);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 12) = v7;
  *(_BYTE *)(a1 + 16) = (_BYTE)v4;
  return result;
}

uint64_t MediaEngageEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1DC517D30(v4, v5);
}

uint64_t sub_1DC517D30(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t MediaEngageEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 56));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaEngageEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

__n128 MediaEngageEvent.Model.init(eventData:timedData:newsArticleData:groupData:feedData:mediaData:mediaEngagementData:viewData:anfComponentData:issueData:channelData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, __n128 *a12, char *a13)
{
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  __n128 *v34;
  __n128 result;
  char v36;
  char v37;
  char v38;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  char v54;
  uint64_t v55;
  __int16 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  unsigned __int8 v64;
  unint64_t v65;
  unint64_t v66;
  __n128 v67;
  char v68;

  v40 = *a3;
  v15 = *((_QWORD *)a3 + 2);
  v16 = *((_QWORD *)a3 + 3);
  v17 = *((_BYTE *)a3 + 32);
  v18 = *((_QWORD *)a3 + 5);
  v19 = *((_BYTE *)a3 + 48);
  v20 = *((_QWORD *)a3 + 7);
  v37 = *((_BYTE *)a3 + 65);
  v38 = *((_BYTE *)a3 + 64);
  v36 = *((_BYTE *)a3 + 66);
  v21 = *((_BYTE *)a3 + 67);
  v43 = a4[1];
  v44 = *a4;
  v41 = *((_QWORD *)a4 + 5);
  v42 = *((_QWORD *)a4 + 4);
  v46 = *a5;
  v45 = *((_QWORD *)a5 + 2);
  v50 = *((_QWORD *)a6 + 1);
  v49 = *((_QWORD *)a6 + 2);
  v48 = *((_DWORD *)a6 + 6);
  v47 = a6[28];
  v55 = *a7;
  v54 = *((_BYTE *)a7 + 8);
  v53 = *((_DWORD *)a7 + 3);
  v51 = *a6;
  v52 = *((_BYTE *)a7 + 16);
  v58 = *a8;
  v57 = a8[1];
  v56 = *((_WORD *)a8 + 8);
  v59 = a10[1];
  v60 = *a10;
  v61 = a11[1];
  v62 = *a11;
  v67 = *a12;
  v65 = a12[1].n128_u64[1];
  v66 = a12[1].n128_u64[0];
  v63 = a12[2].n128_u8[1];
  v64 = a12[2].n128_u8[0];
  v68 = *a13;
  v22 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  v24 = a9 + v23[5];
  v25 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a2, v25);
  v26 = a9 + v23[6];
  *(_QWORD *)(v26 + 16) = v15;
  *(_QWORD *)(v26 + 24) = v16;
  *(_BYTE *)(v26 + 32) = v17;
  *(_QWORD *)(v26 + 40) = v18;
  *(_BYTE *)(v26 + 48) = v19;
  *(_QWORD *)(v26 + 56) = v20;
  *(_OWORD *)v26 = v40;
  *(_BYTE *)(v26 + 64) = v38;
  *(_BYTE *)(v26 + 65) = v37;
  *(_BYTE *)(v26 + 66) = v36;
  *(_BYTE *)(v26 + 67) = v21;
  v27 = a9 + v23[7];
  *(_OWORD *)v27 = v44;
  *(_OWORD *)(v27 + 16) = v43;
  *(_QWORD *)(v27 + 32) = v42;
  *(_QWORD *)(v27 + 40) = v41;
  v28 = a9 + v23[8];
  *(_OWORD *)v28 = v46;
  *(_QWORD *)(v28 + 16) = v45;
  v29 = a9 + v23[9];
  *(_BYTE *)v29 = v51;
  *(_QWORD *)(v29 + 8) = v50;
  *(_QWORD *)(v29 + 16) = v49;
  *(_DWORD *)(v29 + 24) = v48;
  *(_BYTE *)(v29 + 28) = v47;
  v30 = a9 + v23[10];
  *(_QWORD *)v30 = v55;
  *(_BYTE *)(v30 + 8) = v54;
  *(_DWORD *)(v30 + 12) = v53;
  *(_BYTE *)(v30 + 16) = v52;
  v31 = a9 + v23[11];
  *(_QWORD *)v31 = v58;
  *(_QWORD *)(v31 + 8) = v57;
  *(_WORD *)(v31 + 16) = v56;
  v32 = (_QWORD *)(a9 + v23[12]);
  *v32 = v60;
  v32[1] = v59;
  v33 = (_QWORD *)(a9 + v23[13]);
  *v33 = v62;
  v33[1] = v61;
  v34 = (__n128 *)(a9 + v23[14]);
  result = v67;
  *v34 = v67;
  v34[1].n128_u64[0] = v66;
  v34[1].n128_u64[1] = v65;
  v34[2].n128_u8[0] = v64;
  v34[2].n128_u8[1] = v63;
  *(_BYTE *)(a9 + v23[15]) = v68;
  return result;
}

uint64_t sub_1DC5180E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC518118 + 4 * byte_1DC632E30[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC518118()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC51812C()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC518150()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC518164()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC5181AC()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5181CC()
{
  return 0x7461446575737369;
}

uint64_t sub_1DC5181E0()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC51821C()
{
  unsigned __int8 *v0;

  return sub_1DC5180E0(*v0);
}

uint64_t sub_1DC518224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC51C58C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC518248()
{
  sub_1DC518794();
  return sub_1DC62B604();
}

uint64_t sub_1DC518270()
{
  sub_1DC518794();
  return sub_1DC62B610();
}

uint64_t MediaEngageEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v44;
  char v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;

  v3 = v1;
  sub_1DC51911C(0, &qword_1F036B0E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v44 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC518794();
  sub_1DC62B5F8();
  LOBYTE(v46) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
    LOBYTE(v46) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v46 = v12;
    *(_QWORD *)&v47 = v13;
    *((_QWORD *)&v47 + 1) = v14;
    LOBYTE(v48) = v15;
    *((_QWORD *)&v48 + 1) = v16;
    v49 = v17;
    v50 = v18;
    v51 = v19;
    v52 = v20;
    v53 = v21;
    v54 = (char)v11;
    v45 = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[7]);
    v23 = v22[1];
    v46 = *v22;
    v47 = v23;
    v48 = v22[2];
    v45 = 3;
    sub_1DC4C9004();
    sub_1DC62B490();
    v24 = (__int128 *)(v3 + v10[8]);
    v25 = *((_QWORD *)v24 + 2);
    v46 = *v24;
    *(_QWORD *)&v47 = v25;
    v45 = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v26 = (char *)(v3 + v10[9]);
    v27 = *v26;
    v28 = *((_QWORD *)v26 + 1);
    v29 = *((_QWORD *)v26 + 2);
    v30 = *((_DWORD *)v26 + 6);
    LOBYTE(v26) = v26[28];
    LOBYTE(v46) = v27;
    *((_QWORD *)&v46 + 1) = v28;
    *(_QWORD *)&v47 = v29;
    DWORD2(v47) = v30;
    BYTE12(v47) = (_BYTE)v26;
    v45 = 5;
    sub_1DC517060();
    sub_1DC62B4E4();
    v31 = (uint64_t *)(v3 + v10[10]);
    v32 = *v31;
    v33 = *((_BYTE *)v31 + 8);
    v34 = *((_DWORD *)v31 + 3);
    LOBYTE(v31) = *((_BYTE *)v31 + 16);
    *(_QWORD *)&v46 = v32;
    BYTE8(v46) = v33;
    HIDWORD(v46) = v34;
    LOBYTE(v47) = (_BYTE)v31;
    v45 = 6;
    sub_1DC5171E0();
    sub_1DC62B4E4();
    v35 = (uint64_t *)(v3 + v10[11]);
    v36 = *v35;
    v37 = v35[1];
    LOWORD(v35) = *((_WORD *)v35 + 8);
    *(_QWORD *)&v46 = v36;
    *((_QWORD *)&v46 + 1) = v37;
    LOWORD(v47) = (_WORD)v35;
    v45 = 7;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v46 = *(_OWORD *)(v3 + v10[12]);
    v45 = 8;
    sub_1DC4E4B34();
    sub_1DC62B490();
    v46 = *(_OWORD *)(v3 + v10[13]);
    v45 = 9;
    sub_1DC4C9674();
    sub_1DC62B490();
    v38 = (__int128 *)(v3 + v10[14]);
    v39 = *v38;
    v40 = *((_QWORD *)v38 + 2);
    v41 = *((_QWORD *)v38 + 3);
    v42 = *((_BYTE *)v38 + 32);
    LOBYTE(v38) = *((_BYTE *)v38 + 33);
    v46 = v39;
    *(_QWORD *)&v47 = v40;
    *((_QWORD *)&v47 + 1) = v41;
    LOBYTE(v48) = v42;
    BYTE1(v48) = (_BYTE)v38;
    v45 = 10;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    LOBYTE(v46) = *(_BYTE *)(v3 + v10[15]);
    v45 = 11;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC518794()
{
  unint64_t result;

  result = qword_1F036B0E8;
  if (!qword_1F036B0E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63315C, &type metadata for MediaEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B0E8);
  }
  return result;
}

uint64_t MediaEngageEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  int v19;
  int v20;
  char *v21;
  uint64_t v22;
  int *v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;
  char *v42;
  char v43;
  int v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  int *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  char v74;
  uint64_t v75;
  char v76;
  char v77;
  char v78;
  char v79;
  int v80;
  char v81;

  v61 = a2;
  v4 = sub_1DC62ABC0();
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62ABA8();
  v65 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC51911C(0, &qword_1F036B0F0, MEMORY[0x1E0DED048]);
  v66 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v61 - v12;
  v70 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  MEMORY[0x1E0C80A78](v70);
  v69 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1DC518794();
  v62 = v13;
  sub_1DC62B5E0();
  if (v2)
  {
    v68 = v2;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    v19 = 0;
    v20 = 0;
    v80 = 0;
  }
  else
  {
    v16 = v11;
    LOBYTE(v71) = 0;
    sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1DC62B454();
    v17 = v7;
    v21 = v69;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v69, v9, v7);
    LOBYTE(v71) = 1;
    sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v22 = v64;
    sub_1DC62B454();
    v23 = v70;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v21[v70[5]], v6, v22);
    v81 = 2;
    sub_1DC4C18A0();
    sub_1DC62B454();
    v24 = v72;
    v25 = v73;
    v26 = *((_QWORD *)&v73 + 1);
    v27 = v74;
    v28 = v75;
    v29 = v76;
    v30 = v77;
    v31 = v78;
    v32 = v79;
    v33 = &v21[v23[6]];
    *(_OWORD *)v33 = v71;
    *((_OWORD *)v33 + 1) = v24;
    v33[32] = v25;
    *((_QWORD *)v33 + 5) = v26;
    v33[48] = v27;
    *((_QWORD *)v33 + 7) = v28;
    v33[64] = v29;
    v33[65] = v30;
    v33[66] = v31;
    v33[67] = v32;
    v81 = 3;
    sub_1DC4C8FC0();
    sub_1DC62B400();
    v34 = &v21[v23[7]];
    v35 = v72;
    *(_OWORD *)v34 = v71;
    *((_OWORD *)v34 + 1) = v35;
    *((_OWORD *)v34 + 2) = v73;
    v81 = 4;
    sub_1DC4BEF94();
    sub_1DC62B400();
    v36 = v72;
    v37 = &v21[v23[8]];
    *(_OWORD *)v37 = v71;
    *((_QWORD *)v37 + 2) = v36;
    v81 = 5;
    sub_1DC51701C();
    sub_1DC62B454();
    v38 = *((_QWORD *)&v71 + 1);
    v39 = v72;
    v40 = DWORD2(v72);
    v41 = BYTE12(v72);
    v42 = &v21[v23[9]];
    *v42 = v71;
    *((_QWORD *)v42 + 1) = v38;
    *((_QWORD *)v42 + 2) = v39;
    *((_DWORD *)v42 + 6) = v40;
    v42[28] = v41;
    v81 = 6;
    sub_1DC51719C();
    sub_1DC62B454();
    v43 = BYTE8(v71);
    v44 = HIDWORD(v71);
    v45 = v72;
    v46 = &v21[v23[10]];
    *(_QWORD *)v46 = v71;
    v46[8] = v43;
    *((_DWORD *)v46 + 3) = v44;
    v46[16] = v45;
    v81 = 7;
    sub_1DC4BEDAC();
    sub_1DC62B454();
    v47 = v17;
    v48 = *((_QWORD *)&v71 + 1);
    v49 = v72;
    v50 = &v21[v23[11]];
    *(_QWORD *)v50 = v71;
    *((_QWORD *)v50 + 1) = v48;
    *((_WORD *)v50 + 8) = v49;
    v81 = 8;
    sub_1DC4E4AEC();
    sub_1DC62B400();
    v80 = 1;
    *(_OWORD *)&v21[v23[12]] = v71;
    v81 = 9;
    sub_1DC4C9630();
    sub_1DC62B400();
    v68 = 0;
    *(_OWORD *)&v69[v70[13]] = v71;
    v81 = 10;
    sub_1DC4C8E40();
    v51 = v68;
    sub_1DC62B454();
    v68 = v51;
    if (v51)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v62, v66);
      v19 = 0;
      v20 = 1;
    }
    else
    {
      v52 = v72;
      v53 = v73;
      v54 = BYTE1(v73);
      v55 = &v69[v70[14]];
      *(_OWORD *)v55 = v71;
      *((_OWORD *)v55 + 1) = v52;
      v55[32] = v53;
      v55[33] = v54;
      v81 = 11;
      sub_1DC4C9930();
      v56 = v68;
      sub_1DC62B400();
      v68 = v56;
      if (!v56)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v62, v66);
        v60 = (uint64_t)v69;
        v69[v70[15]] = v71;
        sub_1DC51918C(v60, v61);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
        return sub_1DC5191D0(v60);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v62, v66);
      v20 = 1;
      v19 = 1;
    }
    v57 = v64;
    v58 = v69;
    v59 = v70;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v58, v47);
    (*(void (**)(char *, uint64_t))(v63 + 8))(&v58[v59[5]], v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC4CB1B4(*(_QWORD *)&v58[v59[7]], *(_QWORD *)&v58[v59[7] + 8], *(_QWORD *)&v58[v59[7] + 16]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v80 & 1) != 0)
    {
      sub_1DC519178(*(_QWORD *)&v58[v59[12]], *(_QWORD *)&v58[v59[12] + 8]);
      goto LABEL_9;
    }
  }
  if (v20)
  {
LABEL_9:
    result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      return result;
    goto LABEL_10;
  }
  if (!v19)
    return result;
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC51911C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC518794();
    v7 = a3(a1, &type metadata for MediaEngageEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC519178(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1DC51918C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5191D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC51920C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngageEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC519220(_QWORD *a1)
{
  return MediaEngageEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC519234@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B0B0, a1);
}

uint64_t sub_1DC519258@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FB8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B0C8, a1);
}

uint64_t sub_1DC51927C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v11, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaEngageEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
}

uint64_t initializeWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC51AA88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC51ADB0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC51B0D4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E7F0, (void (*)(void))sub_1DC51719C, (void (*)(void))sub_1DC5171E0);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                        if (v11 <= 0x3F)
                          swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaEngageEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v14[32] = v15[32];
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    v14[48] = v15[48];
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    v20 = *(_QWORD *)((char *)a2 + v13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *v18 = *v19;
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      *((_QWORD *)v18 + 2) = v20;
      *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
      v21 = *((_QWORD *)v19 + 5);
      *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
      *((_QWORD *)v18 + 5) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
    v24 = a3[8];
    v25 = a3[9];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    *v26 = *v27;
    v28 = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
    *((_QWORD *)v26 + 2) = v28;
    v29 = (char *)a1 + v25;
    v30 = (char *)a2 + v25;
    *v29 = *v30;
    v31 = *((_QWORD *)v30 + 2);
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    *((_QWORD *)v29 + 2) = v31;
    *((_DWORD *)v29 + 6) = *((_DWORD *)v30 + 6);
    v29[28] = v30[28];
    v32 = a3[10];
    v33 = a3[11];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    v36 = (char *)a1 + v33;
    v37 = (char *)a2 + v33;
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v36[16] = v37[16];
    v36[17] = v37[17];
    v39 = a3[12];
    v40 = (char *)a1 + v39;
    v41 = (_OWORD *)((char *)a2 + v39);
    v42 = *(_QWORD *)((char *)a2 + v39 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42 == 1)
    {
      *(_OWORD *)v40 = *v41;
    }
    else
    {
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *((_QWORD *)v40 + 1) = v42;
      swift_bridgeObjectRetain();
    }
    v43 = a3[13];
    v44 = a3[14];
    v45 = (_QWORD *)((char *)a1 + v43);
    v46 = (_QWORD *)((char *)a2 + v43);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = (char *)a1 + v44;
    v49 = (char *)a2 + v44;
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v51 = *((_QWORD *)v49 + 3);
    *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
    *((_QWORD *)v48 + 3) = v51;
    *((_WORD *)v48 + 16) = *((_WORD *)v49 + 16);
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[12] + 8) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v17 = a1 + v12;
  v18 = a2 + v12;
  v19 = *(_QWORD *)(a2 + v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(_BYTE *)v17 = *(_BYTE *)v18;
    *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
    *(_QWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
    v20 = *(_QWORD *)(v18 + 40);
    *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 40) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  }
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = v26;
  v27 = a1 + v23;
  v28 = a2 + v23;
  *(_BYTE *)v27 = *(_BYTE *)v28;
  v29 = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  *(_QWORD *)(v27 + 16) = v29;
  *(_DWORD *)(v27 + 24) = *(_DWORD *)(v28 + 24);
  *(_BYTE *)(v27 + 28) = *(_BYTE *)(v28 + 28);
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  v34 = a1 + v31;
  v35 = a2 + v31;
  v36 = *(_QWORD *)(v35 + 8);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = v36;
  *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
  *(_BYTE *)(v34 + 17) = *(_BYTE *)(v35 + 17);
  v37 = a3[12];
  v38 = a1 + v37;
  v39 = (_OWORD *)(a2 + v37);
  v40 = *(_QWORD *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40 == 1)
  {
    *(_OWORD *)v38 = *v39;
  }
  else
  {
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *(_QWORD *)(v38 + 8) = v40;
    swift_bridgeObjectRetain();
  }
  v41 = a3[13];
  v42 = a3[14];
  v43 = (_QWORD *)(a1 + v41);
  v44 = (_QWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = a1 + v42;
  v47 = a2 + v42;
  v48 = *(_QWORD *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_QWORD *)(v46 + 8) = v48;
  v49 = *(_QWORD *)(v47 + 24);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  *(_QWORD *)(v46 + 24) = v49;
  *(_WORD *)(v46 + 32) = *(_WORD *)(v47 + 32);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v14 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = v14;
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *((_DWORD *)v17 + 6);
      *(_DWORD *)(v16 + 28) = *((_DWORD *)v17 + 7);
      *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
      *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v16);
      v21 = v17[1];
      v20 = v17[2];
      *(_OWORD *)v16 = *v17;
      *(_OWORD *)(v16 + 16) = v21;
      *(_OWORD *)(v16 + 32) = v20;
    }
  }
  else if (v19)
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    *(_DWORD *)(v16 + 24) = *((_DWORD *)v17 + 6);
    *(_DWORD *)(v16 + 28) = *((_DWORD *)v17 + 7);
    *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
    *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *v17;
    v23 = v17[2];
    *(_OWORD *)(v16 + 16) = v17[1];
    *(_OWORD *)(v16 + 32) = v23;
    *(_OWORD *)v16 = v22;
  }
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)(a2 + v27);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(a2 + v27 + 8);
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = *(_DWORD *)(v29 + 24);
  *(_BYTE *)(v28 + 28) = *(_BYTE *)(v29 + 28);
  *(_DWORD *)(v28 + 24) = v30;
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  *(_DWORD *)(v32 + 12) = *(_DWORD *)(v33 + 12);
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_QWORD *)v35 = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  *(_BYTE *)(v35 + 17) = *(_BYTE *)(v36 + 17);
  v37 = a3[12];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 8);
  v41 = *(_QWORD *)(a2 + v37 + 8);
  if (v40 != 1)
  {
    if (v41 != 1)
    {
      *v38 = *v39;
      v38[1] = v39[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_1DC51BD60((uint64_t)v38);
    goto LABEL_13;
  }
  if (v41 == 1)
  {
LABEL_13:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    goto LABEL_15;
  }
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
LABEL_15:
  v42 = a3[13];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  *(_QWORD *)(v46 + 24) = *(_QWORD *)(v47 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 32) = *(_BYTE *)(v47 + 32);
  *(_BYTE *)(v46 + 33) = *(_BYTE *)(v47 + 33);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_1DC51BD60(uint64_t a1)
{
  destroy for ViewData();
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  v17 = (_OWORD *)(a1 + v12);
  v18 = (__int128 *)(a2 + v12);
  v19 = v18[2];
  v20 = *v18;
  v17[1] = v18[1];
  v17[2] = v19;
  *v17 = v20;
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v25 = (_OWORD *)(a1 + v22);
  v26 = (__int128 *)(a2 + v22);
  v27 = *v26;
  *(_OWORD *)((char *)v25 + 13) = *(__int128 *)((char *)v26 + 13);
  *v25 = v27;
  v28 = a3[10];
  v29 = a3[11];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  v34 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
  v35 = a3[14];
  v36 = a3[15];
  v37 = a1 + v35;
  v38 = a2 + v35;
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(_WORD *)(v37 + 32) = *(_WORD *)(v38 + 32);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 16))
  {
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      *(_BYTE *)v17 = *(_BYTE *)v18;
      *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
      *(_QWORD *)(v17 + 16) = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      v20 = *(_QWORD *)(v18 + 40);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 40) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DC4CDAF4(v17);
  }
  v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
LABEL_6:
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = v26;
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)(a2 + v27);
  v30 = *(_QWORD *)(a2 + v27 + 16);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(a2 + v27 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v28 + 28) = *(_BYTE *)(v29 + 28);
  *(_DWORD *)(v28 + 24) = *(_DWORD *)(v29 + 24);
  v31 = a3[10];
  v32 = a3[11];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  *(_DWORD *)(v33 + 12) = *(_DWORD *)(v34 + 12);
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  v35 = a1 + v32;
  v36 = a2 + v32;
  v37 = *(_QWORD *)(a2 + v32);
  v38 = *(_QWORD *)(a2 + v32 + 8);
  *(_QWORD *)v35 = v37;
  *(_QWORD *)(v35 + 8) = v38;
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 16) = *(_WORD *)(v36 + 16);
  v39 = a3[12];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  if (*(_QWORD *)(a1 + v39 + 8) != 1)
  {
    v42 = v41[1];
    if (v42 != 1)
    {
      *v40 = *v41;
      v40[1] = v42;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DC51BD60((uint64_t)v40);
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_11:
  v43 = a3[13];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (uint64_t *)(a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  v48 = a3[14];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a2 + v48 + 8);
  *(_QWORD *)v49 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(v50 + 24);
  *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
  *(_QWORD *)(v49 + 24) = v52;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 32) = *(_BYTE *)(v50 + 32);
  *(_BYTE *)(v49 + 33) = *(_BYTE *)(v50 + 33);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC51C1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC51C258(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC51C300()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1DC51C434 + 4 * byte_1DC632E41[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1DC51C468 + 4 * byte_1DC632E3C[v4]))();
}

uint64_t sub_1DC51C468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51C470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC51C478);
  return result;
}

uint64_t sub_1DC51C484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC51C48CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1DC51C490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51C498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaEngageEvent.Model.CodingKeys()
{
  return &type metadata for MediaEngageEvent.Model.CodingKeys;
}

unint64_t sub_1DC51C4B8()
{
  unint64_t result;

  result = qword_1F036B0F8;
  if (!qword_1F036B0F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633134, &type metadata for MediaEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B0F8);
  }
  return result;
}

unint64_t sub_1DC51C500()
{
  unint64_t result;

  result = qword_1F036B100;
  if (!qword_1F036B100)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6330A4, &type metadata for MediaEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B100);
  }
  return result;
}

unint64_t sub_1DC51C548()
{
  unint64_t result;

  result = qword_1F036B108;
  if (!qword_1F036B108)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6330CC, &type metadata for MediaEngageEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B108);
  }
  return result;
}

uint64_t sub_1DC51C58C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C750 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C770 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

StocksAnalytics::StoryType_optional __swiftcall StoryType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::StoryType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t StoryType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC51CB3C + 4 * byte_1DC6331AC[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC51CB3C()
{
  return 0x676E696B61657262;
}

uint64_t sub_1DC51CB54()
{
  return 0x69706F6C65766564;
}

uint64_t sub_1DC51CB70()
{
  return 0x64657461647075;
}

uint64_t sub_1DC51CB84()
{
  return 0x6C65527373657270;
}

void sub_1DC51CBA4(char *a1)
{
  sub_1DC5411A8(*a1);
}

unint64_t sub_1DC51CBB4()
{
  unint64_t result;

  result = qword_1F036B110;
  if (!qword_1F036B110)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoryType, &type metadata for StoryType);
    atomic_store(result, (unint64_t *)&qword_1F036B110);
  }
  return result;
}

void sub_1DC51CBF8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC51CC44()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC51CCD4()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC51CD10()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC51CD8C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC51CDD4()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::StoryType_optional sub_1DC51CE64(Swift::String *a1)
{
  return StoryType.init(rawValue:)(*a1);
}

uint64_t sub_1DC51CE70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC51CEA0 + 4 * byte_1DC6331C0[*v0]))();
}

void sub_1DC51CEA0(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696B61657262;
  a1[1] = 0xE800000000000000;
}

void sub_1DC51CEBC(_QWORD *a1@<X8>)
{
  *a1 = 0x69706F6C65766564;
  a1[1] = 0xEA0000000000676ELL;
}

void sub_1DC51CEDC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x64657461647075;
  a1[1] = v1;
}

void sub_1DC51CEF4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "pressRelease");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1DC51CF18()
{
  sub_1DC51D08C();
  return sub_1DC62B13C();
}

uint64_t sub_1DC51CF74()
{
  sub_1DC51D08C();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for StoryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC51D00C + 4 * byte_1DC6331CA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC51D040 + 4 * byte_1DC6331C5[v4]))();
}

uint64_t sub_1DC51D040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51D048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC51D050);
  return result;
}

uint64_t sub_1DC51D05C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC51D064);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC51D068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51D070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoryType()
{
  return &type metadata for StoryType;
}

unint64_t sub_1DC51D08C()
{
  unint64_t result;

  result = qword_1EDB12570;
  if (!qword_1EDB12570)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoryType, &type metadata for StoryType);
    atomic_store(result, (unint64_t *)&qword_1EDB12570);
  }
  return result;
}

void StoreKitErrorData.storeKitError.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *StoreKitErrorData.storeKitError.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*StoreKitErrorData.storeKitError.modify())()
{
  return nullsub_1;
}

StocksAnalytics::StoreKitErrorData __swiftcall StoreKitErrorData.init(storeKitError:)(StocksAnalytics::StoreKitErrorData storeKitError)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)storeKitError.storeKitError;
  return storeKitError;
}

uint64_t sub_1DC51D104()
{
  return 0x74694B65726F7473;
}

uint64_t sub_1DC51D128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74694B65726F7473 && a2 == 0xED0000726F727245)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC51D1E0()
{
  sub_1DC51D334();
  return sub_1DC62B604();
}

uint64_t sub_1DC51D208()
{
  sub_1DC51D334();
  return sub_1DC62B610();
}

uint64_t StoreKitErrorData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC51D4F4(0, &qword_1F036B118, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51D334();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC51D378();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC51D334()
{
  unint64_t result;

  result = qword_1F036B120;
  if (!qword_1F036B120)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633478, &type metadata for StoreKitErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B120);
  }
  return result;
}

unint64_t sub_1DC51D378()
{
  unint64_t result;

  result = qword_1F036B128;
  if (!qword_1F036B128)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoreKitError, &type metadata for StoreKitError);
    atomic_store(result, (unint64_t *)&qword_1F036B128);
  }
  return result;
}

uint64_t StoreKitErrorData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC51D4F4(0, &qword_1F036B130, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51D334();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC51D550();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC51D4F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC51D334();
    v7 = a3(a1, &type metadata for StoreKitErrorData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC51D550()
{
  unint64_t result;

  result = qword_1F036B138;
  if (!qword_1F036B138)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoreKitError, &type metadata for StoreKitError);
    atomic_store(result, (unint64_t *)&qword_1F036B138);
  }
  return result;
}

unint64_t sub_1DC51D598()
{
  unint64_t result;

  result = qword_1F036B140;
  if (!qword_1F036B140)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoreKitErrorData, &type metadata for StoreKitErrorData);
    atomic_store(result, (unint64_t *)&qword_1F036B140);
  }
  return result;
}

unint64_t sub_1DC51D5E0()
{
  unint64_t result;

  result = qword_1F036B148;
  if (!qword_1F036B148)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for StoreKitErrorData, &type metadata for StoreKitErrorData);
    atomic_store(result, (unint64_t *)&qword_1F036B148);
  }
  return result;
}

uint64_t sub_1DC51D624@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StoreKitErrorData.init(from:)(a1, a2);
}

uint64_t sub_1DC51D638(_QWORD *a1)
{
  return StoreKitErrorData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for StoreKitErrorData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1DC51D698 + 4 * byte_1DC6332F5[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1DC51D6CC + 4 * byte_1DC6332F0[v4]))();
}

uint64_t sub_1DC51D6CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51D6D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC51D6DCLL);
  return result;
}

uint64_t sub_1DC51D6E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC51D6F0);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1DC51D6F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51D6FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitErrorData()
{
  return &type metadata for StoreKitErrorData;
}

uint64_t storeEnumTagSinglePayload for StoreKitErrorData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC51D758 + 4 * byte_1DC6332FA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC51D778 + 4 * byte_1DC6332FF[v4]))();
}

_BYTE *sub_1DC51D758(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC51D778(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC51D780(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC51D788(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC51D790(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC51D798(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitErrorData.CodingKeys()
{
  return &type metadata for StoreKitErrorData.CodingKeys;
}

unint64_t sub_1DC51D7B8()
{
  unint64_t result;

  result = qword_1F036B150;
  if (!qword_1F036B150)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633450, &type metadata for StoreKitErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B150);
  }
  return result;
}

unint64_t sub_1DC51D800()
{
  unint64_t result;

  result = qword_1F036B158;
  if (!qword_1F036B158)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6333C0, &type metadata for StoreKitErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B158);
  }
  return result;
}

unint64_t sub_1DC51D848()
{
  unint64_t result;

  result = qword_1F036B160;
  if (!qword_1F036B160)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6333E8, &type metadata for StoreKitErrorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B160);
  }
  return result;
}

void PersonalizedAdsUserSelectionData.selectionType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PersonalizedAdsUserSelectionData.selectionType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PersonalizedAdsUserSelectionData.selectionType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PersonalizedAdsUserSelectionData __swiftcall PersonalizedAdsUserSelectionData.init(selectionType:)(StocksAnalytics::PersonalizedAdsUserSelectionData selectionType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)selectionType.selectionType;
  return selectionType;
}

uint64_t sub_1DC51D8C0()
{
  return 0x6F697463656C6573;
}

uint64_t sub_1DC51D8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F697463656C6573 && a2 == 0xED0000657079546ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC51D99C()
{
  sub_1DC51DAF0();
  return sub_1DC62B604();
}

uint64_t sub_1DC51D9C4()
{
  sub_1DC51DAF0();
  return sub_1DC62B610();
}

uint64_t PersonalizedAdsUserSelectionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC51DCB0(0, &qword_1F036B168, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51DAF0();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC51DB34();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC51DAF0()
{
  unint64_t result;

  result = qword_1F036B170;
  if (!qword_1F036B170)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633664, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B170);
  }
  return result;
}

unint64_t sub_1DC51DB34()
{
  unint64_t result;

  result = qword_1F036B178;
  if (!qword_1F036B178)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PersonalizedAdsUserSelectionType, &type metadata for PersonalizedAdsUserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1F036B178);
  }
  return result;
}

uint64_t PersonalizedAdsUserSelectionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC51DCB0(0, &qword_1F036B180, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51DAF0();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC51DD0C();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC51DCB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC51DAF0();
    v7 = a3(a1, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC51DD0C()
{
  unint64_t result;

  result = qword_1F036B188;
  if (!qword_1F036B188)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PersonalizedAdsUserSelectionType, &type metadata for PersonalizedAdsUserSelectionType);
    atomic_store(result, (unint64_t *)&qword_1F036B188);
  }
  return result;
}

unint64_t sub_1DC51DD54()
{
  unint64_t result;

  result = qword_1F036B190;
  if (!qword_1F036B190)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PersonalizedAdsUserSelectionData, &type metadata for PersonalizedAdsUserSelectionData);
    atomic_store(result, (unint64_t *)&qword_1F036B190);
  }
  return result;
}

unint64_t sub_1DC51DD9C()
{
  unint64_t result;

  result = qword_1F036B198;
  if (!qword_1F036B198)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PersonalizedAdsUserSelectionData, &type metadata for PersonalizedAdsUserSelectionData);
    atomic_store(result, (unint64_t *)&qword_1F036B198);
  }
  return result;
}

uint64_t sub_1DC51DDE0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PersonalizedAdsUserSelectionData.init(from:)(a1, a2);
}

uint64_t sub_1DC51DDF4(_QWORD *a1)
{
  return PersonalizedAdsUserSelectionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsUserSelectionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC51DE54 + 4 * byte_1DC6334D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC51DE88 + 4 * byte_1DC6334D0[v4]))();
}

uint64_t sub_1DC51DE88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51DE90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC51DE98);
  return result;
}

uint64_t sub_1DC51DEA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC51DEACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC51DEB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51DEB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionData()
{
  return &type metadata for PersonalizedAdsUserSelectionData;
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsUserSelectionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC51DF14 + 4 * byte_1DC6334DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC51DF34 + 4 * byte_1DC6334DF[v4]))();
}

_BYTE *sub_1DC51DF14(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC51DF34(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC51DF3C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC51DF44(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC51DF4C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC51DF54(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionData.CodingKeys()
{
  return &type metadata for PersonalizedAdsUserSelectionData.CodingKeys;
}

unint64_t sub_1DC51DF74()
{
  unint64_t result;

  result = qword_1F036B1A0;
  if (!qword_1F036B1A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63363C, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B1A0);
  }
  return result;
}

unint64_t sub_1DC51DFBC()
{
  unint64_t result;

  result = qword_1F036B1A8;
  if (!qword_1F036B1A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6335AC, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B1A8);
  }
  return result;
}

unint64_t sub_1DC51E004()
{
  unint64_t result;

  result = qword_1F036B1B0;
  if (!qword_1F036B1B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6335D4, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B1B0);
  }
  return result;
}

uint64_t sub_1DC51E048(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036B1B8, MEMORY[0x1E0CF8078]);
}

uint64_t static OnboardingScreenContinueEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B1B8, a1);
}

uint64_t sub_1DC51E088(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036B1D0, MEMORY[0x1E0CF8380]);
}

uint64_t static OnboardingScreenContinueEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B1D0, a1);
}

uint64_t OnboardingScreenContinueEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t OnboardingScreenContinueEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*OnboardingScreenContinueEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t OnboardingScreenContinueEvent.onboardingScreenData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenContinueEvent(0) + 20);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for OnboardingScreenContinueEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036B270);
}

void sub_1DC51E178()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036B1E8)
  {
    sub_1DC51E1DC();
    sub_1DC51E220();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036B1E8);
  }
}

unint64_t sub_1DC51E1DC()
{
  unint64_t result;

  result = qword_1F036B1F0;
  if (!qword_1F036B1F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OnboardingScreenData, &type metadata for OnboardingScreenData);
    atomic_store(result, (unint64_t *)&qword_1F036B1F0);
  }
  return result;
}

unint64_t sub_1DC51E220()
{
  unint64_t result;

  result = qword_1F036B1F8;
  if (!qword_1F036B1F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OnboardingScreenData, &type metadata for OnboardingScreenData);
    atomic_store(result, (unint64_t *)&qword_1F036B1F8);
  }
  return result;
}

uint64_t OnboardingScreenContinueEvent.onboardingScreenData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenContinueEvent(0) + 20);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OnboardingScreenContinueEvent.onboardingScreenData.modify())()
{
  type metadata accessor for OnboardingScreenContinueEvent(0);
  return nullsub_1;
}

uint64_t OnboardingScreenContinueEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for OnboardingScreenContinueEvent(0) + 20);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t OnboardingScreenContinueEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t OnboardingScreenContinueEvent.Model.onboardingScreenData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for OnboardingScreenContinueEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036B300);
}

uint64_t OnboardingScreenContinueEvent.Model.init(eventData:onboardingScreenData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1DC51E3F4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC51E438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC51F46C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC51E45C()
{
  sub_1DC51E614();
  return sub_1DC62B604();
}

uint64_t sub_1DC51E484()
{
  sub_1DC51E614();
  return sub_1DC62B610();
}

uint64_t OnboardingScreenContinueEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1DC51E8E0(0, &qword_1F036B200, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51E614();
  sub_1DC62B5F8();
  v11[15] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v11[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for OnboardingScreenContinueEvent.Model(0) + 20));
    v11[13] = 1;
    sub_1DC51E220();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC51E614()
{
  unint64_t result;

  result = qword_1F036B208;
  if (!qword_1F036B208)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633884, &type metadata for OnboardingScreenContinueEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B208);
  }
  return result;
}

uint64_t OnboardingScreenContinueEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v21 = a2;
  v25 = sub_1DC62ABA8();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC51E8E0(0, &qword_1F036B210, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51E614();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = a1;
  v20 = v6;
  v12 = (uint64_t)v11;
  v13 = v22;
  v28 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v23;
  v14 = v24;
  v16 = v25;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1DC51E1DC();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v14);
  *(_BYTE *)(v12 + *(int *)(v9 + 20)) = v27;
  sub_1DC51E93C(v12, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1DC51E980(v12);
}

void sub_1DC51E8E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC51E614();
    v7 = a3(a1, &type metadata for OnboardingScreenContinueEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC51E93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC51E980(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC51E9BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OnboardingScreenContinueEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC51E9D0(_QWORD *a1)
{
  return OnboardingScreenContinueEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC51E9E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B1B8, a1);
}

uint64_t sub_1DC51EA08@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B1D0, a1);
}

uint64_t sub_1DC51EA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for OnboardingScreenContinueEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC51E178();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC51E178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC51E178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC51E178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC51E178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingScreenContinueEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC51EDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC51E178();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenContinueEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC51EE24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC51E178();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC51EEA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC51E178();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for OnboardingScreenContinueEvent.Model(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for OnboardingScreenContinueEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingScreenContinueEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC51F15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenContinueEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC51F1E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t sub_1DC51F258()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenContinueEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC51F314 + 4 * byte_1DC6336C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC51F348 + 4 * byte_1DC6336C0[v4]))();
}

uint64_t sub_1DC51F348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51F350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC51F358);
  return result;
}

uint64_t sub_1DC51F364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC51F36CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC51F370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC51F378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenContinueEvent.Model.CodingKeys()
{
  return &type metadata for OnboardingScreenContinueEvent.Model.CodingKeys;
}

unint64_t sub_1DC51F398()
{
  unint64_t result;

  result = qword_1F036B338;
  if (!qword_1F036B338)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63385C, &type metadata for OnboardingScreenContinueEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B338);
  }
  return result;
}

unint64_t sub_1DC51F3E0()
{
  unint64_t result;

  result = qword_1F036B340;
  if (!qword_1F036B340)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6337CC, &type metadata for OnboardingScreenContinueEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B340);
  }
  return result;
}

unint64_t sub_1DC51F428()
{
  unint64_t result;

  result = qword_1F036B348;
  if (!qword_1F036B348)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6337F4, &type metadata for OnboardingScreenContinueEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B348);
  }
  return result;
}

uint64_t sub_1DC51F46C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64C790)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC51F564(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036B350, MEMORY[0x1E0CF8078]);
}

uint64_t static AdInterstitialImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B350, a1);
}

uint64_t sub_1DC51F5A4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036B368, MEMORY[0x1E0CF8380]);
}

uint64_t static AdInterstitialImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B368, a1);
}

uint64_t AdInterstitialImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AdInterstitialImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AdInterstitialImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for AdInterstitialImpressionEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for AdInterstitialImpressionEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036B408);
}

uint64_t AdInterstitialImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdInterstitialImpressionEvent.timedData.modify())()
{
  type metadata accessor for AdInterstitialImpressionEvent(0);
  return nullsub_1;
}

uint64_t AdInterstitialImpressionEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC51F738()
{
  unint64_t result;

  result = qword_1F036B388;
  if (!qword_1F036B388)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdData, &type metadata for AdData);
    atomic_store(result, (unint64_t *)&qword_1F036B388);
  }
  return result;
}

unint64_t sub_1DC51F77C()
{
  unint64_t result;

  result = qword_1F036B390;
  if (!qword_1F036B390)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdData, &type metadata for AdData);
    atomic_store(result, (unint64_t *)&qword_1F036B390);
  }
  return result;
}

uint64_t AdInterstitialImpressionEvent.adData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdInterstitialImpressionEvent.adData.modify())()
{
  type metadata accessor for AdInterstitialImpressionEvent(0);
  return nullsub_1;
}

uint64_t AdInterstitialImpressionEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdInterstitialImpressionEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdInterstitialImpressionEvent.feedData.modify())()
{
  type metadata accessor for AdInterstitialImpressionEvent(0);
  return nullsub_1;
}

uint64_t AdInterstitialImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AdInterstitialImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t AdInterstitialImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AdInterstitialImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for AdInterstitialImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for AdInterstitialImpressionEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036B4A0);
}

uint64_t AdInterstitialImpressionEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_WORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AdInterstitialImpressionEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

__n128 AdInterstitialImpressionEvent.Model.init(eventData:timedData:adData:feedData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 result;
  uint64_t v20;
  __n128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v8 = *a3;
  v9 = a3[1];
  v10 = *((_WORD *)a3 + 8);
  v21 = *(__n128 *)(a3 + 5);
  v22 = *(_OWORD *)(a3 + 3);
  v11 = a3[7];
  v12 = a3[8];
  v13 = *a4;
  v23 = *((_QWORD *)a4 + 2);
  v24 = *((_QWORD *)a4 + 1);
  v14 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  v15 = (int *)type metadata accessor for AdInterstitialImpressionEvent.Model(0);
  v16 = a5 + v15[5];
  v17 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  v18 = a5 + v15[6];
  *(_QWORD *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_WORD *)(v18 + 16) = v10;
  *(_OWORD *)(v18 + 24) = v22;
  result = v21;
  *(__n128 *)(v18 + 40) = v21;
  *(_QWORD *)(v18 + 56) = v11;
  *(_QWORD *)(v18 + 64) = v12;
  v20 = a5 + v15[7];
  *(_BYTE *)v20 = v13;
  *(_QWORD *)(v20 + 8) = v24;
  *(_QWORD *)(v20 + 16) = v23;
  return result;
}

uint64_t sub_1DC51FC48()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC51FC7C + 4 * byte_1DC6338E0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC51FC7C()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC51FC90()
{
  return 0x617461446461;
}

uint64_t sub_1DC51FCA4()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC51FCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC521980(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC51FCE0()
{
  sub_1DC51FF74();
  return sub_1DC62B604();
}

uint64_t sub_1DC51FD08()
{
  sub_1DC51FF74();
  return sub_1DC62B610();
}

uint64_t AdInterstitialImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  __int16 v13;
  __int128 v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v3 = v1;
  sub_1DC52040C(0, &qword_1F036B398, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51FF74();
  sub_1DC62B5F8();
  LOBYTE(v21) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for AdInterstitialImpressionEvent.Model(0);
    LOBYTE(v21) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + *(int *)(v10 + 24));
    v12 = v11[1];
    v13 = *((_WORD *)v11 + 8);
    v21 = *v11;
    v22 = v12;
    LOWORD(v23) = v13;
    v14 = *(_OWORD *)(v11 + 5);
    v24 = *(_OWORD *)(v11 + 3);
    v25 = v14;
    v26 = *(_OWORD *)(v11 + 7);
    HIBYTE(v20) = 2;
    sub_1DC51F77C();
    sub_1DC62B4E4();
    v15 = (char *)(v3 + *(int *)(v10 + 28));
    v16 = *v15;
    v18 = *((_QWORD *)v15 + 1);
    v17 = *((_QWORD *)v15 + 2);
    LOBYTE(v21) = v16;
    v22 = v18;
    v23 = v17;
    HIBYTE(v20) = 3;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC51FF74()
{
  unint64_t result;

  result = qword_1F036B3A0;
  if (!qword_1F036B3A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633ADC, &type metadata for AdInterstitialImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B3A0);
  }
  return result;
}

uint64_t AdInterstitialImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v46;

  v31 = a2;
  v3 = sub_1DC62ABC0();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1DC62ABA8();
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC52040C(0, &qword_1F036B3A8, MEMORY[0x1E0DED048]);
  v36 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for AdInterstitialImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC51FF74();
  v38 = v10;
  v14 = v39;
  sub_1DC62B5E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v39 = v8;
  v28 = v11;
  v29 = v5;
  v15 = (uint64_t)v13;
  v30 = a1;
  v16 = v32;
  v17 = v33;
  v18 = v34;
  LOBYTE(v40) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v19 = v35;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v15, v37, v19);
  LOBYTE(v40) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  v20 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + *(int *)(v28 + 20), v16, v18);
  v46 = 2;
  sub_1DC51F738();
  sub_1DC62B454();
  v21 = v41;
  v22 = v42;
  v23 = v15 + *(int *)(v20 + 24);
  *(_QWORD *)v23 = v40;
  *(_QWORD *)(v23 + 8) = v21;
  *(_WORD *)(v23 + 16) = v22;
  *(_OWORD *)(v23 + 24) = v43;
  *(_OWORD *)(v23 + 40) = v44;
  *(_OWORD *)(v23 + 56) = v45;
  v46 = 3;
  sub_1DC4BEF94();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v36);
  v24 = v41;
  v25 = v42;
  v26 = v15 + *(int *)(v20 + 28);
  *(_BYTE *)v26 = v40;
  *(_QWORD *)(v26 + 8) = v24;
  *(_QWORD *)(v26 + 16) = v25;
  sub_1DC520468(v15, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_1DC5204AC(v15);
}

void sub_1DC52040C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC51FF74();
    v7 = a3(a1, &type metadata for AdInterstitialImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC520468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdInterstitialImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5204AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AdInterstitialImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5204E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AdInterstitialImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5204FC(_QWORD *a1)
{
  return AdInterstitialImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC520510@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B350, a1);
}

uint64_t sub_1DC520534@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B368, a1);
}

uint64_t sub_1DC520558@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdInterstitialImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AdInterstitialImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdInterstitialImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC520D10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AdInterstitialImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC520E18(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC520F1C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AdInterstitialImpressionEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    v17 = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 4) = v17;
    v18 = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v18;
    v19 = *((_QWORD *)v15 + 8);
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    *((_QWORD *)v14 + 8) = v19;
    v20 = (char *)a1 + v13;
    v21 = (char *)a2 + v13;
    *v20 = *v21;
    v22 = *((_QWORD *)v21 + 2);
    *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
    *((_QWORD *)v20 + 2) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v16;
  v17 = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 48) = v17;
  v18 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_QWORD *)(v13 + 64) = v18;
  v19 = a1 + v12;
  v20 = a2 + v12;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  v17 = a1 + v12;
  v18 = a2 + v12;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  return a1;
}

uint64_t assignWithTake for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 64) = v17;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = v22;
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdInterstitialImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5215E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AdInterstitialImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC52169C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC521744()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AdInterstitialImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC521828 + 4 * byte_1DC6338E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC52185C + 4 * byte_1DC6338E4[v4]))();
}

uint64_t sub_1DC52185C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC521864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC52186CLL);
  return result;
}

uint64_t sub_1DC521878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC521880);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC521884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC52188C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdInterstitialImpressionEvent.Model.CodingKeys()
{
  return &type metadata for AdInterstitialImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1DC5218AC()
{
  unint64_t result;

  result = qword_1F036B4E0;
  if (!qword_1F036B4E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633AB4, &type metadata for AdInterstitialImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B4E0);
  }
  return result;
}

unint64_t sub_1DC5218F4()
{
  unint64_t result;

  result = qword_1F036B4E8;
  if (!qword_1F036B4E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633A24, &type metadata for AdInterstitialImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B4E8);
  }
  return result;
}

unint64_t sub_1DC52193C()
{
  unint64_t result;

  result = qword_1F036B4F0;
  if (!qword_1F036B4F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633A4C, &type metadata for AdInterstitialImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B4F0);
  }
  return result;
}

uint64_t sub_1DC521980(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

StocksAnalytics::SymbolType_optional __swiftcall SymbolType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::SymbolType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SymbolType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC521BD0 + 4 * byte_1DC633B2C[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC521BD0()
{
  return 0x797469757165;
}

uint64_t sub_1DC521BE4()
{
  return 0x6E75467865646E69;
}

uint64_t sub_1DC521C00()
{
  return 0x75466C617574756DLL;
}

unint64_t sub_1DC521C1C()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC521C38()
{
  return 0x75636F7470797263;
}

uint64_t sub_1DC521C5C()
{
  return 0x79636E6572727563;
}

uint64_t sub_1DC521C74()
{
  return 0x73657275747566;
}

void sub_1DC521C88(char *a1)
{
  sub_1DC546738(*a1);
}

unint64_t sub_1DC521C98()
{
  unint64_t result;

  result = qword_1F036B4F8;
  if (!qword_1F036B4F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolType, &type metadata for SymbolType);
    atomic_store(result, (unint64_t *)&qword_1F036B4F8);
  }
  return result;
}

void sub_1DC521CDC()
{
  char *v0;

  sub_1DC602E48(0, *v0);
}

void sub_1DC521CE8(uint64_t a1)
{
  char *v1;

  sub_1DC602D3C(a1, *v1);
}

void sub_1DC521CF0(uint64_t a1)
{
  char *v1;

  sub_1DC602E48(a1, *v1);
}

StocksAnalytics::SymbolType_optional sub_1DC521CF8(Swift::String *a1)
{
  return SymbolType.init(rawValue:)(*a1);
}

uint64_t sub_1DC521D04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SymbolType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC521D28()
{
  sub_1DC521E9C();
  return sub_1DC62B13C();
}

uint64_t sub_1DC521D84()
{
  sub_1DC521E9C();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for SymbolType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC521E1C + 4 * byte_1DC633B39[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC521E50 + 4 * byte_1DC633B34[v4]))();
}

uint64_t sub_1DC521E50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC521E58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC521E60);
  return result;
}

uint64_t sub_1DC521E6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC521E74);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC521E78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC521E80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolType()
{
  return &type metadata for SymbolType;
}

unint64_t sub_1DC521E9C()
{
  unint64_t result;

  result = qword_1EDB0ED20;
  if (!qword_1EDB0ED20)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolType, &type metadata for SymbolType);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED20);
  }
  return result;
}

uint64_t AdReferralData.qToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdReferralData.qToken.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdReferralData.qToken.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdReferralData __swiftcall AdReferralData.init(qToken:)(StocksAnalytics::AdReferralData qToken)
{
  StocksAnalytics::AdReferralData *v1;

  *v1 = qToken;
  return qToken;
}

uint64_t sub_1DC521F58()
{
  return 0x6E656B6F5471;
}

uint64_t sub_1DC521F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656B6F5471 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC521FF8()
{
  sub_1DC52213C();
  return sub_1DC62B604();
}

uint64_t sub_1DC522020()
{
  sub_1DC52213C();
  return sub_1DC62B610();
}

uint64_t AdReferralData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5222A4(0, &qword_1F036B500, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC52213C();
  sub_1DC62B5F8();
  sub_1DC62B478();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC52213C()
{
  unint64_t result;

  result = qword_1F036B508;
  if (!qword_1F036B508)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633DD4, &type metadata for AdReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B508);
  }
  return result;
}

uint64_t AdReferralData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC5222A4(0, &qword_1F036B510, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC52213C();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B3E8();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5222A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC52213C();
    v7 = a3(a1, &type metadata for AdReferralData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC522304()
{
  unint64_t result;

  result = qword_1EDB0F1A0;
  if (!qword_1EDB0F1A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdReferralData, &type metadata for AdReferralData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F1A0);
  }
  return result;
}

unint64_t sub_1DC52234C()
{
  unint64_t result;

  result = qword_1EDB0F198;
  if (!qword_1EDB0F198)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdReferralData, &type metadata for AdReferralData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F198);
  }
  return result;
}

uint64_t sub_1DC522390@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdReferralData.init(from:)(a1, a2);
}

uint64_t sub_1DC5223A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5222A4(0, &qword_1F036B500, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC52213C();
  sub_1DC62B5F8();
  sub_1DC62B478();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AdReferralData()
{
  return &type metadata for AdReferralData;
}

uint64_t storeEnumTagSinglePayload for AdReferralData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5224E8 + 4 * byte_1DC633C60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC522508 + 4 * byte_1DC633C65[v4]))();
}

_BYTE *sub_1DC5224E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC522508(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC522510(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC522518(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC522520(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC522528(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdReferralData.CodingKeys()
{
  return &type metadata for AdReferralData.CodingKeys;
}

unint64_t sub_1DC522548()
{
  unint64_t result;

  result = qword_1F036B518;
  if (!qword_1F036B518)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633DAC, &type metadata for AdReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B518);
  }
  return result;
}

unint64_t sub_1DC522590()
{
  unint64_t result;

  result = qword_1F036B520;
  if (!qword_1F036B520)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633D1C, &type metadata for AdReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B520);
  }
  return result;
}

unint64_t sub_1DC5225D8()
{
  unint64_t result;

  result = qword_1F036B528;
  if (!qword_1F036B528)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC633D44, &type metadata for AdReferralData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B528);
  }
  return result;
}

StocksAnalytics::AdCreativeType_optional __swiftcall AdCreativeType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AdCreativeType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdCreativeType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5226A4 + 4 * byte_1DC633E24[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5226A4()
{
  return 0x72656E6E6162;
}

uint64_t sub_1DC5226B8()
{
  return 0x566C6C6F52657270;
}

uint64_t sub_1DC5226D8()
{
  return 0x644165766974616ELL;
}

uint64_t sub_1DC5226F0()
{
  return 0x6974737265746E69;
}

void sub_1DC522710(char *a1)
{
  sub_1DC545514(*a1);
}

unint64_t sub_1DC522720()
{
  unint64_t result;

  result = qword_1F036B530;
  if (!qword_1F036B530)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdCreativeType, &type metadata for AdCreativeType);
    atomic_store(result, (unint64_t *)&qword_1F036B530);
  }
  return result;
}

void sub_1DC522764()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5227B0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC522844()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC522880()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC522900()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC522948()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::AdCreativeType_optional sub_1DC5229DC(Swift::String *a1)
{
  return AdCreativeType.init(rawValue:)(*a1);
}

uint64_t sub_1DC5229E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC522A18 + 4 * byte_1DC633E38[*v0]))();
}

void sub_1DC522A18(_QWORD *a1@<X8>)
{
  *a1 = 0x72656E6E6162;
  a1[1] = 0xE600000000000000;
}

void sub_1DC522A30(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "preRollVideo");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1DC522A54(_QWORD *a1@<X8>)
{
  *a1 = 0x644165766974616ELL;
  a1[1] = 0xE800000000000000;
}

void sub_1DC522A70(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "interstitial");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1DC522A94()
{
  sub_1DC522BF8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC522AF0()
{
  sub_1DC522BF8();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AdCreativeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC522B88 + 4 * byte_1DC633E42[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC522BBC + 4 * byte_1DC633E3D[v4]))();
}

uint64_t sub_1DC522BBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC522BC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC522BCCLL);
  return result;
}

uint64_t sub_1DC522BD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC522BE0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC522BE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC522BEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1DC522BF8()
{
  unint64_t result;

  result = qword_1EDB0F180;
  if (!qword_1EDB0F180)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdCreativeType, &type metadata for AdCreativeType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F180);
  }
  return result;
}

uint64_t SearchResultsData.results.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.results.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SearchResultsData.results.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SearchResultsData __swiftcall SearchResultsData.init(results:)(StocksAnalytics::SearchResultsData results)
{
  StocksAnalytics::SearchResultsData *v1;

  v1->results._rawValue = results.results._rawValue;
  return results;
}

uint64_t sub_1DC522C84()
{
  return 0x73746C75736572;
}

uint64_t sub_1DC522C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC522D30()
{
  sub_1DC522EA4();
  return sub_1DC62B604();
}

uint64_t sub_1DC522D58()
{
  sub_1DC522EA4();
  return sub_1DC62B610();
}

uint64_t SearchResultsData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1DC523040(0, &qword_1F036B538, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC522EA4();
  sub_1DC62B5F8();
  v10[1] = v8;
  sub_1DC4B72F4();
  sub_1DC4B7298(&qword_1EDB11888, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC522EA4()
{
  unint64_t result;

  result = qword_1F036B540;
  if (!qword_1F036B540)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6340D8, &type metadata for SearchResultsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B540);
  }
  return result;
}

uint64_t SearchResultsData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1DC523040(0, &qword_1F036B548, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC522EA4();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC4B72F4();
    sub_1DC4B7298(&qword_1EDB11898, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC523040(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC522EA4();
    v7 = a3(a1, &type metadata for SearchResultsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5230A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SearchResultsData.init(from:)(a1, a2);
}

uint64_t sub_1DC5230B8(_QWORD *a1)
{
  return SearchResultsData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SearchResultsData()
{
  return &type metadata for SearchResultsData;
}

uint64_t storeEnumTagSinglePayload for SearchResultsData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC52311C + 4 * byte_1DC633F60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC52313C + 4 * byte_1DC633F65[v4]))();
}

_BYTE *sub_1DC52311C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC52313C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC523144(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC52314C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC523154(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC52315C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsData.CodingKeys()
{
  return &type metadata for SearchResultsData.CodingKeys;
}

unint64_t sub_1DC52317C()
{
  unint64_t result;

  result = qword_1F036B550;
  if (!qword_1F036B550)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6340B0, &type metadata for SearchResultsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B550);
  }
  return result;
}

unint64_t sub_1DC5231C4()
{
  unint64_t result;

  result = qword_1F036B558;
  if (!qword_1F036B558)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634020, &type metadata for SearchResultsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B558);
  }
  return result;
}

unint64_t sub_1DC52320C()
{
  unint64_t result;

  result = qword_1F036B560;
  if (!qword_1F036B560)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634048, &type metadata for SearchResultsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B560);
  }
  return result;
}

uint64_t SymbolData.symbol.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolData.symbol.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SymbolData.symbol.modify())()
{
  return nullsub_1;
}

void SymbolData.symbolType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *SymbolData.symbolType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*SymbolData.symbolType.modify())()
{
  return nullsub_1;
}

uint64_t SymbolData.exchange.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolData.exchange.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SymbolData.exchange.modify())()
{
  return nullsub_1;
}

void __swiftcall SymbolData.init(symbol:symbolType:exchange:)(StocksAnalytics::SymbolData *__return_ptr retstr, Swift::String symbol, StocksAnalytics::SymbolType symbolType, Swift::String exchange)
{
  StocksAnalytics::SymbolType v4;

  v4 = *(_BYTE *)symbolType;
  retstr->symbol = symbol;
  retstr->symbolType = v4;
  retstr->exchange = exchange;
}

uint64_t sub_1DC52336C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x79546C6F626D7973;
  if (*v0 != 1)
    v1 = 0x65676E6168637865;
  if (*v0)
    return v1;
  else
    return 0x6C6F626D7973;
}

uint64_t sub_1DC5233C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC523C88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5233EC()
{
  sub_1DC5235C4();
  return sub_1DC62B604();
}

uint64_t sub_1DC523414()
{
  sub_1DC5235C4();
  return sub_1DC62B610();
}

uint64_t SymbolData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1DC523844(0, &qword_1EDB119C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v12 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v11[1] = *(_QWORD *)(v1 + 32);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5235C4();
  sub_1DC62B5F8();
  v16 = 0;
  v9 = v11[3];
  sub_1DC62B4B4();
  if (!v9)
  {
    v15 = v12;
    v14 = 1;
    sub_1DC523608();
    sub_1DC62B4E4();
    v13 = 2;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5235C4()
{
  unint64_t result;

  result = qword_1EDB0ECF0;
  if (!qword_1EDB0ECF0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6342A0, &type metadata for SymbolData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECF0);
  }
  return result;
}

unint64_t sub_1DC523608()
{
  unint64_t result;

  result = qword_1EDB0ED18;
  if (!qword_1EDB0ED18)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolType, &type metadata for SymbolType);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED18);
  }
  return result;
}

uint64_t SymbolData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  unsigned __int8 v23;
  char v24;

  sub_1DC523844(0, &qword_1F036B568, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5235C4();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v22 = 1;
  sub_1DC5238A0();
  swift_bridgeObjectRetain();
  sub_1DC62B454();
  v20 = v23;
  v21 = 2;
  v13 = sub_1DC62B424();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18 = v13;
  v17(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC523844(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5235C4();
    v7 = a3(a1, &type metadata for SymbolData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5238A0()
{
  unint64_t result;

  result = qword_1F036B570;
  if (!qword_1F036B570)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolType, &type metadata for SymbolType);
    atomic_store(result, (unint64_t *)&qword_1F036B570);
  }
  return result;
}

uint64_t sub_1DC5238EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolData.init(from:)(a1, a2);
}

uint64_t sub_1DC523900(_QWORD *a1)
{
  return SymbolData.encode(to:)(a1);
}

uint64_t destroy for SymbolData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SymbolData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SymbolData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC523B30 + 4 * byte_1DC63412D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC523B64 + 4 * byte_1DC634128[v4]))();
}

uint64_t sub_1DC523B64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC523B6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC523B74);
  return result;
}

uint64_t sub_1DC523B80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC523B88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC523B8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC523B94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolData.CodingKeys()
{
  return &type metadata for SymbolData.CodingKeys;
}

unint64_t sub_1DC523BB4()
{
  unint64_t result;

  result = qword_1F036B578;
  if (!qword_1F036B578)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634278, &type metadata for SymbolData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B578);
  }
  return result;
}

unint64_t sub_1DC523BFC()
{
  unint64_t result;

  result = qword_1EDB0ED00;
  if (!qword_1EDB0ED00)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6341E8, &type metadata for SymbolData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED00);
  }
  return result;
}

unint64_t sub_1DC523C44()
{
  unint64_t result;

  result = qword_1EDB0ECF8;
  if (!qword_1EDB0ECF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634210, &type metadata for SymbolData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECF8);
  }
  return result;
}

uint64_t sub_1DC523C88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79546C6F626D7973 && a2 == 0xEA00000000006570 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

StocksAnalytics::OsInstallVariant_optional __swiftcall OsInstallVariant.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::OsInstallVariant_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t OsInstallVariant.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C616E7265746E69;
  if (*v0 != 1)
    v1 = 0x6C616E7265747865;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC523E88(char *a1, unsigned __int8 *a2)
{
  return sub_1DC544B64(*a1, *a2);
}

unint64_t sub_1DC523E98()
{
  unint64_t result;

  result = qword_1F036B580;
  if (!qword_1F036B580)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OsInstallVariant, &type metadata for OsInstallVariant);
    atomic_store(result, (unint64_t *)&qword_1F036B580);
  }
  return result;
}

uint64_t sub_1DC523EDC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC523F70()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC523FE0()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::OsInstallVariant_optional sub_1DC524070(Swift::String *a1)
{
  return OsInstallVariant.init(rawValue:)(*a1);
}

uint64_t sub_1DC52407C()
{
  sub_1DC4B555C();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for OsInstallVariant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC524124 + 4 * byte_1DC6342F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC524158 + 4 * byte_1DC6342F0[v4]))();
}

uint64_t sub_1DC524158(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC524160(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC524168);
  return result;
}

uint64_t sub_1DC524174(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC52417CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC524180(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC524188(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OsInstallVariant()
{
  return &type metadata for OsInstallVariant;
}

void PaywallData.paywallType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PaywallData.paywallType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PaywallData.paywallType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PaywallData __swiftcall PaywallData.init(paywallType:)(StocksAnalytics::PaywallData paywallType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)paywallType.paywallType;
  return paywallType;
}

uint64_t sub_1DC5241D8()
{
  return 0x546C6C6177796170;
}

uint64_t sub_1DC5241F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x546C6C6177796170 && a2 == 0xEB00000000657079)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5242A4()
{
  sub_1DC5243F8();
  return sub_1DC62B604();
}

uint64_t sub_1DC5242CC()
{
  sub_1DC5243F8();
  return sub_1DC62B610();
}

uint64_t PaywallData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5245B8(0, &qword_1EDB119D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5243F8();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC52443C();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5243F8()
{
  unint64_t result;

  result = qword_1EDB0EDA0;
  if (!qword_1EDB0EDA0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634588, &type metadata for PaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDA0);
  }
  return result;
}

unint64_t sub_1DC52443C()
{
  unint64_t result;

  result = qword_1EDB0EDC8;
  if (!qword_1EDB0EDC8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaywallType, &type metadata for PaywallType);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDC8);
  }
  return result;
}

uint64_t PaywallData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5245B8(0, &qword_1F036B588, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5243F8();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC524614();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5245B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5243F8();
    v7 = a3(a1, &type metadata for PaywallData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC524614()
{
  unint64_t result;

  result = qword_1F036B590;
  if (!qword_1F036B590)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaywallType, &type metadata for PaywallType);
    atomic_store(result, (unint64_t *)&qword_1F036B590);
  }
  return result;
}

uint64_t sub_1DC524660@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PaywallData.init(from:)(a1, a2);
}

uint64_t sub_1DC524674(_QWORD *a1)
{
  return PaywallData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for PaywallData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5246D4 + 4 * byte_1DC634415[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC524708 + 4 * byte_1DC634410[v4]))();
}

uint64_t sub_1DC524708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC524710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC524718);
  return result;
}

uint64_t sub_1DC524724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC52472CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC524730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC524738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallData()
{
  return &type metadata for PaywallData;
}

uint64_t storeEnumTagSinglePayload for PaywallData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC524794 + 4 * byte_1DC63441A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5247B4 + 4 * byte_1DC63441F[v4]))();
}

_BYTE *sub_1DC524794(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5247B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5247BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5247C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5247CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5247D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PaywallData.CodingKeys()
{
  return &type metadata for PaywallData.CodingKeys;
}

unint64_t sub_1DC5247F4()
{
  unint64_t result;

  result = qword_1F036B598;
  if (!qword_1F036B598)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634560, &type metadata for PaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B598);
  }
  return result;
}

unint64_t sub_1DC52483C()
{
  unint64_t result;

  result = qword_1EDB0EDB0;
  if (!qword_1EDB0EDB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6344D0, &type metadata for PaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDB0);
  }
  return result;
}

unint64_t sub_1DC524884()
{
  unint64_t result;

  result = qword_1EDB0EDA8;
  if (!qword_1EDB0EDA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6344F8, &type metadata for PaywallData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EDA8);
  }
  return result;
}

uint64_t InGroupPositionData.position.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t InGroupPositionData.position.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*InGroupPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t InGroupPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1DC5248F0()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_1DC524908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC52499C()
{
  sub_1DC524ADC();
  return sub_1DC62B604();
}

uint64_t sub_1DC5249C4()
{
  sub_1DC524ADC();
  return sub_1DC62B610();
}

uint64_t InGroupPositionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC524C40(0, &qword_1EDB11A70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC524ADC();
  sub_1DC62B5F8();
  sub_1DC62B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC524ADC()
{
  unint64_t result;

  result = qword_1EDB10048;
  if (!qword_1EDB10048)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634758, &type metadata for InGroupPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10048);
  }
  return result;
}

uint64_t InGroupPositionData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1DC524C40(0, &qword_1EDB12578, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC524ADC();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC524C40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC524ADC();
    v7 = a3(a1, &type metadata for InGroupPositionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC524CA4@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return InGroupPositionData.init(from:)(a1, a2);
}

uint64_t sub_1DC524CB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC524C40(0, &qword_1EDB11A70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC524ADC();
  sub_1DC62B5F8();
  sub_1DC62B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for InGroupPositionData()
{
  return &type metadata for InGroupPositionData;
}

uint64_t storeEnumTagSinglePayload for InGroupPositionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC524DF8 + 4 * byte_1DC6345E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC524E18 + 4 * byte_1DC6345E5[v4]))();
}

_BYTE *sub_1DC524DF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC524E18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC524E20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC524E28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC524E30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC524E38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InGroupPositionData.CodingKeys()
{
  return &type metadata for InGroupPositionData.CodingKeys;
}

unint64_t sub_1DC524E58()
{
  unint64_t result;

  result = qword_1F036B5A0;
  if (!qword_1F036B5A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634730, &type metadata for InGroupPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B5A0);
  }
  return result;
}

unint64_t sub_1DC524EA0()
{
  unint64_t result;

  result = qword_1EDB10058;
  if (!qword_1EDB10058)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6346A0, &type metadata for InGroupPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10058);
  }
  return result;
}

unint64_t sub_1DC524EE8()
{
  unint64_t result;

  result = qword_1EDB10050;
  if (!qword_1EDB10050)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6346C8, &type metadata for InGroupPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10050);
  }
  return result;
}

void AudioEngagementOriginationData.audioEngagementOrigin.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AudioEngagementOriginationData.audioEngagementOrigin.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AudioEngagementOriginationData.audioEngagementOrigin.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AudioEngagementOriginationData __swiftcall AudioEngagementOriginationData.init(audioEngagementOrigin:)(StocksAnalytics::AudioEngagementOriginationData audioEngagementOrigin)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)audioEngagementOrigin.audioEngagementOrigin;
  return audioEngagementOrigin;
}

unint64_t sub_1DC524F60()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC524F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5255C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC524FA4()
{
  sub_1DC5250F8();
  return sub_1DC62B604();
}

uint64_t sub_1DC524FCC()
{
  sub_1DC5250F8();
  return sub_1DC62B610();
}

uint64_t AudioEngagementOriginationData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5252B8(0, &qword_1F036B5A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5250F8();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC52513C();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5250F8()
{
  unint64_t result;

  result = qword_1F036B5B0;
  if (!qword_1F036B5B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634944, &type metadata for AudioEngagementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B5B0);
  }
  return result;
}

unint64_t sub_1DC52513C()
{
  unint64_t result;

  result = qword_1F036B5B8;
  if (!qword_1F036B5B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementOrigin, &type metadata for AudioEngagementOrigin);
    atomic_store(result, (unint64_t *)&qword_1F036B5B8);
  }
  return result;
}

uint64_t AudioEngagementOriginationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5252B8(0, &qword_1F036B5C0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5250F8();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC525314();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5252B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5250F8();
    v7 = a3(a1, &type metadata for AudioEngagementOriginationData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC525314()
{
  unint64_t result;

  result = qword_1F036B5C8;
  if (!qword_1F036B5C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AudioEngagementOrigin, &type metadata for AudioEngagementOrigin);
    atomic_store(result, (unint64_t *)&qword_1F036B5C8);
  }
  return result;
}

uint64_t sub_1DC525360@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AudioEngagementOriginationData.init(from:)(a1, a2);
}

uint64_t sub_1DC525374(_QWORD *a1)
{
  return AudioEngagementOriginationData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementOriginationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5253D4 + 4 * byte_1DC6347B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC525408 + 4 * byte_1DC6347B0[v4]))();
}

uint64_t sub_1DC525408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC525410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC525418);
  return result;
}

uint64_t sub_1DC525424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC52542CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC525430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC525438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOriginationData()
{
  return &type metadata for AudioEngagementOriginationData;
}

uint64_t storeEnumTagSinglePayload for AudioEngagementOriginationData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC525494 + 4 * byte_1DC6347BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5254B4 + 4 * byte_1DC6347BF[v4]))();
}

_BYTE *sub_1DC525494(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5254B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5254BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5254C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5254CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5254D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOriginationData.CodingKeys()
{
  return &type metadata for AudioEngagementOriginationData.CodingKeys;
}

unint64_t sub_1DC5254F4()
{
  unint64_t result;

  result = qword_1F036B5D0;
  if (!qword_1F036B5D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63491C, &type metadata for AudioEngagementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B5D0);
  }
  return result;
}

unint64_t sub_1DC52553C()
{
  unint64_t result;

  result = qword_1F036B5D8;
  if (!qword_1F036B5D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63488C, &type metadata for AudioEngagementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B5D8);
  }
  return result;
}

unint64_t sub_1DC525584()
{
  unint64_t result;

  result = qword_1F036B5E0;
  if (!qword_1F036B5E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6348B4, &type metadata for AudioEngagementOriginationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B5E0);
  }
  return result;
}

uint64_t sub_1DC5255C8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64C7B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DC52564C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a3;
  v37 = a2;
  v39 = a1;
  v5 = sub_1DC62A1C4();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1DC62A0C8();
  v7 = *(_QWORD *)(v33 - 8);
  v8 = MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1DC5259A4();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DC62A77C();
  MEMORY[0x1E0C80A78](v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v32 - v20, v39, v18);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_1DC62A0BC();
    v21 = v33;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v33);
    v22 = sub_1DC525BD0(0, 1, 1, MEMORY[0x1E0DEE9D8], &qword_1EDB12588, (void (*)(uint64_t))MEMORY[0x1E0CAE690]);
    v24 = *(_QWORD *)(v22 + 16);
    v23 = *(_QWORD *)(v22 + 24);
    v25 = v12;
    if (v24 >= v23 >> 1)
      v22 = sub_1DC525BD0(v23 > 1, v24 + 1, 1, v22, &qword_1EDB12588, (void (*)(uint64_t))MEMORY[0x1E0CAE690]);
    *(_QWORD *)(v22 + 16) = v24 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v24, v10, v21);
    v26 = v34;
    sub_1DC62A1B8();
    v27 = sub_1DC62A1AC();
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v21);
    *(_QWORD *)a4 = v22;
    *(_OWORD *)(a4 + 8) = 0u;
    *(_OWORD *)(a4 + 24) = 0u;
    *(_OWORD *)(a4 + 40) = 0u;
    *(_OWORD *)(a4 + 56) = 0u;
    *(_QWORD *)(a4 + 72) = 0;
    *(_QWORD *)(a4 + 80) = 3;
    v30 = v38;
    *(_QWORD *)(a4 + 88) = v37;
    *(_QWORD *)(a4 + 96) = v30;
    *(_QWORD *)(a4 + 104) = v27;
    *(_QWORD *)(a4 + 112) = v29;
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_1DC525A4C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for AppSessionStartEventQueryItemsGenerator()
{
  return objc_opt_self();
}

uint64_t sub_1DC525990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1DC52564C(a1, a2, a3, a4);
}

void sub_1DC5259A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E730)
  {
    type metadata accessor for AppSessionStartEvent(255);
    sub_1DC525A04();
    v0 = sub_1DC62A77C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E730);
  }
}

unint64_t sub_1DC525A04()
{
  unint64_t result;
  uint64_t started;

  result = qword_1EDB102C8;
  if (!qword_1EDB102C8)
  {
    started = type metadata accessor for AppSessionStartEvent(255);
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AppSessionStartEvent, started);
    atomic_store(result, (unint64_t *)&qword_1EDB102C8);
  }
  return result;
}

unint64_t sub_1DC525A4C()
{
  unint64_t result;

  result = qword_1EDB12580;
  if (!qword_1EDB12580)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B1D4, &type metadata for QueryItemsGeneratorError);
    atomic_store(result, (unint64_t *)&qword_1EDB12580);
  }
  return result;
}

_QWORD *sub_1DC525A90(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1DC526038(0, (unint64_t *)&qword_1EDB11B80);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DC525DE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC525BA8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC525BD0(a1, a2, a3, a4, &qword_1EDB12588, (void (*)(uint64_t))MEMORY[0x1E0CAE690]);
}

uint64_t sub_1DC525BBC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DC525BD0(a1, a2, a3, a4, &qword_1EDB11B28, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1DC525BD0(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1DC525ED4(0, a5, a6);
  v13 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1DC62B370();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DC525F20(0, v11, v21, a4, (uint64_t (*)(_QWORD))a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1DC525DE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DC62B3C4();
  __break(1u);
  return result;
}

void sub_1DC525ED4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1DC62B514();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1DC525F20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1DC62B3C4();
  __break(1u);
  return result;
}

void sub_1DC526038(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1DC62B514();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t FeedViewExperienceData.isNewsFreeExperience.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeedViewExperienceData.isNewsFreeExperience.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*FeedViewExperienceData.isNewsFreeExperience.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewExperienceData.numberOfArticles.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t FeedViewExperienceData.numberOfArticles.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*FeedViewExperienceData.numberOfArticles.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewExperienceData.init(isNewsFreeExperience:numberOfArticles:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = result;
  *(_DWORD *)(a3 + 4) = a2;
  return result;
}

unint64_t sub_1DC5260C8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0xD000000000000014;
}

uint64_t sub_1DC526108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC52679C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC52612C()
{
  sub_1DC5262A4();
  return sub_1DC62B604();
}

uint64_t sub_1DC526154()
{
  sub_1DC5262A4();
  return sub_1DC62B610();
}

uint64_t FeedViewExperienceData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;

  sub_1DC526440(0, &qword_1EDB11AB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5262A4();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62B4C0();
  if (!v2)
  {
    v12 = 1;
    sub_1DC62B4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC5262A4()
{
  unint64_t result;

  result = qword_1EDB10A08;
  if (!qword_1EDB10A08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634B6C, &type metadata for FeedViewExperienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10A08);
  }
  return result;
}

uint64_t FeedViewExperienceData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  int v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1DC526440(0, &qword_1EDB11970, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5262A4();
  sub_1DC62B5E0();
  if (!v2)
  {
    v15 = 0;
    v10 = sub_1DC62B430();
    v14 = 1;
    v12 = sub_1DC62B460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_BYTE *)a2 = v10 & 1;
    *(_DWORD *)(a2 + 4) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC526440(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5262A4();
    v7 = a3(a1, &type metadata for FeedViewExperienceData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5264A0()
{
  unint64_t result;

  result = qword_1EDB10A28;
  if (!qword_1EDB10A28)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedViewExperienceData, &type metadata for FeedViewExperienceData);
    atomic_store(result, (unint64_t *)&qword_1EDB10A28);
  }
  return result;
}

unint64_t sub_1DC5264E8()
{
  unint64_t result;

  result = qword_1EDB10A20;
  if (!qword_1EDB10A20)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FeedViewExperienceData, &type metadata for FeedViewExperienceData);
    atomic_store(result, (unint64_t *)&qword_1EDB10A20);
  }
  return result;
}

uint64_t sub_1DC52652C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedViewExperienceData.init(from:)(a1, a2);
}

uint64_t sub_1DC526540(_QWORD *a1)
{
  return FeedViewExperienceData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for FeedViewExperienceData(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[8])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedViewExperienceData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedViewExperienceData()
{
  return &type metadata for FeedViewExperienceData;
}

uint64_t storeEnumTagSinglePayload for FeedViewExperienceData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC526644 + 4 * byte_1DC6349E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC526678 + 4 * byte_1DC6349E0[v4]))();
}

uint64_t sub_1DC526678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC526680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC526688);
  return result;
}

uint64_t sub_1DC526694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC52669CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5266A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5266A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedViewExperienceData.CodingKeys()
{
  return &type metadata for FeedViewExperienceData.CodingKeys;
}

unint64_t sub_1DC5266C8()
{
  unint64_t result;

  result = qword_1F036B5E8;
  if (!qword_1F036B5E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634B44, &type metadata for FeedViewExperienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B5E8);
  }
  return result;
}

unint64_t sub_1DC526710()
{
  unint64_t result;

  result = qword_1EDB10A18;
  if (!qword_1EDB10A18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634AB4, &type metadata for FeedViewExperienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10A18);
  }
  return result;
}

unint64_t sub_1DC526758()
{
  unint64_t result;

  result = qword_1EDB10A10;
  if (!qword_1EDB10A10)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634ADC, &type metadata for FeedViewExperienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10A10);
  }
  return result;
}

uint64_t sub_1DC52679C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64C910 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C930)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC526884(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB113B0, MEMORY[0x1E0CF8078]);
}

uint64_t static UserSegmentationTreatmentIDsChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB113C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB113B0, a1);
}

uint64_t sub_1DC5268C4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB113D0, MEMORY[0x1E0CF8380]);
}

uint64_t static UserSegmentationTreatmentIDsChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB113E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB113D0, a1);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UserSegmentationTreatmentIDsChangeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.userSegmentationTreatmentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0) + 20);
  sub_1DC5269B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB113F8);
}

void sub_1DC5269B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E830)
  {
    sub_1DC526A18();
    sub_1DC526A5C();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E830);
  }
}

unint64_t sub_1DC526A18()
{
  unint64_t result;

  result = qword_1EDB11130;
  if (!qword_1EDB11130)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserSegmentationTreatmentData, &type metadata for UserSegmentationTreatmentData);
    atomic_store(result, (unint64_t *)&qword_1EDB11130);
  }
  return result;
}

unint64_t sub_1DC526A5C()
{
  unint64_t result;

  result = qword_1EDB11128;
  if (!qword_1EDB11128)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserSegmentationTreatmentData, &type metadata for UserSegmentationTreatmentData);
    atomic_store(result, (unint64_t *)&qword_1EDB11128);
  }
  return result;
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.userSegmentationTreatmentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0) + 20);
  sub_1DC5269B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UserSegmentationTreatmentIDsChangeEvent.userSegmentationTreatmentData.modify())()
{
  type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0);
  return nullsub_1;
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0) + 20);
  sub_1DC5269B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.userSegmentationTreatmentData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0) + 20));
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036B660);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.init(eventData:userSegmentationTreatmentData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1DC526C30()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001DLL;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC526C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC527CE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC526C98()
{
  sub_1DC526E50();
  return sub_1DC62B604();
}

uint64_t sub_1DC526CC0()
{
  sub_1DC526E50();
  return sub_1DC62B610();
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  sub_1DC52711C(0, &qword_1F036B5F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC526E50();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0) + 20));
    v11[15] = 1;
    sub_1DC526A5C();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC526E50()
{
  unint64_t result;

  result = qword_1F036B5F8;
  if (!qword_1F036B5F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634D74, &type metadata for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B5F8);
  }
  return result;
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v20 = a2;
  v24 = sub_1DC62ABA8();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC52711C(0, &qword_1F036B600, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC526E50();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = a1;
  v19 = v6;
  v12 = (uint64_t)v11;
  v13 = v21;
  v27 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v22;
  v14 = v23;
  v16 = v24;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1DC526A18();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v14);
  *(_QWORD *)(v12 + *(int *)(v9 + 20)) = v25;
  sub_1DC527178(v12, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return sub_1DC5271BC(v12);
}

void sub_1DC52711C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC526E50();
    v7 = a3(a1, &type metadata for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC527178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5271BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5271F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserSegmentationTreatmentIDsChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC52720C(_QWORD *a1)
{
  return UserSegmentationTreatmentIDsChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC527220@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB113C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB113B0, a1);
}

uint64_t sub_1DC527244@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB113E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB113D0, a1);
}

uint64_t sub_1DC527268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC5269B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for UserSegmentationTreatmentIDsChangeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC5269B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC5269B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5269B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5269B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5269B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5269B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5275E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC5269B4();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC527660(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC5269B4();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5276DC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC5269B4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5279C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC527A50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1DC527AC8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC527B88 + 4 * byte_1DC634BC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC527BBC + 4 * byte_1DC634BC0[v4]))();
}

uint64_t sub_1DC527BBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC527BC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC527BCCLL);
  return result;
}

uint64_t sub_1DC527BD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC527BE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC527BE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC527BEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys()
{
  return &type metadata for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys;
}

unint64_t sub_1DC527C0C()
{
  unint64_t result;

  result = qword_1F036B698;
  if (!qword_1F036B698)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634D4C, &type metadata for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B698);
  }
  return result;
}

unint64_t sub_1DC527C54()
{
  unint64_t result;

  result = qword_1F036B6A0;
  if (!qword_1F036B6A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634CBC, &type metadata for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B6A0);
  }
  return result;
}

unint64_t sub_1DC527C9C()
{
  unint64_t result;

  result = qword_1F036B6A8;
  if (!qword_1F036B6A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634CE4, &type metadata for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B6A8);
  }
  return result;
}

uint64_t sub_1DC527CE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DC64C950)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC527DD8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036B6B0, MEMORY[0x1E0CF8078]);
}

uint64_t static ReorderWatchlistEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B6B0, a1);
}

uint64_t sub_1DC527E18(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036B6C8, MEMORY[0x1E0CF8380]);
}

uint64_t static ReorderWatchlistEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B6C8, a1);
}

uint64_t ReorderWatchlistEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ReorderWatchlistEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ReorderWatchlistEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ReorderWatchlistEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t ReorderWatchlistEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ReorderWatchlistEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1DC527F38()
{
  sub_1DC528098();
  return sub_1DC62B604();
}

uint64_t sub_1DC527F60()
{
  sub_1DC528098();
  return sub_1DC62B610();
}

uint64_t ReorderWatchlistEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5282B4(0, &qword_1F036B6E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC528098();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC528098()
{
  unint64_t result;

  result = qword_1F036B6E8;
  if (!qword_1F036B6E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634F60, &type metadata for ReorderWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B6E8);
  }
  return result;
}

uint64_t ReorderWatchlistEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5282B4(0, &qword_1F036B6F0, MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for ReorderWatchlistEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC528098();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    v15 = v19;
    v14 = v20;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_1DC528324(v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5282B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC528098();
    v7 = a3(a1, &type metadata for ReorderWatchlistEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for ReorderWatchlistEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036B7E0);
}

uint64_t sub_1DC528324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReorderWatchlistEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC528368@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReorderWatchlistEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC52837C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5282B4(0, &qword_1F036B6E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC528098();
  sub_1DC62B5F8();
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC52848C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B6B0, a1);
}

uint64_t sub_1DC5284B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B6C8, a1);
}

uint64_t getEnumTagSinglePayload for ReorderWatchlistEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5284E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t storeEnumTagSinglePayload for ReorderWatchlistEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5284F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600);
}

uint64_t type metadata accessor for ReorderWatchlistEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036B750);
}

uint64_t getEnumTagSinglePayload for ReorderWatchlistEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC528524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for ReorderWatchlistEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC52853C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670]);
}

uint64_t storeEnumTagSinglePayload for ReorderWatchlistEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC528588 + 4 * byte_1DC634DD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5285A8 + 4 * byte_1DC634DD5[v4]))();
}

_BYTE *sub_1DC528588(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5285A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5285B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5285B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5285C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5285C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReorderWatchlistEvent.Model.CodingKeys()
{
  return &type metadata for ReorderWatchlistEvent.Model.CodingKeys;
}

unint64_t sub_1DC5285E8()
{
  unint64_t result;

  result = qword_1F036B818;
  if (!qword_1F036B818)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634F38, &type metadata for ReorderWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B818);
  }
  return result;
}

unint64_t sub_1DC528630()
{
  unint64_t result;

  result = qword_1F036B820;
  if (!qword_1F036B820)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634EA8, &type metadata for ReorderWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B820);
  }
  return result;
}

unint64_t sub_1DC528678()
{
  unint64_t result;

  result = qword_1F036B828;
  if (!qword_1F036B828)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC634ED0, &type metadata for ReorderWatchlistEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B828);
  }
  return result;
}

StocksAnalytics::AdState_optional __swiftcall AdState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AdState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC528744 + 4 * byte_1DC634FB0[*v0]))(0x6C616974696E69, 0xE700000000000000);
}

uint64_t sub_1DC528744()
{
  return 0x676E69646E6570;
}

uint64_t sub_1DC528758()
{
  return 0x64656C696166;
}

uint64_t sub_1DC52876C()
{
  return 0x656C6C69666C7566;
}

void sub_1DC528788(char *a1)
{
  sub_1DC541E9C(*a1);
}

unint64_t sub_1DC528798()
{
  unint64_t result;

  result = qword_1F036B830;
  if (!qword_1F036B830)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdState, &type metadata for AdState);
    atomic_store(result, (unint64_t *)&qword_1F036B830);
  }
  return result;
}

void sub_1DC5287DC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC528828()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC528894()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5288D0()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC528928()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC528970()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::AdState_optional sub_1DC5289DC(Swift::String *a1)
{
  return AdState.init(rawValue:)(*a1);
}

uint64_t sub_1DC5289E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC528A18 + 4 * byte_1DC634FC0[*v0]))();
}

void sub_1DC528A18(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E69646E6570;
  a1[1] = v1;
}

void sub_1DC528A30(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

void sub_1DC528A48(_QWORD *a1@<X8>)
{
  *a1 = 0x656C6C69666C7566;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1DC528A68()
{
  sub_1DC528BDC();
  return sub_1DC62B13C();
}

uint64_t sub_1DC528AC4()
{
  sub_1DC528BDC();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AdState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC528B5C + 4 * byte_1DC634FC9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC528B90 + 4 * byte_1DC634FC4[v4]))();
}

uint64_t sub_1DC528B90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC528B98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC528BA0);
  return result;
}

uint64_t sub_1DC528BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC528BB4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC528BB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC528BC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdState()
{
  return &type metadata for AdState;
}

unint64_t sub_1DC528BDC()
{
  unint64_t result;

  result = qword_1EDB12170;
  if (!qword_1EDB12170)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdState, &type metadata for AdState);
    atomic_store(result, (unint64_t *)&qword_1EDB12170);
  }
  return result;
}

void ActionData.actionMethod.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ActionData.actionMethod.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ActionData.actionMethod.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ActionData __swiftcall ActionData.init(actionMethod:)(StocksAnalytics::ActionData actionMethod)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)actionMethod.actionMethod;
  return actionMethod;
}

uint64_t sub_1DC528C54()
{
  return 0x654D6E6F69746361;
}

uint64_t sub_1DC528C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x654D6E6F69746361 && a2 == 0xEC000000646F6874)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC528D20()
{
  sub_1DC528E74();
  return sub_1DC62B604();
}

uint64_t sub_1DC528D48()
{
  sub_1DC528E74();
  return sub_1DC62B610();
}

uint64_t ActionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC529034(0, &qword_1F036B838, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC528E74();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC528EB8();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC528E74()
{
  unint64_t result;

  result = qword_1F036B840;
  if (!qword_1F036B840)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635254, &type metadata for ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B840);
  }
  return result;
}

unint64_t sub_1DC528EB8()
{
  unint64_t result;

  result = qword_1F036B848;
  if (!qword_1F036B848)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ActionMethod, &type metadata for ActionMethod);
    atomic_store(result, (unint64_t *)&qword_1F036B848);
  }
  return result;
}

uint64_t ActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC529034(0, &qword_1F036B850, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC528E74();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC529090();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC529034(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC528E74();
    v7 = a3(a1, &type metadata for ActionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC529090()
{
  unint64_t result;

  result = qword_1F036B858;
  if (!qword_1F036B858)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ActionMethod, &type metadata for ActionMethod);
    atomic_store(result, (unint64_t *)&qword_1F036B858);
  }
  return result;
}

uint64_t sub_1DC5290DC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ActionData.init(from:)(a1, a2);
}

uint64_t sub_1DC5290F0(_QWORD *a1)
{
  return ActionData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC529150 + 4 * byte_1DC6350E1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC529184 + 4 * byte_1DC6350DC[v4]))();
}

uint64_t sub_1DC529184(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC52918C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC529194);
  return result;
}

uint64_t sub_1DC5291A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5291A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5291AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5291B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionData()
{
  return &type metadata for ActionData;
}

uint64_t storeEnumTagSinglePayload for ActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC529210 + 4 * byte_1DC6350E6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC529230 + 4 * byte_1DC6350EB[v4]))();
}

_BYTE *sub_1DC529210(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC529230(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC529238(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC529240(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC529248(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC529250(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActionData.CodingKeys()
{
  return &type metadata for ActionData.CodingKeys;
}

unint64_t sub_1DC529270()
{
  unint64_t result;

  result = qword_1F036B860;
  if (!qword_1F036B860)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63522C, &type metadata for ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B860);
  }
  return result;
}

unint64_t sub_1DC5292B8()
{
  unint64_t result;

  result = qword_1F036B868;
  if (!qword_1F036B868)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63519C, &type metadata for ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B868);
  }
  return result;
}

unint64_t sub_1DC529300()
{
  unint64_t result;

  result = qword_1F036B870;
  if (!qword_1F036B870)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6351C4, &type metadata for ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B870);
  }
  return result;
}

void AdCreativeData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdCreativeData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdCreativeData.type.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdCreativeData __swiftcall AdCreativeData.init(type:)(StocksAnalytics::AdCreativeData type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

uint64_t sub_1DC529378()
{
  return 1701869940;
}

uint64_t sub_1DC529388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC52940C()
{
  sub_1DC529560();
  return sub_1DC62B604();
}

uint64_t sub_1DC529434()
{
  sub_1DC529560();
  return sub_1DC62B610();
}

uint64_t AdCreativeData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC529720(0, &qword_1EDB11A10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC529560();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5295A4();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC529560()
{
  unint64_t result;

  result = qword_1EDB0F150;
  if (!qword_1EDB0F150)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635420, &type metadata for AdCreativeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F150);
  }
  return result;
}

unint64_t sub_1DC5295A4()
{
  unint64_t result;

  result = qword_1EDB0F178;
  if (!qword_1EDB0F178)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdCreativeType, &type metadata for AdCreativeType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F178);
  }
  return result;
}

uint64_t AdCreativeData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC529720(0, &qword_1F036B878, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC529560();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC52977C();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC529720(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC529560();
    v7 = a3(a1, &type metadata for AdCreativeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC52977C()
{
  unint64_t result;

  result = qword_1F036B880;
  if (!qword_1F036B880)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdCreativeType, &type metadata for AdCreativeType);
    atomic_store(result, (unint64_t *)&qword_1F036B880);
  }
  return result;
}

unint64_t sub_1DC5297C4()
{
  unint64_t result;

  result = qword_1EDB0F170;
  if (!qword_1EDB0F170)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdCreativeData, &type metadata for AdCreativeData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F170);
  }
  return result;
}

unint64_t sub_1DC52980C()
{
  unint64_t result;

  result = qword_1EDB0F168;
  if (!qword_1EDB0F168)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdCreativeData, &type metadata for AdCreativeData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F168);
  }
  return result;
}

uint64_t sub_1DC529850@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdCreativeData.init(from:)(a1, a2);
}

uint64_t sub_1DC529864(_QWORD *a1)
{
  return AdCreativeData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AdCreativeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5298C4 + 4 * byte_1DC6352A9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5298F8 + 4 * byte_1DC6352A4[v4]))();
}

uint64_t sub_1DC5298F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC529900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC529908);
  return result;
}

uint64_t sub_1DC529914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC52991CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC529920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC529928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdCreativeData()
{
  return &type metadata for AdCreativeData;
}

uint64_t storeEnumTagSinglePayload for AdCreativeData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC529984 + 4 * byte_1DC6352AE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5299A4 + 4 * byte_1DC6352B3[v4]))();
}

_BYTE *sub_1DC529984(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5299A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5299AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5299B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5299BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5299C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdCreativeData.CodingKeys()
{
  return &type metadata for AdCreativeData.CodingKeys;
}

unint64_t sub_1DC5299E4()
{
  unint64_t result;

  result = qword_1F036B888;
  if (!qword_1F036B888)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6353F8, &type metadata for AdCreativeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B888);
  }
  return result;
}

unint64_t sub_1DC529A2C()
{
  unint64_t result;

  result = qword_1EDB0F160;
  if (!qword_1EDB0F160)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635368, &type metadata for AdCreativeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F160);
  }
  return result;
}

unint64_t sub_1DC529A74()
{
  unint64_t result;

  result = qword_1EDB0F158;
  if (!qword_1EDB0F158)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635390, &type metadata for AdCreativeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F158);
  }
  return result;
}

uint64_t DebugData.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DebugData.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DebugData.name.modify())()
{
  return nullsub_1;
}

StocksAnalytics::DebugData __swiftcall DebugData.init(name:)(StocksAnalytics::DebugData name)
{
  StocksAnalytics::DebugData *v1;

  *v1 = name;
  return name;
}

uint64_t sub_1DC529B30()
{
  return 1701667182;
}

uint64_t sub_1DC529B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC529BC4()
{
  sub_1DC529D08();
  return sub_1DC62B604();
}

uint64_t sub_1DC529BEC()
{
  sub_1DC529D08();
  return sub_1DC62B610();
}

uint64_t DebugData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC529E70(0, &qword_1F036B890, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC529D08();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC529D08()
{
  unint64_t result;

  result = qword_1F036B898;
  if (!qword_1F036B898)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6355E0, &type metadata for DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B898);
  }
  return result;
}

uint64_t DebugData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC529E70(0, &qword_1F036B8A0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC529D08();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B424();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC529E70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC529D08();
    v7 = a3(a1, &type metadata for DebugData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC529ECC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DebugData.init(from:)(a1, a2);
}

uint64_t sub_1DC529EE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC529E70(0, &qword_1F036B890, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC529D08();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for DebugData()
{
  return &type metadata for DebugData;
}

uint64_t storeEnumTagSinglePayload for DebugData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC52A024 + 4 * byte_1DC635470[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC52A044 + 4 * byte_1DC635475[v4]))();
}

_BYTE *sub_1DC52A024(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC52A044(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC52A04C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC52A054(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC52A05C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC52A064(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugData.CodingKeys()
{
  return &type metadata for DebugData.CodingKeys;
}

unint64_t sub_1DC52A084()
{
  unint64_t result;

  result = qword_1F036B8A8;
  if (!qword_1F036B8A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6355B8, &type metadata for DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B8A8);
  }
  return result;
}

unint64_t sub_1DC52A0CC()
{
  unint64_t result;

  result = qword_1F036B8B0;
  if (!qword_1F036B8B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635528, &type metadata for DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B8B0);
  }
  return result;
}

unint64_t sub_1DC52A114()
{
  unint64_t result;

  result = qword_1F036B8B8;
  if (!qword_1F036B8B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635550, &type metadata for DebugData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B8B8);
  }
  return result;
}

uint64_t sub_1DC52A158(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036B8C0, MEMORY[0x1E0CF8078]);
}

uint64_t static ShareEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B8C0, a1);
}

uint64_t sub_1DC52A198(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036B8D8, MEMORY[0x1E0CF8380]);
}

uint64_t static ShareEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0368FF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B8D8, a1);
}

uint64_t ShareEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ShareEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ShareEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ShareEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12600);
}

uint64_t ShareEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.newsArticleData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShareEvent.actionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.actionData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShareEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.groupData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShareEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.feedData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShareEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.viewData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShareEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.userArticleContextData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.shareContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC52A878()
{
  unint64_t result;

  result = qword_1EDB12598;
  if (!qword_1EDB12598)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ShareContextData, &type metadata for ShareContextData);
    atomic_store(result, (unint64_t *)&qword_1EDB12598);
  }
  return result;
}

unint64_t sub_1DC52A8BC()
{
  unint64_t result;

  result = qword_1EDB125A0;
  if (!qword_1EDB125A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ShareContextData, &type metadata for ShareContextData);
    atomic_store(result, (unint64_t *)&qword_1EDB125A0);
  }
  return result;
}

uint64_t ShareEvent.shareContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.shareContextData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShareEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.issueData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ShareEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ShareEvent.channelData.modify())()
{
  type metadata accessor for ShareEvent(0);
  return nullsub_1;
}

uint64_t ShareEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ShareEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
}

uint64_t ShareEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ShareEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ShareEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB126B0);
}

uint64_t ShareEvent.Model.actionData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShareEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ShareEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t ShareEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 36));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShareEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t ShareEvent.Model.shareContextData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 44));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 48));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ShareEvent.Model.init(eventData:newsArticleData:actionData:groupData:feedData:viewData:userArticleContextData:shareContextData:issueData:channelData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t *a6@<X5>, __int16 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __n128 *a11)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  __n128 *v29;
  __n128 result;
  char v31;
  char v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;

  v33 = *a2;
  v13 = *((_QWORD *)a2 + 2);
  v14 = *((_QWORD *)a2 + 3);
  v15 = *((_BYTE *)a2 + 32);
  v16 = *((_QWORD *)a2 + 5);
  v17 = *((_BYTE *)a2 + 48);
  v18 = *((_QWORD *)a2 + 7);
  v19 = *((_BYTE *)a2 + 64);
  v20 = *((_BYTE *)a2 + 65);
  v31 = *((_BYTE *)a2 + 67);
  v32 = *((_BYTE *)a2 + 66);
  v34 = *a3;
  v37 = a4[1];
  v38 = *a4;
  v35 = *((_QWORD *)a4 + 5);
  v36 = *((_QWORD *)a4 + 4);
  v40 = *a5;
  v39 = *((_QWORD *)a5 + 2);
  v42 = a6[1];
  v43 = *a6;
  v41 = *((_WORD *)a6 + 8);
  v44 = *a7;
  v46 = *a8;
  v45 = a8[1];
  v47 = a10[1];
  v48 = *a10;
  v53 = *a11;
  v51 = a11[1].n128_u64[1];
  v52 = a11[1].n128_u64[0];
  v49 = a11[2].n128_u8[1];
  v50 = a11[2].n128_u8[0];
  v21 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (int *)type metadata accessor for ShareEvent.Model(0);
  v23 = a9 + v22[5];
  *(_OWORD *)v23 = v33;
  *(_QWORD *)(v23 + 16) = v13;
  *(_QWORD *)(v23 + 24) = v14;
  *(_BYTE *)(v23 + 32) = v15;
  *(_QWORD *)(v23 + 40) = v16;
  *(_BYTE *)(v23 + 48) = v17;
  *(_QWORD *)(v23 + 56) = v18;
  *(_BYTE *)(v23 + 64) = v19;
  *(_BYTE *)(v23 + 65) = v20;
  *(_BYTE *)(v23 + 66) = v32;
  *(_BYTE *)(v23 + 67) = v31;
  *(_BYTE *)(a9 + v22[6]) = v34;
  v24 = a9 + v22[7];
  *(_OWORD *)v24 = v38;
  *(_OWORD *)(v24 + 16) = v37;
  *(_QWORD *)(v24 + 32) = v36;
  *(_QWORD *)(v24 + 40) = v35;
  v25 = a9 + v22[8];
  *(_OWORD *)v25 = v40;
  *(_QWORD *)(v25 + 16) = v39;
  v26 = a9 + v22[9];
  *(_QWORD *)v26 = v43;
  *(_QWORD *)(v26 + 8) = v42;
  *(_WORD *)(v26 + 16) = v41;
  *(_WORD *)(a9 + v22[10]) = v44;
  v27 = (_QWORD *)(a9 + v22[11]);
  *v27 = v46;
  v27[1] = v45;
  v28 = (_QWORD *)(a9 + v22[12]);
  *v28 = v48;
  v28[1] = v47;
  v29 = (__n128 *)(a9 + v22[13]);
  result = v53;
  *v29 = v53;
  v29[1].n128_u64[0] = v52;
  v29[1].n128_u64[1] = v51;
  v29[2].n128_u8[0] = v50;
  v29[2].n128_u8[1] = v49;
  return result;
}

uint64_t sub_1DC52B314(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC52B34C + 4 * byte_1DC635630[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC52B34C()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC52B370()
{
  return 0x61446E6F69746361;
}

uint64_t sub_1DC52B38C()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC52B3A0()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC52B3C8()
{
  return 0xD000000000000016;
}

unint64_t sub_1DC52B3E8()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC52B404()
{
  return 0x7461446575737369;
}

uint64_t sub_1DC52B418()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC52B438()
{
  unsigned __int8 *v0;

  return sub_1DC52B314(*v0);
}

uint64_t sub_1DC52B440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC52EC80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC52B464()
{
  sub_1DC52B8D0();
  return sub_1DC62B604();
}

uint64_t sub_1DC52B48C()
{
  sub_1DC52B8D0();
  return sub_1DC62B610();
}

uint64_t ShareEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  __int128 *v26;
  __int16 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  char v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v3 = v1;
  sub_1DC52C044(0, &qword_1F036B8F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC52B8D0();
  sub_1DC62B5F8();
  LOBYTE(v39) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ShareEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v39 = v12;
    *(_QWORD *)&v40 = v13;
    *((_QWORD *)&v40 + 1) = v14;
    LOBYTE(v41) = v15;
    *((_QWORD *)&v41 + 1) = v16;
    v42 = v17;
    v43 = v18;
    v44 = v19;
    v45 = v20;
    v46 = v21;
    v47 = (char)v11;
    v38 = 1;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    LOBYTE(v39) = *(_BYTE *)(v3 + v10[6]);
    v38 = 2;
    sub_1DC4CECE4();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[7]);
    v23 = v22[1];
    v39 = *v22;
    v40 = v23;
    v41 = v22[2];
    v38 = 3;
    sub_1DC4C9004();
    sub_1DC62B490();
    v24 = (__int128 *)(v3 + v10[8]);
    v25 = *((_QWORD *)v24 + 2);
    v39 = *v24;
    *(_QWORD *)&v40 = v25;
    v38 = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v26 = (__int128 *)(v3 + v10[9]);
    v27 = *((_WORD *)v26 + 8);
    v39 = *v26;
    LOWORD(v40) = v27;
    v38 = 5;
    sub_1DC4BEDF0();
    sub_1DC62B490();
    LOWORD(v39) = *(_WORD *)(v3 + v10[10]);
    v38 = 6;
    sub_1DC4F4A98();
    sub_1DC62B4E4();
    v28 = (uint64_t *)(v3 + v10[11]);
    v30 = *v28;
    v29 = v28[1];
    *(_QWORD *)&v39 = v30;
    *((_QWORD *)&v39 + 1) = v29;
    v38 = 7;
    sub_1DC52A8BC();
    sub_1DC62B4E4();
    v39 = *(_OWORD *)(v3 + v10[12]);
    v38 = 8;
    sub_1DC4C9674();
    sub_1DC62B490();
    v31 = (__int128 *)(v3 + v10[13]);
    v32 = *v31;
    v33 = *((_QWORD *)v31 + 2);
    v34 = *((_QWORD *)v31 + 3);
    v35 = *((_BYTE *)v31 + 32);
    LOBYTE(v31) = *((_BYTE *)v31 + 33);
    v39 = v32;
    *(_QWORD *)&v40 = v33;
    *((_QWORD *)&v40 + 1) = v34;
    LOBYTE(v41) = v35;
    BYTE1(v41) = (_BYTE)v31;
    v38 = 9;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC52B8D0()
{
  unint64_t result;

  result = qword_1F036B8F8;
  if (!qword_1F036B8F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63591C, &type metadata for ShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B8F8);
  }
  return result;
}

uint64_t ShareEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  __int16 v29;
  char *v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  char v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v5 = sub_1DC62ABA8();
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC52C044(0, &qword_1F036B900, MEMORY[0x1E0DED048]);
  v42 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - v10;
  v46 = type metadata accessor for ShareEvent.Model(0);
  MEMORY[0x1E0C80A78](v46);
  v44 = a1;
  v45 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC52B8D0();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v40 = a2;
  v41 = v9;
  LOBYTE(v47) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v13 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v45, v7, v5);
  v56 = 1;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v14 = (int *)v46;
  v15 = v48;
  v16 = v49;
  v17 = *((_QWORD *)&v49 + 1);
  v18 = v50;
  v19 = v51;
  v20 = v52;
  v21 = v53;
  v22 = v54;
  v23 = v55;
  v24 = &v13[*(int *)(v46 + 20)];
  *(_OWORD *)v24 = v47;
  *((_OWORD *)v24 + 1) = v15;
  v24[32] = v16;
  *((_QWORD *)v24 + 5) = v17;
  v24[48] = v18;
  *((_QWORD *)v24 + 7) = v19;
  v24[64] = v20;
  v24[65] = v21;
  v24[66] = v22;
  v24[67] = v23;
  v56 = 2;
  sub_1DC4CECA0();
  sub_1DC62B454();
  v13[v14[6]] = v47;
  v56 = 3;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v25 = &v13[v14[7]];
  v26 = v48;
  *(_OWORD *)v25 = v47;
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v49;
  v56 = 4;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v27 = v48;
  v28 = &v13[v14[8]];
  *(_OWORD *)v28 = v47;
  *((_QWORD *)v28 + 2) = v27;
  v56 = 5;
  sub_1DC4BEDAC();
  sub_1DC62B400();
  v29 = v48;
  v30 = &v13[v14[9]];
  *(_OWORD *)v30 = v47;
  *((_WORD *)v30 + 8) = v29;
  v56 = 6;
  sub_1DC4F4A54();
  sub_1DC62B454();
  *(_WORD *)&v13[v14[10]] = v47;
  v56 = 7;
  sub_1DC52A878();
  sub_1DC62B454();
  v31 = *((_QWORD *)&v47 + 1);
  v32 = &v13[v14[11]];
  *(_QWORD *)v32 = v47;
  *((_QWORD *)v32 + 1) = v31;
  v56 = 8;
  sub_1DC4C9630();
  sub_1DC62B400();
  *(_OWORD *)&v13[v14[12]] = v47;
  v56 = 9;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v42);
  v33 = v48;
  v34 = v49;
  v35 = BYTE1(v49);
  v36 = (uint64_t)v45;
  v37 = &v45[*(int *)(v46 + 52)];
  *(_OWORD *)v37 = v47;
  *((_OWORD *)v37 + 1) = v33;
  v37[32] = v34;
  v37[33] = v35;
  sub_1DC52C0A0(v36, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_1DC52C0E4(v36);
}

void sub_1DC52C044(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC52B8D0();
    v7 = a3(a1, &type metadata for ShareEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC52C0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC52C0E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC52C120@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC52C134(_QWORD *a1)
{
  return ShareEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC52C148@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B8C0, a1);
}

uint64_t sub_1DC52C16C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0368FF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B8D8, a1);
}

uint64_t sub_1DC52C190@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ShareEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for ShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for ShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for ShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC52D66C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ShareEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC52D92C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC52DBE8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB12190, (void (*)(void))sub_1DC4CECA0, (void (*)(void))sub_1DC4CECE4);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB12590, (void (*)(void))sub_1DC52A878, (void (*)(void))sub_1DC52A8BC);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ShareEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v10[48] = v11[48];
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v14 = a3[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)((char *)a2 + v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *v15 = *v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      *((_QWORD *)v15 + 2) = v17;
      *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);
      v18 = *((_QWORD *)v16 + 5);
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      *((_QWORD *)v15 + 5) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    }
    v21 = a3[8];
    v22 = a3[9];
    v23 = (char *)a1 + v21;
    v24 = (char *)a2 + v21;
    *v23 = *v24;
    v25 = *((_QWORD *)v24 + 2);
    *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
    *((_QWORD *)v23 + 2) = v25;
    v26 = (char *)a1 + v22;
    v27 = (char *)a2 + v22;
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    *((_WORD *)v26 + 8) = *((_WORD *)v27 + 8);
    v29 = a3[11];
    *(_WORD *)((char *)a1 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    v30 = (_QWORD *)((char *)a1 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = a3[12];
    v34 = a3[13];
    v35 = (_QWORD *)((char *)a1 + v33);
    v36 = (_QWORD *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (char *)a1 + v34;
    v39 = (char *)a2 + v34;
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = *((_QWORD *)v39 + 3);
    *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
    *((_QWORD *)v38 + 3) = v41;
    v38[32] = v39[32];
    v38[33] = v39[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ShareEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(_BYTE *)v14 = *(_BYTE *)v15;
    *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
    *(_QWORD *)(v14 + 16) = v16;
    *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
    v17 = *(_QWORD *)(v15 + 40);
    *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
    *(_QWORD *)(v14 + 40) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  }
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  v26 = *(_QWORD *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  *(_WORD *)(v24 + 16) = *(_WORD *)(v25 + 16);
  v27 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[12];
  v32 = a3[13];
  v33 = (_QWORD *)(a1 + v31);
  v34 = (_QWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = a1 + v32;
  v37 = a2 + v32;
  v38 = *(_QWORD *)(v37 + 8);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_QWORD *)(v36 + 8) = v38;
  v39 = *(_QWORD *)(v37 + 24);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
  *(_QWORD *)(v36 + 24) = v39;
  *(_BYTE *)(v36 + 32) = *(_BYTE *)(v37 + 32);
  *(_BYTE *)(v36 + 33) = *(_BYTE *)(v37 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *(_QWORD *)(a1 + v11 + 16);
  v15 = *(_QWORD *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
      *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
      *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
      *(_QWORD *)(v12 + 40) = *((_QWORD *)v13 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v12);
      v17 = v13[1];
      v16 = v13[2];
      *(_OWORD *)v12 = *v13;
      *(_OWORD *)(v12 + 16) = v17;
      *(_OWORD *)(v12 + 32) = v16;
    }
  }
  else if (v15)
  {
    *(_BYTE *)v12 = *(_BYTE *)v13;
    *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
    *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
    *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
    *(_QWORD *)(v12 + 40) = *((_QWORD *)v13 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *v13;
    v19 = v13[2];
    *(_OWORD *)(v12 + 16) = v13[1];
    *(_OWORD *)(v12 + 32) = v19;
    *(_OWORD *)v12 = v18;
  }
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  *(_BYTE *)(v24 + 17) = *(_BYTE *)(v25 + 17);
  v26 = a3[10];
  v27 = (_BYTE *)(a1 + v26);
  v28 = (_BYTE *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  v29 = a3[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[12];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[13];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(a2 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
  *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 32) = *(_BYTE *)(v37 + 32);
  *(_BYTE *)(v36 + 33) = *(_BYTE *)(v37 + 33);
  return a1;
}

uint64_t initializeWithTake for ShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_OWORD *)(a1 + v13);
  v16 = (_OWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  v18 = a1 + v14;
  v19 = a2 + v14;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  *(_WORD *)(a1 + v21) = *(_WORD *)(a2 + v21);
  v24 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v25 = a3[13];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_WORD *)(v26 + 32) = *(_WORD *)(v27 + 32);
  return a1;
}

uint64_t assignWithTake for ShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  v12 = a3[6];
  v13 = a3[7];
  v14 = *(_BYTE *)(a2 + v12);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  *(_BYTE *)(a1 + v12) = v14;
  v15 = a1 + v13;
  v16 = a2 + v13;
  if (!*(_QWORD *)(a1 + v13 + 16))
    goto LABEL_5;
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
    sub_1DC4CDAF4(a1 + v13);
LABEL_5:
    v19 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v19;
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  v18 = *(_QWORD *)(v16 + 40);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = v24;
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25 + 8);
  *(_QWORD *)v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(v26 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  v29 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[12];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(v41 + 8);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_QWORD *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v41 + 24);
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(v41 + 16);
  *(_QWORD *)(v40 + 24) = v43;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v40 + 32) = *(_BYTE *)(v41 + 32);
  *(_BYTE *)(v40 + 33) = *(_BYTE *)(v41 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC52E914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC52E9A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC52EA1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShareEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DC52EB28 + 4 * byte_1DC63563F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DC52EB5C + 4 * byte_1DC63563A[v4]))();
}

uint64_t sub_1DC52EB5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC52EB64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC52EB6CLL);
  return result;
}

uint64_t sub_1DC52EB78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC52EB80);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DC52EB84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC52EB8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShareEvent.Model.CodingKeys()
{
  return &type metadata for ShareEvent.Model.CodingKeys;
}

unint64_t sub_1DC52EBAC()
{
  unint64_t result;

  result = qword_1F036B908;
  if (!qword_1F036B908)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6358F4, &type metadata for ShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B908);
  }
  return result;
}

unint64_t sub_1DC52EBF4()
{
  unint64_t result;

  result = qword_1F036B910;
  if (!qword_1F036B910)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635864, &type metadata for ShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B910);
  }
  return result;
}

unint64_t sub_1DC52EC3C()
{
  unint64_t result;

  result = qword_1F036B918;
  if (!qword_1F036B918)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63588C, &type metadata for ShareEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B918);
  }
  return result;
}

uint64_t sub_1DC52EC80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C4B0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C970 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t ShareContextData.iosActivityType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShareContextData.iosActivityType.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ShareContextData.iosActivityType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ShareContextData __swiftcall ShareContextData.init(iosActivityType:)(StocksAnalytics::ShareContextData iosActivityType)
{
  StocksAnalytics::ShareContextData *v1;

  *v1 = iosActivityType;
  return iosActivityType;
}

uint64_t sub_1DC52F15C()
{
  return 0x7669746341736F69;
}

uint64_t sub_1DC52F180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7669746341736F69 && a2 == 0xEF65707954797469)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC52F238()
{
  sub_1DC52F37C();
  return sub_1DC62B604();
}

uint64_t sub_1DC52F260()
{
  sub_1DC52F37C();
  return sub_1DC62B610();
}

uint64_t ShareContextData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC52F4E4(0, &qword_1F036B920, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC52F37C();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC52F37C()
{
  unint64_t result;

  result = qword_1F036B928;
  if (!qword_1F036B928)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635AE4, &type metadata for ShareContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B928);
  }
  return result;
}

uint64_t ShareContextData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC52F4E4(0, &qword_1F036B930, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC52F37C();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B424();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC52F4E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC52F37C();
    v7 = a3(a1, &type metadata for ShareContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC52F548@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ShareContextData.init(from:)(a1, a2);
}

uint64_t sub_1DC52F55C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC52F4E4(0, &qword_1F036B920, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC52F37C();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ShareContextData()
{
  return &type metadata for ShareContextData;
}

uint64_t storeEnumTagSinglePayload for ShareContextData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC52F6A0 + 4 * byte_1DC635970[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC52F6C0 + 4 * byte_1DC635975[v4]))();
}

_BYTE *sub_1DC52F6A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC52F6C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC52F6C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC52F6D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC52F6D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC52F6E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShareContextData.CodingKeys()
{
  return &type metadata for ShareContextData.CodingKeys;
}

unint64_t sub_1DC52F700()
{
  unint64_t result;

  result = qword_1F036B938;
  if (!qword_1F036B938)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635ABC, &type metadata for ShareContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B938);
  }
  return result;
}

unint64_t sub_1DC52F748()
{
  unint64_t result;

  result = qword_1F036B940;
  if (!qword_1F036B940)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635A2C, &type metadata for ShareContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B940);
  }
  return result;
}

unint64_t sub_1DC52F790()
{
  unint64_t result;

  result = qword_1F036B948;
  if (!qword_1F036B948)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635A54, &type metadata for ShareContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B948);
  }
  return result;
}

void OrientationData.deviceOrientation.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *OrientationData.deviceOrientation.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*OrientationData.deviceOrientation.modify())()
{
  return nullsub_1;
}

void OrientationData.interfaceOrientation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *OrientationData.interfaceOrientation.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*OrientationData.interfaceOrientation.modify())()
{
  return nullsub_1;
}

StocksAnalytics::OrientationData __swiftcall OrientationData.init(deviceOrientation:interfaceOrientation:)(StocksAnalytics::DeviceOrientation deviceOrientation, StocksAnalytics::InterfaceOrientation interfaceOrientation)
{
  _BYTE *v2;
  char v3;
  StocksAnalytics::OrientationData result;

  v3 = *(_BYTE *)interfaceOrientation;
  *v2 = *(_BYTE *)deviceOrientation;
  v2[1] = v3;
  result.deviceOrientation = deviceOrientation;
  return result;
}

uint64_t sub_1DC52F838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC52FC74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC52F85C()
{
  sub_1DC4B8698();
  return sub_1DC62B604();
}

uint64_t sub_1DC52F884()
{
  sub_1DC4B8698();
  return sub_1DC62B610();
}

uint64_t OrientationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1DC4B85B4(0, &qword_1EDB11940, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B8698();
  sub_1DC62B5E0();
  if (!v2)
  {
    v16 = 0;
    sub_1DC52FA30();
    sub_1DC62B454();
    v10 = v17;
    v14 = 1;
    sub_1DC52FA74();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1DC52FA30()
{
  unint64_t result;

  result = qword_1EDB0F9C0;
  if (!qword_1EDB0F9C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for DeviceOrientation, &type metadata for DeviceOrientation);
    atomic_store(result, (unint64_t *)&qword_1EDB0F9C0);
  }
  return result;
}

unint64_t sub_1DC52FA74()
{
  unint64_t result;

  result = qword_1EDB10378;
  if (!qword_1EDB10378)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for InterfaceOrientation, &type metadata for InterfaceOrientation);
    atomic_store(result, (unint64_t *)&qword_1EDB10378);
  }
  return result;
}

uint64_t sub_1DC52FAB8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OrientationData.init(from:)(a1, a2);
}

uint64_t getEnumTagSinglePayload for OrientationData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 65284 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65284 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65284;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65284;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65284;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OrientationData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65284 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65284 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC52FBAC + 4 * byte_1DC635B39[v4]))();
  *a1 = a2 - 252;
  return ((uint64_t (*)(void))((char *)sub_1DC52FBE0 + 4 * byte_1DC635B34[v4]))();
}

uint64_t sub_1DC52FBE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC52FBE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1DC52FBF0);
  return result;
}

uint64_t sub_1DC52FBFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1DC52FC04);
  *(_BYTE *)(result + 1) = a2 + 4;
  return result;
}

uint64_t sub_1DC52FC08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC52FC10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrientationData.CodingKeys()
{
  return &type metadata for OrientationData.CodingKeys;
}

unint64_t sub_1DC52FC30()
{
  unint64_t result;

  result = qword_1F036B950;
  if (!qword_1F036B950)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635C8C, &type metadata for OrientationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B950);
  }
  return result;
}

uint64_t sub_1DC52FC74(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64C990 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64C9B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

StocksAnalytics::VideoAdEngagementType_optional __swiftcall VideoAdEngagementType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::VideoAdEngagementType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t VideoAdEngagementType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC52FDDC + 4 * byte_1DC635D10[*v0]))(2036427888, 0xE400000000000000);
}

uint64_t sub_1DC52FDDC()
{
  return 0x6573756170;
}

uint64_t sub_1DC52FDF0()
{
  return 0x656D75736572;
}

uint64_t sub_1DC52FE04()
{
  return 0x6D6F436863746177;
}

uint64_t sub_1DC52FE28()
{
  return 1885956979;
}

uint64_t sub_1DC52FE34()
{
  return 0x726F4D6E7261656CLL;
}

void sub_1DC52FE50(char *a1)
{
  sub_1DC54345C(*a1);
}

unint64_t sub_1DC52FE60()
{
  unint64_t result;

  result = qword_1F036B958;
  if (!qword_1F036B958)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdEngagementType, &type metadata for VideoAdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1F036B958);
  }
  return result;
}

void sub_1DC52FEA4()
{
  char *v0;

  sub_1DC601DE8(*v0);
}

void sub_1DC52FEAC()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC52FEE0()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC52FF68(uint64_t a1)
{
  char *v1;

  sub_1DC603890(a1, *v1);
}

StocksAnalytics::VideoAdEngagementType_optional sub_1DC52FF70(Swift::String *a1)
{
  return VideoAdEngagementType.init(rawValue:)(*a1);
}

uint64_t sub_1DC52FF7C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC52FFA4 + 4 * byte_1DC635D1C[*v0]))();
}

void sub_1DC52FFA4(_QWORD *a1@<X8>)
{
  *a1 = 0x6573756170;
  a1[1] = 0xE500000000000000;
}

void sub_1DC52FFBC(_QWORD *a1@<X8>)
{
  *a1 = 0x656D75736572;
  a1[1] = 0xE600000000000000;
}

void sub_1DC52FFD4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "watchComplete");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1DC52FFFC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1885956979;
  a1[1] = v1;
}

void sub_1DC53000C(_QWORD *a1@<X8>)
{
  *a1 = 0x726F4D6E7261656CLL;
  a1[1] = 0xE900000000000065;
}

uint64_t sub_1DC53002C()
{
  sub_1DC5301A0();
  return sub_1DC62B13C();
}

uint64_t sub_1DC530088()
{
  sub_1DC5301A0();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC530120 + 4 * byte_1DC635D27[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC530154 + 4 * byte_1DC635D22[v4]))();
}

uint64_t sub_1DC530154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53015C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC530164);
  return result;
}

uint64_t sub_1DC530170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC530178);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC53017C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC530184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementType()
{
  return &type metadata for VideoAdEngagementType;
}

unint64_t sub_1DC5301A0()
{
  unint64_t result;

  result = qword_1F036B960;
  if (!qword_1F036B960)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdEngagementType, &type metadata for VideoAdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1F036B960);
  }
  return result;
}

uint64_t AdJournalEntryData.init(status:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  void *v15;
  uint64_t result;
  char v17;
  char v18;
  int v19;
  uint64_t v20;
  void *v21;
  char *v22;
  int v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;

  v27 = a2;
  v26 = sub_1DC62AFE0();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62AFF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC62B004();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x1E0D52EB0])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    v15 = (void *)sub_1DC62AFD4();
    sub_1DC5304D4(v15, &v28);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = v28;
  }
  else
  {
    v19 = v14;
    if (v14 == *MEMORY[0x1E0D52EE8])
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
      v20 = v26;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v26);
      v21 = (void *)sub_1DC62AFD4();
      sub_1DC5304D4(v21, &v29);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v20);
      v17 = v29;
      v18 = 3;
      goto LABEL_11;
    }
    if (v14 == *MEMORY[0x1E0D52ED8])
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      v18 = 0;
      v17 = 4;
      goto LABEL_11;
    }
    if (v14 == *MEMORY[0x1E0D52F00] || v14 == *MEMORY[0x1E0D52F08])
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      v17 = 4;
      v18 = 2;
      goto LABEL_11;
    }
    if (v14 == *MEMORY[0x1E0D52EF0])
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      v18 = 4;
      v17 = 4;
      goto LABEL_11;
    }
    v23 = *MEMORY[0x1E0D52EF8];
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    result = v24(a1, v10);
    if (v19 == v23)
    {
      v17 = 4;
      v18 = 5;
      goto LABEL_11;
    }
    result = v24((uint64_t)v13, v10);
    v17 = 4;
  }
  v18 = 1;
LABEL_11:
  v22 = v27;
  *v27 = v18;
  v22[1] = v17;
  return result;
}

void sub_1DC5304D4(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  id v19;
  int v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;

  v26 = a2;
  v3 = sub_1DC62B01C();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62AF98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DC62AF8C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1;
  v14 = a1;
  sub_1DC5307AC();
  if (!swift_dynamicCast())
  {
LABEL_5:

    v27 = a1;
    v19 = a1;
    if (swift_dynamicCast())
    {
      v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
      if (v20 == *MEMORY[0x1E0D52818] || v20 == *MEMORY[0x1E0D52828] || v20 == *MEMORY[0x1E0D52820])
      {

        v18 = 2;
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

    v27 = a1;
    if (swift_dynamicCast())
    {
      v23 = v25;
      if ((*(unsigned int (**)(char *, uint64_t))(v25 + 88))(v5, v3) == *MEMORY[0x1E0D53720])
      {

        v18 = 1;
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
    }

    v18 = 3;
    goto LABEL_20;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) != *MEMORY[0x1E0D52808])
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_5;
  }

  (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
  swift_bridgeObjectRelease();
  sub_1DC530800();
  v16 = &v13[*(int *)(v15 + 48)];
  v17 = sub_1DC62B010();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);

  v18 = 0;
LABEL_20:
  *v26 = v18;
}

unint64_t sub_1DC5307AC()
{
  unint64_t result;

  result = qword_1EDB11B90;
  if (!qword_1EDB11B90)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB11B90);
  }
  return result;
}

void sub_1DC530800()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F036B968)
  {
    sub_1DC62B010();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F036B968);
  }
}

void AddToCalendarResultData.calendarResultType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AddToCalendarResultData.calendarResultType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AddToCalendarResultData.calendarResultType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AddToCalendarResultData __swiftcall AddToCalendarResultData.init(calendarResultType:)(StocksAnalytics::AddToCalendarResultData calendarResultType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)calendarResultType.calendarResultType;
  return calendarResultType;
}

unint64_t sub_1DC53089C()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC5308B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC530F8C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC5308E0()
{
  sub_1DC530A34();
  return sub_1DC62B604();
}

uint64_t sub_1DC530908()
{
  sub_1DC530A34();
  return sub_1DC62B610();
}

uint64_t AddToCalendarResultData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC530BF4(0, &qword_1F036B970, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC530A34();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC530A78();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC530A34()
{
  unint64_t result;

  result = qword_1F036B978;
  if (!qword_1F036B978)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635FDC, &type metadata for AddToCalendarResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B978);
  }
  return result;
}

unint64_t sub_1DC530A78()
{
  unint64_t result;

  result = qword_1F036B980;
  if (!qword_1F036B980)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarResultType, &type metadata for CalendarResultType);
    atomic_store(result, (unint64_t *)&qword_1F036B980);
  }
  return result;
}

uint64_t AddToCalendarResultData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC530BF4(0, &qword_1F036B988, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC530A34();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC530C50();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC530BF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC530A34();
    v7 = a3(a1, &type metadata for AddToCalendarResultData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC530C50()
{
  unint64_t result;

  result = qword_1F036B990;
  if (!qword_1F036B990)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarResultType, &type metadata for CalendarResultType);
    atomic_store(result, (unint64_t *)&qword_1F036B990);
  }
  return result;
}

unint64_t sub_1DC530C98()
{
  unint64_t result;

  result = qword_1F036B998;
  if (!qword_1F036B998)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AddToCalendarResultData, &type metadata for AddToCalendarResultData);
    atomic_store(result, (unint64_t *)&qword_1F036B998);
  }
  return result;
}

unint64_t sub_1DC530CE0()
{
  unint64_t result;

  result = qword_1F036B9A0;
  if (!qword_1F036B9A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AddToCalendarResultData, &type metadata for AddToCalendarResultData);
    atomic_store(result, (unint64_t *)&qword_1F036B9A0);
  }
  return result;
}

uint64_t sub_1DC530D24@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AddToCalendarResultData.init(from:)(a1, a2);
}

uint64_t sub_1DC530D38(_QWORD *a1)
{
  return AddToCalendarResultData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AddToCalendarResultData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC530D98 + 4 * byte_1DC635E55[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC530DCC + 4 * byte_1DC635E50[v4]))();
}

uint64_t sub_1DC530DCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC530DD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC530DDCLL);
  return result;
}

uint64_t sub_1DC530DE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC530DF0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC530DF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC530DFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AddToCalendarResultData()
{
  return &type metadata for AddToCalendarResultData;
}

uint64_t storeEnumTagSinglePayload for AddToCalendarResultData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC530E58 + 4 * byte_1DC635E5A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC530E78 + 4 * byte_1DC635E5F[v4]))();
}

_BYTE *sub_1DC530E58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC530E78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC530E80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC530E88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC530E90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC530E98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AddToCalendarResultData.CodingKeys()
{
  return &type metadata for AddToCalendarResultData.CodingKeys;
}

unint64_t sub_1DC530EB8()
{
  unint64_t result;

  result = qword_1F036B9A8;
  if (!qword_1F036B9A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635FB4, &type metadata for AddToCalendarResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B9A8);
  }
  return result;
}

unint64_t sub_1DC530F00()
{
  unint64_t result;

  result = qword_1F036B9B0;
  if (!qword_1F036B9B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635F24, &type metadata for AddToCalendarResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B9B0);
  }
  return result;
}

unint64_t sub_1DC530F48()
{
  unint64_t result;

  result = qword_1F036B9B8;
  if (!qword_1F036B9B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC635F4C, &type metadata for AddToCalendarResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B9B8);
  }
  return result;
}

uint64_t sub_1DC530F8C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64CAB0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DC531010(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036B9C0, MEMORY[0x1E0CF8078]);
}

uint64_t static NonNewsHeadlineExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369000, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B9C0, a1);
}

uint64_t sub_1DC531050(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036B9D8, MEMORY[0x1E0CF8380]);
}

uint64_t static NonNewsHeadlineExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369008, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B9D8, a1);
}

uint64_t NonNewsHeadlineExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NonNewsHeadlineExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NonNewsHeadlineExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NonNewsHeadlineExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for NonNewsHeadlineExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036BA60);
}

uint64_t NonNewsHeadlineExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.timedData.modify())()
{
  type metadata accessor for NonNewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.nonNewsArticleData.modify())()
{
  type metadata accessor for NonNewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.feedPositionData.modify())()
{
  type metadata accessor for NonNewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.inGroupPositionData.modify())()
{
  type metadata accessor for NonNewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.feedData.modify())()
{
  type metadata accessor for NonNewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.groupData.modify())()
{
  type metadata accessor for NonNewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.activeWatchlistData.modify())()
{
  type metadata accessor for NonNewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NonNewsHeadlineExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v12, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v12, v19);
}

uint64_t NonNewsHeadlineExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NonNewsHeadlineExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NonNewsHeadlineExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for NonNewsHeadlineExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036BB08);
}

uint64_t NonNewsHeadlineExposureEvent.Model.nonNewsArticleData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent.Model(0) + 24));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NonNewsHeadlineExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NonNewsHeadlineExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsHeadlineExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent.Model(0) + 36);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NonNewsHeadlineExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t NonNewsHeadlineExposureEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

__n128 NonNewsHeadlineExposureEvent.Model.init(eventData:timedData:nonNewsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, int *a4@<X3>, int *a5@<X4>, char *a6@<X5>, __int128 *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 result;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  __int128 v34;
  char v35;

  v27 = a3[1];
  v28 = *a3;
  v12 = *((_QWORD *)a3 + 4);
  v13 = *((_QWORD *)a3 + 5);
  v14 = *a4;
  v15 = *a5;
  v16 = *((_BYTE *)a5 + 4);
  v17 = *a6;
  v29 = *((_QWORD *)a6 + 2);
  v30 = *((_QWORD *)a6 + 1);
  v33 = (__n128)a7[1];
  v34 = *a7;
  v31 = *((_QWORD *)a7 + 5);
  v32 = *((_QWORD *)a7 + 4);
  v35 = *a8;
  v18 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  v20 = a9 + v19[5];
  v21 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = a9 + v19[6];
  *(_OWORD *)v22 = v28;
  *(_OWORD *)(v22 + 16) = v27;
  *(_QWORD *)(v22 + 32) = v12;
  *(_QWORD *)(v22 + 40) = v13;
  *(_DWORD *)(a9 + v19[7]) = v14;
  v23 = a9 + v19[8];
  *(_DWORD *)v23 = v15;
  *(_BYTE *)(v23 + 4) = v16;
  v24 = a9 + v19[9];
  *(_BYTE *)v24 = v17;
  *(_QWORD *)(v24 + 8) = v30;
  *(_QWORD *)(v24 + 16) = v29;
  v25 = a9 + v19[10];
  result = v33;
  *(_OWORD *)v25 = v34;
  *(__n128 *)(v25 + 16) = v33;
  *(_QWORD *)(v25 + 32) = v32;
  *(_QWORD *)(v25 + 40) = v31;
  *(_BYTE *)(a9 + v19[11]) = v35;
  return result;
}

uint64_t sub_1DC531C9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC531CD4 + 4 * byte_1DC636030[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC531CD4()
{
  return 0x74614464656D6974;
}

unint64_t sub_1DC531CE8()
{
  return 0xD000000000000012;
}

unint64_t sub_1DC531D20()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC531D74()
{
  unsigned __int8 *v0;

  return sub_1DC531C9C(*v0);
}

uint64_t sub_1DC531D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC534B44(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC531DA0(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1DC531DAC()
{
  sub_1DC532154();
  return sub_1DC62B604();
}

uint64_t sub_1DC531DD4()
{
  sub_1DC532154();
  return sub_1DC62B610();
}

uint64_t NonNewsHeadlineExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  int v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v3 = v1;
  sub_1DC532790(0, &qword_1F036B9F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC532154();
  sub_1DC62B5F8();
  LOBYTE(v27) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
    LOBYTE(v27) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    v15 = *((_QWORD *)v11 + 4);
    v14 = *((_QWORD *)v11 + 5);
    v27 = v12;
    v28 = v13;
    *(_QWORD *)&v29 = v15;
    *((_QWORD *)&v29 + 1) = v14;
    v26 = 2;
    sub_1DC504038();
    sub_1DC62B4E4();
    LODWORD(v27) = *(_DWORD *)(v3 + v10[7]);
    v26 = 3;
    sub_1DC510CE4();
    sub_1DC62B4E4();
    v16 = (int *)(v3 + v10[8]);
    v17 = *v16;
    LOBYTE(v16) = *((_BYTE *)v16 + 4);
    LODWORD(v27) = v17;
    BYTE4(v27) = (_BYTE)v16;
    v26 = 4;
    sub_1DC510E64();
    sub_1DC62B490();
    v18 = (char *)(v3 + v10[9]);
    v19 = *v18;
    v21 = *((_QWORD *)v18 + 1);
    v20 = *((_QWORD *)v18 + 2);
    LOBYTE(v27) = v19;
    *((_QWORD *)&v27 + 1) = v21;
    *(_QWORD *)&v28 = v20;
    v26 = 5;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[10]);
    v23 = v22[1];
    v27 = *v22;
    v28 = v23;
    v29 = v22[2];
    v26 = 6;
    sub_1DC4C9004();
    sub_1DC62B490();
    LOBYTE(v27) = *(_BYTE *)(v3 + v10[11]);
    v26 = 7;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC532154()
{
  unint64_t result;

  result = qword_1F036B9F8;
  if (!qword_1F036B9F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6362B4, &type metadata for NonNewsHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036B9F8);
  }
  return result;
}

uint64_t NonNewsHeadlineExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  __int128 v21;
  __int128 v22;
  _OWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;

  v33[0] = a2;
  v3 = sub_1DC62ABC0();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62ABA8();
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC532790(0, &qword_1F036BA00, MEMORY[0x1E0DED048]);
  v38 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v33 - v11;
  v40 = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v40);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1DC532154();
  v37 = v12;
  v16 = v41;
  sub_1DC62B5E0();
  v33[1] = v6;
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v17 = v5;
  LOBYTE(v42) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v18 = (uint64_t)v14;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v14, v8, v6);
  LOBYTE(v42) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v19 = v35;
  sub_1DC62B454();
  v20 = (int *)v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v18 + *(int *)(v40 + 20), v17, v19);
  v45 = 2;
  sub_1DC503FF0();
  sub_1DC62B454();
  v21 = v43;
  v22 = v44;
  v23 = (_OWORD *)(v18 + v20[6]);
  *v23 = v42;
  v23[1] = v21;
  v23[2] = v22;
  v45 = 3;
  sub_1DC510CA0();
  sub_1DC62B454();
  v24 = (uint64_t)v39;
  *(_DWORD *)(v18 + v20[7]) = v42;
  v45 = 4;
  sub_1DC510E20();
  sub_1DC62B400();
  v25 = BYTE4(v42);
  v26 = v18 + v20[8];
  *(_DWORD *)v26 = v42;
  *(_BYTE *)(v26 + 4) = v25;
  v45 = 5;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v27 = *((_QWORD *)&v42 + 1);
  v28 = v43;
  v29 = v18 + v20[9];
  *(_BYTE *)v29 = v42;
  *(_QWORD *)(v29 + 8) = v27;
  *(_QWORD *)(v29 + 16) = v28;
  v45 = 6;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v30 = (_OWORD *)(v18 + v20[10]);
  v31 = v43;
  *v30 = v42;
  v30[1] = v31;
  v30[2] = v44;
  v45 = 7;
  sub_1DC4C9930();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v38);
  *(_BYTE *)(v18 + v20[11]) = v42;
  sub_1DC5327EC(v18, v33[0]);
  __swift_destroy_boxed_opaque_existential_1(v24);
  return sub_1DC532830(v18);
}

void sub_1DC532790(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC532154();
    v7 = a3(a1, &type metadata for NonNewsHeadlineExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5327EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC532830(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC53286C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsHeadlineExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC532880(_QWORD *a1)
{
  return NonNewsHeadlineExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC532894@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369000, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036B9C0, a1);
}

uint64_t sub_1DC5328B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369008, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036B9D8, a1);
}

uint64_t sub_1DC5328DC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v13, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v13, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsHeadlineExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for NonNewsHeadlineExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsHeadlineExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5338C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NonNewsHeadlineExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC533AE0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC533CF4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NonNewsHeadlineExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v15[3];
    v14[2] = v15[2];
    v14[3] = v17;
    v18 = v15[5];
    v14[4] = v15[4];
    v14[5] = v18;
    *(_DWORD *)((char *)a1 + v13) = *(_DWORD *)((char *)a2 + v13);
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = (char *)a1 + v20;
    v24 = (char *)a2 + v20;
    *v23 = *v24;
    v25 = *((_QWORD *)v24 + 2);
    *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
    *((_QWORD *)v23 + 2) = v25;
    v26 = a3[10];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)((char *)a2 + v26 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29)
    {
      *v27 = *v28;
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
      v30 = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      *((_QWORD *)v27 + 5) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v32 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v32;
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    }
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  }
  return a1;
}

uint64_t destroy for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 40) + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  v17 = v14[5];
  v13[4] = v14[4];
  v13[5] = v17;
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = a1 + v19;
  v23 = a2 + v19;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v24 = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = v24;
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    *(_BYTE *)v26 = *(_BYTE *)v27;
    *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
    *(_QWORD *)(v26 + 16) = v28;
    *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
    v29 = *(_QWORD *)(v27 + 40);
    *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
    *(_QWORD *)(v26 + 40) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v30 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v30;
    *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  }
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithCopy for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[2] = v13[2];
  v12[3] = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[4] = v13[4];
  v12[5] = v13[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v17;
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = (__int128 *)(a2 + v21);
  v24 = *(_QWORD *)(a1 + v21 + 16);
  v25 = *(_QWORD *)(a2 + v21 + 16);
  if (v24)
  {
    if (v25)
    {
      *(_BYTE *)v22 = *(_BYTE *)v23;
      *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
      *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
      *(_DWORD *)(v22 + 28) = *((_DWORD *)v23 + 7);
      *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
      *(_QWORD *)(v22 + 40) = *((_QWORD *)v23 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v22);
      v27 = v23[1];
      v26 = v23[2];
      *(_OWORD *)v22 = *v23;
      *(_OWORD *)(v22 + 16) = v27;
      *(_OWORD *)(v22 + 32) = v26;
    }
  }
  else if (v25)
  {
    *(_BYTE *)v22 = *(_BYTE *)v23;
    *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
    *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
    *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
    *(_DWORD *)(v22 + 28) = *((_DWORD *)v23 + 7);
    *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
    *(_QWORD *)(v22 + 40) = *((_QWORD *)v23 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *v23;
    v29 = v23[2];
    *(_OWORD *)(v22 + 16) = v23[1];
    *(_OWORD *)(v22 + 32) = v29;
    *(_OWORD *)v22 = v28;
  }
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v16 = a3[8];
  v17 = a3[9];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  v22 = a3[10];
  v23 = a3[11];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v24[2] = v25[2];
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = v24;
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  if (!*(_QWORD *)(a1 + v25 + 16))
    goto LABEL_5;
  v28 = *(_QWORD *)(v27 + 16);
  if (!v28)
  {
    sub_1DC4CDAF4(v26);
LABEL_5:
    v30 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v30;
    *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v26 = *(_BYTE *)v27;
  *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
  *(_QWORD *)(v26 + 16) = v28;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
  v29 = *(_QWORD *)(v27 + 40);
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  *(_QWORD *)(v26 + 40) = v29;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsHeadlineExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53477C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsHeadlineExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC534834(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5348DC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NonNewsHeadlineExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC5349EC + 4 * byte_1DC63603D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC534A20 + 4 * byte_1DC636038[v4]))();
}

uint64_t sub_1DC534A20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC534A28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC534A30);
  return result;
}

uint64_t sub_1DC534A3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC534A44);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC534A48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC534A50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NonNewsHeadlineExposureEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsHeadlineExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC534A70()
{
  unint64_t result;

  result = qword_1F036BB58;
  if (!qword_1F036BB58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63628C, &type metadata for NonNewsHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BB58);
  }
  return result;
}

unint64_t sub_1DC534AB8()
{
  unint64_t result;

  result = qword_1F036BB60;
  if (!qword_1F036BB60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6361FC, &type metadata for NonNewsHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BB60);
  }
  return result;
}

unint64_t sub_1DC534B00()
{
  unint64_t result;

  result = qword_1F036BB68;
  if (!qword_1F036BB68)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636224, &type metadata for NonNewsHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BB68);
  }
  return result;
}

uint64_t sub_1DC534B44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C660 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C680 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C6A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void LinkData.linkType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *LinkData.linkType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*LinkData.linkType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::LinkData __swiftcall LinkData.init(linkType:)(StocksAnalytics::LinkData linkType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)linkType.linkType;
  return linkType;
}

uint64_t sub_1DC534EB0()
{
  return 0x657079546B6E696CLL;
}

uint64_t sub_1DC534EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x657079546B6E696CLL && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC534F5C()
{
  sub_1DC5350B0();
  return sub_1DC62B604();
}

uint64_t sub_1DC534F84()
{
  sub_1DC5350B0();
  return sub_1DC62B610();
}

uint64_t LinkData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC535270(0, &qword_1F036BB70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5350B0();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5350F4();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5350B0()
{
  unint64_t result;

  result = qword_1F036BB78;
  if (!qword_1F036BB78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636478, &type metadata for LinkData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BB78);
  }
  return result;
}

unint64_t sub_1DC5350F4()
{
  unint64_t result;

  result = qword_1F036BB80;
  if (!qword_1F036BB80)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for LinkType, &type metadata for LinkType);
    atomic_store(result, (unint64_t *)&qword_1F036BB80);
  }
  return result;
}

uint64_t LinkData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC535270(0, &qword_1F036BB88, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5350B0();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5352CC();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC535270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5350B0();
    v7 = a3(a1, &type metadata for LinkData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5352CC()
{
  unint64_t result;

  result = qword_1F036BB90;
  if (!qword_1F036BB90)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for LinkType, &type metadata for LinkType);
    atomic_store(result, (unint64_t *)&qword_1F036BB90);
  }
  return result;
}

unint64_t sub_1DC535314()
{
  unint64_t result;

  result = qword_1F036BB98;
  if (!qword_1F036BB98)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for LinkData, &type metadata for LinkData);
    atomic_store(result, (unint64_t *)&qword_1F036BB98);
  }
  return result;
}

unint64_t sub_1DC53535C()
{
  unint64_t result;

  result = qword_1F036BBA0;
  if (!qword_1F036BBA0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for LinkData, &type metadata for LinkData);
    atomic_store(result, (unint64_t *)&qword_1F036BBA0);
  }
  return result;
}

uint64_t sub_1DC5353A0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return LinkData.init(from:)(a1, a2);
}

uint64_t sub_1DC5353B4(_QWORD *a1)
{
  return LinkData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for LinkData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC535414 + 4 * byte_1DC636309[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC535448 + 4 * byte_1DC636304[v4]))();
}

uint64_t sub_1DC535448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC535450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC535458);
  return result;
}

uint64_t sub_1DC535464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC53546CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC535470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC535478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LinkData()
{
  return &type metadata for LinkData;
}

uint64_t storeEnumTagSinglePayload for LinkData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5354D4 + 4 * byte_1DC63630E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5354F4 + 4 * byte_1DC636313[v4]))();
}

_BYTE *sub_1DC5354D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5354F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5354FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC535504(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC53550C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC535514(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LinkData.CodingKeys()
{
  return &type metadata for LinkData.CodingKeys;
}

unint64_t sub_1DC535534()
{
  unint64_t result;

  result = qword_1F036BBA8;
  if (!qword_1F036BBA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636450, &type metadata for LinkData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BBA8);
  }
  return result;
}

unint64_t sub_1DC53557C()
{
  unint64_t result;

  result = qword_1F036BBB0;
  if (!qword_1F036BBB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6363C0, &type metadata for LinkData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BBB0);
  }
  return result;
}

unint64_t sub_1DC5355C4()
{
  unint64_t result;

  result = qword_1F036BBB8;
  if (!qword_1F036BBB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6363E8, &type metadata for LinkData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BBB8);
  }
  return result;
}

StocksAnalytics::CacheState_optional __swiftcall CacheState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::CacheState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CacheState.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7629160;
  if (*v0 != 1)
    v1 = 1936943469;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC5356AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC546A98(*a1, *a2);
}

unint64_t sub_1DC5356BC()
{
  unint64_t result;

  result = qword_1F036BBC0;
  if (!qword_1F036BBC0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CacheState, &type metadata for CacheState);
    atomic_store(result, (unint64_t *)&qword_1F036BBC0);
  }
  return result;
}

uint64_t sub_1DC535700()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC535790()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC5357FC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::CacheState_optional sub_1DC535888(Swift::String *a1)
{
  return CacheState.init(rawValue:)(*a1);
}

void sub_1DC535894(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE300000000000000;
  v5 = 7629160;
  if (v2 != 1)
  {
    v5 = 1936943469;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC5358E4()
{
  sub_1DC535A58();
  return sub_1DC62B13C();
}

uint64_t sub_1DC535940()
{
  sub_1DC535A58();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for CacheState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC5359D8 + 4 * byte_1DC6364CD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC535A0C + 4 * byte_1DC6364C8[v4]))();
}

uint64_t sub_1DC535A0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC535A14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC535A1CLL);
  return result;
}

uint64_t sub_1DC535A28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC535A30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC535A34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC535A3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CacheState()
{
  return &type metadata for CacheState;
}

unint64_t sub_1DC535A58()
{
  unint64_t result;

  result = qword_1EDB0ECC0;
  if (!qword_1EDB0ECC0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CacheState, &type metadata for CacheState);
    atomic_store(result, (unint64_t *)&qword_1EDB0ECC0);
  }
  return result;
}

_BYTE *PaidSubscriptionData.init(paidSubscriptionStatus:trialSubscriptionChannelIDs:paidSubscriptionChannelIDs:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_BYTE *)a4 = *result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

void PaidSubscriptionData.paidSubscriptionStatus.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PaidSubscriptionData.paidSubscriptionStatus.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PaidSubscriptionData.paidSubscriptionStatus.modify())()
{
  return nullsub_1;
}

uint64_t PaidSubscriptionData.trialSubscriptionChannelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PaidSubscriptionData.trialSubscriptionChannelIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PaidSubscriptionData.trialSubscriptionChannelIDs.modify())()
{
  return nullsub_1;
}

uint64_t PaidSubscriptionData.paidSubscriptionChannelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PaidSubscriptionData.paidSubscriptionChannelIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PaidSubscriptionData.paidSubscriptionChannelIDs.modify())()
{
  return nullsub_1;
}

unint64_t sub_1DC535B54(char a1)
{
  unint64_t result;

  result = 0xD000000000000016;
  if (a1)
  {
    if (a1 == 1)
      return 0xD00000000000001BLL;
    else
      return 0xD00000000000001ALL;
  }
  return result;
}

unint64_t sub_1DC535BB4()
{
  char *v0;

  return sub_1DC535B54(*v0);
}

uint64_t sub_1DC535BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5364E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC535BE0()
{
  sub_1DC535DE4();
  return sub_1DC62B604();
}

uint64_t sub_1DC535C08()
{
  sub_1DC535DE4();
  return sub_1DC62B610();
}

uint64_t PaidSubscriptionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  sub_1DC5360AC(0, &qword_1EDB11A90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v14 = *((_QWORD *)v1 + 2);
  v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC535DE4();
  sub_1DC62B5F8();
  LOBYTE(v16) = v9;
  v17 = 0;
  sub_1DC535E28();
  sub_1DC62B4E4();
  if (!v2)
  {
    v11 = v14;
    v16 = v15;
    v17 = 1;
    sub_1DC4B72F4();
    sub_1DC4B7298(&qword_1EDB11888, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1DC62B490();
    v16 = v11;
    v17 = 2;
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC535DE4()
{
  unint64_t result;

  result = qword_1EDB104A8;
  if (!qword_1EDB104A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636768, &type metadata for PaidSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB104A8);
  }
  return result;
}

unint64_t sub_1DC535E28()
{
  unint64_t result;

  result = qword_1EDB10A30;
  if (!qword_1EDB10A30)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriptionStatus, &type metadata for PaidSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB10A30);
  }
  return result;
}

uint64_t PaidSubscriptionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;

  sub_1DC5360AC(0, &qword_1F036BBC8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC535DE4();
  sub_1DC62B5E0();
  if (!v2)
  {
    v17 = 0;
    sub_1DC536108();
    sub_1DC62B454();
    v10 = v15;
    sub_1DC4B72F4();
    v17 = 1;
    v14 = sub_1DC4B7298(&qword_1EDB11898, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1DC62B400();
    v16 = v10;
    v12 = v15;
    v17 = 2;
    swift_bridgeObjectRetain();
    sub_1DC62B400();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v13 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v16;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC5360AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC535DE4();
    v7 = a3(a1, &type metadata for PaidSubscriptionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC536108()
{
  unint64_t result;

  result = qword_1F036BBD0;
  if (!qword_1F036BBD0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriptionStatus, &type metadata for PaidSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1F036BBD0);
  }
  return result;
}

uint64_t sub_1DC53614C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PaidSubscriptionData.init(from:)(a1, a2);
}

uint64_t sub_1DC536160(_QWORD *a1)
{
  return PaidSubscriptionData.encode(to:)(a1);
}

uint64_t destroy for PaidSubscriptionData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15StocksAnalytics20PaidSubscriptionDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaidSubscriptionData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PaidSubscriptionData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PaidSubscriptionData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaidSubscriptionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriptionData()
{
  return &type metadata for PaidSubscriptionData;
}

uint64_t storeEnumTagSinglePayload for PaidSubscriptionData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC536390 + 4 * byte_1DC6365E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC5363C4 + 4 * byte_1DC6365E0[v4]))();
}

uint64_t sub_1DC5363C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5363CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5363D4);
  return result;
}

uint64_t sub_1DC5363E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5363E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5363EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5363F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriptionData.CodingKeys()
{
  return &type metadata for PaidSubscriptionData.CodingKeys;
}

unint64_t sub_1DC536414()
{
  unint64_t result;

  result = qword_1F036BBD8;
  if (!qword_1F036BBD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636740, &type metadata for PaidSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BBD8);
  }
  return result;
}

unint64_t sub_1DC53645C()
{
  unint64_t result;

  result = qword_1EDB0E310;
  if (!qword_1EDB0E310)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6366B0, &type metadata for PaidSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E310);
  }
  return result;
}

unint64_t sub_1DC5364A4()
{
  unint64_t result;

  result = qword_1EDB104B0;
  if (!qword_1EDB104B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6366D8, &type metadata for PaidSubscriptionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB104B0);
  }
  return result;
}

uint64_t sub_1DC5364E8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64CAD0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DC64CAF0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DC64CB10)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DC536628(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036BBE0, MEMORY[0x1E0CF8078]);
}

uint64_t static WebSubscriptionAuthenticationEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369010, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036BBE0, a1);
}

uint64_t sub_1DC536668(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036BBF8, MEMORY[0x1E0CF8380]);
}

uint64_t static WebSubscriptionAuthenticationEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369018, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036BBF8, a1);
}

uint64_t WebSubscriptionAuthenticationEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t WebSubscriptionAuthenticationEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WebSubscriptionAuthenticationEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WebSubscriptionAuthenticationEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036BCA8);
}

uint64_t WebSubscriptionAuthenticationEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.newsArticleData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.feedData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.channelData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.viewData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.groupData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.purchaseSessionData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.paywallData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC536E40()
{
  unint64_t result;

  result = qword_1F036BC18;
  if (!qword_1F036BC18)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ResultData, &type metadata for ResultData);
    atomic_store(result, (unint64_t *)&qword_1F036BC18);
  }
  return result;
}

unint64_t sub_1DC536E84()
{
  unint64_t result;

  result = qword_1F036BC20;
  if (!qword_1F036BC20)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ResultData, &type metadata for ResultData);
    atomic_store(result, (unint64_t *)&qword_1F036BC20);
  }
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.resultData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.resultData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.storeKitErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.storeKitErrorData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.storeKitErrorData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.adReferralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.adReferralData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.adReferralData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC5371B0()
{
  unint64_t result;

  result = qword_1EDB0EE48;
  if (!qword_1EDB0EE48)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CampaignData, &type metadata for CampaignData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE48);
  }
  return result;
}

unint64_t sub_1DC5371F4()
{
  unint64_t result;

  result = qword_1EDB0EE40;
  if (!qword_1EDB0EE40)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CampaignData, &type metadata for CampaignData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE40);
  }
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.campaignData.modify())()
{
  type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  v5 = a1 + v4[5];
  v6 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = a1 + v4[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v2, v9);
  v10 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v6, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v6, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v6, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v6, v27);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 20);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_1DC4D7808(v4, v5);
}

uint64_t type metadata accessor for WebSubscriptionAuthenticationEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036BD60);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.purchaseSessionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 40));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.paywallData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.Model.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 48);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.storeKitErrorData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.Model.adReferralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1DC517D30(v4, v5);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC537928(v4, v5);
}

uint64_t sub_1DC537928(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 WebSubscriptionAuthenticationEvent.Model.init(eventData:newsArticleData:feedData:channelData:viewData:groupData:purchaseSessionData:paywallData:resultData:storeKitErrorData:adReferralData:campaignData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, uint64_t *a5@<X4>, __int128 *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t *a12, __int128 *a13)
{
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __n128 result;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  __int128 v60;

  v36 = a2[1];
  v37 = *a2;
  v35 = a2[2];
  v15 = *((_QWORD *)a2 + 6);
  v16 = *((_QWORD *)a2 + 7);
  v17 = *((_DWORD *)a2 + 16);
  v18 = *a3;
  v19 = *((_QWORD *)a3 + 1);
  v20 = *((_QWORD *)a3 + 2);
  v40 = *a4;
  v38 = *((_QWORD *)a4 + 3);
  v39 = *((_QWORD *)a4 + 2);
  v21 = *((_BYTE *)a4 + 32);
  v22 = *((_BYTE *)a4 + 33);
  v42 = a5[1];
  v43 = *a5;
  v41 = *((_WORD *)a5 + 8);
  v46 = a6[1];
  v47 = *a6;
  v44 = *((_QWORD *)a6 + 5);
  v45 = *((_QWORD *)a6 + 4);
  v48 = a7[1];
  v49 = *a7;
  v50 = *a8;
  v53 = *a10;
  v52 = *((_QWORD *)a10 + 1);
  v51 = *((_QWORD *)a10 + 2);
  v54 = *a11;
  v55 = a12[1];
  v56 = *a12;
  v59 = (__n128)a13[1];
  v60 = *a13;
  v57 = *((_QWORD *)a13 + 5);
  v58 = *((_QWORD *)a13 + 4);
  v23 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a9, a1, v23);
  v24 = (int *)type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  v25 = a9 + v24[5];
  *(_OWORD *)v25 = v37;
  *(_OWORD *)(v25 + 16) = v36;
  *(_OWORD *)(v25 + 32) = v35;
  *(_QWORD *)(v25 + 48) = v15;
  *(_QWORD *)(v25 + 56) = v16;
  *(_DWORD *)(v25 + 64) = v17;
  v26 = a9 + v24[6];
  *(_BYTE *)v26 = v18;
  *(_QWORD *)(v26 + 8) = v19;
  *(_QWORD *)(v26 + 16) = v20;
  v27 = a9 + v24[7];
  *(_OWORD *)v27 = v40;
  *(_QWORD *)(v27 + 16) = v39;
  *(_QWORD *)(v27 + 24) = v38;
  *(_BYTE *)(v27 + 32) = v21;
  *(_BYTE *)(v27 + 33) = v22;
  v28 = a9 + v24[8];
  *(_QWORD *)v28 = v43;
  *(_QWORD *)(v28 + 8) = v42;
  *(_WORD *)(v28 + 16) = v41;
  v29 = a9 + v24[9];
  *(_OWORD *)v29 = v47;
  *(_OWORD *)(v29 + 16) = v46;
  *(_QWORD *)(v29 + 32) = v45;
  *(_QWORD *)(v29 + 40) = v44;
  v30 = (_QWORD *)(a9 + v24[10]);
  *v30 = v49;
  v30[1] = v48;
  *(_BYTE *)(a9 + v24[11]) = v50;
  v31 = a9 + v24[12];
  *(_BYTE *)v31 = v53;
  *(_QWORD *)(v31 + 8) = v52;
  *(_QWORD *)(v31 + 16) = v51;
  *(_BYTE *)(a9 + v24[13]) = v54;
  v32 = (_QWORD *)(a9 + v24[14]);
  *v32 = v56;
  v32[1] = v55;
  v33 = a9 + v24[15];
  result = v59;
  *(_OWORD *)v33 = v60;
  *(__n128 *)(v33 + 16) = v59;
  *(_QWORD *)(v33 + 32) = v58;
  *(_QWORD *)(v33 + 40) = v57;
  return result;
}

uint64_t sub_1DC537BA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC537BDC + 4 * byte_1DC6367C0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC537BDC()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC537C00()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC537C38()
{
  return 0x74614470756F7267;
}

unint64_t sub_1DC537C4C()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC537C8C()
{
  return 0x6144746C75736572;
}

unint64_t sub_1DC537CA8()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC537CC4()
{
  return 0x7272656665526461;
}

uint64_t sub_1DC537CE8()
{
  return 0x6E676961706D6163;
}

uint64_t sub_1DC537D08()
{
  unsigned __int8 *v0;

  return sub_1DC537BA4(*v0);
}

uint64_t sub_1DC537D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC53C24C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC537D34()
{
  sub_1DC538208();
  return sub_1DC62B604();
}

uint64_t sub_1DC537D5C()
{
  sub_1DC538208();
  return sub_1DC62B610();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  int v12;
  __int128 v13;
  __int128 v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v36;
  char v37;
  _BYTE v38[32];
  __int128 v39;
  __int128 v40;
  int v41;

  v3 = v1;
  sub_1DC538AF0(0, &qword_1F036BC38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC538208();
  sub_1DC62B5F8();
  v38[0] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
    v11 = v3 + v10[5];
    v12 = *(_DWORD *)(v11 + 64);
    v13 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v38 = *(_OWORD *)v11;
    *(_OWORD *)&v38[16] = v13;
    v14 = *(_OWORD *)(v11 + 48);
    v39 = *(_OWORD *)(v11 + 32);
    v40 = v14;
    v41 = v12;
    v37 = 1;
    sub_1DC4C18E8();
    sub_1DC62B490();
    v15 = (char *)(v3 + v10[6]);
    v16 = *v15;
    v18 = *((_QWORD *)v15 + 1);
    v17 = *((_QWORD *)v15 + 2);
    v38[0] = v16;
    *(_QWORD *)&v38[8] = v18;
    *(_QWORD *)&v38[16] = v17;
    v37 = 2;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v19 = (__int128 *)(v3 + v10[7]);
    v20 = *v19;
    v21 = *((_QWORD *)v19 + 2);
    v22 = *((_QWORD *)v19 + 3);
    v23 = *((_BYTE *)v19 + 32);
    LOBYTE(v19) = *((_BYTE *)v19 + 33);
    *(_OWORD *)v38 = v20;
    *(_QWORD *)&v38[16] = v21;
    *(_QWORD *)&v38[24] = v22;
    LOBYTE(v39) = v23;
    BYTE1(v39) = (_BYTE)v19;
    v37 = 3;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v24 = (uint64_t *)(v3 + v10[8]);
    v25 = *v24;
    v26 = v24[1];
    LOWORD(v24) = *((_WORD *)v24 + 8);
    *(_QWORD *)v38 = v25;
    *(_QWORD *)&v38[8] = v26;
    *(_WORD *)&v38[16] = (_WORD)v24;
    v37 = 4;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v27 = (_OWORD *)(v3 + v10[9]);
    v28 = v27[1];
    *(_OWORD *)v38 = *v27;
    *(_OWORD *)&v38[16] = v28;
    v39 = v27[2];
    v37 = 5;
    sub_1DC4C9004();
    sub_1DC62B490();
    v29 = (uint64_t *)(v3 + v10[10]);
    v31 = *v29;
    v30 = v29[1];
    *(_QWORD *)v38 = v31;
    *(_QWORD *)&v38[8] = v30;
    v37 = 6;
    sub_1DC4FC754();
    sub_1DC62B4E4();
    v38[0] = *(_BYTE *)(v3 + v10[11]);
    v37 = 7;
    sub_1DC4FCA54();
    sub_1DC62B4E4();
    v32 = v3 + v10[12];
    v38[0] = *(_BYTE *)v32;
    *(_OWORD *)&v38[8] = *(_OWORD *)(v32 + 8);
    v37 = 8;
    sub_1DC536E84();
    sub_1DC62B4E4();
    v38[0] = *(_BYTE *)(v3 + v10[13]);
    v37 = 9;
    sub_1DC51D5E0();
    sub_1DC62B490();
    *(_OWORD *)v38 = *(_OWORD *)(v3 + v10[14]);
    v37 = 10;
    sub_1DC52234C();
    sub_1DC62B490();
    v33 = (_OWORD *)(v3 + v10[15]);
    v34 = v33[1];
    *(_OWORD *)v38 = *v33;
    *(_OWORD *)&v38[16] = v34;
    v39 = v33[2];
    v37 = 11;
    sub_1DC5371F4();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

